v8-version,9,4,146,24,-node.14,0
v8-platform,windows,unknown
shared-library,D:\\Personal\\Coder\\BackEnd\\npm\\node.exe,0x7ff7c3e60000,0x7ff7c79b3000,0
shared-library,C:\\Windows\\SYSTEM32\\ntdll.dll,0x7ff86e9e0000,0x7ff86ebcd000,0
shared-library,C:\\Windows\\System32\\KERNEL32.DLL,0x7ff86ce80000,0x7ff86cf33000,0
shared-library,C:\\Windows\\System32\\KERNELBASE.dll,0x7ff86b1d0000,0x7ff86b465000,0
shared-library,C:\\Windows\\System32\\WS2_32.dll,0x7ff86ce10000,0x7ff86ce7d000,0
shared-library,C:\\Windows\\System32\\RPCRT4.dll,0x7ff86cf50000,0x7ff86d06f000,0
shared-library,C:\\Windows\\System32\\PSAPI.DLL,0x7ff86e9a0000,0x7ff86e9a8000,0
shared-library,C:\\Windows\\System32\\ADVAPI32.dll,0x7ff86bc10000,0x7ff86bcb3000,0
shared-library,C:\\Windows\\System32\\msvcrt.dll,0x7ff86c010000,0x7ff86c0ae000,0
shared-library,C:\\Windows\\System32\\sechost.dll,0x7ff86cd70000,0x7ff86ce0e000,0
shared-library,C:\\Windows\\System32\\USER32.dll,0x7ff86bcc0000,0x7ff86be57000,0
shared-library,C:\\Windows\\System32\\win32u.dll,0x7ff86b1b0000,0x7ff86b1d0000,0
shared-library,C:\\Windows\\System32\\GDI32.dll,0x7ff86e970000,0x7ff86e999000,0
shared-library,C:\\Windows\\System32\\gdi32full.dll,0x7ff86ab50000,0x7ff86acec000,0
shared-library,C:\\Windows\\System32\\msvcp_win.dll,0x7ff86b090000,0x7ff86b130000,0
shared-library,C:\\Windows\\System32\\ucrtbase.dll,0x7ff86ad40000,0x7ff86ae3a000,0
shared-library,C:\\Windows\\System32\\CRYPT32.dll,0x7ff86aea0000,0x7ff86b083000,0
shared-library,C:\\Windows\\System32\\MSASN1.dll,0x7ff86aa80000,0x7ff86aa92000,0
shared-library,C:\\Windows\\System32\\bcrypt.dll,0x7ff86ad10000,0x7ff86ad36000,0
shared-library,C:\\Windows\\SYSTEM32\\dbghelp.dll,0x7ff868a50000,0x7ff868c3d000,0
shared-library,C:\\Windows\\SYSTEM32\\IPHLPAPI.DLL,0x7ff869ed0000,0x7ff869f0d000,0
shared-library,C:\\Windows\\SYSTEM32\\USERENV.dll,0x7ff86a8d0000,0x7ff86a8f9000,0
shared-library,C:\\Windows\\System32\\profapi.dll,0x7ff86aa50000,0x7ff86aa74000,0
shared-library,C:\\Windows\\SYSTEM32\\WINMM.dll,0x7ff868510000,0x7ff868534000,0
shared-library,C:\\Windows\\SYSTEM32\\WINMMBASE.dll,0x7ff8684e0000,0x7ff86850d000,0
shared-library,C:\\Windows\\System32\\cfgmgr32.dll,0x7ff86b470000,0x7ff86b4ba000,0
shared-library,C:\\Windows\\SYSTEM32\\CRYPTBASE.DLL,0x7ff86a380000,0x7ff86a38c000,0
shared-library,C:\\Windows\\System32\\bcryptPrimitives.dll,0x7ff86b130000,0x7ff86b1af000,0
shared-library,C:\\Windows\\System32\\IMM32.DLL,0x7ff86d1c0000,0x7ff86d1ee000,0
shared-library,C:\\Program Files (x86)\\Panda Security\\WAC\\PSNMVHookMS64.dll,0x7ff851d10000,0x7ff851d43000,0
shared-library,C:\\Windows\\System32\\SHLWAPI.dll,0x7ff86e910000,0x7ff86e962000,0
shared-library,C:\\Windows\\System32\\combase.dll,0x7ff86c890000,0x7ff86cbbd000,0
shared-library,C:\\Program Files (x86)\\Panda Security\\WAC\\PSNMVTools64.dll,0x7ff851d50000,0x7ff851dec000,0
shared-library,C:\\Windows\\System32\\ole32.dll,0x7ff86c720000,0x7ff86c876000,0
shared-library,C:\\Windows\\SYSTEM32\\ntmarta.dll,0x7ff869960000,0x7ff869991000,0
shared-library,C:\\Program Files (x86)\\Panda Security\\WAC\\PSNMVComm64.dll,0x7ff851a30000,0x7ff851aa0000,0
shared-library,C:\\Program Files (x86)\\Panda Security\\WAC\\PSNMVHookPlg64.dll,0x7ff851b50000,0x7ff851b68000,0
shared-library,C:\\Windows\\System32\\powrprof.dll,0x7ff86a9d0000,0x7ff86aa2d000,0
shared-library,C:\\Windows\\system32\\uxtheme.dll,0x7ff8688e0000,0x7ff86897c000,0
shared-library,C:\\Windows\\system32\\mswsock.dll,0x7ff86a1b0000,0x7ff86a217000,0
shared-library,C:\\Windows\\System32\\kernel.appcore.dll,0x7ff86aa30000,0x7ff86aa41000,0
shared-library-end
tick,0x7ff86ea7fa74,2002491,0,0x0,6
profiler,begin,1000
new,CodeRange,0x236292f0000,0
new,MemoryChunk,0x33710b40000,262144
tick,0x7ff7c45609d0,2004161,0,0x0,6
new,MemoryChunk,0x344d7900000,262144
new,MemoryChunk,0x1a92b040000,262144
new,MemoryChunk,0x2f77080000,262144
new,MemoryChunk,0x1e9c5cc0000,262144
heap-capacity,1031072
heap-available,2198652736
new,MemoryChunk,0x17b63280000,262144
new,MemoryChunk,0x1230fc0000,262144
new,MemoryChunk,0x27f8fec0000,262144
tick,0x7ff7c456603f,2006116,0,0x0,6
new,MemoryChunk,0x1145bf80000,262144
new,MemoryChunk,0x325d2080000,262144
tick,0x7ff7c456603c,2008191,0,0x0,6
new,MemoryChunk,0x2e444540000,262144
new,MemoryChunk,0x2ac1c880000,262144
new,MemoryChunk,0x23629300000,262144
tick,0x7ff7c4565c15,2010210,0,0x0,6
tick,0x7ff7c455b9e4,2012032,0,0x0,6
new,MemoryChunk,0x1aba9c40000,262144
tick,0x7ff7c4565217,2014063,0,0x0,6
tick,0x7ff7c45609c5,2016169,0,0x0,6
code-creation,Builtin,2,2016610,0x7ff7c49ca994,1356,RecordWriteEmitRememberedSetSaveFP
code-creation,Builtin,2,2016652,0x7ff7c49caef4,448,RecordWriteOmitRememberedSetSaveFP
code-creation,Builtin,2,2016679,0x7ff7c49cb0d4,636,RecordWriteEmitRememberedSetIgnoreFP
code-creation,Builtin,2,2016701,0x7ff7c49cb354,204,RecordWriteOmitRememberedSetIgnoreFP
code-creation,Builtin,2,2016722,0x7ff7c49cb434,364,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,2016744,0x7ff7c49cb5b4,128,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,2016764,0x7ff7c49cb654,60,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,2016783,0x7ff7c49cb694,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,2016803,0x7ff7c49cb814,416,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,2016824,0x7ff7c49cb9d4,444,CallFunction_ReceiverIsAny
code-creation,Builtin,2,2016843,0x7ff7c49cbb94,104,CallBoundFunction
code-creation,Builtin,2,2016864,0x7ff7c49cbc14,120,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,2016888,0x7ff7c49cbc94,120,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,2016909,0x7ff7c49cbd14,120,Call_ReceiverIsAny
code-creation,Builtin,2,2016928,0x7ff7c49cbd94,992,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,2016949,0x7ff7c49cc194,992,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,2016970,0x7ff7c49cc594,1080,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,2016993,0x7ff7c49cc9d4,1076,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,2017014,0x7ff7c49cce14,1080,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,2017037,0x7ff7c49cd254,1076,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,2017058,0x7ff7c49cd694,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,2017080,0x7ff7c49cda54,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,2017103,0x7ff7c49cde14,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,2017123,0x7ff7c49ce1d4,736,CallProxy
code-creation,Builtin,2,2017141,0x7ff7c49ce4d4,148,CallVarargs
code-creation,Builtin,2,2017159,0x7ff7c49ce574,944,CallWithSpread
code-creation,Builtin,2,2017178,0x7ff7c49ce934,1956,CallWithSpread_Baseline
code-creation,Builtin,2,2017198,0x7ff7c49cf0f4,1928,CallWithSpread_WithFeedback
code-creation,Builtin,2,2017220,0x7ff7c49cf894,864,CallWithArrayLike
code-creation,Builtin,2,2017241,0x7ff7c49cfc14,1820,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,2017260,0x7ff7c49d0334,156,CallForwardVarargs
code-creation,Builtin,2,2017280,0x7ff7c49d03d4,156,CallFunctionForwardVarargs
code-creation,Builtin,2,2017301,0x7ff7c49d0474,132,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,2017321,0x7ff7c49d0514,228,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,2017342,0x7ff7c49d0614,316,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,2017366,0x7ff7c49d0754,28,ConstructFunction
code-creation,Builtin,2,2017386,0x7ff7c49d0774,104,ConstructBoundFunction
code-creation,Builtin,2,2017407,0x7ff7c49d07f4,28,ConstructedNonConstructable
code-creation,Builtin,2,2017427,0x7ff7c49d0814,100,Construct
code-creation,Builtin,2,2017445,0x7ff7c49d0894,148,ConstructVarargs
code-creation,Builtin,2,2017466,0x7ff7c49d0934,968,ConstructWithSpread
code-creation,Builtin,2,2017485,0x7ff7c49d0d14,1748,ConstructWithSpread_Baseline
code-creation,Builtin,2,2017504,0x7ff7c49d13f4,1764,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,2017526,0x7ff7c49d1af4,924,ConstructWithArrayLike
code-creation,Builtin,2,2017545,0x7ff7c49d1e94,1652,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,2017566,0x7ff7c49d2514,196,ConstructForwardVarargs
code-creation,Builtin,2,2017652,0x7ff7c49d25f4,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,2017681,0x7ff7c49d26d4,804,Construct_Baseline
code-creation,Builtin,2,2017700,0x7ff7c49d2a14,820,Construct_WithFeedback
code-creation,Builtin,2,2017719,0x7ff7c49d2d54,476,JSConstructStubGeneric
code-creation,Builtin,2,2017815,0x7ff7c49d2f34,376,JSBuiltinsConstructStub
code-creation,Builtin,2,2017836,0x7ff7c49d30b4,676,FastNewObject
code-creation,Builtin,2,2017855,0x7ff7c49d3374,292,FastNewClosure
code-creation,Builtin,2,2017873,0x7ff7c49d34b4,720,ConstructProxy
code-creation,Builtin,2,2017892,0x7ff7c49d3794,360,JSEntry
code-creation,Builtin,2,2017910,0x7ff7c49d3914,360,JSConstructEntry
code-creation,Builtin,2,2017931,0x7ff7c49d3a94,360,JSRunMicrotasksEntry
code-creation,Builtin,2,2017951,0x7ff7c49d3c14,96,JSEntryTrampoline
code-creation,Builtin,2,2017971,0x7ff7c49d3c94,96,JSConstructEntryTrampoline
code-creation,Builtin,2,2017991,0x7ff7c49d3d14,280,ResumeGeneratorTrampoline
code-creation,Builtin,2,2018011,0x7ff7c49d3e34,1116,StringCodePointAt
code-creation,Builtin,2,2018030,0x7ff7c49d4294,1552,StringFromCodePointAt
code-creation,Builtin,2,2018050,0x7ff7c49d48b4,544,StringEqual
code-creation,Builtin,2,2018075,0x7ff7c49d4af4,276,StringGreaterThan
code-creation,Builtin,2,2018094,0x7ff7c49d4c14,276,StringGreaterThanOrEqual
code-creation,Builtin,2,2018114,0x7ff7c49d4d34,276,StringLessThan
code-creation,Builtin,2,2018132,0x7ff7c49d4e54,276,StringLessThanOrEqual
code-creation,Builtin,2,2018151,0x7ff7c49d4f74,2492,StringSubstring
code-creation,Builtin,2,2018169,0x7ff7c49d5934,80,OrderedHashTableHealIndex
code-creation,Builtin,2,2018189,0x7ff7c49d5994,1168,InterpreterEntryTrampoline
code-creation,Builtin,2,2018209,0x7ff7c49d5e34,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,2018229,0x7ff7c49d5e94,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,2018251,0x7ff7c49d5ef4,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,2018273,0x7ff7c49d5f54,80,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,2018293,0x7ff7c49d5fb4,80,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,2018316,0x7ff7c49d6014,84,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,2018340,0x7ff7c49d6074,84,InterpreterEnterAtBytecode
code-creation,Builtin,2,2018360,0x7ff7c49d60d4,220,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,2018382,0x7ff7c49d61b4,52,InterpreterOnStackReplacement
code-creation,Builtin,2,2018403,0x7ff7c49d61f4,592,BaselineOutOfLinePrologue
code-creation,Builtin,2,2018422,0x7ff7c49d6454,56,BaselineOnStackReplacement
code-creation,Builtin,2,2018445,0x7ff7c49d6494,84,BaselineLeaveFrame
code-creation,Builtin,2,2018465,0x7ff7c49d64f4,216,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,2018486,0x7ff7c49d65d4,224,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,2018508,0x7ff7c49d66d4,192,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,2018530,0x7ff7c49d67b4,1004,CompileLazy
code-creation,Builtin,2,2018550,0x7ff7c49d6bb4,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,2018575,0x7ff7c49d6c14,252,InstantiateAsmJs
code-creation,Builtin,2,2018595,0x7ff7c49d6d14,32,NotifyDeoptimized
code-creation,Builtin,2,2018615,0x7ff7c49d6d54,796,DeoptimizationEntry_Eager
code-creation,Builtin,2,2018635,0x7ff7c49d7074,796,DeoptimizationEntry_Soft
code-creation,Builtin,2,2018654,0x7ff7c49d7394,796,DeoptimizationEntry_Bailout
code-creation,Builtin,2,2018676,0x7ff7c49d76b4,796,DeoptimizationEntry_Lazy
code-creation,Builtin,2,2018695,0x7ff7c49d79d4,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,2018715,0x7ff7c49d7a14,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,2018735,0x7ff7c49d7a54,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,2018754,0x7ff7c49d7a94,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,2018773,0x7ff7c49d7af4,288,CallApiCallback
code-creation,Builtin,2,2018791,0x7ff7c49d7c34,268,CallApiGetter
code-creation,Builtin,2,2018809,0x7ff7c49d7d54,12,HandleApiCall
code-creation,Builtin,2,2018837,0x7ff7c49d7d74,12,HandleApiCallAsFunction
code-creation,Builtin,2,2018865,0x7ff7c49d7d94,12,HandleApiCallAsConstructor
code-creation,Builtin,2,2018886,0x7ff7c49d7db4,64,AllocateInYoungGeneration
code-creation,Builtin,2,2018913,0x7ff7c49d7e14,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,2018934,0x7ff7c49d7e54,64,AllocateInOldGeneration
code-creation,Builtin,2,2018954,0x7ff7c49d7eb4,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,2018976,0x7ff7c49d7ef4,420,CopyFastSmiOrObjectElements
code-creation,Builtin,2,2018997,0x7ff7c49d80b4,496,GrowFastDoubleElements
code-creation,Builtin,2,2019018,0x7ff7c49d82b4,400,GrowFastSmiOrObjectElements
code-creation,Builtin,2,2019038,0x7ff7c49d8454,388,DebugBreakTrampoline
code-creation,Builtin,2,2019057,0x7ff7c49d85f4,180,ToNumber
code-creation,Builtin,2,2019075,0x7ff7c49d86b4,292,ToNumber_Baseline
code-creation,Builtin,2,2019096,0x7ff7c49d87f4,360,ToNumeric_Baseline
code-creation,Builtin,2,2019116,0x7ff7c49d8974,104,PlainPrimitiveToNumber
code-creation,Builtin,2,2019136,0x7ff7c49d89f4,212,ToNumberConvertBigInt
code-creation,Builtin,2,2019156,0x7ff7c49d8ad4,132,Typeof
code-creation,Builtin,2,2019174,0x7ff7c49d8b74,104,BigIntToI64
code-creation,Builtin,2,2019193,0x7ff7c49d8bf4,4,BigIntToI32Pair
code-creation,Builtin,2,2019211,0x7ff7c49d8c14,232,I64ToBigInt
code-creation,Builtin,2,2019229,0x7ff7c49d8d14,4,I32PairToBigInt
code-creation,Builtin,2,2019250,0x7ff7c49d8d34,100,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,2019269,0x7ff7c49d8db4,4232,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,2019289,0x7ff7c49d9e54,15848,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,2019307,0x7ff7c49ddc54,280,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,2019327,0x7ff7c49ddd74,60,LoadIC_FunctionPrototype
code-creation,Builtin,2,2019347,0x7ff7c49dddb4,12,LoadIC_StringLength
code-creation,Builtin,2,2019367,0x7ff7c49dddd4,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,2019387,0x7ff7c49dddf4,3056,LoadIC_NoFeedback
code-creation,Builtin,2,2019410,0x7ff7c49de9f4,32,StoreGlobalIC_Slow
code-creation,Builtin,2,2019432,0x7ff7c49dea34,7332,StoreIC_NoFeedback
code-creation,Builtin,2,2019452,0x7ff7c49e06f4,180,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,2019474,0x7ff7c49e07b4,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,2019495,0x7ff7c49e0814,236,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,2019516,0x7ff7c49e0914,236,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,2019541,0x7ff7c49e0a14,236,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,2019563,0x7ff7c49e0b14,236,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,2019586,0x7ff7c49e0c14,14344,StoreFastElementIC_Standard
code-creation,Builtin,2,2019608,0x7ff7c49e4434,9616,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,2019630,0x7ff7c49e69d4,13364,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,2019652,0x7ff7c49e9e14,6088,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,2019679,0x7ff7c49eb5f4,8484,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,2019702,0x7ff7c49ed734,19368,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,2019725,0x7ff7c49f22f4,8484,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,2020384,0x7ff7c49f4434,11024,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,2020414,0x7ff7c49f6f54,792,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,2020433,0x7ff7c49f7274,164,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,2020453,0x7ff7c49f7334,72,HasIndexedInterceptorIC
code-creation,Builtin,2,2020472,0x7ff7c49f7394,96,DynamicCheckMapsTrampoline
code-creation,Builtin,2,2020492,0x7ff7c49f7414,224,DynamicCheckMaps
code-creation,Builtin,2,2020517,0x7ff7c49f7514,96,DynamicCheckMapsWithFeedbackVectorTrampoline
code-creation,Builtin,2,2020540,0x7ff7c49f7594,188,DynamicCheckMapsWithFeedbackVector
code-creation,Builtin,2,2020562,0x7ff7c49f7654,152,EnqueueMicrotask
code-creation,Builtin,2,2020645,0x7ff7c49f76f4,8,RunMicrotasksTrampoline
code-creation,Builtin,2,2020677,0x7ff7c49f7714,3476,RunMicrotasks
code-creation,Builtin,2,2020698,0x7ff7c49f84b4,2636,HasProperty
code-creation,Builtin,2,2020756,0x7ff7c49f8f14,1156,DeleteProperty
code-creation,Builtin,2,2020777,0x7ff7c49f93b4,1972,CopyDataProperties
code-creation,Builtin,2,2020792,0x7ff7c49f9b74,9184,SetDataProperties
code-creation,Builtin,2,2020808,0x7ff7c49fbf74,28,Abort
code-creation,Builtin,2,2020822,0x7ff7c49fbf94,28,AbortCSAAssert
code-creation,Builtin,2,2020837,0x7ff7c49fbfb4,12,EmptyFunction
code-creation,Builtin,2,2020852,0x7ff7c49fbfd4,12,Illegal
code-creation,Builtin,2,2020866,0x7ff7c49fbff4,12,StrictPoisonPillThrower
code-creation,Builtin,2,2020881,0x7ff7c49fc014,12,UnsupportedThrower
code-creation,Builtin,2,2020896,0x7ff7c49fc034,64,ReturnReceiver
code-creation,Builtin,2,2020911,0x7ff7c49fc094,28,ArrayConstructor
code-creation,Builtin,2,2020926,0x7ff7c49fc0b4,404,ArrayConstructorImpl
code-creation,Builtin,2,2020941,0x7ff7c49fc254,216,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,2020959,0x7ff7c49fc334,216,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,2020977,0x7ff7c49fc414,176,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,2020995,0x7ff7c49fc4d4,176,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,2021014,0x7ff7c49fc594,176,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,2021032,0x7ff7c49fc654,176,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,2021050,0x7ff7c49fc714,188,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,2021068,0x7ff7c49fc7d4,188,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,2021086,0x7ff7c49fc894,512,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,2021106,0x7ff7c49fcab4,480,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,2021124,0x7ff7c49fccb4,436,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,2021142,0x7ff7c49fce74,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,2021161,0x7ff7c49fd014,436,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,2021180,0x7ff7c49fd1d4,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,2021198,0x7ff7c49fd374,448,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,2021217,0x7ff7c49fd554,412,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,2021235,0x7ff7c49fd6f4,64,ArrayNArgumentsConstructor
code-creation,Builtin,2,2021251,0x7ff7c49fd754,12,ArrayConcat
code-creation,Builtin,2,2021266,0x7ff7c49fd774,12,ArrayPrototypeFill
code-creation,Builtin,2,2021281,0x7ff7c49fd794,932,ArrayIncludesSmiOrObject
code-creation,Builtin,2,2021297,0x7ff7c49fdb54,140,ArrayIncludesPackedDoubles
code-creation,Builtin,2,2021313,0x7ff7c49fdbf4,208,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,2021328,0x7ff7c49fdcd4,548,ArrayIncludes
code-creation,Builtin,2,2021342,0x7ff7c49fdf14,856,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,2021358,0x7ff7c49fe274,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,2021373,0x7ff7c49fe2f4,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,2021389,0x7ff7c49fe374,552,ArrayIndexOf
code-creation,Builtin,2,2021405,0x7ff7c49fe5b4,12,ArrayPop
code-creation,Builtin,2,2021419,0x7ff7c49fe5d4,616,ArrayPrototypePop
code-creation,Builtin,2,2021434,0x7ff7c49fe854,12,ArrayPush
code-creation,Builtin,2,2021449,0x7ff7c49fe874,2424,ArrayPrototypePush
code-creation,Builtin,2,2021465,0x7ff7c49ff1f4,12,ArrayShift
code-creation,Builtin,2,2021479,0x7ff7c49ff214,12,ArrayUnshift
code-creation,Builtin,2,2021494,0x7ff7c49ff234,956,CloneFastJSArray
code-creation,Builtin,2,2021510,0x7ff7c49ff5f4,2196,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,2021532,0x7ff7c49ffe94,976,ExtractFastJSArray
code-creation,Builtin,2,2021553,0x7ff7c4a00274,260,ArrayPrototypeEntries
code-creation,Builtin,2,2021571,0x7ff7c4a00394,248,ArrayPrototypeKeys
code-creation,Builtin,2,2021586,0x7ff7c4a00494,260,ArrayPrototypeValues
code-creation,Builtin,2,2021601,0x7ff7c4a005b4,4428,ArrayIteratorPrototypeNext
code-creation,Builtin,2,2021618,0x7ff7c4a01714,4168,FlattenIntoArray
code-creation,Builtin,2,2021633,0x7ff7c4a02774,4172,FlatMapIntoArray
code-creation,Builtin,2,2021648,0x7ff7c4a037d4,372,ArrayPrototypeFlat
code-creation,Builtin,2,2021665,0x7ff7c4a03954,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,2021681,0x7ff7c4a03b14,12,ArrayBufferConstructor
code-creation,Builtin,2,2021793,0x7ff7c4a03b34,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,2021817,0x7ff7c4a03b54,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,2021836,0x7ff7c4a03b74,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,2021859,0x7ff7c4a03b94,804,AsyncFunctionEnter
code-creation,Builtin,2,2021878,0x7ff7c4a03ed4,132,AsyncFunctionReject
code-creation,Builtin,2,2021898,0x7ff7c4a03f74,128,AsyncFunctionResolve
code-creation,Builtin,2,2021919,0x7ff7c4a04014,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,2021941,0x7ff7c4a04034,2804,AsyncFunctionAwaitCaught
code-creation,Builtin,2,2021960,0x7ff7c4a04b34,2804,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,2021980,0x7ff7c4a05634,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,2022001,0x7ff7c4a056f4,164,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,2022021,0x7ff7c4a057b4,12,BigIntConstructor
code-creation,Builtin,2,2022039,0x7ff7c4a057d4,12,BigIntAsUintN
code-creation,Builtin,2,2022057,0x7ff7c4a057f4,12,BigIntAsIntN
code-creation,Builtin,2,2022077,0x7ff7c4a05814,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,2022097,0x7ff7c4a05834,12,BigIntPrototypeToString
code-creation,Builtin,2,2022117,0x7ff7c4a05854,12,BigIntPrototypeValueOf
code-creation,Builtin,2,2022142,0x7ff7c4a05874,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,2022163,0x7ff7c4a05894,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,2022186,0x7ff7c4a058b4,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,2022207,0x7ff7c4a058d4,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,2022228,0x7ff7c4a058f4,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,2022249,0x7ff7c4a05914,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,2022268,0x7ff7c4a05934,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,2022289,0x7ff7c4a05954,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,2022312,0x7ff7c4a05974,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,2022334,0x7ff7c4a05994,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,2022354,0x7ff7c4a059b4,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,2022375,0x7ff7c4a059d4,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,2022397,0x7ff7c4a059f4,12,CallSitePrototypeGetThis
code-creation,Builtin,2,2022415,0x7ff7c4a05a14,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,2022435,0x7ff7c4a05a34,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,2022455,0x7ff7c4a05a54,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,2022476,0x7ff7c4a05a74,12,CallSitePrototypeIsEval
code-creation,Builtin,2,2022495,0x7ff7c4a05a94,12,CallSitePrototypeIsNative
code-creation,Builtin,2,2022514,0x7ff7c4a05ab4,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,2022536,0x7ff7c4a05ad4,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,2022556,0x7ff7c4a05af4,12,CallSitePrototypeToString
code-creation,Builtin,2,2022576,0x7ff7c4a05b14,12,ConsoleDebug
code-creation,Builtin,2,2022596,0x7ff7c4a05b34,12,ConsoleError
code-creation,Builtin,2,2022616,0x7ff7c4a05b54,12,ConsoleInfo
code-creation,Builtin,2,2022636,0x7ff7c4a05b74,12,ConsoleLog
code-creation,Builtin,2,2022657,0x7ff7c4a05b94,12,ConsoleWarn
code-creation,Builtin,2,2022677,0x7ff7c4a05bb4,12,ConsoleDir
code-creation,Builtin,2,2022709,0x7ff7c4a05bd4,12,ConsoleDirXml
code-creation,Builtin,2,2022734,0x7ff7c4a05bf4,12,ConsoleTable
code-creation,Builtin,2,2022753,0x7ff7c4a05c14,12,ConsoleTrace
code-creation,Builtin,2,2022771,0x7ff7c4a05c34,12,ConsoleGroup
code-creation,Builtin,2,2022792,0x7ff7c4a05c54,12,ConsoleGroupCollapsed
code-creation,Builtin,2,2022813,0x7ff7c4a05c74,12,ConsoleGroupEnd
code-creation,Builtin,2,2022832,0x7ff7c4a05c94,12,ConsoleClear
code-creation,Builtin,2,2022851,0x7ff7c4a05cb4,12,ConsoleCount
code-creation,Builtin,2,2022871,0x7ff7c4a05cd4,12,ConsoleCountReset
code-creation,Builtin,2,2022891,0x7ff7c4a05cf4,12,ConsoleAssert
code-creation,Builtin,2,2022911,0x7ff7c4a05d14,12,ConsoleProfile
code-creation,Builtin,2,2022932,0x7ff7c4a05d34,12,ConsoleProfileEnd
code-creation,Builtin,2,2022951,0x7ff7c4a05d54,12,ConsoleTime
code-creation,Builtin,2,2022971,0x7ff7c4a05d74,12,ConsoleTimeLog
code-creation,Builtin,2,2022994,0x7ff7c4a05d94,12,ConsoleTimeEnd
code-creation,Builtin,2,2023012,0x7ff7c4a05db4,12,ConsoleTimeStamp
code-creation,Builtin,2,2023034,0x7ff7c4a05dd4,12,ConsoleContext
code-creation,Builtin,2,2023056,0x7ff7c4a05df4,12,DataViewConstructor
code-creation,Builtin,2,2023075,0x7ff7c4a05e14,12,DateConstructor
code-creation,Builtin,2,2023094,0x7ff7c4a05e34,216,DatePrototypeGetDate
code-creation,Builtin,2,2023114,0x7ff7c4a05f14,216,DatePrototypeGetDay
code-creation,Builtin,2,2023133,0x7ff7c4a05ff4,216,DatePrototypeGetFullYear
code-creation,Builtin,2,2023153,0x7ff7c4a060d4,216,DatePrototypeGetHours
code-creation,Builtin,2,2023173,0x7ff7c4a061b4,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,2023194,0x7ff7c4a06294,216,DatePrototypeGetMinutes
code-creation,Builtin,2,2023216,0x7ff7c4a06374,216,DatePrototypeGetMonth
code-creation,Builtin,2,2023235,0x7ff7c4a06454,216,DatePrototypeGetSeconds
code-creation,Builtin,2,2023256,0x7ff7c4a06534,124,DatePrototypeGetTime
code-creation,Builtin,2,2023277,0x7ff7c4a065b4,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,2023298,0x7ff7c4a06694,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,2023317,0x7ff7c4a06774,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,2023338,0x7ff7c4a06854,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,2023357,0x7ff7c4a06934,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,2023376,0x7ff7c4a06a14,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,2023399,0x7ff7c4a06af4,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,2023419,0x7ff7c4a06bd4,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,2023448,0x7ff7c4a06cb4,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,2023468,0x7ff7c4a06d94,124,DatePrototypeValueOf
code-creation,Builtin,2,2023488,0x7ff7c4a06e14,352,DatePrototypeToPrimitive
code-creation,Builtin,2,2023511,0x7ff7c4a06f94,12,DatePrototypeGetYear
code-creation,Builtin,2,2023533,0x7ff7c4a06fb4,12,DatePrototypeSetYear
code-creation,Builtin,2,2023551,0x7ff7c4a06fd4,12,DateNow
code-creation,Builtin,2,2023570,0x7ff7c4a06ff4,12,DateParse
code-creation,Builtin,2,2023588,0x7ff7c4a07014,12,DatePrototypeSetDate
code-creation,Builtin,2,2023605,0x7ff7c4a07034,12,DatePrototypeSetFullYear
code-creation,Builtin,2,2023624,0x7ff7c4a07054,12,DatePrototypeSetHours
code-creation,Builtin,2,2023644,0x7ff7c4a07074,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,2023666,0x7ff7c4a07094,12,DatePrototypeSetMinutes
code-creation,Builtin,2,2023687,0x7ff7c4a070b4,12,DatePrototypeSetMonth
code-creation,Builtin,2,2023714,0x7ff7c4a070d4,12,DatePrototypeSetSeconds
code-creation,Builtin,2,2023734,0x7ff7c4a070f4,12,DatePrototypeSetTime
code-creation,Builtin,2,2023753,0x7ff7c4a07114,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,2023773,0x7ff7c4a07134,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,2023794,0x7ff7c4a07154,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,2023924,0x7ff7c4a07174,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,2023949,0x7ff7c4a07194,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,2023969,0x7ff7c4a071b4,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,2023990,0x7ff7c4a071d4,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,2024014,0x7ff7c4a071f4,12,DatePrototypeToDateString
code-creation,Builtin,2,2024039,0x7ff7c4a07214,12,DatePrototypeToISOString
code-creation,Builtin,2,2024059,0x7ff7c4a07234,12,DatePrototypeToUTCString
code-creation,Builtin,2,2024081,0x7ff7c4a07254,12,DatePrototypeToString
code-creation,Builtin,2,2024100,0x7ff7c4a07274,12,DatePrototypeToTimeString
code-creation,Builtin,2,2024122,0x7ff7c4a07294,12,DatePrototypeToJson
code-creation,Builtin,2,2024142,0x7ff7c4a072b4,12,DateUTC
code-creation,Builtin,2,2024161,0x7ff7c4a072d4,12,ErrorConstructor
code-creation,Builtin,2,2024181,0x7ff7c4a072f4,12,ErrorCaptureStackTrace
code-creation,Builtin,2,2024202,0x7ff7c4a07314,12,ErrorPrototypeToString
code-creation,Builtin,2,2024223,0x7ff7c4a07334,12,FunctionConstructor
code-creation,Builtin,2,2024243,0x7ff7c4a07354,68,FunctionPrototypeApply
code-creation,Builtin,2,2024264,0x7ff7c4a073b4,12,FunctionPrototypeBind
code-creation,Builtin,2,2024284,0x7ff7c4a073d4,32,FunctionPrototypeCall
code-creation,Builtin,2,2024304,0x7ff7c4a07414,12,FunctionPrototypeToString
code-creation,Builtin,2,2024322,0x7ff7c4a07434,192,CreateIterResultObject
code-creation,Builtin,2,2024345,0x7ff7c4a07514,788,CreateGeneratorObject
code-creation,Builtin,2,2024368,0x7ff7c4a07834,12,GeneratorFunctionConstructor
code-creation,Builtin,2,2024388,0x7ff7c4a07854,412,GeneratorPrototypeNext
code-creation,Builtin,2,2024410,0x7ff7c4a079f4,420,GeneratorPrototypeReturn
code-creation,Builtin,2,2024430,0x7ff7c4a07bb4,424,GeneratorPrototypeThrow
code-creation,Builtin,2,2024451,0x7ff7c4a07d74,12,AsyncFunctionConstructor
code-creation,Builtin,2,2024474,0x7ff7c4a07d94,372,SuspendGeneratorBaseline
code-creation,Builtin,2,2024495,0x7ff7c4a07f14,88,ResumeGeneratorBaseline
code-creation,Builtin,2,2024518,0x7ff7c4a07f74,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,2024541,0x7ff7c4a07fb4,12,GlobalDecodeURI
code-creation,Builtin,2,2024564,0x7ff7c4a07fd4,12,GlobalDecodeURIComponent
code-creation,Builtin,2,2024587,0x7ff7c4a07ff4,12,GlobalEncodeURI
code-creation,Builtin,2,2024606,0x7ff7c4a08014,12,GlobalEncodeURIComponent
code-creation,Builtin,2,2024631,0x7ff7c4a08034,12,GlobalEscape
code-creation,Builtin,2,2024654,0x7ff7c4a08054,12,GlobalUnescape
code-creation,Builtin,2,2024674,0x7ff7c4a08074,12,GlobalEval
code-creation,Builtin,2,2024695,0x7ff7c4a08094,132,GlobalIsFinite
code-creation,Builtin,2,2024714,0x7ff7c4a08134,124,GlobalIsNaN
code-creation,Builtin,2,2024732,0x7ff7c4a081b4,12,JsonParse
code-creation,Builtin,2,2024752,0x7ff7c4a081d4,12,JsonStringify
code-creation,Builtin,2,2024770,0x7ff7c4a081f4,4608,LoadIC
code-creation,Builtin,2,2024796,0x7ff7c4a09414,4296,LoadIC_Megamorphic
code-creation,Builtin,2,2024816,0x7ff7c4a0a4f4,4520,LoadIC_Noninlined
code-creation,Builtin,2,2024837,0x7ff7c4a0b6b4,44,LoadICTrampoline
code-creation,Builtin,2,2024858,0x7ff7c4a0b6f4,24,LoadICBaseline
code-creation,Builtin,2,2024876,0x7ff7c4a0b714,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,2024896,0x7ff7c4a0b754,7376,LoadSuperIC
code-creation,Builtin,2,2024916,0x7ff7c4a0d434,24,LoadSuperICBaseline
code-creation,Builtin,2,2024935,0x7ff7c4a0d454,8148,KeyedLoadIC
code-creation,Builtin,2,2024954,0x7ff7c4a0f434,13088,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,2024973,0x7ff7c4a12774,44,KeyedLoadICTrampoline
code-creation,Builtin,2,2024992,0x7ff7c4a127b4,24,KeyedLoadICBaseline
code-creation,Builtin,2,2025011,0x7ff7c4a127d4,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,2025032,0x7ff7c4a12814,5104,StoreGlobalIC
code-creation,Builtin,2,2025051,0x7ff7c4a13c14,44,StoreGlobalICTrampoline
code-creation,Builtin,2,2025071,0x7ff7c4a13c54,24,StoreGlobalICBaseline
code-creation,Builtin,2,2025090,0x7ff7c4a13c74,5340,StoreIC
code-creation,Builtin,2,2025108,0x7ff7c4a15154,44,StoreICTrampoline
code-creation,Builtin,2,2025129,0x7ff7c4a15194,24,StoreICBaseline
code-creation,Builtin,2,2025149,0x7ff7c4a151b4,5780,KeyedStoreIC
code-creation,Builtin,2,2025169,0x7ff7c4a16854,44,KeyedStoreICTrampoline
code-creation,Builtin,2,2025190,0x7ff7c4a16894,24,KeyedStoreICBaseline
code-creation,Builtin,2,2025277,0x7ff7c4a168b4,404,StoreInArrayLiteralIC
code-creation,Builtin,2,2025313,0x7ff7c4a16a54,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,2025334,0x7ff7c4a16a74,140,LookupContextBaseline
code-creation,Builtin,2,2025354,0x7ff7c4a16b14,140,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,2025375,0x7ff7c4a16bb4,3244,LoadGlobalIC
code-creation,Builtin,2,2025399,0x7ff7c4a17874,3220,LoadGlobalICInsideTypeof
code-creation,Builtin,2,2025421,0x7ff7c4a18514,44,LoadGlobalICTrampoline
code-creation,Builtin,2,2025441,0x7ff7c4a18554,24,LoadGlobalICBaseline
code-creation,Builtin,2,2025462,0x7ff7c4a18574,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,2025484,0x7ff7c4a185b4,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,2025507,0x7ff7c4a185d4,140,LookupGlobalICBaseline
code-creation,Builtin,2,2025529,0x7ff7c4a18674,140,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,2025551,0x7ff7c4a18714,2064,CloneObjectIC
code-creation,Builtin,2,2025573,0x7ff7c4a18f34,24,CloneObjectICBaseline
code-creation,Builtin,2,2025593,0x7ff7c4a18f54,1988,CloneObjectIC_Slow
code-creation,Builtin,2,2025616,0x7ff7c4a19734,2756,KeyedHasIC
code-creation,Builtin,2,2025637,0x7ff7c4a1a214,24,KeyedHasICBaseline
code-creation,Builtin,2,2025659,0x7ff7c4a1a234,2640,KeyedHasIC_Megamorphic
code-creation,Builtin,2,2025681,0x7ff7c4a1ac94,1436,IterableToList
code-creation,Builtin,2,2025700,0x7ff7c4a1b234,1240,IterableToFixedArray
code-creation,Builtin,2,2025804,0x7ff7c4a1b714,748,IterableToListWithSymbolLookup
code-creation,Builtin,2,2025834,0x7ff7c4a1ba14,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,2025859,0x7ff7c4a1ba54,124,IterableToListMayPreserveHoles
code-creation,Builtin,2,2025885,0x7ff7c4a1bad4,984,IterableToFixedArrayForWasm
code-creation,Builtin,2,2025913,0x7ff7c4a1beb4,1616,StringListFromIterable
code-creation,Builtin,2,2025933,0x7ff7c4a1c514,1228,FindOrderedHashMapEntry
code-creation,Builtin,2,2025954,0x7ff7c4a1c9f4,4156,MapConstructor
code-creation,Builtin,2,2025977,0x7ff7c4a1da34,1996,MapPrototypeSet
code-creation,Builtin,2,2025999,0x7ff7c4a1e214,1524,MapPrototypeDelete
code-creation,Builtin,2,2026020,0x7ff7c4a1e814,204,MapPrototypeGet
code-creation,Builtin,2,2026040,0x7ff7c4a1e8f4,164,MapPrototypeHas
code-creation,Builtin,2,2026061,0x7ff7c4a1e9b4,12,MapPrototypeClear
code-creation,Builtin,2,2026085,0x7ff7c4a1e9d4,284,MapPrototypeEntries
code-creation,Builtin,2,2026107,0x7ff7c4a1eaf4,144,MapPrototypeGetSize
code-creation,Builtin,2,2026129,0x7ff7c4a1eb94,492,MapPrototypeForEach
code-creation,Builtin,2,2026150,0x7ff7c4a1ed94,284,MapPrototypeKeys
code-creation,Builtin,2,2026170,0x7ff7c4a1eeb4,284,MapPrototypeValues
code-creation,Builtin,2,2026191,0x7ff7c4a1efd4,1052,MapIteratorPrototypeNext
code-creation,Builtin,2,2026211,0x7ff7c4a1f3f4,1168,MapIteratorToList
code-creation,Builtin,2,2026231,0x7ff7c4a1f894,12,NumberPrototypeToExponential
code-creation,Builtin,2,2026251,0x7ff7c4a1f8b4,12,NumberPrototypeToFixed
code-creation,Builtin,2,2026270,0x7ff7c4a1f8d4,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,2026291,0x7ff7c4a1f8f4,12,NumberPrototypeToPrecision
code-creation,Builtin,2,2026310,0x7ff7c4a1f914,328,SameValue
code-creation,Builtin,2,2026328,0x7ff7c4a1fa74,204,SameValueNumbersOnly
code-creation,Builtin,2,2026346,0x7ff7c4a1fb54,792,Add_Baseline
code-creation,Builtin,2,2026364,0x7ff7c4a1fe74,828,Subtract_Baseline
code-creation,Builtin,2,2026384,0x7ff7c4a201b4,808,Multiply_Baseline
code-creation,Builtin,2,2026403,0x7ff7c4a204f4,832,Divide_Baseline
code-creation,Builtin,2,2026422,0x7ff7c4a20854,764,Modulus_Baseline
code-creation,Builtin,2,2026441,0x7ff7c4a20b54,808,Exponentiate_Baseline
code-creation,Builtin,2,2026461,0x7ff7c4a20e94,708,BitwiseAnd_Baseline
code-creation,Builtin,2,2026481,0x7ff7c4a21174,700,BitwiseOr_Baseline
code-creation,Builtin,2,2026499,0x7ff7c4a21434,708,BitwiseXor_Baseline
code-creation,Builtin,2,2026519,0x7ff7c4a21714,720,ShiftLeft_Baseline
code-creation,Builtin,2,2026538,0x7ff7c4a219f4,720,ShiftRight_Baseline
code-creation,Builtin,2,2026565,0x7ff7c4a21cd4,836,ShiftRightLogical_Baseline
code-creation,Builtin,2,2026589,0x7ff7c4a22034,720,Add_WithFeedback
code-creation,Builtin,2,2026608,0x7ff7c4a22314,780,Subtract_WithFeedback
code-creation,Builtin,2,2026627,0x7ff7c4a22634,776,Multiply_WithFeedback
code-creation,Builtin,2,2026649,0x7ff7c4a22954,804,Divide_WithFeedback
code-creation,Builtin,2,2026669,0x7ff7c4a22c94,724,Modulus_WithFeedback
code-creation,Builtin,2,2026690,0x7ff7c4a22f74,764,Exponentiate_WithFeedback
code-creation,Builtin,2,2026712,0x7ff7c4a23274,684,BitwiseAnd_WithFeedback
code-creation,Builtin,2,2026734,0x7ff7c4a23534,676,BitwiseOr_WithFeedback
code-creation,Builtin,2,2026754,0x7ff7c4a237f4,684,BitwiseXor_WithFeedback
code-creation,Builtin,2,2026777,0x7ff7c4a23ab4,692,ShiftLeft_WithFeedback
code-creation,Builtin,2,2026797,0x7ff7c4a23d74,692,ShiftRight_WithFeedback
code-creation,Builtin,2,2026817,0x7ff7c4a24034,808,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,2026840,0x7ff7c4a24374,1696,Equal_Baseline
code-creation,Builtin,2,2026860,0x7ff7c4a24a34,908,StrictEqual_Baseline
code-creation,Builtin,2,2026879,0x7ff7c4a24dd4,1264,LessThan_Baseline
code-creation,Builtin,2,2026898,0x7ff7c4a252d4,1264,GreaterThan_Baseline
code-creation,Builtin,2,2026920,0x7ff7c4a257d4,1264,LessThanOrEqual_Baseline
code-creation,Builtin,2,2026940,0x7ff7c4a25cd4,1264,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,2026961,0x7ff7c4a261d4,1620,Equal_WithFeedback
code-creation,Builtin,2,2026980,0x7ff7c4a26834,940,StrictEqual_WithFeedback
code-creation,Builtin,2,2026999,0x7ff7c4a26bf4,1240,LessThan_WithFeedback
code-creation,Builtin,2,2027021,0x7ff7c4a270d4,1240,GreaterThan_WithFeedback
code-creation,Builtin,2,2027043,0x7ff7c4a275b4,1240,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,2027063,0x7ff7c4a27a94,1240,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,2027084,0x7ff7c4a27f74,332,BitwiseNot_Baseline
code-creation,Builtin,2,2027103,0x7ff7c4a280d4,460,Decrement_Baseline
code-creation,Builtin,2,2027123,0x7ff7c4a282b4,464,Increment_Baseline
code-creation,Builtin,2,2027144,0x7ff7c4a28494,488,Negate_Baseline
code-creation,Builtin,2,2027167,0x7ff7c4a28694,316,BitwiseNot_WithFeedback
code-creation,Builtin,2,2027191,0x7ff7c4a287d4,440,Decrement_WithFeedback
code-creation,Builtin,2,2027213,0x7ff7c4a28994,444,Increment_WithFeedback
code-creation,Builtin,2,2027242,0x7ff7c4a28b54,472,Negate_WithFeedback
code-creation,Builtin,2,2027264,0x7ff7c4a28d34,252,ObjectAssign
code-creation,Builtin,2,2027282,0x7ff7c4a28e34,864,ObjectCreate
code-creation,Builtin,2,2027302,0x7ff7c4a291b4,12,ObjectDefineGetter
code-creation,Builtin,2,2027321,0x7ff7c4a291d4,12,ObjectDefineProperties
code-creation,Builtin,2,2027342,0x7ff7c4a291f4,12,ObjectDefineProperty
code-creation,Builtin,2,2027364,0x7ff7c4a29214,12,ObjectDefineSetter
code-creation,Builtin,2,2027384,0x7ff7c4a29234,1516,ObjectEntries
code-creation,Builtin,2,2027405,0x7ff7c4a29834,12,ObjectFreeze
code-creation,Builtin,2,2027424,0x7ff7c4a29854,5620,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,2027446,0x7ff7c4a2ae54,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,2027473,0x7ff7c4a2ae74,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,2027492,0x7ff7c4a2b0d4,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,2027515,0x7ff7c4a2b0f4,164,ObjectHasOwn
code-creation,Builtin,2,2027534,0x7ff7c4a2b1b4,388,ObjectIs
code-creation,Builtin,2,2027553,0x7ff7c4a2b354,12,ObjectIsFrozen
code-creation,Builtin,2,2027572,0x7ff7c4a2b374,12,ObjectIsSealed
code-creation,Builtin,2,2027589,0x7ff7c4a2b394,536,ObjectKeys
code-creation,Builtin,2,2027607,0x7ff7c4a2b5b4,12,ObjectLookupGetter
code-creation,Builtin,2,2027626,0x7ff7c4a2b5d4,12,ObjectLookupSetter
code-creation,Builtin,2,2027648,0x7ff7c4a2b5f4,2280,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,2027669,0x7ff7c4a2bef4,216,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,2027690,0x7ff7c4a2bfd4,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,2027711,0x7ff7c4a2bff4,12,ObjectPrototypeGetProto
code-creation,Builtin,2,2027737,0x7ff7c4a2c014,12,ObjectPrototypeSetProto
code-creation,Builtin,2,2027919,0x7ff7c4a2c034,12,ObjectSeal
code-creation,Builtin,2,2027941,0x7ff7c4a2c054,1108,ObjectToString
code-creation,Builtin,2,2027964,0x7ff7c4a2c4b4,1284,ObjectValues
code-creation,Builtin,2,2027986,0x7ff7c4a2c9d4,280,OrdinaryHasInstance
code-creation,Builtin,2,2028004,0x7ff7c4a2caf4,344,InstanceOf
code-creation,Builtin,2,2028030,0x7ff7c4a2cc54,632,InstanceOf_WithFeedback
code-creation,Builtin,2,2028050,0x7ff7c4a2ced4,648,InstanceOf_Baseline
code-creation,Builtin,2,2028070,0x7ff7c4a2d174,268,ForInEnumerate
code-creation,Builtin,2,2028091,0x7ff7c4a2d294,148,ForInPrepare
code-creation,Builtin,2,2028112,0x7ff7c4a2d334,2584,ForInFilter
code-creation,Builtin,2,2028132,0x7ff7c4a2dd54,52,ReflectApply
code-creation,Builtin,2,2028152,0x7ff7c4a2dd94,60,ReflectConstruct
code-creation,Builtin,2,2028173,0x7ff7c4a2ddd4,12,ReflectDefineProperty
code-creation,Builtin,2,2028196,0x7ff7c4a2ddf4,12,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,2028217,0x7ff7c4a2de14,12,ReflectOwnKeys
code-creation,Builtin,2,2028236,0x7ff7c4a2de34,12,ReflectSet
code-creation,Builtin,2,2028257,0x7ff7c4a2de54,12,RegExpCapture1Getter
code-creation,Builtin,2,2028278,0x7ff7c4a2de74,12,RegExpCapture2Getter
code-creation,Builtin,2,2028298,0x7ff7c4a2de94,12,RegExpCapture3Getter
code-creation,Builtin,2,2028321,0x7ff7c4a2deb4,12,RegExpCapture4Getter
code-creation,Builtin,2,2028343,0x7ff7c4a2ded4,12,RegExpCapture5Getter
code-creation,Builtin,2,2028364,0x7ff7c4a2def4,12,RegExpCapture6Getter
code-creation,Builtin,2,2028385,0x7ff7c4a2df14,12,RegExpCapture7Getter
code-creation,Builtin,2,2028407,0x7ff7c4a2df34,12,RegExpCapture8Getter
code-creation,Builtin,2,2028427,0x7ff7c4a2df54,12,RegExpCapture9Getter
code-creation,Builtin,2,2028446,0x7ff7c4a2df74,2212,RegExpConstructor
code-creation,Builtin,2,2028467,0x7ff7c4a2e834,12,RegExpInputGetter
code-creation,Builtin,2,2028486,0x7ff7c4a2e854,12,RegExpInputSetter
code-creation,Builtin,2,2028505,0x7ff7c4a2e874,12,RegExpLastMatchGetter
code-creation,Builtin,2,2028527,0x7ff7c4a2e894,12,RegExpLastParenGetter
code-creation,Builtin,2,2028547,0x7ff7c4a2e8b4,12,RegExpLeftContextGetter
code-creation,Builtin,2,2028568,0x7ff7c4a2e8d4,908,RegExpPrototypeCompile
code-creation,Builtin,2,2028588,0x7ff7c4a2ec74,12,RegExpPrototypeToString
code-creation,Builtin,2,2028610,0x7ff7c4a2ec94,12,RegExpRightContextGetter
code-creation,Builtin,2,2028633,0x7ff7c4a2ecb4,252,RegExpExecAtom
code-creation,Builtin,2,2028656,0x7ff7c4a2edb4,1040,RegExpExecInternal
code-creation,Builtin,2,2028676,0x7ff7c4a2f1d4,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,2028697,0x7ff7c4a2f1f4,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,2028717,0x7ff7c4a2f214,2684,SetConstructor
code-creation,Builtin,2,2028736,0x7ff7c4a2fc94,1284,SetPrototypeHas
code-creation,Builtin,2,2028756,0x7ff7c4a301b4,1736,SetPrototypeAdd
code-creation,Builtin,2,2028775,0x7ff7c4a30894,1476,SetPrototypeDelete
code-creation,Builtin,2,2028795,0x7ff7c4a30e74,12,SetPrototypeClear
code-creation,Builtin,2,2028810,0x7ff7c4a30e94,284,SetPrototypeEntries
code-creation,Builtin,2,2028826,0x7ff7c4a30fb4,144,SetPrototypeGetSize
code-creation,Builtin,2,2028841,0x7ff7c4a31054,444,SetPrototypeForEach
code-creation,Builtin,2,2028856,0x7ff7c4a31214,284,SetPrototypeValues
code-creation,Builtin,2,2028871,0x7ff7c4a31334,988,SetIteratorPrototypeNext
code-creation,Builtin,2,2028887,0x7ff7c4a31714,1112,SetOrSetIteratorToList
code-creation,Builtin,2,2028903,0x7ff7c4a31b74,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,2028919,0x7ff7c4a31b94,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,2028936,0x7ff7c4a31bb4,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,2028953,0x7ff7c4a31bd4,1280,AtomicsLoad
code-creation,Builtin,2,2028967,0x7ff7c4a320f4,1008,AtomicsStore
code-creation,Builtin,2,2028982,0x7ff7c4a324f4,1704,AtomicsExchange
code-creation,Builtin,2,2028996,0x7ff7c4a32bb4,2092,AtomicsCompareExchange
code-creation,Builtin,2,2029012,0x7ff7c4a333f4,1804,AtomicsAdd
code-creation,Builtin,2,2029035,0x7ff7c4a33b14,1804,AtomicsSub
code-creation,Builtin,2,2029052,0x7ff7c4a34234,1804,AtomicsAnd
code-creation,Builtin,2,2029067,0x7ff7c4a34954,1804,AtomicsOr
code-creation,Builtin,2,2029082,0x7ff7c4a35074,1804,AtomicsXor
code-creation,Builtin,2,2029096,0x7ff7c4a35794,12,AtomicsNotify
code-creation,Builtin,2,2029111,0x7ff7c4a357b4,12,AtomicsIsLockFree
code-creation,Builtin,2,2029126,0x7ff7c4a357d4,12,AtomicsWait
code-creation,Builtin,2,2029141,0x7ff7c4a357f4,12,AtomicsWaitAsync
code-creation,Builtin,2,2029155,0x7ff7c4a35814,12,StringFromCodePoint
code-creation,Builtin,2,2029171,0x7ff7c4a35834,1428,StringFromCharCode
code-creation,Builtin,2,2029186,0x7ff7c4a35dd4,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,2029202,0x7ff7c4a35df4,4360,StringPrototypeMatchAll
code-creation,Builtin,2,2029218,0x7ff7c4a36f14,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,2029235,0x7ff7c4a36f34,1228,StringPrototypeReplace
code-creation,Builtin,2,2029250,0x7ff7c4a37414,2900,StringPrototypeSplit
code-creation,Builtin,2,2029266,0x7ff7c4a37f74,12,StringRaw
code-creation,Builtin,2,2029280,0x7ff7c4a37f94,12,SymbolConstructor
code-creation,Builtin,2,2029296,0x7ff7c4a37fb4,12,SymbolFor
code-creation,Builtin,2,2029311,0x7ff7c4a37fd4,12,SymbolKeyFor
code-creation,Builtin,2,2029326,0x7ff7c4a37ff4,88,TypedArrayBaseConstructor
code-creation,Builtin,2,2029341,0x7ff7c4a38054,256,TypedArrayConstructor
code-creation,Builtin,2,2029357,0x7ff7c4a38174,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,2029373,0x7ff7c4a38194,888,TypedArrayPrototypeByteLength
code-creation,Builtin,2,2029389,0x7ff7c4a38514,368,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,2029405,0x7ff7c4a38694,584,TypedArrayPrototypeLength
code-creation,Builtin,2,2029421,0x7ff7c4a388f4,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,2029437,0x7ff7c4a38914,12,TypedArrayPrototypeFill
code-creation,Builtin,2,2029452,0x7ff7c4a38934,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,2029470,0x7ff7c4a38954,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,2029486,0x7ff7c4a38974,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,2029502,0x7ff7c4a38994,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,2029518,0x7ff7c4a389b4,316,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,2029534,0x7ff7c4a38af4,10664,TypedArrayPrototypeMap
code-creation,Builtin,2,2029550,0x7ff7c4a3b4b4,792,GenericJSToWasmWrapper
code-creation,Builtin,2,2029566,0x7ff7c4a3b7d4,148,WasmCompileLazy
code-creation,Builtin,2,2029582,0x7ff7c4a3b874,168,WasmDebugBreak
code-creation,Builtin,2,2029597,0x7ff7c4a3b934,16,WasmOnStackReplace
code-creation,Builtin,2,2029613,0x7ff7c4a3b954,140,WasmFloat32ToNumber
code-creation,Builtin,2,2029629,0x7ff7c4a3b9f4,152,WasmFloat64ToNumber
code-creation,Builtin,2,2029647,0x7ff7c4a3ba94,4,WasmI32AtomicWait32
code-creation,Builtin,2,2029663,0x7ff7c4a3bab4,4,WasmI64AtomicWait32
code-creation,Builtin,2,2029678,0x7ff7c4a3bad4,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,2029694,0x7ff7c4a3baf4,4320,WeakMapConstructor
code-creation,Builtin,2,2029712,0x7ff7c4a3cbf4,196,WeakMapLookupHashIndex
code-creation,Builtin,2,2029727,0x7ff7c4a3ccd4,220,WeakMapGet
code-creation,Builtin,2,2029743,0x7ff7c4a3cdb4,176,WeakMapPrototypeHas
code-creation,Builtin,2,2029760,0x7ff7c4a3ce74,204,WeakMapPrototypeSet
code-creation,Builtin,2,2030050,0x7ff7c4a3cf54,144,WeakMapPrototypeDelete
code-creation,Builtin,2,2030074,0x7ff7c4a3cff4,2876,WeakSetConstructor
code-creation,Builtin,2,2030097,0x7ff7c4a3db34,176,WeakSetPrototypeHas
code-creation,Builtin,2,2030116,0x7ff7c4a3dbf4,204,WeakSetPrototypeAdd
code-creation,Builtin,2,2030136,0x7ff7c4a3dcd4,144,WeakSetPrototypeDelete
code-creation,Builtin,2,2030156,0x7ff7c4a3dd74,372,WeakCollectionDelete
code-creation,Builtin,2,2030176,0x7ff7c4a3def4,764,WeakCollectionSet
code-creation,Builtin,2,2030195,0x7ff7c4a3e1f4,296,AsyncGeneratorResolve
code-creation,Builtin,2,2030215,0x7ff7c4a3e334,100,AsyncGeneratorReject
code-creation,Builtin,2,2030235,0x7ff7c4a3e3b4,2760,AsyncGeneratorYield
code-creation,Builtin,2,2030259,0x7ff7c4a3ee94,2872,AsyncGeneratorReturn
code-creation,Builtin,2,2030287,0x7ff7c4a3f9d4,292,AsyncGeneratorResumeNext
code-creation,Builtin,2,2030312,0x7ff7c4a3fb14,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,2030334,0x7ff7c4a3fb34,1020,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,2030356,0x7ff7c4a3ff34,1028,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,2030377,0x7ff7c4a40354,1028,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,2030399,0x7ff7c4a40774,2736,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,2030420,0x7ff7c4a41234,2736,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,2030441,0x7ff7c4a41cf4,116,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,2030463,0x7ff7c4a41d74,128,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,2030486,0x7ff7c4a41e14,116,AsyncGeneratorYieldResolveClosure
code-creation,Builtin,2,2030508,0x7ff7c4a41e94,116,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,2030530,0x7ff7c4a41f14,112,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,2030552,0x7ff7c4a41f94,128,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,2030574,0x7ff7c4a42034,1592,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,2030596,0x7ff7c4a42674,1696,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,2030619,0x7ff7c4a42d34,1716,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,2030642,0x7ff7c4a433f4,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,2030661,0x7ff7c4a43474,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,2030683,0x7ff7c4a43574,224,CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,2030706,0x7ff7c4a43674,208,CEntry_Return1_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,2030729,0x7ff7c4a43754,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,2030752,0x7ff7c4a438f4,400,CEntry_Return1_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,2030776,0x7ff7c4a43a94,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,2030800,0x7ff7c4a43b94,240,CEntry_Return2_DontSaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,2030822,0x7ff7c4a43c94,224,CEntry_Return2_DontSaveFPRegs_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,2030846,0x7ff7c4a43d94,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,2030869,0x7ff7c4a43f34,412,CEntry_Return2_SaveFPRegs_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,2030891,0x7ff7c4a440d4,4,DirectCEntry
code-creation,Builtin,2,2030911,0x7ff7c4a440f4,1096,StringAdd_CheckNone
code-creation,Builtin,2,2030930,0x7ff7c4a44554,2484,SubString
code-creation,Builtin,2,2030947,0x7ff7c4a44f14,16,StackCheck
code-creation,Builtin,2,2030967,0x7ff7c4a44f34,84,DoubleToI
code-creation,Builtin,2,2030986,0x7ff7c4a44f94,2236,GetProperty
code-creation,Builtin,2,2031007,0x7ff7c4a45854,2308,GetPropertyWithReceiver
code-creation,Builtin,2,2031030,0x7ff7c4a46174,16004,SetProperty
code-creation,Builtin,2,2031049,0x7ff7c4a4a014,13480,SetPropertyInLiteral
code-creation,Builtin,2,2031070,0x7ff7c4a4d4d4,8,MemCopyUint8Uint8
code-creation,Builtin,2,2031093,0x7ff7c4a4d4f4,8,MemMove
code-creation,Builtin,2,2031112,0x7ff7c4a4d514,12,IsTraceCategoryEnabled
code-creation,Builtin,2,2031135,0x7ff7c4a4d534,12,Trace
code-creation,Builtin,2,2031154,0x7ff7c4a4d554,12,FinalizationRegistryUnregister
code-creation,Builtin,2,2031185,0x7ff7c4a4d574,416,AsyncModuleEvaluate
code-creation,Builtin,2,2031210,0x7ff7c4a4d734,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,2031230,0x7ff7c4a4d754,12,CallAsyncModuleRejected
code-creation,Builtin,2,2031254,0x7ff7c4a4d774,260,AggregateErrorConstructor
code-creation,Builtin,2,2031275,0x7ff7c4a4d894,856,ArrayPrototypeAt
code-creation,Builtin,2,2031295,0x7ff7c4a4dbf4,656,ArrayPrototypeConcat
code-creation,Builtin,2,2031315,0x7ff7c4a4de94,5824,ArrayPrototypeCopyWithin
code-creation,Builtin,2,2031334,0x7ff7c4a4f574,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,2031357,0x7ff7c4a4f654,612,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,2031382,0x7ff7c4a4f8d4,3316,ArrayEveryLoopContinuation
code-creation,Builtin,2,2031410,0x7ff7c4a505d4,1464,ArrayEvery
code-creation,Builtin,2,2031429,0x7ff7c4a50b94,284,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,2031450,0x7ff7c4a50cb4,988,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,2031471,0x7ff7c4a51094,3564,ArrayFilterLoopContinuation
code-creation,Builtin,2,2031494,0x7ff7c4a51e94,4260,ArrayFilter
code-creation,Builtin,2,2031513,0x7ff7c4a52f54,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,2031534,0x7ff7c4a53034,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,2031557,0x7ff7c4a53074,312,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,2031580,0x7ff7c4a531b4,528,ArrayFindLoopContinuation
code-creation,Builtin,2,2031602,0x7ff7c4a533d4,1460,ArrayPrototypeFind
code-creation,Builtin,2,2031624,0x7ff7c4a53994,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,2031652,0x7ff7c4a53a74,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,2031674,0x7ff7c4a53ab4,312,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,2031693,0x7ff7c4a53bf4,524,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,2031713,0x7ff7c4a53e14,1460,ArrayPrototypeFindIndex
code-creation,Builtin,2,2031860,0x7ff7c4a543d4,448,ArrayFindLastLoopContinuation
code-creation,Builtin,2,2031882,0x7ff7c4a545b4,1700,ArrayPrototypeFindLast
code-creation,Builtin,2,2031901,0x7ff7c4a54c74,448,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,2031921,0x7ff7c4a54e54,1700,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,2031941,0x7ff7c4a55514,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,2031962,0x7ff7c4a555f4,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,2031983,0x7ff7c4a556d4,3156,ArrayForEachLoopContinuation
code-creation,Builtin,2,2032003,0x7ff7c4a56334,1328,ArrayForEach
code-creation,Builtin,2,2032021,0x7ff7c4a56874,3572,ArrayFrom
code-creation,Builtin,2,2032039,0x7ff7c4a57674,148,ArrayIsArray
code-creation,Builtin,2,2032058,0x7ff7c4a57714,404,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,2032079,0x7ff7c4a578b4,36,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,2032100,0x7ff7c4a578f4,140,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,2032120,0x7ff7c4a57994,312,ConvertToLocaleString
code-creation,Builtin,2,2032141,0x7ff7c4a57ad4,752,JoinStackPush
code-creation,Builtin,2,2032159,0x7ff7c4a57dd4,272,JoinStackPop
code-creation,Builtin,2,2032177,0x7ff7c4a57ef4,6628,ArrayPrototypeJoin
code-creation,Builtin,2,2032197,0x7ff7c4a598f4,5360,ArrayPrototypeToLocaleString
code-creation,Builtin,2,2032216,0x7ff7c4a5adf4,236,ArrayPrototypeToString
code-creation,Builtin,2,2032236,0x7ff7c4a5aef4,5924,TypedArrayPrototypeJoin
code-creation,Builtin,2,2032256,0x7ff7c4a5c634,4636,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,2032276,0x7ff7c4a5d854,3824,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,2032296,0x7ff7c4a5e754,260,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,2032316,0x7ff7c4a5e874,252,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,2032336,0x7ff7c4a5e974,532,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,2032357,0x7ff7c4a5eb94,3192,ArrayMapLoopContinuation
code-creation,Builtin,2,2032377,0x7ff7c4a5f814,3912,ArrayMap
code-creation,Builtin,2,2032395,0x7ff7c4a60774,1000,ArrayOf
code-creation,Builtin,2,2032413,0x7ff7c4a60b74,444,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,2032434,0x7ff7c4a60d34,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,2032455,0x7ff7c4a60e14,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,2032478,0x7ff7c4a60ef4,3200,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,2032501,0x7ff7c4a61b94,2000,ArrayReduceRight
code-creation,Builtin,2,2032520,0x7ff7c4a62374,176,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,2032542,0x7ff7c4a62434,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,2032570,0x7ff7c4a62514,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,2032597,0x7ff7c4a625f4,3252,ArrayReduceLoopContinuation
code-creation,Builtin,2,2032621,0x7ff7c4a632b4,1604,ArrayReduce
code-creation,Builtin,2,2032643,0x7ff7c4a63914,3216,ArrayPrototypeReverse
code-creation,Builtin,2,2032661,0x7ff7c4a645b4,3592,ArrayPrototypeShift
code-creation,Builtin,2,2032680,0x7ff7c4a653d4,5220,ArrayPrototypeSlice
code-creation,Builtin,2,2032697,0x7ff7c4a66854,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,2032714,0x7ff7c4a66934,580,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,2032734,0x7ff7c4a66b94,3304,ArraySomeLoopContinuation
code-creation,Builtin,2,2032754,0x7ff7c4a67894,1448,ArraySome
code-creation,Builtin,2,2032772,0x7ff7c4a67e54,14216,ArrayPrototypeSplice
code-creation,Builtin,2,2032793,0x7ff7c4a6b5f4,3264,ArrayPrototypeUnshift
code-creation,Builtin,2,2032814,0x7ff7c4a6c2d4,332,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,2032835,0x7ff7c4a6c434,348,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,2032856,0x7ff7c4a6c594,208,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,2032876,0x7ff7c4a6c674,332,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,2032896,0x7ff7c4a6c7d4,208,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,2032918,0x7ff7c4a6c8b4,96,ArrayBufferIsView
code-creation,Builtin,2,2032939,0x7ff7c4a6c934,396,ToInteger
code-creation,Builtin,2,2032958,0x7ff7c4a6cad4,3084,FastCreateDataProperty
code-creation,Builtin,2,2032978,0x7ff7c4a6d6f4,676,CheckNumberInRange
code-creation,Builtin,2,2032999,0x7ff7c4a6d9b4,584,CheckSameObject
code-creation,Builtin,2,2033022,0x7ff7c4a6dc14,904,BooleanConstructor
code-creation,Builtin,2,2033043,0x7ff7c4a6dfb4,164,BooleanPrototypeToString
code-creation,Builtin,2,2033062,0x7ff7c4a6e074,156,BooleanPrototypeValueOf
code-creation,Builtin,2,2033085,0x7ff7c4a6e114,1184,BigIntAddNoThrow
code-creation,Builtin,2,2033107,0x7ff7c4a6e5d4,1280,BigIntAdd
code-creation,Builtin,2,2033127,0x7ff7c4a6eaf4,1184,BigIntSubtractNoThrow
code-creation,Builtin,2,2033150,0x7ff7c4a6efb4,1280,BigIntSubtract
code-creation,Builtin,2,2033170,0x7ff7c4a6f4d4,284,BigIntUnaryMinus
code-creation,Builtin,2,2033191,0x7ff7c4a6f5f4,1360,ToString
code-creation,Builtin,2,2033211,0x7ff7c4a6fb54,156,StringPrototypeToString
code-creation,Builtin,2,2033231,0x7ff7c4a6fbf4,156,StringPrototypeValueOf
code-creation,Builtin,2,2033253,0x7ff7c4a6fc94,2480,StringToList
code-creation,Builtin,2,2033272,0x7ff7c4a70654,1012,StringPrototypeCharAt
code-creation,Builtin,2,2033295,0x7ff7c4a70a54,700,StringPrototypeCharCodeAt
code-creation,Builtin,2,2033316,0x7ff7c4a70d14,1288,StringPrototypeCodePointAt
code-creation,Builtin,2,2033336,0x7ff7c4a71234,400,StringPrototypeConcat
code-creation,Builtin,2,2033356,0x7ff7c4a713d4,992,StringConstructor
code-creation,Builtin,2,2033376,0x7ff7c4a717d4,1436,StringAddConvertLeft
code-creation,Builtin,2,2033396,0x7ff7c4a71d74,1464,StringAddConvertRight
code-creation,Builtin,2,2033416,0x7ff7c4a72334,816,StringCharAt
code-creation,Builtin,2,2033435,0x7ff7c4a72674,16,FastNewClosureBaseline
code-creation,Builtin,2,2033457,0x7ff7c4a72694,196,FastNewFunctionContextEval
code-creation,Builtin,2,2033478,0x7ff7c4a72774,196,FastNewFunctionContextFunction
code-creation,Builtin,2,2033500,0x7ff7c4a72854,248,CreateRegExpLiteral
code-creation,Builtin,2,2033521,0x7ff7c4a72954,1060,CreateShallowArrayLiteral
code-creation,Builtin,2,2033542,0x7ff7c4a72d94,504,CreateEmptyArrayLiteral
code-creation,Builtin,2,2033561,0x7ff7c4a72f94,1736,CreateShallowObjectLiteral
code-creation,Builtin,2,2033582,0x7ff7c4a73674,384,ObjectConstructor
code-creation,Builtin,2,2033602,0x7ff7c4a73814,176,CreateEmptyLiteralObject
code-creation,Builtin,2,2033626,0x7ff7c4a738d4,536,NumberConstructor
code-creation,Builtin,2,2033650,0x7ff7c4a73af4,64,GenericLazyDeoptContinuation
code-creation,Builtin,2,2033671,0x7ff7c4a73b54,64,StringToNumber
code-creation,Builtin,2,2033691,0x7ff7c4a73bb4,184,NonNumberToNumber
code-creation,Builtin,2,2033773,0x7ff7c4a73c74,240,NonNumberToNumeric
code-creation,Builtin,2,2033797,0x7ff7c4a73d74,36,ToNumeric
code-creation,Builtin,2,2033815,0x7ff7c4a73db4,1184,NumberToString
code-creation,Builtin,2,2033833,0x7ff7c4a74274,92,ToBoolean
code-creation,Builtin,2,2033852,0x7ff7c4a742d4,96,ToBooleanForBaselineJump
code-creation,Builtin,2,2033872,0x7ff7c4a74354,728,ToLength
code-creation,Builtin,2,2033890,0x7ff7c4a74634,1312,ToName
code-creation,Builtin,2,2033907,0x7ff7c4a74b74,756,ToObject
code-creation,Builtin,2,2033926,0x7ff7c4a74e74,208,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,2033947,0x7ff7c4a74f54,208,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,2033970,0x7ff7c4a75034,208,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,2033991,0x7ff7c4a75114,288,OrdinaryToPrimitive_Number
code-creation,Builtin,2,2034011,0x7ff7c4a75254,288,OrdinaryToPrimitive_String
code-creation,Builtin,2,2034031,0x7ff7c4a75394,216,FastConsoleAssert
code-creation,Builtin,2,2034051,0x7ff7c4a75474,160,DataViewPrototypeGetBuffer
code-creation,Builtin,2,2034071,0x7ff7c4a75534,336,DataViewPrototypeGetByteLength
code-creation,Builtin,2,2034092,0x7ff7c4a75694,336,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,2034112,0x7ff7c4a757f4,572,DataViewPrototypeGetUint8
code-creation,Builtin,2,2034133,0x7ff7c4a75a34,572,DataViewPrototypeGetInt8
code-creation,Builtin,2,2034153,0x7ff7c4a75c74,644,DataViewPrototypeGetUint16
code-creation,Builtin,2,2034172,0x7ff7c4a75f14,644,DataViewPrototypeGetInt16
code-creation,Builtin,2,2034192,0x7ff7c4a761b4,808,DataViewPrototypeGetUint32
code-creation,Builtin,2,2034212,0x7ff7c4a764f4,684,DataViewPrototypeGetInt32
code-creation,Builtin,2,2034232,0x7ff7c4a767b4,848,DataViewPrototypeGetFloat32
code-creation,Builtin,2,2034252,0x7ff7c4a76b14,912,DataViewPrototypeGetFloat64
code-creation,Builtin,2,2034275,0x7ff7c4a76eb4,984,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,2034296,0x7ff7c4a77294,1004,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,2034319,0x7ff7c4a77694,928,DataViewPrototypeSetUint8
code-creation,Builtin,2,2034341,0x7ff7c4a77a54,928,DataViewPrototypeSetInt8
code-creation,Builtin,2,2034360,0x7ff7c4a77e14,1028,DataViewPrototypeSetUint16
code-creation,Builtin,2,2034389,0x7ff7c4a78234,1028,DataViewPrototypeSetInt16
code-creation,Builtin,2,2034411,0x7ff7c4a78654,1064,DataViewPrototypeSetUint32
code-creation,Builtin,2,2034433,0x7ff7c4a78a94,1064,DataViewPrototypeSetInt32
code-creation,Builtin,2,2034455,0x7ff7c4a78ed4,1032,DataViewPrototypeSetFloat32
code-creation,Builtin,2,2034476,0x7ff7c4a792f4,1096,DataViewPrototypeSetFloat64
code-creation,Builtin,2,2034497,0x7ff7c4a79754,944,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,2034517,0x7ff7c4a79b14,944,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,2034537,0x7ff7c4a79ed4,828,FinalizationRegistryConstructor
code-creation,Builtin,2,2034560,0x7ff7c4a7a214,1152,FinalizationRegistryRegister
code-creation,Builtin,2,2034583,0x7ff7c4a7a6b4,648,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,2034608,0x7ff7c4a7a954,328,FunctionPrototypeHasInstance
code-creation,Builtin,2,2034632,0x7ff7c4a7aab4,924,FastFunctionPrototypeBind
code-creation,Builtin,2,2034653,0x7ff7c4a7ae54,88,IncBlockCounter
code-creation,Builtin,2,2034672,0x7ff7c4a7aeb4,228,GetTemplateObject
code-creation,Builtin,2,2034693,0x7ff7c4a7afb4,28,BytecodeBudgetInterruptFromCode
code-creation,Builtin,2,2034713,0x7ff7c4a7afd4,92,ForInNext
code-creation,Builtin,2,2034733,0x7ff7c4a7b034,128,GetImportMetaObjectBaseline
code-creation,Builtin,2,2034753,0x7ff7c4a7b0d4,116,GetIteratorWithFeedback
code-creation,Builtin,2,2034774,0x7ff7c4a7b154,100,GetIteratorBaseline
code-creation,Builtin,2,2034795,0x7ff7c4a7b1d4,268,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,2034818,0x7ff7c4a7b2f4,1084,CallIteratorWithFeedback
code-creation,Builtin,2,2034838,0x7ff7c4a7b734,288,MathAbs
code-creation,Builtin,2,2034857,0x7ff7c4a7b874,428,MathCeil
code-creation,Builtin,2,2034879,0x7ff7c4a7ba34,432,MathFloor
code-creation,Builtin,2,2034969,0x7ff7c4a7bbf4,488,MathRound
code-creation,Builtin,2,2034996,0x7ff7c4a7bdf4,428,MathTrunc
code-creation,Builtin,2,2035017,0x7ff7c4a7bfb4,368,MathPow
code-creation,Builtin,2,2035037,0x7ff7c4a7c134,396,MathMax
code-creation,Builtin,2,2035057,0x7ff7c4a7c2d4,404,MathMin
code-creation,Builtin,2,2035076,0x7ff7c4a7c474,320,MathAcos
code-creation,Builtin,2,2035095,0x7ff7c4a7c5d4,320,MathAcosh
code-creation,Builtin,2,2035116,0x7ff7c4a7c734,320,MathAsin
code-creation,Builtin,2,2035135,0x7ff7c4a7c894,320,MathAsinh
code-creation,Builtin,2,2035156,0x7ff7c4a7c9f4,320,MathAtan
code-creation,Builtin,2,2035175,0x7ff7c4a7cb54,416,MathAtan2
code-creation,Builtin,2,2035193,0x7ff7c4a7cd14,320,MathAtanh
code-creation,Builtin,2,2035212,0x7ff7c4a7ce74,320,MathCbrt
code-creation,Builtin,2,2035233,0x7ff7c4a7cfd4,168,MathClz32
code-creation,Builtin,2,2035251,0x7ff7c4a7d094,320,MathCos
code-creation,Builtin,2,2035270,0x7ff7c4a7d1f4,320,MathCosh
code-creation,Builtin,2,2035288,0x7ff7c4a7d354,320,MathExp
code-creation,Builtin,2,2035307,0x7ff7c4a7d4b4,320,MathExpm1
code-creation,Builtin,2,2035326,0x7ff7c4a7d614,272,MathFround
code-creation,Builtin,2,2035346,0x7ff7c4a7d734,304,MathImul
code-creation,Builtin,2,2035364,0x7ff7c4a7d874,320,MathLog
code-creation,Builtin,2,2035384,0x7ff7c4a7d9d4,320,MathLog1p
code-creation,Builtin,2,2035402,0x7ff7c4a7db34,320,MathLog10
code-creation,Builtin,2,2035421,0x7ff7c4a7dc94,320,MathLog2
code-creation,Builtin,2,2035441,0x7ff7c4a7ddf4,320,MathSin
code-creation,Builtin,2,2035461,0x7ff7c4a7df54,180,MathSign
code-creation,Builtin,2,2035480,0x7ff7c4a7e014,320,MathSinh
code-creation,Builtin,2,2035498,0x7ff7c4a7e174,268,MathSqrt
code-creation,Builtin,2,2035515,0x7ff7c4a7e294,320,MathTan
code-creation,Builtin,2,2035533,0x7ff7c4a7e3f4,320,MathTanh
code-creation,Builtin,2,2035551,0x7ff7c4a7e554,1060,MathHypot
code-creation,Builtin,2,2035570,0x7ff7c4a7e994,332,MathRandom
code-creation,Builtin,2,2035589,0x7ff7c4a7eaf4,2956,NumberPrototypeToString
code-creation,Builtin,2,2035612,0x7ff7c4a7f694,136,NumberIsFinite
code-creation,Builtin,2,2035633,0x7ff7c4a7f734,340,NumberIsInteger
code-creation,Builtin,2,2035655,0x7ff7c4a7f894,116,NumberIsNaN
code-creation,Builtin,2,2035673,0x7ff7c4a7f914,372,NumberIsSafeInteger
code-creation,Builtin,2,2035691,0x7ff7c4a7fa94,156,NumberPrototypeValueOf
code-creation,Builtin,2,2035800,0x7ff7c4a7fb34,196,NumberParseFloat
code-creation,Builtin,2,2035826,0x7ff7c4a7fc14,248,ParseInt
code-creation,Builtin,2,2035844,0x7ff7c4a7fd14,84,NumberParseInt
code-creation,Builtin,2,2035862,0x7ff7c4a7fd74,860,Add
code-creation,Builtin,2,2035883,0x7ff7c4a800d4,424,Subtract
code-creation,Builtin,2,2035903,0x7ff7c4a80294,608,Multiply
code-creation,Builtin,2,2035925,0x7ff7c4a80514,532,Divide
code-creation,Builtin,2,2035948,0x7ff7c4a80734,592,Modulus
code-creation,Builtin,2,2035968,0x7ff7c4a80994,524,Exponentiate
code-creation,Builtin,2,2035986,0x7ff7c4a80bb4,344,Negate
code-creation,Builtin,2,2036003,0x7ff7c4a80d14,112,BitwiseNot
code-creation,Builtin,2,2036019,0x7ff7c4a80d94,112,Decrement
code-creation,Builtin,2,2036037,0x7ff7c4a80e14,112,Increment
code-creation,Builtin,2,2036055,0x7ff7c4a80e94,392,ShiftLeft
code-creation,Builtin,2,2036073,0x7ff7c4a81034,392,ShiftRight
code-creation,Builtin,2,2036094,0x7ff7c4a811d4,508,ShiftRightLogical
code-creation,Builtin,2,2036113,0x7ff7c4a813d4,388,BitwiseAnd
code-creation,Builtin,2,2036131,0x7ff7c4a81574,388,BitwiseOr
code-creation,Builtin,2,2036151,0x7ff7c4a81714,388,BitwiseXor
code-creation,Builtin,2,2036170,0x7ff7c4a818b4,796,LessThan
code-creation,Builtin,2,2036188,0x7ff7c4a81bd4,796,LessThanOrEqual
code-creation,Builtin,2,2036209,0x7ff7c4a81ef4,796,GreaterThan
code-creation,Builtin,2,2036226,0x7ff7c4a82214,796,GreaterThanOrEqual
code-creation,Builtin,2,2036245,0x7ff7c4a82534,860,Equal
code-creation,Builtin,2,2036263,0x7ff7c4a82894,348,StrictEqual
code-creation,Builtin,2,2036282,0x7ff7c4a829f4,3132,ObjectFromEntries
code-creation,Builtin,2,2036301,0x7ff7c4a83634,756,CreateObjectWithoutProperties
code-creation,Builtin,2,2036323,0x7ff7c4a83934,144,ObjectIsExtensible
code-creation,Builtin,2,2036347,0x7ff7c4a839d4,148,ObjectPreventExtensions
code-creation,Builtin,2,2036373,0x7ff7c4a83a74,144,ObjectGetPrototypeOf
code-creation,Builtin,2,2036394,0x7ff7c4a83b14,300,ObjectSetPrototypeOf
code-creation,Builtin,2,2036415,0x7ff7c4a83c54,80,ObjectPrototypeToString
code-creation,Builtin,2,2036436,0x7ff7c4a83cb4,96,ObjectPrototypeValueOf
code-creation,Builtin,2,2036455,0x7ff7c4a83d34,164,ObjectPrototypeToLocaleString
code-creation,Builtin,2,2036475,0x7ff7c4a83df4,868,FulfillPromise
code-creation,Builtin,2,2036494,0x7ff7c4a84174,988,RejectPromise
code-creation,Builtin,2,2036513,0x7ff7c4a84554,2416,NewPromiseCapability
code-creation,Builtin,2,2036534,0x7ff7c4a84ed4,164,PromiseCapabilityDefaultReject
code-creation,Builtin,2,2036554,0x7ff7c4a84f94,148,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,2036573,0x7ff7c4a85034,1416,PerformPromiseThen
code-creation,Builtin,2,2036592,0x7ff7c4a855d4,648,PromiseReject
code-creation,Builtin,2,2036610,0x7ff7c4a85874,284,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,2036634,0x7ff7c4a85994,104,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,2036658,0x7ff7c4a85a14,4560,PromiseAll
code-creation,Builtin,2,2036677,0x7ff7c4a86bf4,4880,PromiseAllSettled
code-creation,Builtin,2,2036697,0x7ff7c4a87f14,1104,PromiseAllResolveElementClosure
code-creation,Builtin,2,2036717,0x7ff7c4a88374,1392,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,2036739,0x7ff7c4a888f4,1400,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,2036759,0x7ff7c4a88e74,1180,PromiseAnyRejectElementClosure
code-creation,Builtin,2,2036781,0x7ff7c4a89314,2368,PromiseAny
code-creation,Builtin,2,2036803,0x7ff7c4a89c74,2908,PromiseConstructor
code-creation,Builtin,2,2036823,0x7ff7c4a8a7d4,296,PromisePrototypeCatch
code-creation,Builtin,2,2036845,0x7ff7c4a8a914,88,PromiseValueThunkFinally
code-creation,Builtin,2,2036867,0x7ff7c4a8a974,84,PromiseThrowerFinally
code-creation,Builtin,2,2036889,0x7ff7c4a8a9d4,904,PromiseCatchFinally
code-creation,Builtin,2,2036911,0x7ff7c4a8ad74,904,PromiseThenFinally
code-creation,Builtin,2,2036931,0x7ff7c4a8b114,1700,PromisePrototypeFinally
code-creation,Builtin,2,2036955,0x7ff7c4a8b7d4,1336,PromiseRace
code-creation,Builtin,2,2036974,0x7ff7c4a8bd14,268,PromiseFulfillReactionJob
code-creation,Builtin,2,2036995,0x7ff7c4a8be34,364,PromiseRejectReactionJob
code-creation,Builtin,2,2037017,0x7ff7c4a8bfb4,156,PromiseResolveTrampoline
code-creation,Builtin,2,2037040,0x7ff7c4a8c054,656,PromiseResolve
code-creation,Builtin,2,2037060,0x7ff7c4a8c2f4,712,ResolvePromise
code-creation,Builtin,2,2037079,0x7ff7c4a8c5d4,2224,PromisePrototypeThen
code-creation,Builtin,2,2037102,0x7ff7c4a8ce94,1144,PromiseResolveThenableJob
code-creation,Builtin,2,2037122,0x7ff7c4a8d314,448,ProxyConstructor
code-creation,Builtin,2,2037145,0x7ff7c4a8d4f4,1760,ProxyDeleteProperty
code-creation,Builtin,2,2037167,0x7ff7c4a8dbf4,2112,ProxyGetProperty
code-creation,Builtin,2,2037188,0x7ff7c4a8e454,1060,ProxyGetPrototypeOf
code-creation,Builtin,2,2037210,0x7ff7c4a8e894,1668,ProxyHasProperty
code-creation,Builtin,2,2037231,0x7ff7c4a8ef34,760,ProxyIsExtensible
code-creation,Builtin,2,2037251,0x7ff7c4a8f234,800,ProxyPreventExtensions
code-creation,Builtin,2,2037272,0x7ff7c4a8f574,1148,ProxyRevocable
code-creation,Builtin,2,2037293,0x7ff7c4a8f9f4,120,ProxyRevoke
code-creation,Builtin,2,2037313,0x7ff7c4a8fa74,2216,ProxySetProperty
code-creation,Builtin,2,2037335,0x7ff7c4a90334,1292,ProxySetPrototypeOf
code-creation,Builtin,2,2037359,0x7ff7c4a90854,208,ReflectIsExtensible
code-creation,Builtin,2,2037379,0x7ff7c4a90934,212,ReflectPreventExtensions
code-creation,Builtin,2,2037401,0x7ff7c4a90a14,188,ReflectGetPrototypeOf
code-creation,Builtin,2,2037421,0x7ff7c4a90ad4,292,ReflectSetPrototypeOf
code-creation,Builtin,2,2037441,0x7ff7c4a90c14,284,ReflectGet
code-creation,Builtin,2,2037462,0x7ff7c4a90d34,160,ReflectDeleteProperty
code-creation,Builtin,2,2037481,0x7ff7c4a90df4,148,ReflectHas
code-creation,Builtin,2,2037502,0x7ff7c4a90e94,5132,RegExpPrototypeExecSlow
code-creation,Builtin,2,2037528,0x7ff7c4a922b4,5104,RegExpPrototypeExec
code-creation,Builtin,2,2037555,0x7ff7c4a936b4,2360,RegExpPrototypeMatchAll
code-creation,Builtin,2,2037578,0x7ff7c4a93ff4,9428,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,2037600,0x7ff7c4a964d4,8840,RegExpMatchFast
code-creation,Builtin,2,2037623,0x7ff7c4a98774,3600,RegExpPrototypeMatch
code-creation,Builtin,2,2037644,0x7ff7c4a99594,6328,RegExpReplace
code-creation,Builtin,2,2037667,0x7ff7c4a9ae54,524,RegExpPrototypeReplace
code-creation,Builtin,2,2037774,0x7ff7c4a9b074,1424,RegExpSearchFast
code-creation,Builtin,2,2037803,0x7ff7c4a9b614,1640,RegExpPrototypeSearch
code-creation,Builtin,2,2037825,0x7ff7c4a9bc94,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,2037845,0x7ff7c4a9bd74,5872,RegExpSplit
code-creation,Builtin,2,2037865,0x7ff7c4a9d474,476,RegExpPrototypeSplit
code-creation,Builtin,2,2037885,0x7ff7c4a9d654,2252,RegExpPrototypeTest
code-creation,Builtin,2,2037905,0x7ff7c4a9df34,1360,RegExpPrototypeTestFast
code-creation,Builtin,2,2037926,0x7ff7c4a9e494,228,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,2037946,0x7ff7c4a9e594,244,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,2037967,0x7ff7c4a9e694,244,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,2037988,0x7ff7c4a9e794,244,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,2038010,0x7ff7c4a9e894,244,RegExpPrototypeLinearGetter
code-creation,Builtin,2,2038031,0x7ff7c4a9e994,244,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,2038052,0x7ff7c4a9ea94,272,RegExpPrototypeStickyGetter
code-creation,Builtin,2,2038074,0x7ff7c4a9ebb4,272,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,2038095,0x7ff7c4a9ecd4,2256,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,2038115,0x7ff7c4a9f5b4,1500,StringPrototypeAt
code-creation,Builtin,2,2038134,0x7ff7c4a9fb94,3008,StringPrototypeEndsWith
code-creation,Builtin,2,2038155,0x7ff7c4aa0774,480,CreateHTML
code-creation,Builtin,2,2038174,0x7ff7c4aa0974,164,StringPrototypeAnchor
code-creation,Builtin,2,2038195,0x7ff7c4aa0a34,128,StringPrototypeBig
code-creation,Builtin,2,2038214,0x7ff7c4aa0ad4,128,StringPrototypeBlink
code-creation,Builtin,2,2038235,0x7ff7c4aa0b74,128,StringPrototypeBold
code-creation,Builtin,2,2038254,0x7ff7c4aa0c14,168,StringPrototypeFontcolor
code-creation,Builtin,2,2038275,0x7ff7c4aa0cd4,168,StringPrototypeFontsize
code-creation,Builtin,2,2038296,0x7ff7c4aa0d94,128,StringPrototypeFixed
code-creation,Builtin,2,2038316,0x7ff7c4aa0e34,128,StringPrototypeItalics
code-creation,Builtin,2,2038337,0x7ff7c4aa0ed4,168,StringPrototypeLink
code-creation,Builtin,2,2038358,0x7ff7c4aa0f94,128,StringPrototypeSmall
code-creation,Builtin,2,2038379,0x7ff7c4aa1034,128,StringPrototypeStrike
code-creation,Builtin,2,2038399,0x7ff7c4aa10d4,128,StringPrototypeSub
code-creation,Builtin,2,2038420,0x7ff7c4aa1174,128,StringPrototypeSup
code-creation,Builtin,2,2038441,0x7ff7c4aa1214,1028,StringPrototypeIncludes
code-creation,Builtin,2,2038460,0x7ff7c4aa1634,628,StringPrototypeIndexOf
code-creation,Builtin,2,2038481,0x7ff7c4aa18b4,344,StringPrototypeIterator
code-creation,Builtin,2,2038503,0x7ff7c4aa1a14,2024,StringIteratorPrototypeNext
code-creation,Builtin,2,2038527,0x7ff7c4aa2214,1304,StringPrototypeMatch
code-creation,Builtin,2,2038548,0x7ff7c4aa2734,1304,StringPrototypeSearch
code-creation,Builtin,2,2038569,0x7ff7c4aa2c54,824,StringPrototypePadStart
code-creation,Builtin,2,2038589,0x7ff7c4aa2f94,824,StringPrototypePadEnd
code-creation,Builtin,2,2038612,0x7ff7c4aa32d4,120,StringRepeat
code-creation,Builtin,2,2038637,0x7ff7c4aa3354,400,StringPrototypeRepeat
code-creation,Builtin,2,2038661,0x7ff7c4aa34f4,11188,StringPrototypeReplaceAll
code-creation,Builtin,2,2038682,0x7ff7c4aa60b4,3388,StringPrototypeSlice
code-creation,Builtin,2,2038707,0x7ff7c4aa6df4,3028,StringPrototypeStartsWith
code-creation,Builtin,2,2038728,0x7ff7c4aa79d4,3328,StringPrototypeSubstr
code-creation,Builtin,2,2038750,0x7ff7c4aa86f4,3260,StringPrototypeSubstring
code-creation,Builtin,2,2038784,0x7ff7c4aa93b4,6916,StringPrototypeTrim
code-creation,Builtin,2,2038817,0x7ff7c4aaaed4,6332,StringPrototypeTrimStart
code-creation,Builtin,2,2038841,0x7ff7c4aac794,5836,StringPrototypeTrimEnd
code-creation,Builtin,2,2038862,0x7ff7c4aade74,160,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,2038885,0x7ff7c4aadf34,156,SymbolPrototypeToPrimitive
code-creation,Builtin,2,2038906,0x7ff7c4aadfd4,172,SymbolPrototypeToString
code-creation,Builtin,2,2038928,0x7ff7c4aae094,156,SymbolPrototypeValueOf
code-creation,Builtin,2,2038948,0x7ff7c4aae134,832,TypedArrayPrototypeAt
code-creation,Builtin,2,2038970,0x7ff7c4aae494,10064,CreateTypedArray
code-creation,Builtin,2,2038993,0x7ff7c4ab0bf4,1000,TypedArrayPrototypeEvery
code-creation,Builtin,2,2039015,0x7ff7c4ab0ff4,372,TypedArrayPrototypeEntries
code-creation,Builtin,2,2039038,0x7ff7c4ab1174,3512,TypedArrayPrototypeFilter
code-creation,Builtin,2,2039059,0x7ff7c4ab1f34,996,TypedArrayPrototypeFind
code-creation,Builtin,2,2039079,0x7ff7c4ab2334,1004,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,2039102,0x7ff7c4ab2734,428,FindLastAllElementsDetachedContinuation
code-creation,Builtin,2,2039124,0x7ff7c4ab28f4,1208,TypedArrayPrototypeFindLast
code-creation,Builtin,2,2039146,0x7ff7c4ab2db4,436,FindLastIndexAllElementsDetachedContinuation
code-creation,Builtin,2,2039169,0x7ff7c4ab2f74,1216,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,2039192,0x7ff7c4ab3454,864,TypedArrayPrototypeForEach
code-creation,Builtin,2,2039216,0x7ff7c4ab37d4,2352,TypedArrayFrom
code-creation,Builtin,2,2039235,0x7ff7c4ab4114,356,TypedArrayPrototypeKeys
code-creation,Builtin,2,2039257,0x7ff7c4ab4294,1028,TypedArrayOf
code-creation,Builtin,2,2039276,0x7ff7c4ab46b4,952,TypedArrayPrototypeReduce
code-creation,Builtin,2,2039297,0x7ff7c4ab4a74,944,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,2039318,0x7ff7c4ab4e34,2508,TypedArrayPrototypeSet
code-creation,Builtin,2,2039338,0x7ff7c4ab5814,3040,TypedArrayPrototypeSlice
code-creation,Builtin,2,2039359,0x7ff7c4ab6414,992,TypedArrayPrototypeSome
code-creation,Builtin,2,2039379,0x7ff7c4ab6814,1060,TypedArrayMergeSort
code-creation,Builtin,2,2039399,0x7ff7c4ab6c54,1620,TypedArrayPrototypeSort
code-creation,Builtin,2,2039419,0x7ff7c4ab72b4,2736,TypedArrayPrototypeSubArray
code-creation,Builtin,2,2039441,0x7ff7c4ab7d74,372,TypedArrayPrototypeValues
code-creation,Builtin,2,2039461,0x7ff7c4ab7ef4,952,WeakRefConstructor
code-creation,Builtin,2,2039482,0x7ff7c4ab82b4,184,WeakRefDeref
code-creation,Builtin,2,2039502,0x7ff7c4ab8374,680,NewSloppyArgumentsElements
code-creation,Builtin,2,2039523,0x7ff7c4ab8634,296,NewStrictArgumentsElements
code-creation,Builtin,2,2039544,0x7ff7c4ab8774,320,NewRestArgumentsElements
code-creation,Builtin,2,2039567,0x7ff7c4ab88d4,1388,FastNewSloppyArguments
code-creation,Builtin,2,2039589,0x7ff7c4ab8e54,524,FastNewStrictArguments
code-creation,Builtin,2,2039612,0x7ff7c4ab9074,556,FastNewRestArguments
code-creation,Builtin,2,2039634,0x7ff7c4ab92b4,676,StringSlowFlatten
code-creation,Builtin,2,2039654,0x7ff7c4ab9574,2068,StringIndexOf
code-creation,Builtin,2,2039676,0x7ff7c4ab9d94,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,2039696,0x7ff7c4ab9db4,20,TestHelperPlus1
code-creation,Builtin,2,2039815,0x7ff7c4ab9dd4,20,TestHelperPlus2
code-creation,Builtin,2,2039833,0x7ff7c4ab9df4,96,NewSmiBox
code-creation,Builtin,2,2039849,0x7ff7c4ab9e74,24,ReturnTwoValues
code-creation,Builtin,2,2039863,0x7ff7c4ab9e94,32,Load_FastSmiElements_0
code-creation,Builtin,2,2039879,0x7ff7c4ab9ed4,32,Load_FastObjectElements_0
code-creation,Builtin,2,2039895,0x7ff7c4ab9f14,144,Load_FastDoubleElements_0
code-creation,Builtin,2,2039911,0x7ff7c4ab9fb4,32,Store_FastSmiElements_0
code-creation,Builtin,2,2039927,0x7ff7c4ab9ff4,96,Store_FastObjectElements_0
code-creation,Builtin,2,2039942,0x7ff7c4aba074,48,Store_FastDoubleElements_0
code-creation,Builtin,2,2039958,0x7ff7c4aba0b4,36,Delete_FastSmiElements_0
code-creation,Builtin,2,2039974,0x7ff7c4aba0f4,36,Delete_FastObjectElements_0
code-creation,Builtin,2,2039989,0x7ff7c4aba134,44,Delete_FastDoubleElements_0
code-creation,Builtin,2,2040005,0x7ff7c4aba174,308,SortCompareDefault
code-creation,Builtin,2,2040026,0x7ff7c4aba2b4,92,SortCompareUserFn
code-creation,Builtin,2,2040046,0x7ff7c4aba314,8,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,2040063,0x7ff7c4aba334,312,Copy
code-creation,Builtin,2,2040079,0x7ff7c4aba474,5776,MergeAt
code-creation,Builtin,2,2040094,0x7ff7c4abbb14,792,GallopLeft
code-creation,Builtin,2,2040108,0x7ff7c4abbe34,832,GallopRight
code-creation,Builtin,2,2040123,0x7ff7c4abc194,3832,ArrayTimSort
code-creation,Builtin,2,2040138,0x7ff7c4abd094,2112,ArrayPrototypeSort
code-creation,Builtin,2,2040155,0x7ff7c4abd8f4,100,WasmInt32ToHeapNumber
code-creation,Builtin,2,2040172,0x7ff7c4abd974,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,2040188,0x7ff7c4abd9f4,76,WasmTaggedToFloat64
code-creation,Builtin,2,2040203,0x7ff7c4abda54,72,WasmMemoryGrow
code-creation,Builtin,2,2040218,0x7ff7c4abdab4,100,WasmTableInit
code-creation,Builtin,2,2040232,0x7ff7c4abdb34,100,WasmTableCopy
code-creation,Builtin,2,2040247,0x7ff7c4abdbb4,84,WasmTableFill
code-creation,Builtin,2,2040262,0x7ff7c4abdc14,72,WasmTableGrow
code-creation,Builtin,2,2040278,0x7ff7c4abdc74,144,WasmTableGet
code-creation,Builtin,2,2040293,0x7ff7c4abdd14,236,WasmTableSet
code-creation,Builtin,2,2040308,0x7ff7c4abde14,88,WasmRefFunc
code-creation,Builtin,2,2040323,0x7ff7c4abde74,144,WasmAllocateFixedArray
code-creation,Builtin,2,2040339,0x7ff7c4abdf14,44,WasmThrow
code-creation,Builtin,2,2040352,0x7ff7c4abdf54,52,WasmRethrow
code-creation,Builtin,2,2040368,0x7ff7c4abdf94,44,WasmTriggerTierUp
code-creation,Builtin,2,2040385,0x7ff7c4abdfd4,32,WasmStackGuard
code-creation,Builtin,2,2040400,0x7ff7c4abe014,32,WasmStackOverflow
code-creation,Builtin,2,2040416,0x7ff7c4abe054,40,WasmTraceMemory
code-creation,Builtin,2,2040431,0x7ff7c4abe094,32,WasmTraceEnter
code-creation,Builtin,2,2040445,0x7ff7c4abe0d4,40,WasmTraceExit
code-creation,Builtin,2,2040460,0x7ff7c4abe114,332,WasmAllocateJSArray
code-creation,Builtin,2,2040475,0x7ff7c4abe274,104,WasmAllocatePair
code-creation,Builtin,2,2040491,0x7ff7c4abe2f4,64,WasmAllocateRtt
code-creation,Builtin,2,2040506,0x7ff7c4abe354,72,WasmAllocateFreshRtt
code-creation,Builtin,2,2040522,0x7ff7c4abe3b4,124,WasmAllocateStructWithRtt
code-creation,Builtin,2,2040538,0x7ff7c4abe434,140,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,2040554,0x7ff7c4abe4d4,176,WasmAllocateArray_InitZero
code-creation,Builtin,2,2040570,0x7ff7c4abe594,176,WasmAllocateArray_InitNull
code-creation,Builtin,2,2040585,0x7ff7c4abe654,116,WasmArrayCopyWithChecks
code-creation,Builtin,2,2040600,0x7ff7c4abe6d4,60,WasmArrayCopy
code-creation,Builtin,2,2040617,0x7ff7c4abe714,240,WasmAllocateObjectWrapper
code-creation,Builtin,2,2040633,0x7ff7c4abe814,52,WasmSubtypeCheck
code-creation,Builtin,2,2040649,0x7ff7c4abe854,8,WasmInt32ToNumber
code-creation,Builtin,2,2040664,0x7ff7c4abe874,116,WasmUint32ToNumber
code-creation,Builtin,2,2040679,0x7ff7c4abe8f4,144,UintPtr53ToNumber
code-creation,Builtin,2,2040694,0x7ff7c4abe994,96,WasmAtomicNotify
code-creation,Builtin,2,2040709,0x7ff7c4abea14,116,WasmI32AtomicWait64
code-creation,Builtin,2,2040724,0x7ff7c4abea94,116,WasmI64AtomicWait64
code-creation,Builtin,2,2040740,0x7ff7c4abeb14,580,WasmGetOwnProperty
code-creation,Builtin,2,2040755,0x7ff7c4abed74,40,WasmTrap
code-creation,Builtin,2,2040770,0x7ff7c4abedb4,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,2040786,0x7ff7c4abedd4,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,2040802,0x7ff7c4abedf4,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,2040819,0x7ff7c4abee14,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,2040834,0x7ff7c4abee34,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,2040849,0x7ff7c4abee54,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,2040866,0x7ff7c4abee74,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,2040883,0x7ff7c4abee94,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,2040900,0x7ff7c4abeeb4,16,ThrowWasmTrapDataSegmentDropped
code-creation,Builtin,2,2040916,0x7ff7c4abeed4,16,ThrowWasmTrapElemSegmentDropped
code-creation,Builtin,2,2040941,0x7ff7c4abeef4,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,2040959,0x7ff7c4abef14,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,2040975,0x7ff7c4abef34,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,2040991,0x7ff7c4abef54,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,2041006,0x7ff7c4abef74,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,2041022,0x7ff7c4abef94,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,2041039,0x7ff7c4abefb4,172,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,2041057,0x7ff7c4abf074,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,2041073,0x7ff7c4abf094,116,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,2041092,0x7ff7c4abf114,112,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,2041108,0x7ff7c4abf194,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,2041131,0x7ff7c4abf1b4,220,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,2041150,0x7ff7c4abf294,248,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,2041167,0x7ff7c4abf394,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,2041183,0x7ff7c4abf3b4,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,2041199,0x7ff7c4abf3d4,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,2041215,0x7ff7c4abf3f4,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,2041232,0x7ff7c4abf414,132,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,2041249,0x7ff7c4abf4b4,8,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,2041265,0x7ff7c4abf4d4,32,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,2041282,0x7ff7c4abf514,32,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,2041299,0x7ff7c4abf554,32,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,2041316,0x7ff7c4abf594,2680,Load_GenericElementsAccessor_0
code-creation,Builtin,2,2041332,0x7ff7c4ac0014,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,2041348,0x7ff7c4ac0034,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,2041365,0x7ff7c4ac0074,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,2041382,0x7ff7c4ac0094,164,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,2041400,0x7ff7c4ac0154,180,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,2041417,0x7ff7c4ac0214,116,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,2041434,0x7ff7c4ac0294,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,2041451,0x7ff7c4ac02d4,156,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,2041467,0x7ff7c4ac0374,112,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,2041484,0x7ff7c4ac03f4,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,2041501,0x7ff7c4ac0414,152,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,2041520,0x7ff7c4ac04b4,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,2041536,0x7ff7c4ac04d4,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,2041554,0x7ff7c4ac04f4,620,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,2041572,0x7ff7c4ac0774,220,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,2041590,0x7ff7c4ac0854,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,2041609,0x7ff7c4ac0894,200,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,2041628,0x7ff7c4ac0974,248,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,2041644,0x7ff7c4ac0a74,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,2041661,0x7ff7c4ac0ab4,200,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,2041679,0x7ff7c4ac0b94,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,2041696,0x7ff7c4ac0bb4,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,2041832,0x7ff7c4ac0bd4,180,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,2041862,0x7ff7c4ac0c94,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,2041890,0x7ff7c4ac0cb4,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,2041917,0x7ff7c4ac0cd4,180,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,2041940,0x7ff7c4ac0d94,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,2041962,0x7ff7c4ac0db4,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,2041985,0x7ff7c4ac0dd4,180,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,2042008,0x7ff7c4ac0e94,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,2042031,0x7ff7c4ac0eb4,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,2042053,0x7ff7c4ac0ed4,180,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,2042077,0x7ff7c4ac0f94,132,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,2042100,0x7ff7c4ac1034,164,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,2042125,0x7ff7c4ac10f4,180,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,2042147,0x7ff7c4ac11b4,12,CollatorConstructor
code-creation,Builtin,2,2042168,0x7ff7c4ac11d4,12,CollatorInternalCompare
code-creation,Builtin,2,2042189,0x7ff7c4ac11f4,12,CollatorPrototypeCompare
code-creation,Builtin,2,2042218,0x7ff7c4ac1214,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,2042239,0x7ff7c4ac1234,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,2042262,0x7ff7c4ac1254,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,2042286,0x7ff7c4ac1274,12,DatePrototypeToLocaleString
code-creation,Builtin,2,2042309,0x7ff7c4ac1294,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,2042333,0x7ff7c4ac12b4,12,DateTimeFormatConstructor
code-creation,Builtin,2,2042358,0x7ff7c4ac12d4,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,2042379,0x7ff7c4ac12f4,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,2042401,0x7ff7c4ac1314,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,2042421,0x7ff7c4ac1334,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,2042442,0x7ff7c4ac1354,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,2042465,0x7ff7c4ac1374,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,2042487,0x7ff7c4ac1394,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,2042509,0x7ff7c4ac13b4,12,DisplayNamesConstructor
code-creation,Builtin,2,2042529,0x7ff7c4ac13d4,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,2042550,0x7ff7c4ac13f4,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,2042574,0x7ff7c4ac1414,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,2042594,0x7ff7c4ac1434,12,IntlGetCanonicalLocales
code-creation,Builtin,2,2042619,0x7ff7c4ac1454,12,ListFormatConstructor
code-creation,Builtin,2,2042639,0x7ff7c4ac1474,224,ListFormatPrototypeFormat
code-creation,Builtin,2,2042660,0x7ff7c4ac1574,224,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,2042682,0x7ff7c4ac1674,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,2042703,0x7ff7c4ac1694,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,2042725,0x7ff7c4ac16b4,12,LocaleConstructor
code-creation,Builtin,2,2042744,0x7ff7c4ac16d4,12,LocalePrototypeBaseName
code-creation,Builtin,2,2042768,0x7ff7c4ac16f4,12,LocalePrototypeCalendar
code-creation,Builtin,2,2042792,0x7ff7c4ac1714,12,LocalePrototypeCalendars
code-creation,Builtin,2,2042813,0x7ff7c4ac1734,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,2042834,0x7ff7c4ac1754,12,LocalePrototypeCollation
code-creation,Builtin,2,2042854,0x7ff7c4ac1774,12,LocalePrototypeCollations
code-creation,Builtin,2,2042874,0x7ff7c4ac1794,12,LocalePrototypeHourCycle
code-creation,Builtin,2,2042894,0x7ff7c4ac17b4,12,LocalePrototypeHourCycles
code-creation,Builtin,2,2042915,0x7ff7c4ac17d4,12,LocalePrototypeLanguage
code-creation,Builtin,2,2042935,0x7ff7c4ac17f4,12,LocalePrototypeMaximize
code-creation,Builtin,2,2042955,0x7ff7c4ac1814,12,LocalePrototypeMinimize
code-creation,Builtin,2,2042975,0x7ff7c4ac1834,12,LocalePrototypeNumeric
code-creation,Builtin,2,2042996,0x7ff7c4ac1854,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,2043027,0x7ff7c4ac1874,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,2043052,0x7ff7c4ac1894,12,LocalePrototypeRegion
code-creation,Builtin,2,2043073,0x7ff7c4ac18b4,12,LocalePrototypeScript
code-creation,Builtin,2,2043094,0x7ff7c4ac18d4,12,LocalePrototypeTextInfo
code-creation,Builtin,2,2043115,0x7ff7c4ac18f4,12,LocalePrototypeTimeZones
code-creation,Builtin,2,2043136,0x7ff7c4ac1914,12,LocalePrototypeToString
code-creation,Builtin,2,2043156,0x7ff7c4ac1934,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,2043176,0x7ff7c4ac1954,12,NumberFormatConstructor
code-creation,Builtin,2,2043197,0x7ff7c4ac1974,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,2043219,0x7ff7c4ac1994,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,2043242,0x7ff7c4ac19b4,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,2043263,0x7ff7c4ac19d4,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,2043284,0x7ff7c4ac19f4,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,2043305,0x7ff7c4ac1a14,12,PluralRulesConstructor
code-creation,Builtin,2,2043330,0x7ff7c4ac1a34,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,2043354,0x7ff7c4ac1a54,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,2043376,0x7ff7c4ac1a74,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,2043399,0x7ff7c4ac1a94,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,2043421,0x7ff7c4ac1ab4,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,2043443,0x7ff7c4ac1ad4,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,2043466,0x7ff7c4ac1af4,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,2043488,0x7ff7c4ac1b14,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,2043511,0x7ff7c4ac1b34,12,SegmenterConstructor
code-creation,Builtin,2,2043531,0x7ff7c4ac1b54,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,2043555,0x7ff7c4ac1b74,12,SegmenterPrototypeSegment
code-creation,Builtin,2,2043576,0x7ff7c4ac1b94,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,2043601,0x7ff7c4ac1bb4,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,2043624,0x7ff7c4ac1bd4,12,SegmentsPrototypeContaining
code-creation,Builtin,2,2043645,0x7ff7c4ac1bf4,12,SegmentsPrototypeIterator
code-creation,Builtin,2,2043754,0x7ff7c4ac1c14,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,2043779,0x7ff7c4ac1c34,12,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,2043800,0x7ff7c4ac1c54,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,2043823,0x7ff7c4ac1c74,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,2043844,0x7ff7c4ac1d54,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,2043864,0x7ff7c4ac1d74,636,StringToLowerCaseIntl
code-creation,Builtin,2,2043886,0x7ff7c4ac1ff4,12,V8BreakIteratorConstructor
code-creation,Builtin,2,2043906,0x7ff7c4ac2014,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,2043928,0x7ff7c4ac2034,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,2043949,0x7ff7c4ac2054,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,2043974,0x7ff7c4ac2074,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,2043995,0x7ff7c4ac2094,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,2044020,0x7ff7c4ac20b4,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,2044042,0x7ff7c4ac20d4,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,2044064,0x7ff7c4ac20f4,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,2044085,0x7ff7c4ac2114,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,2044106,0x7ff7c4ac2134,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,2044127,0x7ff7c4ac2154,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,2044149,0x7ff7c4ac2174,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,2044179,0x7ff7c4ac2194,24,Wide
code-creation,BytecodeHandler,0,2044199,0x7ff7c4ac21b4,24,ExtraWide
code-creation,BytecodeHandler,0,2044219,0x7ff7c4ac21d4,104,DebugBreakWide
code-creation,BytecodeHandler,0,2044249,0x7ff7c4ac2254,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,2044274,0x7ff7c4ac22d4,164,DebugBreak0
code-creation,BytecodeHandler,0,2044295,0x7ff7c4ac2394,104,DebugBreak1
code-creation,BytecodeHandler,0,2044316,0x7ff7c4ac2414,104,DebugBreak2
code-creation,BytecodeHandler,0,2044336,0x7ff7c4ac2494,104,DebugBreak3
code-creation,BytecodeHandler,0,2044356,0x7ff7c4ac2514,104,DebugBreak4
code-creation,BytecodeHandler,0,2044382,0x7ff7c4ac2594,104,DebugBreak5
code-creation,BytecodeHandler,0,2044402,0x7ff7c4ac2614,104,DebugBreak6
code-creation,BytecodeHandler,0,2044423,0x7ff7c4ac2694,32,Ldar
code-creation,BytecodeHandler,0,2044443,0x7ff7c4ac26d4,68,LdaZero
code-creation,BytecodeHandler,0,2044466,0x7ff7c4ac2734,76,LdaSmi
code-creation,BytecodeHandler,0,2044490,0x7ff7c4ac2794,68,LdaUndefined
code-creation,BytecodeHandler,0,2044510,0x7ff7c4ac27f4,68,LdaNull
code-creation,BytecodeHandler,0,2044531,0x7ff7c4ac2854,68,LdaTheHole
code-creation,BytecodeHandler,0,2044550,0x7ff7c4ac28b4,20,LdaTrue
code-creation,BytecodeHandler,0,2044571,0x7ff7c4ac28d4,20,LdaFalse
code-creation,BytecodeHandler,0,2044595,0x7ff7c4ac28f4,76,LdaConstant
code-creation,BytecodeHandler,0,2044617,0x7ff7c4ac2954,132,LdaContextSlot
code-creation,BytecodeHandler,0,2044640,0x7ff7c4ac29f4,132,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,2044663,0x7ff7c4ac2a94,88,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,2044689,0x7ff7c4ac2af4,88,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,2044712,0x7ff7c4ac2b54,32,Star
code-creation,BytecodeHandler,0,2044733,0x7ff7c4ac2b94,40,Mov
code-creation,BytecodeHandler,0,2044752,0x7ff7c4ac2bd4,40,PushContext
code-creation,BytecodeHandler,0,2044775,0x7ff7c4ac2c14,36,PopContext
code-creation,BytecodeHandler,0,2044796,0x7ff7c4ac2c54,48,TestReferenceEqual
code-creation,BytecodeHandler,0,2044819,0x7ff7c4ac2c94,52,TestUndetectable
code-creation,BytecodeHandler,0,2044839,0x7ff7c4ac2cd4,36,TestNull
code-creation,BytecodeHandler,0,2044862,0x7ff7c4ac2d14,36,TestUndefined
code-creation,BytecodeHandler,0,2044884,0x7ff7c4ac2d54,336,TestTypeOf
code-creation,BytecodeHandler,0,2044905,0x7ff7c4ac2eb4,6036,LdaGlobal
code-creation,BytecodeHandler,0,2044925,0x7ff7c4ac4654,4536,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,2044946,0x7ff7c4ac5814,168,StaGlobal
code-creation,BytecodeHandler,0,2044968,0x7ff7c4ac58d4,160,StaContextSlot
code-creation,BytecodeHandler,0,2044990,0x7ff7c4ac5994,116,StaCurrentContextSlot
code-creation,BytecodeHandler,0,2045012,0x7ff7c4ac5a14,124,LdaLookupSlot
code-creation,BytecodeHandler,0,2045036,0x7ff7c4ac5a94,240,LdaLookupContextSlot
code-creation,BytecodeHandler,0,2045060,0x7ff7c4ac5b94,4776,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,2045084,0x7ff7c4ac6e54,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,2045106,0x7ff7c4ac6ed4,240,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,2045129,0x7ff7c4ac6fd4,4740,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,2045152,0x7ff7c4ac8274,220,StaLookupSlot
code-creation,BytecodeHandler,0,2045173,0x7ff7c4ac8354,5216,LdaNamedProperty
code-creation,BytecodeHandler,0,2045194,0x7ff7c4ac97d4,180,LdaNamedPropertyFromSuper
code-creation,BytecodeHandler,0,2045215,0x7ff7c4ac9894,212,LdaKeyedProperty
code-creation,BytecodeHandler,0,2045233,0x7ff7c4ac9974,160,LdaModuleVariable
code-creation,BytecodeHandler,0,2045252,0x7ff7c4ac9a34,292,StaModuleVariable
code-creation,BytecodeHandler,0,2045270,0x7ff7c4ac9b74,172,StaNamedProperty
code-creation,BytecodeHandler,0,2045289,0x7ff7c4ac9c34,172,StaNamedOwnProperty
code-creation,BytecodeHandler,0,2045309,0x7ff7c4ac9cf4,164,StaKeyedProperty
code-creation,BytecodeHandler,0,2045328,0x7ff7c4ac9db4,164,StaInArrayLiteral
code-creation,BytecodeHandler,0,2045348,0x7ff7c4ac9e74,196,StaDataPropertyInLiteral
code-creation,BytecodeHandler,0,2045370,0x7ff7c4ac9f54,160,CollectTypeProfile
code-creation,BytecodeHandler,0,2045390,0x7ff7c4aca014,1028,Add
code-creation,BytecodeHandler,0,2045410,0x7ff7c4aca434,1064,Sub
code-creation,BytecodeHandler,0,2045429,0x7ff7c4aca874,1024,Mul
code-creation,BytecodeHandler,0,2045462,0x7ff7c4acac94,988,Div
code-creation,BytecodeHandler,0,2045486,0x7ff7c4acb074,912,Mod
code-creation,BytecodeHandler,0,2045507,0x7ff7c4acb414,964,Exp
code-creation,BytecodeHandler,0,2045526,0x7ff7c4acb7f4,876,BitwiseOr
code-creation,BytecodeHandler,0,2045547,0x7ff7c4acbb74,888,BitwiseXor
code-creation,BytecodeHandler,0,2045569,0x7ff7c4acbef4,888,BitwiseAnd
code-creation,BytecodeHandler,0,2045593,0x7ff7c4acc274,900,ShiftLeft
code-creation,BytecodeHandler,0,2045613,0x7ff7c4acc614,900,ShiftRight
code-creation,BytecodeHandler,0,2045634,0x7ff7c4acc9b4,1020,ShiftRightLogical
code-creation,BytecodeHandler,0,2045659,0x7ff7c4accdb4,960,AddSmi
code-creation,BytecodeHandler,0,2045679,0x7ff7c4acd194,1000,SubSmi
code-creation,BytecodeHandler,0,2045901,0x7ff7c4acd594,916,MulSmi
code-creation,BytecodeHandler,0,2045923,0x7ff7c4acd934,920,DivSmi
code-creation,BytecodeHandler,0,2045944,0x7ff7c4acdcd4,816,ModSmi
code-creation,BytecodeHandler,0,2045966,0x7ff7c4ace014,872,ExpSmi
code-creation,BytecodeHandler,0,2045984,0x7ff7c4ace394,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,2046005,0x7ff7c4ace594,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,2046025,0x7ff7c4ace794,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,2046048,0x7ff7c4ace994,488,ShiftLeftSmi
code-creation,BytecodeHandler,0,2046070,0x7ff7c4aceb94,488,ShiftRightSmi
code-creation,BytecodeHandler,0,2046092,0x7ff7c4aced94,640,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,2046115,0x7ff7c4acf034,656,Inc
code-creation,BytecodeHandler,0,2046134,0x7ff7c4acf2d4,656,Dec
code-creation,BytecodeHandler,0,2046154,0x7ff7c4acf574,640,Negate
code-creation,BytecodeHandler,0,2046175,0x7ff7c4acf814,480,BitwiseNot
code-creation,BytecodeHandler,0,2046195,0x7ff7c4acfa14,108,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,2046217,0x7ff7c4acfa94,36,LogicalNot
code-creation,BytecodeHandler,0,2046235,0x7ff7c4acfad4,208,TypeOf
code-creation,BytecodeHandler,0,2046253,0x7ff7c4acfbb4,120,DeletePropertyStrict
code-creation,BytecodeHandler,0,2046273,0x7ff7c4acfc34,112,DeletePropertySloppy
code-creation,BytecodeHandler,0,2046292,0x7ff7c4acfcb4,40,GetSuperConstructor
code-creation,BytecodeHandler,0,2046312,0x7ff7c4acfcf4,1132,CallAnyReceiver
code-creation,BytecodeHandler,0,2046332,0x7ff7c4ad0174,1132,CallProperty
code-creation,BytecodeHandler,0,2046351,0x7ff7c4ad05f4,1012,CallProperty0
code-creation,BytecodeHandler,0,2046371,0x7ff7c4ad09f4,1028,CallProperty1
code-creation,BytecodeHandler,0,2046392,0x7ff7c4ad0e14,1040,CallProperty2
code-creation,BytecodeHandler,0,2046412,0x7ff7c4ad1234,1016,CallUndefinedReceiver
code-creation,BytecodeHandler,0,2046434,0x7ff7c4ad1634,1048,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,2046456,0x7ff7c4ad1a54,1020,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,2046477,0x7ff7c4ad1e54,1040,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,2046498,0x7ff7c4ad2274,1132,CallWithSpread
code-creation,BytecodeHandler,0,2046518,0x7ff7c4ad26f4,124,CallRuntime
code-creation,BytecodeHandler,0,2046537,0x7ff7c4ad2774,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,2046558,0x7ff7c4ad2814,80,CallJSRuntime
code-creation,BytecodeHandler,0,2046583,0x7ff7c4ad2874,1236,InvokeIntrinsic
code-creation,BytecodeHandler,0,2046608,0x7ff7c4ad2d54,1020,Construct
code-creation,BytecodeHandler,0,2046631,0x7ff7c4ad3154,536,ConstructWithSpread
code-creation,BytecodeHandler,0,2046652,0x7ff7c4ad3374,1936,TestEqual
code-creation,BytecodeHandler,0,2046673,0x7ff7c4ad3b14,1064,TestEqualStrict
code-creation,BytecodeHandler,0,2046694,0x7ff7c4ad3f54,1624,TestLessThan
code-creation,BytecodeHandler,0,2046717,0x7ff7c4ad45b4,1624,TestGreaterThan
code-creation,BytecodeHandler,0,2046740,0x7ff7c4ad4c14,1624,TestLessThanOrEqual
code-creation,BytecodeHandler,0,2046761,0x7ff7c4ad5274,1624,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,2046784,0x7ff7c4ad58d4,860,TestInstanceOf
code-creation,BytecodeHandler,0,2046804,0x7ff7c4ad5c34,156,TestIn
code-creation,BytecodeHandler,0,2046825,0x7ff7c4ad5cd4,112,ToName
code-creation,BytecodeHandler,0,2046853,0x7ff7c4ad5d54,212,ToNumber
code-creation,BytecodeHandler,0,2046877,0x7ff7c4ad5e34,232,ToNumeric
code-creation,BytecodeHandler,0,2046898,0x7ff7c4ad5f34,112,ToObject
code-creation,BytecodeHandler,0,2046918,0x7ff7c4ad5fb4,116,ToString
code-creation,BytecodeHandler,0,2046942,0x7ff7c4ad6034,400,CreateRegExpLiteral
code-creation,BytecodeHandler,0,2046966,0x7ff7c4ad61d4,1468,CreateArrayLiteral
code-creation,BytecodeHandler,0,2046989,0x7ff7c4ad6794,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,2047014,0x7ff7c4ad67f4,788,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,2047036,0x7ff7c4ad6b14,2140,CreateObjectLiteral
code-creation,BytecodeHandler,0,2047057,0x7ff7c4ad7374,224,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,2047080,0x7ff7c4ad7474,168,CloneObject
code-creation,BytecodeHandler,0,2047099,0x7ff7c4ad7534,212,GetTemplateObject
code-creation,BytecodeHandler,0,2047121,0x7ff7c4ad7614,328,CreateClosure
code-creation,BytecodeHandler,0,2047141,0x7ff7c4ad7774,120,CreateBlockContext
code-creation,BytecodeHandler,0,2047164,0x7ff7c4ad77f4,132,CreateCatchContext
code-creation,BytecodeHandler,0,2047187,0x7ff7c4ad7894,256,CreateFunctionContext
code-creation,BytecodeHandler,0,2047207,0x7ff7c4ad79b4,256,CreateEvalContext
code-creation,BytecodeHandler,0,2047231,0x7ff7c4ad7ad4,132,CreateWithContext
code-creation,BytecodeHandler,0,2047251,0x7ff7c4ad7b74,1568,CreateMappedArguments
code-creation,BytecodeHandler,0,2047272,0x7ff7c4ad81b4,592,CreateUnmappedArguments
code-creation,BytecodeHandler,0,2047296,0x7ff7c4ad8414,632,CreateRestParameter
code-creation,BytecodeHandler,0,2047316,0x7ff7c4ad8694,424,JumpLoop
code-creation,BytecodeHandler,0,2047338,0x7ff7c4ad8854,44,Jump
code-creation,BytecodeHandler,0,2047357,0x7ff7c4ad8894,56,JumpConstant
code-creation,BytecodeHandler,0,2047378,0x7ff7c4ad88d4,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,2047404,0x7ff7c4ad8934,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,2047424,0x7ff7c4ad8994,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,2047447,0x7ff7c4ad89f4,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,2047468,0x7ff7c4ad8a54,84,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,2047491,0x7ff7c4ad8ab4,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,2047513,0x7ff7c4ad8b14,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,2047533,0x7ff7c4ad8b74,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,2047553,0x7ff7c4ad8bd4,152,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,2047573,0x7ff7c4ad8c74,152,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,2047601,0x7ff7c4ad8d14,136,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,2047622,0x7ff7c4ad8db4,136,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,2047642,0x7ff7c4ad8e54,64,JumpIfTrue
code-creation,BytecodeHandler,0,2047662,0x7ff7c4ad8eb4,64,JumpIfFalse
code-creation,BytecodeHandler,0,2047681,0x7ff7c4ad8f14,64,JumpIfNull
code-creation,BytecodeHandler,0,2047699,0x7ff7c4ad8f74,64,JumpIfNotNull
code-creation,BytecodeHandler,0,2047718,0x7ff7c4ad8fd4,64,JumpIfUndefined
code-creation,BytecodeHandler,0,2047738,0x7ff7c4ad9034,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,2047759,0x7ff7c4ad9094,72,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,2047781,0x7ff7c4ad90f4,76,JumpIfJSReceiver
code-creation,BytecodeHandler,0,2048037,0x7ff7c4ad9154,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,2048061,0x7ff7c4ad91d4,464,ForInEnumerate
code-creation,BytecodeHandler,0,2048079,0x7ff7c4ad93b4,252,ForInPrepare
code-creation,BytecodeHandler,0,2048099,0x7ff7c4ad94b4,60,ForInContinue
code-creation,BytecodeHandler,0,2048119,0x7ff7c4ad94f4,256,ForInNext
code-creation,BytecodeHandler,0,2048140,0x7ff7c4ad9614,48,ForInStep
code-creation,BytecodeHandler,0,2048162,0x7ff7c4ad9654,36,SetPendingMessage
code-creation,BytecodeHandler,0,2048181,0x7ff7c4ad9694,116,Throw
code-creation,BytecodeHandler,0,2048201,0x7ff7c4ad9714,116,ReThrow
code-creation,BytecodeHandler,0,2048221,0x7ff7c4ad9794,112,Return
code-creation,BytecodeHandler,0,2048251,0x7ff7c4ad9814,196,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,2048276,0x7ff7c4ad98f4,132,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,2048298,0x7ff7c4ad9994,132,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,2048321,0x7ff7c4ad9a34,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,2048344,0x7ff7c4ad9ad4,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,2048368,0x7ff7c4ad9b54,512,SuspendGenerator
code-creation,BytecodeHandler,0,2048388,0x7ff7c4ad9d74,128,ResumeGenerator
code-creation,BytecodeHandler,0,2048410,0x7ff7c4ad9e14,152,GetIterator
code-creation,BytecodeHandler,0,2048438,0x7ff7c4ad9eb4,116,Debugger
code-creation,BytecodeHandler,0,2048459,0x7ff7c4ad9f34,124,IncBlockCounter
code-creation,BytecodeHandler,0,2048479,0x7ff7c4ad9fb4,56,Abort
code-creation,BytecodeHandler,0,2048501,0x7ff7c4ad9ff4,32,Star0
code-creation,BytecodeHandler,0,2048520,0x7ff7c4ada034,60,Illegal
code-creation,BytecodeHandler,0,2048548,0x7ff7c4ada074,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,2048571,0x7ff7c4ada0f4,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,2048600,0x7ff7c4ada174,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,2048622,0x7ff7c4ada1f4,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,2048645,0x7ff7c4ada274,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,2048667,0x7ff7c4ada2f4,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,2048688,0x7ff7c4ada374,32,Ldar.Wide
code-creation,BytecodeHandler,0,2048709,0x7ff7c4ada3b4,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,2048729,0x7ff7c4ada3f4,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,2048748,0x7ff7c4ada434,92,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,2048769,0x7ff7c4ada494,92,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,2048793,0x7ff7c4ada4f4,48,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,2048815,0x7ff7c4ada534,48,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,2048837,0x7ff7c4ada574,32,Star.Wide
code-creation,BytecodeHandler,0,2048857,0x7ff7c4ada5b4,40,Mov.Wide
code-creation,BytecodeHandler,0,2048875,0x7ff7c4ada5f4,40,PushContext.Wide
code-creation,BytecodeHandler,0,2048898,0x7ff7c4ada634,36,PopContext.Wide
code-creation,BytecodeHandler,0,2048920,0x7ff7c4ada674,48,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,2048942,0x7ff7c4ada6b4,4668,LdaGlobal.Wide
tick,0x7ff7c3ef2ac4,2048966,0,0x0,6
tick,0x7ff7c4f50907,2049004,0,0x0,6
tick,0x7ff7c3ef4852,2049022,0,0x0,6
tick,0x7ff86ea7faf4,2049042,0,0x0,6
tick,0x7ff86ea7faf4,2049060,0,0x0,6
tick,0x7ff7c4f53cec,2049080,0,0x0,6
tick,0x7ff86ea7faf4,2049100,0,0x0,6
tick,0x7ff86e9f404f,2049118,0,0x0,6
tick,0x7ff7c3ef0baf,2049138,0,0x0,6
tick,0x7ff86ea7faf4,2049157,0,0x0,6
tick,0x7ff7c49458ec,2049174,0,0x0,6
tick,0x7ff7c4f64699,2049193,0,0x0,6
tick,0x7ff86ea7faf4,2049211,0,0x0,6
tick,0x7ff7c4f64869,2049230,0,0x0,6
tick,0x7ff7c3f6f91e,2049247,0,0x0,6
tick,0x7ff7c4f46678,2049265,0,0x0,6
code-creation,BytecodeHandler,0,2049293,0x7ff7c4adb8f4,4604,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,2049334,0x7ff7c4adcaf4,172,StaGlobal.Wide
code-creation,BytecodeHandler,0,2049359,0x7ff7c4adcbb4,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,2049380,0x7ff7c4adcc74,116,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,2049400,0x7ff7c4adccf4,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,2049419,0x7ff7c4adcd94,244,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,2049441,0x7ff7c4adce94,4852,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,2049462,0x7ff7c4ade194,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,2049484,0x7ff7c4ade234,244,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,2049507,0x7ff7c4ade334,4812,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,2049533,0x7ff7c4adf614,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,2049556,0x7ff7c4adf6f4,5216,LdaNamedProperty.Wide
code-creation,BytecodeHandler,0,2049578,0x7ff7c4ae0b74,188,LdaNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,2049623,0x7ff7c4ae0c34,160,LdaKeyedProperty.Wide
code-creation,BytecodeHandler,0,2049651,0x7ff7c4ae0cf4,160,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,2049747,0x7ff7c4ae0db4,300,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,2049772,0x7ff7c4ae0ef4,176,StaNamedProperty.Wide
code-creation,BytecodeHandler,0,2049795,0x7ff7c4ae0fb4,176,StaNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,2049816,0x7ff7c4ae1074,168,StaKeyedProperty.Wide
code-creation,BytecodeHandler,0,2049840,0x7ff7c4ae1134,168,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,2049862,0x7ff7c4ae11f4,200,StaDataPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,2049892,0x7ff7c4ae12d4,164,CollectTypeProfile.Wide
code-creation,BytecodeHandler,0,2049917,0x7ff7c4ae1394,984,Add.Wide
code-creation,BytecodeHandler,0,2049936,0x7ff7c4ae1774,1020,Sub.Wide
code-creation,BytecodeHandler,0,2049956,0x7ff7c4ae1b74,972,Mul.Wide
code-creation,BytecodeHandler,0,2049977,0x7ff7c4ae1f54,988,Div.Wide
code-creation,BytecodeHandler,0,2049999,0x7ff7c4ae2334,916,Mod.Wide
code-creation,BytecodeHandler,0,2050021,0x7ff7c4ae26d4,988,Exp.Wide
code-creation,BytecodeHandler,0,2050043,0x7ff7c4ae2ab4,904,BitwiseOr.Wide
code-creation,BytecodeHandler,0,2050066,0x7ff7c4ae2e54,920,BitwiseXor.Wide
code-creation,BytecodeHandler,0,2050088,0x7ff7c4ae31f4,920,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,2050111,0x7ff7c4ae3594,932,ShiftLeft.Wide
code-creation,BytecodeHandler,0,2050132,0x7ff7c4ae3954,932,ShiftRight.Wide
code-creation,BytecodeHandler,0,2050154,0x7ff7c4ae3d14,1052,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,2050176,0x7ff7c4ae4134,916,AddSmi.Wide
code-creation,BytecodeHandler,0,2050198,0x7ff7c4ae44d4,960,SubSmi.Wide
code-creation,BytecodeHandler,0,2050220,0x7ff7c4ae48b4,912,MulSmi.Wide
code-creation,BytecodeHandler,0,2050245,0x7ff7c4ae4c54,920,DivSmi.Wide
code-creation,BytecodeHandler,0,2050264,0x7ff7c4ae4ff4,816,ModSmi.Wide
code-creation,BytecodeHandler,0,2050284,0x7ff7c4ae5334,872,ExpSmi.Wide
code-creation,BytecodeHandler,0,2050303,0x7ff7c4ae56b4,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,2050323,0x7ff7c4ae58b4,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,2050345,0x7ff7c4ae5ab4,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,2050368,0x7ff7c4ae5cb4,496,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,2050392,0x7ff7c4ae5eb4,496,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,2050414,0x7ff7c4ae60b4,648,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,2050436,0x7ff7c4ae6354,616,Inc.Wide
code-creation,BytecodeHandler,0,2050457,0x7ff7c4ae65d4,616,Dec.Wide
code-creation,BytecodeHandler,0,2050477,0x7ff7c4ae6854,648,Negate.Wide
code-creation,BytecodeHandler,0,2050497,0x7ff7c4ae6af4,492,BitwiseNot.Wide
code-creation,BytecodeHandler,0,2050519,0x7ff7c4ae6cf4,124,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,2050541,0x7ff7c4ae6d74,116,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,2050564,0x7ff7c4ae6df4,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,2050591,0x7ff7c4ae6e34,1136,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,2050612,0x7ff7c4ae72b4,1136,CallProperty.Wide
code-creation,BytecodeHandler,0,2050633,0x7ff7c4ae7734,1016,CallProperty0.Wide
code-creation,BytecodeHandler,0,2050654,0x7ff7c4ae7b34,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,2050675,0x7ff7c4ae7f54,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,2050698,0x7ff7c4ae8374,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,2050719,0x7ff7c4ae8774,1052,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,2050743,0x7ff7c4ae8b94,1024,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,2050764,0x7ff7c4ae8fb4,1044,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,2050788,0x7ff7c4ae93d4,1136,CallWithSpread.Wide
code-creation,BytecodeHandler,0,2050809,0x7ff7c4ae9854,128,CallRuntime.Wide
code-creation,BytecodeHandler,0,2050828,0x7ff7c4ae98f4,168,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,2050852,0x7ff7c4ae99b4,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,2050878,0x7ff7c4ae9a14,1240,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,2050903,0x7ff7c4ae9ef4,968,Construct.Wide
code-creation,BytecodeHandler,0,2050926,0x7ff7c4aea2d4,476,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,2050947,0x7ff7c4aea4b4,1964,TestEqual.Wide
code-creation,BytecodeHandler,0,2050973,0x7ff7c4aeac74,1068,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,2050995,0x7ff7c4aeb0b4,1512,TestLessThan.Wide
code-creation,BytecodeHandler,0,2051018,0x7ff7c4aeb6b4,1512,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,2051039,0x7ff7c4aebcb4,1512,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,2051066,0x7ff7c4aec2b4,1512,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,2051088,0x7ff7c4aec8b4,864,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,2051109,0x7ff7c4aecc34,160,TestIn.Wide
code-creation,BytecodeHandler,0,2051129,0x7ff7c4aeccf4,116,ToName.Wide
code-creation,BytecodeHandler,0,2051150,0x7ff7c4aecd74,216,ToNumber.Wide
code-creation,BytecodeHandler,0,2051171,0x7ff7c4aece54,236,ToNumeric.Wide
code-creation,BytecodeHandler,0,2051190,0x7ff7c4aecf54,116,ToObject.Wide
code-creation,BytecodeHandler,0,2051210,0x7ff7c4aecfd4,404,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,2051232,0x7ff7c4aed174,1376,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,2051254,0x7ff7c4aed6f4,788,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,2051276,0x7ff7c4aeda14,2040,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,2051298,0x7ff7c4aee214,172,CloneObject.Wide
code-creation,BytecodeHandler,0,2051317,0x7ff7c4aee2d4,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,2051338,0x7ff7c4aee394,320,CreateClosure.Wide
code-creation,BytecodeHandler,0,2051359,0x7ff7c4aee4f4,124,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,2051381,0x7ff7c4aee574,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,2051404,0x7ff7c4aee614,256,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,2051426,0x7ff7c4aee734,256,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,2051448,0x7ff7c4aee854,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,2051471,0x7ff7c4aee8f4,440,JumpLoop.Wide
code-creation,BytecodeHandler,0,2051492,0x7ff7c4aeeab4,44,Jump.Wide
code-creation,BytecodeHandler,0,2051516,0x7ff7c4aeeaf4,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,2051537,0x7ff7c4aeeb34,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,2051562,0x7ff7c4aeeb94,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,2051589,0x7ff7c4aeebf4,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,2051612,0x7ff7c4aeec54,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,2051635,0x7ff7c4aeecb4,84,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,2051660,0x7ff7c4aeed14,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,2051680,0x7ff7c4aeed74,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,2051831,0x7ff7c4aeedd4,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,2051861,0x7ff7c4aeee34,152,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,2051886,0x7ff7c4aeeed4,152,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,2051908,0x7ff7c4aeef74,136,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,2051930,0x7ff7c4aef014,136,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,2051953,0x7ff7c4aef0b4,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,2051975,0x7ff7c4aef114,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,2051996,0x7ff7c4aef174,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,2052016,0x7ff7c4aef1d4,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,2052040,0x7ff7c4aef234,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,2052061,0x7ff7c4aef294,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,2052083,0x7ff7c4aef2f4,72,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,2052106,0x7ff7c4aef354,76,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,2052133,0x7ff7c4aef3b4,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,2052163,0x7ff7c4aef434,468,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,2052185,0x7ff7c4aef614,252,ForInPrepare.Wide
code-creation,BytecodeHandler,0,2052210,0x7ff7c4aef714,60,ForInContinue.Wide
code-creation,BytecodeHandler,0,2052232,0x7ff7c4aef754,260,ForInNext.Wide
code-creation,BytecodeHandler,0,2052254,0x7ff7c4aef874,48,ForInStep.Wide
code-creation,BytecodeHandler,0,2052279,0x7ff7c4aef8b4,156,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,2052302,0x7ff7c4aef954,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,2052327,0x7ff7c4aefa14,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,2052348,0x7ff7c4aefa94,516,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,2052368,0x7ff7c4aefcb4,128,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,2052390,0x7ff7c4aefd54,156,GetIterator.Wide
code-creation,BytecodeHandler,0,2052411,0x7ff7c4aefdf4,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,2052431,0x7ff7c4aefe94,56,Abort.Wide
code-creation,BytecodeHandler,0,2052451,0x7ff7c4aefed4,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,2052471,0x7ff7c4aeff54,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,2052493,0x7ff7c4aeffd4,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,2052514,0x7ff7c4af0054,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,2052535,0x7ff7c4af00d4,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,2052557,0x7ff7c4af0154,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,2052582,0x7ff7c4af01d4,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,2052603,0x7ff7c4af0214,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,2052623,0x7ff7c4af0234,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,2052644,0x7ff7c4af0274,88,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,2052664,0x7ff7c4af02d4,88,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,2052687,0x7ff7c4af0334,48,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,2052709,0x7ff7c4af0374,48,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,2052737,0x7ff7c4af03b4,28,Star.ExtraWide
code-creation,BytecodeHandler,0,2052764,0x7ff7c4af03d4,40,Mov.ExtraWide
code-creation,BytecodeHandler,0,2052791,0x7ff7c4af0414,36,PushContext.ExtraWide
code-creation,BytecodeHandler,0,2052817,0x7ff7c4af0454,32,PopContext.ExtraWide
code-creation,BytecodeHandler,0,2052842,0x7ff7c4af0494,48,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,2052864,0x7ff7c4af04d4,4656,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,2052884,0x7ff7c4af1714,4592,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,2052905,0x7ff7c4af2914,168,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,2052926,0x7ff7c4af29d4,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,2052949,0x7ff7c4af2a74,116,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,2052970,0x7ff7c4af2af4,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,2052994,0x7ff7c4af2b94,240,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,2053016,0x7ff7c4af2c94,4836,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,2053039,0x7ff7c4af3f94,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,2053061,0x7ff7c4af4034,240,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,2053084,0x7ff7c4af4134,4800,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,2053107,0x7ff7c4af5414,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,2053129,0x7ff7c4af54f4,5196,LdaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,2053151,0x7ff7c4af6954,184,LdaNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,2053175,0x7ff7c4af6a14,156,LdaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,2053198,0x7ff7c4af6ab4,160,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,2053223,0x7ff7c4af6b74,296,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,2053252,0x7ff7c4af6cb4,172,StaNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,2053278,0x7ff7c4af6d74,172,StaNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,2053299,0x7ff7c4af6e34,168,StaKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,2053322,0x7ff7c4af6ef4,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,2053346,0x7ff7c4af6fb4,196,StaDataPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,2053369,0x7ff7c4af7094,164,CollectTypeProfile.ExtraWide
code-creation,BytecodeHandler,0,2053392,0x7ff7c4af7154,980,Add.ExtraWide
code-creation,BytecodeHandler,0,2053410,0x7ff7c4af7534,1016,Sub.ExtraWide
code-creation,BytecodeHandler,0,2053431,0x7ff7c4af7934,972,Mul.ExtraWide
code-creation,BytecodeHandler,0,2053452,0x7ff7c4af7d14,988,Div.ExtraWide
code-creation,BytecodeHandler,0,2053472,0x7ff7c4af80f4,916,Mod.ExtraWide
code-creation,BytecodeHandler,0,2053493,0x7ff7c4af8494,984,Exp.ExtraWide
code-creation,BytecodeHandler,0,2053513,0x7ff7c4af8874,904,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,2053532,0x7ff7c4af8c14,916,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,2053553,0x7ff7c4af8fb4,916,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,2053627,0x7ff7c4af9354,928,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,2053807,0x7ff7c4af9714,928,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,2053832,0x7ff7c4af9ad4,1048,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,2053855,0x7ff7c4af9ef4,916,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,2053877,0x7ff7c4afa294,960,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,2053901,0x7ff7c4afa674,912,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,2053934,0x7ff7c4afaa14,916,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,2053964,0x7ff7c4afadb4,816,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,2053992,0x7ff7c4afb0f4,872,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,2054015,0x7ff7c4afb474,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,2054039,0x7ff7c4afb674,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,2054062,0x7ff7c4afb874,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,2054082,0x7ff7c4afba74,492,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,2054101,0x7ff7c4afbc74,492,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,2054123,0x7ff7c4afbe74,644,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,2054146,0x7ff7c4afc114,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,2054168,0x7ff7c4afc394,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,2054189,0x7ff7c4afc614,644,Negate.ExtraWide
code-creation,BytecodeHandler,0,2054214,0x7ff7c4afc8b4,488,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,2054237,0x7ff7c4afcab4,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,2054259,0x7ff7c4afcb34,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,2054283,0x7ff7c4afcbb4,36,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,2054306,0x7ff7c4afcbf4,1128,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,2054328,0x7ff7c4afd074,1128,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,2054350,0x7ff7c4afd4f4,1012,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,2054373,0x7ff7c4afd8f4,1024,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,2054396,0x7ff7c4afdd14,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,2054418,0x7ff7c4afe134,1016,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,2054444,0x7ff7c4afe534,1048,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,2054468,0x7ff7c4afe954,1020,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,2054497,0x7ff7c4afed54,1040,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,2054519,0x7ff7c4aff174,1128,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,2054541,0x7ff7c4aff5f4,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,2054567,0x7ff7c4aff694,164,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,2054589,0x7ff7c4aff754,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,2054715,0x7ff7c4aff7b4,1240,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,2054753,0x7ff7c4affc94,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,2054778,0x7ff7c4b00074,472,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,2054804,0x7ff7c4b00254,1964,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,2054827,0x7ff7c4b00a14,1068,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,2054850,0x7ff7c4b00e54,1508,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,2054873,0x7ff7c4b01454,1508,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,2054896,0x7ff7c4b01a54,1508,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,2054919,0x7ff7c4b02054,1508,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,2054940,0x7ff7c4b02654,864,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,2054961,0x7ff7c4b029d4,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,2054982,0x7ff7c4b02a74,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,2055004,0x7ff7c4b02af4,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,2055026,0x7ff7c4b02bd4,236,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,2055049,0x7ff7c4b02cd4,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,2055075,0x7ff7c4b02d54,400,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,2055099,0x7ff7c4b02ef4,1376,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,2055121,0x7ff7c4b03474,788,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,2055145,0x7ff7c4b03794,2040,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,2055170,0x7ff7c4b03f94,168,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,2055197,0x7ff7c4b04054,160,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,2055222,0x7ff7c4b04114,320,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,2055246,0x7ff7c4b04274,124,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,2055270,0x7ff7c4b042f4,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,2055293,0x7ff7c4b04394,256,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,2055316,0x7ff7c4b044b4,256,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,2055340,0x7ff7c4b045d4,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,2055363,0x7ff7c4b04674,436,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,2055385,0x7ff7c4b04834,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,2055406,0x7ff7c4b04874,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,2055431,0x7ff7c4b048b4,76,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,2055455,0x7ff7c4b04914,76,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,2055479,0x7ff7c4b04974,76,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,2055501,0x7ff7c4b049d4,76,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,2055525,0x7ff7c4b04a34,84,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,2055552,0x7ff7c4b04a94,76,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,2055578,0x7ff7c4b04af4,76,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,2055602,0x7ff7c4b04b54,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,2055624,0x7ff7c4b04bb4,148,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,2055649,0x7ff7c4b04c54,148,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,2055894,0x7ff7c4b04cf4,136,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,2055926,0x7ff7c4b04d94,136,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,2055950,0x7ff7c4b04e34,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,2055971,0x7ff7c4b04e94,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,2055991,0x7ff7c4b04ef4,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,2056012,0x7ff7c4b04f54,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,2056035,0x7ff7c4b04fb4,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,2056058,0x7ff7c4b05014,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,2056090,0x7ff7c4b05074,68,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,2056117,0x7ff7c4b050d4,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,2056141,0x7ff7c4b05134,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,2056164,0x7ff7c4b051b4,464,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,2056186,0x7ff7c4b05394,252,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,2056207,0x7ff7c4b05494,56,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,2056228,0x7ff7c4b054d4,256,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,2056250,0x7ff7c4b055f4,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,2056273,0x7ff7c4b05634,156,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,2056303,0x7ff7c4b056d4,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,2056328,0x7ff7c4b05794,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,2056354,0x7ff7c4b05814,512,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,2056379,0x7ff7c4b05a34,124,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,2056403,0x7ff7c4b05ab4,152,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,2056428,0x7ff7c4b05b54,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,2056453,0x7ff7c4b05bd4,56,Abort.ExtraWide
new,MemoryChunk,0x992d340000,262144
new,MemoryChunk,0x3bbccdc0000,262144
tick,0x7ff86e9f404f,2059055,0,0x0,6
tick,0x7ff86ea7faf4,2059092,0,0x0,6
tick,0x7ff7c4f442ca,2059112,0,0x0,6
tick,0x7ff86ea7faf4,2059131,0,0x0,6
tick,0x7ff7c489c493,2059150,0,0x0,6
tick,0x7ff7c4129866,2059840,0,0x0,5
tick,0x7ff7c483de8f,2061856,0,0x0,5
tick,0x7ff7c45609cd,2063821,0,0x0,5
new,MemoryChunk,0x1ab78fc0000,262144
tick,0x7ff7c483dd5d,2065816,0,0x0,5
new,MemoryChunk,0x5bf4dc0000,262144
tick,0x7ff7c4566f31,2067714,0,0x0,5
tick,0x7ff7c46911df,2069882,0,0x0,5
tick,0x7ff7c4937024,2071738,0,0x0,5
code-creation,Eval,10,2072258,0x5bf4dfb55e,5, node:internal/main/run_main_module:1:1,0x5bf4dfb418,~
script-source,91,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x0d\n} = require('internal/bootstrap/pre_execution');\x0d\n\x0d\nprepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Note: this loads the module through the ESM loader if the module is\x0d\n// determined to be an ES module. This hangs from the CJS module loader\x0d\n// because we currently allow monkey-patching of the module loaders\x0d\n// in the preloaded scripts through require('module').\x0d\n// runMain here might be monkey-patched by users in --require.\x0d\n// XXX: the monkey-patchability here should probably be deprecated.\x0d\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\x0d\n
code-source-info,0x5bf4dfb55e,91,0,649,C0O0C4O649,,
code-creation,Function,10,2072465,0x5bf4dfb606,58, node:internal/main/run_main_module:1:1,0x5bf4dfb4d8,~
code-source-info,0x5bf4dfb606,91,0,649,C0O60C3O60C8O28C13O108C15O108C19O145C22O576C25O576C30O614C35O621C40O638C47O642C51O622C57O648,,
code-creation,LazyCompile,10,2073331,0x5bf4dfb846,76,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x17b6328fca0,~
script-source,9,node:internal/bootstrap/loaders,// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_MODULE_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_MODULE_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - NativeModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/loaders') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x0d\n});\x0d\n\x0d\n\x0d\n// internalBindingAllowlist contains the name of internalBinding modules\x0d\n// that are allowed for access via process.binding()... This is used\x0d\n// to provide a transition path for modules that are being moved over to\x0d\n// internalBinding.\x0d\nconst internalBindingAllowlist = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'crypto'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'natives'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'util'\x2C\x0d\n  'uv'\x2C\x0d\n  'v8'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (internalBindingAllowlist.has(module)) {\x0d\n      if (runtimeDeprecatedList.has(module)) {\x0d\n        runtimeDeprecatedList.delete(module);\x0d\n        process.emitWarning(\x0d\n          `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n          'DeprecationWarning'\x2C\x0d\n          'DEP0111');\x0d\n      }\x0d\n      if (legacyWrapperList.has(module)) {\x0d\n        return nativeModuleRequire('internal/legacy/processbinding')[module]();\x0d\n      }\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Set up internalBinding() in the closure.\x0d\n/**\x0d\n * @type {InternalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = ObjectCreate(null);\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst loaderId = 'internal/bootstrap/loaders';\x0d\nconst {\x0d\n  moduleIds\x2C\x0d\n  compileFunction\x0d\n} = internalBinding('native_module');\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass NativeModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C NativeModule>}\x0d\n  */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(moduleIds\x2C (id) => [id\x2C new NativeModule(id)])\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n    this.canBeRequiredByUsers = !StringPrototypeStartsWith(id\x2C 'internal/');\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the native module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n      // Do not expose this to user land even with --expose-internals.\x0d\n      if (id !== loaderId) {\x0d\n        mod.canBeRequiredByUsers = true;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return NativeModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    const mod = NativeModule.map.get(id);\x0d\n    return mod && mod.canBeRequiredByUsers;\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!this.canBeRequiredByUsers) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    this.getESMFacade();\x0d\n    this.syncExports();\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const { ModuleWrap } = internalBinding('module_wrap');\x0d\n    const url = `node:${this.id}`;\x0d\n    const nativeModule = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        nativeModule.syncExports();\x0d\n        this.setExport('default'\x2C nativeModule.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : nativeModuleRequire;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  NativeModule\x2C\x0d\n  require: nativeModuleRequire\x0d\n};\x0d\n\x0d\nfunction nativeModuleRequire(id) {\x0d\n  if (id === loaderId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = NativeModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (!NativeModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return nativeModuleRequire(request);\x0d\n}\x0d\n\x0d\n// Pass the exports back to C++ land for C++ internals to use.\x0d\nreturn loaderExports;\x0d\n
code-source-info,0x5bf4dfb846,9,10646,10999,C0O10656C2O10667C4O10663C9O10684C13O10705C14O10728C19O10741C24O10745C29O10745C35O10889C37O10899C47O10947C60O10905C65O10899C66O10969C71O10969C75O10996,,
tick,0x7ff7c4769cae,2075390,0,0x0,3,0x7ff7c459f520,0x5bf4dfb609
tick,0x7ff7c4983d90,2075684,0,0x0,2,0x7ff7c459f520,0x5bf4dfb88d,0x5bf4dfb609
code-creation,LazyCompile,10,2075821,0x5bf4dfc556,175,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x17b6328fbd0,~
code-source-info,0x5bf4dfc556,9,9826,10409,C0O9845C6O9860C12O9890C16O9898C17O9929C22O9938C23O9951C30O9997C37O10028C45O9997C63O10130C70O10130C75O10166C89O10201C103O10158C108O10241C109O10253C124O10285C126O10298C141O10321C152O10340C160O10372C165O10321C170O10396C174O10404,,
code-creation,Eval,10,2077241,0x5bf4dfd49e,5, node:internal/bootstrap/pre_execution:1:1,0x5bf4dfd108,~
script-source,92,node:internal/bootstrap/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ERR_MANIFEST_ASSERT_INTEGRITY } = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false) {\x0d\n  // TODO(joyeecheung): this is also necessary for workers when they deserialize\x0d\n  // this toggle from the snapshot.\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object with legacy properties and normalizations\x0d\n  patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupPerfHooks();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd.\x0d\n  if (process.env.NODE_V8_COVERAGE) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n\x0d\n\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n  setupStacktracePrinterOnSigint();\x0d\n\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n  initializeReportSignalHandlers();  // Main-thread-only.\x0d\n\x0d\n  initializeHeapSnapshotSignalHandlers();\x0d\n\x0d\n  // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n  // spawned by our child_process module\x2C then initialize IPC.\x0d\n  // This attaches some internal event listeners and creates:\x0d\n  // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n  // process.disconnect().\x0d\n  setupChildProcessIpcChannel();\x0d\n\x0d\n  // Load policy from disk and parse it.\x0d\n  initializePolicy();\x0d\n\x0d\n  // If this is a worker in cluster mode\x2C start up the communication\x0d\n  // channel. This needs to be done before any user code gets executed\x0d\n  // (including preload modules).\x0d\n  initializeClusterIPC();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n  initializeWASI();\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader();\x0d\n\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  assert(!CJSLoader.hasLoadedAnyUserCJSModule);\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  // TODO(joyeecheung): snapshot fast APIs (which need to work with\x0d\n  // array buffers\x2C whose connection with C++ needs to be rebuilt after\x0d\n  // deserialization).\x0d\n  const {\x0d\n    hrtime\x2C\x0d\n    hrtimeBigInt\x0d\n  } = require('internal/process/per_thread').getFastAPIs(binding);\x0d\n\x0d\n  process.hrtime = hrtime;\x0d\n  process.hrtime.bigint = hrtimeBigInt;\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: process.argv[0]\x0d\n  });\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      process.argv[1] = path.resolve(process.argv[1]);\x0d\n    } catch {}\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Setup User-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage to a specified file.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  const { report } = require('internal/process/report');\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return report;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/loaders').NativeModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  const { addSignalHandler } = require('internal/process/report');\x0d\n\x0d\n  addSignalHandler();\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  process.on(signal\x2C () => {\x0d\n    writeHeapSnapshot();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupPerfHooks() {\x0d\n  require('internal/perf/performance').refreshTimeOrigin();\x0d\n  require('internal/perf/utils').refreshTimeOrigin();\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n\x0d\n  // Create global.process and global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePolicy() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = new URL(`file://${experimentalPolicy}`);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    require('internal/process/policy')\x0d\n      .setup(src\x2C manifestURL.href);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeWASI() {\x0d\n  const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n  const mod = NativeModule.map.get('wasi');\x0d\n  mod.canBeRequiredByUsers =\x0d\n    getOptionValue('--experimental-wasi-unstable-preview1');\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const CJSLoader = require('internal/modules/cjs/loader');\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    CJSLoader.Module._initPaths();\x0d\n  }\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  CJSLoader.Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader() {\x0d\n  // Create this WeakMap in js-land because V8 has no C++ API for WeakMap.\x0d\n  internalBinding('module_wrap').callbackMap = new SafeWeakMap();\x0d\n\x0d\n  if (getEmbedderOptions().shouldNotRegisterESMLoader) return;\x0d\n\x0d\n  const {\x0d\n    setImportModuleDynamicallyCallback\x2C\x0d\n    setInitializeImportMetaObjectCallback\x0d\n  } = internalBinding('module_wrap');\x0d\n  const esm = require('internal/process/esm_loader');\x0d\n  // Setup per-isolate callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(esm.initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(esm.importModuleDynamicallyCallback);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const { setSourceMapsEnabled } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  patchProcessObject\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  setupWarningHandler\x2C\x0d\n  setupDebugEnv\x2C\x0d\n  setupPerfHooks\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  initializeDeprecations\x2C\x0d\n  initializeESMLoader\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n  initializeSourceMapsHandlers\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  setupTraceCategoryState\x2C\x0d\n  setupInspectorHooks\x2C\x0d\n  initializeReport\x2C\x0d\n  initializeCJSLoader\x2C\x0d\n  initializeWASI\x0d\n};\x0d\n
code-source-info,0x5bf4dfd49e,92,0,16490,C0O0C4O16490,,
code-creation,Function,10,2080208,0x5bf4dfdf9e,426, node:internal/bootstrap/pre_execution:1:1,0x5bf4dfd418,~
code-source-info,0x5bf4dfdf9e,92,0,16490,C0O0C190O28C196O47C202O72C208O84C214O100C220O130C226O218C232O218C237O174C243O193C249O284C255O284C260O256C266O334C272O334C277O323C283O396C289O396C294O422C299O362C305O446C311O446C315O446C317O16075C324O16097C330O16120C336O16143C342O16167C348O16185C354O16204C360O16235C366O16262C372O16286C378O16317C384O16350C390O16373C396O16401C402O16425C408O16446C414O16470C420O16090C425O16489,,
tick,0x7ff7c4769d0e,2080454,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0x5bf4dfb609
tick,0x7ff7c4f456ff,2080501,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0x5bf4dfb609
new,MemoryChunk,0xd484880000,262144
code-creation,Eval,10,2081169,0x5bf4dff926,5, node:internal/options:1:1,0x5bf4dff750,~
script-source,93,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x0d\n};\x0d\n
code-source-info,0x5bf4dff926,93,0,1892,C0O0C4O1892,,
code-creation,Function,10,2081571,0x5bf4dffcf6,154, node:internal/options:1:1,0x5bf4dff8a0,~
code-source-info,0x5bf4dffcf6,93,0,1892,C0O0C54O102C57O102C62O28C68O66C74O163C75O163C77O176C78O176C80O193C81O193C83O210C84O210C86O1675C93O1824C99O1843C105O1868C148O1690C153O1891,,
tick,0x7ff7c4f64699,2081828,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0x5bf4dfe086,0x5bf4dfc5bd,0x5bf4dfb88d,0x5bf4dfb609
code-creation,LazyCompile,10,2082086,0xd48488152e,69,internalBinding node:internal/bootstrap/loaders:164:45,0x17b6328f720,~
code-source-info,0xd48488152e,9,5278,5523,C0O5304C7O5314C11O5329C15O5367C25O5394C30O5392C37O5429C48O5448C56O5484C61O5429C66O5507C68O5518,,
code-creation,LazyCompile,10,2082682,0xd484881d5e,213,prepareMainThreadExecution node:internal/bootstrap/pre_execution:22:36,0x5bf4dfd4d0,~
code-source-info,0xd484881d5e,92,512,2458,C10O658C15O658C18O763C21O763C25O799C28O799C31O829C34O829C37O850C40O850C43O876C46O876C49O1084C52O1096C57O1100C63O1125C66O1133C77O1190C82O1194C87O1163C91O1154C95O1225C98O1225C101O1320C104O1320C107O1429C110O1429C113O1452C116O1452C119O1513C122O1513C125O1843C128O1843C131O1921C134O1921C137O2123C140O2123C143O2152C146O2152C149O2187C152O2187C155O2216C158O2216C161O2237C164O2237C167O2263C170O2263C173O2309C179O2309C184O2352C189O2370C195O2352C199O2401C202O2401C205O2426C208O2426C212O2457,,
code-creation,LazyCompile,10,2083156,0xd484882f86,19,reconnectZeroFillToggle node:internal/buffer:1072:33,0x27f8fef2fe8,~
script-source,19,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  untransferable_object_private_symbol\x2C\x0d\n  setHiddenValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  setHiddenValue(obj\x2C untransferable_object_private_symbol\x2C true);\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x0d\n};\x0d\n
code-source-info,0xd484882f86,19,31788,31830,C0O31796C5O31807C11O31805C18O31829,,
tick,0x7ff7c3ef0bbc,2089045,0,0x0,3,0x7ff7c459f520,0xd484881d6d,0x5bf4dfb615
tick,0x7ff7c3ef0bbc,2089078,0,0x0,3,0x7ff7c459f520,0xd484881d6d,0x5bf4dfb615
tick,0x7ff7c4f44441,2089105,0,0x0,3,0x7ff7c459f520,0xd484881d6d,0x5bf4dfb615
code-creation,LazyCompile,10,2089160,0xd4848857d6,432,patchProcessObject node:internal/bootstrap/pre_execution:81:28,0x5bf4dfd520,~
code-source-info,0xd4848857d
tick,0x7ff7c46983c7,2089748,1,0x7ff7c400cbc0,5,0x7ff7c4970240,0xd4848857e9,0xd484881d73,0x5bf4dfb615
code-creation,LazyCompile,10,2090127,0xd484885e76,113,getFastAPIs node:internal/process/per_thread:57:21,0x27f8feff748,~
script-source,23,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  Uint32Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\n\x0d\nfunction getFastAPIs(binding) {\x0d\n  const {\x0d\n    hrtime: _hrtime\x0d\n  } = binding.getFastAPIs();\x0d\n\x0d\n  // The 3 entries filled in by the original process.hrtime contains\x0d\n  // the upper/lower 32 bits of the second part of the value\x2C\x0d\n  // and the remaining nanoseconds of the value.\x0d\n  const hrValues = new Uint32Array(_hrtime.buffer);\x0d\n\x0d\n  function hrtime(time) {\x0d\n    _hrtime.hrtime();\x0d\n\x0d\n    if (time !== undefined) {\x0d\n      validateArray(time\x2C 'time');\x0d\n      if (time.length !== 2) {\x0d\n        throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n      }\x0d\n\x0d\n      const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n      const nsec = hrValues[2] - time[1];\x0d\n      const needsBorrow = nsec < 0;\x0d\n      return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n    }\x0d\n\x0d\n    return [\x0d\n      hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n      hrValues[2]\x2C\x0d\n    ];\x0d\n  }\x0d\n\x0d\n  // Use a BigUint64Array in the closure because this is actually a bit\x0d\n  // faster than simply returning a BigInt from C++ in V8 7.1.\x0d\n  const hrBigintValues = new BigUint64Array(_hrtime.buffer\x2C 0\x2C 1);\x0d\n  function hrtimeBigInt() {\x0d\n    _hrtime.hrtimeBigInt();\x0d\n    return hrBigintValues[0];\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    hrtime\x2C\x0d\n    hrtimeBigInt\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    if (code || code === 0)\x0d\n      process.exitCode = code;\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || 0);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || 0);\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x0d\n    };\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvironment }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvironment) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvironment;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeTest(leadingDashesRegex\x2C key)) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  NodeEnvironmentFlagsSet.prototype.keys =\x0d\n  NodeEnvironmentFlagsSet.prototype[SymbolIterator] =\x0d\n    NodeEnvironmentFlagsSet.prototype.values;\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  getFastAPIs\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x0d\n};\x0d\n
code-source-info,0xd484885e76,23,1285,2511,C0O1285C24O1344C29O1344C34O1321C40O1564C50O1588C57O1564C62O1564C64O2321C74O2348C86O2321C91O2321C93O2462C100O2476C106O2489C112O2508,,
tick,0x7ff7c3ef15b7,2092107,0,0x0,3,0x7ff7c459f520,0xd4848857fe,0xd484881d73,0x5bf4dfb615
code-creation,LazyCompile,10,2093286,0xd48488767e,832,resolve node:path:158:10,0x1145bfa96e8,~
script-source,35,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${pathObject.ext || ''}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C 'path');\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instancee\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n\x0d\n      validateString(path\x2C 'path');\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [ext]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C ext) {\x0d\n    if (ext !== undefined)\x0d\n      validateString(ext\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\x0d\n      if (ext === path)\x0d\n        return '';\x0d\n      let extIdx = ext.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(ext\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0xd48488767e
tick,0x7ff7c3ef15b4,2101739,0,0x0,3,0x7ff7c459f520,0xd4848858bb,0xd484881d73,0x5bf4dfb615
tick,0x7ff86e9f404f,2101776,0,0x0,3,0x7ff7c459f520,0xd4848858bb,0xd484881d73,0x5bf4dfb615
tick,0x7ff86e9f404f,2101809,0,0x0,3,0x7ff7c459f520,0xd4848858bb,0xd484881d73,0x5bf4dfb615
tick,0x7ff7c4769cb5,2101841,0,0x0,3,0x7ff7c459f520,0xd4848858bb,0xd484881d73,0x5bf4dfb615
tick,0x7ff7c4769545,2101872,0,0x0,3,0x7ff7c459f520,0xd4848858bb,0xd484881d73,0x5bf4dfb615
code-creation,LazyCompile,10,2101918,0xd48488ac96,30,validateString node:internal/validators:117:24,0x27f8feda8e0,~
script-source,17,node:internal/validators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n    ERR_INVALID_CALLBACK\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isArrayBufferView\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n *\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (!RegExpPrototypeTest(octalReg\x2C value)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateInt32(value\x2C name\x2C 0\x2C 2 ** 32 - 1);\x0d\n  return value;\x0d\n}\x0d\n\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (!isInt32(value)) {\x0d\n      if (typeof value !== 'number') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n      }\x0d\n      if (!NumberIsInteger(value)) {\x0d\n        throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n      }\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive) => {\x0d\n  if (!isUint32(value)) {\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    const min = positive ? 1 : 0;\x0d\n    // 2 ** 32 === 4294967296\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && < 4294967296`\x2C value);\x0d\n  }\x0d\n  if (positive && value === 0) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C '>= 1 && < 4294967296'\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateString(value\x2C name) {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n}\x0d\n\x0d\nfunction validateNumber(value\x2C name) {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n}\x0d\n\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateBoolean(value\x2C name) {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {unknown} value\x0d\n * @param {string} name\x0d\n * @param {{\x0d\n *   allowArray?: boolean\x2C\x0d\n *   allowFunction?: boolean\x2C\x0d\n *   nullable?: boolean\x0d\n * }} [options]\x0d\n */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options) => {\x0d\n    const useDefaultOptions = options == null;\x0d\n    const allowArray = useDefaultOptions ? false : options.allowArray;\x0d\n    const allowFunction = useDefaultOptions ? false : options.allowFunction;\x0d\n    const nullable = useDefaultOptions ? false : options.nullable;\x0d\n    if ((!nullable && value === null) ||\x0d\n        (!allowArray && ArrayIsArray(value)) ||\x0d\n        (typeof value !== 'object' && (\x0d\n          !allowFunction || typeof value !== 'function'\x0d\n        ))) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateSignalName(signal\x2C name = 'signal') {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction validateEncoding(data\x2C encoding) {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check that the port number is not NaN when coerced to a number\x2C\x0d\n// is an integer and that it falls within the legal range of port numbers.\x0d\nfunction validatePort(port\x2C name = 'Port'\x2C allowZero = true) {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n}\x0d\n\x0d\nconst validateCallback = hideStackFrames((callback) => {\x0d\n  if (typeof callback !== 'function')\x0d\n    throw new ERR_INVALID_CALLBACK(callback);\x0d\n});\x0d\n\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateCallback\x2C\x0d\n  validateAbortSignal\x2C\x0d\n};\x0d\n
code-source-info,0xd48488ac96,17,3514,3626,C0O3533C6O3569C22O3575C27O3569C29O3625,,
code-creation,LazyCompile,10,2103459,0xd48488b5fe,17,isPathSeparator node:path:52:25,0x1145bfa9168,~
code-source-info,0xd48488b5fe,35,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
tick,0x7ff86e9f42c3,2103745,0,0x0,3,0x7ff7c459f520,0xd48488778b,0xd4848858bb,0xd484881d73,0x5bf4dfb615
code-creation,LazyCompile,10,2103817,0xd48488b6fe,35,isWindowsDeviceRoot node:path:60:29,0x1145bfa95e0,~
code-source-info,0xd48488b6fe,35,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,LazyCompile,10,2104027,0xd48488b81e,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20,0x2ac1c893f60,~
script-source,90,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x0d\n    }\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id |= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0xd48488b81e,90,3464,3552,C0O3472C7O3486C12O3499C17O3522C22O3522C29O3509C35O3532C39O3549,,
code-creation,LazyCompile,10,2104870,0xd48488be86,442,normalizeString node:path:66:25,0x1145bfa9630,~
code-source-info,0xd48488be
code-creation,LazyCompile,10,2105385,0xd48488c5a6,63,addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:129:33,0x5bf4dfd570,~
code-source-info,0xd48488c5a6,92,4413,4648,C16O4466C21O4466C26O4493C28O4511C36O4541C43O4607C49O4626C56O4511C62O4647,,
tick,0x7ff7c4786236,2105659,0,0x0,3,0x7ff7c459f520,0xd48488c5bb,0xd4848858d3,0xd484881d73,0x5bf4dfb615
code-creation,LazyCompile,10,2105709,0xd48488c726,82,getOptionValue node:internal/options:39:24,0x5bf4dffa48,~
code-source-info,0xd48488c726,93,940,1190,C0O974C3O974C7O1020C15O1020C22O1071C30O1093C38O1093C43O1080C47O1071C53O1109C55O1134C60O1140C61O1164C66O1164C74O1179C81O1187,,
code-creation,LazyCompile,10,2105902,0xd48488cad6,33,getCLIOptionsFromBinding node:internal/options:18:34,0x5bf4dff958,~
code-source-info,0xd48488cad6,93,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,LazyCompile,10,2106630,0xd48488ceb6,46,setupTraceCategoryState node:internal/bootstrap/pre_execution:221:33,0x5bf4dfd818,~
code-source-info,0xd48488ceb6,92,6973,7204,C0O7016C6O7016C11O6989C16O7089C22O7089C27O7060C32O7132C35O7157C40O7132C45O7203,,
code-creation,LazyCompile,10,2106854,0xd48488d04e,77,toggleTraceCategoryState node:internal/process/per_thread:385:34,0x27f8feffd38,~
code-source-info,0xd48488d04e,23,11424,11731,C0O11449C4O11479C10O11515C16O11547C21O11591C26O11592C33O11536C39O11618C44O11639C49O11639C55O11659C61O11692C66O11713C71O11713C76O11730,,
code-creation,LazyCompile,10,2107049,0xd48488d1fe,42,setupPerfHooks node:internal/bootstrap/pre_execution:227:24,0x5bf4dfd868,~
code-source-info,0xd48488d1fe,92,7231,7354,C0O7239C6O7239C11O7275C16O7276C20O7300C26O7300C31O7330C36O7331C41O7353,,
code-creation,LazyCompile,10,2107241,0xd48488d37e,42,refreshTimeOrigin node:internal/perf/performance:178:27,0x2e44454a000,~
script-source,70,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst eventLoopUtilization = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  getTimeOriginTimestamp\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction toJSON() {\x0d\n  return {\x0d\n    nodeTiming: this.nodeTiming\x2C\x0d\n    timeOrigin: this.timeOrigin\x2C\x0d\n    eventLoopUtilization: this.eventLoopUtilization()\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction clearMarks(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearMarkTimings(name);\x0d\n  clearEntriesFromBuffer('mark'\x2C name);\x0d\n}\x0d\n\x0d\nfunction clearMeasures(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  clearEntriesFromBuffer('measure'\x2C name);\x0d\n}\x0d\n\x0d\nfunction getEntries() {\x0d\n  return filterBufferMapByNameAndType();\x0d\n}\x0d\n\x0d\nfunction getEntriesByName(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n}\x0d\n\x0d\nfunction getEntriesByType(type) {\x0d\n  if (type !== undefined) {\x0d\n    type = `${type}`;\x0d\n  }\x0d\n  return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n}\x0d\n\x0d\nclass InternalPerformance extends EventTarget {}\x0d\nInternalPerformance.prototype.constructor = Performance.prototype.constructor;\x0d\nObjectSetPrototypeOf(InternalPerformance.prototype\x2C Performance.prototype);\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMarks\x2C\x0d\n  }\x2C\x0d\n  clearMeasures: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: clearMeasures\x2C\x0d\n  }\x2C\x0d\n  eventLoopUtilization: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  getEntries: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntries\x2C\x0d\n  }\x2C\x0d\n  getEntriesByName: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByName\x2C\x0d\n  }\x2C\x0d\n  getEntriesByType: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: getEntriesByType\x2C\x0d\n  }\x2C\x0d\n  mark: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: mark\x2C\x0d\n  }\x2C\x0d\n  measure: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: measure\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  now: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: now\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n  // This would be updated during pre-execution in case\x0d\n  // the process is launched from a snapshot.\x0d\n  // TODO(joyeecheung): we may want to warn about access to\x0d\n  // this during snapshot building.\x0d\n  timeOrigin: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  }\x2C\x0d\n  toJSON: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: toJSON\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  ObjectDefineProperty(Performance.prototype\x2C 'timeOrigin'\x2C {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: getTimeOriginTimestamp()\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  InternalPerformance\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0xd48488d37e,70,3932,4095,C0O3940C7O3961C10O3973C25O4060C28O4060C35O3940C41O4094,,
tick,0x7ff86ea2e7d4,2108330,0,0x0,3,0x7ff7c459f520,0xd48488d20e,0xd484881d80,0x5bf4dfb615
code-creation,LazyCompile,10,2108500,0xd48488da8e,19,refreshTimeOrigin node:internal/perf/utils:25:27,0x1145bfbd2e0,~
script-source,41,node:internal/perf/utils,'use strict';\x0d\n\x0d\nconst binding = internalBinding('performance');\x0d\nconst {\x0d\n  milestones\x2C\x0d\n  getTimeOrigin\x2C\x0d\n} = binding;\x0d\n\x0d\n// TODO(joyeecheung): we may want to warn about access to\x0d\n// this during snapshot building.\x0d\nlet timeOrigin = getTimeOrigin();\x0d\n\x0d\nfunction now() {\x0d\n  const hr = process.hrtime();\x0d\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction getMilestoneTimestamp(milestoneIdx) {\x0d\n  const ns = milestones[milestoneIdx];\x0d\n  if (ns === -1)\x0d\n    return ns;\x0d\n  return ns / 1e6 - timeOrigin;\x0d\n}\x0d\n\x0d\nfunction refreshTimeOrigin() {\x0d\n  timeOrigin = getTimeOrigin();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n  refreshTimeOrigin\x0d\n};\x0d\n
code-source-info,0xd48488da8e,41,549,589,C0O557C5O570C11O568C18O588,,
code-creation,LazyCompile,10,2108820,0xd48488dcfe,62,setupInspectorHooks node:internal/bootstrap/pre_execution:232:29,0x5bf4dfd8b8,~
code-source-info,0xd48488dcfe,92,7386,7952,C0O7735C6O7739C11O7764C17O7833C23O7833C28O7801C33O7816C38O7880C44O7880C49O7908C54O7909C61O7951,,
code-creation,Eval,10,2109164,0xd48488e0ae,5, node:internal/inspector_async_hook:1:1,0xd48488def8,~
script-source,94,node:internal/inspector_async_hook,'use strict';\x0d\n\x0d\nlet hook;\x0d\nlet config;\x0d\n\x0d\nconst {\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction lazyHookCreation() {\x0d\n  const inspector = internalBinding('inspector');\x0d\n  const { createHook } = require('async_hooks');\x0d\n  config = internalBinding('config');\x0d\n\x0d\n  hook = createHook({\x0d\n    init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    // It's difficult to tell which tasks will be recurring and which won't\x2C\x0d\n    // therefore we mark all tasks as recurring. Based on the discussion\x0d\n    // in https://github.com/nodejs/node/pull/13870#discussion_r124515293\x2C\x0d\n    // this should be fine as long as we call asyncTaskCanceled() too.\x0d\n      const recurring = true;\x0d\n      if (type === 'PROMISE')\x0d\n        this.promiseIds.add(asyncId);\x0d\n      else\x0d\n        inspector.asyncTaskScheduled(type\x2C asyncId\x2C recurring);\x0d\n    }\x2C\x0d\n\x0d\n    before(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskStarted(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    after(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return;\x0d\n      inspector.asyncTaskFinished(asyncId);\x0d\n    }\x2C\x0d\n\x0d\n    destroy(asyncId) {\x0d\n      if (this.promiseIds.has(asyncId))\x0d\n        return this.promiseIds.delete(asyncId);\x0d\n      inspector.asyncTaskCanceled(asyncId);\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  hook.promiseIds = new SafeSet();\x0d\n}\x0d\n\x0d\nfunction enable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  if (config.bits < 64) {\x0d\n    // V8 Inspector stores task ids as (void*) pointers.\x0d\n    // async_hooks store ids as 64bit numbers.\x0d\n    // As a result\x2C we cannot reliably translate async_hook ids to V8 async_task\x0d\n    // ids on 32bit platforms.\x0d\n    process.emitWarning(\x0d\n      'Warning: Async stack traces in debugger are not available ' +\x0d\n      `on ${config.bits}bit platforms. The feature is disabled.`\x2C\x0d\n      {\x0d\n        code: 'INSPECTOR_ASYNC_STACK_TRACES_NOT_AVAILABLE'\x2C\x0d\n      });\x0d\n  } else {\x0d\n    hook.enable();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction disable() {\x0d\n  if (hook === undefined) lazyHookCreation();\x0d\n  hook.disable();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  enable\x2C\x0d\n  disable\x0d\n};\x0d\n
code-source-info,0xd48488e0ae,94,0,2048,C0O0C4O2048,,
code-creation,Function,10,2109733,0xd48488e2ce,79, node:internal/inspector_async_hook:1:1,0xd48488e028,~
tick,0x7ff7c3f6f9cb,2109767,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd48488dd15,0xd484881d86,0x5bf4dfb615
code-source-info,0xd48488e2ce,94,0,2048,C0O0C42O21C43O21C45O32C46O32C48O54C54O2002C61O2024C67O2035C73O2017C78O2047,,
code-creation,LazyCompile,10,2110141,0xd48488e7c6,69,setupWarningHandler node:internal/bootstrap/pre_execution:141:29,0x5bf4dfd5c0,~
code-source-info,0xd48488e7c6,92,4680,4885,C0O4718C6O4718C11O4701C16O4758C24O4762C33O4807C38O4811C45O4828C50O4844C53O4852C61O4852C68O4884,,
code-creation,LazyCompile,10,2110496,0xd48488e926,20,addListener node:events:486:58,0x17b632b3f30,~
script-source,13,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNHANDLED_ERROR\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\x0d\n      throw new ERR_OUT_OF_RANGE('defaultMaxListeners'\x2C\x0d\n                                 'a non-negative number'\x2C\x0d\n                                 arg);\x0d\n    }\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    if (typeof n !== 'number' || n < 0 || NumberIsNaN(n))\x0d\n      throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = ObjectCreate(null);\x0d\n    this._eventsCount = 0;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catcheable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\x0d\n    throw new ERR_OUT_OF_RANGE('n'\x2C 'a non-negative number'\x2C n);\x0d\n  }\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\n// Returns the length and line number of the first sequence of `a` that fully\x0d\n// appears in `b` with a length of at least 4.\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return [len\x2C i];\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return [0\x2C 0];\x0d\n}\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {}\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { 0: len\x2C 1: off } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C off + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x0d\n        });\x0d\n      } catch {}\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = ObjectCreate(null);\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventEmitter memory leak detected. ' +\x0d\n                          `${existing.length} ${String(type)} listeners ` +\x0d\n                          `added to ${inspect(target\x2C { depth: -1 })}. Use ` +\x0d\n                          'emitter.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.emitter = target;\x0d\n      w.type = type;\x0d\n      w.count = existing.length;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        if (--this._eventsCount === 0)\x0d\n          this._events = ObjectCreate(null);\x0d\n        else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = ObjectCreate(null);\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = ObjectCreate(null);\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = ObjectCreate(null);\x0d\n        this._eventsCount = 0;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = {}) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C { once: true });\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError());\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { once: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    // EventTarget does not have `error` event semantics like Node\x0d\n    // EventEmitters\x2C we do not listen to `error` events here.\x0d\n    emitter.addEventListener(name\x2C (arg) => { listener(arg); }\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n\x0d\n  const unconsumedEvents = [];\x0d\n  const unconsumedPromises = [];\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      const value = unconsumedEvents.shift();\x0d\n      if (value) {\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) {\x0d\n        return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n\x0d\n      if (signal) {\x0d\n        eventTargetAgnosticRemoveListener(\x0d\n          signal\x2C\x0d\n          'abort'\x2C\x0d\n          abortListener\x2C\x0d\n          { once: true });\x0d\n      }\x0d\n\x0d\n      finished = true;\x0d\n\x0d\n      for (const promise of unconsumedPromises) {\x0d\n        promise.resolve(createIterResult(undefined\x2C true));\x0d\n      }\x0d\n\x0d\n      return PromiseResolve(createIterResult(undefined\x2C true));\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      error = err;\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C event\x2C eventHandler);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n    }\x2C\x0d\n\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  eventTargetAgnosticAddListener(emitter\x2C event\x2C eventHandler);\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    emitter.on('error'\x2C errorHandler);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { once: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError());\x0d\n  }\x0d\n\x0d\n  function eventHandler(...args) {\x0d\n    const promise = ArrayPrototypeShift(unconsumedPromises);\x0d\n    if (promise) {\x0d\n      promise.resolve(createIterResult(args\x2C false));\x0d\n    } else {\x0d\n      unconsumedEvents.push(args);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    finished = true;\x0d\n\x0d\n    const toError = ArrayPrototypeShift(unconsumedPromises);\x0d\n\x0d\n    if (toError) {\x0d\n      toError.reject(err);\x0d\n    } else {\x0d\n      // The next time we call next()\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    iterator.return();\x0d\n  }\x0d\n}\x0d\n
code-source-info,0xd48488e926,13,14677,14751,C0O14699C14O14706C19O14748,,
tick,0x7ff86e9f404f,2115203,0,0x0,3,0x7ff7c459f520,0xd48488e803,0xd484881d8c,0x5bf4dfb615
tick,0x7ff7c3f6f9b4,2115242,0,0x0,3,0x7ff7c459f520,0xd48488e803,0xd484881d8c,0x5bf4dfb615
tick,0x7ff7c3efc4a0,2115681,0,0x0,3,0x7ff7c459f520,0xd48488e934,0xd48488e803,0xd484881d8c,0x5bf4dfb615
code-creation,LazyCompile,10,2115728,0xd484890b86,387,_addListener node:events:418:22,0x17b632b3e90,~
code-source-info,0xd484890b
code-creation,LazyCompile,10,2116084,0xd484890ebe,15,checkListener node:events:127:23,0x17b632b37f0,~
code-source-info,0xd484890ebe,13,3796,3854,C0O3812C8O3812C14O3853,,
code-creation,LazyCompile,10,2116222,0xd484890fae,30, node:internal/validators:235:42,0x27f8fedad78,~
code-source-info,0xd484890fae,17,7441,7560,C0O7463C6O7501C22O7507C27O7501C29O7559,,
code-creation,LazyCompile,10,2116659,0xd48489122e,380,emit node:events:340:44,0x17b632b3dd0,~
code-source-info,0xd48489122e
code-creation,LazyCompile,10,2117111,0xd4848915d6,172,startListeningIfSignal node:internal/process/signal:22:32,0x2ac1c892d20,~
script-source,89,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw errnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x0d\n};\x0d\n
code-source-info,0xd4848915d6,89,450,944,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C148O854C153O848C154O908C159O920C164O920C171O943,,
code-creation,LazyCompile,10,2117463,0xd484891996,19,isSignal node:internal/process/signal:17:18,0x2ac1c892b68,~
code-source-info,0xd484891996,89,271,352,C0O284C8O320C13O327C17O335C18O349,,
tick,0x7ff7c4a1653f,2117702,0,0x0,0,0xd484890be9,0xd48488e934,0xd48488e803,0xd484881d8c,0x5bf4dfb615
code-creation,LazyCompile,10,2117830,0xd484891b36,75,setupDebugEnv node:internal/bootstrap/pre_execution:193:23,0x5bf4dfd728,~
code-source-info,0xd484891b36,92,6195,6410,C0O6203C6O6203C11O6236C19O6264C24O6268C29O6237C34O6284C42O6288C48O6333C54O6333C59O6370C64O6383C69O6384C74O6409,,
code-creation,LazyCompile,10,2118146,0xd484891ece,159,initializeDebugEnv node:internal/util/debuglog:22:28,0x1145bfbc668,~
script-source,40,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = ObjectCreate(null);\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = process.stderr.hasColors && process.stderr.hasColors();\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 0: return debug();\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 0: return debug();\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x0d\n};\x0d\n
code-source-info,0xd484891ece,40,567,1024,C0O583C7O596C14O594C20O619C31O734C44O734C51O779C62O780C69O809C80O810C88O861C100O876C116O861C121O861C123O900C132O912C144O990C151O1002C158O1023,,
new,MemoryChunk,0x23629340000,262144
code-creation,Function,11,2119032,0x23629343060,572,getOptionValue node:internal/options:39:24,0x5bf4dffa48,^
code-source-info,0x23629343060,93,940,1190,,,
code-creation,Function,11,2119112,0x23629343300,216,isPathSeparator node:path:52:25,0x1145bfa9168,^
code-source-info,0x23629343300,35,1794,1876,,,
code-creation,Function,11,2119238,0x23629343440,3076,normalizeString node:path:66:25,0x1145bfa9630,^
code-source-info,0x23629343440,35,2226,4212,,,
code-creation,LazyCompile,10,2119384,0xd484892826,49,setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:172:40,0x5bf4dfd660,~
code-source-info,0xd484892826,92,5738,5932,C0O5746C8O5751C14O5792C15O5799C16O5835C22O5835C27O5816C32O5887C38O5921C43O5921C48O5931,,
tick,0x7ff7c3f6bf16,2119615,0,0x0,3,0x7ff7c459f520,0xd484881dc6,0x5bf4dfb615
code-creation,LazyCompile,10,2119806,0xd484892a96,62,initializeReport node:internal/bootstrap/pre_execution:182:26,0x5bf4dfd6b0,~
code-source-info,0xd484892a96,92,5961,6169,C0O5961C8O5988C16O5988C21O5977C27O6027C42O6048C47O6123C55O6027C61O6168,,
code-creation,Eval,10,2120369,0xd484893016,5, node:internal/process/report:1:1,0xd484892e10,~
script-source,95,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_SYNTHETIC\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined && typeof file !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('file'\x2C 'String'\x2C file);\x0d\n    } else if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x0d\n};\x0d\n
code-source-info,0xd484893016,95,0,2743,C0O0C4O2743,,
code-creation,Function,10,2120931,0xd484893b2e,315, node:internal/process/report:1:1,0xd484892f90,~
code-source-info,0xd484893b2e,95,0,2743,C0O0C51O70C54O70C59O96C64O26C70O51C76O199C79O199C84O116C90O136C96O155C102O178C108O243C111O243C115O243C117O282C123O327C128O332C136O786C290O2688C297O2710C303O2731C309O2703C314O2742,,
tick,0x7ff7c46caa48,2121681,0,0x0,0,0x7ff7c458bc50,0xd484893bd0,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484892aa6,0xd484881dcc,0x5bf4dfb615
code-creation,LazyCompile,10,2121874,0xd48489586e,21,initializeReportSignalHandlers node:internal/bootstrap/pre_execution:201:40,0x5bf4dfd778,~
code-source-info,0xd48489586e,92,6514,6614,C0O6551C6O6551C11O6530C16O6592C20O6613,,
code-creation,LazyCompile,10,2122086,0xd4848959b6,57,addSignalHandler node:internal/process/report:97:26,0xd484893048,~
code-source-info,0xd4848959b6,95,2318,2471,C0O2329C5O2336C10O2336C16O2367C22O2403C27O2412C32O2412C38O2432C41O2440C49O2440C56O2470,,
code-creation,LazyCompile,10,2122293,0xd484895f76,92,initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:207:46,0x5bf4dfd7c8,~
code-source-info,0xd484895f76,92,6663,6937,C0O6663C8O6686C18O6686C23O6732C25O6750C26O6757C27O6763C35O6763C40O6793C45O6794C50O6855C58O6855C63O6833C69O6875C74O6883C79O6886C84O6883C91O6936,,
code-creation,LazyCompile,10,2122575,0xd484896206,138,setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:337:37,0x5bf4dfd998,~
code-source-info,0xd484896206,92,10807,11353,C0O10815C3O10827C8O10831C14O10870C20O10870C25O10916C33O10939C38O10943C46O10916C52O10970C53O10980C57O10970C61O11064C64O11079C73O11140C76O11148C81O11152C90O11200C93O11215C102O11259C108O11259C113O11283C118O11284C124O11324C127O11339C132O11324C137O11352,,
code-creation,LazyCompile,10,2122856,0xd484896396,21,assert node:internal/assert:11:16,0x27f8fed8098,~
script-source,16,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0xd484896396,16,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
tick,0x7ff7c46340e5,2123630,1,0x7ff7c402b3d0,2,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
code-creation,Eval,10,2125174,0xd484897246,5, node:child_process:1:1,0xd484896d70,~
script-source,96,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  getSystemErrorName\x0d\n} = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nlet debug = require('internal/util/debuglog').debuglog(\x0d\n  'child_process'\x2C\x0d\n  (fn) => {\x0d\n    debug = fn;\x0d\n  }\x0d\n);\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: errorCodes\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\x0d\n  ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = errorCodes;\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst child_process = require('internal/child_process');\x0d\nconst {\x0d\n  getValidStdio\x2C\x0d\n  setupChannel\x2C\x0d\n  ChildProcess\x2C\x0d\n  stdioStringToArray\x0d\n} = child_process;\x0d\n\x0d\nconst MAX_BUFFER = 1024 * 1024;\x0d\n\x0d\n/**\x0d\n * Spawns a new Node.js process + fork.\x0d\n * @param {string} modulePath\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   detached?: boolean;\x0d\n *   env?: Object;\x0d\n *   execPath?: string;\x0d\n *   execArgv?: string[];\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   killSignal?: string | number;\x0d\n *   silent?: boolean;\x0d\n *   stdio?: Array | string;\x0d\n *   uid?: number;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   timeout?: number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction fork(modulePath /* \x2C args\x2C options */) {\x0d\n  validateString(modulePath\x2C 'modulePath');\x0d\n\x0d\n  // Get options and args arguments.\x0d\n  let execArgv;\x0d\n  let options = {};\x0d\n  let args = [];\x0d\n  let pos = 1;\x0d\n  if (pos < arguments.length && ArrayIsArray(arguments[pos])) {\x0d\n    args = arguments[pos++];\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && arguments[pos] == null) {\x0d\n    pos++;\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && arguments[pos] != null) {\x0d\n    if (typeof arguments[pos] !== 'object') {\x0d\n      throw new ERR_INVALID_ARG_VALUE(`arguments[${pos}]`\x2C arguments[pos]);\x0d\n    }\x0d\n\x0d\n    options = { ...arguments[pos++] };\x0d\n  }\x0d\n\x0d\n  // Prepare arguments for fork:\x0d\n  execArgv = options.execArgv || process.execArgv;\x0d\n\x0d\n  if (execArgv === process.execArgv && process._eval != null) {\x0d\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\x0d\n    if (index > 0) {\x0d\n      // Remove the -e switch to avoid fork bombing ourselves.\x0d\n      execArgv = ArrayPrototypeSlice(execArgv);\x0d\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  args = [...execArgv\x2C modulePath\x2C ...args];\x0d\n\x0d\n  if (typeof options.stdio === 'string') {\x0d\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\x0d\n  } else if (!ArrayIsArray(options.stdio)) {\x0d\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\x0d\n    // and stderr from the parent if silent isn't set.\x0d\n    options.stdio = stdioStringToArray(\x0d\n      options.silent ? 'pipe' : 'inherit'\x2C\x0d\n      'ipc');\x0d\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\x0d\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\x0d\n  }\x0d\n\x0d\n  options.execPath = options.execPath || process.execPath;\x0d\n  options.shell = false;\x0d\n\x0d\n  return spawn(options.execPath\x2C args\x2C options);\x0d\n}\x0d\n\x0d\nfunction _forkChild(fd\x2C serializationMode) {\x0d\n  // set process.send()\x0d\n  const p = new Pipe(PipeConstants.IPC);\x0d\n  p.open(fd);\x0d\n  p.unref();\x0d\n  const control = setupChannel(process\x2C p\x2C serializationMode);\x0d\n  process.on('newListener'\x2C function onNewListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.refCounted();\x0d\n  });\x0d\n  process.on('removeListener'\x2C function onRemoveListener(name) {\x0d\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  // Make a shallow copy so we don't clobber the user's options object.\x0d\n  options = { ...options };\x0d\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\x0d\n\x0d\n  return {\x0d\n    file: command\x2C\x0d\n    options: options\x2C\x0d\n    callback: callback\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given command.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cmd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   shell?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction exec(command\x2C options\x2C callback) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\x0d\n  return module.exports.execFile(opts.file\x2C\x0d\n                                 opts.options\x2C\x0d\n                                 opts.callback);\x0d\n}\x0d\n\x0d\nconst customPromiseExecFunction = (orig) => {\x0d\n  return (...args) => {\x0d\n    const { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n\x0d\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\x0d\n      if (err !== null) {\x0d\n        err.stdout = stdout;\x0d\n        err.stderr = stderr;\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve({ stdout\x2C stderr });\x0d\n      }\x0d\n    });\x0d\n\x0d\n    return promise;\x0d\n  };\x0d\n};\x0d\n\x0d\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(exec)\x0d\n});\x0d\n\x0d\n/**\x0d\n * Spawns the specified file as a shell.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   encoding?: string;\x0d\n *   timeout?: number;\x0d\n *   maxBuffer?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   windowsHide?: boolean;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   error?: Error\x2C\x0d\n *   stdout?: string | Buffer\x2C\x0d\n *   stderr?: string | Buffer\x0d\n *   ) => any} [callback]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction execFile(file /* \x2C args\x2C options\x2C callback */) {\x0d\n  let args = [];\x0d\n  let callback;\x0d\n  let options;\x0d\n\x0d\n  // Parse the optional positional parameters.\x0d\n  let pos = 1;\x0d\n  if (pos < arguments.length && ArrayIsArray(arguments[pos])) {\x0d\n    args = arguments[pos++];\x0d\n  } else if (pos < arguments.length && arguments[pos] == null) {\x0d\n    pos++;\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && typeof arguments[pos] === 'object') {\x0d\n    options = arguments[pos++];\x0d\n  } else if (pos < arguments.length && arguments[pos] == null) {\x0d\n    pos++;\x0d\n  }\x0d\n\x0d\n  if (pos < arguments.length && typeof arguments[pos] === 'function') {\x0d\n    callback = arguments[pos++];\x0d\n  }\x0d\n\x0d\n  if (!callback && pos < arguments.length && arguments[pos] != null) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('args'\x2C arguments[pos]);\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    encoding: 'utf8'\x2C\x0d\n    timeout: 0\x2C\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    killSignal: 'SIGTERM'\x2C\x0d\n    cwd: null\x2C\x0d\n    env: null\x2C\x0d\n    shell: false\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  const child = spawn(file\x2C args\x2C {\x0d\n    cwd: options.cwd\x2C\x0d\n    env: options.env\x2C\x0d\n    gid: options.gid\x2C\x0d\n    shell: options.shell\x2C\x0d\n    signal: options.signal\x2C\x0d\n    uid: options.uid\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x0d\n  });\x0d\n\x0d\n  let encoding;\x0d\n  const _stdout = [];\x0d\n  const _stderr = [];\x0d\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\x0d\n    encoding = options.encoding;\x0d\n  } else {\x0d\n    encoding = null;\x0d\n  }\x0d\n  let stdoutLen = 0;\x0d\n  let stderrLen = 0;\x0d\n  let killed = false;\x0d\n  let exited = false;\x0d\n  let timeoutId;\x0d\n\x0d\n  let ex = null;\x0d\n\x0d\n  let cmd = file;\x0d\n\x0d\n  function exithandler(code\x2C signal) {\x0d\n    if (exited) return;\x0d\n    exited = true;\x0d\n\x0d\n    if (timeoutId) {\x0d\n      clearTimeout(timeoutId);\x0d\n      timeoutId = null;\x0d\n    }\x0d\n\x0d\n    if (!callback) return;\x0d\n\x0d\n    // merge chunks\x0d\n    let stdout;\x0d\n    let stderr;\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stdout &&\x0d\n        child.stdout.readableEncoding\x0d\n      )) {\x0d\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\x0d\n    } else {\x0d\n      stdout = Buffer.concat(_stdout);\x0d\n    }\x0d\n    if (encoding ||\x0d\n      (\x0d\n        child.stderr &&\x0d\n        child.stderr.readableEncoding\x0d\n      )) {\x0d\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\x0d\n    } else {\x0d\n      stderr = Buffer.concat(_stderr);\x0d\n    }\x0d\n\x0d\n    if (!ex && code === 0 && signal === null) {\x0d\n      callback(null\x2C stdout\x2C stderr);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (args.length !== 0)\x0d\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\x0d\n\x0d\n    if (!ex) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      ex = new Error('Command failed: ' + cmd + '\\n' + stderr);\x0d\n      ex.killed = child.killed || killed;\x0d\n      ex.code = code < 0 ? getSystemErrorName(code) : code;\x0d\n      ex.signal = signal;\x0d\n    }\x0d\n\x0d\n    ex.cmd = cmd;\x0d\n    callback(ex\x2C stdout\x2C stderr);\x0d\n  }\x0d\n\x0d\n  function errorhandler(e) {\x0d\n    ex = e;\x0d\n\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    exithandler();\x0d\n  }\x0d\n\x0d\n  function kill() {\x0d\n    if (child.stdout)\x0d\n      child.stdout.destroy();\x0d\n\x0d\n    if (child.stderr)\x0d\n      child.stderr.destroy();\x0d\n\x0d\n    killed = true;\x0d\n    try {\x0d\n      child.kill(options.killSignal);\x0d\n    } catch (e) {\x0d\n      ex = e;\x0d\n      exithandler();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    timeoutId = setTimeout(function delayedKill() {\x0d\n      kill();\x0d\n      timeoutId = null;\x0d\n    }\x2C options.timeout);\x0d\n  }\x0d\n\x0d\n  if (child.stdout) {\x0d\n    if (encoding)\x0d\n      child.stdout.setEncoding(encoding);\x0d\n\x0d\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\x0d\n      const encoding = child.stdout.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      const slice = encoding ? StringPrototypeSlice :\x0d\n        (buf\x2C ...args) => buf.slice(...args);\x0d\n      stdoutLen += length;\x0d\n\x0d\n      if (stdoutLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\x0d\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\x0d\n        kill();\x0d\n      } else {\x0d\n        ArrayPrototypePush(_stdout\x2C chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (child.stderr) {\x0d\n    if (encoding)\x0d\n      child.stderr.setEncoding(encoding);\x0d\n\x0d\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\x0d\n      const encoding = child.stderr.readableEncoding;\x0d\n      const length = encoding ?\x0d\n        Buffer.byteLength(chunk\x2C encoding) :\x0d\n        chunk.length;\x0d\n      stderrLen += length;\x0d\n\x0d\n      if (stderrLen > options.maxBuffer) {\x0d\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\x0d\n        ArrayPrototypePush(_stderr\x2C\x0d\n                           chunk.slice(0\x2C truncatedLen));\x0d\n\x0d\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\x0d\n        kill();\x0d\n      } else {\x0d\n        _stderr.push(chunk);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  child.addListener('close'\x2C exithandler);\x0d\n  child.addListener('error'\x2C errorhandler);\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\x0d\n  enumerable: false\x2C\x0d\n  value: customPromiseExecFunction(execFile)\x0d\n});\x0d\n\x0d\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\x0d\n  validateString(file\x2C 'file');\x0d\n\x0d\n  if (file.length === 0)\x0d\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\x0d\n\x0d\n  if (ArrayIsArray(args)) {\x0d\n    args = ArrayPrototypeSlice(args);\x0d\n  } else if (args == null) {\x0d\n    args = [];\x0d\n  } else if (typeof args !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\x0d\n  } else {\x0d\n    options = args;\x0d\n    args = [];\x0d\n  }\x0d\n\x0d\n  if (options === undefined)\x0d\n    options = {};\x0d\n  else\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n  let cwd = options.cwd;\x0d\n\x0d\n  // Validate the cwd\x2C if present.\x0d\n  if (cwd != null) {\x0d\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\x0d\n  }\x0d\n\x0d\n  // Validate detached\x2C if present.\x0d\n  if (options.detached != null) {\x0d\n    validateBoolean(options.detached\x2C 'options.detached');\x0d\n  }\x0d\n\x0d\n  // Validate the uid\x2C if present.\x0d\n  if (options.uid != null && !isInt32(options.uid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\x0d\n  }\x0d\n\x0d\n  // Validate the gid\x2C if present.\x0d\n  if (options.gid != null && !isInt32(options.gid)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\x0d\n  }\x0d\n\x0d\n  // Validate the shell\x2C if present.\x0d\n  if (options.shell != null &&\x0d\n      typeof options.shell !== 'boolean' &&\x0d\n      typeof options.shell !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\x0d\n                                   ['boolean'\x2C 'string']\x2C options.shell);\x0d\n  }\x0d\n\x0d\n  // Validate argv0\x2C if present.\x0d\n  if (options.argv0 != null) {\x0d\n    validateString(options.argv0\x2C 'options.argv0');\x0d\n  }\x0d\n\x0d\n  // Validate windowsHide\x2C if present.\x0d\n  if (options.windowsHide != null) {\x0d\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\x0d\n  }\x0d\n\x0d\n  // Validate windowsVerbatimArguments\x2C if present.\x0d\n  let { windowsVerbatimArguments } = options;\x0d\n  if (windowsVerbatimArguments != null) {\x0d\n    validateBoolean(windowsVerbatimArguments\x2C\x0d\n                    'options.windowsVerbatimArguments');\x0d\n  }\x0d\n\x0d\n  if (options.shell) {\x0d\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\x0d\n    // Set the shell\x2C switches\x2C and commands.\x0d\n    if (process.platform === 'win32') {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else\x0d\n        file = process.env.comspec || 'cmd.exe';\x0d\n      // '/d /s /c' is used only for cmd.exe.\x0d\n      if (RegExpPrototypeTest(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file)) {\x0d\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\x0d\n        windowsVerbatimArguments = true;\x0d\n      } else {\x0d\n        args = ['-c'\x2C command];\x0d\n      }\x0d\n    } else {\x0d\n      if (typeof options.shell === 'string')\x0d\n        file = options.shell;\x0d\n      else if (process.platform === 'android')\x0d\n        file = '/system/bin/sh';\x0d\n      else\x0d\n        file = '/bin/sh';\x0d\n      args = ['-c'\x2C command];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (typeof options.argv0 === 'string') {\x0d\n    ArrayPrototypeUnshift(args\x2C options.argv0);\x0d\n  } else {\x0d\n    ArrayPrototypeUnshift(args\x2C file);\x0d\n  }\x0d\n\x0d\n  const env = options.env || process.env;\x0d\n  const envPairs = [];\x0d\n\x0d\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\x0d\n  // collect coverage for programs that spawn with white-listed environment.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !ObjectPrototypeHasOwnProperty(options.env || {}\x2C 'NODE_V8_COVERAGE')) {\x0d\n    env.NODE_V8_COVERAGE = process.env.NODE_V8_COVERAGE;\x0d\n  }\x0d\n\x0d\n  let envKeys = [];\x0d\n  // Prototype values are intentionally included.\x0d\n  for (const key in env) {\x0d\n    ArrayPrototypePush(envKeys\x2C key);\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\x0d\n    // keeping only the first one (in lexicographic order)\x0d\n    const sawKey = new SafeSet();\x0d\n    envKeys = ArrayPrototypeFilter(\x0d\n      ArrayPrototypeSort(envKeys)\x2C\x0d\n      (key) => {\x0d\n        const uppercaseKey = StringPrototypeToUpperCase(key);\x0d\n        if (sawKey.has(uppercaseKey)) {\x0d\n          return false;\x0d\n        }\x0d\n        sawKey.add(uppercaseKey);\x0d\n        return true;\x0d\n      }\x0d\n    );\x0d\n  }\x0d\n\x0d\n  for (const key of envKeys) {\x0d\n    const value = env[key];\x0d\n    if (value !== undefined) {\x0d\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    // Make a shallow copy so we don't clobber the user's options object.\x0d\n    ...options\x2C\x0d\n    args\x2C\x0d\n    cwd\x2C\x0d\n    detached: !!options.detached\x2C\x0d\n    envPairs\x2C\x0d\n    file\x2C\x0d\n    windowsHide: !!options.windowsHide\x2C\x0d\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction abortChildProcess(child\x2C killSignal) {\x0d\n  if (!child)\x0d\n    return;\x0d\n  try {\x0d\n    if (child.kill(killSignal)) {\x0d\n      child.emit('error'\x2C new AbortError());\x0d\n    }\x0d\n  } catch (err) {\x0d\n    child.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   env?: Object;\x0d\n *   argv0?: string;\x0d\n *   stdio?: Array | string;\x0d\n *   detached?: boolean;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   serialization?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   signal?: AbortSignal;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   }} [options]\x0d\n * @returns {ChildProcess}\x0d\n */\x0d\nfunction spawn(file\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\x0d\n  validateTimeout(options.timeout);\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const killSignal = sanitizeKillSignal(options.killSignal);\x0d\n  const child = new ChildProcess();\x0d\n\x0d\n  debug('spawn'\x2C options);\x0d\n  child.spawn(options);\x0d\n\x0d\n  if (options.timeout > 0) {\x0d\n    let timeoutId = setTimeout(() => {\x0d\n      if (timeoutId) {\x0d\n        try {\x0d\n          child.kill(killSignal);\x0d\n        } catch (err) {\x0d\n          child.emit('error'\x2C err);\x0d\n        }\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    }\x2C options.timeout);\x0d\n\x0d\n    child.once('exit'\x2C () => {\x0d\n      if (timeoutId) {\x0d\n        clearTimeout(timeoutId);\x0d\n        timeoutId = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    const signal = options.signal;\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAbortListener);\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAbortListener\x2C { once: true });\x0d\n      child.once('exit'\x2C\x0d\n                 () => signal.removeEventListener('abort'\x2C onAbortListener));\x0d\n    }\x0d\n\x0d\n    function onAbortListener() {\x0d\n      abortChildProcess(child\x2C killSignal);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a new process synchronously using the given `file`.\x0d\n * @param {string} file\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   argv0?: string;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   shell?: boolean | string;\x0d\n *   windowsVerbatimArguments?: boolean;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {{\x0d\n *   pid: number;\x0d\n *   output: Array;\x0d\n *   stdout: Buffer | string;\x0d\n *   stderr: Buffer | string;\x0d\n *   status: number | null;\x0d\n *   signal: string | null;\x0d\n *   error: Error;\x0d\n *   }}\x0d\n */\x0d\nfunction spawnSync(file\x2C args\x2C options) {\x0d\n  options = {\x0d\n    maxBuffer: MAX_BUFFER\x2C\x0d\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x0d\n  };\x0d\n\x0d\n  debug('spawnSync'\x2C options);\x0d\n\x0d\n  // Validate the timeout\x2C if present.\x0d\n  validateTimeout(options.timeout);\x0d\n\x0d\n  // Validate maxBuffer\x2C if present.\x0d\n  validateMaxBuffer(options.maxBuffer);\x0d\n\x0d\n  // Validate and translate the kill signal\x2C if present.\x0d\n  options.killSignal = sanitizeKillSignal(options.killSignal);\x0d\n\x0d\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\x0d\n\x0d\n  if (options.input) {\x0d\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\x0d\n    stdin.input = options.input;\x0d\n  }\x0d\n\x0d\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\x0d\n  for (let i = 0; i < options.stdio.length; i++) {\x0d\n    const input = options.stdio[i] && options.stdio[i].input;\x0d\n    if (input != null) {\x0d\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\x0d\n      if (isArrayBufferView(input)) {\x0d\n        pipe.input = input;\x0d\n      } else if (typeof input === 'string') {\x0d\n        pipe.input = Buffer.from(input\x2C options.encoding);\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\x0d\n                                       ['Buffer'\x2C\x0d\n                                        'TypedArray'\x2C\x0d\n                                        'DataView'\x2C\x0d\n                                        'string']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return child_process.spawnSync(options);\x0d\n}\x0d\n\x0d\n\x0d\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\x0d\n  let err;\x0d\n  if (ret.error) {\x0d\n    err = ret.error;\x0d\n  } else if (ret.status !== 0) {\x0d\n    let msg = 'Command failed: ';\x0d\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\x0d\n    if (ret.stderr && ret.stderr.length > 0)\x0d\n      msg += `\\n${ret.stderr.toString()}`;\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    err = new Error(msg);\x0d\n  }\x0d\n  if (err) {\x0d\n    ObjectAssign(err\x2C ret);\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a file as a shell synchronously.\x0d\n * @param {string} command\x0d\n * @param {string[]} [args]\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   shell?: boolean | string;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execFileSync(command\x2C args\x2C options) {\x0d\n  options = normalizeSpawnArguments(command\x2C args\x2C options);\x0d\n\x0d\n  const inheritStderr = !options.stdio;\x0d\n  const ret = spawnSync(options.file\x2C\x0d\n                        ArrayPrototypeSlice(options.args\x2C 1)\x2C options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C options.args\x2C undefined);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Spawns a shell executing the given `command` synchronously.\x0d\n * @param {string} command\x0d\n * @param {{\x0d\n *   cwd?: string;\x0d\n *   input?: string | Buffer | TypedArray | DataView;\x0d\n *   stdio?: string | Array;\x0d\n *   env?: Object;\x0d\n *   shell?: string;\x0d\n *   uid?: number;\x0d\n *   gid?: number;\x0d\n *   timeout?: number;\x0d\n *   killSignal?: string | number;\x0d\n *   maxBuffer?: number;\x0d\n *   encoding?: string;\x0d\n *   windowsHide?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Buffer | string}\x0d\n */\x0d\nfunction execSync(command\x2C options) {\x0d\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\x0d\n  const inheritStderr = !opts.options.stdio;\x0d\n\x0d\n  const ret = spawnSync(opts.file\x2C opts.options);\x0d\n\x0d\n  if (inheritStderr && ret.stderr)\x0d\n    process.stderr.write(ret.stderr);\x0d\n\x0d\n  const err = checkExecSyncError(ret\x2C opts.args\x2C command);\x0d\n\x0d\n  if (err)\x0d\n    throw err;\x0d\n\x0d\n  return ret.stdout;\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateTimeout(timeout) {\x0d\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction validateMaxBuffer(maxBuffer) {\x0d\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\x0d\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\x0d\n                               'a positive number'\x2C\x0d\n                               maxBuffer);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction sanitizeKillSignal(killSignal) {\x0d\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\x0d\n    return convertToValidSignal(killSignal);\x0d\n  } else if (killSignal != null) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\x0d\n                                   ['string'\x2C 'number']\x2C\x0d\n                                   killSignal);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _forkChild\x2C\x0d\n  ChildProcess\x2C\x0d\n  exec\x2C\x0d\n  execFile\x2C\x0d\n  execFileSync\x2C\x0d\n  execSync\x2C\x0d\n  fork\x2C\x0d\n  spawn\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0xd484897246,96,0,25580,C0O0C4O25580,,
code-creation,Function,10,2130091,0xd484897ca6,748, node:child_process:1:1,0xd4848971c0,~
code-source-info,0xd484897ca
tick,0x7ff7c3ed8a50,2130831,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff7c4769d56,2130882,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff7c4f4446a,2130917,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
code-creation,LazyCompile,10,2131143,0xd48489a27e,82,debuglog node:internal/util/debuglog:71:18,0x1145bfbc9a0,~
code-source-info,0xd48489a27e,40,2302,3390,C0O2302C28O2432C32O2432C34O2878C35O2878C37O2901C41O2901C43O2994C48O3231C58O3252C63O3278C74O3231C79O3373C81O3387,,
tick,0x7ff7c4aca101,2131800,0,0x0,0,0xd48488154c,0xd484897e5d,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff7c498dd04,2133738,1,0x7ff7c402b3d0,2,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
code-creation,Eval,10,2134181,0xd48489d23e,5, node:internal/child_process:1:1,0xd48489cb50,~
script-source,97,node:internal/child_process,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  errnoException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\x0d\n    ERR_IPC_CHANNEL_CLOSED\x2C\x0d\n    ERR_IPC_DISCONNECTED\x2C\x0d\n    ERR_IPC_ONE_PIPE\x2C\x0d\n    ERR_IPC_SYNC_FORK\x2C\x0d\n    ERR_MISSING_ARGS\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst EventEmitter = require('events');\x0d\nconst net = require('net');\x0d\nconst dgram = require('dgram');\x0d\nconst inspect = require('internal/util/inspect').inspect;\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { Process } = internalBinding('process_wrap');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\x0d\nconst { TCP } = internalBinding('tcp_wrap');\x0d\nconst { TTY } = internalBinding('tty_wrap');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst SocketList = require('internal/socket_list');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst spawn_sync = internalBinding('spawn_sync');\x0d\nconst { kStateSymbol } = require('internal/dgram');\x0d\n\x0d\nconst {\x0d\n  UV_EACCES\x2C\x0d\n  UV_EAGAIN\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_EMFILE\x2C\x0d\n  UV_ENFILE\x2C\x0d\n  UV_ENOENT\x2C\x0d\n  UV_ENOSYS\x2C\x0d\n  UV_ESRCH\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\x0d\n\x0d\n// Lazy loaded for startup performance and to allow monkey patching of\x0d\n// internalBinding('http_parser').HTTPParser.\x0d\nlet freeParser;\x0d\nlet HTTPParser;\x0d\n\x0d\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\x0d\nconst kChannelHandle = Symbol('kChannelHandle');\x0d\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\x0d\n\x0d\n// This object contain function to convert TCP objects to native handle objects\x0d\n// and back again.\x0d\nconst handleConversion = {\x0d\n  'net.Native': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Server': {\x0d\n    simultaneousAccepts: true\x2C\x0d\n\x0d\n    send(message\x2C server\x2C options) {\x0d\n      return server._handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const server = new net.Server();\x0d\n      server.listen(handle\x2C () => {\x0d\n        emit(server);\x0d\n      });\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'net.Socket': {\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      if (!socket._handle)\x0d\n        return;\x0d\n\x0d\n      // If the socket was created by net.Server\x0d\n      if (socket.server) {\x0d\n        // The worker should keep track of the socket\x0d\n        message.key = socket.server._connectionKey;\x0d\n\x0d\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\x0d\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\x0d\n\x0d\n        // The server should no longer expose a .connection property\x0d\n        // and when asked to close it should query the socket status from\x0d\n        // the workers\x0d\n        if (firstTime) socket.server._setupWorker(socketList);\x0d\n\x0d\n        // Act like socket is detached\x0d\n        if (!options.keepOpen)\x0d\n          socket.server._connections--;\x0d\n      }\x0d\n\x0d\n      const handle = socket._handle;\x0d\n\x0d\n      // Remove handle from socket object\x2C it will be closed when the socket\x0d\n      // will be sent\x0d\n      if (!options.keepOpen) {\x0d\n        handle.onread = nop;\x0d\n        socket._handle = null;\x0d\n        socket.setTimeout(0);\x0d\n\x0d\n        if (freeParser === undefined)\x0d\n          freeParser = require('_http_common').freeParser;\x0d\n        if (HTTPParser === undefined)\x0d\n          HTTPParser = require('_http_common').HTTPParser;\x0d\n\x0d\n        // In case of an HTTP connection socket\x2C release the associated\x0d\n        // resources\x0d\n        if (socket.parser && socket.parser instanceof HTTPParser) {\x0d\n          freeParser(socket.parser\x2C null\x2C socket);\x0d\n          if (socket._httpMessage)\x0d\n            socket._httpMessage.detachSocket(socket);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\x0d\n      // Store the handle after successfully sending it\x2C so it can be closed\x0d\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\x0d\n      // just close it.\x0d\n      if (handle && !options.keepOpen) {\x0d\n        if (target) {\x0d\n          // There can only be one _pendingMessage as passing handles are\x0d\n          // processed one at a time: handles are stored in _handleQueue while\x0d\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\x0d\n          assert(!target._pendingMessage);\x0d\n          target._pendingMessage =\x0d\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\x0d\n        } else {\x0d\n          handle.close();\x0d\n        }\x0d\n      }\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new net.Socket({\x0d\n        handle: handle\x2C\x0d\n        readable: true\x2C\x0d\n        writable: true\x0d\n      });\x0d\n\x0d\n      // If the socket was created by net.Server we will track the socket\x0d\n      if (message.key) {\x0d\n\x0d\n        // Add socket to connections list\x0d\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\x0d\n        socketList.add({\x0d\n          socket: socket\x0d\n        });\x0d\n      }\x0d\n\x0d\n      emit(socket);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Native': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C handle\x2C options) {\x0d\n      return handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      emit(handle);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  'dgram.Socket': {\x0d\n    simultaneousAccepts: false\x2C\x0d\n\x0d\n    send(message\x2C socket\x2C options) {\x0d\n      message.dgramType = socket.type;\x0d\n\x0d\n      return socket[kStateSymbol].handle;\x0d\n    }\x2C\x0d\n\x0d\n    got(message\x2C handle\x2C emit) {\x0d\n      const socket = new dgram.Socket(message.dgramType);\x0d\n\x0d\n      socket.bind(handle\x2C () => {\x0d\n        emit(socket);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction stdioStringToArray(stdio\x2C channel) {\x0d\n  const options = [];\x0d\n\x0d\n  switch (stdio) {\x0d\n    case 'ignore':\x0d\n    case 'overlapped':\x0d\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\x0d\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\x0d\n    default:\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  if (channel) ArrayPrototypePush(options\x2C channel);\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction ChildProcess() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._closesNeeded = 1;\x0d\n  this._closesGot = 0;\x0d\n  this.connected = false;\x0d\n\x0d\n  this.signalCode = null;\x0d\n  this.exitCode = null;\x0d\n  this.killed = false;\x0d\n  this.spawnfile = null;\x0d\n\x0d\n  this._handle = new Process();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onexit = (exitCode\x2C signalCode) => {\x0d\n    if (signalCode) {\x0d\n      this.signalCode = signalCode;\x0d\n    } else {\x0d\n      this.exitCode = exitCode;\x0d\n    }\x0d\n\x0d\n    if (this.stdin) {\x0d\n      this.stdin.destroy();\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n\x0d\n    if (exitCode < 0) {\x0d\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\x0d\n      const err = errnoException(exitCode\x2C syscall);\x0d\n\x0d\n      if (this.spawnfile)\x0d\n        err.path = this.spawnfile;\x0d\n\x0d\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\x0d\n      this.emit('error'\x2C err);\x0d\n    } else {\x0d\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\x0d\n    }\x0d\n\x0d\n    // If any of the stdio streams have not been touched\x2C\x0d\n    // then pull all the data through so that it can get the\x0d\n    // eof and emit a 'close' event.\x0d\n    // Do it on nextTick so that the user has one last chance\x0d\n    // to consume the output\x2C if for example they only want to\x0d\n    // start reading the data once the process exits.\x0d\n    process.nextTick(flushStdio\x2C this);\x0d\n\x0d\n    maybeClose(this);\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction flushStdio(subprocess) {\x0d\n  const stdio = subprocess.stdio;\x0d\n\x0d\n  if (stdio == null) return;\x0d\n\x0d\n  for (let i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\x0d\n    // which data can be read from a stream\x2C e.g. being consumed on the\x0d\n    // native layer directly as a StreamBase.\x0d\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\x0d\n      continue;\x0d\n    }\x0d\n    stream.resume();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createSocket(pipe\x2C readable) {\x0d\n  return net.Socket({ handle: pipe\x2C readable\x2C writable: !readable });\x0d\n}\x0d\n\x0d\n\x0d\nfunction getHandleWrapType(stream) {\x0d\n  if (stream instanceof Pipe) return 'pipe';\x0d\n  if (stream instanceof TTY) return 'tty';\x0d\n  if (stream instanceof TCP) return 'tcp';\x0d\n  if (stream instanceof UDP) return 'udp';\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction closePendingHandle(target) {\x0d\n  target._pendingMessage.handle.close();\x0d\n  target._pendingMessage = null;\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.spawn = function(options) {\x0d\n  let i = 0;\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  // If no `stdio` option was given - use default\x0d\n  let stdio = options.stdio || 'pipe';\x0d\n\x0d\n  stdio = getValidStdio(stdio\x2C false);\x0d\n\x0d\n  const ipc = stdio.ipc;\x0d\n  const ipcFd = stdio.ipcFd;\x0d\n  stdio = options.stdio = stdio.stdio;\x0d\n\x0d\n\x0d\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\x0d\n                [undefined\x2C 'json'\x2C 'advanced']);\x0d\n  const serialization = options.serialization || 'json';\x0d\n\x0d\n  if (ipc !== undefined) {\x0d\n    // Let child process know about opened IPC channel\x0d\n    if (options.envPairs === undefined)\x0d\n      options.envPairs = [];\x0d\n    else\x0d\n      validateArray(options.envPairs\x2C 'options.envPairs');\x0d\n\x0d\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\x0d\n    ArrayPrototypePush(options.envPairs\x2C\x0d\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\x0d\n  }\x0d\n\x0d\n  validateString(options.file\x2C 'options.file');\x0d\n  this.spawnfile = options.file;\x0d\n\x0d\n  if (options.args === undefined) {\x0d\n    this.spawnargs = [];\x0d\n  } else {\x0d\n    validateArray(options.args\x2C 'options.args');\x0d\n    this.spawnargs = options.args;\x0d\n  }\x0d\n\x0d\n  const err = this._handle.spawn(options);\x0d\n\x0d\n  // Run-time errors should emit an error\x2C not throw an exception.\x0d\n  if (err === UV_EACCES ||\x0d\n      err === UV_EAGAIN ||\x0d\n      err === UV_EMFILE ||\x0d\n      err === UV_ENFILE ||\x0d\n      err === UV_ENOENT) {\x0d\n    process.nextTick(onErrorNT\x2C this\x2C err);\x0d\n\x0d\n    // There is no point in continuing when we've hit EMFILE or ENFILE\x0d\n    // because we won't be able to set up the stdio file descriptors.\x0d\n    if (err === UV_EMFILE || err === UV_ENFILE)\x0d\n      return err;\x0d\n  } else if (err) {\x0d\n    // Close all opened fds on error\x0d\n    for (i = 0; i < stdio.length; i++) {\x0d\n      const stream = stdio[i];\x0d\n      if (stream.type === 'pipe') {\x0d\n        stream.handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    throw errnoException(err\x2C 'spawn');\x0d\n  } else {\x0d\n    process.nextTick(onSpawnNT\x2C this);\x0d\n  }\x0d\n\x0d\n  this.pid = this._handle.pid;\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++) {\x0d\n    const stream = stdio[i];\x0d\n    if (stream.type === 'ignore') continue;\x0d\n\x0d\n    if (stream.ipc) {\x0d\n      this._closesNeeded++;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\x0d\n    // otherwise we might attempt to read from the stream when at the same time\x0d\n    // the child process does.\x0d\n    if (stream.type === 'wrap') {\x0d\n      stream.handle.reading = false;\x0d\n      stream.handle.readStop();\x0d\n      stream._stdio.pause();\x0d\n      stream._stdio.readableFlowing = false;\x0d\n      stream._stdio._readableState.reading = false;\x0d\n      stream._stdio[kIsUsedAsStdio] = true;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (stream.handle) {\x0d\n      // When i === 0 - we're dealing with stdin\x0d\n      // (which is the only one writable pipe).\x0d\n      stream.socket = createSocket(this.pid !== 0 ?\x0d\n        stream.handle : null\x2C i > 0);\x0d\n\x0d\n      if (i > 0 && this.pid !== 0) {\x0d\n        this._closesNeeded++;\x0d\n        stream.socket.on('close'\x2C () => {\x0d\n          maybeClose(this);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\x0d\n    stdio[0].socket : null;\x0d\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\x0d\n    stdio[1].socket : null;\x0d\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\x0d\n    stdio[2].socket : null;\x0d\n\x0d\n  this.stdio = [];\x0d\n\x0d\n  for (i = 0; i < stdio.length; i++)\x0d\n    ArrayPrototypePush(this.stdio\x2C\x0d\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\x0d\n\x0d\n  // Add .send() method and start listening for IPC data\x0d\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\x0d\n\x0d\n  return err;\x0d\n};\x0d\n\x0d\n\x0d\nfunction onErrorNT(self\x2C err) {\x0d\n  self._handle.onexit(err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onSpawnNT(self) {\x0d\n  self.emit('spawn');\x0d\n}\x0d\n\x0d\n\x0d\nChildProcess.prototype.kill = function(sig) {\x0d\n\x0d\n  const signal = sig === 0 ? sig :\x0d\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\x0d\n\x0d\n  if (this._handle) {\x0d\n    const err = this._handle.kill(signal);\x0d\n    if (err === 0) {\x0d\n      /* Success. */\x0d\n      this.killed = true;\x0d\n      return true;\x0d\n    }\x0d\n    if (err === UV_ESRCH) {\x0d\n      /* Already dead. */\x0d\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\x0d\n      /* The underlying platform doesn't support this signal. */\x0d\n      throw errnoException(err\x2C 'kill');\x0d\n    } else {\x0d\n      /* Other error\x2C almost certainly EPERM. */\x0d\n      this.emit('error'\x2C errnoException(err\x2C 'kill'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /* Kill didn't succeed. */\x0d\n  return false;\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n};\x0d\n\x0d\n\x0d\nChildProcess.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n};\x0d\n\x0d\nclass Control extends EventEmitter {\x0d\n  #channel = null;\x0d\n  #refs = 0;\x0d\n  #refExplicitlySet = false;\x0d\n\x0d\n  constructor(channel) {\x0d\n    super();\x0d\n    this.#channel = channel;\x0d\n  }\x0d\n\x0d\n  // The methods keeping track of the counter are being used to track the\x0d\n  // listener count on the child process object as well as when writes are\x0d\n  // in progress. Once the user has explicitly requested a certain state\x2C these\x0d\n  // methods become no-ops in order to not interfere with the user's intentions.\x0d\n  refCounted() {\x0d\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\x0d\n      this.#channel.ref();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unrefCounted() {\x0d\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\x0d\n      this.#channel.unref();\x0d\n      this.emit('unref');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#refExplicitlySet = true;\x0d\n    this.#channel.unref();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this.#channel ? this.#channel.fd : undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channelDeprecationMsg = '_channel is deprecated. ' +\x0d\n                              'Use ChildProcess.channel instead.';\x0d\n\x0d\nlet serialization;\x0d\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\x0d\n  const control = new Control(channel);\x0d\n  target.channel = control;\x0d\n  target[kChannelHandle] = channel;\x0d\n\x0d\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\x0d\n    get: deprecate(() => {\x0d\n      return target.channel;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    set: deprecate((val) => {\x0d\n      target.channel = val;\x0d\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x0d\n  });\x0d\n\x0d\n  target._handleQueue = null;\x0d\n  target._pendingMessage = null;\x0d\n\x0d\n  if (serialization === undefined)\x0d\n    serialization = require('internal/child_process/serialization');\x0d\n  const {\x0d\n    initMessageChannel\x2C\x0d\n    parseChannelMessages\x2C\x0d\n    writeChannelMessage\x0d\n  } = serialization[serializationMode];\x0d\n\x0d\n  let pendingHandle = null;\x0d\n  initMessageChannel(channel);\x0d\n  channel.pendingHandle = null;\x0d\n  channel.onread = function(arrayBuffer) {\x0d\n    const recvHandle = channel.pendingHandle;\x0d\n    channel.pendingHandle = null;\x0d\n    if (arrayBuffer) {\x0d\n      const nread = streamBaseState[kReadBytesOrError];\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\x0d\n      if (recvHandle)\x0d\n        pendingHandle = recvHandle;\x0d\n\x0d\n      for (const message of parseChannelMessages(channel\x2C pool)) {\x0d\n        // There will be at most one NODE_HANDLE message in every chunk we\x0d\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\x0d\n        // that we deliver the handle with the right message however.\x0d\n        if (isInternal(message)) {\x0d\n          if (message.cmd === 'NODE_HANDLE') {\x0d\n            handleMessage(message\x2C pendingHandle\x2C true);\x0d\n            pendingHandle = null;\x0d\n          } else {\x0d\n            handleMessage(message\x2C undefined\x2C true);\x0d\n          }\x0d\n        } else {\x0d\n          handleMessage(message\x2C undefined\x2C false);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      this.buffering = false;\x0d\n      target.disconnect();\x0d\n      channel.onread = nop;\x0d\n      channel.close();\x0d\n      target.channel = null;\x0d\n      maybeClose(target);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Object where socket lists will live\x0d\n  channel.sockets = { got: {}\x2C send: {} };\x0d\n\x0d\n  // Handlers will go through this\x0d\n  target.on('internalMessage'\x2C function(message\x2C handle) {\x0d\n    // Once acknowledged - continue sending handles.\x0d\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n        message.cmd === 'NODE_HANDLE_NACK') {\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        if (message.cmd === 'NODE_HANDLE_ACK') {\x0d\n          closePendingHandle(target);\x0d\n        } else if (target._pendingMessage.retransmissions++ ===\x0d\n                   MAX_HANDLE_RETRANSMISSIONS) {\x0d\n          closePendingHandle(target);\x0d\n          process.emitWarning('Handle did not reach the receiving process ' +\x0d\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\x0d\n        }\x0d\n      }\x0d\n\x0d\n      assert(ArrayIsArray(target._handleQueue));\x0d\n      const queue = target._handleQueue;\x0d\n      target._handleQueue = null;\x0d\n\x0d\n      if (target._pendingMessage) {\x0d\n        target._send(target._pendingMessage.message\x2C\x0d\n                     target._pendingMessage.handle\x2C\x0d\n                     target._pendingMessage.options\x2C\x0d\n                     target._pendingMessage.callback);\x0d\n      }\x0d\n\x0d\n      for (let i = 0; i < queue.length; i++) {\x0d\n        const args = queue[i];\x0d\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\x0d\n      }\x0d\n\x0d\n      // Process a pending disconnect (if any).\x0d\n      if (!target.connected && target.channel && !target._handleQueue)\x0d\n        target._disconnect();\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (message.cmd !== 'NODE_HANDLE') return;\x0d\n\x0d\n    // It is possible that the handle is not received because of some error on\x0d\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\x0d\n    // sender about it by sending a NODE_HANDLE_NACK message.\x0d\n    if (!handle)\x0d\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\x0d\n\x0d\n    // Acknowledge handle receival. Don't emit error events (for example if\x0d\n    // the other side has disconnected) because this call to send() is not\x0d\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\x0d\n    // a message.\x0d\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\x0d\n\x0d\n    const obj = handleConversion[message.type];\x0d\n\x0d\n    // Update simultaneous accepts on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      handle.setSimultaneousAccepts(false);\x0d\n    }\x0d\n\x0d\n    // Convert handle object\x0d\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\x0d\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\x0d\n    });\x0d\n  });\x0d\n\x0d\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    if (typeof handle === 'function') {\x0d\n      callback = handle;\x0d\n      handle = undefined;\x0d\n      options = undefined;\x0d\n    } else if (typeof options === 'function') {\x0d\n      callback = options;\x0d\n      options = undefined;\x0d\n    } else if (options !== undefined) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    options = { swallowErrors: false\x2C ...options };\x0d\n\x0d\n    if (this.connected) {\x0d\n      return this._send(message\x2C handle\x2C options\x2C callback);\x0d\n    }\x0d\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n    } else {\x0d\n      process.nextTick(() => this.emit('error'\x2C ex));\x0d\n    }\x0d\n    return false;\x0d\n  };\x0d\n\x0d\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\x0d\n    assert(this.connected || this.channel);\x0d\n\x0d\n    if (message === undefined)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n\x0d\n    // Non-serializable messages should not reach the remote\x0d\n    // end point; as any failure in the stringification there\x0d\n    // will result in error message that is weakly consumable.\x0d\n    // So perform a final check on message prior to sending.\x0d\n    if (typeof message !== 'string' &&\x0d\n        typeof message !== 'object' &&\x0d\n        typeof message !== 'number' &&\x0d\n        typeof message !== 'boolean') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\x0d\n    }\x0d\n\x0d\n    // Support legacy function signature\x0d\n    if (typeof options === 'boolean') {\x0d\n      options = { swallowErrors: options };\x0d\n    }\x0d\n\x0d\n    let obj;\x0d\n\x0d\n    // Package messages with a handle object\x0d\n    if (handle) {\x0d\n      // This message will be handled by an internalMessage event handler\x0d\n      message = {\x0d\n        cmd: 'NODE_HANDLE'\x2C\x0d\n        type: null\x2C\x0d\n        msg: message\x0d\n      };\x0d\n\x0d\n      if (handle instanceof net.Socket) {\x0d\n        message.type = 'net.Socket';\x0d\n      } else if (handle instanceof net.Server) {\x0d\n        message.type = 'net.Server';\x0d\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\x0d\n        message.type = 'net.Native';\x0d\n      } else if (handle instanceof dgram.Socket) {\x0d\n        message.type = 'dgram.Socket';\x0d\n      } else if (handle instanceof UDP) {\x0d\n        message.type = 'dgram.Native';\x0d\n      } else {\x0d\n        throw new ERR_INVALID_HANDLE_TYPE();\x0d\n      }\x0d\n\x0d\n      // Queue-up message and handle if we haven't received ACK yet.\x0d\n      if (this._handleQueue) {\x0d\n        ArrayPrototypePush(this._handleQueue\x2C {\x0d\n          callback: callback\x2C\x0d\n          handle: handle\x2C\x0d\n          options: options\x2C\x0d\n          message: message.msg\x2C\x0d\n        });\x0d\n        return this._handleQueue.length === 1;\x0d\n      }\x0d\n\x0d\n      obj = handleConversion[message.type];\x0d\n\x0d\n      // convert TCP object to native handle object\x0d\n      handle = ReflectApply(handleConversion[message.type].send\x2C\x0d\n                            target\x2C [message\x2C handle\x2C options]);\x0d\n\x0d\n      // If handle was sent twice\x2C or it is impossible to get native handle\x0d\n      // out of it - just send a text without the handle.\x0d\n      if (!handle)\x0d\n        message = message.msg;\x0d\n\x0d\n      // Update simultaneous accepts on Windows\x0d\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\x0d\n        handle.setSimultaneousAccepts(true);\x0d\n      }\x0d\n    } else if (this._handleQueue &&\x0d\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\x0d\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\x0d\n      // Queue request anyway to avoid out-of-order messages.\x0d\n      ArrayPrototypePush(this._handleQueue\x2C {\x0d\n        callback: callback\x2C\x0d\n        handle: null\x2C\x0d\n        options: options\x2C\x0d\n        message: message\x2C\x0d\n      });\x0d\n      return this._handleQueue.length === 1;\x0d\n    }\x0d\n\x0d\n    const req = new WriteWrap();\x0d\n\x0d\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\x0d\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n    if (err === 0) {\x0d\n      if (handle) {\x0d\n        if (!this._handleQueue)\x0d\n          this._handleQueue = [];\x0d\n        if (obj && obj.postSend)\x0d\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\x0d\n      }\x0d\n\x0d\n      if (wasAsyncWrite) {\x0d\n        req.oncomplete = () => {\x0d\n          control.unrefCounted();\x0d\n          if (typeof callback === 'function')\x0d\n            callback(null);\x0d\n        };\x0d\n        control.refCounted();\x0d\n      } else if (typeof callback === 'function') {\x0d\n        process.nextTick(callback\x2C null);\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup handle on error\x0d\n      if (obj && obj.postSend)\x0d\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\x0d\n\x0d\n      if (!options.swallowErrors) {\x0d\n        const ex = errnoException(err\x2C 'write');\x0d\n        if (typeof callback === 'function') {\x0d\n          process.nextTick(callback\x2C ex);\x0d\n        } else {\x0d\n          process.nextTick(() => this.emit('error'\x2C ex));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\x0d\n    return channel.writeQueueSize < (65536 * 2);\x0d\n  };\x0d\n\x0d\n  // Connected will be set to false immediately when a disconnect() is\x0d\n  // requested\x2C even though the channel might still be alive internally to\x0d\n  // process queued messages. The three states are distinguished as follows:\x0d\n  // - disconnect() never requested: channel is not null and connected\x0d\n  //   is true\x0d\n  // - disconnect() requested\x2C messages in the queue: channel is not null\x0d\n  //   and connected is false\x0d\n  // - disconnect() requested\x2C channel actually disconnected: channel is\x0d\n  //   null and connected is false\x0d\n  target.connected = true;\x0d\n\x0d\n  target.disconnect = function() {\x0d\n    if (!this.connected) {\x0d\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Do not allow any new messages to be written.\x0d\n    this.connected = false;\x0d\n\x0d\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\x0d\n    // postpone the disconnect so that it happens internally after the\x0d\n    // queue is flushed.\x0d\n    if (!this._handleQueue)\x0d\n      this._disconnect();\x0d\n  };\x0d\n\x0d\n  target._disconnect = function() {\x0d\n    assert(this.channel);\x0d\n\x0d\n    // This marks the fact that the channel is actually disconnected.\x0d\n    this.channel = null;\x0d\n    this[kChannelHandle] = null;\x0d\n\x0d\n    if (this._pendingMessage)\x0d\n      closePendingHandle(this);\x0d\n\x0d\n    let fired = false;\x0d\n    function finish() {\x0d\n      if (fired) return;\x0d\n      fired = true;\x0d\n\x0d\n      channel.close();\x0d\n      target.emit('disconnect');\x0d\n    }\x0d\n\x0d\n    // If a message is being read\x2C then wait for it to complete.\x0d\n    if (channel.buffering) {\x0d\n      this.once('message'\x2C finish);\x0d\n      this.once('internalMessage'\x2C finish);\x0d\n\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(finish);\x0d\n  };\x0d\n\x0d\n  function emit(event\x2C message\x2C handle) {\x0d\n    target.emit(event\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  function handleMessage(message\x2C handle\x2C internal) {\x0d\n    if (!target.channel)\x0d\n      return;\x0d\n\x0d\n    const eventName = (internal ? 'internalMessage' : 'message');\x0d\n\x0d\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\x0d\n  }\x0d\n\x0d\n  channel.readStart();\x0d\n  return control;\x0d\n}\x0d\n\x0d\nconst INTERNAL_PREFIX = 'NODE_';\x0d\nfunction isInternal(message) {\x0d\n  return (message !== null &&\x0d\n          typeof message === 'object' &&\x0d\n          typeof message.cmd === 'string' &&\x0d\n          message.cmd.length > INTERNAL_PREFIX.length &&\x0d\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\x0d\n            INTERNAL_PREFIX);\x0d\n}\x0d\n\x0d\nconst nop = FunctionPrototype;\x0d\n\x0d\nfunction getValidStdio(stdio\x2C sync) {\x0d\n  let ipc;\x0d\n  let ipcFd;\x0d\n\x0d\n  // Replace shortcut with an array\x0d\n  if (typeof stdio === 'string') {\x0d\n    stdio = stdioStringToArray(stdio);\x0d\n  } else if (!ArrayIsArray(stdio)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n  }\x0d\n\x0d\n  // At least 3 stdio will be created\x0d\n  // Don't concat() a new Array() because it would be sparse\x2C and\x0d\n  // stdio.reduce() would skip the sparse elements of stdio.\x0d\n  // See https://stackoverflow.com/a/5501711/3561\x0d\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\x0d\n\x0d\n  // Translate stdio into C++-readable form\x0d\n  // (i.e. PipeWraps or fds)\x0d\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\x0d\n    function cleanup() {\x0d\n      for (let i = 0; i < acc.length; i++) {\x0d\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\x0d\n          acc[i].handle.close();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Defaults\x0d\n    if (stdio == null) {\x0d\n      stdio = i < 3 ? 'pipe' : 'ignore';\x0d\n    }\x0d\n\x0d\n    if (stdio === 'ignore') {\x0d\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\x0d\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\x0d\n               (typeof stdio === 'number' && stdio < 0)) {\x0d\n      const a = {\x0d\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\x0d\n        readable: i === 0\x2C\x0d\n        writable: i !== 0\x0d\n      };\x0d\n\x0d\n      if (!sync)\x0d\n        a.handle = new Pipe(PipeConstants.SOCKET);\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C a);\x0d\n    } else if (stdio === 'ipc') {\x0d\n      if (sync || ipc !== undefined) {\x0d\n        // Cleanup previously created pipes\x0d\n        cleanup();\x0d\n        if (!sync)\x0d\n          throw new ERR_IPC_ONE_PIPE();\x0d\n        else\x0d\n          throw new ERR_IPC_SYNC_FORK();\x0d\n      }\x0d\n\x0d\n      ipc = new Pipe(PipeConstants.IPC);\x0d\n      ipcFd = i;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'pipe'\x2C\x0d\n        handle: ipc\x2C\x0d\n        ipc: true\x0d\n      });\x0d\n    } else if (stdio === 'inherit') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'inherit'\x2C\x0d\n        fd: i\x0d\n      });\x0d\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'fd'\x2C\x0d\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x0d\n      });\x0d\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\x0d\n               getHandleWrapType(stdio._handle)) {\x0d\n      const handle = getHandleWrapType(stdio) ?\x0d\n        stdio :\x0d\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\x0d\n\x0d\n      ArrayPrototypePush(acc\x2C {\x0d\n        type: 'wrap'\x2C\x0d\n        wrapType: getHandleWrapType(handle)\x2C\x0d\n        handle: handle\x2C\x0d\n        _stdio: stdio\x0d\n      });\x0d\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\x0d\n      if (!sync) {\x0d\n        cleanup();\x0d\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\x0d\n      }\x0d\n    } else {\x0d\n      // Cleanup\x0d\n      cleanup();\x0d\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\x0d\n    }\x0d\n\x0d\n    return acc;\x0d\n  }\x2C []);\x0d\n\x0d\n  return { stdio\x2C ipc\x2C ipcFd };\x0d\n}\x0d\n\x0d\n\x0d\nfunction getSocketList(type\x2C worker\x2C key) {\x0d\n  const sockets = worker[kChannelHandle].sockets[type];\x0d\n  let socketList = sockets[key];\x0d\n  if (!socketList) {\x0d\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\x0d\n    socketList = sockets[key] = new Construct(worker\x2C key);\x0d\n  }\x0d\n  return socketList;\x0d\n}\x0d\n\x0d\n\x0d\nfunction maybeClose(subprocess) {\x0d\n  subprocess._closesGot++;\x0d\n\x0d\n  if (subprocess._closesGot === subprocess._closesNeeded) {\x0d\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction spawnSync(options) {\x0d\n  const result = spawn_sync.spawn(options);\x0d\n\x0d\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\x0d\n    for (let i = 0; i < result.output.length; i++) {\x0d\n      if (!result.output[i])\x0d\n        continue;\x0d\n      result.output[i] = result.output[i].toString(options.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  result.stdout = result.output && result.output[1];\x0d\n  result.stderr = result.output && result.output[2];\x0d\n\x0d\n  if (result.error) {\x0d\n    result.error = errnoException(result.error\x2C 'spawnSync ' + options.file);\x0d\n    result.error.path = options.file;\x0d\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ChildProcess\x2C\x0d\n  kChannelHandle\x2C\x0d\n  setupChannel\x2C\x0d\n  getValidStdio\x2C\x0d\n  stdioStringToArray\x2C\x0d\n  spawnSync\x0d\n};\x0d\n
code-source-info,0xd48489d23e,97,0,31901,C0O0C4O31901,,
code-creation,Function,10,2139936,0xd48489e84e,1253, node:internal/child_process:1:1,0xd48489d1b8,~
code-source-info,0xd48489e84e
code-creation,Function,10,2140512,0xd48489efb6,35,<instance_members_initializer> node:internal/child_process:524:3,0xd48489df18,~
code-source-info,0xd48489efb6,97,14177,14236,C3O14188C16O14205C26O14231C34O14236,,
tick,0x7ff7c4f44443,2141009,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff7c47699ca,2141060,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff7c4f43034,2141101,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff7c498e21f,2141785,1,0x7ff7c402b3d0,2,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd48489ea39,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff7c45f5c01,2143648,1,0x7ff7c402b3d0,2,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd48489ea39,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
code-creation,Eval,10,2145150,0xd4848a3166,5, node:net:1:1,0xd4848a2988,~
script-source,98,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  errnoException\x2C\x0d\n  exceptionWithHostPort\x2C\x0d\n  uvExceptionWithHostPort\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst {\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n} = require('internal/dtrace');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\n\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x0d\n    );\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kSetNoDelay] = false;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw errnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        value: 0\x2C writable: true\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(errnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed\x2C\x0d\n        self._readableState);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const er = new Error('This socket has been ended by the other party');\x0d\n  er.code = 'EPIPE';\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C\x0d\n              enable ? this.setNoDelay : () => this.setNoDelay(enable));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  const newValue = enable === undefined ? true : !!enable;\x0d\n  if (this._handle.setNoDelay && newValue !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = newValue;\x0d\n    this._handle.setNoDelay(newValue);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(setting\x2C msecs) {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C () => this.setKeepAlive(setting\x2C msecs));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setKeepAlive)\x0d\n    this._handle.setKeepAlive(setting\x2C ~~(msecs / 1000));\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(errnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug('_read');\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  DTRACE_NET_STREAM_END(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(errnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    this._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      this.emit('close'\x2C isException);\x0d\n    });\x0d\n    this._handle.onread = noop;\x0d\n    this._handle = null;\x0d\n    this._sockname = null;\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    this._peername = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getpeername(this._peername);\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address\x2C afterConnect);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup !== undefined)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: options.family\x2C\x0d\n    hints: options.hints || 0\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  let self = handle[owner_symbol];\x0d\n\x0d\n  if (self.constructor.name === 'ReusedHandle') {\x0d\n    self = self.handle;\x0d\n  }\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n\x0d\n  } else {\x0d\n    self.connecting = false;\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = exceptionWithHostPort(status\x2C\x0d\n                                     'connect'\x2C\x0d\n                                     req.address\x2C\x0d\n                                     req.port\x2C\x0d\n                                     details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    signal.addEventListener('abort'\x2C onAborted);\x0d\n    self.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = {};\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = uvExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = uvExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n  };\x0d\n\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = exceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C pipeName\x2C -1\x2C -1\x2C\x0d\n                    backlog\x2C undefined\x2C options.exclusive);\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw errnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw errnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C errnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x0d\n  });\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n\x0d\n  DTRACE_NET_SERVER_CONNECTION(socket);\x0d\n  self.emit('connection'\x2C socket);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n};\x0d\n
code-source-info,0xd4848a3166,98,0,49543,C0O0C4O49543,,
code-creation,Function,10,2154258,0xd4848a6036,2513, node:net:1:1,0xd4848a30e0,~
code-source-info,0xd4848a6036,98,0,49543,C0O0C411O1183C417O1200C423O1226C429O1238C435O1248C441O1259C447O1275C453O1294C459O1319C464O1344C469O1394C475O1394C479O1394C481O1429C487O1429C491O1429C493O1461C499O1461C504O1494C518O1495C524O1461C526O1628C532O1628C537O1553C543O1562C548O1573C553O1584C559O1609C565O1669C571O1669C575O1669C577O1758C580O1758C585O1709C591O1727C597O1741C603O1803C609O1803C614O1792C620O1851C623O1851C628O1831C634O1902C637O1902C642O1885C648O2002C651O2002C656O1946C662O1954C668O1984C674O2102C677O2102C682O2043C688O2052C694O2083C700O2238C706O2238C711O2144C717O2159C728O2201C734O2218C740O2448C746O2448C751O2283C757O2301C763O2318C769O2335C774O2356C780O2368C785O2385C790O2406C796O2418C802O2432C808O2844C814O2844C819O2844C824O2515C830O2548C836O2575C842O2603C848O2629C854O2658C860O2690C866O2719C872O2743C878O2770C884O2789C890O2815C896O2898C902O2898C907O2881C913O3061C919O3061C924O2942C930O2966C936O2987C942O3005C948O3024C954O3041C960O3122C963O3122C967O3122C969O3224C975O3224C980O3164C986O3197C992O3307C993O3307C995O3321C996O3321C998O3331C999O3331C1001O3347C1002O3347C1004O3390C1010O3390C1015O3373C1021O3431C1027O3431C1032O3418C1038O3488C1040O3488C1042O3526C1044O3526C1046O3553C1049O3561C1056O3570C1059O3553C1061O3599C1065O3599C1067O7199C1070O7199C1074O7199C1076O7244C1079O7244C1083O7244C1085O7290C1088O7290C1092O7290C1094O11513C1097O11541C1105O11559C1110O11566C1115O11513C1120O11579C1126O11615C1131O11579C1136O11658C1139O11665C1148O11687C1152O11923C1155O11930C1164O11947C1168O13550C1171O13557C1178O13578C1182O13603C1185O13610C1194O13631C1198O14159C1201O14166C1210O14187C1214O14660C1217O14667C1226O14690C1230O14956C1233O14963C1242O14981C1246O15036C1252O15064C1266O15100C1274O15036C1279O15155C1285O15183C1299O15210C1307O15155C1312O15302C1318O15330C1332O15365C1340O15302C1345O15702C1351O15730C1365O15765C1373O15702C1378O15858C1384O15886C1389O15897C1395O15921C1406O15858C1411O16302C1414O16309C1423O16325C1427O16572C1430O16579C1439O16593C1443O16794C1446O16801C1455O16817C1459O17171C1462O17178C1471O17195C1475O17394C1478O17401C1487O17416C1491O17770C1494O17777C1503O17799C1507O17963C1510O17970C1519O17989C1523O18988C1526O18995C1535O19018C1539O19498C1547O19498C1552O19622C1560O19622C1565O19725C1573O19725C1578O19825C1586O19825C1596O19921C1599O19928C1608O19951C1616O20245C1624O20245C1634O20348C1642O20348C1652O20442C1655O20449C1660O20459C1664O20477C1672O20533C1675O20540C1684O20564C1692O21363C1695O21370C1704O21388C1712O21467C1715O21474C1724O21491C1732O21742C1740O21742C1750O21886C1758O21886C1768O25478C1771O25485C1780O25503C1788O30058C1791O30065C1800O30079C1808O30286C1811O30293C1820O30309C1828O33238C1831O33266C1843O33290C1852O33238C1862O33303C1868O33303C1878O37424C1881O37431C1892O37450C1900O38954C1903O38961C1916O38978C1924O43047C1930O43075C1951O43109C1963O43047C1973O43207C1976O43214C1989O43232C1997O44354C2000O44361C2013O44386C2021O45183C2024O45190C2037O45206C2045O46117C2048O46124C2061O46154C2069O46654C2072O46661C2084O46684C2097O46708C2105O47041C2111O47066C2132O47091C2144O47132C2156O47041C2166O47182C2172O47210C2189O47237C2201O47273C2213O47182C2223O47318C2226O47325C2239O47348C2247O47603C2250O47610C2263O47624C2271O47736C2274O47743C2287O47759C2295O47876C2297O47932C2298O47932C2300O47941C2311O47965C2312O47965C2314O47991C2323O48721C2328O49003C2338O49046C2348O49085C2358O49103C2368O49371C2378O49401C2388O49413C2398O49436C2408O49453C2418O49472C2428O49483C2438O49494C2448O49513C2503O49018C2512O49542,,
tick,0x7ff7c44b81bf,2155244,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd48489ea39,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff86e9f4383,2155315,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd48489ea39,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff7c3f6f9a1,2155887,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd48489ea39,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff86e9f4383,2155969,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd48489ea39,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff7c4f43ba9,2156015,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd48489ea39,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff7c455ace6,2156083,1,0x7ff7c402b3d0,6,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd48489ea39,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
code-creation,Eval,10,2157206,0xd4848ab826,5, node:internal/net:1:1,0xd4848ab660,~
script-source,99,node:internal/net,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst { writeBuffer } = internalBinding('fs');\x0d\nconst errors = require('internal/errors');\x0d\n\x0d\n// IPv4 Segment\x0d\nconst v4Seg = '(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';\x0d\nconst v4Str = `(${v4Seg}[.]){3}${v4Seg}`;\x0d\nconst IPv4Reg = new RegExp(`^${v4Str}$`);\x0d\n\x0d\n// IPv6 Segment\x0d\nconst v6Seg = '(?:[0-9a-fA-F]{1\x2C4})';\x0d\nconst IPv6Reg = new RegExp('^(' +\x0d\n  `(?:${v6Seg}:){7}(?:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){6}(?:${v4Str}|:${v6Seg}|:)|` +\x0d\n  `(?:${v6Seg}:){5}(?::${v4Str}|(:${v6Seg}){1\x2C2}|:)|` +\x0d\n  `(?:${v6Seg}:){4}(?:(:${v6Seg}){0\x2C1}:${v4Str}|(:${v6Seg}){1\x2C3}|:)|` +\x0d\n  `(?:${v6Seg}:){3}(?:(:${v6Seg}){0\x2C2}:${v4Str}|(:${v6Seg}){1\x2C4}|:)|` +\x0d\n  `(?:${v6Seg}:){2}(?:(:${v6Seg}){0\x2C3}:${v4Str}|(:${v6Seg}){1\x2C5}|:)|` +\x0d\n  `(?:${v6Seg}:){1}(?:(:${v6Seg}){0\x2C4}:${v4Str}|(:${v6Seg}){1\x2C6}|:)|` +\x0d\n  `(?::((?::${v6Seg}){0\x2C5}:${v4Str}|(?::${v6Seg}){1\x2C7}|:))` +\x0d\n')(%[0-9a-zA-Z-.:]{1\x2C})?$');\x0d\n\x0d\nfunction isIPv4(s) {\x0d\n  return RegExpPrototypeTest(IPv4Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIPv6(s) {\x0d\n  return RegExpPrototypeTest(IPv6Reg\x2C s);\x0d\n}\x0d\n\x0d\nfunction isIP(s) {\x0d\n  if (isIPv4(s)) return 4;\x0d\n  if (isIPv6(s)) return 6;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\nfunction makeSyncWrite(fd) {\x0d\n  return function(chunk\x2C enc\x2C cb) {\x0d\n    if (enc !== 'buffer')\x0d\n      chunk = Buffer.from(chunk\x2C enc);\x0d\n\x0d\n    this._handle.bytesWritten += chunk.length;\x0d\n\x0d\n    const ctx = {};\x0d\n    writeBuffer(fd\x2C chunk\x2C 0\x2C chunk.length\x2C null\x2C undefined\x2C ctx);\x0d\n    if (ctx.errno !== undefined) {\x0d\n      const ex = errors.uvException(ctx);\x0d\n      ex.errno = ctx.errno;\x0d\n      return cb(ex);\x0d\n    }\x0d\n    cb();\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  makeSyncWrite\x2C\x0d\n  normalizedArgsSymbol: Symbol('normalizedArgs')\x0d\n};\x0d\n
code-source-info,0xd4848ab826,99,0,1818,C0O0C4O1818,,
code-creation,Function,10,2157832,0xd4848abc16,617, node:internal/net:1:1,0xd4848ab7a0,~
code-source-info,0xd4848abc16,99,0,1818,C0O0C45O28C50O39C56O63C61O107C64O107C69O124C73O107C75O158C78O158C83O142C89O197C92O197C96O197C98O259C101O330C106O334C119O349C124O375C129O390C142O375C147O375C149O435C152O476C160O503C173O519C183O492C192O542C205O558C218O568C228O531C237O591C250O608C263O619C273O580C282O648C295O666C308O681C321O692C331O637C340O721C353O739C366O754C379O765C389O710C398O794C411O812C424O827C437O838C447O783C456O867C469O885C482O900C495O911C505O856C514O946C527O961C540O974C550O929C556O992C562O476C567O476C569O1695C576O1717C582O1726C588O1737C594O1748C601O1788C611O1710C616O1817,,
tick,0x7ff7c44b81b0,2158112,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd4848a624a,0x5bf4dfc5bd,0x5bf4dfb88d,0xd48489ea39,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
code-creation,Eval,10,2158988,0xd4848ad56e,5, node:internal/dtrace:1:1,0xd4848ad428,~
script-source,100,node:internal/dtrace,'use strict';\x0d\n\x0d\nconst config = internalBinding('config');\x0d\n\x0d\nconst {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST = () => {}\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE = () => {}\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION = () => {}\x2C\x0d\n  DTRACE_NET_STREAM_END = () => {}\x0d\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\x0d\n\x0d\nmodule.exports = {\x0d\n  DTRACE_HTTP_CLIENT_REQUEST\x2C\x0d\n  DTRACE_HTTP_CLIENT_RESPONSE\x2C\x0d\n  DTRACE_HTTP_SERVER_REQUEST\x2C\x0d\n  DTRACE_HTTP_SERVER_RESPONSE\x2C\x0d\n  DTRACE_NET_SERVER_CONNECTION\x2C\x0d\n  DTRACE_NET_STREAM_END\x0d\n};\x0d\n
code-source-info,0xd4848ad56e,100,0,589,C0O0C4O589,,
code-creation,Function,10,2159115,0xd4848ada46,140, node:internal/dtrace:1:1,0xd4848ad4e8,~
code-source-info,0xd4848ada46,100,0,589,C0O32C3O32C8O333C17O345C25O73C36O115C47O158C58O200C69O243C80O287C91O381C98O403C104O434C110O466C116O497C122O529C128O562C134O396C139O588,,
tick,0x7ff7c440ed3d,2159561,0,0x0,0,0x7ff7c458d990,0x7ff7c4a83bd4,0xd4848a64a1,0x5bf4dfc5bd,0x5bf4dfb88d,0xd48489ea39,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
code-creation,LazyCompile,10,2160056,0xd4848ae9ce,34,protoGetter node:net:718:21,0xd4848a35a8,~
code-source-info,0xd4848ae9ce,98,19348,19494,C0O19370C8O19398C13O19409C20O19476C27O19370C33O19493,,
tick,0x7ff7c4985968,2161613,1,0x7ff7c402b3d0,2,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd48489ea45,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
code-creation,Eval,10,2162709,0xd4848b3d36,5, node:dgram:1:1,0xd4848b37c0,~
script-source,101,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x2C\x0d\n} = require('internal/dgram');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MISSING_ARGS\x2C\x0d\n  ERR_SOCKET_ALREADY_BOUND\x2C\x0d\n  ERR_SOCKET_BAD_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_BUFFER_SIZE\x2C\x0d\n  ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\x0d\n  ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\x0d\n  ERR_INVALID_FD_TYPE\x0d\n} = errors.codes;\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateString\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n} = require('internal/validators');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\x0d\n\x0d\nconst {\x0d\n  constants: { UV_UDP_IPV6ONLY }\x2C\x0d\n  UDP\x2C\x0d\n  SendWrap\x0d\n} = internalBinding('udp_wrap');\x0d\n\x0d\nconst BIND_STATE_UNBOUND = 0;\x0d\nconst BIND_STATE_BINDING = 1;\x0d\nconst BIND_STATE_BOUND = 2;\x0d\n\x0d\nconst CONNECT_STATE_DISCONNECTED = 0;\x0d\nconst CONNECT_STATE_CONNECTING = 1;\x0d\nconst CONNECT_STATE_CONNECTED = 2;\x0d\n\x0d\nconst RECV_BUFFER = true;\x0d\nconst SEND_BUFFER = false;\x0d\n\x0d\n// Lazily loaded\x0d\nlet _cluster = null;\x0d\nfunction lazyLoadCluster() {\x0d\n  if (!_cluster) _cluster = require('cluster');\x0d\n  return _cluster;\x0d\n}\x0d\n\x0d\nconst errnoException = errors.errnoException;\x0d\nconst exceptionWithHostPort = errors.exceptionWithHostPort;\x0d\n\x0d\n\x0d\nfunction Socket(type\x2C listener) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n  let lookup;\x0d\n  let recvBufferSize;\x0d\n  let sendBufferSize;\x0d\n\x0d\n  let options;\x0d\n  if (type !== null && typeof type === 'object') {\x0d\n    options = type;\x0d\n    type = options.type;\x0d\n    lookup = options.lookup;\x0d\n    recvBufferSize = options.recvBufferSize;\x0d\n    sendBufferSize = options.sendBufferSize;\x0d\n  }\x0d\n\x0d\n  const handle = newHandle(type\x2C lookup);\x0d\n  handle[owner_symbol] = this;\x0d\n\x0d\n  this[async_id_symbol] = handle.getAsyncId();\x0d\n  this.type = type;\x0d\n\x0d\n  if (typeof listener === 'function')\x0d\n    this.on('message'\x2C listener);\x0d\n\x0d\n  this[kStateSymbol] = {\x0d\n    handle\x2C\x0d\n    receiving: false\x2C\x0d\n    bindState: BIND_STATE_UNBOUND\x2C\x0d\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\x0d\n    queue: undefined\x2C\x0d\n    reuseAddr: options && options.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\x0d\n    ipv6Only: options && options.ipv6Only\x2C\x0d\n    recvBufferSize\x2C\x0d\n    sendBufferSize\x0d\n  };\x0d\n\x0d\n  if (options?.signal !== undefined) {\x0d\n    const { signal } = options;\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n    const onAborted = () => {\x0d\n      this.close();\x0d\n    };\x0d\n    if (signal.aborted) {\x0d\n      onAborted();\x0d\n    } else {\x0d\n      signal.addEventListener('abort'\x2C onAborted);\x0d\n      this.once('close'\x2C () => signal.removeEventListener('abort'\x2C onAborted));\x0d\n    }\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction createSocket(type\x2C listener) {\x0d\n  return new Socket(type\x2C listener);\x0d\n}\x0d\n\x0d\n\x0d\nfunction startListening(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  state.handle.onmessage = onMessage;\x0d\n  // Todo: handle errors\x0d\n  state.handle.recvStart();\x0d\n  state.receiving = true;\x0d\n  state.bindState = BIND_STATE_BOUND;\x0d\n\x0d\n  if (state.recvBufferSize)\x0d\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\x0d\n\x0d\n  if (state.sendBufferSize)\x0d\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\x0d\n\x0d\n  socket.emit('listening');\x0d\n}\x0d\n\x0d\nfunction replaceHandle(self\x2C newHandle) {\x0d\n  const state = self[kStateSymbol];\x0d\n  const oldHandle = state.handle;\x0d\n\x0d\n  // Set up the handle that we got from primary.\x0d\n  newHandle.lookup = oldHandle.lookup;\x0d\n  newHandle.bind = oldHandle.bind;\x0d\n  newHandle.send = oldHandle.send;\x0d\n  newHandle[owner_symbol] = self;\x0d\n\x0d\n  // Replace the existing handle by the handle we got from primary.\x0d\n  oldHandle.close();\x0d\n  state.handle = newHandle;\x0d\n  // Check if the udp handle was connected and set the state accordingly\x0d\n  if (isConnected(self))\x0d\n    state.connectState = CONNECT_STATE_CONNECTED;\x0d\n}\x0d\n\x0d\nfunction bufferSize(self\x2C size\x2C buffer) {\x0d\n  if (size >>> 0 !== size)\x0d\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\x0d\n\x0d\n  const ctx = {};\x0d\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\x0d\n  if (ret === undefined) {\x0d\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// Query primary process to get the server handle and utilize it.\x0d\nfunction bindServerHandle(self\x2C options\x2C errCb) {\x0d\n  const cluster = lazyLoadCluster();\x0d\n\x0d\n  const state = self[kStateSymbol];\x0d\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\x0d\n    if (err) {\x0d\n      errCb(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!state.handle) {\x0d\n      // Handle has been closed in the mean time.\x0d\n      return handle.close();\x0d\n    }\x0d\n\x0d\n    replaceHandle(self\x2C handle);\x0d\n    startListening(self);\x0d\n  });\x0d\n}\x0d\n\x0d\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\x0d\n  let port = port_;\x0d\n\x0d\n  healthCheck(this);\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_UNBOUND)\x0d\n    throw new ERR_SOCKET_ALREADY_BOUND();\x0d\n\x0d\n  state.bindState = BIND_STATE_BINDING;\x0d\n\x0d\n  const cb = arguments.length && arguments[arguments.length - 1];\x0d\n  if (typeof cb === 'function') {\x0d\n    function removeListeners() {\x0d\n      this.removeListener('error'\x2C removeListeners);\x0d\n      this.removeListener('listening'\x2C onListening);\x0d\n    }\x0d\n\x0d\n    function onListening() {\x0d\n      FunctionPrototypeCall(removeListeners\x2C this);\x0d\n      FunctionPrototypeCall(cb\x2C this);\x0d\n    }\x0d\n\x0d\n    this.on('error'\x2C removeListeners);\x0d\n    this.on('listening'\x2C onListening);\x0d\n  }\x0d\n\x0d\n  if (port !== null &&\x0d\n      typeof port === 'object' &&\x0d\n      typeof port.recvStart === 'function') {\x0d\n    replaceHandle(this\x2C port);\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Open an existing fd instead of creating a new one.\x0d\n  if (port !== null && typeof port === 'object' &&\x0d\n      isInt32(port.fd) && port.fd > 0) {\x0d\n    const fd = port.fd;\x0d\n    const exclusive = !!port.exclusive;\x0d\n    const state = this[kStateSymbol];\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: null\x2C\x0d\n        port: null\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd\x2C\x0d\n        flags: null\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = errnoException(err\x2C 'open');\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP')\x0d\n      throw new ERR_INVALID_FD_TYPE(type);\x0d\n    const err = state.handle.open(fd);\x0d\n\x0d\n    if (err)\x0d\n      throw errnoException(err\x2C 'open');\x0d\n\x0d\n    // Check if the udp handle was connected and set the state accordingly\x0d\n    if (isConnected(this))\x0d\n      state.connectState = CONNECT_STATE_CONNECTED;\x0d\n\x0d\n    startListening(this);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  let address;\x0d\n  let exclusive;\x0d\n\x0d\n  if (port !== null && typeof port === 'object') {\x0d\n    address = port.address || '';\x0d\n    exclusive = !!port.exclusive;\x0d\n    port = port.port;\x0d\n  } else {\x0d\n    address = typeof address_ === 'function' ? '' : address_;\x0d\n    exclusive = false;\x0d\n  }\x0d\n\x0d\n  // Defaulting address for bind to all interfaces\x0d\n  if (!address) {\x0d\n    if (this.type === 'udp4')\x0d\n      address = '0.0.0.0';\x0d\n    else\x0d\n      address = '::';\x0d\n  }\x0d\n\x0d\n  // Resolve address first\x0d\n  state.handle.lookup(address\x2C (err\x2C ip) => {\x0d\n    if (err) {\x0d\n      state.bindState = BIND_STATE_UNBOUND;\x0d\n      this.emit('error'\x2C err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const cluster = lazyLoadCluster();\x0d\n\x0d\n    let flags = 0;\x0d\n    if (state.reuseAddr)\x0d\n      flags |= UV_UDP_REUSEADDR;\x0d\n    if (state.ipv6Only)\x0d\n      flags |= UV_UDP_IPV6ONLY;\x0d\n\x0d\n    if (cluster.isWorker && !exclusive) {\x0d\n      bindServerHandle(this\x2C {\x0d\n        address: ip\x2C\x0d\n        port: port\x2C\x0d\n        addressType: this.type\x2C\x0d\n        fd: -1\x2C\x0d\n        flags: flags\x0d\n      }\x2C (err) => {\x0d\n        // Callback to handle error.\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n      });\x0d\n    } else {\x0d\n      if (!state.handle)\x0d\n        return; // Handle has been closed in the mean time\x0d\n\x0d\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\x0d\n      if (err) {\x0d\n        const ex = exceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\x0d\n        state.bindState = BIND_STATE_UNBOUND;\x0d\n        this.emit('error'\x2C ex);\x0d\n        // Todo: close?\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      startListening(this);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\x0d\n  port = validatePort(port\x2C 'Port'\x2C false);\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = '';\x0d\n  } else if (address === undefined) {\x0d\n    address = '';\x0d\n  }\x0d\n\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n\x0d\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTING;\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\x0d\n                                        port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\x0d\n};\x0d\n\x0d\n\x0d\nfunction _connect(port\x2C address\x2C callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (callback)\x0d\n    this.once('connect'\x2C callback);\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doConnect\x2C\x0d\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  state.handle.lookup(address\x2C afterDns);\x0d\n}\x0d\n\x0d\n\x0d\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n  if (!state.handle)\x0d\n    return;\x0d\n\x0d\n  if (!ex) {\x0d\n    const err = state.handle.connect(ip\x2C port);\x0d\n    if (err) {\x0d\n      ex = exceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ex) {\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n    return process.nextTick(() => {\x0d\n      if (callback) {\x0d\n        self.removeListener('connect'\x2C callback);\x0d\n        callback(ex);\x0d\n      } else {\x0d\n        self.emit('error'\x2C ex);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  state.connectState = CONNECT_STATE_CONNECTED;\x0d\n  process.nextTick(() => self.emit('connect'));\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.disconnect = function() {\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const err = state.handle.disconnect();\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'connect');\x0d\n  else\x0d\n    state.connectState = CONNECT_STATE_DISCONNECTED;\x0d\n};\x0d\n\x0d\n\x0d\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\x0d\nSocket.prototype.sendto = function(buffer\x2C\x0d\n                                   offset\x2C\x0d\n                                   length\x2C\x0d\n                                   port\x2C\x0d\n                                   address\x2C\x0d\n                                   callback) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  validateNumber(length\x2C 'length');\x0d\n  validateNumber(port\x2C 'port');\x0d\n  validateString(address\x2C 'address');\x0d\n\x0d\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\x0d\n};\x0d\n\x0d\n\x0d\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\x0d\n  if (typeof buffer === 'string') {\x0d\n    buffer = Buffer.from(buffer);\x0d\n  } else if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  offset = offset >>> 0;\x0d\n  length = length >>> 0;\x0d\n  if (offset > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n  }\x0d\n\x0d\n  if (offset + length > buffer.byteLength) {\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixBufferList(list) {\x0d\n  const newlist = new Array(list.length);\x0d\n\x0d\n  for (let i = 0\x2C l = list.length; i < l; i++) {\x0d\n    const buf = list[i];\x0d\n    if (typeof buf === 'string')\x0d\n      newlist[i] = Buffer.from(buf);\x0d\n    else if (!isArrayBufferView(buf))\x0d\n      return null;\x0d\n    else\x0d\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\x0d\n  }\x0d\n\x0d\n  return newlist;\x0d\n}\x0d\n\x0d\n\x0d\nfunction enqueue(self\x2C toEnqueue) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\x0d\n  // event handler that flushes the send queue after binding is done.\x0d\n  if (state.queue === undefined) {\x0d\n    state.queue = [];\x0d\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\x0d\n    self.once('listening'\x2C onListenSuccess);\x0d\n  }\x0d\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenSuccess() {\x0d\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\x0d\n  FunctionPrototypeCall(clearQueue\x2C this);\x0d\n}\x0d\n\x0d\n\x0d\nfunction onListenError(err) {\x0d\n  this.removeListener('listening'\x2C onListenSuccess);\x0d\n  this[kStateSymbol].queue = undefined;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearQueue() {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n  state.queue = undefined;\x0d\n\x0d\n  // Flush the send queue.\x0d\n  for (const queueEntry of queue)\x0d\n    queueEntry();\x0d\n}\x0d\n\x0d\nfunction isConnected(self) {\x0d\n  try {\x0d\n    self.remoteAddress();\x0d\n    return true;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// valid combinations\x0d\n// For connectionless sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\x0d\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length\x2C port)\x0d\n// send(bufferOrList\x2C port\x2C address\x2C callback)\x0d\n// send(bufferOrList\x2C port\x2C address)\x0d\n// send(bufferOrList\x2C port\x2C callback)\x0d\n// send(bufferOrList\x2C port)\x0d\n// For connected sockets\x0d\n// send(buffer\x2C offset\x2C length\x2C callback)\x0d\n// send(buffer\x2C offset\x2C length)\x0d\n// send(bufferOrList\x2C callback)\x0d\n// send(bufferOrList)\x0d\nSocket.prototype.send = function(buffer\x2C\x0d\n                                 offset\x2C\x0d\n                                 length\x2C\x0d\n                                 port\x2C\x0d\n                                 address\x2C\x0d\n                                 callback) {\x0d\n\x0d\n  let list;\x0d\n  const state = this[kStateSymbol];\x0d\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\x0d\n  if (!connected) {\x0d\n    if (address || (port && typeof port !== 'function')) {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n    } else {\x0d\n      callback = port;\x0d\n      port = offset;\x0d\n      address = length;\x0d\n    }\x0d\n  } else {\x0d\n    if (typeof length === 'number') {\x0d\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\x0d\n      if (typeof port === 'function') {\x0d\n        callback = port;\x0d\n        port = null;\x0d\n      }\x0d\n    } else {\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    if (port || address)\x0d\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\x0d\n  }\x0d\n\x0d\n  if (!ArrayIsArray(buffer)) {\x0d\n    if (typeof buffer === 'string') {\x0d\n      list = [ Buffer.from(buffer) ];\x0d\n    } else if (!isArrayBufferView(buffer)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\x0d\n                                     ['Buffer'\x2C\x0d\n                                      'TypedArray'\x2C\x0d\n                                      'DataView'\x2C\x0d\n                                      'string']\x2C\x0d\n                                     buffer);\x0d\n    } else {\x0d\n      list = [ buffer ];\x0d\n    }\x0d\n  } else if (!(list = fixBufferList(buffer))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\x0d\n                                   ['Buffer'\x2C\x0d\n                                    'TypedArray'\x2C\x0d\n                                    'DataView'\x2C\x0d\n                                    'string']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n\x0d\n  if (!connected)\x0d\n    port = validatePort(port\x2C 'Port'\x2C false);\x0d\n\x0d\n  // Normalize callback so it's either a function or undefined but not anything\x0d\n  // else.\x0d\n  if (typeof callback !== 'function')\x0d\n    callback = undefined;\x0d\n\x0d\n  if (typeof address === 'function') {\x0d\n    callback = address;\x0d\n    address = undefined;\x0d\n  } else if (address && typeof address !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('address'\x2C ['string'\x2C 'falsy']\x2C address);\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (state.bindState === BIND_STATE_UNBOUND)\x0d\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\x0d\n\x0d\n  if (list.length === 0)\x0d\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\x0d\n\x0d\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\x0d\n  // send queue and send after binding is complete.\x0d\n  if (state.bindState !== BIND_STATE_BOUND) {\x0d\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\x0d\n                                        list\x2C port\x2C address\x2C callback));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const afterDns = (ex\x2C ip) => {\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C\x0d\n      doSend\x2C\x0d\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x0d\n    );\x0d\n  };\x0d\n\x0d\n  if (!connected) {\x0d\n    state.handle.lookup(address\x2C afterDns);\x0d\n  } else {\x0d\n    afterDns(null\x2C null);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\x0d\n  const state = self[kStateSymbol];\x0d\n\x0d\n  if (ex) {\x0d\n    if (typeof callback === 'function') {\x0d\n      process.nextTick(callback\x2C ex);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    process.nextTick(() => self.emit('error'\x2C ex));\x0d\n    return;\x0d\n  } else if (!state.handle) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new SendWrap();\x0d\n  req.list = list;  // Keep reference alive.\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  if (callback) {\x0d\n    req.callback = callback;\x0d\n    req.oncomplete = afterSend;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if (port)\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\x0d\n  else\x0d\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\x0d\n\x0d\n  if (err >= 1) {\x0d\n    // Synchronous finish. The return code is msg_length + 1 so that we can\x0d\n    // distinguish between synchronous success and asynchronous success.\x0d\n    if (callback)\x0d\n      process.nextTick(callback\x2C null\x2C err - 1);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (err && callback) {\x0d\n    // Don't emit as error\x2C dgram_legacy.js compatibility\x0d\n    const ex = exceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\x0d\n    process.nextTick(callback\x2C ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterSend(err\x2C sent) {\x0d\n  if (err) {\x0d\n    err = exceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\x0d\n  } else {\x0d\n    err = null;\x0d\n  }\x0d\n\x0d\n  this.callback(err\x2C sent);\x0d\n}\x0d\n\x0d\nSocket.prototype.close = function(callback) {\x0d\n  const state = this[kStateSymbol];\x0d\n  const queue = state.queue;\x0d\n\x0d\n  if (typeof callback === 'function')\x0d\n    this.on('close'\x2C callback);\x0d\n\x0d\n  if (queue !== undefined) {\x0d\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  healthCheck(this);\x0d\n  stopReceiving(this);\x0d\n  state.handle.close();\x0d\n  state.handle = null;\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             socketCloseNT\x2C\x0d\n                             this);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction socketCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const out = {};\x0d\n  const err = this[kStateSymbol].handle.getsockname(out);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'getsockname');\x0d\n  }\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\nSocket.prototype.remoteAddress = function() {\x0d\n  healthCheck(this);\x0d\n\x0d\n  const state = this[kStateSymbol];\x0d\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\x0d\n\x0d\n  const out = {};\x0d\n  const err = state.handle.getpeername(out);\x0d\n  if (err)\x0d\n    throw errnoException(err\x2C 'getpeername');\x0d\n\x0d\n  return out;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setBroadcast = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setBroadcast');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastTTL = function(ttl) {\x0d\n  validateNumber(ttl\x2C 'ttl');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastTTL');\x0d\n  }\x0d\n\x0d\n  return ttl;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastLoopback = function(arg) {\x0d\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastLoopback');\x0d\n  }\x0d\n\x0d\n  return arg; // 0.4 compatibility\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n  validateString(interfaceAddress\x2C 'interfaceAddress');\x0d\n\x0d\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'setMulticastInterface');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addMembership = function(multicastAddress\x2C\x0d\n                                          interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropMembership = function(multicastAddress\x2C\x0d\n                                           interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  if (!multicastAddress) {\x0d\n    throw new ERR_MISSING_ARGS('multicastAddress');\x0d\n  }\x0d\n\x0d\n  const { handle } = this[kStateSymbol];\x0d\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                        groupAddress\x2C\x0d\n                                                        interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                          groupAddress\x2C\x0d\n                                                          interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'addSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\x0d\n                                                         groupAddress\x2C\x0d\n                                                         interfaceAddress) {\x0d\n  healthCheck(this);\x0d\n\x0d\n  validateString(sourceAddress\x2C 'sourceAddress');\x0d\n  validateString(groupAddress\x2C 'groupAddress');\x0d\n\x0d\n  const err =\x0d\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\x0d\n                                                           groupAddress\x2C\x0d\n                                                           interfaceAddress);\x0d\n  if (err) {\x0d\n    throw errnoException(err\x2C 'dropSourceSpecificMembership');\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nfunction healthCheck(socket) {\x0d\n  if (!socket[kStateSymbol].handle) {\x0d\n    // Error message from dgram_legacy.js.\x0d\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction stopReceiving(socket) {\x0d\n  const state = socket[kStateSymbol];\x0d\n\x0d\n  if (!state.receiving)\x0d\n    return;\x0d\n\x0d\n  state.handle.recvStop();\x0d\n  state.receiving = false;\x0d\n}\x0d\n\x0d\n\x0d\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\x0d\n  const self = handle[owner_symbol];\x0d\n  if (nread < 0) {\x0d\n    return self.emit('error'\x2C errnoException(nread\x2C 'recvmsg'));\x0d\n  }\x0d\n  rinfo.size = buf.length; // compatibility\x0d\n  self.emit('message'\x2C buf\x2C rinfo);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  const handle = this[kStateSymbol].handle;\x0d\n\x0d\n  if (handle)\x0d\n    handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setRecvBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setSendBufferSize = function(size) {\x0d\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getRecvBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.getSendBufferSize = function() {\x0d\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\x0d\n};\x0d\n\x0d\n\x0d\n// Deprecated private APIs.\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].handle;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].handle = val;\x0d\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].receiving;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].receiving = val;\x0d\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].bindState;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].bindState = val;\x0d\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].queue;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].queue = val;\x0d\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\x0d\n  get: deprecate(function() {\x0d\n    return this[kStateSymbol].reuseAddr;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\x0d\n  set: deprecate(function(val) {\x0d\n    this[kStateSymbol].reuseAddr = val;\x0d\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._healthCheck = deprecate(function() {\x0d\n  healthCheck(this);\x0d\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\nSocket.prototype._stopReceiving = deprecate(function() {\x0d\n  stopReceiving(this);\x0d\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x0d\n});\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  _createSocketHandle: deprecate(\x0d\n    _createSocketHandle\x2C\x0d\n    'dgram._createSocketHandle() is deprecated'\x2C\x0d\n    'DEP0112'\x0d\n  )\x2C\x0d\n  createSocket\x2C\x0d\n  Socket\x0d\n};\x0d\n
code-source-info,0xd4848b3d36,101,0,28763,C0O0C4O28763,,
tick,0x7ff86e9f4045,2167943,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd48489ea45,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff7c3f6f820,2167990,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd48489ea45,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff7c3f6f8f5,2168022,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd48489ea45,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
code-creation,Function,10,2168088,0xd4848b5c9e,1507, node:dgram:1:1,0xd4848b3cb0,~
code-source-info,0xd4848b5c9e
tick,0x7ff7c4990c50,2169530,1,0x7ff7c402b3d0,2,0x7ff7c4970240,0x5bf4dfc59c,0x5bf4dfb88d,0xd4848b5df1,0x5bf4dfc5bd,0x5bf4dfb88d,0xd48489ea45,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
code-creation,Eval,10,2169753,0xd4848b9156,5, node:internal/dgram:1:1,0xd4848b8f50,~
script-source,102,node:internal/dgram,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\nconst { UDP } = internalBinding('udp_wrap');\x0d\nconst { guessHandleType } = internalBinding('util');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst { UV_EINVAL } = internalBinding('uv');\x0d\nconst {\x0d\n  ERR_SOCKET_BAD_TYPE\x2C\x0d\n} = codes;\x0d\nconst kStateSymbol = Symbol('state symbol');\x0d\nlet dns;  // Lazy load for startup performance.\x0d\n\x0d\n\x0d\nfunction lookup4(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\x0d\n}\x0d\n\x0d\n\x0d\nfunction lookup6(lookup\x2C address\x2C callback) {\x0d\n  return lookup(address || '::1'\x2C 6\x2C callback);\x0d\n}\x0d\n\x0d\nfunction newHandle(type\x2C lookup) {\x0d\n  if (lookup === undefined) {\x0d\n    if (dns === undefined) {\x0d\n      dns = require('dns');\x0d\n    }\x0d\n\x0d\n    lookup = dns.lookup;\x0d\n  } else {\x0d\n    validateFunction(lookup\x2C 'lookup');\x0d\n  }\x0d\n\x0d\n  if (type === 'udp4') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  if (type === 'udp6') {\x0d\n    const handle = new UDP();\x0d\n\x0d\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\x0d\n    handle.bind = handle.bind6;\x0d\n    handle.connect = handle.connect6;\x0d\n    handle.send = handle.send6;\x0d\n    return handle;\x0d\n  }\x0d\n\x0d\n  throw new ERR_SOCKET_BAD_TYPE();\x0d\n}\x0d\n\x0d\n\x0d\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  const handle = newHandle(addressType);\x0d\n  let err;\x0d\n\x0d\n  if (isInt32(fd) && fd > 0) {\x0d\n    const type = guessHandleType(fd);\x0d\n    if (type !== 'UDP') {\x0d\n      err = UV_EINVAL;\x0d\n    } else {\x0d\n      err = handle.open(fd);\x0d\n    }\x0d\n  } else if (port || address) {\x0d\n    err = handle.bind(address\x2C port || 0\x2C flags);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kStateSymbol\x2C\x0d\n  _createSocketHandle\x2C\x0d\n  newHandle\x0d\n};\x0d\n
code-source-info,0xd4848b9156,102,0,1941,C0O0C4O1941,,
code-creation,Function,10,2170133,0xd4848b941e,196, node:internal/dgram:1:1,0xd4848b90d0,~
code-source-info,0xd4848b941e,102,0,1941,C0O0C56O28C62O54C67O101C73O101C78O91C83O146C86O146C91O138C97O204C100O204C105O184C111O276C117O276C122O241C128O253C134O331C137O331C142O317C148O366C154O421C157O421C162O450C163O450C165O1863C172O1885C178O1902C184O1926C190O1878C195O1940,,
code-creation,LazyCompile,10,2171090,0xd4848bbcfe,152,deprecate node:internal/util:96:19,0x17b632aaac8,~
script-source,12,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x0d\n  }\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  getHiddenValue\x2C\x0d\n  setHiddenValue\x2C\x0d\n  arrow_message_private_symbol: kArrowMessagePrivateSymbolIndex\x2C\x0d\n  decorated_private_symbol: kDecoratedPrivateSymbolIndex\x2C\x0d\n  sleep: _sleep\x2C\x0d\n  toUSVString: _toUSVString\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nconst unpairedSurrogateRe =\x0d\n  /(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])/;\x0d\nfunction toUSVString(val) {\x0d\n  const str = `${val}`;\x0d\n  // As of V8 5.5\x2C `str.search()` (and `unpairedSurrogateRe[@@search]()`) are\x0d\n  // slower than `unpairedSurrogateRe.exec()`.\x0d\n  const match = RegExpPrototypeExec(unpairedSurrogateRe\x2C str);\x0d\n  if (!match)\x0d\n    return str;\x0d\n  return _toUSVString(str\x2C match.index);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code) {\x0d\n  if (process.noDeprecation === true) {\x0d\n    return fn;\x0d\n  }\x0d\n\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  let warned = false;\x0d\n  function deprecated(...args) {\x0d\n    if (!warned) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          process.emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) ||\x0d\n      getHiddenValue(err\x2C kDecoratedPrivateSymbolIndex) === true)\x0d\n    return;\x0d\n\x0d\n  const arrow = getHiddenValue(err\x2C kArrowMessagePrivateSymbolIndex);\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    setHiddenValue(err\x2C kDecoratedPrivateSymbolIndex\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n          `${enc}`.toLowerCase() === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = `${enc}`.toLowerCase();\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n          `${enc}`.toLowerCase() === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n        `${enc}`.toLowerCase() === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n          `${enc}`.toLowerCase() === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature. This feature could ` +\x0d\n       'change at any time';\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { value: type.name }\x2C\x0d\n    length: { value: type.length }\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = ObjectCreate(null);\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x0d\n  });\x0d\n  return ObjectDefineProperties(\x0d\n    fn\x2C\x0d\n    ObjectGetOwnPropertyDescriptors(original)\x0d\n  );\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (!RegExpPrototypeTest(/^\\/|\\\\/\x2C filename))\x0d\n        continue;\x0d\n      return RegExpPrototypeTest(kNodeModulesRE\x2C filename);\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\nlet DOMException;\x0d\nconst lazyDOMException = hideStackFrames((message\x2C name) => {\x0d\n  if (DOMException === undefined)\x0d\n    DOMException = internalBinding('messaging').DOMException;\x0d\n  return new DOMException(message\x2C name);\x0d\n});\x0d\n\x0d\nfunction structuredClone(value) {\x0d\n  const {\x0d\n    DefaultSerializer\x2C\x0d\n    DefaultDeserializer\x2C\x0d\n  } = require('v8');\x0d\n  const ser = new DefaultSerializer();\x0d\n  ser._getDataCloneError = hideStackFrames((message) =>\x0d\n    lazyDOMException(message\x2C 'DataCloneError'));\x0d\n  ser.writeValue(value);\x0d\n  const serialized = ser.releaseBuffer();\x0d\n\x0d\n  const des = new DefaultDeserializer(serialized);\x0d\n  return des.readValue();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  structuredClone\x2C\x0d\n  toUSVString\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x0d\n};\x0d\n
code-source-info,0xd4848bbcfe,12,2503,3720,C0O2503C26O2524C31O2536C37O2550C42O2567C44O2577C45O2636C53O2675C61O2697C66O2678C83O2735C87O2764C100O2764C105O2812C106O2812C108O3407C121O3407C126O3448C129O3455C135O3652C141O3678C145O3673C149O3699C151O3717,,
tick,0x7ff7c44b81c1,2173883,0,0x0,3,0x7ff7c459f520,0xd4848b60e6,0x5bf4dfc5bd,0x5bf4dfb88d,0xd48489ea45,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
tick,0x7ff7c3f6f9ad,2173938,0,0x0,3,0x7ff7c459f520,0xd4848b60e6,0x5bf4dfc5bd,0x5bf4dfb88d,0xd48489ea45,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
code-creation,Function,11,2174221,0x236293440c0,1344,deprecate node:internal/util:96:19,0x17b632aaac8,^
code-source-info,0x236293440c0,12,2503,3720,,,
code-creation,Function,11,2174319,0x23629344660,664,nativeModuleRequire node:internal/bootstrap/loaders:332:29,0x17b6328fca0,^
code-source-info,0x23629344660,9,10646,10999,,,
code-creation,Function,11,2174424,0x23629344960,1252,compileForInternalLoader node:internal/bootstrap/loaders:299:27,0x17b6328fbd0,^
code-source-info,0x23629344960,9,9826,10409,,,
code-creation,Function,11,2174519,0x23629344ec0,548,internalBinding node:internal/bootstrap/loaders:164:45,0x17b6328f720,^
code-source-info,0x23629344ec0,9,5278,5523,,,
code-creation,Eval,10,2175356,0xd4848be586,5, node:internal/socket_list:1:1,0xd4848be430,~
script-source,103,node:internal/socket_list,'use strict';\x0d\n\x0d\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\n\x0d\n// This object keeps track of the sockets that are sent\x0d\nclass SocketListSend extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\x0d\n  }\x0d\n\x0d\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\x0d\n    const self = this;\x0d\n\x0d\n    if (!this.child.connected) return onclose();\x0d\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\x0d\n\x0d\n    function onclose() {\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\x0d\n    }\x0d\n\x0d\n    function onreply(msg) {\x0d\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\x0d\n      self.child.removeListener('disconnect'\x2C onclose);\x0d\n      self.child.removeListener('internalMessage'\x2C onreply);\x0d\n\x0d\n      callback(null\x2C msg);\x0d\n    }\x0d\n\x0d\n    this.child.once('disconnect'\x2C onclose);\x0d\n    this.child.on('internalMessage'\x2C onreply);\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\x0d\n  }\x0d\n\x0d\n  getConnections(callback) {\x0d\n    this._request({\x0d\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\x0d\n      key: this.key\x0d\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\x0d\n      if (err) return callback(err);\x0d\n      callback(null\x2C msg.count);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\n// This object keeps track of the sockets that are received\x0d\nclass SocketListReceive extends EventEmitter {\x0d\n  constructor(child\x2C key) {\x0d\n    super();\x0d\n\x0d\n    this.connections = 0;\x0d\n    this.key = key;\x0d\n    this.child = child;\x0d\n\x0d\n    function onempty(self) {\x0d\n      if (!self.child.connected) return;\x0d\n\x0d\n      self.child._send({\x0d\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\x0d\n        key: self.key\x0d\n      }\x2C undefined\x2C true);\x0d\n    }\x0d\n\x0d\n    this.child.on('internalMessage'\x2C (msg) => {\x0d\n      if (msg.key !== this.key) return;\x0d\n\x0d\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\x0d\n        // Already empty\x0d\n        if (this.connections === 0) return onempty(this);\x0d\n\x0d\n        // Wait for sockets to get closed\x0d\n        this.once('empty'\x2C onempty);\x0d\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\x0d\n        if (!this.child.connected) return;\x0d\n        this.child._send({\x0d\n          cmd: 'NODE_SOCKET_COUNT'\x2C\x0d\n          key: this.key\x2C\x0d\n          count: this.connections\x0d\n        });\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  add(obj) {\x0d\n    this.connections++;\x0d\n\x0d\n    // Notify the previous owner of the socket about its state change\x0d\n    obj.socket.once('close'\x2C () => {\x0d\n      this.connections--;\x0d\n\x0d\n      if (this.connections === 0) this.emit('empty'\x2C this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = { SocketListSend\x2C SocketListReceive };\x0d\n
code-source-info,0xd4848be586,103,0,2813,C0O0C4O2813,,
code-creation,Function,10,2176069,0xd4848bebc6,126, node:internal/socket_list:1:1,0xd4848be500,~
code-source-info,0xd4848bebc6,103,0,2813,C0O0C8O59C11O59C16O85C21O25C27O117C30O117C35O225C73O1583C101O2756C108O2775C114O2791C120O2771C125O2812,,
tick,0x7ff7c3f63410,2176257,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0xd48489eae0,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484897eea,0x5bf4dfc5bd,0x5bf4dfb88d,0xd484896272,0xd484881dde,0x5bf4dfb615
new,MemoryChunk,0x28fbd600000,262144
code-creation,LazyCompile,10,2176990,0xd4848bf73e,14,customPromiseExecFunction node:child_process:231:35,0xd484897828,~
code-source-info,0xd4848bf73e,96,6835,7215,C0O6835C9O6850C13O7212,,
code-creation,LazyCompile,10,2177239,0x28fbd6030ee,129,_forkChild node:child_process:170:20,0xd4848972c8,~
code-source-info,0x28fbd6030ee,96,5090,5572,C0O5090C8O5154C19O5163C22O5177C29O5154C35O5188C40O5188C45O5203C50O5203C54O5231C72O5231C77O5231C79O5279C84O5287C97O5287C103O5422C108O5430C121O5430C128O5571,,
tick,0x7ff7c4f5091f,2177686,0,0x0,3,0x7ff7c459f520,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea800b4,2179468,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea800b4,2181561,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea800b4,2183495,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea800b4,2185494,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea800b4,2187391,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea800b4,2189652,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea800b4,2191456,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea800b4,2193432,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea800b4,2195536,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea800b4,2197550,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea7ff34,2199521,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea7ff34,2201490,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea7ff34,2203541,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea7ff34,2205822,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
tick,0x7ff86ea7ff34,2207505,1,0x7ff7c3fa7790,6,0x7ff7c4970240,0x28fbd603116,0xd48489627c,0xd484881dde,0x5bf4dfb615
code-creation,LazyCompile,10,2208503,0x28fbd603a8e,374,setupChannel node:internal/child_process:569:22,0xd48489d4f0,~
code-source-info,0x28fbd603a8e
code-creation,LazyCompile,10,2208988,0x28fbd60613e,56,Control node:internal/child_process:528:14,0xd48489dd20,~
code-source-info,0x28fbd60613e,97,14254,14314,C3O14271C11O14271C40O14285C48O14299C55O14313,,
code-creation,LazyCompile,10,2209138,0x28fbd60625e,21,EventEmitter node:events:84:22,0x17b632b2da0,~
code-source-info,0x28fbd60625e,13,2562,2612,C0O2574C3O2587C8O2592C13O2592C20O2611,,
tick,0x7ff7c47862b4,2209539,0,0x0,3,0x7ff7c459f520,0x28fbd60626b,0x28fbd606149,0x28fbd603abf,0x28fbd603136,0xd48489627c,0xd484881dde,0x5bf4dfb615
code-creation,LazyCompile,10,2209600,0x28fbd6063a6,149,EventEmitter.init node:events:194:29,0x17b632b3aa0,~
code-source-info,0x28fbd6063a6,13,5772,6380,C0O5795C6O5832C13O5844C16O5844C21O5870C25O5840C30O5887C32O5902C37O5902C41O5900C45O5927C46O5945C50O5986C60O5979C64O6021C71O6029C80O6057C85O6078C93O6057C98O6132C100O6137C105O6149C108O6162C113O6149C117O6147C123O6322C125O6327C131O6352C138O6362C140O6361C143O6337C148O6379,,
code-creation,Eval,10,2210601,0x28fbd606c2e,5, node:internal/child_process/serialization:1:1,0x28fbd606948,~
script-source,104,node:internal/child_process/serialization,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst v8 = require('v8');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst assert = require('internal/assert');\x0d\nconst { streamBaseState\x2C kLastWriteWasAsync } = internalBinding('stream_wrap');\x0d\n\x0d\nconst kMessageBuffer = Symbol('kMessageBuffer');\x0d\nconst kJSONBuffer = Symbol('kJSONBuffer');\x0d\nconst kStringDecoder = Symbol('kStringDecoder');\x0d\n\x0d\n// Extend V8's serializer APIs to give more JSON-like behaviour in\x0d\n// some cases; in particular\x2C for native objects this serializes them the same\x0d\n// way that JSON does rather than throwing an exception.\x0d\nconst kArrayBufferViewTag = 0;\x0d\nconst kNotArrayBufferViewTag = 1;\x0d\nclass ChildProcessSerializer extends v8.DefaultSerializer {\x0d\n  _writeHostObject(object) {\x0d\n    if (isArrayBufferView(object)) {\x0d\n      this.writeUint32(kArrayBufferViewTag);\x0d\n      return super._writeHostObject(object);\x0d\n    }\x0d\n    this.writeUint32(kNotArrayBufferViewTag);\x0d\n    this.writeValue({ ...object });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ChildProcessDeserializer extends v8.DefaultDeserializer {\x0d\n  _readHostObject() {\x0d\n    const tag = this.readUint32();\x0d\n    if (tag === kArrayBufferViewTag)\x0d\n      return super._readHostObject();\x0d\n\x0d\n    assert(tag === kNotArrayBufferViewTag);\x0d\n    return this.readValue();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Messages are parsed in either of the following formats:\x0d\n// - Newline-delimited JSON\x2C or\x0d\n// - V8-serialized buffers\x2C prefixed with their length as a big endian uint32\x0d\n//   (aka 'advanced')\x0d\nconst advanced = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kMessageBuffer] = Buffer.alloc(0);\x0d\n    channel.buffering = false;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    let messageBuffer = Buffer.concat([channel[kMessageBuffer]\x2C readData]);\x0d\n    while (messageBuffer.length > 4) {\x0d\n      const size = messageBuffer.readUInt32BE();\x0d\n      if (messageBuffer.length < 4 + size) {\x0d\n        break;\x0d\n      }\x0d\n\x0d\n      const deserializer = new ChildProcessDeserializer(\x0d\n        TypedArrayPrototypeSubarray(messageBuffer\x2C 4\x2C 4 + size));\x0d\n      messageBuffer = TypedArrayPrototypeSubarray(messageBuffer\x2C 4 + size);\x0d\n\x0d\n      deserializer.readHeader();\x0d\n      yield deserializer.readValue();\x0d\n    }\x0d\n    channel[kMessageBuffer] = messageBuffer;\x0d\n    channel.buffering = messageBuffer.length > 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const ser = new ChildProcessSerializer();\x0d\n    ser.writeHeader();\x0d\n    ser.writeValue(message);\x0d\n    const serializedMessage = ser.releaseBuffer();\x0d\n    const sizeBuffer = Buffer.allocUnsafe(4);\x0d\n    sizeBuffer.writeUInt32BE(serializedMessage.length);\x0d\n\x0d\n    const buffer = Buffer.concat([\x0d\n      sizeBuffer\x2C\x0d\n      serializedMessage\x2C\x0d\n    ]);\x0d\n    const result = channel.writeBuffer(req\x2C buffer\x2C handle);\x0d\n    // Mirror what stream_base_commons.js does for Buffer retention.\x0d\n    if (streamBaseState[kLastWriteWasAsync])\x0d\n      req.buffer = buffer;\x0d\n    return result;\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst json = {\x0d\n  initMessageChannel(channel) {\x0d\n    channel[kJSONBuffer] = '';\x0d\n    channel[kStringDecoder] = undefined;\x0d\n  }\x2C\x0d\n\x0d\n  *parseChannelMessages(channel\x2C readData) {\x0d\n    if (readData.length === 0) return;\x0d\n\x0d\n    if (channel[kStringDecoder] === undefined)\x0d\n      channel[kStringDecoder] = new StringDecoder('utf8');\x0d\n    const chunks =\x0d\n      StringPrototypeSplit(channel[kStringDecoder].write(readData)\x2C '\\n');\x0d\n    const numCompleteChunks = chunks.length - 1;\x0d\n    // Last line does not have trailing linebreak\x0d\n    const incompleteChunk = chunks[numCompleteChunks];\x0d\n    if (numCompleteChunks === 0) {\x0d\n      channel[kJSONBuffer] += incompleteChunk;\x0d\n    } else {\x0d\n      chunks[0] = channel[kJSONBuffer] + chunks[0];\x0d\n      for (let i = 0; i < numCompleteChunks; i++)\x0d\n        yield JSONParse(chunks[i]);\x0d\n      channel[kJSONBuffer] = incompleteChunk;\x0d\n    }\x0d\n    channel.buffering = channel[kJSONBuffer].length !== 0;\x0d\n  }\x2C\x0d\n\x0d\n  writeChannelMessage(channel\x2C req\x2C message\x2C handle) {\x0d\n    const string = JSONStringify(message) + '\\n';\x0d\n    return channel.writeUtf8String(req\x2C string\x2C handle);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = { advanced\x2C json };\x0d\n
code-source-info,0x28fbd606c2e,104,0,4335,C0O0C4O4335,,
code-creation,Function,10,2211523,0x28fbd607496,369, node:internal/child_process/serialization:1:1,0x28fbd606ba8,~
code-source-info,0x28fbd607496,104,0,4335,C0O0C56O28C62O42C68O60C74O85C79O96C85O163C88O163C93O152C99O209C102O209C107O191C113O248C116O248C121O294C124O294C129O272C135O342C138O342C142O342C144O419C147O419C152O379C158O396C164O477C167O477C171O477C173O524C176O524C180O524C182O571C185O571C189O571C191O834C192O834C194O869C196O869C202O913C237O873C243O1237C278O1195C280O1695C285O1700C293O1821C301O2538C312O3192C317O3197C325O3312C333O4122C344O4297C351O4316C357O4326C363O4312C368O4334,,
tick,0x7ff86e9f404f,2211887,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd603b54,0x28fbd603136,0xd48489627c,0xd484881dde,0x5bf4dfb615
code-creation,LazyCompile,10,2212440,0x28fbd607f76,23,initMessageChannel node:internal/child_process/serialization:100:21,0x28fbd606e90,~
code-source-info,0x28fbd607f76,104,3215,3305,C0O3232C2O3240C7O3253C11O3264C13O3272C17O3288C22O3304,,
code-creation,LazyCompile,10,2212865,0x28fbd6086ce,19,_getMaxListeners node:events:271:26,0x17b632b3c70,~
code-source-info,0x28fbd6086ce,13,8039,8167,C0O8060C6O8094C9O8114C13O8134C14O8150C18O8164,,
code-creation,LazyCompile,10,2213017,0x28fbd6087c6,5,get node:events:133:16,0x17b632b3890,~
code-source-info,0x28fbd6087c6,13,3955,3997,C0O3965C4O3992,,
tick,0x7ff7c47ae5b3,2213325,0,0x0,3,0x7ff7c459f520,0xd484891365,0xd484890bd3,0xd48488e934,0x28fbd603167,0xd48489627c,0xd484881dde,0x5bf4dfb615
code-creation,LazyCompile,10,2213372,0x28fbd608a26,322,arrayClone node:events:747:20,0x17b632b4538,~
code-source-info,0x28fbd608a26,13,21902,22367,C0O22044C42O22067C50O22078C62O22086C71O22091C72O22105C80O22116C92O22124C104O22132C113O22137C114O22151C122O22162C134O22170C146O22178C158O22186C167O22191C168O22205C176O22216C188O22224C200O22232C212O22240C224O22248C233O22253C234O22267C242O22278C254O22286C266O22294C278O22302C290O22310C302O22318C311O22323C312O22332C317O22339C321O22364,,
code-creation,LazyCompile,10,2213651,0x28fbd608cb6,30,onNewListener node:child_process:176:51,0x28fbd602fa8,~
code-source-info,0x28fbd608cb6,96,5327,5416,C0O5341C2O5350C9O5372C14O5390C19O5398C24O5398C29O5415,,
code-creation,LazyCompile,10,2214074,0x28fbd609006,455,initializePolicy node:internal/bootstrap/pre_execution:365:26,0x5bf4dfda38,~
code-source-info,0x28fbd
code-creation,LazyCompile,10,2214517,0x28fbd6093d6,63,initializeClusterIPC node:internal/bootstrap/pre_execution:356:30,0x5bf4dfd9e8,~
code-source-info,0x28fbd6093d6,92,11386,11634,C0O11394C3O11406C10O11410C18O11425C23O11429C29O11468C35O11468C40O11501C45O11501C49O11592C52O11607C62O11633,,
code-creation,LazyCompile,10,2214727,0x28fbd609546,27,initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:460:38,0x5bf4dfdb78,~
code-source-info,0x28fbd609546,92,15289,15442,C0O15335C6O15335C11O15305C16O15387C21O15416C26O15441,,
tick,0x7ff7c461d562,2215434,1,0x7ff7c402b3d0,2,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd60954c,0xd484881df0,0x5bf4dfb615
code-creation,Eval,10,2215642,0x28fbd609e7e,5, node:internal/source_map/source_map_cache:1:1,0x28fbd609b18,~
script-source,105,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction ObjectGetValueSafe(obj\x2C key) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'value') ? desc.value : undefined;\x0d\n}\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst fs = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst cjsSourceMapCache = new IterableWeakMap();\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet SourceMap;\x0d\n\x0d\nlet sourceMapsEnabled;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  if (sourceMapsEnabled === undefined) {\x0d\n    setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n  }\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n    setPrepareStackTraceCallback\x0d\n  } = internalBinding('errors');\x0d\n  setSourceMapsEnabled(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTrace\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      prepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setPrepareStackTraceCallback(prepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  try {\x0d\n    filename = normalizeReferrerURL(filename);\x0d\n  } catch (err) {\x0d\n    // This is most likely an [eval]-wrapper\x2C which is currently not\x0d\n    // supported.\x0d\n    debug(err.stack);\x0d\n    return;\x0d\n  }\x0d\n  const match = StringPrototypeMatch(\x0d\n    content\x2C\x0d\n    /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/\x0d\n  );\x0d\n  if (match) {\x0d\n    const data = dataFromUrl(filename\x2C match.groups.sourceMappingURL);\x0d\n    const url = data ? null : match.groups.sourceMappingURL;\x0d\n    if (cjsModuleInstance) {\x0d\n      cjsSourceMapCache.set(cjsModuleInstance\x2C {\x0d\n        filename\x2C\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    } else {\x0d\n      // If there is no cjsModuleInstance assume we are in a\x0d\n      // "modules/esm" context.\x0d\n      esmSourceMapCache.set(filename\x2C {\x0d\n        lineLengths: lineLengths(content)\x2C\x0d\n        data\x2C\x0d\n        url\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n  // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n  // account in coverage calculations.\x0d\n  return ArrayPrototypeMap(StringPrototypeSplit(content\x2C /\\n|\\u2028|\\u2029/)\x2C (line) => {\x0d\n    return line.length;\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err.stack);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err.stack);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = ObjectCreate(null);\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of cjsSourceMapCache) {\x0d\n    obj[ObjectGetValueSafe(value\x2C 'filename')] = {\x0d\n      lineLengths: ObjectGetValueSafe(value\x2C 'lineLengths')\x2C\x0d\n      data: ObjectGetValueSafe(value\x2C 'data')\x2C\x0d\n      url: ObjectGetValueSafe(value\x2C 'url')\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (!RegExpPrototypeTest(/^\\w+:\\/\\//\x2C sourceURL)) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let sourceMap = esmSourceMapCache.get(sourceURL);\x0d\n  if (sourceMap === undefined) {\x0d\n    for (const value of cjsSourceMapCache) {\x0d\n      const filename = ObjectGetValueSafe(value\x2C 'filename');\x0d\n      if (sourceURL === filename) {\x0d\n        sourceMap = {\x0d\n          data: ObjectGetValueSafe(value\x2C 'data')\x0d\n        };\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (sourceMap && sourceMap.data) {\x0d\n    return new SourceMap(sourceMap.data);\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x28fbd609e7e,105,0,7905,C0O0C4O7905,,
code-creation,Function,10,2217044,0x28fbd60a4f6,435, node:internal/source_map/source_map_cache:1:1,0x28fbd609df8,~
code-source-info,0x28fbd60a4f6,105,0,7905,C0O0C152O28C158O50C164O64C170O81C176O96C182O131C188O165C194O189C199O201C205O226C211O547C217O547C222O536C228O579C234O579C239O612C252O613C258O579C260O678C266O678C270O678C272O721C278O721C283O702C289O779C295O779C300O759C305O862C311O862C316O835C322O932C328O932C333O912C339O1172C341O1172C346O1172C348O1301C350O1301C355O1301C357O1363C363O1363C368O1325C374O1340C380O1355C386O1393C387O1393C389O1411C390O1411C392O7762C399O7784C405O7802C411O7827C417O7852C423O7876C429O7777C434O7904,,
tick,0x7ff7c4f64694,2217367,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd60954c,0xd484881df0,0x5bf4dfb615
code-creation,Eval,10,2218130,0x28fbd60b536,5, node:internal/util/iterable_weak_map:1:1,0x28fbd60b2e8,~
script-source,106,node:internal/util/iterable_weak_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\n// This class is modified from the example code in the WeakRefs specification:\x0d\n// https://github.com/tc39/proposal-weakrefs\x0d\n// Licensed under ECMA's MIT-style license\x2C see:\x0d\n// https://github.com/tc39/ecma262/blob/HEAD/LICENSE.md\x0d\nclass IterableWeakMap {\x0d\n  #weakMap = new SafeWeakMap();\x0d\n  #refSet = new SafeSet();\x0d\n  #finalizationGroup = new SafeFinalizationRegistry(cleanup);\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (entry) {\x0d\n      // If there's already an entry for the object represented by "key"\x2C\x0d\n      // the value can be updated without creating a new WeakRef:\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref: entry.ref });\x0d\n    } else {\x0d\n      const ref = new SafeWeakRef(key);\x0d\n      this.#weakMap.set(key\x2C { value\x2C ref });\x0d\n      this.#refSet.add(ref);\x0d\n      this.#finalizationGroup.register(key\x2C {\x0d\n        set: this.#refSet\x2C\x0d\n        ref\x0d\n      }\x2C ref);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return this.#weakMap.get(key)?.value;\x0d\n  }\x0d\n\x0d\n  has(key) {\x0d\n    return this.#weakMap.has(key);\x0d\n  }\x0d\n\x0d\n  delete(key) {\x0d\n    const entry = this.#weakMap.get(key);\x0d\n    if (!entry) {\x0d\n      return false;\x0d\n    }\x0d\n    this.#weakMap.delete(key);\x0d\n    this.#refSet.delete(entry.ref);\x0d\n    this.#finalizationGroup.unregister(entry.ref);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  [SymbolIterator]() {\x0d\n    const iterator = this.#refSet[SymbolIterator]();\x0d\n\x0d\n    const next = () => {\x0d\n      const result = iterator.next();\x0d\n      if (result.done) return result;\x0d\n      const key = result.value.deref();\x0d\n      if (key == null) return next();\x0d\n      const { value } = this.#weakMap.get(key);\x0d\n      return { done: false\x2C value };\x0d\n    };\x0d\n\x0d\n    return {\x0d\n      [SymbolIterator]() { return this; }\x2C\x0d\n      next\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction cleanup({ set\x2C ref }) {\x0d\n  set.delete(ref);\x0d\n}\x0d\n\x0d\nObjectFreeze(IterableWeakMap.prototype);\x0d\n\x0d\nmodule.exports = {\x0d\n  IterableWeakMap\x2C\x0d\n};\x0d\n
code-source-info,0x28fbd60b536,106,0,2042,C0O0C4O2042,,
code-creation,Function,10,2218588,0x28fbd60bc96,196, node:internal/util/iterable_weak_map:1:1,0x28fbd60b4b0,~
code-source-info,0x28fbd60bc96,106,0,2042,C0O0C26O28C31O45C37O74C43O86C49O102C55O118C134O1448C168O1983C173O1954C177O1998C184O2020C190O2013C195O2041,,
code-creation,Function,10,2218679,0x28fbd60be16,75,<instance_members_initializer> node:internal/util/iterable_weak_map:17:3,0x28fbd60b7c0,~
code-source-info,0x28fbd60be16,106,415,534,C3O426C10O426C27O458C34O458C48O497C62O497C74O534,,
code-creation,Eval,10,2219921,0x28fbd60ca4e,5, node:internal/modules/cjs/helpers:1:1,0x28fbd60c798,~
script-source,107,node:internal/modules/cjs/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x0d\n} = require('internal/errors').codes;\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C URL } = require('internal/url');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n// TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\nconst cjsConditions = new SafeSet([\x0d\n  'require'\x2C\x0d\n  'node'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nfunction loadNativeModule(filename\x2C request) {\x0d\n  const mod = NativeModule.map.get(filename);\x0d\n  if (mod?.canBeRequiredByUsers) {\x0d\n    debug('load native module %s'\x2C request);\x0d\n    // compileForPublicLoader() throws if mod.canBeRequiredByUsers is false:\x0d\n    mod.compileForPublicLoader();\x0d\n    return mod;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Invoke with makeRequireFunction(module) where |module| is the Module object\x0d\n// to use as the context for the require() function.\x0d\n// Use redirects to set up a mapping from a policy and restrict dependencies\x0d\nconst urlToFileCache = new SafeMap();\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  const Module = mod.constructor;\x0d\n\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = cjsConditions;\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        if (destination.protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n          const mod = loadNativeModule(specifier\x2C href);\x0d\n          if (mod && mod.canBeRequiredByUsers) {\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (destination.protocol === 'file:') {\x0d\n          let filepath;\x0d\n          if (urlToFileCache.has(href)) {\x0d\n            filepath = urlToFileCache.get(href);\x0d\n          } else {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod.require(filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x0d\n        ));\x0d\n      }\x0d\n      return mod.require(specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  require.main = process.mainModule;\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        // Disable the current getter/setter and set up a new\x0d\n        // non-enumerable property.\x0d\n        delete object[name];\x0d\n        ObjectDefineProperty(object\x2C name\x2C {\x0d\n          get: () => lib\x2C\x0d\n          set: setReal\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x0d\n        });\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction normalizeReferrerURL(referrer) {\x0d\n  if (typeof referrer === 'string' && path.isAbsolute(referrer)) {\x0d\n    return pathToFileURL(referrer).href;\x0d\n  }\x0d\n  return new URL(referrer).href;\x0d\n}\x0d\n\x0d\n// For error messages only - used to check if ESM syntax is in use.\x0d\nfunction hasEsmSyntax(code) {\x0d\n  debug('Checking for ESM syntax');\x0d\n  const parser = require('internal/deps/acorn/acorn/dist/acorn').Parser;\x0d\n  let root;\x0d\n  try {\x0d\n    root = parser.parse(code\x2C { sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSome(root.body\x2C (stmt) =>\x0d\n    stmt.type === 'ExportDefaultDeclaration' ||\x0d\n    stmt.type === 'ExportNamedDeclaration' ||\x0d\n    stmt.type === 'ImportDeclaration' ||\x0d\n    stmt.type === 'ExportAllDeclaration');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n};\x0d\n
code-source-info,0x28fbd60ca4e,107,0,6975,C0O0C4O6975,,
code-creation,Function,10,2221138,0x28fbd60cfce,536, node:internal/modules/cjs/helpers:1:1,0x28fbd60c9c8,~
code-source-info,0x28fbd60cfce,107,0,6975,C0O0C104O28C110O54C116O77C122O100C128O125C134O159C139O171C144O183C150O213C156O241C162O266C168O391C174O391C179O417C184O323C190O359C196O451C202O451C207O434C213O520C219O520C224O501C230O566C236O566C240O566C242O630C248O630C253O592C259O607C265O622C271O685C277O685C282O666C287O738C290O738C295O785C301O785C306O818C319O819C325O785C327O888C330O888C335O944C346O1077C353O1122C354O1122C410O1145C465O1077C470O1077C472O1721C474O1721C479O1721C481O6806C488O6828C494O6855C500O6873C506O6890C512O6911C518O6935C524O6960C530O6821C535O6974,,
tick,0x7ff7c45f5a48,2221714,1,0x7ff7c402b3d0,2,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd60a62d,0x23629344c63,0x236293448e5,0x28fbd60954c,0xd484881df0,0x5bf4dfb615
tick,0x7ff7c3f87a83,2221798,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd60a62d,0x23629344c63,0x236293448e5,0x28fbd60954c,0xd484881df0,0x5bf4dfb615
code-creation,LazyCompile,10,2222088,0x28fbd60dc0e,27,SafeSet node:internal/per_context/primordials:364:16,0x17b6328a168,~
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C desc);\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(global[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = global[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Because these functions are used by `makeSafe`\x2C which is exposed\x0d\n// on the `primordials` object\x2C it's important to use const references\x0d\n// to the primordials that they use:\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        ReflectGetOwnPropertyDescriptor(src\x2C key));\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C desc);\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x0d\n);\x0d\n\x0d\nprimordials.PromisePrototypeCatch = (thisPromise\x2C onRejected) =>\x0d\n  PromisePrototypeThen(thisPromise\x2C undefined\x2C onRejected);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x28fbd60dc0e,6,10890,10907,C3O10896C7O10902C11O10896C26O10906,,
code-creation,LazyCompile,10,2224466,0x28fbd60ea4e,27,SafeMap node:internal/per_context/primordials:351:16,0x17b63289fe0,~
code-source-info,0x28fbd60ea4e,6,10550,10567,C3O10556C7O10562C11O10556C26O10566,,
code-creation,LazyCompile,10,2224683,0x28fbd60ebc6,16,IterableWeakMap node:internal/util/iterable_weak_map:16:1,0x28fbd60b5b8,~
code-source-info,0x28fbd60ebc6,106,388,388,C0O388C15O388,,
code-creation,LazyCompile,10,2224814,0x28fbd60ef4e,27,SafeWeakMap node:internal/per_context/primordials:357:16,0x17b6328a0a0,~
code-source-info,0x28fbd60ef4e,6,10727,10744,C3O10733C7O10739C11O10733C26O10743,,
tick,0x7ff86e9f404f,2224931,0,0x0,3,0x7ff7c459f520,0x28fbd60d19f,0x23629344c63,0x236293448e5,0x28fbd60a62d,0x23629344c63,0x236293448e5,0x28fbd60954c,0xd484881df0,0x5bf4dfb615
code-creation,LazyCompile,10,2224983,0x28fbd60f056,27,SafeFinalizationRegistry node:internal/per_context/primordials:378:16,0x17b6328a2f0,~
code-source-info,0x28fbd60f056,6,11354,11399,C3O11374C7O11380C11O11374C26O11398,,
tick,0x7ff7c440ebc5,2225634,0,0x0,0,0x7ff7c4592420,0x28fbd60a67e,0x23629344c63,0x236293448e5,0x28fbd60954c,0xd484881df0,0x5bf4dfb615
code-creation,LazyCompile,10,2226100,0x28fbd60f7f6,492,initializeDeprecations node:internal/bootstrap/pre_execution:250:32,0x5bf4dfd908,~
code-source-info,0x28fbd60f7f
code-creation,LazyCompile,10,2226581,0x28fbd60fd4e,53,initializeWASI node:internal/bootstrap/pre_execution:414:24,0x5bf4dfda88,~
code-source-info,0x28fbd60fd4e,92,13535,13746,C0O13568C6O13568C11O13551C16O13635C21O13639C29O13639C35O13655C37O13687C43O13687C47O13680C52O13745,,
code-creation,LazyCompile,10,2226789,0x28fbd60ff4e,66,initializeCJSLoader node:internal/bootstrap/pre_execution:421:29,0x5bf4dfdad8,~
code-source-info,0x28fbd60ff4e,92,13778,14101,C0O13804C6O13804C11O13847C16O13852C20O13872C26O13911C31O13918C36O13918C40O14017C51O14039C56O14075C60O14032C65O14100,,
tick,0x7ff7c45f5aec,2227564,1,0x7ff7c402b3d0,2,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff7c43e13aa,2230437,1,0x7ff7c402b3d0,2,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Eval,10,2231018,0x28fbd611e96,5, node:internal/modules/cjs/loader:1:1,0x28fbd6115b0,~
script-source,108,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeConcat\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  wrapSafe\x2C Module\x2C toRealPath\x2C readPackageScope\x2C cjsParseCache\x2C\x0d\n  get hasLoadedAnyUserCJSModule() { return hasLoadedAnyUserCJSModule; }\x0d\n};\x0d\n\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURLInstance } = require('internal/url');\x0d\nconst { deprecate } = require('internal/util');\x0d\nconst vm = require('vm');\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { sep } = path;\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  cjsConditions\x2C\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\n// Whether any user-provided CJS modules had been loaded (executed).\x0d\n// Used for internal assertions.\x0d\nlet hasLoadedAnyUserCJSModule = false;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { enrichCJSError } = require('internal/modules/esm/translators');\x0d\nconst { kEvaluated } = internalBinding('module_wrap');\x0d\nconst {\x0d\n  encodedSepRegEx\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n} = require('internal/modules/esm/resolve');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = ObjectCreate(null);\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet statCache = null;\x0d\nlet isPreloading = false;\x0d\n\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) return result;\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child)))\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n}\x0d\n\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  this.exports = {};\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n}\x0d\n\x0d\nconst builtinModules = [];\x0d\nfor (const { 0: id\x2C 1: mod } of NativeModule.map) {\x0d\n  if (mod.canBeRequiredByUsers) {\x0d\n    ArrayPrototypePush(builtinModules\x2C id);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectFreeze(builtinModules);\x0d\nModule.builtinModules = builtinModules;\x0d\n\x0d\nModule._cache = ObjectCreate(null);\x0d\nModule._pathCache = ObjectCreate(null);\x0d\nModule._extensions = ObjectCreate(null);\x0d\nlet modulePaths = [];\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n// eslint-disable-next-line func-style\x0d\nlet wrap = function(script) {\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(NativeModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : getModuleParent\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x0d\n  ) : setModuleParent\x2C\x0d\n});\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nModule._debug = deprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nconst packageJsonCache = new SafeMap();\x0d\n\x0d\nfunction readPackage(requestPath) {\x0d\n  const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n\x0d\n  const existing = packageJsonCache.get(jsonPath);\x0d\n  if (existing !== undefined) return existing;\x0d\n\x0d\n  const result = packageJsonReader.read(jsonPath);\x0d\n  const json = result.containsKeys === false ? '{}' : result.string;\x0d\n  if (json === undefined) {\x0d\n    packageJsonCache.set(jsonPath\x2C false);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const parsed = JSONParse(json);\x0d\n    const filtered = {\x0d\n      name: parsed.name\x2C\x0d\n      main: parsed.main\x2C\x0d\n      exports: parsed.exports\x2C\x0d\n      imports: parsed.imports\x2C\x0d\n      type: parsed.type\x0d\n    };\x0d\n    packageJsonCache.set(jsonPath\x2C filtered);\x0d\n    return filtered;\x0d\n  } catch (e) {\x0d\n    e.path = jsonPath;\x0d\n    e.message = 'Error parsing ' + jsonPath + ': ' + e.message;\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules'))\x0d\n      return false;\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson) return {\x0d\n      data: pjson\x2C\x0d\n      path: checkPath\x2C\x0d\n    };\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = readPackage(requestPath)?.main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n// In order to minimize unnecessary lstat() calls\x2C\x0d\n// this cache is a list of known-real paths.\x0d\n// Set to an empty Map to reset.\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\n// Check if the file exists and is not a directory\x0d\n// if using --preserve-symlinks and isMain is false\x2C\x0d\n// keep symlinks intact\x2C otherwise resolve to the\x0d\n// absolute realpath.\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = stat(requestPath);\x0d\n  if (rc !== 0) return;\x0d\n  if (preserveSymlinks && !isMain) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x0d\n  });\x0d\n}\x0d\n\x0d\n// Given a path\x2C check if the file exists with any of the set extensions\x0d\nfunction tryExtensions(p\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(p + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n// Find the longest (possibly multi-dot) extension registered in\x0d\n// Module._extensions\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) continue; // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) return currentExtension;\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) return false;\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) return false;\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = readPackageScope(parentPath) || {};\x0d\n  if (!pkg || pkg.exports === undefined) return false;\x0d\n  if (typeof pkg.name !== 'string') return false;\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C cjsConditions)\x2C request\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n// This only applies to requests of a specific form:\x0d\n// 1. name/.*\x0d\n// 2. @scope/name/.*\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    StringPrototypeMatch(request\x2C EXPORTS_PATTERN) || [];\x0d\n  if (!name)\x0d\n    return;\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = readPackage(pkgPath);\x0d\n  if (pkg?.exports != null) {\x0d\n    try {\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        cjsConditions)\x2C request\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst trailingSlashRegex = /(?:^|\\/)\\.?\\.$/;\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry)\x0d\n    return entry;\x0d\n\x0d\n  let exts;\x0d\n  let trailingSlash = request.length > 0 &&\x0d\n    StringPrototypeCharCodeAt(request\x2C request.length - 1) ===\x0d\n    CHAR_FORWARD_SLASH;\x0d\n  if (!trailingSlash) {\x0d\n    trailingSlash = RegExpPrototypeTest(trailingSlashRegex\x2C request);\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    const curPath = paths[i];\x0d\n    if (curPath && stat(curPath) < 1) continue;\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved)\x0d\n        return exportsResolved;\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (preserveSymlinks) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (preserveSymlinksMain) {\x0d\n          // For the main module\x2C we use the preserveSymlinksMain flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the preserveSymlinksMain option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined)\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined)\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n// 'node_modules' character codes reversed\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON)\x0d\n      return [from + 'node_modules'];\x0d\n\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  // 'from' is the __dirname of the module.\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/')\x0d\n      return ['/node_modules'];\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen)\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x0d\n          );\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (NativeModule.canBeRequiredByUsers(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    let paths = modulePaths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeConcat(parent.paths\x2C paths);\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') return target[prop];\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule')\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n// Check the cache for the requested file.\x0d\n// 1. If a module already exists in the cache: return its exports object.\x0d\n// 2. If the module is native: call\x0d\n//    `NativeModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n// 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n//    Then have it load  the file contents before returning its exports\x0d\n//    object.\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded)\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  if (StringPrototypeStartsWith(filename\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(filename\x2C 5);\x0d\n\x0d\n    const module = loadNativeModule(id\x2C request);\x0d\n    if (!module?.canBeRequiredByUsers) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(filename);\x0d\n    }\x0d\n\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded)\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const mod = loadNativeModule(filename\x2C request);\x0d\n  if (mod?.canBeRequiredByUsers) return mod.exports;\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    process.mainModule = module;\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:') ||\x0d\n      NativeModule.canBeRequiredByUsers(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j]))\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (parent?.filename) {\x0d\n    if (request[0] === '#') {\x0d\n      const pkg = readPackageScope(parent.filename) || {};\x0d\n      if (pkg.data?.imports != null) {\x0d\n        try {\x0d\n          return finalizeEsmResolution(\x0d\n            packageImportsResolve(request\x2C pathToFileURL(parent.filename)\x2C\x0d\n                                  cjsConditions)\x2C request\x2C parent.filename\x2C\x0d\n            pkg.path);\x0d\n        } catch (e) {\x0d\n          if (e.code === 'ERR_MODULE_NOT_FOUND')\x0d\n            throw createEsmNotFoundErr(request);\x0d\n          throw e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C false);\x0d\n  if (filename) return filename;\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\nfunction finalizeEsmResolution(match\x2C request\x2C parentPath\x2C pkgPath) {\x0d\n  const { resolved\x2C exact } = match;\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  let actual = tryFile(filename);\x0d\n  if (!exact && !actual) {\x0d\n    const exts = ObjectKeys(Module._extensions);\x0d\n    actual = tryExtensions(filename\x2C exts\x2C false) ||\x0d\n      tryPackage(filename\x2C exts\x2C false\x2C request);\x0d\n  }\x0d\n  if (actual)\x0d\n    return actual;\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path)\x0d\n    err.path = path;\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n// Given a file name\x2C pass it to the proper extension handler.\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs'])\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  const esmLoader = asyncESM.esmLoader;\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache\x0d\n  if ((module?.module === undefined ||\x0d\n       module.module.getStatus() < kEvaluated) &&\x0d\n      !esmLoader.cjsCache.has(this))\x0d\n    esmLoader.cjsCache.set(this\x2C exports);\x0d\n};\x0d\n\x0d\n\x0d\n// Loads a module at the given file path. Returns that module's\x0d\n// `exports` property.\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Resolved path to process.argv[1] will be lazily placed here\x0d\n// (needed for setting breakpoint when called with --inspect-brk)\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance) {\x0d\n  if (patched) {\x0d\n    const wrapper = Module.wrap(content);\x0d\n    return vm.runInThisContext(wrapper\x2C {\x0d\n      filename\x2C\x0d\n      lineOffset: 0\x2C\x0d\n      displayErrors: true\x2C\x0d\n      importModuleDynamically: async (specifier) => {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename));\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  try {\x0d\n    return vm.compileFunction(content\x2C [\x0d\n      'exports'\x2C\x0d\n      'require'\x2C\x0d\n      'module'\x2C\x0d\n      '__filename'\x2C\x0d\n      '__dirname'\x2C\x0d\n    ]\x2C {\x0d\n      filename\x2C\x0d\n      importModuleDynamically(specifier) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C normalizeReferrerURL(filename));\x0d\n      }\x2C\x0d\n    });\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance)\x0d\n      enrichCJSError(err\x2C content);\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Run the file contents in the correct scope or sandbox. Expose\x0d\n// the correct helper variables (require\x2C module\x2C exports) to\x0d\n// the file.\x0d\n// Returns exception\x2C if any.\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  if (policy?.manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = policy.manifest.getDependencyMapper(moduleURL);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  maybeCacheSourceMap(filename\x2C content\x2C this);\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) statCache = new SafeMap();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  hasLoadedAnyUserCJSModule = true;\x0d\n  if (requireDepth === 0) statCache = null;\x0d\n  return result;\x0d\n};\x0d\n\x0d\n// Native extension for .js\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = readPackageScope(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data?.type === 'module') {\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = hasEsmSyntax(content);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {}\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .json\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  if (policy?.manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    module.exports = JSONParse(stripBOM(content));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Native extension for .node\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  if (policy?.manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    policy.manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURLInstance(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests))\x0d\n    return;\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++)\x0d\n    parent.require(requests[n]);\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of NativeModule.map.values()) {\x0d\n    if (mod.canBeRequiredByUsers) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x28fbd611e96,108,0,41471,C0O0C4O41471,,
code-creation,Function,10,2238526,0x28fbd613c36,2547, node:internal/modules/cjs/loader:1:1,0x28fbd611e10,~
code-source-info,0x28fbd613c
tick,0x7ff7c4f4fa13,2239885,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff7c3ef0c5e,2239921,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff86e9f404f,2239953,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff7c3ef0b9b,2239982,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff7c3f6a2fe,2240016,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Eval,10,2240663,0x28fbd617bc6,5, node:internal/modules/package_json_reader:1:1,0x28fbd617a20,~
script-source,109,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst { SafeMap } = primordials;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { pathToFileURL } = require('url');\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string} jsonPath\x0d\n */\x0d\nfunction read(jsonPath) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const { 0: string\x2C 1: containsKeys } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x0d\n  );\x0d\n  const result = { string\x2C containsKeys };\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (string !== undefined) {\x0d\n    if (manifest === undefined) {\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = { read };\x0d\n
code-source-info,0x28fbd617bc6,109,0,1024,C0O0C4O1024,,
code-creation,Function,10,2240940,0x28fbd617d16,113, node:internal/modules/package_json_reader:1:1,0x28fbd617b40,~
code-source-info,0x28fbd617d16,109,0,1024,C0O0C29O25C34O86C37O86C42O59C48O136C54O136C59O118C65O182C71O182C76O161C82O216C84O216C89O216C91O238C92O238C94O996C101O1015C107O1011C112O1023,,
tick,0x7ff7c4ad1a54,2241552,0,0x0,0,0x28fbd617d33,0x23629344c63,0x236293448e5,0x28fbd613fd4,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Eval,10,2241702,0x28fbd61857e,5, node:internal/process/esm_loader:1:1,0x28fbd618388,~
script-source,110,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectCreate\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { ESMLoader } = require('internal/modules/esm/loader');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { pathToFileURL } = require('internal/url');\x0d\nconst {\x0d\n  getModuleFromWrap\x2C\x0d\n} = require('internal/vm/module');\x0d\n\x0d\nexports.initializeImportMetaObject = function(wrap\x2C meta) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { initializeImportMeta } = callbackMap.get(wrap);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      initializeImportMeta(meta\x2C getModuleFromWrap(wrap) || wrap);\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nexports.importModuleDynamicallyCallback =\x0d\nasync function importModuleDynamicallyCallback(wrap\x2C specifier\x2C assertions) {\x0d\n  const { callbackMap } = internalBinding('module_wrap');\x0d\n  if (callbackMap.has(wrap)) {\x0d\n    const { importModuleDynamically } = callbackMap.get(wrap);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(\x0d\n        specifier\x2C getModuleFromWrap(wrap) || wrap\x2C assertions);\x0d\n    }\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n};\x0d\n\x0d\nconst esmLoader = new ESMLoader();\x0d\n\x0d\nexports.esmLoader = esmLoader;\x0d\n\x0d\n/**\x0d\n * Causes side-effects: user-defined loader hooks are added to esmLoader.\x0d\n * @returns {void}\x0d\n */\x0d\nasync function initializeLoader() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  // customLoaders CURRENTLY can be only 1 (a string)\x0d\n  // Once chaining is implemented\x2C it will be string[]\x0d\n  const customLoaders = getOptionValue('--experimental-loader');\x0d\n\x0d\n  if (!customLoaders.length) return;\x0d\n\x0d\n  const { emitExperimentalWarning } = require('internal/util');\x0d\n  emitExperimentalWarning('--experimental-loader');\x0d\n\x0d\n  let cwd;\x0d\n  try {\x0d\n    cwd = process.cwd() + '/';\x0d\n  } catch {\x0d\n    cwd = 'file:///';\x0d\n  }\x0d\n\x0d\n  // A separate loader instance is necessary to avoid cross-contamination\x0d\n  // between internal Node.js and userland. For example\x2C a module with internal\x0d\n  // state (such as a counter) should be independent.\x0d\n  const internalEsmLoader = new ESMLoader();\x0d\n\x0d\n  // Importation must be handled by internal loader to avoid poluting userland\x0d\n  const exports = await internalEsmLoader.import(\x0d\n    customLoaders\x2C\x0d\n    pathToFileURL(cwd).href\x2C\x0d\n    ObjectCreate(null)\x2C\x0d\n  );\x0d\n\x0d\n  // Hooks must then be added to external/public loader\x0d\n  // (so they're triggered in userland)\x0d\n  await esmLoader.addCustomLoaders(exports);\x0d\n}\x0d\n\x0d\nexports.loadESM = async function loadESM(callback) {\x0d\n  try {\x0d\n    await initializeLoader();\x0d\n    await callback(esmLoader);\x0d\n  } catch (err) {\x0d\n    if (hasUncaughtExceptionCaptureCallback()) {\x0d\n      process._fatalException(err);\x0d\n      return;\x0d\n    }\x0d\n    internalBinding('errors').triggerUncaughtException(\x0d\n      err\x2C\x0d\n      true /* fromPromise */\x0d\n    );\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x28fbd61857e,110,0,2982,C0O0C4O2982,,
code-creation,Function,10,2242299,0x28fbd61881e,182, node:internal/process/esm_loader:1:1,0x28fbd6184f8,~
code-source-info,0x28fbd61881e,110,0,2982,C0O0C44O28C50O119C56O119C61O145C66O74C72O176C78O176C83O162C89O270C95O270C100O228C106O336C112O336C117O318C123O397C129O397C134O373C140O431C144O466C148O777C152O817C156O1300C159O1300C164O1300C166O1320C168O1338C172O2612C176O2628C181O2981,,
tick,0x7ff7c49807ee,2243369,1,0x7ff7c402b3d0,2,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Eval,10,2243728,0x28fbd619886,5, node:internal/modules/esm/loader:1:1,0x28fbd619488,~
script-source,111,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n  ERR_INVALID_RETURN_VALUE\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x0d\n} = require('internal/errors').codes;\x0d\nconst { pathToFileURL\x2C isURLInstance } = require('internal/url');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst ModuleMap = require('internal/modules/esm/module_map');\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\n\x0d\nconst {\x0d\n  defaultResolve\x2C\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n} = require('internal/modules/esm/resolve');\x0d\nconst { defaultLoad } = require('internal/modules/esm/load');\x0d\nconst { translators } = require(\x0d\n  'internal/modules/esm/translators');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n/**\x0d\n * An ESMLoader instance is used as the main entry point for loading ES modules.\x0d\n * Currently\x2C this is a singleton -- there is only one used for loading\x0d\n * the main module and everything in its dependency graph.\x0d\n */\x0d\nclass ESMLoader {\x0d\n  /**\x0d\n   * Prior to ESM loading. These are called once before any modules are started.\x0d\n   * @private\x0d\n   * @property {function[]} globalPreloaders First-in-first-out list of\x0d\n   * preload hooks.\x0d\n   */\x0d\n  #globalPreloaders = [];\x0d\n\x0d\n  /**\x0d\n   * Phase 2 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {function[]} loaders First-in-first-out list of loader hooks.\x0d\n   */\x0d\n  #loaders = [\x0d\n    defaultLoad\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Phase 1 of 2 in ESM loading.\x0d\n   * @private\x0d\n   * @property {function[]} resolvers First-in-first-out list of resolver hooks\x0d\n   */\x0d\n  #resolvers = [\x0d\n    defaultResolve\x2C\x0d\n  ];\x0d\n\x0d\n  /**\x0d\n   * Map of already-loaded CJS modules to use\x0d\n   */\x0d\n  cjsCache = new SafeWeakMap();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  moduleMap = new ModuleMap();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = translators;\x0d\n\x0d\n  static pluckHooks({\x0d\n    globalPreload\x2C\x0d\n    resolve\x2C\x0d\n    load\x2C\x0d\n    // obsolete hooks:\x0d\n    dynamicInstantiate\x2C\x0d\n    getFormat\x2C\x0d\n    getGlobalPreloadCode\x2C\x0d\n    getSource\x2C\x0d\n    transformSource\x2C\x0d\n  }) {\x0d\n    const obsoleteHooks = [];\x0d\n    const acceptedHooks = ObjectCreate(null);\x0d\n\x0d\n    if (getGlobalPreloadCode) {\x0d\n      globalPreload ??= getGlobalPreloadCode;\x0d\n\x0d\n      process.emitWarning(\x0d\n        'Loader hook "getGlobalPreloadCode" has been renamed to "globalPreload"'\x0d\n      );\x0d\n    }\x0d\n    if (dynamicInstantiate) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'dynamicInstantiate'\x0d\n    );\x0d\n    if (getFormat) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getFormat'\x2C\x0d\n    );\x0d\n    if (getSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'getSource'\x2C\x0d\n    );\x0d\n    if (transformSource) ArrayPrototypePush(\x0d\n      obsoleteHooks\x2C\x0d\n      'transformSource'\x2C\x0d\n    );\x0d\n\x0d\n    if (obsoleteHooks.length) process.emitWarning(\x0d\n      `Obsolete loader hook(s) supplied and will be ignored: ${\x0d\n        ArrayPrototypeJoin(obsoleteHooks\x2C '\x2C ')\x0d\n      }`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n    );\x0d\n\x0d\n    // Use .bind() to avoid giving access to the Loader instance when called.\x0d\n    if (globalPreload) {\x0d\n      acceptedHooks.globalPreloader =\x0d\n        FunctionPrototypeBind(globalPreload\x2C null);\x0d\n    }\x0d\n    if (resolve) {\x0d\n      acceptedHooks.resolver = FunctionPrototypeBind(resolve\x2C null);\x0d\n    }\x0d\n    if (load) {\x0d\n      acceptedHooks.loader = FunctionPrototypeBind(load\x2C null);\x0d\n    }\x0d\n\x0d\n    return acceptedHooks;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Collect custom/user-defined hook(s). After all hooks have been collected\x2C\x0d\n   * calls global preload hook(s).\x0d\n   * @param {object | object[]} customLoaders A list of exports from\x0d\n   * user-defined loaders (as returned by ESMLoader.import()).\x0d\n   */\x0d\n  async addCustomLoaders(\x0d\n    customLoaders = []\x2C\x0d\n  ) {\x0d\n    if (!ArrayIsArray(customLoaders)) customLoaders = [customLoaders];\x0d\n\x0d\n    for (let i = 0; i < customLoaders.length; i++) {\x0d\n      const exports = customLoaders[i];\x0d\n      const {\x0d\n        globalPreloader\x2C\x0d\n        resolver\x2C\x0d\n        loader\x2C\x0d\n      } = ESMLoader.pluckHooks(exports);\x0d\n\x0d\n      if (globalPreloader) ArrayPrototypePush(\x0d\n        this.#globalPreloaders\x2C\x0d\n        FunctionPrototypeBind(globalPreloader\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (resolver) ArrayPrototypePush(\x0d\n        this.#resolvers\x2C\x0d\n        FunctionPrototypeBind(resolver\x2C null)\x2C // [1]\x0d\n      );\x0d\n      if (loader) ArrayPrototypePush(\x0d\n        this.#loaders\x2C\x0d\n        FunctionPrototypeBind(loader\x2C null)\x2C // [1]\x0d\n      );\x0d\n    }\x0d\n\x0d\n    // [1] ensure hook function is not bound to ESMLoader instance\x0d\n\x0d\n    this.preload();\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      callbackMap.set(module\x2C {\x0d\n        importModuleDynamically: (specifier\x2C { url }) => {\x0d\n          return this.import(specifier\x2C url);\x0d\n        }\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const job = new ModuleJob(this\x2C url\x2C evalInstance\x2C false\x2C false);\x0d\n    this.moduleMap.set(url\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  async getModuleJob(specifier\x2C parentURL) {\x0d\n    const { format\x2C url } = await this.resolve(specifier\x2C parentURL);\x0d\n    let job = this.moduleMap.get(url);\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') this.moduleMap.set(url\x2C job = job());\x0d\n\x0d\n    if (job !== undefined) return job;\x0d\n\x0d\n    const moduleProvider = async (url\x2C isMain) => {\x0d\n      const { format: finalFormat\x2C source } = await this.load(url\x2C { format });\x0d\n\x0d\n      const translator = translators.get(finalFormat);\x0d\n\x0d\n      if (!translator) throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat);\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C url\x2C source\x2C isMain);\x0d\n    };\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x0d\n    );\x0d\n\x0d\n    this.moduleMap.set(url\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Internally\x2C it is used directly to add loaders. Use directly with caution.\x0d\n   *\x0d\n   * This method must NOT be renamed: it functions as a dynamic import on a\x0d\n   * loader module.\x0d\n   *\x0d\n   * @param {string | string[]} specifiers Path(s) to the module\x0d\n   * @param {string} [parentURL] Path of the parent importing the module\x0d\n   * @returns {object | object[]} A list of module export(s)\x0d\n   */\x0d\n  async import(specifiers\x2C parentURL) {\x0d\n    const wasArr = ArrayIsArray(specifiers);\x0d\n    if (!wasArr) specifiers = [specifiers];\x0d\n\x0d\n    const count = specifiers.length;\x0d\n    const jobs = new Array(count);\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      jobs[i] = this.getModuleJob(specifiers[i]\x2C parentURL)\x0d\n        .then((job) => job.run())\x0d\n        .then(({ module }) => module.getNamespace());\x0d\n    }\x0d\n\x0d\n    const namespaces = await PromiseAll(new SafeArrayIterator(jobs));\x0d\n\x0d\n    return wasArr ?\x0d\n      namespaces :\x0d\n      namespaces[0];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} url The URL/path of the module to be loaded\x0d\n   * @param {Object} context Metadata about the module\x0d\n   * @returns {Object}\x0d\n   */\x0d\n  async load(url\x2C context = {}) {\x0d\n    const defaultLoader = this.#loaders[0];\x0d\n\x0d\n    const loader = this.#loaders.length === 1 ?\x0d\n      defaultLoader :\x0d\n      this.#loaders[1];\x0d\n    const loaded = await loader(url\x2C context\x2C defaultLoader);\x0d\n\x0d\n    if (typeof loaded !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader load'\x2C\x0d\n        loaded\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    } = loaded;\x0d\n\x0d\n    if (format == null) {\x0d\n      const dataUrl = RegExpPrototypeExec(\x0d\n        /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n\x0d\n      throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n        url\x2C\x0d\n        dataUrl ? `has an unsupported MIME type "${dataUrl[1]}"` : ''\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (typeof format !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    if (\x0d\n      source != null &&\x0d\n      typeof source !== 'string' &&\x0d\n      !isAnyArrayBuffer(source) &&\x0d\n      !isArrayBufferView(source)\x0d\n    ) throw ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n      'string\x2C an ArrayBuffer\x2C or a TypedArray'\x2C\x0d\n      'loader load'\x2C\x0d\n      'source'\x2C\x0d\n      source\x0d\n    );\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      source\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  preload() {\x0d\n    const count = this.#globalPreloaders.length;\x0d\n    if (!count) return;\x0d\n\x0d\n    for (let i = 0; i < count; i++) {\x0d\n      const preload = this.#globalPreloaders[i]();\x0d\n\x0d\n      if (preload == null) return;\x0d\n\x0d\n      if (typeof preload !== 'string') {\x0d\n        throw new ERR_INVALID_RETURN_VALUE(\x0d\n          'string'\x2C\x0d\n          'loader globalPreloadCode'\x2C\x0d\n          preload\x2C\x0d\n        );\x0d\n      }\x0d\n      const { compileFunction } = require('vm');\x0d\n      const preloadInit = compileFunction(\x0d\n        preload\x2C\x0d\n        ['getBuiltin']\x2C\x0d\n        {\x0d\n          filename: '<preload>'\x2C\x0d\n        }\x0d\n      );\x0d\n      const { NativeModule } = require('internal/bootstrap/loaders');\x0d\n\x0d\n      FunctionPrototypeCall(preloadInit\x2C globalThis\x2C (builtinName) => {\x0d\n        if (NativeModule.canBeRequiredByUsers(builtinName)) {\x0d\n          return require(builtinName);\x0d\n        }\x0d\n        throw new ERR_INVALID_ARG_VALUE('builtinName'\x2C builtinName);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   *\x0d\n   * The internals of this WILL change when chaining is implemented\x2C\x0d\n   * depending on the resolution/consensus from #36954\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   * be resolved\x0d\n   * @param {String} parentURL The URL path of the module's parent\x0d\n   * @returns {{ url: String }}\x0d\n   */\x0d\n  async resolve(originalSpecifier\x2C parentURL) {\x0d\n    const isMain = parentURL === undefined;\x0d\n\x0d\n    if (\x0d\n      !isMain &&\x0d\n      typeof parentURL !== 'string' &&\x0d\n      !isURLInstance(parentURL)\x0d\n    ) throw new ERR_INVALID_ARG_TYPE(\x0d\n      'parentURL'\x2C\x0d\n      ['string'\x2C 'URL']\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n\x0d\n    const conditions = DEFAULT_CONDITIONS;\x0d\n\x0d\n    const defaultResolver = this.#resolvers[0];\x0d\n\x0d\n    const resolver = this.#resolvers.length === 1 ?\x0d\n      defaultResolver :\x0d\n      this.#resolvers[1];\x0d\n    const resolution = await resolver(\x0d\n      originalSpecifier\x2C\x0d\n      {\x0d\n        conditions\x2C\x0d\n        parentURL\x2C\x0d\n      }\x2C\x0d\n      defaultResolver\x2C\x0d\n    );\x0d\n\x0d\n    if (typeof resolution !== 'object') {\x0d\n      throw new ERR_INVALID_RETURN_VALUE(\x0d\n        'object'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        resolution\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    const { format\x2C url } = resolution;\x0d\n\x0d\n    if (\x0d\n      format != null &&\x0d\n      typeof format !== 'string'\x0d\n    ) {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'format'\x2C\x0d\n        format\x2C\x0d\n      );\x0d\n    }\x0d\n    if (typeof url !== 'string') {\x0d\n      throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n        'string'\x2C\x0d\n        'loader resolve'\x2C\x0d\n        'url'\x2C\x0d\n        url\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      format\x2C\x0d\n      url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ESMLoader.prototype\x2C null);\x0d\n\x0d\nexports.ESMLoader = ESMLoader;\x0d\n
code-source-info,0x28fbd619886,111,0,12388,C0O0C4O12388,,
code-creation,Function,10,2246305,0x28fbd619fce,530, node:internal/modules/esm/loader:1:1,0x28fbd619800,~
code-source-info,0x28fbd619fce,111,0,12388,C0O0C104O82C110O82C114O136C120O146C126O163C132O186C138O209C144O235C150O261C156O278C161O303C167O318C173O342C179O364C185O380C191O606C197O606C202O632C207O424C213O449C219O475C225O508C231O546C237O575C243O682C249O682C254O649C260O664C266O764C272O764C277O719C283O740C289O815C295O815C299O815C301O878C307O878C311O878C313O980C319O980C324O936C330O955C336O1046C342O1046C347O1030C353O1109C359O1109C364O1093C370O1186C376O1186C381O1167C510O12335C517O12304C522O12356C524O12374C529O12387,,
code-creation,Function,10,2246546,0x28fbd61a3c6,139,<instance_members_initializer> node:internal/modules/esm/loader:59:3,0x28fbd619b88,~
code-source-info,0x28fbd61a3c6,111,1669,2500,C3O1689C17O1851C28O1858C45O2040C56O2047C73O2146C80O2146C94O2269C104O2361C111O2361C125O2489C138O2500,,
tick,0x7ff7c3f6f9a6,2246758,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Eval,10,2247282,0x28fbd61b78e,5, node:internal/modules/esm/module_map:1:1,0x28fbd61b5c0,~
script-source,112,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst ModuleJob = require('internal/modules/esm/module_job');\x0d\nconst {\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n// Tracks the state of the loader-level module cache\x0d\nclass ModuleMap extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url) {\x0d\n    validateString(url\x2C 'url');\x0d\n    return super.get(url);\x0d\n  }\x0d\n  set(url\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} in ModuleMap`);\x0d\n    return super.set(url\x2C job);\x0d\n  }\x0d\n  has(url) {\x0d\n    validateString(url\x2C 'url');\x0d\n    return super.has(url);\x0d\n  }\x0d\n}\x0d\nmodule.exports = ModuleMap;\x0d\n
code-source-info,0x28fbd61b78e,112,0,989,C0O0C4O989,,
code-creation,Function,10,2247715,0x28fbd61bbae,149, node:internal/modules/esm/module_map:1:1,0x28fbd61b708,~
code-source-info,0x28fbd61bbae,112,0,989,C0O0C17O35C20O35C24O35C26O91C31O131C34O131C39O164C52O165C58O131C60O245C63O245C68O271C73O220C79O307C82O307C87O288C97O420C141O960C143O975C148O988,,
tick,0x7ff7c4f44315,2247954,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd61a0f5,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Eval,10,2248651,0x28fbd61c5d6,5, node:internal/modules/esm/module_job:1:1,0x28fbd61c2f0,~
script-source,113,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeCatch\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeMatch\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C moduleProvider\x2C isMain\x2C inspectBrk) {\x0d\n    this.loader = loader;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier) => {\x0d\n        const jobPromise = this.loader.getModuleJob(specifier\x2C url);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C jobPromise);\x0d\n        const job = await jobPromise;\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined)\x0d\n        await PromiseAll(new SafeArrayIterator(promises));\x0d\n\x0d\n      return PromiseAll(new SafeArrayIterator(dependencyJobs));\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeCatch(this.linked\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return PromiseAll(new SafeArrayIterator(\x0d\n        ArrayPrototypeMap(dependencyJobs\x2C addJobsToDependencyGraph)));\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = StringPrototypeReplace(\x0d\n          splitStack[0]\x2C\x0d\n          /:\\d+$/\x2C\x0d\n          ''\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = StringPrototypeMatch(\x0d\n          e.message\x2C\x0d\n          /module '(.*)' does not provide an export named '(.+)'/);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C parentFileUrl\x2C\x0d\n        );\x0d\n        const { format } = await this.loader.load(childFileURL);\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = StringPrototypeMatch(importStatement\x2C /{.*}/);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            StringPrototypeReplace(oneLineNamedImports\x2C /\\s+as\\s+/g\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeTest(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x28fbd61c5d6,113,0,7906,C0O0C4O7906,,
code-creation,Function,10,2250178,0x28fbd61cac6,334, node:internal/modules/esm/module_job:1:1,0x28fbd61c550,~
code-source-info,0x28fbd61cac6,113,0,7906,C0O0C85O28C91O51C97O73C103O96C109O119C114O141C119O166C125O181C130O200C136O226C142O243C148O267C154O289C160O301C166O329C172O354C178O381C184O406C190O477C196O477C201O462C207O543C213O543C218O520C224O608C230O608C235O581C241O673C247O673C251O673C253O726C256O726C258O760C260O760C262O803C263O803C265O835C269O835C271O960C275O960C314O7858C321O7827C326O7877C328O7892C333O7905,,
tick,0x7ff7c4f508d6,2250597,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd61bbc2,0x23629344c63,0x236293448e5,0x28fbd61a0f5,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff86e9efbdd,2251550,1,0x7ff7c402b3d0,2,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd61a10d,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Eval,10,2253628,0x28fbd61f81e,5, node:internal/modules/esm/resolve:1:1,0x28fbd61f128,~
script-source,114,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeTest\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { NativeModule } = require('internal/bootstrap/loaders');\x0d\nconst {\x0d\n  realpathSync\x2C\x0d\n  statSync\x2C\x0d\n  Stats\x2C\x0d\n} = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C relative\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst typeFlag = getOptionValue('--input-type');\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\n\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst userConditions = getOptionValue('--conditions');\x0d\nconst noAddons = getOptionValue('--no-addons');\x0d\nconst addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\nconst DEFAULT_CONDITIONS = ObjectFreeze([\x0d\n  'node'\x2C\x0d\n  'import'\x2C\x0d\n  ...addonConditions\x2C\x0d\n  ...userConditions\x2C\x0d\n]);\x0d\n\x0d\nconst DEFAULT_CONDITIONS_SET = new SafeSet(DEFAULT_CONDITIONS);\x0d\n\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C unknown>} Exports\x0d\n * @typedef {'module' | 'commonjs'} PackageType\x0d\n * @typedef {{\x0d\n *   exports?: ExportConfig;\x0d\n *   name?: string;\x0d\n *   main?: string;\x0d\n *   type?: PackageType;\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * @param {string} match\x0d\n * @param {URL} pjsonUrl\x0d\n * @param {boolean} isExports\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {void}\x0d\n */\x0d\nfunction emitFolderMapDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated folder mapping "${match}" in the ${isExports ?\x0d\n      '"exports"' : '"imports"'} field module resolution of the package at ${\x0d\n      pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.\\n` +\x0d\n      `Update this package.json to use a subpath pattern like "${match}*".`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0148'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C isExports\x2C base) {\x0d\n  if (!pendingDeprecation) return;\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match))\x0d\n    return;\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ${\x0d\n      isExports ? '"exports"' : '"imports"'} field module resolution of the ` +\x0d\n      `package at ${pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {string} main\x0d\n * @returns\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  const format = defaultGetFormat(url);\x0d\n  if (format !== 'module')\x0d\n    return;\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (main)\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to ${JSONStringify(main)}\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n  else\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x0d\n    );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== DEFAULT_CONDITIONS) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return DEFAULT_CONDITIONS_SET;\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\nconst packageJSONCache = new SafeMap();  /* string -> PackageConfig */\x0d\n\x0d\n/**\x0d\n * @param {string | URL} path\x0d\n * @returns {import('fs').Stats}\x0d\n */\x0d\nconst tryStatSync =\x0d\n  (path) => statSync(path\x2C { throwIfNoEntry: false }) ?? new Stats();\x0d\n\x0d\n/**\x0d\n * @param {string} path\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageConfig(path\x2C specifier\x2C base) {\x0d\n  const existing = packageJSONCache.get(path);\x0d\n  if (existing !== undefined) {\x0d\n    return existing;\x0d\n  }\x0d\n  const source = packageJsonReader.read(path).string;\x0d\n  if (source === undefined) {\x0d\n    const packageConfig = {\x0d\n      pjsonPath: path\x2C\x0d\n      exists: false\x2C\x0d\n      main: undefined\x2C\x0d\n      name: undefined\x2C\x0d\n      type: 'none'\x2C\x0d\n      exports: undefined\x2C\x0d\n      imports: undefined\x2C\x0d\n    };\x0d\n    packageJSONCache.set(path\x2C packageConfig);\x0d\n    return packageConfig;\x0d\n  }\x0d\n\x0d\n  let packageJSON;\x0d\n  try {\x0d\n    packageJSON = JSONParse(source);\x0d\n  } catch (error) {\x0d\n    throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n      path\x2C\x0d\n      (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n      error.message\x0d\n    );\x0d\n  }\x0d\n\x0d\n  let { imports\x2C main\x2C name\x2C type } = packageJSON;\x0d\n  const { exports } = packageJSON;\x0d\n  if (typeof imports !== 'object' || imports === null) imports = undefined;\x0d\n  if (typeof main !== 'string') main = undefined;\x0d\n  if (typeof name !== 'string') name = undefined;\x0d\n  // Ignore unknown types for forwards compatibility\x0d\n  if (type !== 'module' && type !== 'commonjs') type = 'none';\x0d\n\x0d\n  const packageConfig = {\x0d\n    pjsonPath: path\x2C\x0d\n    exists: true\x2C\x0d\n    main\x2C\x0d\n    name\x2C\x0d\n    type\x2C\x0d\n    exports\x2C\x0d\n    imports\x2C\x0d\n  };\x0d\n  packageJSONCache.set(path\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL | string} resolved\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json'))\x0d\n      break;\x0d\n    const packageConfig = getPackageConfig(fileURLToPath(packageJSONUrl)\x2C\x0d\n                                           resolved);\x0d\n    if (packageConfig.exists) return packageConfig;\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) break;\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  const packageConfig = {\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n  packageJSONCache.set(packageJSONPath\x2C packageConfig);\x0d\n  return packageConfig;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | URL} url\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction fileExists(url) {\x0d\n  return statSync(url\x2C { throwIfNoEntry: false })?.isFile() ?? false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  let guess;\x0d\n  if (packageConfig.main !== undefined) {\x0d\n    // Note: fs check redundances will be handled by Descriptor cache here.\x0d\n    if (fileExists(guess = new URL(`./${packageConfig.main}`\x2C\x0d\n                                   packageJSONUrl))) {\x0d\n      return guess;\x0d\n    } else if (fileExists(guess = new URL(`./${packageConfig.main}.js`\x2C\x0d\n                                          packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.js`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.json`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else if (fileExists(guess = new URL(`./${packageConfig.main}/index.node`\x2C\x0d\n                                        packageJSONUrl)));\x0d\n    else guess = undefined;\x0d\n    if (guess) {\x0d\n      emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C\x0d\n                                 packageConfig.main);\x0d\n      return guess;\x0d\n    }\x0d\n    // Fallthrough.\x0d\n  }\x0d\n  if (fileExists(guess = new URL('./index.js'\x2C packageJSONUrl)));\x0d\n  // So fs.\x0d\n  else if (fileExists(guess = new URL('./index.json'\x2C packageJSONUrl)));\x0d\n  else if (fileExists(guess = new URL('./index.node'\x2C packageJSONUrl)));\x0d\n  else guess = undefined;\x0d\n  if (guess) {\x0d\n    emitLegacyIndexDeprecation(guess\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n    return guess;\x0d\n  }\x0d\n  // Not found.\x0d\n  throw new ERR_MODULE_NOT_FOUND(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensionsWithTryExactName(search) {\x0d\n  if (fileExists(search)) return search;\x0d\n  return resolveExtensions(search);\x0d\n}\x0d\n\x0d\nconst extensions = ['.js'\x2C '.json'\x2C '.node'\x2C '.mjs'];\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveExtensions(search) {\x0d\n  for (let i = 0; i < extensions.length; i++) {\x0d\n    const extension = extensions[i];\x0d\n    const guess = new URL(`${search.pathname}${extension}`\x2C search);\x0d\n    if (fileExists(guess)) return guess;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} search\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction resolveDirectoryEntry(search) {\x0d\n  const dirPath = fileURLToPath(search);\x0d\n  const pkgJsonPath = resolve(dirPath\x2C 'package.json');\x0d\n  if (fileExists(pkgJsonPath)) {\x0d\n    const pkgJson = packageJsonReader.read(pkgJsonPath);\x0d\n    if (pkgJson.containsKeys) {\x0d\n      const { main } = JSONParse(pkgJson.string);\x0d\n      if (main != null) {\x0d\n        const mainUrl = pathToFileURL(resolve(dirPath\x2C main));\x0d\n        return resolveExtensionsWithTryExactName(mainUrl);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return resolveExtensions(new URL('index'\x2C search));\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * @param {URL} resolved\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL | undefined}\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base) {\x0d\n  if (RegExpPrototypeTest(encodedSepRegEx\x2C resolved.pathname))\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n\x0d\n  const path = fileURLToPath(resolved);\x0d\n  if (getOptionValue('--experimental-specifier-resolution') === 'node') {\x0d\n    let file = resolveExtensionsWithTryExactName(resolved);\x0d\n    if (file !== undefined) return file;\x0d\n    if (!StringPrototypeEndsWith(path\x2C '/')) {\x0d\n      file = resolveDirectoryEntry(new URL(`${resolved}/`));\x0d\n      if (file !== undefined) return file;\x0d\n    } else {\x0d\n      return resolveDirectoryEntry(resolved) || resolved;\x0d\n    }\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      resolved.pathname\x2C fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  const stats = tryStatSync(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path);\x0d\n  if (stats.isDirectory()) {\x0d\n    const err = new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base));\x0d\n    err.url = String(resolved);\x0d\n    throw err;\x0d\n  } else if (!stats.isFile()) {\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C 'module');\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwImportNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwExportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {string | URL} subpath\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {boolean} internal\x0d\n * @param {string | URL | undefined} base\x0d\n */\x0d\nfunction throwInvalidSubpath(subpath\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid subpath for the "${internal ?\x0d\n    'imports' : 'exports'}" resolution of ${fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(subpath\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nfunction throwInvalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  throw new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)(\\.\\.?|node_modules)(\\\\|\\/|$)/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C subpath\x2C match\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/')\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      let isURL = false;\x0d\n      try {\x0d\n        new URL(target);\x0d\n        isURL = true;\x0d\n      } catch {}\x0d\n      if (!isURL) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath))\x0d\n    throwInvalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (subpath === '') return resolved;\x0d\n\x0d\n  if (RegExpPrototypeTest(invalidSegmentRegEx\x2C subpath))\x0d\n    throwInvalidSubpath(match + subpath\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n\x0d\n  if (pattern)\x0d\n    return new URL(RegExpPrototypeSymbolReplace(patternRegEx\x2C resolved.href\x2C\x0d\n                                                () => subpath));\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} key\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) return false;\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0)\x0d\n      return null;\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolved;\x0d\n      try {\x0d\n        resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET')\x0d\n          continue;\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolved === undefined)\x0d\n        continue;\x0d\n      if (resolved === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolved;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null)\x0d\n      return lastException;\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C conditions);\x0d\n        if (resolved === undefined)\x0d\n          continue;\x0d\n        return resolved;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throwInvalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                            base);\x0d\n}\x0d\n\x0d\n/**\x0d\n *\x0d\n * @param {Exports} exports\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) return true;\x0d\n  if (typeof exports !== 'object' || exports === null) return false;\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {string} packageSubpath\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base))\x0d\n    exports = { '.': exports };\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolved = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C conditions\x0d\n    );\x0d\n    if (resolved === null || resolved === undefined)\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    return { resolved\x2C exact: true };\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            true\x2C base);\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    } else if (key[key.length - 1] === '/' &&\x0d\n      StringPrototypeStartsWith(packageSubpath\x2C key) &&\x0d\n      patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n      bestMatch = key;\x0d\n      bestMatchSubpath = StringPrototypeSlice(packageSubpath\x2C key.length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n    const resolved = resolvePackageTarget(packageJSONUrl\x2C target\x2C\x0d\n                                          bestMatchSubpath\x2C bestMatch\x2C base\x2C\x0d\n                                          pattern\x2C false\x2C conditions);\x0d\n    if (resolved === null || resolved === undefined)\x0d\n      throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    if (!pattern)\x0d\n      emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C true\x2C base);\x0d\n    return { resolved\x2C exact: pattern };\x0d\n  }\x0d\n\x0d\n  throwExportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) return -1;\x0d\n  if (baseLenB > baseLenA) return 1;\x0d\n  if (aPatternIndex === -1) return 1;\x0d\n  if (bPatternIndex === -1) return -1;\x0d\n  if (a.length > b.length) return -1;\x0d\n  if (b.length > a.length) return 1;\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} name\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*') &&\x0d\n          !StringPrototypeEndsWith(name\x2C '/')) {\x0d\n        const resolved = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C conditions\x0d\n        );\x0d\n        if (resolved !== null)\x0d\n          return { resolved\x2C exact: true };\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          } else if (key[key.length - 1] === '/' &&\x0d\n            StringPrototypeStartsWith(name\x2C key) &&\x0d\n            patternKeyCompare(bestMatch\x2C key) === 1) {\x0d\n            bestMatch = key;\x0d\n            bestMatchSubpath = StringPrototypeSlice(name\x2C key.length);\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const pattern = StringPrototypeIncludes(bestMatch\x2C '*');\x0d\n          const resolved = resolvePackageTarget(packageJSONUrl\x2C target\x2C\x0d\n                                                bestMatchSubpath\x2C bestMatch\x2C\x0d\n                                                base\x2C pattern\x2C true\x2C\x0d\n                                                conditions);\x0d\n          if (resolved !== null) {\x0d\n            if (!pattern)\x0d\n              emitFolderMapDeprecation(bestMatch\x2C packageJSONUrl\x2C false\x2C base);\x0d\n            return { resolved\x2C exact: pattern };\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throwImportNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @returns {PackageType}\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {{ packageName: string\x2C packageSubpath: string\x2C isScoped: boolean }}\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // separators.\x0d\n  for (let i = 0; i < packageName.length; i++) {\x0d\n    if (packageName[i] === '%' || packageName[i] === '\\\\') {\x0d\n      validPackageName = false;\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.name === packageName &&\x0d\n        packageConfig.exports !== undefined && packageConfig.exports !== null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = tryStatSync(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                  packageJSONPath.length - 13));\x0d\n    if (!stat.isDirectory()) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = getPackageConfig(packageJSONPath\x2C specifier\x2C base);\x0d\n    if (packageConfig.exports !== undefined && packageConfig.exports !== null)\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions\x0d\n      ).resolved;\x0d\n    if (packageSubpath === '.')\x0d\n      return legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base);\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') return true;\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') return true;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') return false;\x0d\n  if (specifier[0] === '/') return true;\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} specifier\x0d\n * @param {string | URL | undefined} base\x0d\n * @param {Set<string>} conditions\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions) {\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    resolved = new URL(specifier\x2C base);\x0d\n  } else if (specifier[0] === '#') {\x0d\n    ({ resolved } = packageImportsResolve(specifier\x2C base\x2C conditions));\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch {\x0d\n      resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n    }\x0d\n  }\x0d\n  return finalizeResolution(resolved\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module\x0d\n * @param {string} specifier\x0d\n * @param {string} parentURL\x0d\n * @returns {boolean|string}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      found = relative(parent\x2C found);\x0d\n      // Add '.separator if the path does not start with '..separator'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C `..${sep}`)) {\x0d\n        found = `.${sep}${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const pkg = StringPrototypeSplit(specifier\x2C '/')[0];\x0d\n      const index = StringPrototypeIndexOf(found\x2C pkg);\x0d\n      if (index !== -1) {\x0d\n        found = StringPrototypeSlice(found\x2C index);\x0d\n      }\x0d\n    }\x0d\n    // Normalize the path separator to give a valid suggestion\x0d\n    // on Windows\x0d\n    if (process.platform === 'win32') {\x0d\n      found = RegExpPrototypeSymbolReplace(new RegExp(`\\\\${sep}`\x2C 'g')\x2C\x0d\n                                           found\x2C '/');\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction defaultResolve(specifier\x2C context = {}\x2C defaultResolveUnused) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  let parsed;\x0d\n  try {\x0d\n    parsed = new URL(specifier);\x0d\n    if (parsed.protocol === 'data:') {\x0d\n      return {\x0d\n        url: specifier\x0d\n      };\x0d\n    }\x0d\n  } catch {}\x0d\n  if (parsed && parsed.protocol === 'node:')\x0d\n    return { url: specifier };\x0d\n  if (parsed && parsed.protocol !== 'file:' && parsed.protocol !== 'data:')\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed);\x0d\n  if (NativeModule.canBeRequiredByUsers(specifier)) {\x0d\n    return {\x0d\n      url: 'node:' + specifier\x0d\n    };\x0d\n  }\x0d\n  if (parentURL && StringPrototypeStartsWith(parentURL\x2C 'data:')) {\x0d\n    // This is gonna blow up\x2C we want the error\x0d\n    new URL(specifier\x2C parentURL);\x0d\n  }\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = pathToFileURL(`${process.cwd()}/`).href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (typeFlag)\x0d\n      throw new ERR_INPUT_TYPE_NOT_ALLOWED();\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(specifier\x2C parentURL\x2C conditions);\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n      if (found) {\x0d\n        // Modify the stack and message string to include the hint\x0d\n        const lines = StringPrototypeSplit(error.stack\x2C '\\n');\x0d\n        const hint = `Did you mean to import ${found}?`;\x0d\n        error.stack =\x0d\n          ArrayPrototypeShift(lines) + '\\n' +\x0d\n          hint + '\\n' +\x0d\n          ArrayPrototypeJoin(lines\x2C '\\n');\x0d\n        error.message += `\\n${hint}`;\x0d\n      }\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  if (isMain ? !preserveSymlinksMain : !preserveSymlinks) {\x0d\n    const urlPath = fileURLToPath(url);\x0d\n    const real = realpathSync(urlPath\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x0d\n    });\x0d\n    const old = url;\x0d\n    url = pathToFileURL(\x0d\n      real + (StringPrototypeEndsWith(urlPath\x2C sep) ? '/' : ''));\x0d\n    url.search = old.search;\x0d\n    url.hash = old.hash;\x0d\n  }\x0d\n\x0d\n  return { url: `${url}` };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  DEFAULT_CONDITIONS\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\n
code-source-info,0x28fbd61f81e,114,0,37562,C0O0C4O37562,,
tick,0x7ff7c478f979,2260066,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd61a10d,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff86e9f4383,2260133,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd61a10d,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff7c4f50931,2260187,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd61a10d,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff7c3ed8a50,2260244,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd61a10d,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Function,10,2260389,0x28fbd6207be,1086, node:internal/modules/esm/resolve:1:1,0x28fbd61f798,~
code-source-info,0x28fbd6207be
tick,0x7ff7c455adcc,2261405,1,0x7ff7c402b3d0,6,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd61a10d,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Eval,10,2262287,0x28fbd6239a6,5, node:internal/modules/esm/get_format:1:1,0x28fbd623780,~
script-source,115,node:internal/modules/esm/get_format,'use strict';\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n} = primordials;\x0d\nconst { extname } = require('path');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst experimentalJsonModules = getOptionValue('--experimental-json-modules');\x0d\nconst experimentalSpecifierResolution =\x0d\n  getOptionValue('--experimental-specifier-resolution');\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\nconst { getPackageType } = require('internal/modules/esm/resolve');\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.mjs': 'module'\x0d\n};\x0d\n\x0d\nconst legacyExtensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'commonjs'\x2C\x0d\n  '.json': 'commonjs'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n  '.node': 'commonjs'\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules)\x0d\n  extensionFormatMap['.wasm'] = legacyExtensionFormatMap['.wasm'] = 'wasm';\x0d\n\x0d\nif (experimentalJsonModules)\x0d\n  extensionFormatMap['.json'] = legacyExtensionFormatMap['.json'] = 'json';\x0d\n\x0d\nconst protocolHandlers = ObjectAssign(ObjectCreate(null)\x2C {\x0d\n  'data:'(parsed) {\x0d\n    const { 1: mime } = RegExpPrototypeExec(\x0d\n      /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n      parsed.pathname\x2C\x0d\n    ) || [\x2C null];\x0d\n    const format = ({\x0d\n      '__proto__': null\x2C\x0d\n      'text/javascript': 'module'\x2C\x0d\n      'application/json': experimentalJsonModules ? 'json' : null\x2C\x0d\n      'application/wasm': experimentalWasmModules ? 'wasm' : null\x0d\n    })[mime] || null;\x0d\n\x0d\n    return format;\x0d\n  }\x2C\x0d\n  'file:'(parsed\x2C url) {\x0d\n    const ext = extname(parsed.pathname);\x0d\n    let format;\x0d\n\x0d\n    if (ext === '.js') {\x0d\n      format = getPackageType(parsed.href) === 'module' ? 'module' : 'commonjs';\x0d\n    } else {\x0d\n      format = extensionFormatMap[ext];\x0d\n    }\x0d\n    if (!format) {\x0d\n      if (experimentalSpecifierResolution === 'node') {\x0d\n        process.emitWarning(\x0d\n          'The Node.js specifier resolution in ESM is experimental.'\x2C\x0d\n          'ExperimentalWarning');\x0d\n        format = legacyExtensionFormatMap[ext];\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C fileURLToPath(url));\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return format || null;\x0d\n  }\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n});\x0d\n\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const parsed = new URL(url);\x0d\n\x0d\n  return ObjectPrototypeHasOwnProperty(protocolHandlers\x2C parsed.protocol) ?\x0d\n    protocolHandlers[parsed.protocol](parsed\x2C url) :\x0d\n    null;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  extensionFormatMap\x2C\x0d\n  legacyExtensionFormatMap\x2C\x0d\n};\x0d\n
code-source-info,0x28fbd6239a6,115,0,2723,C0O0C4O2723,,
code-creation,Function,10,2262874,0x28fbd623dd6,314, node:internal/modules/esm/get_format:1:1,0x28fbd623920,~
code-source-info,0x28fbd623dd6,115,0,2723,C0O0C53O26C58O43C63O60C69O94C75O154C78O154C83O142C89O199C92O199C97O180C102O263C105O263C109O263C111O354C114O354C118O354C120O442C123O442C127O442C129O517C132O517C137O498C143O590C146O590C151O567C157O572C163O655C166O655C171O681C176O624C182O719C186O719C188O846C192O846C194O990C198O1022C207O1086C213O1050C217O1099C221O1131C230O1195C236O1159C240O1233C242O1246C252O1271C260O1701C268O2361C276O1233C281O1233C283O2626C290O2648C296O2669C302O2692C308O2641C313O2722,,
tick,0x7ff7c3f8798c,2263388,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd620bef,0x23629344c63,0x236293448e5,0x28fbd61a10d,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Eval,10,2263947,0x28fbd624626,5, node:internal/modules/esm/load:1:1,0x28fbd6244b0,~
script-source,116,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { defaultGetSource } = require('internal/modules/esm/get_source');\x0d\nconst { translators } = require('internal/modules/esm/translators');\x0d\n\x0d\nasync function defaultLoad(url\x2C context) {\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (!translators.has(format)) format = defaultGetFormat(url);\x0d\n\x0d\n  if (\x0d\n    format === 'builtin' ||\x0d\n    format === 'commonjs'\x0d\n  ) {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    source = await defaultGetSource(url\x2C { format });\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n};\x0d\n
code-source-info,0x28fbd624626,116,0,675,C0O0C4O675,,
code-creation,Function,10,2264205,0x28fbd62476e,80, node:internal/modules/esm/load:1:1,0x28fbd6245a0,~
code-source-info,0x28fbd62476e,116,0,675,C0O0C19O46C22O46C27O25C33O120C36O120C41O99C47O189C50O189C55O173C61O635C68O657C74O650C79O674,,
code-creation,Eval,10,2264719,0x28fbd624cd6,5, node:internal/modules/esm/get_source:1:1,0x28fbd624b00,~
script-source,117,node:internal/modules/esm/get_source,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst fs = require('internal/fs/promises').exports;\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_INVALID_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst readFileAsync = fs.readFile;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\nasync function defaultGetSource(url\x2C { format } = {}\x2C defaultGetSource) {\x0d\n  const parsed = new URL(url);\x0d\n  let source;\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    source = await readFileAsync(parsed);\x0d\n  } else if (parsed.protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C parsed.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(url);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = Buffer.from(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else {\x0d\n    throw new ERR_INVALID_URL_SCHEME(['file'\x2C 'data']);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(parsed\x2C source);\x0d\n  }\x0d\n  return source;\x0d\n}\x0d\nexports.defaultGetSource = defaultGetSource;\x0d\n
code-source-info,0x28fbd624cd6,117,0,1394,C0O0C4O1394,,
code-creation,Function,10,2265030,0x28fbd624e46,169, node:internal/modules/esm/get_source:1:1,0x28fbd624c50,~
code-source-info,0x28fbd624e46,117,0,1394,C0O0C37O28C43O52C49O118C52O118C57O99C62O215C65O215C74O260C81O215C83O328C86O328C91O317C97O361C100O361C105O392C110O419C113O419C118O411C124O505C127O505C132O531C137O456C143O476C149O565C153O562C155O603C159O603C161O1348C163O1373C168O1393,,
tick,0x7ff7c4f46fc1,2265423,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd624792,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff7c4981c23,2267303,1,0x7ff7c402b3d0,2,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd624eaa,0x23629344c63,0x236293448e5,0x28fbd624792,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Eval,10,2268186,0x28fbd62618e,5, node:internal/fs/promises:1:1,0x28fbd6259f0,~
script-source,118,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x0d\n} = internalBinding('constants').fs;\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\nconst { rimrafPromises } = require('internal/fs/rimraf');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { lazyDOMException\x2C promisify } = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { watch } = require('internal/fs/watchers');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError();\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n  } else {\x0d\n    size = 0;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let endOfFile = false;\x0d\n  let totalRead = 0;\x0d\n  const noSize = size === 0;\x0d\n  const buffers = [];\x0d\n  const fullBuffer = noSize ? undefined : Buffer.allocUnsafeSlow(size);\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n    if (noSize) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n    } else {\x0d\n      buffer = fullBuffer;\x0d\n      offset = totalRead;\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) || 0;\x0d\n    totalRead += bytesRead;\x0d\n    endOfFile = bytesRead === 0 || totalRead === size;\x0d\n    if (noSize && bytesRead > 0) {\x0d\n      const isBufferFull = bytesRead === kReadFileUnknownBufferLength;\x0d\n      const chunkBuffer = isBufferFull ? buffer : buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(buffers\x2C chunkBuffer);\x0d\n    }\x0d\n  } while (!endOfFile);\x0d\n\x0d\n  let result;\x0d\n  if (size > 0) {\x0d\n    result = totalRead === size ? fullBuffer : fullBuffer.slice(0\x2C totalRead);\x0d\n  } else {\x0d\n    result = buffers.length === 1 ? buffers[0] : Buffer.concat(buffers\x2C\x0d\n                                                               totalRead);\x0d\n  }\x0d\n\x0d\n  return options.encoding ? result.toString(options.encoding) : result;\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrOptions\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrOptions;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    if (bufferOrOptions === undefined) {\x0d\n      bufferOrOptions = {};\x0d\n    }\x0d\n    if (bufferOrOptions.buffer) {\x0d\n      buffer = bufferOrOptions.buffer;\x0d\n      validateBuffer(buffer);\x0d\n    } else {\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n    offset = bufferOrOptions.offset || 0;\x0d\n    length = buffer.byteLength;\x0d\n    position = bufferOrOptions.position || null;\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return SafePromisePrototypeFinally(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return rimrafPromises(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return rimrafPromises(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x0d\n  } = options || {};\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                       options.encoding\x2C\x0d\n                                       !!options.withFileTypes\x2C\x0d\n                                       kUsePromises);\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return SafePromisePrototypeFinally(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix);\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  return SafePromisePrototypeFinally(\x0d\n    writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding)\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return SafePromisePrototypeFinally(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x28fbd62618e,118,0,23714,C0O0C4O23714,,
code-creation,Function,10,2272738,0x28fbd6288c6,1659, node:internal/fs/promises:1:1,0x28fbd626108,~
code-source-info,0x28fbd6288c
code-creation,Function,10,2273426,0x28fbd629276,27,<instance_members_initializer> node:internal/fs/promises:189:3,0x28fbd627768,~
code-source-info,0x28fbd629276,118,4390,5219,C0O4390C12O4398C26O5219,,
tick,0x7ff7c3ed8a50,2274011,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd624eaa,0x23629344c63,0x236293448e5,0x28fbd624792,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff7c3f6f865,2274079,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd624eaa,0x23629344c63,0x236293448e5,0x28fbd624792,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff7c4f64857,2274150,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd624eaa,0x23629344c63,0x236293448e5,0x28fbd624792,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Eval,10,2274886,0x28fbd62bd16,5, node:internal/fs/rimraf:1:1,0x28fbd62b9b0,~
script-source,119,node:internal/fs/rimraf,// This file is a modified version of the rimraf module on npm. It has been\x0d\n// modified in the following ways:\x0d\n// - Use of the assert module has been replaced with core's error system.\x0d\n// - All code related to the glob dependency has been removed.\x0d\n// - Bring your own custom fs module is not currently supported.\x0d\n// - Some basic code cleanup.\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst fs = require('fs');\x0d\nconst {\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x0d\n} = fs;\x0d\nconst { sep } = require('path');\x0d\nconst { setTimeout } = require('timers');\x0d\nconst { sleep } = require('internal/util');\x0d\nconst notEmptyErrorCodes = new SafeSet(['ENOTEMPTY'\x2C 'EEXIST'\x2C 'EPERM']);\x0d\nconst retryErrorCodes = new SafeSet(\x0d\n  ['EBUSY'\x2C 'EMFILE'\x2C 'ENFILE'\x2C 'ENOTEMPTY'\x2C 'EPERM']);\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst epermHandler = isWindows ? fixWinEPERM : _rmdir;\x0d\nconst epermHandlerSync = isWindows ? fixWinEPERMSync : _rmdirSync;\x0d\nconst readdirEncoding = 'buffer';\x0d\nconst separator = Buffer.from(sep);\x0d\n\x0d\n\x0d\nfunction rimraf(path\x2C options\x2C callback) {\x0d\n  let retries = 0;\x0d\n\x0d\n  _rimraf(path\x2C options\x2C function CB(err) {\x0d\n    if (err) {\x0d\n      if (retryErrorCodes.has(err.code) && retries < options.maxRetries) {\x0d\n        retries++;\x0d\n        const delay = retries * options.retryDelay;\x0d\n        return setTimeout(_rimraf\x2C delay\x2C path\x2C options\x2C CB);\x0d\n      }\x0d\n\x0d\n      // The file is already gone.\x0d\n      if (err.code === 'ENOENT')\x0d\n        err = null;\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rimraf(path\x2C options\x2C callback) {\x0d\n  // SunOS lets the root user unlink directories. Use lstat here to make sure\x0d\n  // it's not a directory.\x0d\n  lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (err.code === 'ENOENT')\x0d\n        return callback(null);\x0d\n\x0d\n      // Windows can EPERM on stat.\x0d\n      if (isWindows && err.code === 'EPERM')\x0d\n        return fixWinEPERM(path\x2C options\x2C err\x2C callback);\x0d\n    } else if (stats.isDirectory()) {\x0d\n      return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n    }\x0d\n\x0d\n    unlink(path\x2C (err) => {\x0d\n      if (err) {\x0d\n        if (err.code === 'ENOENT')\x0d\n          return callback(null);\x0d\n        if (err.code === 'EISDIR')\x0d\n          return _rmdir(path\x2C options\x2C err\x2C callback);\x0d\n        if (err.code === 'EPERM') {\x0d\n          return epermHandler(path\x2C options\x2C err\x2C callback);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return callback(err);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERM(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  chmod(path\x2C 0o666\x2C (err) => {\x0d\n    if (err)\x0d\n      return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n    stat(path\x2C (err\x2C stats) => {\x0d\n      if (err)\x0d\n        return callback(err.code === 'ENOENT' ? null : originalErr);\x0d\n\x0d\n      if (stats.isDirectory())\x0d\n        _rmdir(path\x2C options\x2C originalErr\x2C callback);\x0d\n      else\x0d\n        unlink(path\x2C callback);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdir(path\x2C options\x2C originalErr\x2C callback) {\x0d\n  rmdir(path\x2C (err) => {\x0d\n    if (err) {\x0d\n      if (notEmptyErrorCodes.has(err.code))\x0d\n        return _rmchildren(path\x2C options\x2C callback);\x0d\n      if (err.code === 'ENOTDIR')\x0d\n        return callback(originalErr);\x0d\n    }\x0d\n\x0d\n    callback(err);\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmchildren(path\x2C options\x2C callback) {\x0d\n  const pathBuf = Buffer.from(path);\x0d\n\x0d\n  readdir(pathBuf\x2C readdirEncoding\x2C (err\x2C files) => {\x0d\n    if (err)\x0d\n      return callback(err);\x0d\n\x0d\n    let numFiles = files.length;\x0d\n\x0d\n    if (numFiles === 0)\x0d\n      return rmdir(path\x2C callback);\x0d\n\x0d\n    let done = false;\x0d\n\x0d\n    ArrayPrototypeForEach(files\x2C (child) => {\x0d\n      const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n      rimraf(childPath\x2C options\x2C (err) => {\x0d\n        if (done)\x0d\n          return;\x0d\n\x0d\n        if (err) {\x0d\n          done = true;\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        numFiles--;\x0d\n        if (numFiles === 0)\x0d\n          rmdir(path\x2C callback);\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafPromises(path\x2C options) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    rimraf(path\x2C options\x2C (err) => {\x0d\n      if (err)\x0d\n        return reject(err);\x0d\n\x0d\n      resolve();\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n\x0d\nfunction rimrafSync(path\x2C options) {\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = lstatSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    // Windows can EPERM on stat.\x0d\n    if (isWindows && err.code === 'EPERM')\x0d\n      fixWinEPERMSync(path\x2C options\x2C err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    // SunOS lets the root user unlink directories.\x0d\n    if (stats?.isDirectory())\x0d\n      _rmdirSync(path\x2C options\x2C null);\x0d\n    else\x0d\n      _unlinkSync(path\x2C options);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'EPERM')\x0d\n      return epermHandlerSync(path\x2C options\x2C err);\x0d\n    if (err.code !== 'EISDIR')\x0d\n      throw err;\x0d\n\x0d\n    _rmdirSync(path\x2C options\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _unlinkSync(path\x2C options) {\x0d\n  const tries = options.maxRetries + 1;\x0d\n\x0d\n  for (let i = 1; i <= tries; i++) {\x0d\n    try {\x0d\n      return unlinkSync(path);\x0d\n    } catch (err) {\x0d\n      // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n      // than zero\x2C and an error was encountered that warrants a retry.\x0d\n      if (retryErrorCodes.has(err.code) &&\x0d\n          i < tries &&\x0d\n          options.retryDelay > 0) {\x0d\n        sleep(i * options.retryDelay);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction _rmdirSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    rmdirSync(path);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n    if (err.code === 'ENOTDIR')\x0d\n      throw originalErr;\x0d\n\x0d\n    if (notEmptyErrorCodes.has(err.code)) {\x0d\n      // Removing failed. Try removing all children and then retrying the\x0d\n      // original removal. Windows has a habit of not closing handles promptly\x0d\n      // when files are deleted\x2C resulting in spurious ENOTEMPTY failures. Work\x0d\n      // around that issue by retrying on Windows.\x0d\n      const pathBuf = Buffer.from(path);\x0d\n\x0d\n      ArrayPrototypeForEach(readdirSync(pathBuf\x2C readdirEncoding)\x2C (child) => {\x0d\n        const childPath = Buffer.concat([pathBuf\x2C separator\x2C child]);\x0d\n\x0d\n        rimrafSync(childPath\x2C options);\x0d\n      });\x0d\n\x0d\n      const tries = options.maxRetries + 1;\x0d\n\x0d\n      for (let i = 1; i <= tries; i++) {\x0d\n        try {\x0d\n          return fs.rmdirSync(path);\x0d\n        } catch (err) {\x0d\n          // Only sleep if this is not the last try\x2C and the delay is greater\x0d\n          // than zero\x2C and an error was encountered that warrants a retry.\x0d\n          if (retryErrorCodes.has(err.code) &&\x0d\n              i < tries &&\x0d\n              options.retryDelay > 0) {\x0d\n            sleep(i * options.retryDelay);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction fixWinEPERMSync(path\x2C options\x2C originalErr) {\x0d\n  try {\x0d\n    chmodSync(path\x2C 0o666);\x0d\n  } catch (err) {\x0d\n    if (err.code === 'ENOENT')\x0d\n      return;\x0d\n\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  let stats;\x0d\n\x0d\n  try {\x0d\n    stats = statSync(path\x2C { throwIfNoEntry: false });\x0d\n  } catch {\x0d\n    throw originalErr;\x0d\n  }\x0d\n\x0d\n  if (stats === undefined) return;\x0d\n\x0d\n  if (stats.isDirectory())\x0d\n    _rmdirSync(path\x2C options\x2C originalErr);\x0d\n  else\x0d\n    _unlinkSync(path\x2C options);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = { rimraf\x2C rimrafPromises\x2C rimrafSync };\x0d\n
code-source-info,0x28fbd62bd16,119,0,7392,C0O0C4O7392,,
code-creation,Function,10,2276350,0x28fbd62c316,409, node:internal/fs/rimraf:1:1,0x28fbd62bc90,~
code-source-info,0x28fbd62c316,119,0,7392,C0O0C139O377C145O403C151O415C156O464C159O464C164O453C170O495C173O495C177O495C179O671C182O522C188O532C194O546C200O556C206O570C212O582C218O598C224O608C230O622C236O631C242O644C248O655C254O692C257O692C262O684C267O733C270O733C275O718C281O771C284O771C289O761C295O825C302O825C307O825C309O897C316O897C321O897C323O994C330O1003C333O986C335O1038C345O1038C347O1098C357O1098C359O1165C361O1165C363O1194C366O1201C371O1201C376O1194C378O7334C385O7353C391O7361C397O7377C403O7349C408O7391,,
tick,0x7ff86e9f4383,2276565,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd628b8b,0x23629344c63,0x236293448e5,0x28fbd624eaa,0x23629344c63,0x236293448e5,0x28fbd624792,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff7c4650fbe,2277216,0,0x0,3,0x7ff7c459f520,0x28fbd62c489,0x23629344c63,0x236293448e5,0x28fbd628b8b,0x23629344c63,0x236293448e5,0x28fbd624eaa,0x23629344c63,0x236293448e5,0x28fbd624792,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,LazyCompile,10,2277373,0x28fbd62d1ae,188,from node:buffer:295:28,0x27f8fee59e0,~
script-source,18,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  propertyFilter: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x0d\n} = require('internal/util/inspect');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x0d\n  }\x2C\x0d\n  hideStackFrames\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateNumber\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x0d\n} = require('internal/buffer');\x0d\n\x0d\nconst {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n} = require('internal/blob');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nconst encodingsMap = ObjectCreate(null);\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C '>= 0'\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  if (sourceStart > source.length) {\x0d\n    throw new ERR_OUT_OF_RANGE('sourceStart'\x2C\x0d\n                               `<= ${source.length}`\x2C\x0d\n                               sourceStart);\x0d\n  }\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x0d\n  );\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n// The 'assertSize' method will remove itself from the callstack when an error\x0d\n// occurs. This is done simply to keep the internal details of the\x0d\n// implementation from bleeding out to users.\x0d\nconst assertSize = hideStackFrames((size) => {\x0d\n  validateNumber(size\x2C 'size');\x0d\n  if (!(size >= 0 && size <= kMaxLength)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('size'\x2C size);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  assertSize(size);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  assertSize(size);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  assertSize(size);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(length) {\x0d\n  assertSize(length);\x0d\n  return createUnsafeBuffer(length);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n    encoding = undefined;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x0d\n  }\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  const mustMatch = (arguments.length > 2 && arguments[2] === true);\x0d\n  if (!mustMatch && len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (!encoding)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    return (mustMatch ? -1 : byteLengthUtf8(string));\x0d\n  return ops.byteLength(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n\x0d\n  if (this.byteLength !== otherBuffer.byteLength)\x0d\n    return false;\x0d\n\x0d\n  return this.byteLength === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(StringPrototypeReplace(\x0d\n    this.hexSlice(0\x2C actualMax)\x2C /(.{2})/g\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = ObjectCreate(null);\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error(`Unable to transcode Buffer [${code}]`);\x0d\n    err.code = code;\x0d\n    err.errno = result;\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\nconst kBase64Digits =\x0d\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (!kBase64Digits.includes(input[n]))\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Blob\x2C\x0d\n  resolveObjectURL\x2C\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) { INSPECT_MAX_BYTES = val; }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x28fbd62d1ae,18,8700,9683,C3O8739C9O8775C12O8782C17O8818C18O8824C28O8880C33O8884C39O8916C51O8923C56O8972C57O9002C63O9019C68O9019C73O9035C78O9075C95O9168C104O9175C109O9215C110O9240C113O9240C118O9264C120O9278C122O9287C123O9295C125O9312C127O9311C134O9374C136O9380C138O9379C145O9398C151O9417C155O9463C158O9470C163O9510C164O9537C182O9543C187O9537,,
tick,0x7ff7c47699e2,2284204,0,0x0,3,0x7ff7c459f520,0x28fbd62c489,0x23629344c63,0x236293448e5,0x28fbd628b8b,0x23629344c63,0x236293448e5,0x28fbd624eaa,0x23629344c63,0x236293448e5,0x28fbd624792,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff86e9f4383,2284291,0,0x0,3,0x7ff7c459f520,0x28fbd62c489,0x23629344c63,0x236293448e5,0x28fbd628b8b,0x23629344c63,0x236293448e5,0x28fbd624eaa,0x23629344c63,0x236293448e5,0x28fbd624792,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff7c3f6f9ad,2284365,0,0x0,3,0x7ff7c459f520,0x28fbd62c489,0x23629344c63,0x236293448e5,0x28fbd628b8b,0x23629344c63,0x236293448e5,0x28fbd624eaa,0x23629344c63,0x236293448e5,0x28fbd624792,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,LazyCompile,10,2284447,0x28fbd62fb86,110,fromString node:buffer:431:20,0x27f8fee5dc8,~
code-source-info,0x28fbd62fb86,18,12887,13336,C0O12915C2O12923C8O12968C14O12975C19O13000C25O13007C30O13021C35O13028C40O13045C41O13051C46O13069C51O13080C56O13119C59O13125C64O13156C66O13186C73O13192C78O13186C79O13244C85O13251C90O13265C95O13272C100O13289C101O13298C104O13305C109O13333,,
code-creation,LazyCompile,10,2284772,0x28fbd62fd3e,177,fromStringFast node:buffer:412:24,0x27f8fee5d28,~
code-source-info,0x28fbd62fd3e,18,12324,12864,C0O12362C5O12362C11O12387C14O12409C18O12418C21O12398C26O12431C31O12467C36O12438C41O12480C42O12486C44O12500C49O12511C51O12509C54O12497C59O12529C62O12529C65O12554C72O12569C77O12580C85O12554C91O12623C110O12623C116O12655C118O12666C123O12752C130O12771C135O12782C143O12756C149O12811C156O12825C162O12822C168O12836C171O12836C174O12852C176O12861,,
tick,0x7ff7c4656fe7,2285092,0,0x0,2,0x7ff7c459f520,0x28fbd62fd93,0x28fbd62fbee,0x28fbd62d1ba,0x28fbd62c489,0x23629344c63,0x236293448e5,0x28fbd628b8b,0x23629344c63,0x236293448e5,0x28fbd624eaa,0x23629344c63,0x236293448e5,0x28fbd624792,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,LazyCompile,10,2285196,0x28fbd62ff2e,36,FastBuffer node:internal/buffer:958:14,0x27f8fef2d30,~
code-source-info,0x28fbd62ff2e,19,27321,27412,C3O27365C7O27399C20O27365C35O27411,,
code-creation,LazyCompile,10,2285338,0x28fbd63002e,23,write node:buffer:592:12,0x27f8fee6138,~
code-source-info,0x28fbd63002e,18,17116,17180,C0O17150C17O17150C22O17180,,
code-creation,LazyCompile,10,2285493,0x28fbd63011e,42,alignPool node:buffer:158:19,0x27f8fee5760,~
code-source-info,0x28fbd63011e,18,4155,4265,C0O4191C4O4206C9O4220C19O4231C25O4244C34O4254C41O4264,,
code-creation,LazyCompile,10,2285921,0x28fbd6304de,251,promisify node:internal/util:324:19,0x17b632ab240,~
code-source-info,0x28fbd6304de,12,9168,10721,C0O9168C17O9232C25O9273C33O9297C38O9276C55O9335C68O9335C73O9380C80O9393C82O9392C87O9438C94O9447C96O9446C100O9481C110O9481C115O9535C126O9567C136O9609C143O9542C148O9676C149O9844C156O9853C158O9852C161O9844C163O10429C174O10454C180O10454C185O10429C190O10492C201O10517C211O10557C218O10492C223O10626C234O10671C240O10671C245O10633C250O10718,,
code-creation,LazyCompile,10,2286574,0x28fbd63096e,65,EventEmitterMixin node:internal/event_target:827:27,0x1145bfb7f38,~
script-source,38,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x0d\n} = require('internal/errors');\x0d\nconst { validateObject\x2C validateString } = require('internal/validators');\x0d\n\x0d\nconst { customInspectSymbol } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('khandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\n// TODO(joyeecheung): V8 snapshot does not support instance member\x0d\n// initializers for now:\x0d\n// https://bugs.chromium.org/p/v8/issues/detail?id=10704\x0d\nconst kType = Symbol('type');\x0d\nconst kDefaultPrevented = Symbol('defaultPrevented');\x0d\nconst kCancelable = Symbol('cancelable');\x0d\nconst kTimestamp = Symbol('timestamp');\x0d\nconst kBubbles = Symbol('bubbles');\x0d\nconst kComposed = Symbol('composed');\x0d\nconst kPropagationStopped = Symbol('propagationStopped');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  constructor(type\x2C options = null) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options'\x2C {\x0d\n      allowArray: true\x2C allowFunction: true\x2C nullable: true\x2C\x0d\n    });\x0d\n    const { cancelable\x2C bubbles\x2C composed } = { ...options };\x0d\n    this[kCancelable] = !!cancelable;\x0d\n    this[kBubbles] = !!bubbles;\x0d\n    this[kComposed] = !!composed;\x0d\n    this[kType] = `${type}`;\x0d\n    this[kDefaultPrevented] = false;\x0d\n    this[kTimestamp] = now();\x0d\n    this[kPropagationStopped] = false;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    // isTrusted is special (LegacyUnforgeable)\x0d\n    ObjectDefineProperty(this\x2C 'isTrusted'\x2C {\x0d\n      get: isTrusted\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x0d\n    });\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this[kDefaultPrevented]\x2C\x0d\n      cancelable: this[kCancelable]\x2C\x0d\n      timeStamp: this[kTimestamp]\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kDefaultPrevented] = true;\x0d\n  }\x0d\n\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable];\x0d\n  }\x0d\n\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kCancelable] && this[kDefaultPrevented];\x0d\n  }\x0d\n\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTimestamp];\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.defaultPrevented;\x0d\n  }\x0d\n\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kBubbles];\x0d\n  }\x0d\n\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kComposed];\x0d\n  }\x0d\n\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kPropagationStopped];\x0d\n  }\x0d\n\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.stopPropagation();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kPropagationStopped] = true;\x0d\n  }\x0d\n\x0d\n  static NONE = 0;\x0d\n  static CAPTURING_PHASE = 1;\x0d\n  static AT_TARGET = 2;\x0d\n  static BUBBLING_PHASE = 3;\x0d\n}\x0d\n\x0d\nconst kEnumerableProperty = ObjectCreate(null);\x0d\nkEnumerableProperty.enumerable = true;\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n  });\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    (listener) => listener.remove()\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n    // TODO(benjamingr) these 4 can be 'flags' to save 3 slots\x0d\n    this.once = once;\x0d\n    this.capture = capture;\x0d\n    this.passive = passive;\x0d\n    this.isNodeStyleListener = isNodeStyleListener;\x0d\n    this.removed = false;\x0d\n    this.weak = Boolean(weak); // Don't retain the object\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C this\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = FunctionPrototypeBind(listener.handleEvent\x2C listener);\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  addEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the shouldAddListeners check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    if (!shouldAddListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = String(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { once: true\x2C [kWeakHandler]: this });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak);\x0d\n      this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak);\x0d\n    root.size++;\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive);\x0d\n  }\x0d\n\x0d\n  removeEventListener(type\x2C listener\x2C options = {}) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (!shouldAddListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = String(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    while (handler !== undefined &&\x0d\n           (handler.passive || event?.[kStop] !== true)) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction shouldAddListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return {};\x0d\n  validateObject(options\x2C 'options'\x2C {\x0d\n    allowArray: true\x2C allowFunction: true\x2C\x0d\n  });\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  ObjectDefineProperty(emitter\x2C `on${name}`\x2C {\x0d\n    get() {\x0d\n      return this[kHandlers]?.get(name)?.handler;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (!this[kHandlers]) {\x0d\n        this[kHandlers] = new SafeMap();\x0d\n      }\x0d\n      let wrappedHandler = this[kHandlers]?.get(name);\x0d\n      if (wrappedHandler) {\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size--;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kRemoveListener](size\x2C name\x2C wrappedHandler.handler\x2C false);\x0d\n        }\x0d\n        wrappedHandler.handler = value;\x0d\n        if (typeof wrappedHandler.handler === 'function') {\x0d\n          this[kEvents].get(name).size++;\x0d\n          const size = this[kEvents].get(name).size;\x0d\n          this[kNewListener](size\x2C name\x2C value\x2C false\x2C false\x2C false);\x0d\n        }\x0d\n      } else {\x0d\n        wrappedHandler = makeEventHandler(value);\x0d\n        this.addEventListener(name\x2C wrappedHandler);\x0d\n      }\x0d\n      this[kHandlers].set(name\x2C wrappedHandler);\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x28fbd63096e,38,24249,24683,C0O24302C23O24493C30O24525C33O24538C38O24493C43O24553C47O24587C52O24628C57O24587C62O24655C64O24680,,
tick,0x7ff7c4543450,2290972,0,0x0,3,0x7ff7c459f520,0x28fbd628d87,0x23629344c63,0x236293448e5,0x28fbd624eaa,0x23629344c63,0x236293448e5,0x28fbd624792,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff86e9f404f,2291059,0,0x0,3,0x7ff7c459f520,0x28fbd628d87,0x23629344c63,0x236293448e5,0x28fbd624eaa,0x23629344c63,0x236293448e5,0x28fbd624792,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff7c464c1d5,2291130,0,0x0,0,0x7ff7c494e0a0,0x28fbd630994,0x28fbd628d87,0x23629344c63,0x236293448e5,0x28fbd624eaa,0x23629344c63,0x236293448e5,0x28fbd624792,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Eval,10,2292925,0x28fbd63336e,5, node:internal/modules/esm/translators:1:1,0x28fbd632eb8,~
script-source,120,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseReject\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet _TYPES = null;\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) return _TYPES;\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  hasEsmSyntax\x2C\x0d\n  loadNativeModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/cjs/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst internalURLModule = require('internal/url');\x0d\nconst createDynamicModule = require(\x0d\n  'internal/modules/esm/create_dynamic_module');\x0d\nconst { fileURLToPath\x2C URL } = require('url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst experimentalImportMetaResolve =\x0d\n    getOptionValue('--experimental-import-meta-resolve');\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { TextDecoder } = require('internal/encoding');\x0d\n\x0d\nlet cjsParse;\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    await init();\x0d\n    cjsParse = parse;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') return body;\x0d\n  assertBufferSource(body\x2C false\x2C 'transformSource');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\nasync function importModuleDynamically(specifier\x2C { url }) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url);\x0d\n}\x0d\n\x0d\nfunction createImportMetaResolve(defaultParentUrl) {\x0d\n  return async function resolve(specifier\x2C parentUrl = defaultParentUrl) {\x0d\n    return PromisePrototypeThen(\x0d\n      asyncESM.esmLoader.resolve(specifier\x2C parentUrl)\x2C\x0d\n      ({ url }) => url\x2C\x0d\n      (error) => (\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT' ?\x0d\n          error.url : PromiseReject(error))\x0d\n    );\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction initializeImportMeta(meta\x2C { url }) {\x0d\n  // Alphabetical\x0d\n  if (experimentalImportMetaResolve)\x0d\n    meta.resolve = createImportMetaResolve(url);\x0d\n  meta.url = url;\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  maybeCacheSourceMap(url\x2C source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  moduleWrap.callbackMap.set(module\x2C {\x0d\n    initializeImportMeta\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] Useful only if `content` is unknown.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      hasEsmSyntax(content || readFileSync(filename\x2C 'utf-8'))) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n// Strategy for loading a node-style CommonJS module\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst winSepRegEx = /\\//g;\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  let filename = internalURLModule.fileURLToPath(new URL(url));\x0d\n  if (isWindows)\x0d\n    filename = StringPrototypeReplace(filename\x2C winSepRegEx\x2C '\\\\');\x0d\n\x0d\n  if (!cjsParse) await initCJSParse();\x0d\n  const { module\x2C exportNames } = cjsPreparseModuleExports(filename);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    let exports;\x0d\n    if (asyncESM.esmLoader.cjsCache.has(module)) {\x0d\n      exports = asyncESM.esmLoader.cjsCache.get(module);\x0d\n      asyncESM.esmLoader.cjsCache.delete(module);\x0d\n    } else {\x0d\n      try {\x0d\n        exports = CJSModule._load(filename\x2C undefined\x2C isMain);\x0d\n      } catch (err) {\x0d\n        enrichCJSError(err\x2C undefined\x2C filename);\x0d\n        throw err;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default')\x0d\n        continue;\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {}\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n});\x0d\n\x0d\nfunction cjsPreparseModuleExports(filename) {\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached)\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let source;\x0d\n  try {\x0d\n    source = readFileSync(filename\x2C 'utf8');\x0d\n  } catch {}\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames\x2C loaded });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n  }\x0d\n  ArrayPrototypeForEach(reexports\x2C (reexport) => {\x0d\n    let resolved;\x0d\n    try {\x0d\n      resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n    } catch {\x0d\n      return;\x0d\n    }\x0d\n    const ext = extname(resolved);\x0d\n    if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n        isAbsolute(resolved)) {\x0d\n      const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved);\x0d\n      for (const name of reexportNames)\x0d\n        exportNames.add(name);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C async function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadNativeModule(id\x2C url);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\ntranslators.set('json'\x2C async function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (pathname) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplace(pathname\x2C winSepRegEx\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (pathname) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (pathname) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing Web Assembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports))\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x28fbd63336e,120,0,11592,C0O0C4O11592,,
tick,0x7ff7c4543450,2295087,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd6247a0,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff7c489c0fb,2295311,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd6247a0,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Function,10,2295395,0x28fbd633c0e,773, node:internal/modules/esm/translators:1:1,0x28fbd6332e8,~
code-source-info,0x28fbd633c0e
code-creation,Eval,10,2296588,0x28fbd635226,5, node:internal/modules/esm/create_dynamic_module:1:1,0x28fbd635050,~
script-source,121,node:internal/modules/esm/create_dynamic_module,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectCreate\x2C\x0d\n  SafeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nfunction createImport(impt\x2C index) {\x0d\n  const imptPath = JSONStringify(impt);\x0d\n  return `import * as $import_${index} from ${imptPath};\x0d\nimport.meta.imports[${imptPath}] = $import_${index};`;\x0d\n}\x0d\n\x0d\nfunction createExport(expt) {\x0d\n  const name = `${expt}`;\x0d\n  return `let $${name};\x0d\nexport { $${name} as ${name} };\x0d\nimport.meta.exports.${name} = {\x0d\n  get: () => $${name}\x2C\x0d\n  set: (v) => $${name} = v\x2C\x0d\n};`;\x0d\n}\x0d\n\x0d\nconst createDynamicModule = (imports\x2C exports\x2C url = ''\x2C evaluate) => {\x0d\n  debug('creating ESM facade for %s with exports: %j'\x2C url\x2C exports);\x0d\n  const source = `\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(imports\x2C createImport)\x2C '\\n')}\x0d\n${ArrayPrototypeJoin(ArrayPrototypeMap(exports\x2C createExport)\x2C '\\n')}\x0d\nimport.meta.done();\x0d\n`;\x0d\n  const { ModuleWrap\x2C callbackMap } = internalBinding('module_wrap');\x0d\n  const m = new ModuleWrap(`${url}`\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n\x0d\n  const readyfns = new SafeSet();\x0d\n  const reflect = {\x0d\n    exports: ObjectCreate(null)\x2C\x0d\n    onReady: (cb) => { readyfns.add(cb); }\x2C\x0d\n  };\x0d\n\x0d\n  if (imports.length)\x0d\n    reflect.imports = ObjectCreate(null);\x0d\n\x0d\n  callbackMap.set(m\x2C {\x0d\n    initializeImportMeta: (meta\x2C wrap) => {\x0d\n      meta.exports = reflect.exports;\x0d\n      if (reflect.imports)\x0d\n        meta.imports = reflect.imports;\x0d\n      meta.done = () => {\x0d\n        evaluate(reflect);\x0d\n        reflect.onReady = (cb) => cb(reflect);\x0d\n        for (const fn of readyfns) {\x0d\n          readyfns.delete(fn);\x0d\n          fn(reflect);\x0d\n        }\x0d\n      };\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    module: m\x2C\x0d\n    reflect\x2C\x0d\n  };\x0d\n};\x0d\n\x0d\nmodule.exports = createDynamicModule;\x0d\n
code-source-info,0x28fbd635226,121,0,1828,C0O0C4O1828,,
code-creation,Function,10,2297015,0x28fbd63544e,111, node:internal/modules/esm/create_dynamic_module:1:1,0x28fbd6351a0,~
code-source-info,0x28fbd63544e,121,0,1828,C0O0C39O28C45O51C51O73C57O91C63O108C69O150C72O150C77O183C90O184C96O150C98O672C103O1789C105O1804C110O1827,,
tick,0x7ff86ea7faf4,2297458,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd633db2,0x23629344c63,0x236293448e5,0x28fbd6247a0,0x23629344c63,0x236293448e5,0x28fbd61a124,0x23629344c63,0x236293448e5,0x28fbd61886c,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,Eval,10,2299213,0x28fbd636356,5, node:internal/vm/module:1:1,0x28fbd635e10,~
script-source,122,node:internal/vm/module,'use strict';\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseAll\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { isContext } = internalBinding('contextify');\x0d\nconst {\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_VM_MODULE_ALREADY_LINKED\x2C\x0d\n  ERR_VM_MODULE_DIFFERENT_CONTEXT\x2C\x0d\n  ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA\x2C\x0d\n  ERR_VM_MODULE_LINKING_ERRORED\x2C\x0d\n  ERR_VM_MODULE_NOT_MODULE\x2C\x0d\n  ERR_VM_MODULE_STATUS\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst binding = internalBinding('module_wrap');\x0d\nconst {\x0d\n  ModuleWrap\x2C\x0d\n  kUninstantiated\x2C\x0d\n  kInstantiating\x2C\x0d\n  kInstantiated\x2C\x0d\n  kEvaluating\x2C\x0d\n  kEvaluated\x2C\x0d\n  kErrored\x2C\x0d\n} = binding;\x0d\n\x0d\nconst STATUS_MAP = {\x0d\n  [kUninstantiated]: 'unlinked'\x2C\x0d\n  [kInstantiating]: 'linking'\x2C\x0d\n  [kInstantiated]: 'linked'\x2C\x0d\n  [kEvaluating]: 'evaluating'\x2C\x0d\n  [kEvaluated]: 'evaluated'\x2C\x0d\n  [kErrored]: 'errored'\x2C\x0d\n};\x0d\n\x0d\nlet globalModuleId = 0;\x0d\nconst defaultModuleName = 'vm:module';\x0d\nconst wrapToModuleMap = new SafeWeakMap();\x0d\n\x0d\nconst kWrap = Symbol('kWrap');\x0d\nconst kContext = Symbol('kContext');\x0d\nconst kPerContextModuleId = Symbol('kPerContextModuleId');\x0d\nconst kLink = Symbol('kLink');\x0d\n\x0d\nclass Module {\x0d\n  constructor(options) {\x0d\n    emitExperimentalWarning('VM Modules');\x0d\n\x0d\n    if (new.target === Module) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new TypeError('Module is not a constructor');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      context\x2C\x0d\n      sourceText\x2C\x0d\n      syntheticExportNames\x2C\x0d\n      syntheticEvaluationSteps\x2C\x0d\n    } = options;\x0d\n\x0d\n    if (context !== undefined) {\x0d\n      validateObject(context\x2C 'context');\x0d\n      if (!isContext(context)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('options.context'\x2C 'vm.Context'\x2C\x0d\n                                       context);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let { identifier } = options;\x0d\n    if (identifier !== undefined) {\x0d\n      validateString(identifier\x2C 'options.identifier');\x0d\n    } else if (context === undefined) {\x0d\n      identifier = `${defaultModuleName}(${globalModuleId++})`;\x0d\n    } else if (context[kPerContextModuleId] !== undefined) {\x0d\n      const curId = context[kPerContextModuleId];\x0d\n      identifier = `${defaultModuleName}(${curId})`;\x0d\n      context[kPerContextModuleId] += 1;\x0d\n    } else {\x0d\n      identifier = `${defaultModuleName}(0)`;\x0d\n      ObjectDefineProperty(context\x2C kPerContextModuleId\x2C {\x0d\n        value: 1\x2C\x0d\n        writable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (sourceText !== undefined) {\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C sourceText\x2C\x0d\n                                   options.lineOffset\x2C options.columnOffset\x2C\x0d\n                                   options.cachedData);\x0d\n\x0d\n      binding.callbackMap.set(this[kWrap]\x2C {\x0d\n        initializeImportMeta: options.initializeImportMeta\x2C\x0d\n        importModuleDynamically: options.importModuleDynamically ?\x0d\n          importModuleDynamicallyWrap(options.importModuleDynamically) :\x0d\n          undefined\x2C\x0d\n      });\x0d\n    } else {\x0d\n      assert(syntheticEvaluationSteps);\x0d\n      this[kWrap] = new ModuleWrap(identifier\x2C context\x2C\x0d\n                                   syntheticExportNames\x2C\x0d\n                                   syntheticEvaluationSteps);\x0d\n    }\x0d\n\x0d\n    wrapToModuleMap.set(this[kWrap]\x2C this);\x0d\n\x0d\n    this[kContext] = context;\x0d\n  }\x0d\n\x0d\n  get identifier() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kWrap].url;\x0d\n  }\x0d\n\x0d\n  get context() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return this[kContext];\x0d\n  }\x0d\n\x0d\n  get namespace() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must not be unlinked or linking');\x0d\n    }\x0d\n    return this[kWrap].getNamespace();\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    return STATUS_MAP[this[kWrap].getStatus()];\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kWrap].getStatus() !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be errored');\x0d\n    }\x0d\n    return this[kWrap].getError();\x0d\n  }\x0d\n\x0d\n  async link(linker) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateFunction(linker\x2C 'linker');\x0d\n    if (this.status === 'linked') {\x0d\n      throw new ERR_VM_MODULE_ALREADY_LINKED();\x0d\n    }\x0d\n    if (this.status !== 'unlinked') {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be unlinked');\x0d\n    }\x0d\n    await this[kLink](linker);\x0d\n    this[kWrap].instantiate();\x0d\n  }\x0d\n\x0d\n  async evaluate(options = {}) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    let timeout = options.timeout;\x0d\n    if (timeout === undefined) {\x0d\n      timeout = -1;\x0d\n    } else {\x0d\n      validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n    }\x0d\n    const { breakOnSigint = false } = options;\x0d\n    validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n    const status = this[kWrap].getStatus();\x0d\n    if (status !== kInstantiated &&\x0d\n        status !== kEvaluated &&\x0d\n        status !== kErrored) {\x0d\n      throw new ERR_VM_MODULE_STATUS(\x0d\n        'must be one of linked\x2C evaluated\x2C or errored'\x0d\n      );\x0d\n    }\x0d\n    await this[kWrap].evaluate(timeout\x2C breakOnSigint);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || Module;\x0d\n    const o = ObjectCreate({ constructor });\x0d\n    o.status = this.status;\x0d\n    o.identifier = this.identifier;\x0d\n    o.context = this.context;\x0d\n\x0d\n    ObjectSetPrototypeOf(o\x2C ObjectGetPrototypeOf(this));\x0d\n    ObjectDefineProperty(o\x2C SymbolToStringTag\x2C {\x0d\n      value: constructor.name\x2C\x0d\n      configurable: true\x0d\n    });\x0d\n\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return inspect(o\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kDependencySpecifiers = Symbol('kDependencySpecifiers');\x0d\nconst kNoError = Symbol('kNoError');\x0d\n\x0d\nclass SourceTextModule extends Module {\x0d\n  #error = kNoError;\x0d\n  #statusOverride;\x0d\n\x0d\n  constructor(sourceText\x2C options = {}) {\x0d\n    validateString(sourceText\x2C 'sourceText');\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const {\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      cachedData\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n\x0d\n    if (initializeImportMeta !== undefined &&\x0d\n        typeof initializeImportMeta !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.initializeImportMeta'\x2C 'function'\x2C initializeImportMeta);\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined &&\x0d\n        typeof importModuleDynamically !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.importModuleDynamically'\x2C 'function'\x2C\x0d\n        importModuleDynamically);\x0d\n    }\x0d\n\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n\x0d\n    super({\x0d\n      sourceText\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n      lineOffset\x2C\x0d\n      columnOffset\x2C\x0d\n      cachedData\x2C\x0d\n      initializeImportMeta\x2C\x0d\n      importModuleDynamically\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = async (linker) => {\x0d\n      this.#statusOverride = 'linking';\x0d\n\x0d\n      const promises = this[kWrap].link(async (identifier\x2C assert) => {\x0d\n        const module = await linker(identifier\x2C this\x2C { assert });\x0d\n        if (module[kWrap] === undefined) {\x0d\n          throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n        }\x0d\n        if (module.context !== this.context) {\x0d\n          throw new ERR_VM_MODULE_DIFFERENT_CONTEXT();\x0d\n        }\x0d\n        if (module.status === 'errored') {\x0d\n          // TODO(devsnek): replace with ERR_VM_MODULE_LINK_FAILURE\x0d\n          // and error cause proposal.\x0d\n          throw new ERR_VM_MODULE_LINKING_ERRORED();\x0d\n        }\x0d\n        if (module.status === 'unlinked') {\x0d\n          await module[kLink](linker);\x0d\n        }\x0d\n        return module[kWrap];\x0d\n      });\x0d\n\x0d\n      try {\x0d\n        if (promises !== undefined) {\x0d\n          await PromiseAll(promises);\x0d\n        }\x0d\n      } catch (e) {\x0d\n        this.#error = e;\x0d\n        throw e;\x0d\n      } finally {\x0d\n        this.#statusOverride = undefined;\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDependencySpecifiers] = undefined;\x0d\n  }\x0d\n\x0d\n  get dependencySpecifiers() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this[kDependencySpecifiers] === undefined) {\x0d\n      this[kDependencySpecifiers] = this[kWrap].getStaticDependencySpecifiers();\x0d\n    }\x0d\n    return this[kDependencySpecifiers];\x0d\n  }\x0d\n\x0d\n  get status() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return 'errored';\x0d\n    }\x0d\n    if (this.#statusOverride) {\x0d\n      return this.#statusOverride;\x0d\n    }\x0d\n    return super.status;\x0d\n  }\x0d\n\x0d\n  get error() {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (this.#error !== kNoError) {\x0d\n      return this.#error;\x0d\n    }\x0d\n    return super.error;\x0d\n  }\x0d\n\x0d\n  createCachedData() {\x0d\n    const { status } = this;\x0d\n    if (status === 'evaluating' ||\x0d\n        status === 'evaluated' ||\x0d\n        status === 'errored') {\x0d\n      throw new ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA();\x0d\n    }\x0d\n    return this[kWrap].createCachedData();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass SyntheticModule extends Module {\x0d\n  constructor(exportNames\x2C evaluateCallback\x2C options = {}) {\x0d\n    if (!ArrayIsArray(exportNames) ||\x0d\n      ArrayPrototypeSome(exportNames\x2C (e) => typeof e !== 'string')) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('exportNames'\x2C\x0d\n                                     'Array of unique strings'\x2C\x0d\n                                     exportNames);\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(exportNames\x2C (name\x2C i) => {\x0d\n        if (ArrayPrototypeIndexOf(exportNames\x2C name\x2C i + 1) !== -1) {\x0d\n          throw new ERR_INVALID_ARG_VALUE(`exportNames.${name}`\x2C\x0d\n                                          name\x2C\x0d\n                                          'is duplicated');\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n    validateFunction(evaluateCallback\x2C 'evaluateCallback');\x0d\n\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    const { context\x2C identifier } = options;\x0d\n\x0d\n    super({\x0d\n      syntheticExportNames: exportNames\x2C\x0d\n      syntheticEvaluationSteps: evaluateCallback\x2C\x0d\n      context\x2C\x0d\n      identifier\x2C\x0d\n    });\x0d\n\x0d\n    this[kLink] = () => this[kWrap].link(() => {\x0d\n      assert.fail('link callback should not be called');\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setExport(name\x2C value) {\x0d\n    if (this[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    validateString(name\x2C 'name');\x0d\n    if (this[kWrap].getStatus() < kInstantiated) {\x0d\n      throw new ERR_VM_MODULE_STATUS('must be linked');\x0d\n    }\x0d\n    this[kWrap].setExport(name\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction importModuleDynamicallyWrap(importModuleDynamically) {\x0d\n  const importModuleDynamicallyWrapper = async (...args) => {\x0d\n    const m = await ReflectApply(importModuleDynamically\x2C this\x2C args);\x0d\n    if (isModuleNamespaceObject(m)) {\x0d\n      return m;\x0d\n    }\x0d\n    if (!m || m[kWrap] === undefined) {\x0d\n      throw new ERR_VM_MODULE_NOT_MODULE();\x0d\n    }\x0d\n    if (m.status === 'errored') {\x0d\n      throw m.error;\x0d\n    }\x0d\n    return m.namespace;\x0d\n  };\x0d\n  return importModuleDynamicallyWrapper;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Module\x2C\x0d\n  SourceTextModule\x2C\x0d\n  SyntheticModule\x2C\x0d\n  importModuleDynamicallyWrap\x2C\x0d\n  getModuleFromWrap: (wrap) => wrapToModuleMap.get(wrap)\x2C\x0d\n};\x0d\n
code-source-info,0x28fbd636356,122,0,12768,C0O0C4O12768,,
code-creation,Function,10,2302848,0x28fbd6375b6,872, node:internal/vm/module:1:1,0x28fbd6362d0,~
code-source-info,0x28fbd6375b
code-creation,Function,10,2303430,0x28fbd637af6,30,<instance_members_initializer> node:internal/vm/module:256:3,0x28fbd636940,~
code-source-info,0x28fbd637af6,122,7051,7088,C3O7060C29O7088,,
tick,0x7ff7c475fbc6,2303612,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd61889f,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff7c3f6f9c8,2303669,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd61889f,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
tick,0x7ff86e9f437d,2303718,1,0x7ff7c402b3d0,3,0x7ff7c4970240,0x23629344b9b,0x236293448e5,0x28fbd61889f,0x23629344c63,0x236293448e5,0x28fbd6140e1,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,LazyCompile,10,2304219,0x28fbd638eee,16,ESMLoader node:internal/modules/esm/loader:52:1,0x28fbd6198b8,~
code-source-info,0x28fbd638eee,111,1443,1443,C0O1443C15O1443,,
code-creation,LazyCompile,10,2304439,0x28fbd639e86,27,ModuleMap node:internal/modules/esm/module_map:15:14,0x28fbd61b810,~
code-source-info,0x28fbd639e86,112,444,461,C3O450C7O456C11O450C26O460,,
code-creation,LazyCompile,10,2304642,0x28fbd63a0e6,13,desc.value node:internal/per_context/primordials:325:32,0x17b63289f38,~
code-source-info,0x28fbd63a0e6,6,9820,9881,C0O9838C7O9845C12O9868,,
code-creation,LazyCompile,10,2304778,0x28fbd63a1ee,13,SafeIterator node:internal/per_context/primordials:270:16,0x17b63289988,~
code-source-info,0x28fbd63a1ee,6,8054,8116,C0O8074C3O8091C7O8089C12O8115,,
code-creation,LazyCompile,10,2305006,0x28fbd63a326,13,next node:internal/per_context/primordials:273:9,0x17b63289a50,~
code-source-info,0x28fbd63a326,6,8126,8173,C0O8138C3O8155C8O8145C12O8166,,
tick,0x7ff7c49de38a,2305585,0,0x0,0,0x28fbd614189,0x23629344c63,0x236293448e5,0x28fbd60ff54,0xd484881e02,0x5bf4dfb615
code-creation,LazyCompile,10,2306000,0x28fbd63a99e,28,getEmbedderOptions node:internal/options:32:28,0x5bf4dff9f8,~
code-source-info,0x28fbd63a99e,93,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,LazyCompile,10,2306552,0x28fbd63ac46,315,Module._initPaths node:internal/modules/cjs/loader:1227:29,0x28fbd613118,~
code-source-info,0x28fbd63ac
tick,0x7ff7c483de5f,2307203,0,0x0,0,0x7ff7c496aa90,0x28fbd63ad0c,0x28fbd60ff72,0xd484881e02,0x5bf4dfb615
code-creation,Eval,10,2307500,0x28fbd63dade,5, node:internal/modules/run_main:1:1,0x28fbd63d8d8,~
script-source,123,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst CJSLoader = require('internal/modules/cjs/loader');\x0d\nconst { Module\x2C toRealPath\x2C readPackageScope } = CJSLoader;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\n\x0d\nfunction resolveMainPath(main) {\x0d\n  // Note extension resolution for the main entry point can be deprecated in a\x0d\n  // future major.\x0d\n  // Module._findPath is monkey-patchable here.\x0d\n  let mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  if (!mainPath)\x0d\n    return;\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain)\x0d\n    mainPath = toRealPath(mainPath);\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  const userLoader = getOptionValue('--experimental-loader');\x0d\n  if (userLoader)\x0d\n    return true;\x0d\n  const esModuleSpecifierResolution =\x0d\n    getOptionValue('--experimental-specifier-resolution');\x0d\n  if (esModuleSpecifierResolution === 'node')\x0d\n    return true;\x0d\n  // Determine the module format of the main\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs'))\x0d\n    return true;\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs'))\x0d\n    return false;\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  return pkg && pkg.data.type === 'module';\x0d\n}\x0d\n\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    const main = path.isAbsolute(mainPath) ?\x0d\n      pathToFileURL(mainPath).href :\x0d\n      mainPath;\x0d\n    return esmLoader.import(main);\x0d\n  }));\x0d\n}\x0d\n\x0d\nasync function handleMainPromise(promise) {\x0d\n  // Handle a Promise from running code that potentially does Top-Level Await.\x0d\n  // In that case\x2C it makes sense to set the exit code to a specific non-zero\x0d\n  // value if the main code never finishes running.\x0d\n  function handler() {\x0d\n    if (process.exitCode === undefined)\x0d\n      process.exitCode = 13;\x0d\n  }\x0d\n  process.on('exit'\x2C handler);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handler);\x0d\n  }\x0d\n}\x0d\n\x0d\n// For backwards compatibility\x2C we have to run a bunch of\x0d\n// monkey-patchable code that belongs to the CJS loader (exposed by\x0d\n// `require('module')`) even when the entry point is ESM.\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x28fbd63dade,123,0,2783,C0O0C4O2783,,
code-creation,Function,10,2308044,0x28fbd63ddd6,149, node:internal/modules/run_main:1:1,0x28fbd63da58,~
code-source-info,0x28fbd63ddd6,123,0,2783,C0O0C60O28C66O90C72O90C77O139C83O147C89O159C95O219C101O219C106O200C112O262C118O262C122O262C124O2711C131O2733C137O2759C143O2726C148O2782,,
code-creation,LazyCompile,10,2308483,0x28fbd63e3be,163,initializeESMLoader node:internal/bootstrap/pre_execution:431:29,0x5bf4dfdb28,~
code-source-info,0x28fbd63e3be,92,14133,15248,C0O14217C6O14217C13O14266C16O14262C21O14260C25O14286C30O14290C34O14310C40O14339C41O14346C42O14451C48O14451C53O14365C58O14406C63O14498C69O14498C74O14702C79O14660C83O14773C88O14734C92O14943C100O14947C106O15066C112O15066C117O15014C122O15022C127O15040C132O15113C138O15113C143O15133C145O15143C149O15158C151O15178C155O15203C157O15222C162O15247,,
code-creation,LazyCompile,10,2308671,0x28fbd63e5d6,5,get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32,0x28fbd612608,~
code-source-info,0x28fbd63e5d6,108,2379,2419,C0O2384C4O2417,,
code-creation,LazyCompile,10,2308769,0x28fbd63e6be,53,loadPreloadModules node:internal/bootstrap/pre_execution:474:28,0x5bf4dfdc18,~
code-source-info,0x28fbd63e6be,92,15740,16071,C0O15829C8O15829C13O15861C15O15898C21O15905C26O15986C32O15986C37O15986C42O15951C47O16031C52O16070,,
code-creation,LazyCompile,10,2308875,0x28fbd63e8ae,50,initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:466:36,0x5bf4dfdbc8,~
code-source-info,0x28fbd63e8ae,92,15481,15709,C0O15489C8O15493C14O15539C17O15547C28O15547C34O15661C40O15661C45O15698C49O15708,,
code-creation,LazyCompile,10,2309206,0x28fbd63e9d6,80,executeUserEntryPoint node:internal/modules/run_main:74:31,0x28fbd63dc78,~
code-source-info,0x28fbd63e9d6,123,2393,2707,C7O2409C14O2413C22O2444C25O2444C30O2491C33O2491C38O2528C40O2553C45O2564C50O2553C56O2668C61O2675C73O2675C79O2706,,
tick,0x7ff7c45447d0,2309312,0,0x0,2,0x7ff7c459f520,0x5bf4dfb639
code-creation,LazyCompile,10,2309393,0x28fbd63ee26,68,resolveMainPath node:internal/modules/run_main:11:25,0x28fbd63db10,~
code-source-info,0x28fbd63ee26,123,306,733,C0O482C5O489C12O499C15O504C20O504C30O489C36O535C38O555C39O562C40O597C48O597C53O644C55O676C60O687C65O714C67O730,,
code-creation,LazyCompile,10,2309913,0x28fbd63f076,436,Module._findPath node:internal/modules/cjs/loader:494:28,0x28fbd612928,~
code-source-info,0x28fbd63f076,108,14820,17506,C0O14874C5O14879C10O14879C16O14903C18O14931C26O14955C30O14975C36O14982C41O14996C42O15009C43O15037C45O15045C51O15056C57O15056C62O15054C66O15108C69O15115C76O15125C80O15140C82O15156C84O15169C85O15179C87O15216C93O15223C100O15235C103O15278C107O15285C111O15235C119O15299C121O15290C125O15322C127O15349C134O15385C137O15365C143O15458C145O15471C149O15463C154O15558C156O15563C160O15573C165O15588C172O15602C177O15607C179O15624C183O15679C186O15679C192O15720C194O15750C196O15773C197O15805C202O15810C207O15810C214O15846C216O15874C219O15874C224O15895C228O15924C229O15931C234O15959C238O15985C244O16022C249O16038C254O16038C262O16090C265O16101C272O16152C278O16775C283O16791C288O16791C296O16839C299O16850C304O16901C308O16974C312O17009C320O17034C325O17016C330O17057C342O17068C348O17130C354O17150C359O17237C363O17270C371O17295C376O17277C381O17316C396O17327C402O17386C406O17409C409O17416C416O17437C420O17456C422O17472C423O15480C428O15445C434O17490C435O17503,,
code-creation,LazyCompile,10,2310393,0x28fbd63f426,109,isAbsolute node:path:402:13,0x1145bfa97a8,~
code-source-info,0x28fbd63f426,35,13104,13523,C0O13118C8O13118C13O13170C18O13183C19O13191C24O13205C25O13218C26O13239C33O13239C39O13280C42O13287C50O13355C58O13369C66O13405C72O13405C80O13444C82O13440C92O13481C98O13481C104O13465C108O13518,,
code-creation,LazyCompile,10,2310934,0x28fbd63f69e,85,stat node:internal/modules/cjs/loader:151:14,0x28fbd611ec8,~
code-source-info,0x28fbd63f69e,108,4777,5186,C0O4793C5O4809C10O4809C17O4840C23O4886C28O4896C33O4896C39O4916C41O4942C43O4956C44O4980C49O4980C54O5013C61O5046C66O5128C71O5138C76O5138C82O5169C84O5183,,
tick,0x7ff7c3f15ec5,2311138,0,0x0,3,0x7ff7c459f520,0x28fbd63f151,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
code-creation,LazyCompile,10,2311314,0x28fbd63f8ae,232,toNamespacedPath node:path:618:19,0x1145bfa98d0,~
code-source-info,0x28fbd63f8ae,35,20087,21202,C0O20153C6O20190C12O20197C17O20211C19O20223C20O20252C25O20258C30O20258C36O20297C43O20304C48O20317C50O20329C51O20337C58O20341C66O20388C68O20384C73O20446C81O20450C89O20497C91O20493C96O20542C104O20542C110O20595C112O20608C114O20604C121O20639C123O20635C128O20739C133O20761C139O20761C148O20801C151O20834C156O20866C161O20866C167O20846C175O20920C181O20920C189O20967C191O20963C198O20988C204O20988C212O21035C214O21031C219O21138C224O21155C228O21170C229O21185C231O21197,,
code-creation,LazyCompile,10,2312125,0x28fbd63fb0e,42,toRealPath node:internal/modules/cjs/loader:393:20,0x28fbd612198,~
code-source-info,0x28fbd63fb0e,108,11684,11800,C0O11703C5O11713C10O11726C17O11747C20O11758C28O11777C35O11713C41O11797,,
tick,0x7ff7c4650fbe,2313333,0,0x0,3,0x7ff7c459f520,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
new,MemoryChunk,0x397aa9c0000,262144
code-creation,LazyCompile,10,2314381,0xd4848bf7b6,1036,realpathSync node:fs:2408:22,0x2e444569ce0,~
script-source,77,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// When using FSReqCallback\x2C make sure to create the object only *after* all\x0d\n// parameter validation has happened\x2C so that the objects are not kept in memory\x0d\n// in case they are created but never used due to an exception.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\n// We need to get the statValues from the binding at the callsite since\x0d\n// it's re-initialized after deserialization.\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_FEATURE_UNAVAILABLE_ON_PLATFORM\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x0d\n} = require('internal/fs/dir');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateCallback\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst watchers = require('internal/fs/watchers');\x0d\nconst ReadFileContext = require('internal/fs/read_file_context');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateCallback(cb);\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isUint32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void | never}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C internalUtil.promisify.custom\x2C {\x0d\n  value: (path) => {\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n  const ctx = { path };\x0d\n  const nPath = pathModule.toNamespacedPath(path);\x0d\n  binding.access(nPath\x2C F_OK\x2C undefined\x2C ctx);\x0d\n\x0d\n  // In case of an invalid symlink\x2C `binding.access()` on win32\x0d\n  // will **not** return an error and is therefore not enough.\x0d\n  // Double check with `binding.stat()`.\x0d\n  if (isWindows && ctx.errno === undefined) {\x0d\n    binding.stat(nPath\x2C false\x2C undefined\x2C ctx);\x0d\n  }\x0d\n\x0d\n  return ctx.errno === undefined;\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError());\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const ctx = {};\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C ctx);\x0d\n  if (ctx.errno !== undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw uvException(ctx);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.close(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n                              flagsNumber\x2C mode\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offset\x0d\n * @param {number} length\x0d\n * @param {number | bigint} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C options\x2C callback)\x0d\n    let options = {};\x0d\n    if (arguments.length < 3) {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      // buffer will be the callback\x0d\n      callback = buffer;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C {}\x2C callback)\x0d\n      // buffer will be the options object\x0d\n      // offset is the callback\x0d\n      options = buffer;\x0d\n      callback = offset;\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength\x2C\x0d\n      position\x0d\n    } = options);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint;\x0d\n *   }} [offset]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (arguments.length <= 3) {\x0d\n    // Assume fs.read(fd\x2C buffer\x2C options)\x0d\n    const options = offset || {};\x0d\n\x0d\n    ({ offset = 0\x2C length = buffer.byteLength\x2C position } = options);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  const ctx = {};\x0d\n  const result = binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.readBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | Object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    return binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = String(buffer);\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  return binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C internalUtil.customPromisifyArgs\x2C\x0d\n                     { value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string | Object} buffer\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offset\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C internalUtil.customPromisifyArgs\x2C {\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const result = binding.writeBuffers(fd\x2C buffers\x2C position\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const ctx = { path: oldPath\x2C dest: newPath };\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  const ctx = {};\x0d\n  binding.ftruncate(fd\x2C len\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          return binding.rmdir(path\x2C req);\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    return binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  return handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fdatasync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  binding.fsync(fd\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                               parseFileMode(mode\x2C 'mode')\x2C recursive\x2C\x0d\n                               undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Direct[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.readdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 options.encoding\x2C !!options.withFileTypes\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  fd = getValidatedFd(fd);\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = {};\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction hasNoEntryError(ctx) {\x0d\n  if (ctx.errno) {\x0d\n    const uvErr = uvErrmapGet(ctx.errno);\x0d\n    return uvErr?.[0] === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  if (ctx.error) {\x0d\n    return ctx.error.code === 'ENOENT';\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = { fd };\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                              options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const stats = binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                             options.bigint\x2C undefined\x2C ctx);\x0d\n  if (options.throwIfNoEntry === false && hasNoEntryError(ctx)) {\x0d\n    return undefined;\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const ctx = { path };\x0d\n  const result = binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                                  options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch { }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  const flags = stringToSymlinkType(type);\x0d\n\x0d\n  const ctx = { path: target\x2C dest: path };\x0d\n  binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                  pathModule.toNamespacedPath(path)\x2C flags\x2C undefined\x2C ctx);\x0d\n\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const ctx = { path: existingPath\x2C dest: newPath };\x0d\n  const result = binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                              pathModule.toNamespacedPath(newPath)\x2C\x0d\n                              undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  const ctx = {};\x0d\n  binding.fchmod(fd\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  const ctx = { path };\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const ctx = {};\x0d\n  binding.fchown(fd\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const ctx = { path };\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C toUnixTimestamp(mtime)\x2C\x0d\n                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  const ctx = {};\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError();\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (isUserFd) {\x0d\n        callback(null);\x0d\n      } else {\x0d\n        fs.close(fd\x2C callback);\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | Object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView | Object} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'w' });\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(String(data)\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n  if (options.recursive && !(isOSX || isWindows))\x0d\n    throw new ERR_FEATURE_UNAVAILABLE_ON_PLATFORM('watch recursively');\x0d\n  const watcher = new watchers.FSWatcher();\x0d\n  watcher[watchers.kFSWatchStart](filename\x2C\x0d\n                                  options.persistent\x2C\x0d\n                                  options.recursive\x2C\x0d\n                                  options.encoding);\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      options.signal.addEventListener('abort'\x2C listener);\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return RegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst emptyObj = ObjectCreate(null);\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options\x2C emptyObj);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const ctx = { path: base };\x0d\n    binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    knownHard[base] = true;\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base] || cache?.get(base) === base) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const ctx = { path: base };\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard[base] = true;\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks[id]) {\x0d\n          linkTarget = seenLinks[id];\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        const ctx = { path: base };\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined\x2C undefined\x2C ctx);\x0d\n        handleErrorFromBinding(ctx);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      if (cache) cache.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks[id] = linkTarget;\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      const ctx = { path: base };\x0d\n      binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C ctx);\x0d\n      handleErrorFromBinding(ctx);\x0d\n      knownHard[base] = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const ctx = { path };\x0d\n  const result = binding.realpath(path\x2C options.encoding\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = ObjectCreate(null);\x0d\n  const knownHard = ObjectCreate(null);\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard[base]) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard[base] = true;\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard[base]) {\x0d\n      if (isFileType(binding.statValues\x2C S_IFIFO) ||\x0d\n          isFileType(binding.statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard[base] = true;\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks[id]) {\x0d\n        return gotTarget(null\x2C seenLinks[id]);\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks[id] = target;\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard[base]) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard[base] = true;\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {});\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  return binding.realpath(path\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(`${prefix}XXXXXX`\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options\x2C {});\x0d\n\x0d\n  validateString(prefix\x2C 'prefix');\x0d\n  nullCheck(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  const path = `${prefix}XXXXXX`;\x0d\n  const ctx = { path };\x0d\n  const result = binding.mkdtemp(path\x2C options.encoding\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  const ctx = { path: src\x2C dest };  // non-prefixed\x0d\n\x0d\n  src = pathModule._makeLong(src);\x0d\n  dest = pathModule._makeLong(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C undefined\x2C ctx);\x0d\n  handleErrorFromBinding(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {Object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {Object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 kb.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: Object | null;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dir\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x0d\n};\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      if (promises === null)\x0d\n        promises = require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0xd4848bf7b
tick,0x7ff7c4f46f84,2340224,0,0x0,3,0x7ff7c459f520,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff7c3ef0bbc,2340269,0,0x0,3,0x7ff7c459f520,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff7c4ce9eb8,2340303,0,0x0,3,0x7ff7c459f520,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff7c3ef0bbf,2340333,0,0x0,3,0x7ff7c459f520,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff7c4f4fa13,2340364,0,0x0,3,0x7ff7c459f520,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff86e9f404f,2340395,0,0x0,3,0x7ff7c459f520,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff7c4f508fd,2340427,0,0x0,3,0x7ff7c459f520,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff7c3f6f81d,2340460,0,0x0,3,0x7ff7c459f520,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff86ea7faf4,2340493,0,0x0,3,0x7ff7c459f520,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff7c4f50952,2340527,0,0x0,3,0x7ff7c459f520,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff86ea7faf4,2340562,0,0x0,3,0x7ff7c459f520,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff86ea2e7c3,2340596,0,0x0,3,0x7ff7c459f520,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff7c44b81f1,2340627,0,0x0,3,0x7ff7c459f520,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
code-creation,LazyCompile,10,2340677,0x397aa9c7186,123,getOptions node:internal/fs/utils:314:20,0x2e444572438,~
script-source,78,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  uvException\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isDate\x2C\x0d\n  isBigUint64Array\x0d\n} = require('internal/util/types');\x0d\nconst { once } = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x0d\n    }\x0d\n  }\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type) {\x0d\n    this.name = name;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats) {\x0d\n    super(name\x2C null);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const stats = lazyLoadFs().lstatSync(join(path\x2C name));\x0d\n    return new DirentFromStats(name\x2C stats);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions) {\x0d\n  if (options === null || options === undefined ||\x0d\n      typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = uvException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Check if the path contains null types if it is a string nor Uint8Array\x2C\x0d\n// otherwise return silently.\x0d\nconst nullCheck = hideStackFrames((path\x2C propName\x2C throwError = true) => {\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const err = new ERR_INVALID_ARG_VALUE(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string or Uint8Array without null bytes'\x0d\n  );\x0d\n  if (throwError) {\x0d\n    throw err;\x0d\n  }\x0d\n  return err;\x0d\n});\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return StringPrototypeReplace(path\x2C /\\//g\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() to the timestamp.\x0d\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\nfunction dateFromMs(ms) {\x0d\n  return new Date(Number(ms) + 0.5);\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigUint64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigUint64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C\x0d\n                                 `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32(length\x2C 'length'\x2C 0);\x0d\n  }\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const err = nullCheck(path\x2C propName\x2C false);\x0d\n\x0d\n  if (err !== undefined) {\x0d\n    throw err;\x0d\n  }\x0d\n});\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return path;\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn && StringPrototypeEndsWith(template\x2C 'X')) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().stat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      return cb(new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      }));\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .statSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned = process.noDeprecation;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  if (NumberIsInteger(mode) && mode >= min && mode <= max) {\x0d\n    return mode;\x0d\n  }\x0d\n  if (typeof mode !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mode'\x2C 'integer'\x2C mode);\x0d\n  }\x0d\n  throw new ERR_OUT_OF_RANGE(\x0d\n    'mode'\x2C `an integer >= ${min} && <= ${max}`\x2C mode);\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer === 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    typeof buffer === 'object' &&\x0d\n    buffer !== null &&\x0d\n    typeof buffer.toString === 'function' &&\x0d\n    ObjectPrototypeHasOwnProperty(buffer\x2C 'toString')\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    name\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n    buffer\x0d\n  );\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger(position\x2C 'position');\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE('position'\x2C\x0d\n                                 `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                 position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('position'\x2C\x0d\n                                   ['integer'\x2C 'bigint']\x2C\x0d\n                                   position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  nullCheck\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x0d\n};\x0d\n
code-source-info,0x397aa9c7186,78,7531,8175,C0O7562C14O7656C16O7678C17O7689C23O7729C29O7774C31O7798C35O7814C42O7850C48O7890C66O7896C71O7890C72O7986C79O7995C84O8014C87O8037C92O8014C96O8065C102O8094C107O8122C115O8094C120O8157C122O8172,,
tick,0x7ff7c3f6f8f5,2346043,0,0x0,3,0x7ff7c459f520,0xd4848bf7c2,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff86e9f404f,2346089,0,0x0,3,0x7ff7c459f520,0xd4848bf7c2,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff86e9f404f,2346123,0,0x0,3,0x7ff7c459f520,0xd4848bf7c2,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
code-creation,LazyCompile,10,2346180,0x397aa9c90de,48,assertEncoding node:internal/fs/utils:151:24,0x2e444571e40,~
code-source-info,0x397aa9c90de,78,3677,3859,C0O3693C6O3710C9O3717C14O3717C21O3761C24O3789C40O3795C45O3789C47O3858,,
code-creation,LazyCompile,10,2346613,0x397aa9c91f6,20,toPathIfFileURL node:internal/url:1496:25,0x1145bf9c170,~
script-source,33,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  Int8Array\x2C\x0d\n  Number\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  toUSVString\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  domainToASCII: _domainToASCII\x2C\x0d\n  domainToUnicode: _domainToUnicode\x2C\x0d\n  encodeAuth\x2C\x0d\n  parse\x2C\x0d\n  setURLConstructor\x2C\x0d\n  URL_FLAGS_CANNOT_BE_BASE\x2C\x0d\n  URL_FLAGS_HAS_FRAGMENT\x2C\x0d\n  URL_FLAGS_HAS_HOST\x2C\x0d\n  URL_FLAGS_HAS_PASSWORD\x2C\x0d\n  URL_FLAGS_HAS_PATH\x2C\x0d\n  URL_FLAGS_HAS_QUERY\x2C\x0d\n  URL_FLAGS_HAS_USERNAME\x2C\x0d\n  URL_FLAGS_IS_DEFAULT_SCHEME_PORT\x2C\x0d\n  URL_FLAGS_SPECIAL\x2C\x0d\n  kFragment\x2C\x0d\n  kHost\x2C\x0d\n  kHostname\x2C\x0d\n  kPathStart\x2C\x0d\n  kPort\x2C\x0d\n  kQuery\x2C\x0d\n  kSchemeStart\x0d\n} = internalBinding('url');\x0d\n\x0d\nconst {\x0d\n  storeDataObject\x2C\x0d\n  revokeDataObject\x2C\x0d\n} = internalBinding('blob');\x0d\n\x0d\nconst context = Symbol('context');\x0d\nconst cannotBeBase = Symbol('cannot-be-base');\x0d\nconst cannotHaveUsernamePasswordPort =\x0d\n    Symbol('cannot-have-username-password-port');\x0d\nconst special = Symbol('special');\x0d\nconst searchParams = Symbol('query');\x0d\nconst kFormat = Symbol('format');\x0d\n\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object\x0d\nconst IteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf([][SymbolIterator]())\x0d\n);\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#concept-origin-opaque\x0d\nconst kOpaqueOrigin = 'null';\x0d\n\x0d\n// Refs: https://html.spec.whatwg.org/multipage/browsers.html#ascii-serialisation-of-an-origin\x0d\nfunction serializeTupleOrigin(scheme\x2C host\x2C port) {\x0d\n  return `${scheme}//${host}${port === null ? '' : `:${port}`}`;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  constructor() {\x0d\n    this.flags = 0;\x0d\n    this.scheme = ':';\x0d\n    this.username = '';\x0d\n    this.password = '';\x0d\n    this.host = null;\x0d\n    this.port = null;\x0d\n    this.path = [];\x0d\n    this.query = null;\x0d\n    this.fragment = null;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isURLSearchParams(self) {\x0d\n  return self && self[searchParams] && !self[searchParams][searchParams];\x0d\n}\x0d\n\x0d\nclass URLSearchParams {\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init === null || init === undefined) {\x0d\n      this[searchParams] = [];\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator]) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init[searchParams];\x0d\n        this[searchParams] = childParams.slice();\x0d\n      } else if (method !== null && method !== undefined) {\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // Sequence<sequence<USVString>>\x0d\n        // Note: per spec we have to first exhaust the lists then process them\x0d\n        const pairs = [];\x0d\n        for (const pair of init) {\x0d\n          if ((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n              pair === null ||\x0d\n              typeof pair[SymbolIterator] !== 'function') {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          const convertedPair = [];\x0d\n          for (const element of pair)\x0d\n            ArrayPrototypePush(convertedPair\x2C toUSVString(element));\x0d\n          ArrayPrototypePush(pairs\x2C convertedPair);\x0d\n        }\x0d\n\x0d\n        this[searchParams] = [];\x0d\n        for (const pair of pairs) {\x0d\n          if (pair.length !== 2) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          }\x0d\n          ArrayPrototypePush(this[searchParams]\x2C pair[0]\x2C pair[1]);\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        this[searchParams] = [];\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = toUSVString(key);\x0d\n            const typedValue = toUSVString(init[key]);\x0d\n            this[searchParams].push(typedKey\x2C typedValue);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // USVString\x0d\n      init = toUSVString(init);\x0d\n      if (init[0] === '?') init = init.slice(1);\x0d\n      initSearchParams(this\x2C init);\x0d\n    }\x0d\n\x0d\n    // "associated url object"\x0d\n    this[context] = null;\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n    ArrayPrototypePush(this[searchParams]\x2C name\x2C value);\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  delete(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        list.splice(i\x2C 2);\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    const values = [];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return true;\x0d\n      }\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this[searchParams];\x0d\n    name = toUSVString(name);\x0d\n    value = toUSVString(value);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    const a = this[searchParams];\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    update(this[context]\x2C this);\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateCallback(callback);\x0d\n\x0d\n    let list = this[searchParams];\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this[searchParams];\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return createSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (!isURLSearchParams(this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this[searchParams]);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: { enumerable: true }\x2C\x0d\n  delete: { enumerable: true }\x2C\x0d\n  get: { enumerable: true }\x2C\x0d\n  getAll: { enumerable: true }\x2C\x0d\n  has: { enumerable: true }\x2C\x0d\n  set: { enumerable: true }\x2C\x0d\n  sort: { enumerable: true }\x2C\x0d\n  entries: { enumerable: true }\x2C\x0d\n  forEach: { enumerable: true }\x2C\x0d\n  keys: { enumerable: true }\x2C\x0d\n  values: { enumerable: true }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction onParseComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                         host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n  if (!this[searchParams]) { // Invoked from URL constructor\x0d\n    this[searchParams] = new URLSearchParams();\x0d\n    this[searchParams][context] = this;\x0d\n  }\x0d\n  initSearchParams(this[searchParams]\x2C query);\x0d\n}\x0d\n\x0d\nfunction onParseError(flags\x2C input) {\x0d\n  throw new ERR_INVALID_URL(input);\x0d\n}\x0d\n\x0d\nfunction onParseProtocolComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_SPECIAL) !== 0) {\x0d\n    ctx.flags |= URL_FLAGS_SPECIAL;\x0d\n  } else {\x0d\n    ctx.flags &= ~URL_FLAGS_SPECIAL;\x0d\n  }\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostnameComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                                 host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  } else {\x0d\n    ctx.host = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParsePortComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].port = port;\x0d\n}\x0d\n\x0d\nfunction onParseHostComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  ReflectApply(onParseHostnameComplete\x2C this\x2C arguments);\x0d\n  if (port !== null || ((flags & URL_FLAGS_IS_DEFAULT_SCHEME_PORT) !== 0))\x0d\n    ReflectApply(onParsePortComplete\x2C this\x2C arguments);\x0d\n}\x0d\n\x0d\nfunction onParsePathComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = this[context];\x0d\n  if ((flags & URL_FLAGS_HAS_PATH) !== 0) {\x0d\n    ctx.path = path;\x0d\n    ctx.flags |= URL_FLAGS_HAS_PATH;\x0d\n  } else {\x0d\n    ctx.path = [];\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_PATH;\x0d\n  }\x0d\n\x0d\n  // The C++ binding may set host to empty string.\x0d\n  if ((flags & URL_FLAGS_HAS_HOST) !== 0) {\x0d\n    ctx.host = host;\x0d\n    ctx.flags |= URL_FLAGS_HAS_HOST;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onParseSearchComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                               host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].query = query;\x0d\n}\x0d\n\x0d\nfunction onParseHashComplete(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                             host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  this[context].fragment = fragment;\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    let base_context;\x0d\n    if (base !== undefined) {\x0d\n      base_context = new URL(base)[context];\x0d\n    }\x0d\n    this[context] = new URLContext();\x0d\n    parse(input\x2C -1\x2C base_context\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  get [special]() {\x0d\n    return (this[context].flags & URL_FLAGS_SPECIAL) !== 0;\x0d\n  }\x0d\n\x0d\n  get [cannotBeBase]() {\x0d\n    return (this[context].flags & URL_FLAGS_CANNOT_BE_BASE) !== 0;\x0d\n  }\x0d\n\x0d\n  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port\x0d\n  get [cannotHaveUsernamePasswordPort]() {\x0d\n    const { host\x2C scheme } = this[context];\x0d\n    return ((host == null || host === '') ||\x0d\n            this[cannotBeBase] ||\x0d\n            scheme === 'file:');\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (this == null ||\x0d\n        ObjectGetPrototypeOf(this[context]) !== URLContext.prototype) {\x0d\n      throw new ERR_INVALID_THIS('URL');\x0d\n    }\x0d\n\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = ObjectCreate({ constructor });\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj.cannotBeBase = this[cannotBeBase];\x0d\n      obj.special = this[special];\x0d\n      obj[context] = this[context];\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  [kFormat](options) {\x0d\n    if (options)\x0d\n      validateObject(options\x2C 'options');\x0d\n\x0d\n    options = {\x0d\n      fragment: true\x2C\x0d\n      unicode: false\x2C\x0d\n      search: true\x2C\x0d\n      auth: true\x2C\x0d\n      ...options\x0d\n    };\x0d\n    const ctx = this[context];\x0d\n    // https://url.spec.whatwg.org/#url-serializing\x0d\n    let ret = ctx.scheme;\x0d\n    if (ctx.host !== null) {\x0d\n      ret += '//';\x0d\n      const has_username = ctx.username !== '';\x0d\n      const has_password = ctx.password !== '';\x0d\n      if (options.auth && (has_username || has_password)) {\x0d\n        if (has_username)\x0d\n          ret += ctx.username;\x0d\n        if (has_password)\x0d\n          ret += `:${ctx.password}`;\x0d\n        ret += '@';\x0d\n      }\x0d\n      ret += options.unicode ?\x0d\n        domainToUnicode(ctx.host) : ctx.host;\x0d\n      if (ctx.port !== null)\x0d\n        ret += `:${ctx.port}`;\x0d\n    }\x0d\n    if (this[cannotBeBase]) {\x0d\n      ret += ctx.path[0];\x0d\n    } else {\x0d\n      if (ctx.host === null && ctx.path.length > 1 && ctx.path[0] === '') {\x0d\n        ret += '/.';\x0d\n      }\x0d\n      if (ctx.path.length) {\x0d\n        ret += '/' + ArrayPrototypeJoin(ctx.path\x2C '/');\x0d\n      }\x0d\n    }\x0d\n    if (options.search && ctx.query !== null)\x0d\n      ret += `?${ctx.query}`;\x0d\n    if (options.fragment && ctx.fragment !== null)\x0d\n      ret += `#${ctx.fragment}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  toString() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  set href(input) {\x0d\n    // toUSVString is not needed.\x0d\n    input = `${input}`;\x0d\n    parse(input\x2C -1\x2C undefined\x2C undefined\x2C\x0d\n          FunctionPrototypeBind(onParseComplete\x2C this)\x2C onParseError);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    // Refs: https://url.spec.whatwg.org/#concept-url-origin\x0d\n    const ctx = this[context];\x0d\n    switch (ctx.scheme) {\x0d\n      case 'blob:':\x0d\n        if (ctx.path.length > 0) {\x0d\n          try {\x0d\n            return (new URL(ctx.path[0])).origin;\x0d\n          } catch {\x0d\n            // Fall through... do nothing\x0d\n          }\x0d\n        }\x0d\n        return kOpaqueOrigin;\x0d\n      case 'ftp:':\x0d\n      case 'http:':\x0d\n      case 'https:':\x0d\n      case 'ws:':\x0d\n      case 'wss:':\x0d\n        return serializeTupleOrigin(ctx.scheme\x2C ctx.host\x2C ctx.port);\x0d\n    }\x0d\n    return kOpaqueOrigin;\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return this[context].scheme;\x0d\n  }\x0d\n\x0d\n  set protocol(scheme) {\x0d\n    // toUSVString is not needed.\x0d\n    scheme = `${scheme}`;\x0d\n    if (scheme.length === 0)\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    parse(scheme\x2C kSchemeStart\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseProtocolComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    return this[context].username;\x0d\n  }\x0d\n\x0d\n  set username(username) {\x0d\n    // toUSVString is not needed.\x0d\n    username = `${username}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (username === '') {\x0d\n      ctx.username = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_USERNAME;\x0d\n      return;\x0d\n    }\x0d\n    ctx.username = encodeAuth(username);\x0d\n    ctx.flags |= URL_FLAGS_HAS_USERNAME;\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    return this[context].password;\x0d\n  }\x0d\n\x0d\n  set password(password) {\x0d\n    // toUSVString is not needed.\x0d\n    password = `${password}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (password === '') {\x0d\n      ctx.password = '';\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_PASSWORD;\x0d\n      return;\x0d\n    }\x0d\n    ctx.password = encodeAuth(password);\x0d\n    ctx.flags |= URL_FLAGS_HAS_PASSWORD;\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    const ctx = this[context];\x0d\n    let ret = ctx.host || '';\x0d\n    if (ctx.port !== null)\x0d\n      ret += `:${ctx.port}`;\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  set host(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHost\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHostComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    return this[context].host || '';\x0d\n  }\x0d\n\x0d\n  set hostname(host) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    host = `${host}`;\x0d\n    if (this[cannotBeBase]) {\x0d\n      // Cannot set the host if cannot-be-base is set\x0d\n      return;\x0d\n    }\x0d\n    parse(host\x2C kHostname\x2C null\x2C ctx\x2C onParseHostnameComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    const port = this[context].port;\x0d\n    return port === null ? '' : String(port);\x0d\n  }\x0d\n\x0d\n  set port(port) {\x0d\n    // toUSVString is not needed.\x0d\n    port = `${port}`;\x0d\n    if (this[cannotHaveUsernamePasswordPort])\x0d\n      return;\x0d\n    const ctx = this[context];\x0d\n    if (port === '') {\x0d\n      ctx.port = null;\x0d\n      return;\x0d\n    }\x0d\n    parse(port\x2C kPort\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParsePortComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    const ctx = this[context];\x0d\n    if (this[cannotBeBase])\x0d\n      return ctx.path[0];\x0d\n    if (ctx.path.length === 0)\x0d\n      return '';\x0d\n    return `/${ArrayPrototypeJoin(ctx.path\x2C '/')}`;\x0d\n  }\x0d\n\x0d\n  set pathname(path) {\x0d\n    // toUSVString is not needed.\x0d\n    path = `${path}`;\x0d\n    if (this[cannotBeBase])\x0d\n      return;\x0d\n    parse(path\x2C kPathStart\x2C null\x2C this[context]\x2C\x0d\n          onParsePathComplete.bind(this));\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    const { query } = this[context];\x0d\n    if (query === null || query === '')\x0d\n      return '';\x0d\n    return `?${query}`;\x0d\n  }\x0d\n\x0d\n  set search(search) {\x0d\n    const ctx = this[context];\x0d\n    search = toUSVString(search);\x0d\n    if (search === '') {\x0d\n      ctx.query = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n    } else {\x0d\n      if (search[0] === '?') search = StringPrototypeSlice(search\x2C 1);\x0d\n      ctx.query = '';\x0d\n      ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n      if (search) {\x0d\n        parse(search\x2C kQuery\x2C null\x2C ctx\x2C\x0d\n              FunctionPrototypeBind(onParseSearchComplete\x2C this));\x0d\n      }\x0d\n    }\x0d\n    initSearchParams(this[searchParams]\x2C search);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    return this[searchParams];\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    const { fragment } = this[context];\x0d\n    if (fragment === null || fragment === '')\x0d\n      return '';\x0d\n    return `#${fragment}`;\x0d\n  }\x0d\n\x0d\n  set hash(hash) {\x0d\n    const ctx = this[context];\x0d\n    // toUSVString is not needed.\x0d\n    hash = `${hash}`;\x0d\n    if (!hash) {\x0d\n      ctx.fragment = null;\x0d\n      ctx.flags &= ~URL_FLAGS_HAS_FRAGMENT;\x0d\n      return;\x0d\n    }\x0d\n    if (hash[0] === '#') hash = StringPrototypeSlice(hash\x2C 1);\x0d\n    ctx.fragment = '';\x0d\n    ctx.flags |= URL_FLAGS_HAS_FRAGMENT;\x0d\n    parse(hash\x2C kFragment\x2C null\x2C ctx\x2C\x0d\n          FunctionPrototypeBind(onParseHashComplete\x2C this));\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return this[kFormat]({});\x0d\n  }\x0d\n\x0d\n  static createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    // Yes\x2C lazy loading is annoying but because of circular\x0d\n    // references between the url\x2C internal/blob\x2C and buffer\x0d\n    // modules\x2C lazy loading here makes sure that things work.\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  static revokeObjectURL(url) {\x0d\n    url = `${url}`;\x0d\n    try {\x0d\n      const parsed = new URL(url);\x0d\n      const split = StringPrototypeSplit(parsed.pathname\x2C ':');\x0d\n      if (split.length === 2)\x0d\n        revokeDataObject(split[1]);\x0d\n    } catch {\x0d\n      // If there's an error\x2C it's ignored.\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [kFormat]: { configurable: false\x2C writable: false }\x2C\x0d\n  [SymbolToStringTag]: { configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: { enumerable: true }\x2C\x0d\n  href: { enumerable: true }\x2C\x0d\n  origin: { enumerable: true }\x2C\x0d\n  protocol: { enumerable: true }\x2C\x0d\n  username: { enumerable: true }\x2C\x0d\n  password: { enumerable: true }\x2C\x0d\n  host: { enumerable: true }\x2C\x0d\n  hostname: { enumerable: true }\x2C\x0d\n  port: { enumerable: true }\x2C\x0d\n  pathname: { enumerable: true }\x2C\x0d\n  search: { enumerable: true }\x2C\x0d\n  searchParams: { enumerable: true }\x2C\x0d\n  hash: { enumerable: true }\x2C\x0d\n  toJSON: { enumerable: true }\x2C\x0d\n});\x0d\n\x0d\nfunction update(url\x2C params) {\x0d\n  if (!url)\x0d\n    return;\x0d\n\x0d\n  const ctx = url[context];\x0d\n  const serializedParams = params.toString();\x0d\n  if (serializedParams) {\x0d\n    ctx.query = serializedParams;\x0d\n    ctx.flags |= URL_FLAGS_HAS_QUERY;\x0d\n  } else {\x0d\n    ctx.query = null;\x0d\n    ctx.flags &= ~URL_FLAGS_HAS_QUERY;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initSearchParams(url\x2C init) {\x0d\n  if (!init) {\x0d\n    url[searchParams] = [];\x0d\n    return;\x0d\n  }\x0d\n  url[searchParams] = parseParams(init);\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let pairStart = 0;\x0d\n  let lastPos = 0;\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i;\x0d\n  for (i = 0; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// Mainly to mitigate func-name-matching ESLint rule\x0d\nfunction defineIDLClass(proto\x2C classStr\x2C obj) {\x0d\n  // https://heycam.github.io/webidl/#dfn-class-string\x0d\n  ObjectDefineProperty(proto\x2C SymbolToStringTag\x2C {\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: classStr\x0d\n  });\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-operations\x0d\n  for (const key of ObjectKeys(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n  for (const key of ObjectGetOwnPropertySymbols(obj)) {\x0d\n    ObjectDefineProperty(proto\x2C key\x2C {\x0d\n      writable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: obj[key]\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\nfunction createSearchParamsIterator(target\x2C kind) {\x0d\n  const iterator = ObjectCreate(URLSearchParamsIteratorPrototype);\x0d\n  iterator[context] = {\x0d\n    target\x2C\x0d\n    kind\x2C\x0d\n    index: 0\x0d\n  };\x0d\n  return iterator;\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\nconst URLSearchParamsIteratorPrototype = ObjectCreate(IteratorPrototype);\x0d\n\x0d\ndefineIDLClass(URLSearchParamsIteratorPrototype\x2C 'URLSearchParams Iterator'\x2C {\x0d\n  next() {\x0d\n    if (!this ||\x0d\n        ObjectGetPrototypeOf(this) !== URLSearchParamsIteratorPrototype) {\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const values = target[searchParams];\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this[context].index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x0d\n    };\x0d\n  }\x2C\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (this == null || this[context] == null || this[context].target == null)\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const {\x0d\n      target\x2C\x0d\n      kind\x2C\x0d\n      index\x0d\n    } = this[context];\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(target[searchParams]\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [target[searchParams][index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x0d\n    );\x0d\n    const breakLn = inspect(output\x2C innerOpts).includes('\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // toUSVString is not needed.\x0d\n  return _domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n// Utility function that converts a URL object into an ordinary\x0d\n// options object as expected by the http.request and https.request\x0d\n// APIs.\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const options = {\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: typeof url.hostname === 'string' &&\x0d\n              StringPrototypeStartsWith(url.hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(url.hostname\x2C 1\x2C -1) :\x0d\n      url.hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: url.search\x2C\x0d\n    pathname: url.pathname\x2C\x0d\n    path: `${url.pathname || ''}${url.search || ''}`\x2C\x0d\n    href: url.href\x0d\n  };\x0d\n  if (url.port !== '') {\x0d\n    options.port = Number(url.port);\x0d\n  }\x0d\n  if (url.username || url.password) {\x0d\n    options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nconst forwardSlashRegEx = /\\//g;\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = pathname.replace(forwardSlashRegEx\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = pathname.codePointAt(1) | 0x20;\x0d\n  const sep = pathname[2];\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return pathname.slice(1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = pathname.codePointAt(n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURLInstance(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIncludes(filepath\x2C '%'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C percentRegEx\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIncludes(filepath\x2C '\\\\'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C backslashRegEx\x2C '%5C');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\n'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C newlineRegEx\x2C '%0A');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\r'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C carriageReturnRegEx\x2C '%0D');\x0d\n  if (StringPrototypeIncludes(filepath\x2C '\\t'))\x0d\n    filepath = StringPrototypeReplace(filepath\x2C tabRegEx\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  const outURL = new URL('file://');\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const paths = StringPrototypeSplit(filepath\x2C '\\\\');\x0d\n    if (paths.length <= 3) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x0d\n      );\x0d\n    }\x0d\n    const hostname = paths[2];\x0d\n    if (hostname.length === 0) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'filepath'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x0d\n      );\x0d\n    }\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      ArrayPrototypeJoin(ArrayPrototypeSlice(paths\x2C 3)\x2C '/'));\x0d\n  } else {\x0d\n    let resolved = path.resolve(filepath);\x0d\n    // path.resolve strips trailing slashes so we must add them back\x0d\n    const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                   filepath.length - 1);\x0d\n    if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n         (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n        resolved[resolved.length - 1] !== path.sep)\x0d\n      resolved += '/';\x0d\n    outURL.pathname = encodePathChars(resolved);\x0d\n  }\x0d\n  return outURL;\x0d\n}\x0d\n\x0d\nfunction isURLInstance(fileURLOrPath) {\x0d\n  return fileURLOrPath != null && fileURLOrPath.href && fileURLOrPath.origin;\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURLInstance(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\nfunction constructUrl(flags\x2C protocol\x2C username\x2C password\x2C\x0d\n                      host\x2C port\x2C path\x2C query\x2C fragment) {\x0d\n  const ctx = new URLContext();\x0d\n  ctx.flags = flags;\x0d\n  ctx.scheme = protocol;\x0d\n  ctx.username = (flags & URL_FLAGS_HAS_USERNAME) !== 0 ? username : '';\x0d\n  ctx.password = (flags & URL_FLAGS_HAS_PASSWORD) !== 0 ? password : '';\x0d\n  ctx.port = port;\x0d\n  ctx.path = (flags & URL_FLAGS_HAS_PATH) !== 0 ? path : [];\x0d\n  ctx.query = query;\x0d\n  ctx.fragment = fragment;\x0d\n  ctx.host = host;\x0d\n\x0d\n  const url = ObjectCreate(URL.prototype);\x0d\n  url[context] = ctx;\x0d\n  const params = new URLSearchParams();\x0d\n  url[searchParams] = params;\x0d\n  params[context] = url;\x0d\n  initSearchParams(params\x2C query);\x0d\n  return url;\x0d\n}\x0d\nsetURLConstructor(constructUrl);\x0d\n\x0d\nmodule.exports = {\x0d\n  toUSVString\x2C\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  isURLInstance\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  formatSymbol: kFormat\x2C\x0d\n  searchParamsSymbol: searchParams\x2C\x0d\n  encodeStr\x0d\n};\x0d\n
code-source-info,0x397aa9c91f6,33,42956,43081,C0O42977C3O42982C9O43017C11O43038C12O43042C15O43049C19O43078,,
tick,0x7ff7c4f646cb,2354450,0,0x0,3,0x7ff7c459f520,0xd4848bf7cf,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff7c3f6f834,2354501,0,0x0,3,0x7ff7c459f520,0xd4848bf7cf,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff86e9f4383,2354540,0,0x0,3,0x7ff7c459f520,0xd4848bf7cf,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
tick,0x7ff86e9f4383,2354578,0,0x0,3,0x7ff7c459f520,0xd4848bf7cf,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
code-creation,LazyCompile,10,2354628,0x397aa9cc326,17,isURLInstance node:internal/url:1492:23,0x1145bf9c120,~
code-source-info,0x397aa9cc326,33,42829,42928,C0O42850C3O42871C6O42896C12O42918C16O42925,,
tick,0x7ff7c47868ef,2354930,0,0x0,3,0x7ff7c459f520,0xd4848bf7e9,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
code-creation,LazyCompile,10,2354989,0x397aa9cc486,81, node:internal/fs/utils:668:38,0x2e444572e60,~
code-source-info,0x397aa9cc486,78,18808,19088,C14O18842C22O18875C25O18875C31O18902C36O18933C49O18908C54O18902C55O19001C68O19001C74O19040C76O19070C78O19070C80O19087,,
code-creation,LazyCompile,10,2355223,0x397aa9cc696,110, node:internal/fs/utils:357:35,0x2e4445724d8,~
code-source-info,0x397aa9cc696,78,8925,9534,C16O8990C21O9044C26O9044C31O9141C37O9164C41O9193C45O9210C51O9210C60O9262C64O9283C69O9283C76O9329C77O9336C78O9359C94O9359C100O9478C104O9501C106O9501C107O9520C109O9531,,
code-creation,LazyCompile,10,2355412,0x397aa9cc80e,16,isUint8Array node:internal/util/types:13:22,0x27f8fed7658,~
script-source,15,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n
code-source-info,0x397aa9cc80e,15,269,356,C0O282C5O289C12O336C15O353,,
code-creation,LazyCompile,10,2356096,0x397aa9cccb6,23,splitRoot node:fs:2358:33,0x2e444569b98,~
code-source-info,0x397aa9cccb6,77,65046,65112,C0O65059C9O65086C12O65066C19O65103C22O65107,,
code-creation,LazyCompile,10,2356711,0x397aa9cce9e,63,handleErrorFromBinding node:internal/fs/utils:340:32,0x2e444572488,~
code-source-info,0x397aa9cce9e,78,8269,8780,C0O8288C6O8352C11O8352C16O8375C24O8375C29O8433C31O8433C32O8460C38O8692C43O8719C51O8692C56O8766C60O8756C62O8779,,
code-creation,LazyCompile,10,2357033,0x397aa9cd016,53,nextPart node:fs:2384:31,0x2e444569c90,~
code-source-info,0x397aa9cd016,77,65803,66054,C0O65830C4O65826C9O65863C14O65863C20O65947C22O65958C24O65954C31O65988C33O65984C38O66017C40O66026C41O65840C47O65817C50O66039C52O66049,,
tick,0x7ff7c47d52e7,2357267,0,0x0,0,0x7ff7c47d51f0,0xd4848bf8a9,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
code-creation,LazyCompile,10,2357537,0x397aa9cd17e,34,isFileType node:fs:205:20,0x2e444567900,~
code-source-info,0x397aa9cd17e,77,5489,5737,C0O5626C2O5631C6O5639C10O5674C15O5681C20O5698C22O5713C24O5711C30O5721C33O5734,,
tick,0x7ff7c49d59e4,2359132,0,0x0,0,0xd4848bf9b8,0x28fbd63fb31,0x28fbd63f1a1,0x28fbd63ee44,0x28fbd63e9ef,0x5bf4dfb639
code-creation,LazyCompile,10,2360499,0x397aa9cd446,72,encodeRealpathResult node:fs:2371:30,0x2e444569c40,~
code-source-info,0x397aa9cd446,77,65392,65658,C0O65415C4O65440C10O65460C17O65469C22O65486C24O65500C25O65521C30O65528C35O65528C41O65557C48O65566C53O65587C55O65603C56O65628C61O65645C66O65628C71O65655,,
tick,0x7ff86e9f42bf,2360915,0,0x0,2,0x7ff7c459f520,0x28fbd63e9f7,0x5bf4dfb639
code-creation,LazyCompile,10,2360987,0x397aa9cd5f6,109,shouldUseESMLoader node:internal/modules/run_main:26:28,0x28fbd63db60,~
code-source-info,0x397aa9cd5f6,123,764,1339,C0O799C8O799C13O843C15O864C16O876C17O921C25O921C30O979C32O1011C37O1028C38O1040C39O1090C45O1106C51O1106C58O1154C59O1166C60O1170C66O1187C72O1187C79O1235C80O1248C81O1264C86O1264C91O1295C93O1313C98O1318C105O1323C108O1336,,
code-creation,LazyCompile,10,2361316,0x397aa9cd816,129,readPackageScope node:internal/modules/cjs/loader:321:26,0x28fbd6120a8,~
code-source-info,0x397aa9cd816,108,9239,9772,C0O9283C7O9317C10O9283C16O9330C18O9359C25O9414C28O9376C34O9425C47O9437C54O9494C61O9533C66O9537C70O9498C77O9563C78O9576C79O9596C84O9620C86O9618C90O9596C95O9631C97O9642C104O9664C110O9684C116O9702C117O9730C119O9730C124O9349C127O9756C128O9769,,
code-creation,LazyCompile,10,2361680,0x397aa9cdb76,234,readPackage node:internal/modules/cjs/loader:290:21,0x28fbd612058,~
code-source-info,0x397aa9cdb76,108,8391,9210,C0O8427C5O8432C13O8432C20O8492C25O8509C30O8509C36O8527C38O8555C40O8571C41O8592C46O8610C51O8610C57O8649C63O8662C72O8688C77O8699C79O8730C84O8747C91O8747C97O8774C98O8787C102O8824C107O8824C112O8863C117O8885C125O8911C133O8940C141O8972C149O9001C160O9019C165O9036C170O9036C176O9066C178O9082C190O9105C195O9112C199O9129C207O9158C213O9169C220O9180C224O9176C227O9139C231O9194C233O9194,,
code-creation,Function,11,2362214,0x23629345160,6232,resolve node:path:158:10,0x1145bfa96e8,^
code-source-info,0x23629345160,35,4875,9786,,,
code-creation,Function,11,2362309,0x23629346a20,432,getCLIOptionsFromBinding node:internal/options:18:34,0x5bf4dff958,^
code-source-info,0x23629346a20,93,514,620,,,
code-creation,Function,11,2362380,0x23629346c40,104,next node:internal/per_context/primordials:273:9,0x17b63289a50,^
code-source-info,0x23629346c40,6,8126,8173,,,
code-creation,Function,11,2362458,0x23629346d20,252,SafeMap node:internal/per_context/primordials:351:16,0x17b63289fe0,^
code-source-info,0x23629346d20,6,10550,10567,,,
code-creation,Function,11,2362544,0x23629346e80,412,isWindowsDeviceRoot node:path:60:29,0x1145bfa95e0,^
code-source-info,0x23629346e80,35,1991,2136,,,
code-creation,Function,11,2362614,0x23629347080,272,validateString node:internal/validators:117:24,0x27f8feda8e0,^
code-source-info,0x23629347080,17,3514,3626,,,
code-creation,Function,11,2362696,0x23629347200,544,nextPart node:fs:2384:31,0x2e444569c90,^
code-source-info,0x23629347200,77,65803,66054,,,
tick,0x7ff86e9f6005,2362957,0,0x0,0,0x7ff7c47d4c40,0xd4848878fc,0x397aa9cdb83,0x397aa9cd870,0x397aa9cd64c,0x28fbd63e9f7,0x5bf4dfb639
code-creation,LazyCompile,10,2363211,0x397aa9ce6fe,199,read node:internal/modules/package_json_reader:16:14,0x28fbd617bf8,~
code-source-info,0x397aa9ce6fe,109,307,992,C0O323C5O333C10O333C17O355C22O368C27O368C32O382C33O432C40O461C43O461C48O432C53O404C59O415C66O512C73O514C79O522C86O568C92O568C97O549C102O600C106O633C112O670C115O681C127O732C132O766C142O679C148O805C154O853C159O853C164O885C169O894C174O894C180O943C185O949C190O949C196O975C198O989,,
code-creation,LazyCompile,10,2364463,0x397aa9cf35e,619,Module._load node:internal/modules/cjs/loader:757:24,0x28fbd612c08,~
code-source-info,0x397aa9cf35e
tick,0x7ff7c4f646cb,2365014,0,0x0,3,0x7ff7c459f520,0x28fbd63ea1f,0x5bf4dfb639
code-creation,LazyCompile,10,2365549,0x397aa9cfac6,812,Module._resolveFilename node:internal/modules/cjs/loader:848:35,0x28fbd612c90,~
code-source-info,0x397aa9cfac
code-creation,LazyCompile,10,2366208,0x397aa9d0086,28,canBeRequiredByUsers node:internal/bootstrap/loaders:240:30,0x17b6328fa00,~
code-source-info,0x397aa9d0086,9,7592,7691,C0O7616C5O7629C10O7633C15O7633C21O7647C23O7665C27O7686,,
code-creation,LazyCompile,10,2366503,0x397aa9d033e,327,Module._resolveLookupPaths node:internal/modules/cjs/loader:667:38,0x28fbd612ad8,~
code-source-info,0x397aa9d033e
tick,0x7ff86e9eea48,2366927,0,0x0,3,0x7ff7c459f520,0x397aa9d03fd,0x397aa9cfc34,0x397aa9cf3e8,0x28fbd63ea1f,0x5bf4dfb639
code-creation,LazyCompile,10,2366982,0x397aa9d0606,104,logger node:internal/util/debuglog:96:18,0x1145bfbcc08,~
code-source-info,0x397aa9d0606,40,2994,3226,C0O2994C3O3027C30O3052C35O3059C38O3067C39O3083C45O3100C49O3090C53O3105C54O3121C60O3138C66O3147C70O3128C75O3152C76O3169C80O3176C87O3189C92O3185C98O3176C103O3214,,
code-creation,LazyCompile,10,2367194,0x397aa9d075e,3, node:internal/per_context/primordials:276:21,0x17b63289af8,~
code-source-info,0x397aa9d075e,6,8195,8226,C0O8207C2O8219,,
code-creation,LazyCompile,10,2367400,0x397aa9d0836,155,debug node:internal/util/debuglog:76:15,0x1145bfbcb68,~
code-source-info,0x397aa9d0836,40,2432,2869,C0O2432C3O2452C6O2452C9O2563C16O2584C22O2571C30O2569C36O2604C42O2641C47O2644C50O2641C54O2670C81O2695C86O2702C89O2710C90O2726C96O2743C100O2733C104O2748C105O2764C111O2781C117O2790C121O2771C126O2795C127O2812C131O2819C138O2832C143O2828C149O2819C154O2857,,
code-creation,LazyCompile,10,2367598,0x397aa9d0a06,41,init node:internal/util/debuglog:72:16,0x1145bfbcb18,~
code-source-info,0x397aa9d0a06,40,2330,2416,C0O2340C10O2346C14O2344C16O2384C26O2394C33O2392C40O2415,,
code-creation,LazyCompile,10,2367714,0x397aa9d0af6,2,testEnabled node:internal/util/debuglog:32:19,0xd484891da8,~
code-source-info,0x397aa9d0af6,40,1004,1015,C0O1010C1O1015,,
code-creation,LazyCompile,10,2367920,0x397aa9d0c8e,116,debuglogImpl node:internal/util/debuglog:49:22,0x1145bfbc950,~
code-source-info,0x397aa9d0c8e,40,1499,2059,C0O1499C9O1519C18O1533C23O1561C34O1595C39O1603C43O1595C45O1615C55O1615C59O1648C71O1659C75O1664C83O1994C97O2012C99O2010C103O2033C112O2050C115O2056,,
code-creation,LazyCompile,10,2368104,0x397aa9d0e46,10, node:internal/modules/cjs/loader:272:66,0x28fbd6128d8,~
code-source-info,0x397aa9d0e46,108,7980,8007,C0O7993C2O7999C9O8006,,
code-creation,LazyCompile,10,2368216,0x397aa9d0ef6,2,noop node:internal/util/debuglog:47:14,0x1145bfbc900,~
code-source-info,0x397aa9d0ef6,40,1465,1473,C1O1472,,
code-creation,LazyCompile,10,2368391,0x397aa9d1036,76,trySelfParentPath node:internal/modules/cjs/loader:427:27,0x28fbd612288,~
code-source-info,0x397aa9d1036,108,12696,12971,C0O12710C4O12723C5O12736C6O12753C12O12784C16O12793C17O12815C24O12818C29O12841C36O12844C44O12888C47O12903C52O12903C59O12911C62O12916C66O12909C69O12920C72O12943C73O12956C75O12970,,
code-creation,LazyCompile,10,2368719,0x397aa9d1276,235,trySelf node:internal/modules/cjs/loader:441:17,0x28fbd6122d8,~
code-source-info,0x397aa9d1276,108,12991,13849,C0O13018C4O13035C5O13048C6O13091C9O13091C17O13068C22O13079C27O13130C31O13146C37O13169C38O13182C39O13201C47O13220C48O13233C49O13243C51O13277C55O13269C60O13290C65O13317C70O13363C82O13321C89O13380C94O13398C97O13432C102O13437C107O13398C112O13396C118O13463C119O13476C123O13498C128O13527C133O13557C138O13579C142O13557C149O13622C152O13622C159O13649C168O13527C183O13505C188O13695C200O13718C203O13724C210O13729C215O13764C222O13808C226O13770C231O13764C232O13833C234O13833,,
tick,0x7ff7c4f44443,2369050,0,0x0,3,0x7ff7c459f520,0x397aa9cfcf9,0x397aa9cf3e8,0x28fbd63ea1f,0x5bf4dfb639
code-creation,LazyCompile,10,2369221,0x397aa9d150e,62,loadNativeModule node:internal/modules/cjs/helpers:44:26,0x28fbd60ca80,~
code-source-info,0x397aa9d150e,107,1194,1482,C0O1231C5O1244C10O1248C15O1248C21O1266C26O1273C35O1304C43O1304C48O1432C53O1432C57O1463C59O1474C61O1481,,
code-creation,LazyCompile,10,2369436,0x397aa9d1dce,94,Module node:internal/modules/cjs/loader:172:16,0x28fbd611f68,~
code-source-info,0x397aa9d1dce,108,5455,5701,C14O5478C16O5486C20O5495C22O5507C25O5512C30O5512C35O5505C39O5528C40O5541C44O5550C49O5568C54O5568C60O5590C71O5590C76O5630C77O5644C81O5655C82O5667C86O5679C88O5693C93O5700,,
code-creation,LazyCompile,10,2369921,0x397aa9d1fc6,449,dirname node:path:653:10,0x1145bfa9940,~
code-source-info,0x397aa9d1fc
code-creation,LazyCompile,10,2370428,0x397aa9d237e,45,updateChildren node:internal/modules/cjs/loader:165:24,0x28fbd611f18,~
code-source-info,0x397aa9d237e,108,5213,5390,C0O5257C7O5263C15O5278C19O5296C23O5304C26O5304C33O5351C38O5351C44O5389,,
code-creation,LazyCompile,10,2370721,0x397aa9d2576,246,Module.load node:internal/modules/cjs/loader:969:33,0x28fbd612d20,~
code-source-info,0x397aa9d2576,108,31233,32069,C0O31249C8O31295C16O31249C21O31305C26O31318C32O31305C36O31330C38O31344C42O31359C45O31379C52O31396C55O31401C60O31401C66O31379C71O31370C75O31444C78O31444C83O31523C91O31527C101O31580C106O31591C112O31606C124O31612C129O31606C130O31654C133O31661C140O31672C144O31683C150O31704C151O31716C155O31747C160O31756C165O31860C170O31897C175O31908C187O31949C192O31956C197O31956C204O31970C206O31968C211O32003C216O32012C221O32012C228O32038C233O32047C238O32047C245O32068,,
tick,0x7ff7c4f46555,2371127,0,0x0,3,0x7ff7c459f520,0x397aa9cf4f7,0x28fbd63ea1f,0x5bf4dfb639
code-creation,LazyCompile,10,2371317,0x397aa9d287e,251,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x28fbd6129b8,~
code-source-info,0x397aa9d287e
code-creation,LazyCompile,10,2371788,0x397aa9d2c76,98,findLongestRegisteredExtension node:internal/modules/cjs/loader:413:40,0x28fbd612238,~
code-source-info,0x397aa9d2c76,108,12225,12666,C0O12254C5O12259C10O12259C16O12286C18O12311C20O12338C22O12407C36O12360C44O12407C49O12422C51O12441C55O12451C56O12461C61O12468C63O12516C68O12535C74O12575C77O12586C84O12597C89O12617C91O12641C92O12344C95O12650C97O12663,,
code-creation,LazyCompile,10,2372232,0x397aa9d2e56,415,basename node:path:749:11,0x1145bfa99a8,~
code-source-info,0x397aa9d2e
tick,0x7ff7c4985aad,2372979,0,0x0,2,0x7ff7c459f520,0x397aa9d2606,0x397aa9cf4f7,0x28fbd63ea1f,0x5bf4dfb639
code-creation,LazyCompile,10,2373047,0x397aa9d3376,485,Module._extensions..js node:internal/modules/cjs/loader:1110:37,0x28fbd612ec0,~
code-source-info,0x397aa9d
code-creation,LazyCompile,10,2373642,0x397aa9d37d6,376,readFileSync node:fs:450:22,0x2e444567db8,~
code-source-info,0x397aa9d37d
code-creation,LazyCompile,10,2374147,0x397aa9d3af6,30,isEncoding node:buffer:529:40,0x27f8fee6010,~
code-source-info,0x397aa9d3af6,18,15302,15437,C0O15318C6O15366C12O15373C20O15392C23O15392C28O15420C29O15434,,
code-creation,LazyCompile,10,2374314,0x397aa9d3bfe,30,normalizeEncoding node:internal/util:160:27,0x17b632aad78,~
code-source-info,0x397aa9d3bfe,12,4365,4473,C0O4376C7O4399C14O4417C19O4430C21O4444C22O4448C25O4455C29O4470,,
code-creation,LazyCompile,10,2374445,0x397aa9d3ce6,9,isUint32 node:internal/validators:39:18,0x27f8feda730,~
code-source-info,0x397aa9d3ce6,17,815,862,C0O828C2O852C5O841C8O859,,
code-creation,LazyCompile,10,2374639,0x397aa9d3e3e,113,openSync node:fs:576:18,0x2e444567fa0,~
code-source-info,0x397aa9d3e3e,77,15001,15391,C0O15026C5O15033C11O15080C16O15080C21O15105C37O15112C44O15165C51O15167C58O15193C63O15201C70O15206C73O15217C78O15217C95O15201C101O15342C106O15342C110O15374C112O15388,,
tick,0x7ff7c4981ac5,2374883,0,0x0,2,0x7ff7c459f520,0x397aa9d3e43,0x397aa9d380e,0x397aa9d33b2,0x397aa9d2606,0x397aa9cf4f7,0x28fbd63ea1f,0x5bf4dfb639
code-creation,LazyCompile,10,2374963,0x397aa9d3fbe,37, node:internal/fs/utils:680:42,0x2e444572eb0,~
code-source-info,0x397aa9d3fbe,78,19135,19274,C14O19191C19O19191C24O19226C29O19226C34O19259C36O19271,,
code-creation,LazyCompile,10,2375299,0x397aa9d4396,515,stringToFlags node:internal/fs/utils:555:23,0x2e444572cd0,~
code-source-info,0x397aa9d
code-creation,LazyCompile,10,2375801,0x397aa9d4786,97,parseFileMode node:internal/validators:58:23,0x27f8feda780,~
code-source-info,0x397aa9d4786,17,1525,1832,C0O1549C11O1567C17O1605C24O1630C27O1610C34O1657C41O1702C52O1663C57O1657C58O1725C66O1733C73O1769C89O1769C94O1816C96O1829,,
code-creation,LazyCompile,10,2376076,0x397aa9d4956,206, node:internal/validators:83:3,0x27f8feda840,~
code-source-info,0x397aa9d4956,17,2318,2913,C36O2461C39O2466C45O2491C51O2533C67O2539C72O2533C73O2604C78O2609C84O2644C100O2650C105O2644C106O2715C116O2754C129O2767C142O2721C147O2715C148O2794C150O2804C157O2819C162O2835C172O2874C185O2887C198O2841C203O2835C205O2912,,
code-creation,LazyCompile,10,2376269,0x397aa9d4b1e,9,isInt32 node:internal/validators:35:17,0x27f8feda378,~
code-source-info,0x397aa9d4b1e,17,749,794,C0O762C2O786C5O775C8O791,,
tick,0x7ff7c4603790,2376916,0,0x0,2,0x7ff7c459f520,0x397aa9d3817,0x397aa9d33b2,0x397aa9d2606,0x397aa9cf4f7,0x28fbd63ea1f,0x5bf4dfb639
code-creation,LazyCompile,10,2377016,0x397aa9d4c26,66,tryStatSync node:fs:404:21,0x2e444567cc8,~
code-source-info,0x397aa9d4c26,77,10733,10951,C0O10765C2O10786C7O10794C22O10794C28O10839C36O10863C38O10880C43O10883C48O10883C53O10903C58O10909C62O10903C63O10935C65O10948,,
code-creation,LazyCompile,10,2377281,0x397aa9d4d9e,96,tryCreateBuffer node:fs:414:25,0x2e444567d18,~
code-source-info,0x397aa9d4d9e,77,10979,11279,C0O11017C2O11030C7O11052C9O11063C11O11061C16O11086C23O11092C28O11086C29O11137C34O11153C39O11153C45O11177C57O11183C58O11212C65O11226C67O11236C72O11239C77O11239C93O11262C95O11276,,
code-creation,LazyCompile,10,2377456,0x397aa9d4ef6,17,allocUnsafe node:buffer:372:42,0x27f8fee5b88,~
code-source-info,0x397aa9d4ef6,18,11242,11300,C0O11254C5O11254C9O11275C12O11282C16O11297,,
code-creation,LazyCompile,10,2377604,0x397aa9d4ffe,54, node:buffer:348:36,0x27f8fee5ad0,~
code-source-info,0x397aa9d4ffe,18,10516,10676,C0O10531C8O10531C13O10564C14O10575C21O10591C23O10588C28O10611C33O10643C46O10617C51O10611C53O10675,,
code-creation,LazyCompile,10,2377737,0x397aa9d5126,30,validateNumber node:internal/validators:122:24,0x27f8feda980,~
code-source-info,0x397aa9d5126,17,3653,3765,C0O3672C6O3708C22O3714C27O3708C29O3764,,
code-creation,LazyCompile,10,2377908,0x397aa9d523e,119,allocate node:buffer:397:18,0x27f8fee5cd8,~
code-source-info,0x397aa9d523e,18,11969,12297,C0O11981C1O11990C6O12003C11O12010C16O12027C17O12036C20O12055C24O12064C27O12045C32O12079C34O12091C39O12102C41O12100C44O12088C49O12122C52O12122C55O12151C62O12166C67O12177C75O12151C81O12201C88O12215C94O12212C100O12226C103O12226C106O12244C108O12253C109O12262C114O12269C118O12294,,
code-creation,LazyCompile,10,2378185,0x397aa9d53fe,86,tryReadSync node:fs:429:21,0x2e444567d68,~
code-source-info,0x397aa9d53fe,77,11303,11548,C0O11353C2O11366C7O11391C12O11406C29O11406C35O11443C47O11449C48O11478C55O11492C57O11502C62O11505C67O11505C83O11528C85O11545,,
code-creation,LazyCompile,10,2378491,0x397aa9d55e6,239,readSync node:fs:684:18,0x2e444568070,~
code-source-info,0x397aa9d55e6,77,17811,18783,C0O17811C2O17855C7O17860C13O17885C18O17885C22O17928C29O17935C34O18008C40O18032C52O18044C58O18060C64O18072C70O18105C75O18132C80O18161C93O18161C98O18209C105O18227C106O18238C111O18252C112O18261C113O18283C119O18294C124O18308C140O18314C145O18308C146O18440C151O18488C162O18440C167O18506C172O18533C176O18553C184O18553C189O18610C191O18632C196O18640C221O18640C227O18734C232O18734C236O18766C238O18780,,
code-creation,LazyCompile,10,2378758,0x397aa9d583e,52, node:internal/fs/utils:686:40,0x2e444572f00,~
code-source-info,0x397aa9d583e,78,19319,19448,C14O19349C22O19353C29O19378C30O19387C31O19398C44O19398C49O19435C51O19445,,
tick,0x7ff7c4f359ab,2379033,0,0x0,3,0x7ff7c459f520,0x397aa9d55ed,0x397aa9d541b,0x397aa9d3875,0x397aa9d33b2,0x397aa9d2606,0x397aa9cf4f7,0x28fbd63ea1f,0x5bf4dfb639
code-creation,LazyCompile,10,2379118,0x397aa9d59ae,51, node:internal/validators:190:40,0x27f8fedaba8,~
code-source-info,0x397aa9d59ae,17,5851,6087,C14O5885C19O5890C25O5924C30O5955C43O5930C48O5924C50O6086,,
code-creation,LazyCompile,10,2379315,0x397aa9d5b06,151, node:internal/validators:72:3,0x27f8feda7f0,~
code-source-info,0x397aa9d5b06,17,1880,2268,C12O1900C25O1930C32O1964C38O2002C54O2008C59O2002C60O2062C65O2067C71O2098C87O2104C92O2098C93O2158C95O2168C102O2183C107O2197C117O2236C130O2249C143O2203C148O2197C150O2267,,
code-creation,LazyCompile,10,2379553,0x397aa9d5d0e,103, node:internal/fs/utils:636:3,0x2e444572dc0,~
code-source-info,0x397aa9d5d0e,78,17893,18283,C0O17934C1O17945C6O17959C22O17965C27O17959C28O18025C29O18036C34O18050C50O18056C55O18050C56O18116C58O18127C64O18136C69O18161C82O18251C95O18167C100O18161C102O18282,,
code-creation,LazyCompile,10,2379810,0x397aa9d6016,151, node:internal/fs/utils:886:42,0x2e444573220,~
code-source-info,0x397aa9d6016,78,24850,25422,C0O24875C6O24916C14O24916C21O24965C27O25006C32O25029C35O25024C37O25021C47O25055C53O25062C56O25049C61O25078C77O25162C80O25157C98O25182C104O25189C117O25084C122O25078C125O25266C143O25272C148O25266C150O25421,,
code-creation,LazyCompile,10,2380110,0x397aa9d61ce,47,closeSync node:fs:526:19,0x2e444567ec8,~
code-source-info,0x397aa9d61ce,77,13820,13948,C0O13830C5O13835C11O13872C13O13879C18O13887C31O13887C36O13917C41O13917C46O13947,,
code-creation,LazyCompile,10,2380477,0x397aa9d6306,162,toString node:buffer:782:46,0x27f8fee7a10,~
code-source-info,0x397aa9d6306,18,24045,24637,C0O24045C2O24087C8O24094C13O24120C20O24138C25O24120C31O24146C32O24174C37O24187C38O24197C43O24208C48O24227C50O24237C55O24250C57O24260C58O24274C65O24291C71O24320C76O24332C83O24356C90O24371C92O24379C97O24394C99O24404C100O24410C104O24455C109O24455C115O24477C116O24495C119O24495C124O24524C126O24552C133O24558C138O24552C139O24610C156O24610C161O24634,,
tick,0x7ff7c4ce7340,2380927,0,0x0,2,0x7ff7c459f520,0x397aa9d637d,0x397aa9d3945,0x397aa9d33b2,0x397aa9d2606,0x397aa9cf4f7,0x28fbd63ea1f,0x5bf4dfb639
code-creation,LazyCompile,10,2381097,0x397aa9d65c6,499,getEncodingOps node:buffer:678:24,0x27f8fee7868,~
code-source-info,0x397aa9d65c
code-creation,LazyCompile,10,2381614,0x397aa9d69ae,12,slice node:buffer:593:12,0x27f8fee6230,~
code-source-info,0x397aa9d69ae,18,17194,17240,C0O17219C5O17219C11O17240,,
code-creation,LazyCompile,10,2382156,0x397aa9d6c2e,499,Module._compile node:internal/modules/cjs/loader:1055:37,0x28fbd612e30,~
code-source-info,0x397aa9d6c2e
tick,0x7ff7c4650fc0,2382907,0,0x0,3,0x7ff7c459f520,0x397aa9d6c84,0x397aa9d3553,0x397aa9d2606,0x397aa9cf4f7,0x28fbd63ea1f,0x5bf4dfb639
code-creation,LazyCompile,10,2382966,0x397aa9d719e,229,maybeCacheSourceMap node:internal/source_map/source_map_cache:74:29,0x28fbd609fa0,~
code-source-info,0x397aa9d719e,105,2312,3381,C0O2382C3O2382C7O2409C10O2423C15O2427C23O2447C25O2467C26O2474C30O2489C35O2500C44O2498C54O2645C64O2655C69O2645C73O2668C74O2675C75O2698C80O2725C85O2698C91O2805C93O2836C96O2864C101O2871C106O2836C112O2907C117O2927C122O2934C127O2957C131O2989C136O3007C141O3011C148O3041C155O3073C165O3104C171O3119C175O3007C183O3250C188O3268C193O3272C201O3306C211O3337C217O3352C221O3268C228O3380,,
code-creation,LazyCompile,10,2383248,0x397aa9d7bfe,31,getSourceMapsEnabled node:internal/source_map/source_map_cache:43:30,0x28fbd609f00,~
code-source-info,0x397aa9d7bfe,105,1460,1610,C0O1468C6O1512C11O1533C17O1533C22O1512C26O1582C30O1607,,
code-creation,LazyCompile,10,2383452,0x397aa9d7d76,100,setSourceMapsEnabled node:internal/source_map/source_map_cache:50:30,0x28fbd609f50,~
code-source-info,0x397aa9d7d76,105,1643,2280,C0O1654C8O1654C13O1764C19O1764C24O1701C29O1728C34O1794C38O1824C42O1882C48O1882C53O1855C58O1939C64O1998C70O2161C76O2161C81O2133C86O2194C90O2253C92O2271C99O2279,,
code-creation,LazyCompile,10,2383633,0x397aa9d7eee,30,validateBoolean node:internal/validators:138:25,0x27f8fedaa40,~
code-source-info,0x397aa9d7eee,17,4179,4293,C0O4198C6O4235C22O4241C27O4235C29O4292,,
code-creation,LazyCompile,10,2384008,0x397aa9d82e6,165,wrapSafe node:internal/modules/cjs/loader:1017:18,0x28fbd6124b8,~
code-source-info,0x397aa9d82e6,108,32708,33600,C0O32708C9O32752C17O32788C22O32795C27O32795C33O32815C40O32825C45O32842C52O32860C56O32952C64O32825C70O33111C74O33131C81O33141C86O33157C98O33279C102O33296C113O33141C118O33469C130O33494C135O33506C142O33517C147O33547C157O33547C162O33582C164O33582,,
code-creation,LazyCompile,10,2384678,0x397aa9d8ad6,472,compileFunction node:vm:308:25,0x2ac1c887960,~
script-source,85,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  MicrotaskQueue\x2C\x0d\n  makeContext\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  constants\x2C\x0d\n  compileFunction: _compileFunction\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n} = require('internal/util');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = {}) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined && !isArrayBufferView(cachedData)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.cachedData'\x2C\x0d\n        ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n        cachedData\x0d\n      );\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      validateFunction(importModuleDynamically\x2C\x0d\n                       'options.importModuleDynamically');\x0d\n      const { importModuleDynamicallyWrap } =\x0d\n        require('internal/vm/module');\x0d\n      const { callbackMap } = internalBinding('module_wrap');\x0d\n      callbackMap.set(this\x2C {\x0d\n        importModuleDynamically:\x0d\n          importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInThisContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInThisContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(options);\x0d\n    ArrayPrototypeUnshift(args\x2C contextifiedObject);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(options = {}) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [timeout\x2C displayErrors\x2C breakOnSigint\x2C breakFirstLine]\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C { allowArray: true });\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = {}) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  let microtaskQueue = null;\x0d\n  if (microtaskMode !== undefined) {\x0d\n    validateOneOf(microtaskMode\x2C 'options.microtaskMode'\x2C\x0d\n                  ['afterEvaluate'\x2C undefined]);\x0d\n\x0d\n    if (microtaskMode === 'afterEvaluate')\x0d\n      microtaskQueue = new MicrotaskQueue();\x0d\n  }\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = {}) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateArray(params\x2C 'params');\x0d\n    ArrayPrototypeForEach(params\x2C\x0d\n                          (param\x2C i) => validateString(param\x2C `params[${i}]`));\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateUint32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateUint32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C { nullable: true });\x0d\n  });\x0d\n\x0d\n  const result = _compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n    const { importModuleDynamicallyWrap } =\x0d\n      require('internal/vm/module');\x0d\n    const { callbackMap } = internalBinding('module_wrap');\x0d\n    const wrapped = importModuleDynamicallyWrap(importModuleDynamically);\x0d\n    const func = result.function;\x0d\n    callbackMap.set(result.cacheKey\x2C {\x0d\n      importModuleDynamically: (s\x2C _k\x2C i) => wrapped(s\x2C func\x2C i)\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  return result.function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = {}) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x397aa9d8ad
tick,0x7ff7c4f4fad6,2387525,0,0x0,3,0x7ff7c459f520,0x397aa9d8357,0x397aa9d6c95,0x397aa9d3553,0x397aa9d2606,0x397aa9cf4f7,0x28fbd63ea1f,0x5bf4dfb639
tick,0x7ff7c3f6f86d,2387573,0,0x0,3,0x7ff7c459f520,0x397aa9d8357,0x397aa9d6c95,0x397aa9d3553,0x397aa9d2606,0x397aa9cf4f7,0x28fbd63ea1f,0x5bf4dfb639
code-creation,LazyCompile,10,2387686,0x397aa9d9c9e,95, node:internal/validators:167:39,0x27f8fedaae0,~
code-source-info,0x397aa9d9c9e,17,5132,5418,C16O5169C21O5174C27O5202C43O5208C48O5202C49O5274C56O5281C61O5316C66O5339C71O5357C87O5363C92O5357C94O5417,,
code-creation,LazyCompile,10,2387894,0x397aa9d9dfe,27, node:vm:313:27,0x397aa9d87a8,~
code-source-info,0x397aa9d9dfe,85,10064,10115,C0O10078C10O10110C21O10078C26O10115,,
code-creation,LazyCompile,10,2388122,0x397aa9d9f8e,149, node:internal/validators:100:40,0x27f8feda890,~
code-source-info,0x397aa9d9f8e,17,2960,3485,C0O2992C3O2997C9O3021C15O3061C31O3067C36O3061C37O3128C42O3133C48O3166C64O3172C69O3166C70O3245C80O3299C90O3338C109O3305C114O3299C115O3377C120O3399C125O3413C141O3419C146O3413C148O3484,,
code-creation,Eval,10,2388514,0x397aa9da36e,5, D:\\Personal\\Coder\\BackEnd\\proxy\\server-backend\\child.js:1:1,0x397aa9da218,~
script-source,124,D:\\Personal\\Coder\\BackEnd\\proxy\\server-backend\\child.js,const random = (data) => {\x0d\n    let array = [];\x0d\n    let uniqueElements = [];\x0d\n    let repeteadElements = [];\x0d\n    let newArray = [];\x0d\n    let count = 1;\x0d\n    if (data) {\x0d\n        for (let i = 0; i < data; i++) {\x0d\n            let number = parseInt(Math.random() * 1000 + 1);\x0d\n            array.push(number);\x0d\n        }\x0d\n    }\x0d\n    else {\x0d\n        for (let i = 0; i < 1e8; i++) {\x0d\n            let number = parseInt(Math.random() * 1000 + 1);\x0d\n            array.push(number);\x0d\n        }\x0d\n    }\x0d\n    array.sort();\x0d\n    for (let j = 0; j < array.length; j++) {\x0d\n        if (array[j + 1] === array[j]) {\x0d\n            count++;\x0d\n        }\x0d\n        else {\x0d\n            uniqueElements.push(array[j]);\x0d\n            repeteadElements.push(count);\x0d\n            count = 1;\x0d\n        }\x0d\n    }\x0d\n    for (let k = 0; k < uniqueElements.length; k++) {\x0d\n        newArray.push(`${uniqueElements[k]} se repite: ${repeteadElements[k]} vez/veces`);\x0d\n    }\x0d\n    return newArray;\x0d\n}\x0d\n\x0d\nprocess.on("message"\x2C (input) => {\x0d\n    if (input==="Iniciar") {\x0d\n        const resultado = random();\x0d\n        process.send(resultado);\x0d\n    }\x0d\n    else {\x0d\n        const resultado = random(input);\x0d\n        process.send(resultado);\x0d\n    }\x0d\n})\x0d\n
code-source-info,0x397aa9da36e,124,0,1202,C0O0C4O1202,,
code-creation,Function,10,2388937,0x397aa9da4b6,39, D:\\Personal\\Coder\\BackEnd\\proxy\\server-backend\\child.js:1:1,0x397aa9da2e8,~
code-source-info,0x397aa9da4b6,124,0,1202,C0O0C8O15C12O15C14O959C18O967C31O967C38O1201,,
tick,0x7ff86ea7faf4,2389021,1,0x7ff7c408d270,3,0x7ff7c4970240,0x397aa9d8c0e,0x397aa9d8357,0x397aa9d6c95,0x397aa9d3553,0x397aa9d2606,0x397aa9cf4f7,0x28fbd63ea1f,0x5bf4dfb639
code-creation,LazyCompile,10,2389332,0x397aa9da89e,19,importModuleDynamicallyWrap node:internal/vm/module:435:37,0x28fbd636388,~
code-source-info,0x397aa9da89e,122,12139,12597,C0O12139C13O12209C18O12594,,
code-creation,LazyCompile,10,2389636,0x397aa9dba76,159,makeRequireFunction node:internal/modules/cjs/helpers:58:29,0x28fbd60cad0,~
code-source-info,0x397aa9dba76,107,1765,3805,C0O1765C22O1802C25O1806C29O1802C31O1828C33O1840C53O1873C58O1877C69O1893C73O1873C75O1921C81O1921C83O1949C89O1958C95O1987C104O3182C109O3423C111O3439C115O3586C117O3600C121O3614C126O3637C130O3627C134O3705C137O3733C141O3724C145O3751C148O3774C152O3765C156O3787C158O3802,,
code-creation,LazyCompile,10,2389936,0x397aa9dbdf6,5,get node:internal/bootstrap/pre_execution:314:8,0x28fbd60f350,~
code-source-info,0x397aa9dbdf6,92,10398,10433,C0O10410C4O10426,,
code-creation,LazyCompile,10,2390101,0x397aa9dbebe,44,refCounted node:internal/child_process:537:13,0xd48489dd70,~
code-source-info,0x397aa9dbebe,97,14644,14746,C0O14654C3O14664C9O14665C15O14671C22O14686C27O14714C29O14719C33O14728C38O14728C43O14745,,
code-creation,LazyCompile,10,2390591,0x397aa9dc0de,383,channel.onread node:internal/child_process:599:28,0x28fbd603530,~
code-source-info,0x397aa9dc0de,97,16197,17401,C0O16237C3O16245C8O16265C12O16287C16O16300C20O16340C31O16356C33O16355C37O16398C48O16414C50O16413C54O16455C72O16455C78O16506C82O16531C84O16545C90O16590C98O16590C128O16579C156O16579C159O16861C164O16865C173O16911C180O16915C185O16949C190O16972C200O16949C205O17007C209O17021C217O17062C229O17062C236O17145C248O17145C253O16568C319O17228C320O17243C324O17259C327O17266C332O17266C336O17287C343O17304C345O17302C349O17316C352O17324C357O17324C361O17340C365O17355C369O17370C377O17370C382O17400,,
tick,0x7ff7c4f651ec,2391019,0,0x0,3
code-creation,LazyCompile,10,2391248,0x397aa9dc436,277,parseChannelMessages node:internal/child_process/serialization:105:24,0x28fbd606ee0,~
code-source-info,0x397aa9dc436,104,3333,4115,C10O3333C15O3333C35O3333C39O3373C45O3380C50O3387C51O3394C52O3402C54O3414C56O3413C61O3452C63O3460C68O3482C76O3478C81O3476C85O3532C92O3561C94O3560C98O3577C103O3577C112O3532C118O3639C122O3646C126O3731C128O3737C132O3763C133O3785C138O3801C140O3809C149O3825C152O3822C158O3863C162O3883C164O3882C169O3904C172O3896C175O3873C179O3929C181O3934C183O3934C188O3969C195O3991C199O3975C210O3969C230O3969C234O3956C239O3916C242O4004C244O4012C249O4025C253O4056C255O4084C257O4083C261O4097C267O4104C271O4074C276O4114,,
code-creation,LazyCompile,10,2391622,0x397aa9dc6ee,71,StringDecoder node:string_decoder:71:23,0x325d20a25d0,~
script-source,54,node:string_decoder,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  kIncompleteCharactersStart\x2C\x0d\n  kIncompleteCharactersEnd\x2C\x0d\n  kMissingBytes\x2C\x0d\n  kBufferedBytes\x2C\x0d\n  kEncodingField\x2C\x0d\n  kSize\x2C\x0d\n  decode\x2C\x0d\n  flush\x2C\x0d\n  encodings\x0d\n} = internalBinding('string_decoder');\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x0d\n} = require('internal/errors').codes;\x0d\nconst isEncoding = Buffer[internalUtil.kIsEncodingSymbol];\x0d\n\x0d\nconst kNativeDecoder = Symbol('kNativeDecoder');\x0d\n\x0d\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\x0d\n// modules monkey-patch it to support additional encodings\x0d\nfunction normalizeEncoding(enc) {\x0d\n  const nenc = internalUtil.normalizeEncoding(enc);\x0d\n  if (nenc === undefined) {\x0d\n    if (Buffer.isEncoding === isEncoding || !Buffer.isEncoding(enc))\x0d\n      throw new ERR_UNKNOWN_ENCODING(enc);\x0d\n    return enc;\x0d\n  }\x0d\n  return nenc;\x0d\n}\x0d\n\x0d\nconst encodingsMap = {};\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\n// StringDecoder provides an interface for efficiently splitting a series of\x0d\n// buffers into a series of JS strings without breaking apart multi-byte\x0d\n// characters.\x0d\nfunction StringDecoder(encoding) {\x0d\n  this.encoding = normalizeEncoding(encoding);\x0d\n  this[kNativeDecoder] = Buffer.alloc(kSize);\x0d\n  this[kNativeDecoder][kEncodingField] = encodingsMap[this.encoding];\x0d\n}\x0d\n\x0d\nStringDecoder.prototype.write = function write(buf) {\x0d\n  if (typeof buf === 'string')\x0d\n    return buf;\x0d\n  if (!ArrayBufferIsView(buf))\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf'\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buf);\x0d\n  return decode(this[kNativeDecoder]\x2C buf);\x0d\n};\x0d\n\x0d\nStringDecoder.prototype.end = function end(buf) {\x0d\n  let ret = '';\x0d\n  if (buf !== undefined)\x0d\n    ret = this.write(buf);\x0d\n  if (this[kNativeDecoder][kBufferedBytes] > 0)\x0d\n    ret += flush(this[kNativeDecoder]);\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n/* Everything below this line is undocumented legacy stuff. */\x0d\nStringDecoder.prototype.text = function text(buf\x2C offset) {\x0d\n  this[kNativeDecoder][kMissingBytes] = 0;\x0d\n  this[kNativeDecoder][kBufferedBytes] = 0;\x0d\n  return this.write(buf.slice(offset));\x0d\n};\x0d\n\x0d\nObjectDefineProperties(StringDecoder.prototype\x2C {\x0d\n  lastChar: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return TypedArrayPrototypeSubarray(this[kNativeDecoder]\x2C\x0d\n                                         kIncompleteCharactersStart\x2C\x0d\n                                         kIncompleteCharactersEnd);\x0d\n    }\x0d\n  }\x2C\x0d\n  lastNeed: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kMissingBytes];\x0d\n    }\x0d\n  }\x2C\x0d\n  lastTotal: {\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kBufferedBytes] +\x0d\n             this[kNativeDecoder][kMissingBytes];\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\nexports.StringDecoder = StringDecoder;\x0d\n
code-source-info,0x397aa9dc6ee,54,2505,2686,C0O2521C3O2537C7O2535C11O2569C13O2574C18O2592C21O2599C28O2605C31O2599C36O2590C40O2616C42O2621C44O2620C50O2637C55O2655C58O2673C62O2667C65O2653C70O2685,,
code-creation,LazyCompile,10,2392653,0x397aa9dcc96,73,normalizeEncoding node:string_decoder:54:27,0x325d20a22d0,~
code-source-info,0x397aa9dcc96,54,1960,2204,C0O1984C5O1997C10O1997C16O2024C18O2055C23O2066C30O2081C32O2077C39O2096C42O2103C47O2103C54O2127C61O2133C66O2127C67O2169C69O2180C70O2189C72O2201,,
tick,0x7ff86e9f4045,2392960,0,0x0,3,0x7ff7c459f520,0x397aa9dc6f1,0x397aa9dc482,0x7ff7c4a078e4,0x397aa9dc15e
code-creation,LazyCompile,10,2393123,0x397aa9dce2e,73,alloc node:buffer:359:30,0x27f8fee5b20,~
code-source-info,0x397aa9dce2e,18,10799,11037,C0O10827C5O10827C9O10848C14O10879C20O10893C25O10917C30O10917C35O10948C40O10979C54O10955C59O10997C60O11006C67O11013C72O11034,,
code-creation,LazyCompile,10,2393385,0x397aa9dcfd6,63,write node:string_decoder:77:47,0x325d20a2620,~
code-source-info,0x397aa9dcfd6,54,2736,3031,C0O2747C6O2781C8O2792C9O2796C14O2801C20O2830C38O2836C43O2830C44O2987C51O3006C53O3005C57O2994C62O3028,,
code-creation,LazyCompile,10,2393628,0x397aa9dd12e,80,isInternal node:internal/child_process:934:20,0xd48489d5d0,~
code-source-info,0x397aa9dd12e,97,27174,27472,C0O27189C3O27205C12O27285C20O27324C25O27328C32O27337C35O27353C39O27335C46O27374C49O27403C58O27411C61O27427C66O27374C74O27452C76O27435C79O27469,,
code-creation,LazyCompile,10,2393835,0x397aa9dd28e,51,handleMessage node:internal/child_process:920:25,0x28fbd603440,~
code-source-info,0x397aa9dd28e,97,26866,27069,C0O26901C3O26913C9O26929C10O26936C11O26962C22O27013C27O27021C44O27021C50O27068,,
code-creation,LazyCompile,10,2394186,0x397aa9dd52e,368,nextTick node:internal/process/task_queues:104:18,0x17b632bd080,~
script-source,25,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateCallback\x2C\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while (tock = queue.shift()) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateCallback(callback);\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x0d\n};\x0d\n
code-source-info,0x397aa9dd52e
tick,0x7ff7c4f50952,2395342,0,0x0,3,0x7ff7c459f520,0x397aa9dd2ba,0x397aa9dc1d6
code-creation,LazyCompile,10,2395422,0x397aa9ddd9e,21, node:internal/validators:221:42,0x27f8fedacd8,~
code-source-info,0x397aa9ddd9e,17,7016,7120,C0O7035C6O7076C13O7082C18O7076C20O7119,,
code-creation,LazyCompile,10,2395595,0x397aa9dde9e,15,isEmpty node:internal/fixed_queue:95:10,0x1145bf862a0,~
script-source,28,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x397aa9dde9e,28,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,LazyCompile,10,2396391,0x397aa9de356,13,isEmpty node:internal/fixed_queue:67:10,0x1145bf85fe8,~
code-source-info,0x397aa9de356,28,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,LazyCompile,10,2396525,0x397aa9de446,25,setHasTickScheduled node:internal/process/task_queues:52:29,0x17b632bcf90,~
code-source-info,0x397aa9de446,25,1155,1215,C0O1168C7O1177C12O1198C19O1196C24O1214,,
code-creation,LazyCompile,10,2396902,0x397aa9de53e,23,newAsyncId node:internal/async_hooks:415:20,0x17b632baf38,~
script-source,24,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// For performance reasons\x2C only track Promises when a hook is enabled.\x0d\nconst { setPromiseHooks } = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nsetCallbackTrampoline(callbackTrampoline);\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(1);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n\x0d\n  const publicResource = resource[owner_symbol];\x0d\n\x0d\n  if (publicResource != null) {\x0d\n    return publicResource;\x0d\n  }\x0d\n\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    value: name\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const destroyed = { destroyed: false };\x0d\n  promise[destroyedSymbol] = destroyed;\x0d\n  registerDestroyHook(promise\x2C asyncId\x2C destroyed);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n}\x0d\n\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  setPromiseHooks(\x0d\n    initHook\x2C\x0d\n    promiseBeforeHook\x2C\x0d\n    promiseAfterHook\x2C\x0d\n    promiseResolveHooksExist() ? promiseResolveHook : undefined\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook) {\x0d\n    setPromiseHooks(undefined\x2C undefined\x2C undefined\x2C undefined);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x397aa9de53e,24,14740,14793,C0O14748C7O14773C16O14788C22O14790,,
tick,0x7ff7c4650fbe,2400228,0,0x0,3,0x7ff7c459f520,0x397aa9dd62a,0x397aa9dd2ba,0x397aa9dc1d6
tick,0x7ff86e9f404f,2400263,0,0x0,3,0x7ff7c459f520,0x397aa9dd62a,0x397aa9dd2ba,0x397aa9dc1d6
code-creation,LazyCompile,10,2400318,0x397aa9df9ae,35,getDefaultTriggerAsyncId node:internal/async_hooks:431:34,0x17b632bafd8,~
code-source-info,0x397aa9df9ae,24,15215,15478,C0O15253C7O15269C9O15268C13O15364C14O15390C19O15400C26O15423C28O15422C31O15442C32O15446C34O15475,,
code-creation,LazyCompile,10,2400513,0x397aa9dfe7e,13,initHooksExist node:internal/async_hooks:468:24,0x17b632bb1c8,~
code-source-info,0x397aa9dfe7e,24,16248,16282,C0O16256C5O16272C8O16263C12O16279,,
code-creation,LazyCompile,10,2400627,0x397aa9dff66,16,hasHooks node:internal/async_hooks:460:18,0x17b632bb128,~
code-source-info,0x397aa9dff66,24,16108,16156,C0O16119C7O16143C12O16149C15O16153,,
code-creation,LazyCompile,10,2400884,0x397aa9e0076,59,push node:internal/fixed_queue:99:7,0x1145bf862f0,~
code-source-info,0x397aa9e0076,28,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
tick,0x7ff7c4641c22,2400993,0,0x0,2,0x7ff7c459f520,0x397aa9dd697,0x397aa9dd2ba,0x397aa9dc1d6
code-creation,LazyCompile,10,2401042,0x397aa9e01be,24,isFull node:internal/fixed_queue:71:9,0x1145bf86050,~
code-source-info,0x397aa9e01be,28,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,LazyCompile,10,2401172,0x397aa9e02ce,37,push node:internal/fixed_queue:75:7,0x1145bf860b8,~
code-source-info,0x397aa9e02ce,28,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,LazyCompile,10,2401528,0x397aa9e047e,318,processTicksAndRejections node:internal/process/task_queues:68:35,0x17b632bd030,~
code-source-info,0x397aa9e047e
code-creation,LazyCompile,10,2401865,0x397aa9e075e,43,shift node:internal/fixed_queue:108:8,0x1145bf86340,~
code-source-info,0x397aa9e075e,28,4061,4295,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4278C42O4290,,
code-creation,LazyCompile,10,2402039,0x397aa9e08a6,54,shift node:internal/fixed_queue:80:8,0x1145bf86120,~
code-source-info,0x397aa9e08a6,28,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,LazyCompile,10,2402237,0x397aa9e09de,42,emitBeforeScript node:internal/async_hooks:499:26,0x17b632bb378,~
code-source-info,0x397aa9e09de,24,16949,17105,C0O16990C12O16990C17O17048C22O17061C25O17052C31O17076C36O17076C41O17104,,
code-creation,LazyCompile,10,2402442,0x397aa9e0b2e,180,pushAsyncContext node:internal/async_hooks:529:26,0x17b632bb520,~
code-source-info,0x397aa9e0b2e,24,17623,18178,C0O17679C7O17697C9O17696C13O17715C20O17749C24O17764C26O17775C32O17782C35O17793C40O17809C44O17779C49O17822C54O17829C59O17872C60O17876C65O17887C72O17910C78O17917C83O17933C85O17932C88O17915C92O17956C97O17967C104O17990C107O17994C113O18001C118O18017C120O18016C123O17999C127O18038C134O18056C142O18069C146O18076C153O18092C158O18111C162O18125C169O18141C174O18158C179O18177,,
code-creation,LazyCompile,10,2402844,0x397aa9e0d16,24,emit node:internal/child_process:916:16,0x28fbd6033f0,~
code-source-info,0x397aa9e0d16,97,26765,26838,C0O26797C3O26804C17O26804C23O26837,,
tick,0x7ff7c463bbcc,2402936,0,0x0,2,0x7ff7c459f520,0x397aa9e051a
code-creation,LazyCompile,10,2403026,0x397aa9e0e1e,58, D:\\Personal\\Coder\\BackEnd\\proxy\\server-backend\\child.js:36:23,0x397aa9da3f0,~
code-source-info,0x397aa9e0e1e,124,981,1199,C0O999C2O1008C7O1051C12O1051C16O1070C20O1078C25O1078C32O1141C37O1141C42O1165C46O1173C51O1173C57O1198,,
code-creation,LazyCompile,10,2403374,0x397aa9e0f7e,287,random D:\\Personal\\Coder\\BackEnd\\proxy\\server-backend\\child.js:1:16,0x397aa9da3a0,~
code-source-info,0x397aa9e0f7e,124,15,955,C0O44C3O74C6O106C9O130C12O151C15O159C19O193C21O198C23O198C28O239C32O248C36O253C41O253C45O262C51O269C55O239C60O294C65O294C70O207C75O180C80O360C82O365C88O365C93O405C97O414C101O419C106O419C110O428C116O435C120O405C125O460C130O460C135O373C140O347C143O503C148O503C152O529C154O542C158O534C163O566C165O578C168O575C174O592C177O583C182O612C189O676C196O686C200O676C205O722C210O722C215O748C218O551C223O516C226O795C228O817C232O800C237O850C244O872C257O906C271O850C276O826C281O782C284O936C286O952,,
code-creation,Function,11,2403877,0x23629347480,2020,random D:\\Personal\\Coder\\BackEnd\\proxy\\server-backend\\child.js:1:16,0x397aa9da3a0,^
code-source-info,0x23629347480,124,15,955,,,
code-creation,Function,11,2404050,0x23629347ce0,2060,Module._nodeModulePaths node:internal/modules/cjs/loader:583:37,0x28fbd6129b8,^
code-source-info,0x23629347ce0,108,17765,19316,,,
tick,0x7ff7c4a082a1,2404903,0,0x0,0,0x397aa9e0e43,0xd48489133a,0x397aa9e0d27,0x397aa9e051a
tick,0x7ff7c4677abe,2406870,0,0x0,0,0x7ff7c4aba252,0x7ff7c4abd75f,0x236293478c7,0x397aa9e0e43,0xd48489133a,0x397aa9e0d27,0x397aa9e051a
new,MemoryChunk,0x3352f3c0000,270336
code-creation,LazyCompile,10,2408558,0x397aa9e2496,178,target.send node:internal/child_process:704:25,0x28fbd603608,~
code-source-info,0x397aa9e2496,97,19996,20732,C0O19996C12O20040C18O20083C21O20109C24O20136C29O20169C35O20213C38O20240C43O20273C47O20309C57O20309C62O20359C73O20396C80O20414C83O20423C89O20443C92O20455C109O20455C114O20497C115O20521C122O20521C127O20521C129O20556C135O20601C140O20609C148O20609C156O20654C161O20662C171O20662C176O20714C177O20727,,
tick,0x7ff7c4f646ac,2408848,0,0x0,3,0x7ff7c459f520,0x397aa9e0e51,0xd48489133a,0x397aa9e0d27,0x397aa9e051a
code-creation,LazyCompile,10,2409420,0x397aa9e2b9e,925,target._send node:internal/child_process:730:26,0x28fbd603690,~
code-source-info,0x397aa9e2b9e
code-creation,LazyCompile,10,2410096,0x397aa9e3226,39,writeChannelMessage node:internal/child_process/serialization:126:22,0x28fbd606f30,~
code-source-info,0x397aa9e3226,104,4141,4288,C0O4195C5O4195C12O4218C16O4246C33O4246C38O4283,,
tick,0x7ff7c3f9dffd,2410794,1,0x7ff7c3f9d330,6,0x7ff7c4970240,0x397aa9e3247,0x397aa9e2e18,0x397aa9e2503,0x397aa9e0e51,0xd48489133a,0x397aa9e0d27,0x397aa9e051a
code-creation,LazyCompile,10,2410998,0x397aa9e33ae,13,destroyHooksExist node:internal/async_hooks:476:27,0x17b632bb288,~
code-source-info,0x397aa9e33ae,24,16375,16412,C0O16383C5O16399C8O16390C12O16409,,
code-creation,LazyCompile,10,2411153,0x397aa9e349e,32,emitAfterScript node:internal/async_hooks:507:25,0x17b632bb3c8,~
code-source-info,0x397aa9e349e,24,17135,17236,C0O17150C5O17163C8O17154C14O17177C19O17177C23O17208C26O17208C31O17235,,
code-creation,LazyCompile,10,2411368,0x397aa9e3606,167,popAsyncContext node:internal/async_hooks:543:25,0x17b632bb570,~
code-source-info,0x397aa9e3606,24,18271,18873,C0O18306C7O18324C9O18323C13O18342C14O18358C19O18365C20O18378C21O18384C24O18388C31O18411C36O18427C38O18426C44O18446C49O18530C54O18537C58O18563C59O18589C61O18601C65O18609C72O18625C77O18646C80O18657C87O18675C90O18672C93O18644C97O18689C104O18705C109O18724C112O18735C119O18753C122O18762C125O18750C128O18722C132O18771C137O18797C142O18797C146O18807C153O18825C158O18839C162O18852C163O18866C166O18870,,
code-creation,LazyCompile,10,2411618,0x397aa9e37e6,13,enabledHooksExist node:internal/async_hooks:464:27,0x17b632bb178,~
code-source-info,0x397aa9e37e6,24,16186,16221,C0O16194C5O16210C8O16201C12O16218,,
code-creation,LazyCompile,10,2412108,0x397aa9e3a16,439,processPromiseRejections node:internal/process/promises:203:34,0x1145bf81448,~
script-source,26,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst async_hooks = require('async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    process.emit('multipleResolves'\x2C type\x2C promise\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const asyncId = async_hooks.executionAsyncId();\x0d\n  const triggerAsyncId = async_hooks.triggerAsyncId();\x0d\n  const resource = promise;\x0d\n\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    try {\x0d\n      pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n      if (promiseInfo.domain) {\x0d\n        return promiseInfo.domain.emit('error'\x2C reason);\x0d\n      }\x0d\n      return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n    } finally {\x0d\n      popAsyncContext(asyncId);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x0d\n  );\x0d\n  try {\x0d\n    if (reason instanceof Error) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {}\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    switch (unhandledRejectionsMode) {\x0d\n      case kStrictUnhandledRejections: {\x0d\n        const err = reason instanceof Error ?\x0d\n          reason : generateUnhandledRejectionError(reason);\x0d\n        triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n        const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n        if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n        break;\x0d\n      }\x0d\n      case kIgnoreUnhandledRejections: {\x0d\n        emit(reason\x2C promise\x2C promiseInfo);\x0d\n        break;\x0d\n      }\x0d\n      case kAlwaysWarnUnhandledRejections: {\x0d\n        emit(reason\x2C promise\x2C promiseInfo);\x0d\n        emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n        break;\x0d\n      }\x0d\n      case kThrowUnhandledRejections: {\x0d\n        const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n        if (!handled) {\x0d\n          const err = reason instanceof Error ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n      case kWarnWithErrorCodeUnhandledRejections: {\x0d\n        const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n        if (!handled) {\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          process.exitCode = 1;\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x397aa9e3a
tick,0x7ff7c44b81f6,2414122,0,0x0,3,0x7ff7c459f520,0x397aa9e059b
code-creation,LazyCompile,10,2414238,0x397aa9e4726,25,setHasRejectionToWarn node:internal/process/promises:71:31,0x17b632bfb00,~
code-source-info,0x397aa9e4726,26,2071,2133,C0O2084C7O2093C12O2116C19O2114C24O2132,,
new,MemoryChunk,0x34e57000000,262144
new,MemoryChunk,0x19270380000,262144
new,MemoryChunk,0xce5480000,262144
new,MemoryChunk,0xb8bb00000,262144
scavenge,begin,1,781250,1679951485031
tick,0x7ff86ea7faf4,2414910,0,0x0,1
scavenge,end,1,781250,1679951485032
code-creation,LazyCompile,10,2416052,0x397aa9e481e,33,req.oncomplete node:internal/child_process:831:26,0x397aa9e26e8,~
code-source-info,0x397aa9e481e,97,24228,24357,C0O24247C7O24255C12O24255C16O24282C22O24331C27O24331C32O24356,,
code-creation,LazyCompile,10,2416232,0x397aa9e492e,56,unrefCounted node:internal/child_process:543:15,0xd48489ddc0,~
code-source-info,0x397aa9e492e,97,14764,14895,C0O14774C3O14784C9O14785C14O14791C21O14806C26O14834C28O14839C32O14848C37O14848C41O14869C49O14869C55O14894,,
tick,0x7ff86ea82704,2416832,0,0x0,8
tick,0x7ff86ea82704,2418785,0,0x0,8
tick,0x7ff86ea82704,2420822,0,0x0,8
tick,0x7ff86ea82704,2422742,0,0x0,8
tick,0x7ff86ea82704,2424828,0,0x0,8
tick,0x7ff86ea82704,2426797,0,0x0,8
tick,0x7ff86ea82704,2428823,0,0x0,8
tick,0x7ff86ea82704,2430817,0,0x0,8
tick,0x7ff86ea82704,2432834,0,0x0,8
tick,0x7ff86ea82704,2434726,0,0x0,8
tick,0x7ff86ea82704,2436900,0,0x0,8
tick,0x7ff86ea82704,2438814,0,0x0,8
tick,0x7ff86ea82704,2440977,0,0x0,8
tick,0x7ff86ea82704,2442770,0,0x0,8
tick,0x7ff86ea82704,2444907,0,0x0,8
tick,0x7ff86ea82704,2446703,0,0x0,8
tick,0x7ff86ea82704,2448843,0,0x0,8
tick,0x7ff86ea82704,2450829,0,0x0,8
tick,0x7ff86ea82704,2452860,0,0x0,8
tick,0x7ff86ea82704,2454831,0,0x0,8
tick,0x7ff86ea82704,2456927,0,0x0,8
tick,0x7ff86ea82704,2458822,0,0x0,8
tick,0x7ff86ea82704,2460862,0,0x0,8
tick,0x7ff86ea82704,2462744,0,0x0,8
tick,0x7ff86ea82704,2464921,0,0x0,8
tick,0x7ff86ea82704,2466700,0,0x0,8
tick,0x7ff86ea82704,2468880,0,0x0,8
tick,0x7ff86ea82704,2470749,0,0x0,8
tick,0x7ff86ea82704,2472774,0,0x0,8
tick,0x7ff86ea82704,2474667,0,0x0,8
tick,0x7ff86ea82704,2476734,0,0x0,8
tick,0x7ff86ea82704,2478631,0,0x0,8
tick,0x7ff86ea82704,2480773,0,0x0,8
tick,0x7ff86ea82704,2482641,0,0x0,8
tick,0x7ff86ea82704,2484759,0,0x0,8
tick,0x7ff86ea82704,2486664,0,0x0,8
tick,0x7ff86ea82704,2488774,0,0x0,8
tick,0x7ff86ea82704,2490617,0,0x0,8
tick,0x7ff86ea82704,2492776,0,0x0,8
tick,0x7ff86ea82704,2494644,0,0x0,8
tick,0x7ff86ea82704,2496646,0,0x0,8
tick,0x7ff86ea82704,2498792,0,0x0,8
tick,0x7ff86ea82704,2500886,0,0x0,8
tick,0x7ff86ea82704,2502685,0,0x0,8
tick,0x7ff86ea82704,2504626,0,0x0,8
tick,0x7ff86ea82704,2506697,0,0x0,8
tick,0x7ff86ea82704,2508627,0,0x0,8
tick,0x7ff86ea82704,2510666,0,0x0,8
tick,0x7ff86ea82704,2512533,0,0x0,8
tick,0x7ff86ea82704,2514691,0,0x0,8
tick,0x7ff86ea82704,2516751,0,0x0,8
tick,0x7ff86ea82704,2518672,0,0x0,8
tick,0x7ff86ea82704,2520545,0,0x0,8
tick,0x7ff86ea82704,2522651,0,0x0,8
tick,0x7ff86ea82704,2524552,0,0x0,8
tick,0x7ff86ea82704,2526583,0,0x0,8
tick,0x7ff86ea82704,2528552,0,0x0,8
tick,0x7ff86ea82704,2530650,0,0x0,8
tick,0x7ff86ea82704,2532602,0,0x0,8
tick,0x7ff86ea82704,2534597,0,0x0,8
tick,0x7ff86ea82704,2536735,0,0x0,8
tick,0x7ff86ea82704,2538504,0,0x0,8
tick,0x7ff86ea82704,2540586,0,0x0,8
tick,0x7ff86ea82704,2542504,0,0x0,8
tick,0x7ff86ea82704,2544622,0,0x0,8
tick,0x7ff86ea82704,2546527,0,0x0,8
tick,0x7ff86ea82704,2548587,0,0x0,8
tick,0x7ff86ea82704,2550501,0,0x0,8
tick,0x7ff86ea82704,2552524,0,0x0,8
tick,0x7ff86ea82704,2554581,0,0x0,8
tick,0x7ff86ea82704,2556515,0,0x0,8
tick,0x7ff86ea82704,2558603,0,0x0,8
tick,0x7ff86ea82704,2560533,0,0x0,8
tick,0x7ff86ea82704,2562514,0,0x0,8
tick,0x7ff86ea82704,2564468,0,0x0,8
tick,0x7ff86ea82704,2566491,0,0x0,8
tick,0x7ff86ea82704,2568815,0,0x0,8
tick,0x7ff86ea82704,2570715,0,0x0,8
tick,0x7ff86ea82704,2572363,0,0x0,8
tick,0x7ff86ea82704,2574615,0,0x0,8
tick,0x7ff86ea82704,2576426,0,0x0,8
tick,0x7ff86ea82704,2578479,0,0x0,8
tick,0x7ff86ea82704,2580404,0,0x0,8
tick,0x7ff86ea82704,2582435,0,0x0,8
tick,0x7ff86ea82704,2584505,0,0x0,8
tick,0x7ff86ea82704,2586411,0,0x0,8
tick,0x7ff86ea82704,2588473,0,0x0,8
tick,0x7ff86ea82704,2590342,0,0x0,8
tick,0x7ff86ea82704,2592570,0,0x0,8
tick,0x7ff86ea82704,2594486,0,0x0,8
tick,0x7ff86ea82704,2596458,0,0x0,8
tick,0x7ff86ea82704,2598589,0,0x0,8
tick,0x7ff86ea82704,2600391,0,0x0,8
tick,0x7ff86ea82704,2602367,0,0x0,8
tick,0x7ff86ea82704,2604420,0,0x0,8
tick,0x7ff86ea82704,2606513,0,0x0,8
tick,0x7ff86ea82704,2608350,0,0x0,8
tick,0x7ff86ea82704,2610414,0,0x0,8
tick,0x7ff86ea82704,2612344,0,0x0,8
tick,0x7ff86ea82704,2614364,0,0x0,8
tick,0x7ff86ea82704,2616272,0,0x0,8
tick,0x7ff86ea82704,2618293,0,0x0,8
tick,0x7ff86ea82704,2620402,0,0x0,8
tick,0x7ff86ea82704,2622329,0,0x0,8
tick,0x7ff86ea82704,2624449,0,0x0,8
tick,0x7ff86ea82704,2626394,0,0x0,8
tick,0x7ff86ea82704,2628265,0,0x0,8
tick,0x7ff86ea82704,2630367,0,0x0,8
tick,0x7ff86ea82704,2632275,0,0x0,8
tick,0x7ff86ea82704,2634338,0,0x0,8
tick,0x7ff86ea82704,2636320,0,0x0,8
tick,0x7ff86ea82704,2638243,0,0x0,8
tick,0x7ff86ea82704,2640464,0,0x0,8
tick,0x7ff86ea82704,2642380,0,0x0,8
tick,0x7ff86ea82704,2644251,0,0x0,8
tick,0x7ff86ea82704,2646278,0,0x0,8
tick,0x7ff86ea82704,2648290,0,0x0,8
tick,0x7ff86ea82704,2650290,0,0x0,8
tick,0x7ff86ea82704,2652366,0,0x0,8
tick,0x7ff86ea82704,2654245,0,0x0,8
tick,0x7ff86ea82704,2656214,0,0x0,8
tick,0x7ff86ea82704,2658459,0,0x0,8
tick,0x7ff86ea82704,2660248,0,0x0,8
tick,0x7ff86ea82704,2662254,0,0x0,8
tick,0x7ff86ea82704,2664315,0,0x0,8
tick,0x7ff86ea82704,2666155,0,0x0,8
tick,0x7ff86ea82704,2668378,0,0x0,8
tick,0x7ff86ea82704,2670272,0,0x0,8
tick,0x7ff86ea82704,2672270,0,0x0,8
tick,0x7ff86ea82704,2674186,0,0x0,8
tick,0x7ff86ea82704,2676265,0,0x0,8
tick,0x7ff86ea82704,2678436,0,0x0,8
tick,0x7ff86ea82704,2680371,0,0x0,8
tick,0x7ff86ea82704,2682188,0,0x0,8
tick,0x7ff86ea82704,2684113,0,0x0,8
tick,0x7ff86ea82704,2686133,0,0x0,8
tick,0x7ff86ea82704,2688199,0,0x0,8
tick,0x7ff86ea82704,2690099,0,0x0,8
tick,0x7ff86ea82704,2692236,0,0x0,8
tick,0x7ff86ea82704,2694360,0,0x0,8
tick,0x7ff86ea82704,2696200,0,0x0,8
tick,0x7ff86ea82704,2698186,0,0x0,8
tick,0x7ff86ea82704,2700233,0,0x0,8
tick,0x7ff86ea82704,2702132,0,0x0,8
tick,0x7ff86ea82704,2704208,0,0x0,8
tick,0x7ff86ea82704,2706154,0,0x0,8
tick,0x7ff86ea82704,2708126,0,0x0,8
tick,0x7ff86ea82704,2710163,0,0x0,8
tick,0x7ff86ea82704,2712162,0,0x0,8
tick,0x7ff86ea82704,2714136,0,0x0,8
tick,0x7ff86ea82704,2716096,0,0x0,8
tick,0x7ff86ea82704,2718244,0,0x0,8
tick,0x7ff86ea82704,2720112,0,0x0,8
tick,0x7ff86ea82704,2722028,0,0x0,8
tick,0x7ff86ea82704,2724166,0,0x0,8
tick,0x7ff86ea82704,2726004,0,0x0,8
tick,0x7ff86ea82704,2728190,0,0x0,8
tick,0x7ff86ea82704,2729960,0,0x0,8
tick,0x7ff86ea82704,2732070,0,0x0,8
tick,0x7ff86ea82704,2734059,0,0x0,8
tick,0x7ff86ea82704,2736009,0,0x0,8
tick,0x7ff86ea82704,2738077,0,0x0,8
tick,0x7ff86ea82704,2740240,0,0x0,8
tick,0x7ff86ea82704,2742014,0,0x0,8
tick,0x7ff86ea82704,2744123,0,0x0,8
tick,0x7ff86ea82704,2746055,0,0x0,8
tick,0x7ff86ea82704,2747989,0,0x0,8
tick,0x7ff86ea82704,2750046,0,0x0,8
tick,0x7ff86ea82704,2752046,0,0x0,8
tick,0x7ff86ea82704,2754041,0,0x0,8
tick,0x7ff86ea82704,2756454,0,0x0,8
tick,0x7ff86ea82704,2758055,0,0x0,8
tick,0x7ff86ea82704,2759970,0,0x0,8
tick,0x7ff86ea82704,2762076,0,0x0,8
tick,0x7ff86ea82704,2763976,0,0x0,8
tick,0x7ff86ea82704,2765927,0,0x0,8
tick,0x7ff86ea82704,2767935,0,0x0,8
tick,0x7ff86ea82704,2769967,0,0x0,8
tick,0x7ff86ea82704,2771989,0,0x0,8
tick,0x7ff86ea82704,2773943,0,0x0,8
tick,0x7ff86ea82704,2775922,0,0x0,8
tick,0x7ff86ea82704,2778029,0,0x0,8
tick,0x7ff86ea82704,2779879,0,0x0,8
tick,0x7ff86ea82704,2781903,0,0x0,8
tick,0x7ff86ea82704,2783943,0,0x0,8
tick,0x7ff86ea82704,2785898,0,0x0,8
tick,0x7ff86ea82704,2787981,0,0x0,8
tick,0x7ff86ea82704,2789846,0,0x0,8
tick,0x7ff86ea82704,2791922,0,0x0,8
tick,0x7ff86ea82704,2793791,0,0x0,8
tick,0x7ff86ea82704,2795900,0,0x0,8
tick,0x7ff86ea82704,2797811,0,0x0,8
tick,0x7ff86ea82704,2799934,0,0x0,8
tick,0x7ff86ea82704,2801775,0,0x0,8
tick,0x7ff86ea82704,2803911,0,0x0,8
tick,0x7ff86ea82704,2805900,0,0x0,8
tick,0x7ff86ea82704,2807827,0,0x0,8
tick,0x7ff86ea82704,2809896,0,0x0,8
tick,0x7ff86ea82704,2811793,0,0x0,8
tick,0x7ff86ea82704,2813875,0,0x0,8
tick,0x7ff86ea82704,2815817,0,0x0,8
tick,0x7ff86ea82704,2817923,0,0x0,8
tick,0x7ff86ea82704,2819798,0,0x0,8
tick,0x7ff86ea82704,2821848,0,0x0,8
tick,0x7ff86ea82704,2823771,0,0x0,8
tick,0x7ff86ea82704,2825918,0,0x0,8
tick,0x7ff86ea82704,2827790,0,0x0,8
tick,0x7ff86ea82704,2829966,0,0x0,8
tick,0x7ff86ea82704,2831741,0,0x0,8
tick,0x7ff86ea82704,2833893,0,0x0,8
tick,0x7ff86ea82704,2835689,0,0x0,8
tick,0x7ff86ea82704,2837800,0,0x0,8
tick,0x7ff86ea82704,2839952,0,0x0,8
tick,0x7ff86ea82704,2841802,0,0x0,8
tick,0x7ff86ea82704,2843703,0,0x0,8
tick,0x7ff86ea82704,2845836,0,0x0,8
tick,0x7ff86ea82704,2847709,0,0x0,8
tick,0x7ff86ea82704,2849927,0,0x0,8
tick,0x7ff86ea82704,2852007,0,0x0,8
tick,0x7ff86ea82704,2854201,0,0x0,8
tick,0x7ff86ea82704,2855665,0,0x0,8
tick,0x7ff86ea82704,2857965,0,0x0,8
tick,0x7ff86ea82704,2859706,0,0x0,8
tick,0x7ff86ea82704,2861908,0,0x0,8
tick,0x7ff86ea82704,2863644,0,0x0,8
tick,0x7ff86ea82704,2865866,0,0x0,8
tick,0x7ff86ea82704,2867697,0,0x0,8
tick,0x7ff86ea82704,2869919,0,0x0,8
tick,0x7ff86ea82704,2871787,0,0x0,8
tick,0x7ff86ea82704,2873741,0,0x0,8
tick,0x7ff86ea82704,2875676,0,0x0,8
tick,0x7ff86ea82704,2877631,0,0x0,8
tick,0x7ff86ea82704,2879784,0,0x0,8
tick,0x7ff86ea82704,2881557,0,0x0,8
tick,0x7ff86ea82704,2883765,0,0x0,8
tick,0x7ff86ea82704,2885598,0,0x0,8
tick,0x7ff86ea82704,2887748,0,0x0,8
tick,0x7ff86ea82704,2889559,0,0x0,8
tick,0x7ff86ea82704,2891571,0,0x0,8
tick,0x7ff86ea82704,2893697,0,0x0,8
tick,0x7ff86ea82704,2895615,0,0x0,8
tick,0x7ff86ea82704,2897642,0,0x0,8
tick,0x7ff86ea82704,2899591,0,0x0,8
tick,0x7ff86ea82704,2901513,0,0x0,8
tick,0x7ff86ea82704,2903777,0,0x0,8
tick,0x7ff86ea82704,2905555,0,0x0,8
tick,0x7ff86ea82704,2907612,0,0x0,8
tick,0x7ff86ea82704,2909512,0,0x0,8
tick,0x7ff86ea82704,2911577,0,0x0,8
tick,0x7ff86ea82704,2913488,0,0x0,8
tick,0x7ff86ea82704,2915577,0,0x0,8
tick,0x7ff86ea82704,2917445,0,0x0,8
tick,0x7ff86ea82704,2919642,0,0x0,8
tick,0x7ff86ea82704,2921525,0,0x0,8
tick,0x7ff86ea82704,2923503,0,0x0,8
tick,0x7ff86ea82704,2925542,0,0x0,8
tick,0x7ff86ea82704,2927590,0,0x0,8
tick,0x7ff86ea82704,2929535,0,0x0,8
tick,0x7ff86ea82704,2931521,0,0x0,8
tick,0x7ff86ea82704,2933496,0,0x0,8
tick,0x7ff86ea82704,2935525,0,0x0,8
tick,0x7ff86ea82704,2937607,0,0x0,8
tick,0x7ff86ea82704,2939767,0,0x0,8
tick,0x7ff86ea82704,2941449,0,0x0,8
tick,0x7ff86ea82704,2943569,0,0x0,8
tick,0x7ff86ea82704,2945496,0,0x0,8
tick,0x7ff86ea82704,2947408,0,0x0,8
tick,0x7ff86ea82704,2949623,0,0x0,8
tick,0x7ff86ea82704,2951602,0,0x0,8
tick,0x7ff86ea82704,2953524,0,0x0,8
tick,0x7ff86ea82704,2955526,0,0x0,8
tick,0x7ff86ea82704,2957416,0,0x0,8
tick,0x7ff86ea82704,2959707,0,0x0,8
tick,0x7ff86ea82704,2961788,0,0x0,8
tick,0x7ff86ea82704,2963792,0,0x0,8
tick,0x7ff86ea82704,2965499,0,0x0,8
tick,0x7ff86ea82704,2967404,0,0x0,8
tick,0x7ff86ea82704,2969455,0,0x0,8
tick,0x7ff86ea82704,2971517,0,0x0,8
tick,0x7ff86ea82704,2973386,0,0x0,8
tick,0x7ff86ea82704,2975398,0,0x0,8
tick,0x7ff86ea82704,2977400,0,0x0,8
tick,0x7ff86ea82704,2979364,0,0x0,8
tick,0x7ff86ea82704,2981369,0,0x0,8
tick,0x7ff86ea82704,2983390,0,0x0,8
tick,0x7ff86ea82704,2985373,0,0x0,8
tick,0x7ff86ea82704,2987409,0,0x0,8
tick,0x7ff86ea82704,2989342,0,0x0,8
tick,0x7ff86ea82704,2991542,0,0x0,8
tick,0x7ff86ea82704,2993299,0,0x0,8
tick,0x7ff86ea82704,2995510,0,0x0,8
tick,0x7ff86ea82704,2997283,0,0x0,8
tick,0x7ff86ea82704,2999421,0,0x0,8
tick,0x7ff86ea82704,3001606,0,0x0,8
tick,0x7ff86ea82704,3003396,0,0x0,8
tick,0x7ff86ea82704,3005310,0,0x0,8
tick,0x7ff86ea82704,3007324,0,0x0,8
tick,0x7ff86ea82704,3009326,0,0x0,8
tick,0x7ff86ea82704,3011317,0,0x0,8
tick,0x7ff86ea82704,3013383,0,0x0,8
tick,0x7ff86ea82704,3015357,0,0x0,8
tick,0x7ff86ea82704,3017494,0,0x0,8
tick,0x7ff86ea82704,3019511,0,0x0,8
tick,0x7ff86ea82704,3021433,0,0x0,8
tick,0x7ff86ea82704,3023351,0,0x0,8
tick,0x7ff86ea82704,3025258,0,0x0,8
tick,0x7ff86ea82704,3027342,0,0x0,8
tick,0x7ff86ea82704,3029206,0,0x0,8
tick,0x7ff86ea82704,3031323,0,0x0,8
tick,0x7ff86ea82704,3033361,0,0x0,8
tick,0x7ff86ea82704,3035249,0,0x0,8
tick,0x7ff86ea82704,3037331,0,0x0,8
tick,0x7ff86ea82704,3039505,0,0x0,8
tick,0x7ff86ea82704,3041298,0,0x0,8
tick,0x7ff86ea82704,3043669,0,0x0,8
tick,0x7ff86ea82704,3045273,0,0x0,8
tick,0x7ff86ea82704,3047399,0,0x0,8
tick,0x7ff86ea82704,3049350,0,0x0,8
tick,0x7ff86ea82704,3051429,0,0x0,8
tick,0x7ff86ea82704,3053291,0,0x0,8
tick,0x7ff86ea82704,3055315,0,0x0,8
tick,0x7ff86ea82704,3057258,0,0x0,8
tick,0x7ff86ea82704,3059203,0,0x0,8
tick,0x7ff86ea82704,3061126,0,0x0,8
tick,0x7ff86ea82704,3063429,0,0x0,8
tick,0x7ff86ea82704,3065145,0,0x0,8
tick,0x7ff86ea82704,3067453,0,0x0,8
tick,0x7ff86ea82704,3069080,0,0x0,8
tick,0x7ff86ea82704,3071217,0,0x0,8
tick,0x7ff86ea82704,3073156,0,0x0,8
tick,0x7ff86ea82704,3075177,0,0x0,8
tick,0x7ff86ea82704,3077274,0,0x0,8
tick,0x7ff86ea82704,3079065,0,0x0,8
tick,0x7ff86ea82704,3081183,0,0x0,8
tick,0x7ff86ea82704,3083111,0,0x0,8
tick,0x7ff86ea82704,3085104,0,0x0,8
tick,0x7ff86ea82704,3087100,0,0x0,8
tick,0x7ff86ea82704,3089249,0,0x0,8
tick,0x7ff86ea82704,3091027,0,0x0,8
tick,0x7ff86ea82704,3093315,0,0x0,8
tick,0x7ff86ea82704,3095072,0,0x0,8
tick,0x7ff86ea82704,3097038,0,0x0,8
tick,0x7ff86ea82704,3099097,0,0x0,8
tick,0x7ff86ea82704,3101001,0,0x0,8
tick,0x7ff86ea82704,3103039,0,0x0,8
tick,0x7ff86ea82704,3105027,0,0x0,8
tick,0x7ff86ea82704,3107064,0,0x0,8
tick,0x7ff86ea82704,3108980,0,0x0,8
tick,0x7ff86ea82704,3111089,0,0x0,8
tick,0x7ff86ea82704,3113178,0,0x0,8
tick,0x7ff86ea82704,3115083,0,0x0,8
tick,0x7ff86ea82704,3117055,0,0x0,8
tick,0x7ff86ea82704,3119053,0,0x0,8
tick,0x7ff86ea82704,3121383,0,0x0,8
tick,0x7ff86ea82704,3123106,0,0x0,8
tick,0x7ff86ea82704,3125362,0,0x0,8
tick,0x7ff86ea82704,3127200,0,0x0,8
tick,0x7ff86ea82704,3129084,0,0x0,8
tick,0x7ff86ea82704,3131012,0,0x0,8
tick,0x7ff86ea82704,3133181,0,0x0,8
tick,0x7ff86ea82704,3135114,0,0x0,8
tick,0x7ff86ea82704,3136996,0,0x0,8
tick,0x7ff86ea82704,3139053,0,0x0,8
tick,0x7ff86ea82704,3141036,0,0x0,8
tick,0x7ff86ea82704,3142935,0,0x0,8
tick,0x7ff86ea82704,3145115,0,0x0,8
tick,0x7ff86ea82704,3146960,0,0x0,8
tick,0x7ff86ea82704,3148984,0,0x0,8
tick,0x7ff86ea82704,3150862,0,0x0,8
tick,0x7ff86ea82704,3153030,0,0x0,8
tick,0x7ff86ea82704,3154937,0,0x0,8
tick,0x7ff86ea82704,3157077,0,0x0,8
tick,0x7ff86ea82704,3159177,0,0x0,8
tick,0x7ff86ea82704,3161663,0,0x0,8
tick,0x7ff86ea82704,3163046,0,0x0,8
tick,0x7ff86ea82704,3165121,0,0x0,8
tick,0x7ff86ea82704,3167098,0,0x0,8
tick,0x7ff86ea82704,3169113,0,0x0,8
tick,0x7ff86ea82704,3170903,0,0x0,8
tick,0x7ff86ea82704,3173083,0,0x0,8
tick,0x7ff86ea82704,3174972,0,0x0,8
tick,0x7ff86ea82704,3176913,0,0x0,8
tick,0x7ff86ea82704,3178972,0,0x0,8
tick,0x7ff86ea82704,3181080,0,0x0,8
tick,0x7ff86ea82704,3183006,0,0x0,8
tick,0x7ff86ea82704,3185066,0,0x0,8
tick,0x7ff86ea82704,3187167,0,0x0,8
tick,0x7ff86ea82704,3188796,0,0x0,8
tick,0x7ff86ea82704,3190963,0,0x0,8
tick,0x7ff86ea82704,3193043,0,0x0,8
tick,0x7ff86ea82704,3194908,0,0x0,8
tick,0x7ff86ea82704,3197405,0,0x0,8
tick,0x7ff86ea82704,3198941,0,0x0,8
tick,0x7ff86ea82704,3201111,0,0x0,8
tick,0x7ff86ea82704,3202875,0,0x0,8
tick,0x7ff86ea82704,3204829,0,0x0,8
tick,0x7ff86ea82704,3206940,0,0x0,8
tick,0x7ff86ea82704,3209223,0,0x0,8
tick,0x7ff86ea82704,3210769,0,0x0,8
tick,0x7ff86ea82704,3212882,0,0x0,8
tick,0x7ff86ea82704,3214863,0,0x0,8
tick,0x7ff86ea82704,3216885,0,0x0,8
tick,0x7ff86ea82704,3218765,0,0x0,8
tick,0x7ff86ea82704,3220806,0,0x0,8
tick,0x7ff86ea82704,3222836,0,0x0,8
tick,0x7ff86ea82704,3225030,0,0x0,8
tick,0x7ff86ea82704,3227073,0,0x0,8
tick,0x7ff86ea82704,3228782,0,0x0,8
tick,0x7ff86ea82704,3230704,0,0x0,8
tick,0x7ff86ea82704,3232687,0,0x0,8
tick,0x7ff86ea82704,3234836,0,0x0,8
tick,0x7ff86ea82704,3236688,0,0x0,8
tick,0x7ff86ea82704,3238784,0,0x0,8
tick,0x7ff86ea82704,3240585,0,0x0,8
tick,0x7ff86ea82704,3242739,0,0x0,8
tick,0x7ff86ea82704,3244635,0,0x0,8
tick,0x7ff86ea82704,3246689,0,0x0,8
tick,0x7ff86ea82704,3248586,0,0x0,8
tick,0x7ff86ea82704,3250660,0,0x0,8
tick,0x7ff86ea82704,3252820,0,0x0,8
tick,0x7ff86ea82704,3254598,0,0x0,8
tick,0x7ff86ea82704,3256663,0,0x0,8
tick,0x7ff86ea82704,3258713,0,0x0,8
tick,0x7ff86ea82704,3260628,0,0x0,8
tick,0x7ff86ea82704,3262932,0,0x0,8
tick,0x7ff86ea82704,3264629,0,0x0,8
tick,0x7ff86ea82704,3266663,0,0x0,8
tick,0x7ff86ea82704,3268662,0,0x0,8
tick,0x7ff86ea82704,3270762,0,0x0,8
tick,0x7ff86ea82704,3272776,0,0x0,8
tick,0x7ff86ea82704,3274586,0,0x0,8
tick,0x7ff86ea82704,3276659,0,0x0,8
tick,0x7ff86ea82704,3278515,0,0x0,8
tick,0x7ff86ea82704,3280661,0,0x0,8
tick,0x7ff86ea82704,3282730,0,0x0,8
tick,0x7ff86ea82704,3284649,0,0x0,8
tick,0x7ff86ea82704,3286457,0,0x0,8
tick,0x7ff86ea82704,3288531,0,0x0,8
tick,0x7ff86ea82704,3290500,0,0x0,8
tick,0x7ff86ea82704,3292541,0,0x0,8
tick,0x7ff86ea82704,3294514,0,0x0,8
tick,0x7ff86ea82704,3296531,0,0x0,8
tick,0x7ff86ea82704,3298480,0,0x0,8
tick,0x7ff86ea82704,3300517,0,0x0,8
tick,0x7ff86ea82704,3302543,0,0x0,8
tick,0x7ff86ea82704,3304777,0,0x0,8
tick,0x7ff86ea82704,3306507,0,0x0,8
tick,0x7ff86ea82704,3308567,0,0x0,8
tick,0x7ff86ea82704,3310473,0,0x0,8
tick,0x7ff86ea82704,3312453,0,0x0,8
tick,0x7ff86ea82704,3314493,0,0x0,8
tick,0x7ff86ea82704,3316578,0,0x0,8
tick,0x7ff86ea82704,3318701,0,0x0,8
tick,0x7ff86ea82704,3320398,0,0x0,8
tick,0x7ff86ea82704,3322444,0,0x0,8
tick,0x7ff86ea82704,3324438,0,0x0,8
tick,0x7ff86ea82704,3326727,0,0x0,8
tick,0x7ff86ea82704,3328529,0,0x0,8
tick,0x7ff86ea82704,3330396,0,0x0,8
tick,0x7ff86ea82704,3332510,0,0x0,8
tick,0x7ff86ea82704,3334403,0,0x0,8
tick,0x7ff86ea82704,3336437,0,0x0,8
tick,0x7ff86ea82704,3338356,0,0x0,8
tick,0x7ff86ea82704,3340433,0,0x0,8
tick,0x7ff86ea82704,3342387,0,0x0,8
tick,0x7ff86ea82704,3344393,0,0x0,8
tick,0x7ff86ea82704,3346374,0,0x0,8
tick,0x7ff86ea82704,3348446,0,0x0,8
tick,0x7ff86ea82704,3350468,0,0x0,8
tick,0x7ff86ea82704,3352431,0,0x0,8
tick,0x7ff86ea82704,3354355,0,0x0,8
tick,0x7ff86ea82704,3356981,0,0x0,8
tick,0x7ff86ea82704,3358537,0,0x0,8
tick,0x7ff86ea82704,3360344,0,0x0,8
tick,0x7ff86ea82704,3362307,0,0x0,8
tick,0x7ff86ea82704,3364341,0,0x0,8
tick,0x7ff86ea82704,3366459,0,0x0,8
tick,0x7ff86ea82704,3368322,0,0x0,8
tick,0x7ff86ea82704,3370478,0,0x0,8
tick,0x7ff86ea82704,3372319,0,0x0,8
tick,0x7ff86ea82704,3374316,0,0x0,8
tick,0x7ff86ea82704,3376263,0,0x0,8
tick,0x7ff86ea82704,3378290,0,0x0,8
tick,0x7ff86ea82704,3380233,0,0x0,8
tick,0x7ff86ea82704,3382477,0,0x0,8
tick,0x7ff86ea82704,3384471,0,0x0,8
tick,0x7ff86ea82704,3386977,0,0x0,8
tick,0x7ff86ea82704,3388242,0,0x0,8
tick,0x7ff86ea82704,3390305,0,0x0,8
tick,0x7ff86ea82704,3392341,0,0x0,8
tick,0x7ff86ea82704,3394250,0,0x0,8
tick,0x7ff86ea82704,3396201,0,0x0,8
tick,0x7ff86ea82704,3398345,0,0x0,8
tick,0x7ff86ea82704,3400237,0,0x0,8
tick,0x7ff86ea82704,3402194,0,0x0,8
tick,0x7ff86ea82704,3404186,0,0x0,8
tick,0x7ff86ea82704,3406289,0,0x0,8
tick,0x7ff86ea82704,3408332,0,0x0,8
tick,0x7ff86ea82704,3410398,0,0x0,8
tick,0x7ff86ea82704,3412240,0,0x0,8
tick,0x7ff86ea82704,3414190,0,0x0,8
tick,0x7ff86ea82704,3416101,0,0x0,8
tick,0x7ff86ea82704,3418151,0,0x0,8
tick,0x7ff86ea82704,3420145,0,0x0,8
tick,0x7ff86ea82704,3422160,0,0x0,8
tick,0x7ff86ea82704,3424102,0,0x0,8
tick,0x7ff86ea82704,3426124,0,0x0,8
tick,0x7ff86ea82704,3428102,0,0x0,8
tick,0x7ff86ea82704,3430062,0,0x0,8
tick,0x7ff86ea82704,3432219,0,0x0,8
tick,0x7ff86ea82704,3434204,0,0x0,8
tick,0x7ff86ea82704,3436048,0,0x0,8
tick,0x7ff86ea82704,3438195,0,0x0,8
tick,0x7ff86ea82704,3440052,0,0x0,8
tick,0x7ff86ea82704,3442073,0,0x0,8
tick,0x7ff86ea82704,3444061,0,0x0,8
tick,0x7ff86ea82704,3446183,0,0x0,8
tick,0x7ff86ea82704,3448183,0,0x0,8
tick,0x7ff86ea82704,3450126,0,0x0,8
tick,0x7ff86ea82704,3452219,0,0x0,8
tick,0x7ff86ea82704,3454286,0,0x0,8
tick,0x7ff86ea82704,3456119,0,0x0,8
tick,0x7ff86ea82704,3458089,0,0x0,8
tick,0x7ff86ea82704,3460173,0,0x0,8
tick,0x7ff86ea82704,3462051,0,0x0,8
tick,0x7ff86ea82704,3464147,0,0x0,8
tick,0x7ff86ea82704,3465999,0,0x0,8
tick,0x7ff86ea82704,3468023,0,0x0,8
tick,0x7ff86ea82704,3470046,0,0x0,8
tick,0x7ff86ea82704,3471936,0,0x0,8
tick,0x7ff86ea82704,3473958,0,0x0,8
tick,0x7ff86ea82704,3476006,0,0x0,8
tick,0x7ff86ea82704,3477985,0,0x0,8
tick,0x7ff86ea82704,3479926,0,0x0,8
tick,0x7ff86ea82704,3482009,0,0x0,8
tick,0x7ff86ea82704,3484092,0,0x0,8
tick,0x7ff86ea82704,3485966,0,0x0,8
tick,0x7ff86ea82704,3488020,0,0x0,8
tick,0x7ff86ea82704,3489904,0,0x0,8
tick,0x7ff86ea82704,3491942,0,0x0,8
tick,0x7ff86ea82704,3494009,0,0x0,8
tick,0x7ff86ea82704,3495953,0,0x0,8
tick,0x7ff86ea82704,3498082,0,0x0,8
tick,0x7ff86ea82704,3500045,0,0x0,8
tick,0x7ff86ea82704,3501991,0,0x0,8
tick,0x7ff86ea82704,3503934,0,0x0,8
tick,0x7ff86ea82704,3505927,0,0x0,8
tick,0x7ff86ea82704,3507875,0,0x0,8
tick,0x7ff86ea82704,3509971,0,0x0,8
tick,0x7ff86ea82704,3511892,0,0x0,8
tick,0x7ff86ea82704,3513953,0,0x0,8
tick,0x7ff86ea82704,3515900,0,0x0,8
tick,0x7ff86ea82704,3517912,0,0x0,8
tick,0x7ff86ea82704,3519855,0,0x0,8
tick,0x7ff86ea82704,3521976,0,0x0,8
tick,0x7ff86ea82704,3523855,0,0x0,8
tick,0x7ff86ea82704,3525863,0,0x0,8
tick,0x7ff86ea82704,3527828,0,0x0,8
tick,0x7ff86ea82704,3529846,0,0x0,8
tick,0x7ff86ea82704,3531855,0,0x0,8
tick,0x7ff86ea82704,3534076,0,0x0,8
tick,0x7ff86ea82704,3535964,0,0x0,8
tick,0x7ff86ea82704,3538439,0,0x0,8
tick,0x7ff86ea82704,3539800,0,0x0,8
tick,0x7ff86ea82704,3541897,0,0x0,8
tick,0x7ff86ea82704,3543893,0,0x0,8
tick,0x7ff86ea82704,3546377,0,0x0,8
tick,0x7ff86ea82704,3547992,0,0x0,8
tick,0x7ff86ea82704,3549966,0,0x0,8
tick,0x7ff86ea82704,3552071,0,0x0,8
tick,0x7ff86ea82704,3554134,0,0x0,8
tick,0x7ff86ea82704,3556281,0,0x0,8
tick,0x7ff86ea82704,3557896,0,0x0,8
tick,0x7ff86ea82704,3560371,0,0x0,8
tick,0x7ff86ea82704,3563598,0,0x0,8
tick,0x7ff86ea82704,3564691,0,0x0,8
tick,0x7ff86ea82704,3566624,0,0x0,8
tick,0x7ff86ea82704,3568762,0,0x0,8
tick,0x7ff86ea82704,3570830,0,0x0,8
tick,0x7ff86ea82704,3572992,0,0x0,8
tick,0x7ff86ea82704,3574713,0,0x0,8
tick,0x7ff86ea82704,3576954,0,0x0,8
tick,0x7ff86ea82704,3579077,0,0x0,8
tick,0x7ff86ea82704,3580624,0,0x0,8
tick,0x7ff86ea82704,3582681,0,0x0,8
tick,0x7ff86ea82704,3584631,0,0x0,8
tick,0x7ff86ea82704,3586729,0,0x0,8
tick,0x7ff86ea82704,3588896,0,0x0,8
tick,0x7ff86ea82704,3590607,0,0x0,8
tick,0x7ff86ea82704,3592559,0,0x0,8
tick,0x7ff86ea82704,3594668,0,0x0,8
tick,0x7ff86ea82704,3596627,0,0x0,8
tick,0x7ff86ea82704,3598652,0,0x0,8
tick,0x7ff86ea82704,3600550,0,0x0,8
tick,0x7ff86ea82704,3602732,0,0x0,8
tick,0x7ff86ea82704,3604577,0,0x0,8
tick,0x7ff86ea82704,3606580,0,0x0,8
tick,0x7ff86ea82704,3608556,0,0x0,8
tick,0x7ff86ea82704,3610713,0,0x0,8
tick,0x7ff86ea82704,3612606,0,0x0,8
tick,0x7ff86ea82704,3614621,0,0x0,8
tick,0x7ff86ea82704,3616876,0,0x0,8
tick,0x7ff86ea82704,3618744,0,0x0,8
tick,0x7ff86ea82704,3620551,0,0x0,8
tick,0x7ff86ea82704,3622542,0,0x0,8
tick,0x7ff86ea82704,3624730,0,0x0,8
tick,0x7ff86ea82704,3626530,0,0x0,8
tick,0x7ff86ea82704,3628578,0,0x0,8
tick,0x7ff86ea82704,3630815,0,0x0,8
tick,0x7ff86ea82704,3632650,0,0x0,8
tick,0x7ff86ea82704,3634608,0,0x0,8
tick,0x7ff86ea82704,3636438,0,0x0,8
tick,0x7ff86ea82704,3638834,0,0x0,8
tick,0x7ff86ea82704,3640583,0,0x0,8
tick,0x7ff86ea82704,3642634,0,0x0,8
tick,0x7ff86ea82704,3644497,0,0x0,8
tick,0x7ff86ea82704,3646578,0,0x0,8
tick,0x7ff86ea82704,3648467,0,0x0,8
tick,0x7ff86ea82704,3650681,0,0x0,8
tick,0x7ff86ea82704,3652692,0,0x0,8
tick,0x7ff86ea82704,3654619,0,0x0,8
tick,0x7ff86ea82704,3656564,0,0x0,8
tick,0x7ff86ea82704,3658535,0,0x0,8
tick,0x7ff86ea82704,3660567,0,0x0,8
tick,0x7ff86ea82704,3662843,0,0x0,8
tick,0x7ff86ea82704,3664359,0,0x0,8
tick,0x7ff86ea82704,3666466,0,0x0,8
tick,0x7ff86ea82704,3668355,0,0x0,8
tick,0x7ff86ea82704,3670900,0,0x0,8
tick,0x7ff86ea82704,3672382,0,0x0,8
tick,0x7ff86ea82704,3674511,0,0x0,8
tick,0x7ff86ea82704,3676389,0,0x0,8
tick,0x7ff86ea82704,3678447,0,0x0,8
tick,0x7ff86ea82704,3680480,0,0x0,8
tick,0x7ff86ea82704,3682503,0,0x0,8
tick,0x7ff86ea82704,3684354,0,0x0,8
tick,0x7ff86ea82704,3686317,0,0x0,8
tick,0x7ff86ea82704,3688723,0,0x0,8
tick,0x7ff86ea82704,3690307,0,0x0,8
tick,0x7ff86ea82704,3692425,0,0x0,8
tick,0x7ff86ea82704,3694378,0,0x0,8
tick,0x7ff86ea82704,3696318,0,0x0,8
tick,0x7ff86ea82704,3698367,0,0x0,8
tick,0x7ff86ea82704,3700398,0,0x0,8
tick,0x7ff86ea82704,3702344,0,0x0,8
tick,0x7ff86ea82704,3704351,0,0x0,8
tick,0x7ff86ea82704,3706391,0,0x0,8
tick,0x7ff86ea82704,3708365,0,0x0,8
tick,0x7ff86ea82704,3710302,0,0x0,8
tick,0x7ff86ea82704,3712347,0,0x0,8
tick,0x7ff86ea82704,3714258,0,0x0,8
tick,0x7ff86ea82704,3716349,0,0x0,8
tick,0x7ff86ea82704,3718264,0,0x0,8
tick,0x7ff86ea82704,3720522,0,0x0,8
tick,0x7ff86ea82704,3722314,0,0x0,8
tick,0x7ff86ea82704,3724292,0,0x0,8
tick,0x7ff86ea82704,3726274,0,0x0,8
tick,0x7ff86ea82704,3728239,0,0x0,8
tick,0x7ff86ea82704,3730182,0,0x0,8
tick,0x7ff86ea82704,3732227,0,0x0,8
tick,0x7ff86ea82704,3734172,0,0x0,8
tick,0x7ff86ea82704,3736279,0,0x0,8
tick,0x7ff86ea82704,3738271,0,0x0,8
tick,0x7ff86ea82704,3740292,0,0x0,8
tick,0x7ff86ea82704,3742175,0,0x0,8
tick,0x7ff86ea82704,3744221,0,0x0,8
tick,0x7ff86ea82704,3746166,0,0x0,8
tick,0x7ff86ea82704,3748183,0,0x0,8
tick,0x7ff86ea82704,3750208,0,0x0,8
tick,0x7ff86ea82704,3752169,0,0x0,8
tick,0x7ff86ea82704,3754209,0,0x0,8
tick,0x7ff86ea82704,3756207,0,0x0,8
tick,0x7ff86ea82704,3758099,0,0x0,8
tick,0x7ff86ea82704,3760170,0,0x0,8
tick,0x7ff86ea82704,3762116,0,0x0,8
tick,0x7ff86ea82704,3764174,0,0x0,8
tick,0x7ff86ea82704,3766071,0,0x0,8
tick,0x7ff86ea82704,3768207,0,0x0,8
tick,0x7ff86ea82704,3770064,0,0x0,8
tick,0x7ff86ea82704,3772123,0,0x0,8
tick,0x7ff86ea82704,3774060,0,0x0,8
tick,0x7ff86ea82704,3776261,0,0x0,8
tick,0x7ff86ea82704,3778184,0,0x0,8
tick,0x7ff86ea82704,3780172,0,0x0,8
tick,0x7ff86ea82704,3782100,0,0x0,8
tick,0x7ff86ea82704,3784119,0,0x0,8
tick,0x7ff86ea82704,3786107,0,0x0,8
tick,0x7ff86ea82704,3788124,0,0x0,8
tick,0x7ff86ea82704,3790036,0,0x0,8
tick,0x7ff86ea82704,3792082,0,0x0,8
tick,0x7ff86ea82704,3794054,0,0x0,8
tick,0x7ff86ea82704,3796031,0,0x0,8
tick,0x7ff86ea82704,3798082,0,0x0,8
tick,0x7ff86ea82704,3800076,0,0x0,8
tick,0x7ff86ea82704,3802039,0,0x0,8
tick,0x7ff86ea82704,3804077,0,0x0,8
tick,0x7ff86ea82704,3806206,0,0x0,8
tick,0x7ff86ea82704,3808014,0,0x0,8
tick,0x7ff86ea82704,3809994,0,0x0,8
tick,0x7ff86ea82704,3815118,0,0x0,8
tick,0x7ff86ea82704,3817240,0,0x0,8
tick,0x7ff86ea82704,3819106,0,0x0,8
tick,0x7ff86ea82704,3821124,0,0x0,8
tick,0x7ff86ea82704,3823059,0,0x0,8
tick,0x7ff86ea82704,3825052,0,0x0,8
tick,0x7ff86ea82704,3827055,0,0x0,8
tick,0x7ff86ea82704,3829138,0,0x0,8
tick,0x7ff86ea82704,3831052,0,0x0,8
tick,0x7ff86ea82704,3833166,0,0x0,8
tick,0x7ff86ea82704,3835160,0,0x0,8
tick,0x7ff86ea82704,3837130,0,0x0,8
tick,0x7ff86ea82704,3839089,0,0x0,8
tick,0x7ff86ea82704,3841024,0,0x0,8
tick,0x7ff86ea82704,3843050,0,0x0,8
tick,0x7ff86ea82704,3844981,0,0x0,8
tick,0x7ff86ea82704,3847014,0,0x0,8
tick,0x7ff86ea82704,3849016,0,0x0,8
tick,0x7ff86ea82704,3851049,0,0x0,8
tick,0x7ff86ea82704,3853081,0,0x0,8
tick,0x7ff86ea82704,3855009,0,0x0,8
tick,0x7ff86ea82704,3857013,0,0x0,8
tick,0x7ff86ea82704,3859076,0,0x0,8
tick,0x7ff86ea82704,3861011,0,0x0,8
tick,0x7ff86ea82704,3862951,0,0x0,8
tick,0x7ff86ea82704,3865033,0,0x0,8
tick,0x7ff86ea82704,3866937,0,0x0,8
tick,0x7ff86ea82704,3868927,0,0x0,8
tick,0x7ff86ea82704,3870932,0,0x0,8
tick,0x7ff86ea82704,3873068,0,0x0,8
tick,0x7ff86ea82704,3874921,0,0x0,8
tick,0x7ff86ea82704,3876996,0,0x0,8
tick,0x7ff86ea82704,3878974,0,0x0,8
tick,0x7ff86ea82704,3881014,0,0x0,8
tick,0x7ff86ea82704,3882939,0,0x0,8
tick,0x7ff86ea82704,3885146,0,0x0,8
tick,0x7ff86ea82704,3886864,0,0x0,8
tick,0x7ff86ea82704,3889073,0,0x0,8
tick,0x7ff86ea82704,3890859,0,0x0,8
tick,0x7ff86ea82704,3892940,0,0x0,8
tick,0x7ff86ea82704,3894895,0,0x0,8
tick,0x7ff86ea82704,3897166,0,0x0,8
tick,0x7ff86ea82704,3899048,0,0x0,8
tick,0x7ff86ea82704,3900879,0,0x0,8
tick,0x7ff86ea82704,3902945,0,0x0,8
tick,0x7ff86ea82704,3904831,0,0x0,8
tick,0x7ff86ea82704,3906890,0,0x0,8
tick,0x7ff86ea82704,3908792,0,0x0,8
tick,0x7ff86ea82704,3910911,0,0x0,8
tick,0x7ff86ea82704,3912767,0,0x0,8
tick,0x7ff86ea82704,3914841,0,0x0,8
tick,0x7ff86ea82704,3916838,0,0x0,8
tick,0x7ff86ea82704,3918871,0,0x0,8
tick,0x7ff86ea82704,3921029,0,0x0,8
tick,0x7ff86ea82704,3922926,0,0x0,8
tick,0x7ff86ea82704,3924948,0,0x0,8
tick,0x7ff86ea82704,3926785,0,0x0,8
tick,0x7ff86ea82704,3928858,0,0x0,8
tick,0x7ff86ea82704,3930813,0,0x0,8
tick,0x7ff86ea82704,3932717,0,0x0,8
tick,0x7ff86ea82704,3934909,0,0x0,8
tick,0x7ff86ea82704,3936789,0,0x0,8
tick,0x7ff86ea82704,3938958,0,0x0,8
tick,0x7ff86ea82704,3940719,0,0x0,8
tick,0x7ff86ea82704,3942774,0,0x0,8
tick,0x7ff86ea82704,3944915,0,0x0,8
tick,0x7ff86ea82704,3946780,0,0x0,8
tick,0x7ff86ea82704,3948778,0,0x0,8
tick,0x7ff86ea82704,3950806,0,0x0,8
tick,0x7ff86ea82704,3952798,0,0x0,8
tick,0x7ff86ea82704,3954693,0,0x0,8
tick,0x7ff86ea82704,3957238,0,0x0,8
tick,0x7ff86ea82704,3958838,0,0x0,8
tick,0x7ff86ea82704,3960703,0,0x0,8
tick,0x7ff86ea82704,3962761,0,0x0,8
tick,0x7ff86ea82704,3964757,0,0x0,8
tick,0x7ff86ea82704,3966814,0,0x0,8
tick,0x7ff86ea82704,3968678,0,0x0,8
tick,0x7ff86ea82704,3970762,0,0x0,8
tick,0x7ff86ea82704,3972694,0,0x0,8
tick,0x7ff86ea82704,3974685,0,0x0,8
tick,0x7ff86ea82704,3976731,0,0x0,8
tick,0x7ff86ea82704,3978609,0,0x0,8
tick,0x7ff86ea82704,3980661,0,0x0,8
tick,0x7ff86ea82704,3982681,0,0x0,8
tick,0x7ff86ea82704,3984707,0,0x0,8
tick,0x7ff86ea82704,3986650,0,0x0,8
tick,0x7ff86ea82704,3988683,0,0x0,8
tick,0x7ff86ea82704,3990649,0,0x0,8
tick,0x7ff86ea82704,3992600,0,0x0,8
tick,0x7ff86ea82704,3994695,0,0x0,8
tick,0x7ff86ea82704,3996721,0,0x0,8
tick,0x7ff86ea82704,3998563,0,0x0,8
tick,0x7ff86ea82704,4000548,0,0x0,8
tick,0x7ff86ea82704,4002606,0,0x0,8
tick,0x7ff86ea82704,4004613,0,0x0,8
tick,0x7ff86ea82704,4006622,0,0x0,8
tick,0x7ff86ea82704,4008814,0,0x0,8
tick,0x7ff86ea82704,4010583,0,0x0,8
tick,0x7ff86ea82704,4012632,0,0x0,8
tick,0x7ff86ea82704,4014779,0,0x0,8
tick,0x7ff86ea82704,4016624,0,0x0,8
tick,0x7ff86ea82704,4018548,0,0x0,8
tick,0x7ff86ea82704,4020533,0,0x0,8
tick,0x7ff86ea82704,4022702,0,0x0,8
tick,0x7ff86ea82704,4024587,0,0x0,8
tick,0x7ff86ea82704,4026626,0,0x0,8
tick,0x7ff86ea82704,4028584,0,0x0,8
tick,0x7ff86ea82704,4030533,0,0x0,8
tick,0x7ff86ea82704,4032623,0,0x0,8
tick,0x7ff86ea82704,4034602,0,0x0,8
tick,0x7ff86ea82704,4036774,0,0x0,8
tick,0x7ff86ea82704,4038668,0,0x0,8
tick,0x7ff86ea82704,4040778,0,0x0,8
tick,0x7ff86ea82704,4042732,0,0x0,8
tick,0x7ff86ea82704,4044612,0,0x0,8
tick,0x7ff86ea82704,4046887,0,0x0,8
tick,0x7ff86ea82704,4048672,0,0x0,8
tick,0x7ff86ea82704,4050630,0,0x0,8
tick,0x7ff86ea82704,4052800,0,0x0,8
tick,0x7ff86ea82704,4054612,0,0x0,8
tick,0x7ff86ea82704,4056558,0,0x0,8
tick,0x7ff86ea82704,4058518,0,0x0,8
tick,0x7ff86ea82704,4060670,0,0x0,8
tick,0x7ff86ea82704,4062605,0,0x0,8
tick,0x7ff86ea82704,4064550,0,0x0,8
tick,0x7ff86ea82704,4066527,0,0x0,8
tick,0x7ff86ea82704,4068506,0,0x0,8
tick,0x7ff86ea82704,4070602,0,0x0,8
tick,0x7ff86ea82704,4072550,0,0x0,8
tick,0x7ff86ea82704,4074554,0,0x0,8
tick,0x7ff86ea82704,4076664,0,0x0,8
tick,0x7ff86ea82704,4078597,0,0x0,8
tick,0x7ff86ea82704,4080484,0,0x0,8
tick,0x7ff86ea82704,4082554,0,0x0,8
tick,0x7ff86ea82704,4084552,0,0x0,8
tick,0x7ff86ea82704,4086431,0,0x0,8
tick,0x7ff86ea82704,4088814,0,0x0,8
tick,0x7ff86ea82704,4090457,0,0x0,8
tick,0x7ff86ea82704,4092981,0,0x0,8
tick,0x7ff86ea82704,4094499,0,0x0,8
tick,0x7ff86ea82704,4096507,0,0x0,8
tick,0x7ff86ea82704,4098424,0,0x0,8
tick,0x7ff86ea82704,4100536,0,0x0,8
tick,0x7ff86ea82704,4102496,0,0x0,8
tick,0x7ff86ea82704,4104492,0,0x0,8
tick,0x7ff86ea82704,4106552,0,0x0,8
tick,0x7ff86ea82704,4108369,0,0x0,8
tick,0x7ff86ea82704,4110666,0,0x0,8
tick,0x7ff86ea82704,4112339,0,0x0,8
tick,0x7ff86ea82704,4114412,0,0x0,8
tick,0x7ff86ea82704,4116516,0,0x0,8
tick,0x7ff86ea82704,4118421,0,0x0,8
tick,0x7ff86ea82704,4120289,0,0x0,8
tick,0x7ff86ea82704,4122287,0,0x0,8
tick,0x7ff86ea82704,4124484,0,0x0,8
tick,0x7ff86ea82704,4126564,0,0x0,8
tick,0x7ff86ea82704,4128278,0,0x0,8
tick,0x7ff86ea82704,4130485,0,0x0,8
tick,0x7ff86ea82704,4132178,0,0x0,8
tick,0x7ff86ea82704,4134380,0,0x0,8
tick,0x7ff86ea82704,4136271,0,0x0,8
tick,0x7ff86ea82704,4138369,0,0x0,8
tick,0x7ff86ea82704,4140247,0,0x0,8
tick,0x7ff86ea82704,4142171,0,0x0,8
tick,0x7ff86ea82704,4144402,0,0x0,8
tick,0x7ff86ea82704,4146684,0,0x0,8
tick,0x7ff86ea82704,4148223,0,0x0,8
tick,0x7ff86ea82704,4150197,0,0x0,8
tick,0x7ff86ea82704,4152269,0,0x0,8
tick,0x7ff86ea82704,4154203,0,0x0,8
tick,0x7ff86ea82704,4156427,0,0x0,8
tick,0x7ff86ea82704,4158182,0,0x0,8
tick,0x7ff86ea82704,4160219,0,0x0,8
tick,0x7ff86ea82704,4162247,0,0x0,8
tick,0x7ff86ea82704,4164246,0,0x0,8
tick,0x7ff86ea82704,4166111,0,0x0,8
tick,0x7ff86ea82704,4168356,0,0x0,8
tick,0x7ff86ea82704,4170224,0,0x0,8
tick,0x7ff86ea82704,4172269,0,0x0,8
tick,0x7ff86ea82704,4174297,0,0x0,8
tick,0x7ff86ea82704,4176215,0,0x0,8
tick,0x7ff86ea82704,4178302,0,0x0,8
tick,0x7ff86ea82704,4180193,0,0x0,8
tick,0x7ff86ea82704,4182085,0,0x0,8
tick,0x7ff86ea82704,4184199,0,0x0,8
tick,0x7ff86ea82704,4186066,0,0x0,8
tick,0x7ff86ea82704,4188263,0,0x0,8
tick,0x7ff86ea82704,4190126,0,0x0,8
tick,0x7ff86ea82704,4192292,0,0x0,8
tick,0x7ff86ea82704,4194195,0,0x0,8
tick,0x7ff86ea82704,4196062,0,0x0,8
tick,0x7ff86ea82704,4198157,0,0x0,8
tick,0x7ff86ea82704,4200055,0,0x0,8
tick,0x7ff86ea82704,4202176,0,0x0,8
tick,0x7ff86ea82704,4204101,0,0x0,8
tick,0x7ff86ea82704,4206179,0,0x0,8
tick,0x7ff86ea82704,4208152,0,0x0,8
tick,0x7ff86ea82704,4210123,0,0x0,8
tick,0x7ff86ea82704,4212017,0,0x0,8
tick,0x7ff86ea82704,4214126,0,0x0,8
tick,0x7ff86ea82704,4216057,0,0x0,8
tick,0x7ff86ea82704,4218079,0,0x0,8
tick,0x7ff86ea82704,4220016,0,0x0,8
tick,0x7ff86ea82704,4222056,0,0x0,8
tick,0x7ff86ea82704,4224143,0,0x0,8
tick,0x7ff86ea82704,4226065,0,0x0,8
tick,0x7ff86ea82704,4228150,0,0x0,8
tick,0x7ff86ea82704,4230092,0,0x0,8
tick,0x7ff86ea82704,4232017,0,0x0,8
tick,0x7ff86ea82704,4234125,0,0x0,8
tick,0x7ff86ea82704,4235995,0,0x0,8
tick,0x7ff86ea82704,4238042,0,0x0,8
tick,0x7ff86ea82704,4240056,0,0x0,8
tick,0x7ff86ea82704,4242099,0,0x0,8
tick,0x7ff86ea82704,4244033,0,0x0,8
tick,0x7ff86ea82704,4246019,0,0x0,8
tick,0x7ff86ea82704,4248034,0,0x0,8
tick,0x7ff86ea82704,4250125,0,0x0,8
tick,0x7ff86ea82704,4252000,0,0x0,8
tick,0x7ff86ea82704,4254294,0,0x0,8
tick,0x7ff86ea82704,4255971,0,0x0,8
tick,0x7ff86ea82704,4258106,0,0x0,8
tick,0x7ff86ea82704,4260315,0,0x0,8
tick,0x7ff86ea82704,4262288,0,0x0,8
tick,0x7ff86ea82704,4264002,0,0x0,8
tick,0x7ff86ea82704,4265942,0,0x0,8
tick,0x7ff86ea82704,4268016,0,0x0,8
tick,0x7ff86ea82704,4269897,0,0x0,8
tick,0x7ff86ea82704,4271892,0,0x0,8
tick,0x7ff86ea82704,4274008,0,0x0,8
tick,0x7ff86ea82704,4275938,0,0x0,8
tick,0x7ff86ea82704,4277945,0,0x0,8
tick,0x7ff86ea82704,4279901,0,0x0,8
tick,0x7ff86ea82704,4281903,0,0x0,8
tick,0x7ff86ea82704,4283790,0,0x0,8
tick,0x7ff86ea82704,4286002,0,0x0,8
tick,0x7ff86ea82704,4287885,0,0x0,8
tick,0x7ff86ea82704,4289999,0,0x0,8
tick,0x7ff86ea82704,4291868,0,0x0,8
tick,0x7ff86ea82704,4293796,0,0x0,8
tick,0x7ff86ea82704,4296740,0,0x0,8
tick,0x7ff86ea82704,4297781,0,0x0,8
tick,0x7ff86ea82704,4299805,0,0x0,8
tick,0x7ff86ea82704,4301840,0,0x0,8
tick,0x7ff86ea82704,4303811,0,0x0,8
tick,0x7ff86ea82704,4305683,0,0x0,8
tick,0x7ff86ea82704,4307730,0,0x0,8
tick,0x7ff86ea82704,4309662,0,0x0,8
tick,0x7ff86ea82704,4311781,0,0x0,8
tick,0x7ff86ea82704,4313733,0,0x0,8
tick,0x7ff86ea82704,4315773,0,0x0,8
tick,0x7ff86ea82704,4317678,0,0x0,8
tick,0x7ff86ea82704,4319700,0,0x0,8
tick,0x7ff86ea82704,4321889,0,0x0,8
tick,0x7ff86ea82704,4323670,0,0x0,8
tick,0x7ff86ea82704,4325635,0,0x0,8
tick,0x7ff86ea82704,4327773,0,0x0,8
tick,0x7ff86ea82704,4329683,0,0x0,8
tick,0x7ff86ea82704,4331664,0,0x0,8
tick,0x7ff86ea82704,4333665,0,0x0,8
tick,0x7ff86ea82704,4335700,0,0x0,8
tick,0x7ff86ea82704,4337618,0,0x0,8
tick,0x7ff86ea82704,4339848,0,0x0,8
tick,0x7ff86ea82704,4341767,0,0x0,8
tick,0x7ff86ea82704,4343645,0,0x0,8
tick,0x7ff86ea82704,4345718,0,0x0,8
tick,0x7ff86ea82704,4347617,0,0x0,8
tick,0x7ff86ea82704,4349639,0,0x0,8
tick,0x7ff86ea82704,4351621,0,0x0,8
tick,0x7ff86ea82704,4353679,0,0x0,8
tick,0x7ff86ea82704,4355642,0,0x0,8
tick,0x7ff86ea82704,4357590,0,0x0,8
tick,0x7ff86ea82704,4359581,0,0x0,8
tick,0x7ff86ea82704,4362323,0,0x0,8
tick,0x7ff86ea82704,4363590,0,0x0,8
tick,0x7ff86ea82704,4365637,0,0x0,8
tick,0x7ff86ea82704,4367562,0,0x0,8
tick,0x7ff86ea82704,4369536,0,0x0,8
tick,0x7ff86ea82704,4371586,0,0x0,8
tick,0x7ff86ea82704,4373464,0,0x0,8
tick,0x7ff86ea82704,4375511,0,0x0,8
tick,0x7ff86ea82704,4377477,0,0x0,8
tick,0x7ff86ea82704,4379541,0,0x0,8
tick,0x7ff86ea82704,4381551,0,0x0,8
tick,0x7ff86ea82704,4383497,0,0x0,8
tick,0x7ff86ea82704,4385498,0,0x0,8
tick,0x7ff86ea82704,4387443,0,0x0,8
tick,0x7ff86ea82704,4389547,0,0x0,8
tick,0x7ff86ea82704,4391474,0,0x0,8
tick,0x7ff86ea82704,4393529,0,0x0,8
tick,0x7ff86ea82704,4395569,0,0x0,8
tick,0x7ff86ea82704,4397583,0,0x0,8
tick,0x7ff86ea82704,4399404,0,0x0,8
tick,0x7ff86ea82704,4401421,0,0x0,8
tick,0x7ff86ea82704,4403421,0,0x0,8
tick,0x7ff86ea82704,4405424,0,0x0,8
tick,0x7ff86ea82704,4407645,0,0x0,8
tick,0x7ff86ea82704,4409452,0,0x0,8
tick,0x7ff86ea82704,4411454,0,0x0,8
tick,0x7ff86ea82704,4413358,0,0x0,8
tick,0x7ff86ea82704,4415615,0,0x0,8
tick,0x7ff86ea82704,4417394,0,0x0,8
tick,0x7ff86ea82704,4419385,0,0x0,8
tick,0x7ff86ea82704,4421367,0,0x0,8
tick,0x7ff86ea82704,4423300,0,0x0,8
tick,0x7ff86ea82704,4425380,0,0x0,8
tick,0x7ff86ea82704,4427333,0,0x0,8
tick,0x7ff86ea82704,4429584,0,0x0,8
tick,0x7ff86ea82704,4431291,0,0x0,8
tick,0x7ff86ea82704,4433507,0,0x0,8
tick,0x7ff86ea82704,4435386,0,0x0,8
tick,0x7ff86ea82704,4437408,0,0x0,8
tick,0x7ff86ea82704,4439353,0,0x0,8
tick,0x7ff86ea82704,4441444,0,0x0,8
tick,0x7ff86ea82704,4443316,0,0x0,8
tick,0x7ff86ea82704,4445505,0,0x0,8
tick,0x7ff86ea82704,4447268,0,0x0,8
tick,0x7ff86ea82704,4449339,0,0x0,8
tick,0x7ff86ea82704,4451281,0,0x0,8
tick,0x7ff86ea82704,4453263,0,0x0,8
tick,0x7ff86ea82704,4455360,0,0x0,8
tick,0x7ff86ea82704,4457311,0,0x0,8
tick,0x7ff86ea82704,4459322,0,0x0,8
tick,0x7ff86ea82704,4461251,0,0x0,8
tick,0x7ff86ea82704,4463279,0,0x0,8
tick,0x7ff86ea82704,4465324,0,0x0,8
tick,0x7ff86ea82704,4467282,0,0x0,8
tick,0x7ff86ea82704,4469341,0,0x0,8
tick,0x7ff86ea82704,4471252,0,0x0,8
tick,0x7ff86ea82704,4473357,0,0x0,8
tick,0x7ff86ea82704,4475283,0,0x0,8
tick,0x7ff86ea82704,4477247,0,0x0,8
tick,0x7ff86ea82704,4479300,0,0x0,8
tick,0x7ff86ea82704,4481367,0,0x0,8
tick,0x7ff86ea82704,4483327,0,0x0,8
tick,0x7ff86ea82704,4485215,0,0x0,8
tick,0x7ff86ea82704,4488287,0,0x0,8
tick,0x7ff86ea82704,4489604,0,0x0,8
tick,0x7ff86ea82704,4491499,0,0x0,8
tick,0x7ff86ea82704,4493655,0,0x0,8
tick,0x7ff86ea82704,4495512,0,0x0,8
tick,0x7ff86ea82704,4497549,0,0x0,8
tick,0x7ff86ea82704,4499695,0,0x0,8
tick,0x7ff86ea82704,4501597,0,0x0,8
tick,0x7ff86ea82704,4503475,0,0x0,8
tick,0x7ff86ea82704,4505601,0,0x0,8
tick,0x7ff86ea82704,4507484,0,0x0,8
tick,0x7ff86ea82704,4509518,0,0x0,8
tick,0x7ff86ea82704,4511380,0,0x0,8
tick,0x7ff86ea82704,4513480,0,0x0,8
tick,0x7ff86ea82704,4515552,0,0x0,8
tick,0x7ff86ea82704,4517462,0,0x0,8
tick,0x7ff86ea82704,4519337,0,0x0,8
tick,0x7ff86ea82704,4521312,0,0x0,8
tick,0x7ff86ea82704,4523408,0,0x0,8
tick,0x7ff86ea82704,4525320,0,0x0,8
tick,0x7ff86ea82704,4527384,0,0x0,8
tick,0x7ff86ea82704,4529349,0,0x0,8
tick,0x7ff86ea82704,4531646,0,0x0,8
tick,0x7ff86ea82704,4533565,0,0x0,8
tick,0x7ff86ea82704,4535515,0,0x0,8
tick,0x7ff86ea82704,4537554,0,0x0,8
tick,0x7ff86ea82704,4539307,0,0x0,8
tick,0x7ff86ea82704,4541352,0,0x0,8
tick,0x7ff86ea82704,4543402,0,0x0,8
tick,0x7ff86ea82704,4545302,0,0x0,8
tick,0x7ff86ea82704,4547345,0,0x0,8
tick,0x7ff86ea82704,4549659,0,0x0,8
tick,0x7ff86ea82704,4551435,0,0x0,8
tick,0x7ff86ea82704,4553486,0,0x0,8
tick,0x7ff86ea82704,4555520,0,0x0,8
tick,0x7ff86ea82704,4557849,0,0x0,8
tick,0x7ff86ea82704,4559184,0,0x0,8
tick,0x7ff86ea82704,4561251,0,0x0,8
tick,0x7ff86ea82704,4563153,0,0x0,8
tick,0x7ff86ea82704,4565171,0,0x0,8
tick,0x7ff86ea82704,4567450,0,0x0,8
tick,0x7ff86ea82704,4569047,0,0x0,8
tick,0x7ff86ea82704,4571684,0,0x0,8
tick,0x7ff86ea82704,4573112,0,0x0,8
tick,0x7ff86ea82704,4575464,0,0x0,8
tick,0x7ff86ea82704,4577070,0,0x0,8
tick,0x7ff86ea82704,4579509,0,0x0,8
tick,0x7ff86ea82704,4581060,0,0x0,8
tick,0x7ff86ea82704,4583101,0,0x0,8
tick,0x7ff86ea82704,4585084,0,0x0,8
tick,0x7ff86ea82704,4587168,0,0x0,8
tick,0x7ff86ea82704,4588962,0,0x0,8
tick,0x7ff86ea82704,4591080,0,0x0,8
tick,0x7ff86ea82704,4593139,0,0x0,8
tick,0x7ff86ea82704,4595131,0,0x0,8
tick,0x7ff86ea82704,4597103,0,0x0,8
tick,0x7ff86ea82704,4598952,0,0x0,8
tick,0x7ff86ea82704,4601342,0,0x0,8
tick,0x7ff86ea82704,4603179,0,0x0,8
tick,0x7ff86ea82704,4605143,0,0x0,8
tick,0x7ff86ea82704,4607095,0,0x0,8
tick,0x7ff86ea82704,4609034,0,0x0,8
tick,0x7ff86ea82704,4610993,0,0x0,8
tick,0x7ff86ea82704,4613260,0,0x0,8
tick,0x7ff86ea82704,4615080,0,0x0,8
tick,0x7ff86ea82704,4616972,0,0x0,8
tick,0x7ff86ea82704,4619214,0,0x0,8
tick,0x7ff86ea82704,4621010,0,0x0,8
tick,0x7ff86ea82704,4623049,0,0x0,8
tick,0x7ff86ea82704,4625289,0,0x0,8
tick,0x7ff86ea82704,4627086,0,0x0,8
tick,0x7ff86ea82704,4629259,0,0x0,8
tick,0x7ff86ea82704,4631128,0,0x0,8
tick,0x7ff86ea82704,4633206,0,0x0,8
tick,0x7ff86ea82704,4635028,0,0x0,8
tick,0x7ff86ea82704,4637244,0,0x0,8
tick,0x7ff86ea82704,4639120,0,0x0,8
tick,0x7ff86ea82704,4640963,0,0x0,8
tick,0x7ff86ea82704,4643040,0,0x0,8
tick,0x7ff86ea82704,4646130,0,0x0,8
tick,0x7ff86ea82704,4648035,0,0x0,8
tick,0x7ff86ea82704,4649895,0,0x0,8
tick,0x7ff86ea82704,4652133,0,0x0,8
tick,0x7ff86ea82704,4654292,0,0x0,8
tick,0x7ff86ea82704,4656156,0,0x0,8
tick,0x7ff86ea82704,4658189,0,0x0,8
tick,0x7ff86ea82704,4660001,0,0x0,8
tick,0x7ff86ea82704,4661816,0,0x0,8
tick,0x7ff86ea82704,4664006,0,0x0,8
tick,0x7ff86ea82704,4665884,0,0x0,8
tick,0x7ff86ea82704,4668128,0,0x0,8
tick,0x7ff86ea82704,4669953,0,0x0,8
tick,0x7ff86ea82704,4672239,0,0x0,8
tick,0x7ff86ea82704,4673931,0,0x0,8
tick,0x7ff86ea82704,4675914,0,0x0,8
tick,0x7ff86ea82704,4677983,0,0x0,8
tick,0x7ff86ea82704,4679916,0,0x0,8
tick,0x7ff86ea82704,4681879,0,0x0,8
tick,0x7ff86ea82704,4683812,0,0x0,8
tick,0x7ff86ea82704,4685885,0,0x0,8
tick,0x7ff86ea82704,4687880,0,0x0,8
tick,0x7ff86ea82704,4689860,0,0x0,8
tick,0x7ff86ea82704,4692080,0,0x0,8
tick,0x7ff86ea82704,4693758,0,0x0,8
tick,0x7ff86ea82704,4695805,0,0x0,8
tick,0x7ff86ea82704,4697915,0,0x0,8
tick,0x7ff86ea82704,4699847,0,0x0,8
tick,0x7ff86ea82704,4701852,0,0x0,8
tick,0x7ff86ea82704,4703804,0,0x0,8
tick,0x7ff86ea82704,4705871,0,0x0,8
tick,0x7ff86ea82704,4707793,0,0x0,8
tick,0x7ff86ea82704,4709794,0,0x0,8
tick,0x7ff86ea82704,4711666,0,0x0,8
tick,0x7ff86ea82704,4713944,0,0x0,8
tick,0x7ff86ea82704,4715723,0,0x0,8
tick,0x7ff86ea82704,4717606,0,0x0,8
tick,0x7ff86ea82704,4719808,0,0x0,8
tick,0x7ff86ea82704,4721784,0,0x0,8
tick,0x7ff86ea82704,4723793,0,0x0,8
tick,0x7ff86ea82704,4725724,0,0x0,8
tick,0x7ff86ea82704,4727664,0,0x0,8
tick,0x7ff86ea82704,4729713,0,0x0,8
tick,0x7ff86ea82704,4731646,0,0x0,8
tick,0x7ff86ea82704,4733814,0,0x0,8
tick,0x7ff86ea82704,4735683,0,0x0,8
tick,0x7ff86ea82704,4737719,0,0x0,8
tick,0x7ff86ea82704,4739614,0,0x0,8
tick,0x7ff86ea82704,4741780,0,0x0,8
tick,0x7ff86ea82704,4743736,0,0x0,8
tick,0x7ff86ea82704,4745636,0,0x0,8
tick,0x7ff86ea82704,4747738,0,0x0,8
tick,0x7ff86ea82704,4749625,0,0x0,8
tick,0x7ff86ea82704,4751615,0,0x0,8
tick,0x7ff86ea82704,4753617,0,0x0,8
tick,0x7ff86ea82704,4755661,0,0x0,8
tick,0x7ff86ea82704,4757573,0,0x0,8
tick,0x7ff86ea82704,4759610,0,0x0,8
tick,0x7ff86ea82704,4761618,0,0x0,8
tick,0x7ff86ea82704,4763644,0,0x0,8
tick,0x7ff86ea82704,4765639,0,0x0,8
tick,0x7ff86ea82704,4767663,0,0x0,8
tick,0x7ff86ea82704,4769624,0,0x0,8
tick,0x7ff86ea82704,4771556,0,0x0,8
tick,0x7ff86ea82704,4773591,0,0x0,8
tick,0x7ff86ea82704,4775603,0,0x0,8
tick,0x7ff86ea82704,4777652,0,0x0,8
tick,0x7ff86ea82704,4779567,0,0x0,8
tick,0x7ff86ea82704,4781594,0,0x0,8
tick,0x7ff86ea82704,4783543,0,0x0,8
tick,0x7ff86ea82704,4785541,0,0x0,8
tick,0x7ff86ea82704,4787600,0,0x0,8
tick,0x7ff86ea82704,4789642,0,0x0,8
tick,0x7ff86ea82704,4791557,0,0x0,8
tick,0x7ff86ea82704,4793593,0,0x0,8
tick,0x7ff86ea82704,4795470,0,0x0,8
tick,0x7ff86ea82704,4797622,0,0x0,8
tick,0x7ff86ea82704,4799558,0,0x0,8
tick,0x7ff86ea82704,4801551,0,0x0,8
tick,0x7ff86ea82704,4803562,0,0x0,8
tick,0x7ff86ea82704,4805488,0,0x0,8
tick,0x7ff86ea82704,4807477,0,0x0,8
tick,0x7ff86ea82704,4809546,0,0x0,8
tick,0x7ff86ea82704,4811422,0,0x0,8
tick,0x7ff86ea82704,4813632,0,0x0,8
tick,0x7ff86ea82704,4815515,0,0x0,8
tick,0x7ff86ea82704,4817568,0,0x0,8
tick,0x7ff86ea82704,4819503,0,0x0,8
tick,0x7ff86ea82704,4821455,0,0x0,8
tick,0x7ff86ea82704,4823438,0,0x0,8
tick,0x7ff86ea82704,4825443,0,0x0,8
tick,0x7ff86ea82704,4827420,0,0x0,8
tick,0x7ff86ea82704,4829429,0,0x0,8
tick,0x7ff86ea82704,4831416,0,0x0,8
tick,0x7ff86ea82704,4833523,0,0x0,8
tick,0x7ff86ea82704,4835430,0,0x0,8
tick,0x7ff86ea82704,4837415,0,0x0,8
tick,0x7ff86ea82704,4839376,0,0x0,8
tick,0x7ff86ea82704,4841377,0,0x0,8
tick,0x7ff86ea82704,4843382,0,0x0,8
tick,0x7ff86ea82704,4845440,0,0x0,8
tick,0x7ff86ea82704,4847345,0,0x0,8
tick,0x7ff86ea82704,4849515,0,0x0,8
tick,0x7ff86ea82704,4851459,0,0x0,8
tick,0x7ff86ea82704,4853424,0,0x0,8
tick,0x7ff86ea82704,4855413,0,0x0,8
tick,0x7ff86ea82704,4857430,0,0x0,8
tick,0x7ff86ea82704,4859381,0,0x0,8
tick,0x7ff86ea82704,4861787,0,0x0,8
tick,0x7ff86ea82704,4863621,0,0x0,8
tick,0x7ff86ea82704,4865361,0,0x0,8
tick,0x7ff86ea82704,4867435,0,0x0,8
tick,0x7ff86ea82704,4869332,0,0x0,8
tick,0x7ff86ea82704,4871385,0,0x0,8
tick,0x7ff86ea82704,4873473,0,0x0,8
tick,0x7ff86ea82704,4875459,0,0x0,8
tick,0x7ff86ea82704,4877282,0,0x0,8
tick,0x7ff86ea82704,4879430,0,0x0,8
tick,0x7ff86ea82704,4881295,0,0x0,8
tick,0x7ff86ea82704,4883420,0,0x0,8
tick,0x7ff86ea82704,4885298,0,0x0,8
tick,0x7ff86ea82704,4887283,0,0x0,8
tick,0x7ff86ea82704,4889336,0,0x0,8
tick,0x7ff86ea82704,4891243,0,0x0,8
tick,0x7ff86ea82704,4893387,0,0x0,8
tick,0x7ff86ea82704,4895175,0,0x0,8
tick,0x7ff86ea82704,4897374,0,0x0,8
tick,0x7ff86ea82704,4899304,0,0x0,8
tick,0x7ff86ea82704,4901385,0,0x0,8
tick,0x7ff86ea82704,4903208,0,0x0,8
tick,0x7ff86ea82704,4905290,0,0x0,8
tick,0x7ff86ea82704,4907282,0,0x0,8
tick,0x7ff86ea82704,4909264,0,0x0,8
tick,0x7ff86ea82704,4911312,0,0x0,8
tick,0x7ff86ea82704,4913249,0,0x0,8
tick,0x7ff86ea82704,4915299,0,0x0,8
tick,0x7ff86ea82704,4917225,0,0x0,8
tick,0x7ff86ea82704,4919177,0,0x0,8
tick,0x7ff86ea82704,4921316,0,0x0,8
tick,0x7ff86ea82704,4923251,0,0x0,8
tick,0x7ff86ea82704,4925257,0,0x0,8
tick,0x7ff86ea82704,4927203,0,0x0,8
tick,0x7ff86ea82704,4929422,0,0x0,8
tick,0x7ff86ea82704,4931177,0,0x0,8
tick,0x7ff86ea82704,4933217,0,0x0,8
tick,0x7ff86ea82704,4935229,0,0x0,8
tick,0x7ff86ea82704,4937356,0,0x0,8
tick,0x7ff86ea82704,4939120,0,0x0,8
tick,0x7ff86ea82704,4941296,0,0x0,8
tick,0x7ff86ea82704,4943166,0,0x0,8
tick,0x7ff86ea82704,4945481,0,0x0,8
tick,0x7ff86ea82704,4947207,0,0x0,8
tick,0x7ff86ea82704,4949974,0,0x0,8
tick,0x7ff86ea82704,4951062,0,0x0,8
tick,0x7ff86ea82704,4953005,0,0x0,8
tick,0x7ff86ea82704,4955047,0,0x0,8
tick,0x7ff86ea82704,4957006,0,0x0,8
tick,0x7ff86ea82704,4958984,0,0x0,8
tick,0x7ff86ea82704,4960961,0,0x0,8
tick,0x7ff86ea82704,4962942,0,0x0,8
tick,0x7ff86ea82704,4964905,0,0x0,8
tick,0x7ff86ea82704,4967005,0,0x0,8
tick,0x7ff86ea82704,4972044,0,0x0,8
tick,0x7ff86ea82704,4972907,0,0x0,8
tick,0x7ff86ea82704,4974882,0,0x0,8
tick,0x7ff86ea82704,4976860,0,0x0,8
tick,0x7ff86ea82704,4978917,0,0x0,8
tick,0x7ff86ea82704,4980914,0,0x0,8
tick,0x7ff86ea82704,4982894,0,0x0,8
tick,0x7ff86ea82704,4984888,0,0x0,8
tick,0x7ff86ea82704,4986893,0,0x0,8
tick,0x7ff86ea82704,4988811,0,0x0,8
tick,0x7ff86ea82704,4990884,0,0x0,8
tick,0x7ff86ea82704,4992815,0,0x0,8
tick,0x7ff86ea82704,4994870,0,0x0,8
tick,0x7ff86ea82704,4996833,0,0x0,8
tick,0x7ff86ea82704,4998838,0,0x0,8
tick,0x7ff86ea82704,5000821,0,0x0,8
tick,0x7ff86ea82704,5002814,0,0x0,8
tick,0x7ff86ea82704,5004802,0,0x0,8
tick,0x7ff86ea82704,5006821,0,0x0,8
tick,0x7ff86ea82704,5008858,0,0x0,8
tick,0x7ff86ea82704,5010727,0,0x0,8
tick,0x7ff86ea82704,5012838,0,0x0,8
tick,0x7ff86ea82704,5014758,0,0x0,8
tick,0x7ff86ea82704,5016789,0,0x0,8
tick,0x7ff86ea82704,5018840,0,0x0,8
tick,0x7ff86ea82704,5020747,0,0x0,8
tick,0x7ff86ea82704,5022751,0,0x0,8
tick,0x7ff86ea82704,5024737,0,0x0,8
tick,0x7ff86ea82704,5026844,0,0x0,8
tick,0x7ff86ea82704,5028730,0,0x0,8
tick,0x7ff86ea82704,5030716,0,0x0,8
tick,0x7ff86ea82704,5032740,0,0x0,8
tick,0x7ff86ea82704,5034668,0,0x0,8
tick,0x7ff86ea82704,5036725,0,0x0,8
tick,0x7ff86ea82704,5038657,0,0x0,8
tick,0x7ff86ea82704,5040706,0,0x0,8
tick,0x7ff86ea82704,5042675,0,0x0,8
tick,0x7ff86ea82704,5044719,0,0x0,8
tick,0x7ff86ea82704,5046705,0,0x0,8
tick,0x7ff86ea82704,5048737,0,0x0,8
tick,0x7ff86ea82704,5050678,0,0x0,8
tick,0x7ff86ea82704,5052756,0,0x0,8
tick,0x7ff86ea82704,5054666,0,0x0,8
tick,0x7ff86ea82704,5056741,0,0x0,8
tick,0x7ff86ea82704,5058669,0,0x0,8
tick,0x7ff86ea82704,5060717,0,0x0,8
tick,0x7ff86ea82704,5062974,0,0x0,8
tick,0x7ff86ea82704,5064775,0,0x0,8
tick,0x7ff86ea82704,5066748,0,0x0,8
tick,0x7ff86ea82704,5068900,0,0x0,8
tick,0x7ff86ea82704,5070835,0,0x0,8
tick,0x7ff86ea82704,5072722,0,0x0,8
tick,0x7ff86ea82704,5075037,0,0x0,8
tick,0x7ff86ea82704,5076756,0,0x0,8
tick,0x7ff86ea82704,5078765,0,0x0,8
tick,0x7ff86ea82704,5080659,0,0x0,8
tick,0x7ff86ea82704,5082754,0,0x0,8
tick,0x7ff86ea82704,5084758,0,0x0,8
tick,0x7ff86ea82704,5086723,0,0x0,8
tick,0x7ff86ea82704,5088800,0,0x0,8
tick,0x7ff86ea82704,5090682,0,0x0,8
tick,0x7ff86ea82704,5092759,0,0x0,8
tick,0x7ff86ea82704,5094635,0,0x0,8
tick,0x7ff86ea82704,5096733,0,0x0,8
tick,0x7ff86ea82704,5098536,0,0x0,8
tick,0x7ff86ea82704,5100721,0,0x0,8
tick,0x7ff86ea82704,5102593,0,0x0,8
tick,0x7ff86ea82704,5104697,0,0x0,8
tick,0x7ff86ea82704,5106546,0,0x0,8
tick,0x7ff86ea82704,5108863,0,0x0,8
tick,0x7ff86ea82704,5110800,0,0x0,8
tick,0x7ff86ea82704,5112607,0,0x0,8
tick,0x7ff86ea82704,5114696,0,0x0,8
tick,0x7ff86ea82704,5116690,0,0x0,8
tick,0x7ff86ea82704,5118585,0,0x0,8
tick,0x7ff86ea82704,5120781,0,0x0,8
tick,0x7ff86ea82704,5122961,0,0x0,8
tick,0x7ff86ea82704,5125617,0,0x0,8
tick,0x7ff86ea82704,5126765,0,0x0,8
tick,0x7ff86ea82704,5128798,0,0x0,8
tick,0x7ff86ea82704,5130642,0,0x0,8
tick,0x7ff86ea82704,5132492,0,0x0,8
tick,0x7ff86ea82704,5134587,0,0x0,8
tick,0x7ff86ea82704,5136555,0,0x0,8
tick,0x7ff86ea82704,5138959,0,0x0,8
tick,0x7ff86ea82704,5140971,0,0x0,8
tick,0x7ff86ea82704,5142693,0,0x0,8
tick,0x7ff86ea82704,5144711,0,0x0,8
tick,0x7ff86ea82704,5146821,0,0x0,8
tick,0x7ff86ea82704,5148630,0,0x0,8
tick,0x7ff86ea82704,5150597,0,0x0,8
tick,0x7ff86ea82704,5152492,0,0x0,8
tick,0x7ff86ea82704,5154977,0,0x0,8
tick,0x7ff86ea82704,5156691,0,0x0,8
tick,0x7ff86ea82704,5158665,0,0x0,8
tick,0x7ff86ea82704,5160590,0,0x0,8
tick,0x7ff86ea82704,5163288,0,0x0,8
tick,0x7ff86ea82704,5164808,0,0x0,8
tick,0x7ff86ea82704,5166775,0,0x0,8
tick,0x7ff86ea82704,5168603,0,0x0,8
tick,0x7ff86ea82704,5171608,0,0x0,8
tick,0x7ff86ea82704,5172662,0,0x0,8
tick,0x7ff86ea82704,5174841,0,0x0,8
tick,0x7ff86ea82704,5176533,0,0x0,8
tick,0x7ff86ea82704,5178562,0,0x0,8
tick,0x7ff86ea82704,5180625,0,0x0,8
tick,0x7ff86ea82704,5182494,0,0x0,8
tick,0x7ff86ea82704,5184633,0,0x0,8
tick,0x7ff86ea82704,5186345,0,0x0,8
tick,0x7ff86ea82704,5188488,0,0x0,8
tick,0x7ff86ea82704,5190571,0,0x0,8
tick,0x7ff86ea82704,5192558,0,0x0,8
tick,0x7ff86ea82704,5195041,0,0x0,8
tick,0x7ff86ea82704,5196419,0,0x0,8
tick,0x7ff86ea82704,5198463,0,0x0,8
tick,0x7ff86ea82704,5200441,0,0x0,8
tick,0x7ff86ea82704,5202456,0,0x0,8
tick,0x7ff86ea82704,5204768,0,0x0,8
tick,0x7ff86ea82704,5206467,0,0x0,8
tick,0x7ff86ea82704,5208362,0,0x0,8
tick,0x7ff86ea82704,5210421,0,0x0,8
tick,0x7ff86ea82704,5212431,0,0x0,8
tick,0x7ff86ea82704,5214343,0,0x0,8
tick,0x7ff86ea82704,5216375,0,0x0,8
tick,0x7ff86ea82704,5218313,0,0x0,8
tick,0x7ff86ea82704,5220283,0,0x0,8
tick,0x7ff86ea82704,5222397,0,0x0,8
tick,0x7ff86ea82704,5224688,0,0x0,8
tick,0x7ff86ea82704,5226591,0,0x0,8
tick,0x7ff86ea82704,5229764,0,0x0,8
tick,0x7ff86ea82704,5230762,0,0x0,8
tick,0x7ff86ea82704,5232439,0,0x0,8
tick,0x7ff86ea82704,5234849,0,0x0,8
tick,0x7ff86ea82704,5236327,0,0x0,8
tick,0x7ff86ea82704,5238839,0,0x0,8
tick,0x7ff86ea82704,5240693,0,0x0,8
tick,0x7ff86ea82704,5242502,0,0x0,8
tick,0x7ff86ea82704,5244331,0,0x0,8
tick,0x7ff86ea82704,5246446,0,0x0,8
tick,0x7ff86ea82704,5248259,0,0x0,8
tick,0x7ff86ea82704,5250339,0,0x0,8
tick,0x7ff86ea82704,5252427,0,0x0,8
tick,0x7ff86ea82704,5255041,0,0x0,8
tick,0x7ff86ea82704,5256463,0,0x0,8
tick,0x7ff86ea82704,5258420,0,0x0,8
tick,0x7ff86ea82704,5260524,0,0x0,8
tick,0x7ff86ea82704,5262279,0,0x0,8
tick,0x7ff86ea82704,5264440,0,0x0,8
tick,0x7ff86ea82704,5266218,0,0x0,8
tick,0x7ff86ea82704,5268347,0,0x0,8
tick,0x7ff86ea82704,5270284,0,0x0,8
tick,0x7ff86ea82704,5272386,0,0x0,8
tick,0x7ff86ea82704,5274143,0,0x0,8
tick,0x7ff86ea82704,5276212,0,0x0,8
tick,0x7ff86ea82704,5278134,0,0x0,8
tick,0x7ff86ea82704,5280247,0,0x0,8
tick,0x7ff86ea82704,5282158,0,0x0,8
tick,0x7ff86ea82704,5284236,0,0x0,8
tick,0x7ff86ea82704,5286208,0,0x0,8
tick,0x7ff86ea82704,5288696,0,0x0,8
tick,0x7ff86ea82704,5290271,0,0x0,8
tick,0x7ff86ea82704,5292290,0,0x0,8
tick,0x7ff86ea82704,5294347,0,0x0,8
tick,0x7ff86ea82704,5296196,0,0x0,8
tick,0x7ff86ea82704,5298190,0,0x0,8
tick,0x7ff86ea82704,5300189,0,0x0,8
tick,0x7ff86ea82704,5302204,0,0x0,8
tick,0x7ff86ea82704,5304362,0,0x0,8
tick,0x7ff86ea82704,5306437,0,0x0,8
tick,0x7ff86ea82704,5308290,0,0x0,8
tick,0x7ff86ea82704,5310142,0,0x0,8
tick,0x7ff86ea82704,5312179,0,0x0,8
tick,0x7ff86ea82704,5314216,0,0x0,8
tick,0x7ff86ea82704,5316148,0,0x0,8
tick,0x7ff86ea82704,5318176,0,0x0,8
tick,0x7ff86ea82704,5320154,0,0x0,8
tick,0x7ff86ea82704,5322460,0,0x0,8
tick,0x7ff86ea82704,5324269,0,0x0,8
tick,0x7ff86ea82704,5326120,0,0x0,8
tick,0x7ff86ea82704,5328186,0,0x0,8
tick,0x7ff86ea82704,5330038,0,0x0,8
tick,0x7ff86ea82704,5332150,0,0x0,8
tick,0x7ff86ea82704,5334297,0,0x0,8
tick,0x7ff86ea82704,5335991,0,0x0,8
tick,0x7ff86ea82704,5338199,0,0x0,8
tick,0x7ff86ea82704,5340121,0,0x0,8
tick,0x7ff86ea82704,5342118,0,0x0,8
tick,0x7ff86ea82704,5344164,0,0x0,8
tick,0x7ff86ea82704,5346380,0,0x0,8
tick,0x7ff86ea82704,5348092,0,0x0,8
tick,0x7ff86ea82704,5350059,0,0x0,8
tick,0x7ff86ea82704,5352419,0,0x0,8
tick,0x7ff86ea82704,5354260,0,0x0,8
tick,0x7ff86ea82704,5356065,0,0x0,8
tick,0x7ff86ea82704,5358268,0,0x0,8
tick,0x7ff86ea82704,5360123,0,0x0,8
tick,0x7ff86ea82704,5362129,0,0x0,8
tick,0x7ff86ea82704,5364057,0,0x0,8
tick,0x7ff86ea82704,5365963,0,0x0,8
tick,0x7ff86ea82704,5368091,0,0x0,8
tick,0x7ff86ea82704,5370182,0,0x0,8
tick,0x7ff86ea82704,5371985,0,0x0,8
tick,0x7ff86ea82704,5373992,0,0x0,8
tick,0x7ff86ea82704,5376118,0,0x0,8
tick,0x7ff86ea82704,5378072,0,0x0,8
tick,0x7ff86ea82704,5380038,0,0x0,8
tick,0x7ff86ea82704,5381962,0,0x0,8
tick,0x7ff86ea82704,5384139,0,0x0,8
tick,0x7ff86ea82704,5385950,0,0x0,8
tick,0x7ff86ea82704,5388403,0,0x0,8
tick,0x7ff86ea82704,5390160,0,0x0,8
tick,0x7ff86ea82704,5392225,0,0x0,8
tick,0x7ff86ea82704,5394461,0,0x0,8
tick,0x7ff86ea82704,5396390,0,0x0,8
tick,0x7ff86ea82704,5398325,0,0x0,8
tick,0x7ff86ea82704,5400310,0,0x0,8
tick,0x7ff86ea82704,5402435,0,0x0,8
tick,0x7ff86ea82704,5404069,0,0x0,8
tick,0x7ff86ea82704,5406059,0,0x0,8
tick,0x7ff86ea82704,5407949,0,0x0,8
tick,0x7ff86ea82704,5409887,0,0x0,8
tick,0x7ff86ea82704,5412036,0,0x0,8
tick,0x7ff86ea82704,5413896,0,0x0,8
tick,0x7ff86ea82704,5416198,0,0x0,8
tick,0x7ff86ea82704,5418046,0,0x0,8
tick,0x7ff86ea82704,5419933,0,0x0,8
tick,0x7ff86ea82704,5421852,0,0x0,8
tick,0x7ff86ea82704,5424267,0,0x0,8
tick,0x7ff86ea82704,5425890,0,0x0,8
tick,0x7ff86ea82704,5427871,0,0x0,8
tick,0x7ff86ea82704,5429918,0,0x0,8
tick,0x7ff86ea82704,5432073,0,0x0,8
tick,0x7ff86ea82704,5433866,0,0x0,8
tick,0x7ff86ea82704,5435968,0,0x0,8
tick,0x7ff86ea82704,5438029,0,0x0,8
tick,0x7ff86ea82704,5439972,0,0x0,8
tick,0x7ff86ea82704,5441771,0,0x0,8
tick,0x7ff86ea82704,5444244,0,0x0,8
tick,0x7ff86ea82704,5445836,0,0x0,8
tick,0x7ff86ea82704,5448227,0,0x0,8
tick,0x7ff86ea82704,5449959,0,0x0,8
tick,0x7ff86ea82704,5452075,0,0x0,8
tick,0x7ff86ea82704,5453812,0,0x0,8
tick,0x7ff86ea82704,5455734,0,0x0,8
tick,0x7ff86ea82704,5457845,0,0x0,8
tick,0x7ff86ea82704,5460048,0,0x0,8
tick,0x7ff86ea82704,5462082,0,0x0,8
tick,0x7ff86ea82704,5463825,0,0x0,8
tick,0x7ff86ea82704,5465793,0,0x0,8
tick,0x7ff86ea82704,5467853,0,0x0,8
tick,0x7ff86ea82704,5469724,0,0x0,8
tick,0x7ff86ea82704,5471781,0,0x0,8
tick,0x7ff86ea82704,5473697,0,0x0,8
tick,0x7ff86ea82704,5476161,0,0x0,8
tick,0x7ff86ea82704,5477909,0,0x0,8
tick,0x7ff86ea82704,5479654,0,0x0,8
tick,0x7ff86ea82704,5481702,0,0x0,8
tick,0x7ff86ea82704,5484768,0,0x0,8
tick,0x7ff86ea82704,5486641,0,0x0,8
tick,0x7ff86ea82704,5488662,0,0x0,8
tick,0x7ff86ea82704,5491028,0,0x0,8
tick,0x7ff86ea82704,5492626,0,0x0,8
tick,0x7ff86ea82704,5494941,0,0x0,8
tick,0x7ff86ea82704,5496725,0,0x0,8
tick,0x7ff86ea82704,5498833,0,0x0,8
tick,0x7ff86ea82704,5500804,0,0x0,8
tick,0x7ff86ea82704,5502873,0,0x0,8
tick,0x7ff86ea82704,5504699,0,0x0,8
tick,0x7ff86ea82704,5506774,0,0x0,8
tick,0x7ff86ea82704,5508784,0,0x0,8
tick,0x7ff86ea82704,5510593,0,0x0,8
tick,0x7ff86ea82704,5512713,0,0x0,8
tick,0x7ff86ea82704,5515110,0,0x0,8
tick,0x7ff86ea82704,5517038,0,0x0,8
tick,0x7ff86ea82704,5518778,0,0x0,8
tick,0x7ff86ea82704,5520725,0,0x0,8
tick,0x7ff86ea82704,5523051,0,0x0,8
tick,0x7ff86ea82704,5524988,0,0x0,8
tick,0x7ff86ea82704,5526720,0,0x0,8
tick,0x7ff86ea82704,5528636,0,0x0,8
tick,0x7ff86ea82704,5530609,0,0x0,8
tick,0x7ff86ea82704,5532587,0,0x0,8
tick,0x7ff86ea82704,5534659,0,0x0,8
tick,0x7ff86ea82704,5536570,0,0x0,8
tick,0x7ff86ea82704,5538654,0,0x0,8
tick,0x7ff86ea82704,5540618,0,0x0,8
tick,0x7ff86ea82704,5542580,0,0x0,8
tick,0x7ff86ea82704,5544524,0,0x0,8
tick,0x7ff86ea82704,5546546,0,0x0,8
tick,0x7ff86ea82704,5548530,0,0x0,8
tick,0x7ff86ea82704,5550688,0,0x0,8
tick,0x7ff86ea82704,5552489,0,0x0,8
tick,0x7ff86ea82704,5554581,0,0x0,8
tick,0x7ff86ea82704,5556803,0,0x0,8
tick,0x7ff86ea82704,5558753,0,0x0,8
tick,0x7ff86ea82704,5560527,0,0x0,8
tick,0x7ff86ea82704,5562528,0,0x0,8
tick,0x7ff86ea82704,5564529,0,0x0,8
tick,0x7ff86ea82704,5566426,0,0x0,8
tick,0x7ff86ea82704,5568647,0,0x0,8
tick,0x7ff86ea82704,5570611,0,0x0,8
tick,0x7ff86ea82704,5572413,0,0x0,8
tick,0x7ff86ea82704,5574549,0,0x0,8
tick,0x7ff86ea82704,5576596,0,0x0,8
tick,0x7ff86ea82704,5578548,0,0x0,8
tick,0x7ff86ea82704,5580541,0,0x0,8
tick,0x7ff86ea82704,5582556,0,0x0,8
tick,0x7ff86ea82704,5584478,0,0x0,8
tick,0x7ff86ea82704,5586454,0,0x0,8
tick,0x7ff86ea82704,5588493,0,0x0,8
tick,0x7ff86ea82704,5590643,0,0x0,8
tick,0x7ff86ea82704,5592668,0,0x0,8
tick,0x7ff86ea82704,5594522,0,0x0,8
tick,0x7ff86ea82704,5596464,0,0x0,8
tick,0x7ff86ea82704,5598439,0,0x0,8
tick,0x7ff86ea82704,5600690,0,0x0,8
tick,0x7ff86ea82704,5602556,0,0x0,8
tick,0x7ff86ea82704,5604365,0,0x0,8
tick,0x7ff86ea82704,5606394,0,0x0,8
tick,0x7ff86ea82704,5608492,0,0x0,8
tick,0x7ff86ea82704,5610438,0,0x0,8
tick,0x7ff86ea82704,5612655,0,0x0,8
tick,0x7ff86ea82704,5614529,0,0x0,8
tick,0x7ff86ea82704,5616368,0,0x0,8
tick,0x7ff86ea82704,5618361,0,0x0,8
tick,0x7ff86ea82704,5620381,0,0x0,8
tick,0x7ff86ea82704,5622410,0,0x0,8
tick,0x7ff86ea82704,5624470,0,0x0,8
tick,0x7ff86ea82704,5626456,0,0x0,8
tick,0x7ff86ea82704,5628371,0,0x0,8
tick,0x7ff86ea82704,5630275,0,0x0,8
tick,0x7ff86ea82704,5632355,0,0x0,8
tick,0x7ff86ea82704,5634613,0,0x0,8
tick,0x7ff86ea82704,5636374,0,0x0,8
tick,0x7ff86ea82704,5638603,0,0x0,8
tick,0x7ff86ea82704,5640375,0,0x0,8
tick,0x7ff86ea82704,5642290,0,0x0,8
tick,0x7ff86ea82704,5644367,0,0x0,8
tick,0x7ff86ea82704,5646240,0,0x0,8
tick,0x7ff86ea82704,5648284,0,0x0,8
tick,0x7ff86ea82704,5650248,0,0x0,8
tick,0x7ff86ea82704,5652237,0,0x0,8
tick,0x7ff86ea82704,5654289,0,0x0,8
tick,0x7ff86ea82704,5656246,0,0x0,8
tick,0x7ff86ea82704,5658583,0,0x0,8
tick,0x7ff86ea82704,5660366,0,0x0,8
tick,0x7ff86ea82704,5662300,0,0x0,8
tick,0x7ff86ea82704,5664261,0,0x0,8
tick,0x7ff86ea82704,5666240,0,0x0,8
tick,0x7ff86ea82704,5668307,0,0x0,8
tick,0x7ff86ea82704,5670315,0,0x0,8
tick,0x7ff86ea82704,5672237,0,0x0,8
tick,0x7ff86ea82704,5674269,0,0x0,8
tick,0x7ff86ea82704,5676272,0,0x0,8
tick,0x7ff86ea82704,5678271,0,0x0,8
tick,0x7ff86ea82704,5680198,0,0x0,8
tick,0x7ff86ea82704,5682294,0,0x0,8
tick,0x7ff86ea82704,5684163,0,0x0,8
tick,0x7ff86ea82704,5686279,0,0x0,8
tick,0x7ff86ea82704,5688200,0,0x0,8
tick,0x7ff86ea82704,5690276,0,0x0,8
tick,0x7ff86ea82704,5692421,0,0x0,8
tick,0x7ff86ea82704,5694136,0,0x0,8
tick,0x7ff86ea82704,5696182,0,0x0,8
tick,0x7ff86ea82704,5698121,0,0x0,8
tick,0x7ff86ea82704,5700143,0,0x0,8
tick,0x7ff86ea82704,5702345,0,0x0,8
tick,0x7ff86ea82704,5704643,0,0x0,8
tick,0x7ff86ea82704,5706247,0,0x0,8
tick,0x7ff86ea82704,5708283,0,0x0,8
tick,0x7ff86ea82704,5710678,0,0x0,8
tick,0x7ff86ea82704,5712904,0,0x0,8
tick,0x7ff86ea82704,5714622,0,0x0,8
tick,0x7ff86ea82704,5716202,0,0x0,8
tick,0x7ff86ea82704,5718120,0,0x0,8
tick,0x7ff86ea82704,5720044,0,0x0,8
tick,0x7ff86ea82704,5722427,0,0x0,8
tick,0x7ff86ea82704,5723960,0,0x0,8
tick,0x7ff86ea82704,5726126,0,0x0,8
tick,0x7ff86ea82704,5728085,0,0x0,8
tick,0x7ff86ea82704,5730069,0,0x0,8
tick,0x7ff86ea82704,5732010,0,0x0,8
tick,0x7ff86ea82704,5733989,0,0x0,8
tick,0x7ff86ea82704,5735994,0,0x0,8
tick,0x7ff86ea82704,5738037,0,0x0,8
tick,0x7ff86ea82704,5740108,0,0x0,8
tick,0x7ff86ea82704,5742117,0,0x0,8
tick,0x7ff86ea82704,5743986,0,0x0,8
tick,0x7ff86ea82704,5745967,0,0x0,8
tick,0x7ff86ea82704,5748067,0,0x0,8
tick,0x7ff86ea82704,5750062,0,0x0,8
tick,0x7ff86ea82704,5752187,0,0x0,8
tick,0x7ff86ea82704,5754492,0,0x0,8
tick,0x7ff86ea82704,5756141,0,0x0,8
tick,0x7ff86ea82704,5759388,0,0x0,8
tick,0x7ff86ea82704,5762504,0,0x0,8
tick,0x7ff86ea82704,5765963,0,0x0,8
tick,0x7ff86ea82704,5768184,0,0x0,8
tick,0x7ff86ea82704,5770113,0,0x0,8
tick,0x7ff86ea82704,5772550,0,0x0,8
tick,0x7ff86ea82704,5773874,0,0x0,8
tick,0x7ff86ea82704,5775995,0,0x0,8
tick,0x7ff86ea82704,5777938,0,0x0,8
tick,0x7ff86ea82704,5780002,0,0x0,8
tick,0x7ff86ea82704,5782183,0,0x0,8
tick,0x7ff86ea82704,5784003,0,0x0,8
tick,0x7ff86ea82704,5785793,0,0x0,8
tick,0x7ff86ea82704,5788178,0,0x0,8
tick,0x7ff86ea82704,5789793,0,0x0,8
tick,0x7ff86ea82704,5791926,0,0x0,8
tick,0x7ff86ea82704,5793730,0,0x0,8
tick,0x7ff86ea82704,5795860,0,0x0,8
tick,0x7ff86ea82704,5798333,0,0x0,8
tick,0x7ff86ea82704,5799730,0,0x0,8
tick,0x7ff86ea82704,5801722,0,0x0,8
tick,0x7ff86ea82704,5804144,0,0x0,8
tick,0x7ff86ea82704,5805866,0,0x0,8
tick,0x7ff86ea82704,5807789,0,0x0,8
tick,0x7ff86ea82704,5809735,0,0x0,8
tick,0x7ff86ea82704,5811774,0,0x0,8
tick,0x7ff86ea82704,5813876,0,0x0,8
tick,0x7ff86ea82704,5816447,0,0x0,8
tick,0x7ff86ea82704,5818273,0,0x0,8
tick,0x7ff86ea82704,5819879,0,0x0,8
tick,0x7ff86ea82704,5822054,0,0x0,8
tick,0x7ff86ea82704,5824034,0,0x0,8
tick,0x7ff86ea82704,5825899,0,0x0,8
tick,0x7ff86ea82704,5827864,0,0x0,8
tick,0x7ff86ea82704,5829908,0,0x0,8
tick,0x7ff86ea82704,5831810,0,0x0,8
tick,0x7ff86ea82704,5833763,0,0x0,8
tick,0x7ff86ea82704,5835718,0,0x0,8
tick,0x7ff86ea82704,5837806,0,0x0,8
tick,0x7ff86ea82704,5839692,0,0x0,8
tick,0x7ff86ea82704,5841836,0,0x0,8
tick,0x7ff86ea82704,5843674,0,0x0,8
tick,0x7ff86ea82704,5846056,0,0x0,8
tick,0x7ff86ea82704,5847698,0,0x0,8
tick,0x7ff86ea82704,5849890,0,0x0,8
tick,0x7ff86ea82704,5851690,0,0x0,8
tick,0x7ff86ea82704,5853981,0,0x0,8
tick,0x7ff86ea82704,5855795,0,0x0,8
tick,0x7ff86ea82704,5858042,0,0x0,8
tick,0x7ff86ea82704,5859721,0,0x0,8
tick,0x7ff86ea82704,5861660,0,0x0,8
tick,0x7ff86ea82704,5863697,0,0x0,8
tick,0x7ff86ea82704,5865743,0,0x0,8
tick,0x7ff86ea82704,5867612,0,0x0,8
tick,0x7ff86ea82704,5869659,0,0x0,8
tick,0x7ff86ea82704,5871729,0,0x0,8
tick,0x7ff86ea82704,5873622,0,0x0,8
tick,0x7ff86ea82704,5875634,0,0x0,8
tick,0x7ff86ea82704,5877622,0,0x0,8
tick,0x7ff86ea82704,5879584,0,0x0,8
tick,0x7ff86ea82704,5881648,0,0x0,8
tick,0x7ff86ea82704,5883581,0,0x0,8
tick,0x7ff86ea82704,5885676,0,0x0,8
tick,0x7ff86ea82704,5887673,0,0x0,8
tick,0x7ff86ea82704,5889873,0,0x0,8
tick,0x7ff86ea82704,5891500,0,0x0,8
tick,0x7ff86ea82704,5893779,0,0x0,8
tick,0x7ff86ea82704,5895603,0,0x0,8
tick,0x7ff86ea82704,5897732,0,0x0,8
tick,0x7ff86ea82704,5899516,0,0x0,8
tick,0x7ff86ea82704,5901595,0,0x0,8
tick,0x7ff86ea82704,5903466,0,0x0,8
tick,0x7ff86ea82704,5905734,0,0x0,8
tick,0x7ff86ea82704,5907515,0,0x0,8
tick,0x7ff86ea82704,5909759,0,0x0,8
tick,0x7ff86ea82704,5911504,0,0x0,8
tick,0x7ff86ea82704,5913677,0,0x0,8
tick,0x7ff86ea82704,5915438,0,0x0,8
tick,0x7ff86ea82704,5917604,0,0x0,8
tick,0x7ff86ea82704,5919434,0,0x0,8
tick,0x7ff86ea82704,5921581,0,0x0,8
tick,0x7ff86ea82704,5923464,0,0x0,8
tick,0x7ff86ea82704,5925494,0,0x0,8
tick,0x7ff86ea82704,5927417,0,0x0,8
tick,0x7ff86ea82704,5929510,0,0x0,8
tick,0x7ff86ea82704,5931478,0,0x0,8
tick,0x7ff86ea82704,5933385,0,0x0,8
tick,0x7ff86ea82704,5935398,0,0x0,8
tick,0x7ff86ea82704,5937454,0,0x0,8
tick,0x7ff86ea82704,5939469,0,0x0,8
tick,0x7ff86ea82704,5941480,0,0x0,8
tick,0x7ff86ea82704,5943516,0,0x0,8
tick,0x7ff86ea82704,5945415,0,0x0,8
tick,0x7ff86ea82704,5947505,0,0x0,8
tick,0x7ff86ea82704,5949419,0,0x0,8
tick,0x7ff86ea82704,5951397,0,0x0,8
tick,0x7ff86ea82704,5953423,0,0x0,8
tick,0x7ff86ea82704,5955329,0,0x0,8
tick,0x7ff86ea82704,5957557,0,0x0,8
tick,0x7ff86ea82704,5959409,0,0x0,8
tick,0x7ff86ea82704,5961413,0,0x0,8
tick,0x7ff86ea82704,5963333,0,0x0,8
tick,0x7ff86ea82704,5965372,0,0x0,8
tick,0x7ff86ea82704,5967414,0,0x0,8
tick,0x7ff86ea82704,5969407,0,0x0,8
tick,0x7ff86ea82704,5971296,0,0x0,8
tick,0x7ff86ea82704,5973400,0,0x0,8
tick,0x7ff86ea82704,5975396,0,0x0,8
tick,0x7ff86ea82704,5977516,0,0x0,8
tick,0x7ff86ea82704,5979346,0,0x0,8
tick,0x7ff86ea82704,5981452,0,0x0,8
tick,0x7ff86ea82704,5983523,0,0x0,8
tick,0x7ff86ea82704,5985354,0,0x0,8
tick,0x7ff86ea82704,5987314,0,0x0,8
tick,0x7ff86ea82704,5989316,0,0x0,8
tick,0x7ff86ea82704,5991769,0,0x0,8
tick,0x7ff86ea82704,5993490,0,0x0,8
tick,0x7ff86ea82704,5995431,0,0x0,8
tick,0x7ff86ea82704,5997370,0,0x0,8
tick,0x7ff86ea82704,5999373,0,0x0,8
tick,0x7ff86ea82704,6001260,0,0x0,8
tick,0x7ff86ea82704,6003374,0,0x0,8
tick,0x7ff86ea82704,6005351,0,0x0,8
tick,0x7ff86ea82704,6007352,0,0x0,8
tick,0x7ff86ea82704,6009535,0,0x0,8
tick,0x7ff86ea82704,6011171,0,0x0,8
tick,0x7ff86ea82704,6013398,0,0x0,8
tick,0x7ff86ea82704,6015290,0,0x0,8
tick,0x7ff86ea82704,6017332,0,0x0,8
tick,0x7ff86ea82704,6019237,0,0x0,8
tick,0x7ff86ea82704,6021334,0,0x0,8
tick,0x7ff86ea82704,6023158,0,0x0,8
tick,0x7ff86ea82704,6025276,0,0x0,8
tick,0x7ff86ea82704,6027409,0,0x0,8
tick,0x7ff86ea82704,6029190,0,0x0,8
tick,0x7ff86ea82704,6031235,0,0x0,8
tick,0x7ff86ea82704,6033169,0,0x0,8
tick,0x7ff86ea82704,6035344,0,0x0,8
tick,0x7ff86ea82704,6037217,0,0x0,8
tick,0x7ff86ea82704,6039169,0,0x0,8
tick,0x7ff86ea82704,6041192,0,0x0,8
tick,0x7ff86ea82704,6043144,0,0x0,8
tick,0x7ff86ea82704,6045222,0,0x0,8
tick,0x7ff86ea82704,6047219,0,0x0,8
tick,0x7ff86ea82704,6049684,0,0x0,8
tick,0x7ff86ea82704,6051244,0,0x0,8
tick,0x7ff86ea82704,6053376,0,0x0,8
tick,0x7ff86ea82704,6055252,0,0x0,8
tick,0x7ff86ea82704,6057192,0,0x0,8
tick,0x7ff86ea82704,6059283,0,0x0,8
tick,0x7ff86ea82704,6061360,0,0x0,8
tick,0x7ff86ea82704,6063148,0,0x0,8
tick,0x7ff86ea82704,6065321,0,0x0,8
tick,0x7ff86ea82704,6067110,0,0x0,8
tick,0x7ff86ea82704,6069208,0,0x0,8
tick,0x7ff86ea82704,6071067,0,0x0,8
tick,0x7ff86ea82704,6073252,0,0x0,8
tick,0x7ff86ea82704,6075076,0,0x0,8
tick,0x7ff86ea82704,6077164,0,0x0,8
tick,0x7ff86ea82704,6078977,0,0x0,8
tick,0x7ff86ea82704,6081084,0,0x0,8
tick,0x7ff86ea82704,6082948,0,0x0,8
tick,0x7ff86ea82704,6085159,0,0x0,8
tick,0x7ff86ea82704,6087083,0,0x0,8
tick,0x7ff86ea82704,6089124,0,0x0,8
tick,0x7ff86ea82704,6091303,0,0x0,8
tick,0x7ff86ea82704,6093079,0,0x0,8
tick,0x7ff86ea82704,6095020,0,0x0,8
tick,0x7ff86ea82704,6097079,0,0x0,8
tick,0x7ff86ea82704,6099031,0,0x0,8
tick,0x7ff86ea82704,6101098,0,0x0,8
tick,0x7ff86ea82704,6103045,0,0x0,8
tick,0x7ff86ea82704,6105049,0,0x0,8
tick,0x7ff86ea82704,6107072,0,0x0,8
tick,0x7ff86ea82704,6109201,0,0x0,8
tick,0x7ff86ea82704,6111042,0,0x0,8
tick,0x7ff86ea82704,6113047,0,0x0,8
tick,0x7ff86ea82704,6115042,0,0x0,8
tick,0x7ff86ea82704,6116941,0,0x0,8
tick,0x7ff86ea82704,6118937,0,0x0,8
tick,0x7ff86ea82704,6120913,0,0x0,8
tick,0x7ff86ea82704,6122973,0,0x0,8
tick,0x7ff86ea82704,6124920,0,0x0,8
tick,0x7ff86ea82704,6126943,0,0x0,8
tick,0x7ff86ea82704,6128887,0,0x0,8
tick,0x7ff86ea82704,6130943,0,0x0,8
tick,0x7ff86ea82704,6132849,0,0x0,8
tick,0x7ff86ea82704,6135116,0,0x0,8
tick,0x7ff86ea82704,6137149,0,0x0,8
tick,0x7ff86ea82704,6138955,0,0x0,8
tick,0x7ff86ea82704,6140974,0,0x0,8
tick,0x7ff86ea82704,6142887,0,0x0,8
tick,0x7ff86ea82704,6144880,0,0x0,8
tick,0x7ff86ea82704,6146846,0,0x0,8
tick,0x7ff86ea82704,6148894,0,0x0,8
tick,0x7ff86ea82704,6150891,0,0x0,8
tick,0x7ff86ea82704,6152953,0,0x0,8
tick,0x7ff86ea82704,6154836,0,0x0,8
tick,0x7ff86ea82704,6156792,0,0x0,8
tick,0x7ff86ea82704,6158894,0,0x0,8
tick,0x7ff86ea82704,6161050,0,0x0,8
tick,0x7ff86ea82704,6162861,0,0x0,8
tick,0x7ff86ea82704,6165074,0,0x0,8
tick,0x7ff86ea82704,6167011,0,0x0,8
tick,0x7ff86ea82704,6168765,0,0x0,8
tick,0x7ff86ea82704,6170972,0,0x0,8
tick,0x7ff86ea82704,6172841,0,0x0,8
tick,0x7ff86ea82704,6174936,0,0x0,8
tick,0x7ff86ea82704,6177111,0,0x0,8
tick,0x7ff86ea82704,6179125,0,0x0,8
tick,0x7ff86ea82704,6180941,0,0x0,8
tick,0x7ff86ea82704,6182994,0,0x0,8
tick,0x7ff86ea82704,6184999,0,0x0,8
tick,0x7ff86ea82704,6186799,0,0x0,8
tick,0x7ff86ea82704,6188888,0,0x0,8
tick,0x7ff86ea82704,6191062,0,0x0,8
tick,0x7ff86ea82704,6195134,0,0x0,8
tick,0x7ff86ea82704,6197223,0,0x0,8
tick,0x7ff86ea82704,6198872,0,0x0,8
tick,0x7ff86ea82704,6201061,0,0x0,8
tick,0x7ff86ea82704,6202913,0,0x0,8
tick,0x7ff86ea82704,6205691,0,0x0,8
tick,0x7ff86ea82704,6207901,0,0x0,8
tick,0x7ff86ea82704,6210148,0,0x0,8
tick,0x7ff86ea82704,6212148,0,0x0,8
tick,0x7ff86ea82704,6214556,0,0x0,8
tick,0x7ff86ea82704,6215846,0,0x0,8
tick,0x7ff86ea82704,6217992,0,0x0,8
tick,0x7ff86ea82704,6219886,0,0x0,8
tick,0x7ff86ea82704,6221815,0,0x0,8
tick,0x7ff86ea82704,6223739,0,0x0,8
tick,0x7ff86ea82704,6225942,0,0x0,8
tick,0x7ff86ea82704,6227866,0,0x0,8
tick,0x7ff86ea82704,6229890,0,0x0,8
tick,0x7ff86ea82704,6231814,0,0x0,8
tick,0x7ff86ea82704,6233697,0,0x0,8
tick,0x7ff86ea82704,6236142,0,0x0,8
tick,0x7ff86ea82704,6237877,0,0x0,8
tick,0x7ff86ea82704,6239790,0,0x0,8
tick,0x7ff86ea82704,6241726,0,0x0,8
tick,0x7ff86ea82704,6243923,0,0x0,8
tick,0x7ff86ea82704,6245710,0,0x0,8
tick,0x7ff86ea82704,6247899,0,0x0,8
tick,0x7ff86ea82704,6249715,0,0x0,8
tick,0x7ff86ea82704,6251875,0,0x0,8
tick,0x7ff86ea82704,6253666,0,0x0,8
tick,0x7ff86ea82704,6255851,0,0x0,8
tick,0x7ff86ea82704,6257748,0,0x0,8
tick,0x7ff86ea82704,6260068,0,0x0,8
tick,0x7ff86ea82704,6261784,0,0x0,8
tick,0x7ff86ea82704,6263868,0,0x0,8
tick,0x7ff86ea82704,6265710,0,0x0,8
tick,0x7ff86ea82704,6267978,0,0x0,8
tick,0x7ff86ea82704,6269736,0,0x0,8
tick,0x7ff86ea82704,6271701,0,0x0,8
tick,0x7ff86ea82704,6273837,0,0x0,8
tick,0x7ff86ea82704,6275743,0,0x0,8
tick,0x7ff86ea82704,6277860,0,0x0,8
tick,0x7ff86ea82704,6279605,0,0x0,8
tick,0x7ff86ea82704,6281805,0,0x0,8
tick,0x7ff86ea82704,6283732,0,0x0,8
tick,0x7ff86ea82704,6285986,0,0x0,8
tick,0x7ff86ea82704,6287604,0,0x0,8
tick,0x7ff86ea82704,6289690,0,0x0,8
tick,0x7ff86ea82704,6291647,0,0x0,8
tick,0x7ff86ea82704,6293884,0,0x0,8
tick,0x7ff86ea82704,6295593,0,0x0,8
tick,0x7ff86ea82704,6297748,0,0x0,8
tick,0x7ff86ea82704,6299584,0,0x0,8
tick,0x7ff86ea82704,6301522,0,0x0,8
tick,0x7ff86ea82704,6303607,0,0x0,8
tick,0x7ff86ea82704,6305499,0,0x0,8
tick,0x7ff86ea82704,6307611,0,0x0,8
tick,0x7ff86ea82704,6309476,0,0x0,8
tick,0x7ff86ea82704,6311608,0,0x0,8
tick,0x7ff86ea82704,6313451,0,0x0,8
tick,0x7ff86ea82704,6315617,0,0x0,8
tick,0x7ff86ea82704,6317590,0,0x0,8
tick,0x7ff86ea82704,6319481,0,0x0,8
tick,0x7ff86ea82704,6321495,0,0x0,8
tick,0x7ff86ea82704,6323544,0,0x0,8
tick,0x7ff86ea82704,6325489,0,0x0,8
tick,0x7ff86ea82704,6327980,0,0x0,8
tick,0x7ff86ea82704,6329569,0,0x0,8
tick,0x7ff86ea82704,6331480,0,0x0,8
tick,0x7ff86ea82704,6333641,0,0x0,8
tick,0x7ff86ea82704,6335855,0,0x0,8
tick,0x7ff86ea82704,6337843,0,0x0,8
tick,0x7ff86ea82704,6339616,0,0x0,8
tick,0x7ff86ea82704,6341690,0,0x0,8
tick,0x7ff86ea82704,6344252,0,0x0,8
tick,0x7ff86ea82704,6346505,0,0x0,8
tick,0x7ff86ea82704,6348512,0,0x0,8
tick,0x7ff86ea82704,6350514,0,0x0,8
tick,0x7ff86ea82704,6352322,0,0x0,8
tick,0x7ff86ea82704,6354614,0,0x0,8
tick,0x7ff86ea82704,6356415,0,0x0,8
tick,0x7ff86ea82704,6358932,0,0x0,8
tick,0x7ff86ea82704,6360288,0,0x0,8
tick,0x7ff86ea82704,6362516,0,0x0,8
tick,0x7ff86ea82704,6365083,0,0x0,8
tick,0x7ff86ea82704,6366329,0,0x0,8
tick,0x7ff86ea82704,6368360,0,0x0,8
tick,0x7ff86ea82704,6370468,0,0x0,8
tick,0x7ff86ea82704,6372525,0,0x0,8
tick,0x7ff86ea82704,6374577,0,0x0,8
tick,0x7ff86ea82704,6376423,0,0x0,8
tick,0x7ff86ea82704,6378607,0,0x0,8
tick,0x7ff86ea82704,6380253,0,0x0,8
tick,0x7ff86ea82704,6382274,0,0x0,8
tick,0x7ff86ea82704,6384317,0,0x0,8
tick,0x7ff86ea82704,6386774,0,0x0,8
tick,0x7ff86ea82704,6388224,0,0x0,8
tick,0x7ff86ea82704,6390191,0,0x0,8
tick,0x7ff86ea82704,6392183,0,0x0,8
tick,0x7ff86ea82704,6394179,0,0x0,8
tick,0x7ff86ea82704,6396270,0,0x0,8
tick,0x7ff86ea82704,6398298,0,0x0,8
tick,0x7ff86ea82704,6400414,0,0x0,8
tick,0x7ff86ea82704,6402439,0,0x0,8
tick,0x7ff86ea82704,6404435,0,0x0,8
tick,0x7ff86ea82704,6406439,0,0x0,8
tick,0x7ff86ea82704,6408201,0,0x0,8
tick,0x7ff86ea82704,6410266,0,0x0,8
tick,0x7ff86ea82704,6412248,0,0x0,8
tick,0x7ff86ea82704,6414672,0,0x0,8
tick,0x7ff86ea82704,6417376,0,0x0,8
tick,0x7ff86ea82704,6419846,0,0x0,8
tick,0x7ff86ea82704,6421758,0,0x0,8
tick,0x7ff86ea82704,6423641,0,0x0,8
tick,0x7ff86ea82704,6425585,0,0x0,8
tick,0x7ff86ea82704,6429453,0,0x0,8
tick,0x7ff86ea82704,6432754,0,0x0,8
tick,0x7ff86ea82704,6435447,0,0x0,8
tick,0x7ff86ea82704,6437289,0,0x0,8
tick,0x7ff86ea82704,6439371,0,0x0,8
tick,0x7ff86ea82704,6441328,0,0x0,8
tick,0x7ff86ea82704,6443302,0,0x0,8
tick,0x7ff86ea82704,6445462,0,0x0,8
tick,0x7ff86ea82704,6447417,0,0x0,8
tick,0x7ff86ea82704,6449333,0,0x0,8
tick,0x7ff86ea82704,6451427,0,0x0,8
tick,0x7ff86ea82704,6453299,0,0x0,8
tick,0x7ff86ea82704,6455317,0,0x0,8
tick,0x7ff86ea82704,6457303,0,0x0,8
tick,0x7ff86ea82704,6459274,0,0x0,8
tick,0x7ff86ea82704,6461298,0,0x0,8
tick,0x7ff86ea82704,6463439,0,0x0,8
tick,0x7ff86ea82704,6465344,0,0x0,8
tick,0x7ff86ea82704,6467240,0,0x0,8
tick,0x7ff86ea82704,6469405,0,0x0,8
tick,0x7ff86ea82704,6471474,0,0x0,8
tick,0x7ff86ea82704,6473212,0,0x0,8
tick,0x7ff86ea82704,6475425,0,0x0,8
tick,0x7ff86ea82704,6477362,0,0x0,8
tick,0x7ff86ea82704,6479604,0,0x0,8
tick,0x7ff86ea82704,6481210,0,0x0,8
tick,0x7ff86ea82704,6483260,0,0x0,8
tick,0x7ff86ea82704,6485139,0,0x0,8
tick,0x7ff86ea82704,6487337,0,0x0,8
tick,0x7ff86ea82704,6489289,0,0x0,8
tick,0x7ff86ea82704,6491160,0,0x0,8
tick,0x7ff86ea82704,6493129,0,0x0,8
tick,0x7ff86ea82704,6495517,0,0x0,8
tick,0x7ff86ea82704,6497238,0,0x0,8
tick,0x7ff86ea82704,6499153,0,0x0,8
tick,0x7ff86ea82704,6501065,0,0x0,8
tick,0x7ff86ea82704,6503420,0,0x0,8
tick,0x7ff86ea82704,6505310,0,0x0,8
tick,0x7ff86ea82704,6507360,0,0x0,8
tick,0x7ff86ea82704,6509890,0,0x0,8
tick,0x7ff86ea82704,6511728,0,0x0,8
tick,0x7ff86ea82704,6513761,0,0x0,8
tick,0x7ff86ea82704,6515818,0,0x0,8
tick,0x7ff86ea82704,6517817,0,0x0,8
tick,0x7ff86ea82704,6520343,0,0x0,8
tick,0x7ff86ea82704,6521757,0,0x0,8
tick,0x7ff86ea82704,6523780,0,0x0,8
tick,0x7ff86ea82704,6525814,0,0x0,8
tick,0x7ff86ea82704,6527738,0,0x0,8
tick,0x7ff86ea82704,6529908,0,0x0,8
tick,0x7ff86ea82704,6531864,0,0x0,8
tick,0x7ff86ea82704,6534152,0,0x0,8
tick,0x7ff86ea82704,6536009,0,0x0,8
tick,0x7ff86ea82704,6538111,0,0x0,8
tick,0x7ff86ea82704,6539883,0,0x0,8
tick,0x7ff86ea82704,6541869,0,0x0,8
tick,0x7ff86ea82704,6543802,0,0x0,8
tick,0x7ff86ea82704,6545990,0,0x0,8
tick,0x7ff86ea82704,6547997,0,0x0,8
tick,0x7ff86ea82704,6549884,0,0x0,8
tick,0x7ff86ea82704,6551775,0,0x0,8
tick,0x7ff86ea82704,6553892,0,0x0,8
tick,0x7ff86ea82704,6555887,0,0x0,8
tick,0x7ff86ea82704,6558470,0,0x0,8
tick,0x7ff86ea82704,6560030,0,0x0,8
tick,0x7ff86ea82704,6561738,0,0x0,8
tick,0x7ff86ea82704,6563787,0,0x0,8
tick,0x7ff86ea82704,6566125,0,0x0,8
tick,0x7ff86ea82704,6568122,0,0x0,8
tick,0x7ff86ea82704,6570153,0,0x0,8
tick,0x7ff86ea82704,6572135,0,0x0,8
tick,0x7ff86ea82704,6574263,0,0x0,8
tick,0x7ff86ea82704,6575989,0,0x0,8
tick,0x7ff86ea82704,6578118,0,0x0,8
tick,0x7ff86ea82704,6579975,0,0x0,8
tick,0x7ff86ea82704,6581863,0,0x0,8
tick,0x7ff86ea82704,6583946,0,0x0,8
tick,0x7ff86ea82704,6586088,0,0x0,8
tick,0x7ff86ea82704,6587798,0,0x0,8
tick,0x7ff86ea82704,6589897,0,0x0,8
tick,0x7ff86ea82704,6591847,0,0x0,8
tick,0x7ff86ea82704,6593963,0,0x0,8
tick,0x7ff86ea82704,6595657,0,0x0,8
tick,0x7ff86ea82704,6597894,0,0x0,8
tick,0x7ff86ea82704,6599994,0,0x0,8
tick,0x7ff86ea82704,6601947,0,0x0,8
tick,0x7ff86ea82704,6603667,0,0x0,8
tick,0x7ff86ea82704,6605747,0,0x0,8
tick,0x7ff86ea82704,6607870,0,0x0,8
tick,0x7ff86ea82704,6610888,0,0x0,8
tick,0x7ff86ea82704,6613005,0,0x0,8
tick,0x7ff86ea82704,6614951,0,0x0,8
tick,0x7ff86ea82704,6616893,0,0x0,8
tick,0x7ff86ea82704,6618780,0,0x0,8
tick,0x7ff86ea82704,6620906,0,0x0,8
tick,0x7ff86ea82704,6622820,0,0x0,8
tick,0x7ff86ea82704,6625386,0,0x0,8
tick,0x7ff86ea82704,6627096,0,0x0,8
tick,0x7ff86ea82704,6629067,0,0x0,8
tick,0x7ff86ea82704,6630785,0,0x0,8
tick,0x7ff86ea82704,6632799,0,0x0,8
tick,0x7ff86ea82704,6634952,0,0x0,8
tick,0x7ff86ea82704,6636993,0,0x0,8
tick,0x7ff86ea82704,6638765,0,0x0,8
tick,0x7ff86ea82704,6640956,0,0x0,8
tick,0x7ff86ea82704,6642882,0,0x0,8
tick,0x7ff86ea82704,6644885,0,0x0,8
tick,0x7ff86ea82704,6647256,0,0x0,8
tick,0x7ff86ea82704,6648967,0,0x0,8
tick,0x7ff86ea82704,6650690,0,0x0,8
tick,0x7ff86ea82704,6652773,0,0x0,8
tick,0x7ff86ea82704,6654645,0,0x0,8
tick,0x7ff86ea82704,6656649,0,0x0,8
tick,0x7ff86ea82704,6658584,0,0x0,8
tick,0x7ff86ea82704,6660846,0,0x0,8
tick,0x7ff86ea82704,6663011,0,0x0,8
tick,0x7ff86ea82704,6664911,0,0x0,8
tick,0x7ff86ea82704,6666911,0,0x0,8
tick,0x7ff86ea82704,6668837,0,0x0,8
tick,0x7ff86ea82704,6670839,0,0x0,8
tick,0x7ff86ea82704,6672929,0,0x0,8
tick,0x7ff86ea82704,6674884,0,0x0,8
tick,0x7ff86ea82704,6676662,0,0x0,8
tick,0x7ff86ea82704,6678840,0,0x0,8
tick,0x7ff86ea82704,6680510,0,0x0,8
tick,0x7ff86ea82704,6682607,0,0x0,8
tick,0x7ff86ea82704,6684514,0,0x0,8
tick,0x7ff86ea82704,6686690,0,0x0,8
tick,0x7ff86ea82704,6688496,0,0x0,8
tick,0x7ff86ea82704,6690559,0,0x0,8
tick,0x7ff86ea82704,6692690,0,0x0,8
tick,0x7ff86ea82704,6694601,0,0x0,8
tick,0x7ff86ea82704,6696558,0,0x0,8
tick,0x7ff86ea82704,6698582,0,0x0,8
tick,0x7ff86ea82704,6700518,0,0x0,8
tick,0x7ff86ea82704,6702844,0,0x0,8
tick,0x7ff86ea82704,6704572,0,0x0,8
tick,0x7ff86ea82704,6706453,0,0x0,8
tick,0x7ff86ea82704,6708559,0,0x0,8
tick,0x7ff86ea82704,6710479,0,0x0,8
tick,0x7ff86ea82704,6712547,0,0x0,8
tick,0x7ff86ea82704,6714427,0,0x0,8
tick,0x7ff86ea82704,6716549,0,0x0,8
tick,0x7ff86ea82704,6718653,0,0x0,8
tick,0x7ff86ea82704,6720647,0,0x0,8
tick,0x7ff86ea82704,6722722,0,0x0,8
tick,0x7ff86ea82704,6724589,0,0x0,8
tick,0x7ff86ea82704,6726695,0,0x0,8
tick,0x7ff86ea82704,6728492,0,0x0,8
tick,0x7ff86ea82704,6730496,0,0x0,8
tick,0x7ff86ea82704,6732549,0,0x0,8
tick,0x7ff86ea82704,6734420,0,0x0,8
tick,0x7ff86ea82704,6736617,0,0x0,8
tick,0x7ff86ea82704,6738523,0,0x0,8
tick,0x7ff86ea82704,6740550,0,0x0,8
tick,0x7ff86ea82704,6742501,0,0x0,8
tick,0x7ff86ea82704,6744451,0,0x0,8
tick,0x7ff86ea82704,6746451,0,0x0,8
tick,0x7ff86ea82704,6748363,0,0x0,8
tick,0x7ff86ea82704,6750422,0,0x0,8
tick,0x7ff86ea82704,6752453,0,0x0,8
tick,0x7ff86ea82704,6754415,0,0x0,8
tick,0x7ff86ea82704,6756352,0,0x0,8
tick,0x7ff86ea82704,6758525,0,0x0,8
tick,0x7ff86ea82704,6760409,0,0x0,8
tick,0x7ff86ea82704,6762480,0,0x0,8
tick,0x7ff86ea82704,6764533,0,0x0,8
tick,0x7ff86ea82704,6766326,0,0x0,8
tick,0x7ff86ea82704,6768343,0,0x0,8
tick,0x7ff86ea82704,6770359,0,0x0,8
tick,0x7ff86ea82704,6772379,0,0x0,8
tick,0x7ff86ea82704,6774397,0,0x0,8
tick,0x7ff86ea82704,6776417,0,0x0,8
tick,0x7ff86ea82704,6778256,0,0x0,8
tick,0x7ff86ea82704,6780311,0,0x0,8
tick,0x7ff86ea82704,6782307,0,0x0,8
tick,0x7ff86ea82704,6784434,0,0x0,8
tick,0x7ff86ea82704,6786509,0,0x0,8
tick,0x7ff86ea82704,6788340,0,0x0,8
tick,0x7ff86ea82704,6790319,0,0x0,8
tick,0x7ff86ea82704,6792329,0,0x0,8
tick,0x7ff86ea82704,6794490,0,0x0,8
tick,0x7ff86ea82704,6796452,0,0x0,8
tick,0x7ff86ea82704,6798290,0,0x0,8
tick,0x7ff86ea82704,6800334,0,0x0,8
tick,0x7ff86ea82704,6802529,0,0x0,8
tick,0x7ff86ea82704,6804271,0,0x0,8
tick,0x7ff86ea82704,6806281,0,0x0,8
tick,0x7ff86ea82704,6808401,0,0x0,8
tick,0x7ff86ea82704,6810333,0,0x0,8
tick,0x7ff86ea82704,6812386,0,0x0,8
tick,0x7ff86ea82704,6814200,0,0x0,8
tick,0x7ff86ea82704,6816277,0,0x0,8
tick,0x7ff86ea82704,6818327,0,0x0,8
tick,0x7ff86ea82704,6820215,0,0x0,8
tick,0x7ff86ea82704,6822171,0,0x0,8
tick,0x7ff86ea82704,6824116,0,0x0,8
tick,0x7ff86ea82704,6826243,0,0x0,8
tick,0x7ff86ea82704,6828187,0,0x0,8
tick,0x7ff86ea82704,6830248,0,0x0,8
tick,0x7ff86ea82704,6832180,0,0x0,8
tick,0x7ff86ea82704,6834276,0,0x0,8
tick,0x7ff86ea82704,6836256,0,0x0,8
tick,0x7ff86ea82704,6838114,0,0x0,8
tick,0x7ff86ea82704,6840230,0,0x0,8
tick,0x7ff86ea82704,6842231,0,0x0,8
tick,0x7ff86ea82704,6844322,0,0x0,8
tick,0x7ff86ea82704,6846242,0,0x0,8
tick,0x7ff86ea82704,6848145,0,0x0,8
tick,0x7ff86ea82704,6850239,0,0x0,8
tick,0x7ff86ea82704,6852319,0,0x0,8
tick,0x7ff86ea82704,6854325,0,0x0,8
tick,0x7ff86ea82704,6856105,0,0x0,8
tick,0x7ff86ea82704,6858185,0,0x0,8
tick,0x7ff86ea82704,6860138,0,0x0,8
tick,0x7ff86ea82704,6862284,0,0x0,8
tick,0x7ff86ea82704,6864274,0,0x0,8
tick,0x7ff86ea82704,6866220,0,0x0,8
tick,0x7ff86ea82704,6868132,0,0x0,8
tick,0x7ff86ea82704,6870191,0,0x0,8
tick,0x7ff86ea82704,6872140,0,0x0,8
tick,0x7ff86ea82704,6874162,0,0x0,8
tick,0x7ff86ea82704,6876278,0,0x0,8
tick,0x7ff86ea82704,6878384,0,0x0,8
tick,0x7ff86ea82704,6880150,0,0x0,8
tick,0x7ff86ea82704,6882125,0,0x0,8
tick,0x7ff86ea82704,6884040,0,0x0,8
tick,0x7ff86ea82704,6886022,0,0x0,8
tick,0x7ff86ea82704,6887936,0,0x0,8
tick,0x7ff86ea82704,6889982,0,0x0,8
tick,0x7ff86ea82704,6892100,0,0x0,8
tick,0x7ff86ea82704,6894080,0,0x0,8
tick,0x7ff86ea82704,6896148,0,0x0,8
tick,0x7ff86ea82704,6898347,0,0x0,8
tick,0x7ff86ea82704,6900161,0,0x0,8
tick,0x7ff86ea82704,6902125,0,0x0,8
tick,0x7ff86ea82704,6903864,0,0x0,8
tick,0x7ff86ea82704,6906058,0,0x0,8
tick,0x7ff86ea82704,6908121,0,0x0,8
tick,0x7ff86ea82704,6910077,0,0x0,8
tick,0x7ff86ea82704,6912067,0,0x0,8
tick,0x7ff86ea82704,6913914,0,0x0,8
tick,0x7ff86ea82704,6916147,0,0x0,8
tick,0x7ff86ea82704,6918040,0,0x0,8
tick,0x7ff86ea82704,6919914,0,0x0,8
tick,0x7ff86ea82704,6921981,0,0x0,8
tick,0x7ff86ea82704,6923919,0,0x0,8
tick,0x7ff86ea82704,6926013,0,0x0,8
tick,0x7ff86ea82704,6928087,0,0x0,8
tick,0x7ff86ea82704,6929856,0,0x0,8
tick,0x7ff86ea82704,6932060,0,0x0,8
tick,0x7ff86ea82704,6933940,0,0x0,8
tick,0x7ff86ea82704,6935935,0,0x0,8
tick,0x7ff86ea82704,6937900,0,0x0,8
tick,0x7ff86ea82704,6943545,0,0x0,8
tick,0x7ff86ea82704,6945722,0,0x0,8
tick,0x7ff86ea82704,6947747,0,0x0,8
tick,0x7ff86ea82704,6949784,0,0x0,8
tick,0x7ff86ea82704,6951661,0,0x0,8
tick,0x7ff86ea82704,6953594,0,0x0,8
tick,0x7ff86ea82704,6955697,0,0x0,8
tick,0x7ff86ea82704,6957646,0,0x0,8
tick,0x7ff86ea82704,6959983,0,0x0,8
tick,0x7ff86ea82704,6961842,0,0x0,8
tick,0x7ff86ea82704,6963748,0,0x0,8
tick,0x7ff86ea82704,6965680,0,0x0,8
tick,0x7ff86ea82704,6967787,0,0x0,8
tick,0x7ff86ea82704,6969596,0,0x0,8
tick,0x7ff86ea82704,6971844,0,0x0,8
tick,0x7ff86ea82704,6973647,0,0x0,8
tick,0x7ff86ea82704,6975777,0,0x0,8
tick,0x7ff86ea82704,6977595,0,0x0,8
tick,0x7ff86ea82704,6979714,0,0x0,8
tick,0x7ff86ea82704,6981607,0,0x0,8
tick,0x7ff86ea82704,6983700,0,0x0,8
tick,0x7ff86ea82704,6985678,0,0x0,8
tick,0x7ff86ea82704,6987927,0,0x0,8
tick,0x7ff86ea82704,6989836,0,0x0,8
tick,0x7ff86ea82704,6991783,0,0x0,8
tick,0x7ff86ea82704,6993690,0,0x0,8
tick,0x7ff86ea82704,6995849,0,0x0,8
tick,0x7ff86ea82704,6997816,0,0x0,8
tick,0x7ff86ea82704,6999847,0,0x0,8
tick,0x7ff86ea82704,7001944,0,0x0,8
tick,0x7ff86ea82704,7003788,0,0x0,8
tick,0x7ff86ea82704,7006242,0,0x0,8
tick,0x7ff86ea82704,7008369,0,0x0,8
tick,0x7ff86ea82704,7009672,0,0x0,8
tick,0x7ff86ea82704,7011845,0,0x0,8
tick,0x7ff86ea82704,7013925,0,0x0,8
tick,0x7ff86ea82704,7015782,0,0x0,8
tick,0x7ff86ea82704,7018268,0,0x0,8
tick,0x7ff86ea82704,7019470,0,0x0,8
tick,0x7ff86ea82704,7021580,0,0x0,8
tick,0x7ff86ea82704,7023543,0,0x0,8
tick,0x7ff86ea82704,7025508,0,0x0,8
tick,0x7ff86ea82704,7027433,0,0x0,8
tick,0x7ff86ea82704,7029558,0,0x0,8
tick,0x7ff86ea82704,7031468,0,0x0,8
tick,0x7ff86ea82704,7033709,0,0x0,8
tick,0x7ff86ea82704,7035770,0,0x0,8
tick,0x7ff86ea82704,7037575,0,0x0,8
tick,0x7ff86ea82704,7039544,0,0x0,8
tick,0x7ff86ea82704,7041632,0,0x0,8
tick,0x7ff86ea82704,7043454,0,0x0,8
tick,0x7ff86ea82704,7045410,0,0x0,8
tick,0x7ff86ea82704,7047593,0,0x0,8
tick,0x7ff86ea82704,7049525,0,0x0,8
tick,0x7ff86ea82704,7051838,0,0x0,8
tick,0x7ff86ea82704,7053393,0,0x0,8
tick,0x7ff86ea82704,7055819,0,0x0,8
tick,0x7ff86ea82704,7057520,0,0x0,8
tick,0x7ff86ea82704,7059651,0,0x0,8
tick,0x7ff86ea82704,7061360,0,0x0,8
tick,0x7ff86ea82704,7063536,0,0x0,8
tick,0x7ff86ea82704,7065760,0,0x0,8
tick,0x7ff86ea82704,7067592,0,0x0,8
tick,0x7ff86ea82704,7070943,0,0x0,8
tick,0x7ff86ea82704,7072691,0,0x0,8
tick,0x7ff86ea82704,7074422,0,0x0,8
tick,0x7ff86ea82704,7076572,0,0x0,8
tick,0x7ff86ea82704,7078396,0,0x0,8
tick,0x7ff86ea82704,7080449,0,0x0,8
tick,0x7ff86ea82704,7082495,0,0x0,8
tick,0x7ff86ea82704,7084655,0,0x0,8
tick,0x7ff86ea82704,7086809,0,0x0,8
tick,0x7ff86ea82704,7088608,0,0x0,8
tick,0x7ff86ea82704,7090695,0,0x0,8
tick,0x7ff86ea82704,7092740,0,0x0,8
tick,0x7ff86ea82704,7094825,0,0x0,8
tick,0x7ff86ea82704,7096558,0,0x0,8
tick,0x7ff86ea82704,7099049,0,0x0,8
tick,0x7ff86ea82704,7101194,0,0x0,8
tick,0x7ff86ea82704,7103660,0,0x0,8
tick,0x7ff86ea82704,7106127,0,0x0,8
tick,0x7ff86ea82704,7107801,0,0x0,8
tick,0x7ff86ea82704,7109637,0,0x0,8
tick,0x7ff86ea82704,7111627,0,0x0,8
tick,0x7ff86ea82704,7113645,0,0x0,8
tick,0x7ff86ea82704,7115533,0,0x0,8
tick,0x7ff86ea82704,7117677,0,0x0,8
tick,0x7ff86ea82704,7119411,0,0x0,8
tick,0x7ff86ea82704,7121631,0,0x0,8
tick,0x7ff86ea82704,7123511,0,0x0,8
tick,0x7ff86ea82704,7125514,0,0x0,8
tick,0x7ff86ea82704,7127973,0,0x0,8
tick,0x7ff86ea82704,7129969,0,0x0,8
tick,0x7ff86ea82704,7132151,0,0x0,8
tick,0x7ff86ea82704,7134423,0,0x0,8
tick,0x7ff86ea82704,7136380,0,0x0,8
tick,0x7ff86ea82704,7138523,0,0x0,8
tick,0x7ff86ea82704,7140206,0,0x0,8
tick,0x7ff86ea82704,7142212,0,0x0,8
tick,0x7ff86ea82704,7144646,0,0x0,8
tick,0x7ff86ea82704,7146489,0,0x0,8
tick,0x7ff86ea82704,7148204,0,0x0,8
tick,0x7ff86ea82704,7150259,0,0x0,8
tick,0x7ff86ea82704,7152231,0,0x0,8
tick,0x7ff86ea82704,7154427,0,0x0,8
tick,0x7ff86ea82704,7156220,0,0x0,8
tick,0x7ff86ea82704,7158326,0,0x0,8
tick,0x7ff86ea82704,7160540,0,0x0,8
tick,0x7ff86ea82704,7162570,0,0x0,8
tick,0x7ff86ea82704,7164373,0,0x0,8
tick,0x7ff86ea82704,7166143,0,0x0,8
tick,0x7ff86ea82704,7168371,0,0x0,8
tick,0x7ff86ea82704,7170273,0,0x0,8
tick,0x7ff86ea82704,7172349,0,0x0,8
tick,0x7ff86ea82704,7174451,0,0x0,8
tick,0x7ff86ea82704,7178809,0,0x0,8
tick,0x7ff86ea82704,7180562,0,0x0,8
tick,0x7ff86ea82704,7182157,0,0x0,8
tick,0x7ff86ea82704,7184226,0,0x0,8
tick,0x7ff86ea82704,7186173,0,0x0,8
tick,0x7ff86ea82704,7188102,0,0x0,8
tick,0x7ff86ea82704,7190182,0,0x0,8
tick,0x7ff86ea82704,7192079,0,0x0,8
tick,0x7ff86ea82704,7194162,0,0x0,8
tick,0x7ff86ea82704,7196194,0,0x0,8
tick,0x7ff86ea82704,7198289,0,0x0,8
tick,0x7ff86ea82704,7200101,0,0x0,8
tick,0x7ff86ea82704,7202084,0,0x0,8
tick,0x7ff86ea82704,7203888,0,0x0,8
tick,0x7ff86ea82704,7206315,0,0x0,8
tick,0x7ff86ea82704,7208355,0,0x0,8
tick,0x7ff86ea82704,7210067,0,0x0,8
tick,0x7ff86ea82704,7211979,0,0x0,8
tick,0x7ff86ea82704,7214180,0,0x0,8
tick,0x7ff86ea82704,7216545,0,0x0,8
tick,0x7ff86ea82704,7218175,0,0x0,8
tick,0x7ff86ea82704,7221975,0,0x0,8
tick,0x7ff86ea82704,7222942,0,0x0,8
tick,0x7ff86ea82704,7225029,0,0x0,8
tick,0x7ff86ea82704,7227049,0,0x0,8
tick,0x7ff86ea82704,7229698,0,0x0,8
tick,0x7ff86ea82704,7231160,0,0x0,8
tick,0x7ff86ea82704,7232936,0,0x0,8
tick,0x7ff86ea82704,7234939,0,0x0,8
tick,0x7ff86ea82704,7237149,0,0x0,8
tick,0x7ff86ea82704,7239072,0,0x0,8
tick,0x7ff86ea82704,7241943,0,0x0,8
tick,0x7ff86ea82704,7243039,0,0x0,8
tick,0x7ff86ea82704,7245159,0,0x0,8
tick,0x7ff86ea82704,7246946,0,0x0,8
tick,0x7ff86ea82704,7249295,0,0x0,8
tick,0x7ff86ea82704,7251306,0,0x0,8
tick,0x7ff86ea82704,7253007,0,0x0,8
tick,0x7ff86ea82704,7255431,0,0x0,8
tick,0x7ff86ea82704,7256921,0,0x0,8
tick,0x7ff86ea82704,7259089,0,0x0,8
tick,0x7ff86ea82704,7261024,0,0x0,8
tick,0x7ff86ea82704,7262986,0,0x0,8
tick,0x7ff86ea82704,7264967,0,0x0,8
tick,0x7ff86ea82704,7266943,0,0x0,8
tick,0x7ff86ea82704,7269247,0,0x0,8
tick,0x7ff86ea82704,7270778,0,0x0,8
tick,0x7ff86ea82704,7272874,0,0x0,8
tick,0x7ff86ea82704,7274868,0,0x0,8
tick,0x7ff86ea82704,7276926,0,0x0,8
tick,0x7ff86ea82704,7279240,0,0x0,8
tick,0x7ff86ea82704,7281464,0,0x0,8
tick,0x7ff86ea82704,7282851,0,0x0,8
tick,0x7ff86ea82704,7284923,0,0x0,8
tick,0x7ff86ea82704,7286792,0,0x0,8
tick,0x7ff86ea82704,7288830,0,0x0,8
tick,0x7ff86ea82704,7291314,0,0x0,8
tick,0x7ff86ea82704,7292763,0,0x0,8
tick,0x7ff86ea82704,7294740,0,0x0,8
tick,0x7ff86ea82704,7296748,0,0x0,8
tick,0x7ff86ea82704,7298671,0,0x0,8
tick,0x7ff86ea82704,7300799,0,0x0,8
tick,0x7ff86ea82704,7302800,0,0x0,8
tick,0x7ff86ea82704,7304751,0,0x0,8
tick,0x7ff86ea82704,7306663,0,0x0,8
tick,0x7ff86ea82704,7308759,0,0x0,8
tick,0x7ff86ea82704,7310777,0,0x0,8
tick,0x7ff86ea82704,7312643,0,0x0,8
tick,0x7ff86ea82704,7314748,0,0x0,8
tick,0x7ff86ea82704,7316820,0,0x0,8
tick,0x7ff86ea82704,7319082,0,0x0,8
tick,0x7ff86ea82704,7320937,0,0x0,8
tick,0x7ff86ea82704,7322954,0,0x0,8
tick,0x7ff86ea82704,7324906,0,0x0,8
tick,0x7ff86ea82704,7326676,0,0x0,8
tick,0x7ff86ea82704,7328785,0,0x0,8
tick,0x7ff86ea82704,7330733,0,0x0,8
tick,0x7ff86ea82704,7332845,0,0x0,8
tick,0x7ff86ea82704,7334705,0,0x0,8
tick,0x7ff86ea82704,7336923,0,0x0,8
tick,0x7ff86ea82704,7338932,0,0x0,8
tick,0x7ff86ea82704,7340712,0,0x0,8
tick,0x7ff86ea82704,7343106,0,0x0,8
tick,0x7ff86ea82704,7344681,0,0x0,8
tick,0x7ff86ea82704,7346877,0,0x0,8
tick,0x7ff86ea82704,7348748,0,0x0,8
tick,0x7ff86ea82704,7350773,0,0x0,8
tick,0x7ff86ea82704,7352916,0,0x0,8
tick,0x7ff86ea82704,7355087,0,0x0,8
tick,0x7ff86ea82704,7356985,0,0x0,8
tick,0x7ff86ea82704,7358809,0,0x0,8
tick,0x7ff86ea82704,7360914,0,0x0,8
tick,0x7ff86ea82704,7362792,0,0x0,8
tick,0x7ff86ea82704,7364636,0,0x0,8
tick,0x7ff86ea82704,7366779,0,0x0,8
tick,0x7ff86ea82704,7369034,0,0x0,8
tick,0x7ff86ea82704,7370576,0,0x0,8
tick,0x7ff86ea82704,7372792,0,0x0,8
tick,0x7ff86ea82704,7374622,0,0x0,8
tick,0x7ff86ea82704,7376753,0,0x0,8
tick,0x7ff86ea82704,7378679,0,0x0,8
tick,0x7ff86ea82704,7380688,0,0x0,8
tick,0x7ff86ea82704,7382931,0,0x0,8
tick,0x7ff86ea82704,7384843,0,0x0,8
tick,0x7ff86ea82704,7386588,0,0x0,8
tick,0x7ff86ea82704,7388623,0,0x0,8
tick,0x7ff86ea82704,7390561,0,0x0,8
tick,0x7ff86ea82704,7392674,0,0x0,8
tick,0x7ff86ea82704,7394524,0,0x0,8
tick,0x7ff86ea82704,7396623,0,0x0,8
tick,0x7ff86ea82704,7398558,0,0x0,8
tick,0x7ff86ea82704,7400829,0,0x0,8
tick,0x7ff86ea82704,7402651,0,0x0,8
tick,0x7ff86ea82704,7404669,0,0x0,8
tick,0x7ff86ea82704,7406583,0,0x0,8
tick,0x7ff86ea82704,7408611,0,0x0,8
tick,0x7ff86ea82704,7410614,0,0x0,8
tick,0x7ff86ea82704,7412558,0,0x0,8
tick,0x7ff86ea82704,7414548,0,0x0,8
tick,0x7ff86ea82704,7416599,0,0x0,8
tick,0x7ff86ea82704,7418680,0,0x0,8
tick,0x7ff86ea82704,7420593,0,0x0,8
tick,0x7ff86ea82704,7422635,0,0x0,8
tick,0x7ff86ea82704,7424577,0,0x0,8
tick,0x7ff86ea82704,7426469,0,0x0,8
tick,0x7ff86ea82704,7428522,0,0x0,8
tick,0x7ff86ea82704,7430329,0,0x0,8
tick,0x7ff86ea82704,7432656,0,0x0,8
tick,0x7ff86ea82704,7434549,0,0x0,8
tick,0x7ff86ea82704,7436707,0,0x0,8
tick,0x7ff86ea82704,7438416,0,0x0,8
tick,0x7ff86ea82704,7440514,0,0x0,8
tick,0x7ff86ea82704,7442532,0,0x0,8
tick,0x7ff86ea82704,7444453,0,0x0,8
tick,0x7ff86ea82704,7446480,0,0x0,8
tick,0x7ff86ea82704,7450406,0,0x0,8
tick,0x7ff86ea82704,7452617,0,0x0,8
tick,0x7ff86ea82704,7454584,0,0x0,8
tick,0x7ff86ea82704,7456621,0,0x0,8
tick,0x7ff86ea82704,7458691,0,0x0,8
tick,0x7ff86ea82704,7460843,0,0x0,8
tick,0x7ff86ea82704,7462843,0,0x0,8
tick,0x7ff86ea82704,7464878,0,0x0,8
tick,0x7ff86ea82704,7466544,0,0x0,8
tick,0x7ff86ea82704,7468376,0,0x0,8
tick,0x7ff86ea82704,7470459,0,0x0,8
tick,0x7ff86ea82704,7472395,0,0x0,8
tick,0x7ff86ea82704,7474389,0,0x0,8
tick,0x7ff86ea82704,7476316,0,0x0,8
tick,0x7ff86ea82704,7478465,0,0x0,8
tick,0x7ff86ea82704,7480324,0,0x0,8
tick,0x7ff86ea82704,7482350,0,0x0,8
tick,0x7ff86ea82704,7484380,0,0x0,8
tick,0x7ff86ea82704,7486469,0,0x0,8
tick,0x7ff86ea82704,7488336,0,0x0,8
tick,0x7ff86ea82704,7490570,0,0x0,8
tick,0x7ff86ea82704,7492348,0,0x0,8
tick,0x7ff86ea82704,7494499,0,0x0,8
tick,0x7ff86ea82704,7496206,0,0x0,8
tick,0x7ff86ea82704,7498441,0,0x0,8
tick,0x7ff86ea82704,7500329,0,0x0,8
tick,0x7ff86ea82704,7502438,0,0x0,8
tick,0x7ff86ea82704,7504343,0,0x0,8
tick,0x7ff86ea82704,7507432,0,0x0,8
tick,0x7ff86ea82704,7509654,0,0x0,8
tick,0x7ff86ea82704,7511404,0,0x0,8
tick,0x7ff86ea82704,7513704,0,0x0,8
tick,0x7ff86ea82704,7515544,0,0x0,8
tick,0x7ff86ea82704,7517521,0,0x0,8
tick,0x7ff86ea82704,7519266,0,0x0,8
tick,0x7ff86ea82704,7521401,0,0x0,8
tick,0x7ff86ea82704,7523326,0,0x0,8
tick,0x7ff86ea82704,7525363,0,0x0,8
tick,0x7ff86ea82704,7527312,0,0x0,8
tick,0x7ff86ea82704,7529319,0,0x0,8
tick,0x7ff86ea82704,7531580,0,0x0,8
tick,0x7ff86ea82704,7533261,0,0x0,8
tick,0x7ff86ea82704,7535562,0,0x0,8
tick,0x7ff86ea82704,7537190,0,0x0,8
tick,0x7ff86ea82704,7539210,0,0x0,8
tick,0x7ff86ea82704,7541324,0,0x0,8
tick,0x7ff86ea82704,7543213,0,0x0,8
tick,0x7ff86ea82704,7545259,0,0x0,8
tick,0x7ff86ea82704,7547211,0,0x0,8
tick,0x7ff86ea82704,7549232,0,0x0,8
tick,0x7ff86ea82704,7551248,0,0x0,8
tick,0x7ff86ea82704,7553214,0,0x0,8
tick,0x7ff86ea82704,7555088,0,0x0,8
tick,0x7ff86ea82704,7557406,0,0x0,8
tick,0x7ff86ea82704,7559773,0,0x0,8
tick,0x7ff86ea82704,7560983,0,0x0,8
tick,0x7ff86ea82704,7562977,0,0x0,8
tick,0x7ff86ea82704,7565260,0,0x0,8
tick,0x7ff86ea82704,7567029,0,0x0,8
tick,0x7ff86ea82704,7569055,0,0x0,8
tick,0x7ff86ea82704,7570956,0,0x0,8
tick,0x7ff86ea82704,7572977,0,0x0,8
tick,0x7ff86ea82704,7574966,0,0x0,8
tick,0x7ff86ea82704,7576955,0,0x0,8
tick,0x7ff86ea82704,7579200,0,0x0,8
tick,0x7ff86ea82704,7581022,0,0x0,8
tick,0x7ff86ea82704,7582895,0,0x0,8
tick,0x7ff86ea82704,7585027,0,0x0,8
tick,0x7ff86ea82704,7586931,0,0x0,8
tick,0x7ff86ea82704,7589002,0,0x0,8
tick,0x7ff86ea82704,7591032,0,0x0,8
tick,0x7ff86ea82704,7592948,0,0x0,8
tick,0x7ff86ea82704,7594971,0,0x0,8
tick,0x7ff86ea82704,7596951,0,0x0,8
tick,0x7ff86ea82704,7598898,0,0x0,8
tick,0x7ff86ea82704,7601085,0,0x0,8
tick,0x7ff86ea82704,7602949,0,0x0,8
tick,0x7ff86ea82704,7604882,0,0x0,8
tick,0x7ff86ea82704,7606979,0,0x0,8
tick,0x7ff86ea82704,7608944,0,0x0,8
tick,0x7ff86ea82704,7611040,0,0x0,8
tick,0x7ff86ea82704,7612867,0,0x0,8
tick,0x7ff86ea82704,7614942,0,0x0,8
tick,0x7ff86ea82704,7617126,0,0x0,8
tick,0x7ff86ea82704,7618902,0,0x0,8
tick,0x7ff86ea82704,7620999,0,0x0,8
tick,0x7ff86ea82704,7622830,0,0x0,8
tick,0x7ff86ea82704,7624916,0,0x0,8
tick,0x7ff86ea82704,7626802,0,0x0,8
tick,0x7ff86ea82704,7628919,0,0x0,8
tick,0x7ff86ea82704,7630817,0,0x0,8
tick,0x7ff86ea82704,7632871,0,0x0,8
tick,0x7ff86ea82704,7634846,0,0x0,8
tick,0x7ff86ea82704,7636864,0,0x0,8
tick,0x7ff86ea82704,7638782,0,0x0,8
tick,0x7ff86ea82704,7640803,0,0x0,8
tick,0x7ff86ea82704,7642805,0,0x0,8
tick,0x7ff86ea82704,7644817,0,0x0,8
tick,0x7ff86ea82704,7646868,0,0x0,8
tick,0x7ff86ea82704,7648797,0,0x0,8
tick,0x7ff86ea82704,7650802,0,0x0,8
tick,0x7ff86ea82704,7652854,0,0x0,8
tick,0x7ff86ea82704,7654805,0,0x0,8
tick,0x7ff86ea82704,7656882,0,0x0,8
tick,0x7ff86ea82704,7658775,0,0x0,8
tick,0x7ff86ea82704,7660766,0,0x0,8
tick,0x7ff86ea82704,7662732,0,0x0,8
tick,0x7ff86ea82704,7664823,0,0x0,8
tick,0x7ff86ea82704,7666728,0,0x0,8
tick,0x7ff86ea82704,7668790,0,0x0,8
tick,0x7ff86ea82704,7670775,0,0x0,8
tick,0x7ff86ea82704,7672719,0,0x0,8
tick,0x7ff86ea82704,7674738,0,0x0,8
tick,0x7ff86ea82704,7676716,0,0x0,8
tick,0x7ff86ea82704,7678801,0,0x0,8
tick,0x7ff86ea82704,7680708,0,0x0,8
tick,0x7ff86ea82704,7682701,0,0x0,8
tick,0x7ff86ea82704,7684731,0,0x0,8
tick,0x7ff86ea82704,7686903,0,0x0,8
tick,0x7ff86ea82704,7688704,0,0x0,8
tick,0x7ff86ea82704,7690739,0,0x0,8
tick,0x7ff86ea82704,7692644,0,0x0,8
tick,0x7ff86ea82704,7694818,0,0x0,8
tick,0x7ff86ea82704,7696648,0,0x0,8
tick,0x7ff86ea82704,7698748,0,0x0,8
tick,0x7ff86ea82704,7700797,0,0x0,8
tick,0x7ff86ea82704,7702675,0,0x0,8
tick,0x7ff86ea82704,7704900,0,0x0,8
tick,0x7ff86ea82704,7706692,0,0x0,8
tick,0x7ff86ea82704,7708769,0,0x0,8
tick,0x7ff86ea82704,7710642,0,0x0,8
tick,0x7ff86ea82704,7712669,0,0x0,8
tick,0x7ff86ea82704,7714899,0,0x0,8
tick,0x7ff86ea82704,7716592,0,0x0,8
tick,0x7ff86ea82704,7718643,0,0x0,8
tick,0x7ff86ea82704,7720612,0,0x0,8
tick,0x7ff86ea82704,7722579,0,0x0,8
tick,0x7ff86ea82704,7724679,0,0x0,8
tick,0x7ff86ea82704,7726688,0,0x0,8
tick,0x7ff86ea82704,7728745,0,0x0,8
tick,0x7ff86ea82704,7730534,0,0x0,8
tick,0x7ff86ea82704,7732594,0,0x0,8
tick,0x7ff86ea82704,7734605,0,0x0,8
tick,0x7ff86ea82704,7736552,0,0x0,8
tick,0x7ff86ea82704,7738563,0,0x0,8
tick,0x7ff86ea82704,7740541,0,0x0,8
tick,0x7ff86ea82704,7742558,0,0x0,8
tick,0x7ff86ea82704,7744585,0,0x0,8
tick,0x7ff86ea82704,7746638,0,0x0,8
tick,0x7ff86ea82704,7748564,0,0x0,8
tick,0x7ff86ea82704,7750715,0,0x0,8
tick,0x7ff86ea82704,7753150,0,0x0,8
tick,0x7ff86ea82704,7754635,0,0x0,8
tick,0x7ff86ea82704,7756579,0,0x0,8
tick,0x7ff86ea82704,7758723,0,0x0,8
tick,0x7ff86ea82704,7764255,0,0x0,8
tick,0x7ff86ea82704,7765522,0,0x0,8
tick,0x7ff86ea82704,7767889,0,0x0,8
tick,0x7ff86ea82704,7769475,0,0x0,8
tick,0x7ff86ea82704,7772238,0,0x0,8
tick,0x7ff86ea82704,7773410,0,0x0,8
tick,0x7ff86ea82704,7775658,0,0x0,8
tick,0x7ff86ea82704,7777394,0,0x0,8
tick,0x7ff86ea82704,7779528,0,0x0,8
tick,0x7ff86ea82704,7781450,0,0x0,8
tick,0x7ff86ea82704,7784075,0,0x0,8
tick,0x7ff86ea82704,7785851,0,0x0,8
tick,0x7ff86ea82704,7787867,0,0x0,8
tick,0x7ff86ea82704,7789881,0,0x0,8
tick,0x7ff86ea82704,7791729,0,0x0,8
tick,0x7ff86ea82704,7793699,0,0x0,8
tick,0x7ff86ea82704,7795593,0,0x0,8
tick,0x7ff86ea82704,7797494,0,0x0,8
tick,0x7ff86ea82704,7799621,0,0x0,8
tick,0x7ff86ea82704,7801715,0,0x0,8
tick,0x7ff86ea82704,7803796,0,0x0,8
tick,0x7ff86ea82704,7805553,0,0x0,8
tick,0x7ff86ea82704,7807643,0,0x0,8
tick,0x7ff86ea82704,7809778,0,0x0,8
tick,0x7ff86ea82704,7811629,0,0x0,8
tick,0x7ff86ea82704,7813529,0,0x0,8
tick,0x7ff86ea82704,7815429,0,0x0,8
tick,0x7ff86ea82704,7817601,0,0x0,8
tick,0x7ff86ea82704,7819506,0,0x0,8
tick,0x7ff86ea82704,7821601,0,0x0,8
tick,0x7ff86ea82704,7823728,0,0x0,8
tick,0x7ff86ea82704,7825621,0,0x0,8
tick,0x7ff86ea82704,7827386,0,0x0,8
tick,0x7ff86ea82704,7829651,0,0x0,8
tick,0x7ff86ea82704,7831483,0,0x0,8
tick,0x7ff86ea82704,7833702,0,0x0,8
tick,0x7ff86ea82704,7835460,0,0x0,8
tick,0x7ff86ea82704,7837829,0,0x0,8
tick,0x7ff86ea82704,7839403,0,0x0,8
tick,0x7ff86ea82704,7843240,0,0x0,8
tick,0x7ff86ea82704,7844489,0,0x0,8
tick,0x7ff86ea82704,7846468,0,0x0,8
tick,0x7ff86ea82704,7849878,0,0x0,8
tick,0x7ff86ea82704,7851771,0,0x0,8
tick,0x7ff86ea82704,7853403,0,0x0,8
tick,0x7ff86ea82704,7855588,0,0x0,8
tick,0x7ff86ea82704,7857682,0,0x0,8
tick,0x7ff86ea82704,7859482,0,0x0,8
tick,0x7ff86ea82704,7861624,0,0x0,8
tick,0x7ff86ea82704,7863374,0,0x0,8
tick,0x7ff86ea82704,7865595,0,0x0,8
tick,0x7ff86ea82704,7867435,0,0x0,8
tick,0x7ff86ea82704,7869737,0,0x0,8
tick,0x7ff86ea82704,7871825,0,0x0,8
tick,0x7ff86ea82704,7873678,0,0x0,8
tick,0x7ff86ea82704,7875363,0,0x0,8
tick,0x7ff86ea82704,7877878,0,0x0,8
tick,0x7ff86ea82704,7879503,0,0x0,8
tick,0x7ff86ea82704,7881914,0,0x0,8
tick,0x7ff86ea82704,7883426,0,0x0,8
tick,0x7ff86ea82704,7885694,0,0x0,8
tick,0x7ff86ea82704,7887529,0,0x0,8
tick,0x7ff86ea82704,7889486,0,0x0,8
tick,0x7ff86ea82704,7891806,0,0x0,8
tick,0x7ff86ea82704,7893248,0,0x0,8
tick,0x7ff86ea82704,7895245,0,0x0,8
tick,0x7ff86ea82704,7897358,0,0x0,8
tick,0x7ff86ea82704,7899325,0,0x0,8
tick,0x7ff86ea82704,7901256,0,0x0,8
tick,0x7ff86ea82704,7903254,0,0x0,8
tick,0x7ff86ea82704,7905327,0,0x0,8
tick,0x7ff86ea82704,7907232,0,0x0,8
tick,0x7ff86ea82704,7909242,0,0x0,8
tick,0x7ff86ea82704,7911278,0,0x0,8
tick,0x7ff86ea82704,7913160,0,0x0,8
tick,0x7ff86ea82704,7915402,0,0x0,8
tick,0x7ff86ea82704,7917269,0,0x0,8
tick,0x7ff86ea82704,7919248,0,0x0,8
tick,0x7ff86ea82704,7921293,0,0x0,8
tick,0x7ff86ea82704,7923367,0,0x0,8
tick,0x7ff86ea82704,7925248,0,0x0,8
tick,0x7ff86ea82704,7927813,0,0x0,8
tick,0x7ff86ea82704,7929482,0,0x0,8
tick,0x7ff86ea82704,7931263,0,0x0,8
tick,0x7ff86ea82704,7933172,0,0x0,8
tick,0x7ff86ea82704,7935172,0,0x0,8
tick,0x7ff86ea82704,7937131,0,0x0,8
tick,0x7ff86ea82704,7939165,0,0x0,8
tick,0x7ff86ea82704,7941182,0,0x0,8
tick,0x7ff86ea82704,7943304,0,0x0,8
tick,0x7ff86ea82704,7945109,0,0x0,8
tick,0x7ff86ea82704,7947156,0,0x0,8
tick,0x7ff86ea82704,7949218,0,0x0,8
tick,0x7ff86ea82704,7951264,0,0x0,8
tick,0x7ff86ea82704,7953142,0,0x0,8
tick,0x7ff86ea82704,7955194,0,0x0,8
tick,0x7ff86ea82704,7957128,0,0x0,8
tick,0x7ff86ea82704,7959207,0,0x0,8
tick,0x7ff86ea82704,7961182,0,0x0,8
tick,0x7ff86ea82704,7963143,0,0x0,8
tick,0x7ff86ea82704,7965078,0,0x0,8
tick,0x7ff86ea82704,7967214,0,0x0,8
tick,0x7ff86ea82704,7969020,0,0x0,8
tick,0x7ff86ea82704,7971122,0,0x0,8
tick,0x7ff86ea82704,7973107,0,0x0,8
tick,0x7ff86ea82704,7975091,0,0x0,8
tick,0x7ff86ea82704,7977051,0,0x0,8
tick,0x7ff86ea82704,7979170,0,0x0,8
tick,0x7ff86ea82704,7981485,0,0x0,8
tick,0x7ff86ea82704,7983104,0,0x0,8
tick,0x7ff86ea82704,7985557,0,0x0,8
tick,0x7ff86ea82704,7987003,0,0x0,8
tick,0x7ff86ea82704,7989043,0,0x0,8
tick,0x7ff86ea82704,7991092,0,0x0,8
tick,0x7ff86ea82704,7993379,0,0x0,8
tick,0x7ff86ea82704,7995153,0,0x0,8
tick,0x7ff86ea82704,7997040,0,0x0,8
tick,0x7ff86ea82704,7999030,0,0x0,8
tick,0x7ff86ea82704,8001066,0,0x0,8
tick,0x7ff86ea82704,8002993,0,0x0,8
tick,0x7ff86ea82704,8005278,0,0x0,8
tick,0x7ff86ea82704,8007020,0,0x0,8
tick,0x7ff86ea82704,8009128,0,0x0,8
tick,0x7ff86ea82704,8011015,0,0x0,8
tick,0x7ff86ea82704,8013081,0,0x0,8
tick,0x7ff86ea82704,8015079,0,0x0,8
tick,0x7ff86ea82704,8017156,0,0x0,8
tick,0x7ff86ea82704,8018956,0,0x0,8
tick,0x7ff86ea82704,8021284,0,0x0,8
tick,0x7ff86ea82704,8023157,0,0x0,8
tick,0x7ff86ea82704,8024932,0,0x0,8
tick,0x7ff86ea82704,8027001,0,0x0,8
tick,0x7ff86ea82704,8028995,0,0x0,8
tick,0x7ff86ea82704,8030997,0,0x0,8
tick,0x7ff86ea82704,8032962,0,0x0,8
tick,0x7ff86ea82704,8035022,0,0x0,8
tick,0x7ff86ea82704,8037057,0,0x0,8
tick,0x7ff86ea82704,8039085,0,0x0,8
tick,0x7ff86ea82704,8041057,0,0x0,8
tick,0x7ff86ea82704,8043266,0,0x0,8
tick,0x7ff86ea82704,8044846,0,0x0,8
tick,0x7ff86ea82704,8047280,0,0x0,8
tick,0x7ff86ea82704,8048996,0,0x0,8
tick,0x7ff86ea82704,8050860,0,0x0,8
tick,0x7ff86ea82704,8053121,0,0x0,8
tick,0x7ff86ea82704,8054833,0,0x0,8
tick,0x7ff86ea82704,8057007,0,0x0,8
tick,0x7ff86ea82704,8058880,0,0x0,8
tick,0x7ff86ea82704,8060865,0,0x0,8
tick,0x7ff86ea82704,8062982,0,0x0,8
tick,0x7ff86ea82704,8064815,0,0x0,8
tick,0x7ff86ea82704,8066998,0,0x0,8
tick,0x7ff86ea82704,8068825,0,0x0,8
tick,0x7ff86ea82704,8071353,0,0x0,8
tick,0x7ff86ea82704,8073543,0,0x0,8
tick,0x7ff86ea82704,8074808,0,0x0,8
tick,0x7ff86ea82704,8077037,0,0x0,8
tick,0x7ff86ea82704,8079121,0,0x0,8
tick,0x7ff86ea82704,8080867,0,0x0,8
tick,0x7ff86ea82704,8083095,0,0x0,8
tick,0x7ff86ea82704,8084866,0,0x0,8
tick,0x7ff86ea82704,8087178,0,0x0,8
tick,0x7ff86ea82704,8089663,0,0x0,8
tick,0x7ff86ea82704,8090965,0,0x0,8
tick,0x7ff86ea82704,8093732,0,0x0,8
tick,0x7ff86ea82704,8095687,0,0x0,8
tick,0x7ff86ea82704,8097595,0,0x0,8
tick,0x7ff86ea82704,8099796,0,0x0,8
tick,0x7ff86ea82704,8101582,0,0x0,8
tick,0x7ff86ea82704,8103813,0,0x0,8
tick,0x7ff86ea82704,8105753,0,0x0,8
tick,0x7ff86ea82704,8107518,0,0x0,8
tick,0x7ff86ea82704,8109565,0,0x0,8
tick,0x7ff86ea82704,8111652,0,0x0,8
tick,0x7ff86ea82704,8113545,0,0x0,8
tick,0x7ff86ea82704,8115585,0,0x0,8
tick,0x7ff86ea82704,8117479,0,0x0,8
tick,0x7ff86ea82704,8119676,0,0x0,8
tick,0x7ff86ea82704,8121564,0,0x0,8
tick,0x7ff86ea82704,8123575,0,0x0,8
tick,0x7ff86ea82704,8125571,0,0x0,8
tick,0x7ff86ea82704,8127576,0,0x0,8
tick,0x7ff86ea82704,8129651,0,0x0,8
tick,0x7ff86ea82704,8131493,0,0x0,8
tick,0x7ff86ea82704,8133495,0,0x0,8
tick,0x7ff86ea82704,8135476,0,0x0,8
tick,0x7ff86ea82704,8137565,0,0x0,8
tick,0x7ff86ea82704,8139472,0,0x0,8
tick,0x7ff86ea82704,8141424,0,0x0,8
tick,0x7ff86ea82704,8143512,0,0x0,8
tick,0x7ff86ea82704,8145446,0,0x0,8
tick,0x7ff86ea82704,8147519,0,0x0,8
tick,0x7ff86ea82704,8149454,0,0x0,8
tick,0x7ff86ea82704,8151443,0,0x0,8
tick,0x7ff86ea82704,8153458,0,0x0,8
tick,0x7ff86ea82704,8155431,0,0x0,8
tick,0x7ff86ea82704,8157473,0,0x0,8
tick,0x7ff86ea82704,8159772,0,0x0,8
tick,0x7ff86ea82704,8161514,0,0x0,8
tick,0x7ff86ea82704,8163432,0,0x0,8
tick,0x7ff86ea82704,8165459,0,0x0,8
tick,0x7ff86ea82704,8167395,0,0x0,8
tick,0x7ff86ea82704,8169725,0,0x0,8
tick,0x7ff86ea82704,8171371,0,0x0,8
tick,0x7ff86ea82704,8173466,0,0x0,8
tick,0x7ff86ea82704,8175588,0,0x0,8
tick,0x7ff86ea82704,8177947,0,0x0,8
tick,0x7ff86ea82704,8179807,0,0x0,8
tick,0x7ff86ea82704,8181803,0,0x0,8
tick,0x7ff86ea82704,8183704,0,0x0,8
tick,0x7ff86ea82704,8185788,0,0x0,8
tick,0x7ff86ea82704,8188156,0,0x0,8
tick,0x7ff86ea82704,8189603,0,0x0,8
tick,0x7ff86ea82704,8191671,0,0x0,8
tick,0x7ff86ea82704,8193616,0,0x0,8
tick,0x7ff86ea82704,8195529,0,0x0,8
tick,0x7ff86ea82704,8197810,0,0x0,8
tick,0x7ff86ea82704,8199294,0,0x0,8
tick,0x7ff86ea82704,8201715,0,0x0,8
tick,0x7ff86ea82704,8203353,0,0x0,8
tick,0x7ff86ea82704,8205668,0,0x0,8
tick,0x7ff86ea82704,8207280,0,0x0,8
tick,0x7ff86ea82704,8209457,0,0x0,8
tick,0x7ff86ea82704,8211410,0,0x0,8
tick,0x7ff86ea82704,8213363,0,0x0,8
tick,0x7ff86ea82704,8215378,0,0x0,8
tick,0x7ff86ea82704,8217328,0,0x0,8
tick,0x7ff86ea82704,8219303,0,0x0,8
tick,0x7ff86ea82704,8221386,0,0x0,8
tick,0x7ff86ea82704,8223246,0,0x0,8
tick,0x7ff86ea82704,8225487,0,0x0,8
tick,0x7ff86ea82704,8227382,0,0x0,8
tick,0x7ff86ea82704,8229386,0,0x0,8
tick,0x7ff86ea82704,8231551,0,0x0,8
tick,0x7ff86ea82704,8233693,0,0x0,8
tick,0x7ff86ea82704,8235780,0,0x0,8
tick,0x7ff86ea82704,8237350,0,0x0,8
tick,0x7ff86ea82704,8239371,0,0x0,8
tick,0x7ff86ea82704,8241224,0,0x0,8
tick,0x7ff86ea82704,8243306,0,0x0,8
tick,0x7ff86ea82704,8245236,0,0x0,8
tick,0x7ff86ea82704,8247232,0,0x0,8
tick,0x7ff86ea82704,8249272,0,0x0,8
tick,0x7ff86ea82704,8251204,0,0x0,8
tick,0x7ff86ea82704,8253295,0,0x0,8
tick,0x7ff86ea82704,8255403,0,0x0,8
tick,0x7ff86ea82704,8257426,0,0x0,8
tick,0x7ff86ea82704,8259355,0,0x0,8
tick,0x7ff86ea82704,8261271,0,0x0,8
tick,0x7ff86ea82704,8263543,0,0x0,8
tick,0x7ff86ea82704,8265186,0,0x0,8
tick,0x7ff86ea82704,8267205,0,0x0,8
tick,0x7ff86ea82704,8269176,0,0x0,8
tick,0x7ff86ea82704,8271309,0,0x0,8
tick,0x7ff86ea82704,8273358,0,0x0,8
tick,0x7ff86ea82704,8275434,0,0x0,8
tick,0x7ff86ea82704,8277242,0,0x0,8
tick,0x7ff86ea82704,8279144,0,0x0,8
tick,0x7ff86ea82704,8281262,0,0x0,8
tick,0x7ff86ea82704,8283202,0,0x0,8
tick,0x7ff86ea82704,8285214,0,0x0,8
tick,0x7ff86ea82704,8287203,0,0x0,8
tick,0x7ff86ea82704,8289114,0,0x0,8
tick,0x7ff86ea82704,8291164,0,0x0,8
tick,0x7ff86ea82704,8293303,0,0x0,8
tick,0x7ff86ea82704,8295126,0,0x0,8
tick,0x7ff86ea82704,8297235,0,0x0,8
tick,0x7ff86ea82704,8299172,0,0x0,8
tick,0x7ff86ea82704,8301203,0,0x0,8
tick,0x7ff86ea82704,8303043,0,0x0,8
tick,0x7ff86ea82704,8305128,0,0x0,8
tick,0x7ff86ea82704,8307087,0,0x0,8
tick,0x7ff86ea82704,8309204,0,0x0,8
tick,0x7ff86ea82704,8311056,0,0x0,8
tick,0x7ff86ea82704,8313129,0,0x0,8
tick,0x7ff86ea82704,8315014,0,0x0,8
tick,0x7ff86ea82704,8317080,0,0x0,8
tick,0x7ff86ea82704,8319031,0,0x0,8
tick,0x7ff86ea82704,8321134,0,0x0,8
tick,0x7ff86ea82704,8323264,0,0x0,8
tick,0x7ff86ea82704,8324975,0,0x0,8
tick,0x7ff86ea82704,8326958,0,0x0,8
tick,0x7ff86ea82704,8329076,0,0x0,8
tick,0x7ff86ea82704,8330958,0,0x0,8
tick,0x7ff86ea82704,8333104,0,0x0,8
tick,0x7ff86ea82704,8334953,0,0x0,8
tick,0x7ff86ea82704,8337027,0,0x0,8
tick,0x7ff86ea82704,8338988,0,0x0,8
tick,0x7ff86ea82704,8341100,0,0x0,8
tick,0x7ff86ea82704,8343091,0,0x0,8
tick,0x7ff86ea82704,8345005,0,0x0,8
tick,0x7ff86ea82704,8346969,0,0x0,8
tick,0x7ff86ea82704,8348933,0,0x0,8
tick,0x7ff86ea82704,8350973,0,0x0,8
tick,0x7ff86ea82704,8353047,0,0x0,8
tick,0x7ff86ea82704,8355002,0,0x0,8
tick,0x7ff86ea82704,8356987,0,0x0,8
tick,0x7ff86ea82704,8359068,0,0x0,8
tick,0x7ff86ea82704,8360996,0,0x0,8
tick,0x7ff86ea82704,8362979,0,0x0,8
tick,0x7ff86ea82704,8365091,0,0x0,8
tick,0x7ff86ea82704,8366970,0,0x0,8
tick,0x7ff86ea82704,8368975,0,0x0,8
tick,0x7ff86ea82704,8370887,0,0x0,8
tick,0x7ff86ea82704,8373027,0,0x0,8
tick,0x7ff86ea82704,8374888,0,0x0,8
tick,0x7ff86ea82704,8377304,0,0x0,8
tick,0x7ff86ea82704,8378874,0,0x0,8
tick,0x7ff86ea82704,8381036,0,0x0,8
tick,0x7ff86ea82704,8383127,0,0x0,8
tick,0x7ff86ea82704,8384919,0,0x0,8
tick,0x7ff86ea82704,8386877,0,0x0,8
tick,0x7ff86ea82704,8388966,0,0x0,8
tick,0x7ff86ea82704,8390911,0,0x0,8
tick,0x7ff86ea82704,8393075,0,0x0,8
tick,0x7ff86ea82704,8394940,0,0x0,8
tick,0x7ff86ea82704,8396993,0,0x0,8
tick,0x7ff86ea82704,8398999,0,0x0,8
tick,0x7ff86ea82704,8400956,0,0x0,8
tick,0x7ff86ea82704,8403288,0,0x0,8
tick,0x7ff86ea82704,8404960,0,0x0,8
tick,0x7ff86ea82704,8406846,0,0x0,8
tick,0x7ff86ea82704,8408883,0,0x0,8
tick,0x7ff86ea82704,8410977,0,0x0,8
tick,0x7ff86ea82704,8412784,0,0x0,8
tick,0x7ff86ea82704,8414868,0,0x0,8
tick,0x7ff86ea82704,8416827,0,0x0,8
tick,0x7ff86ea82704,8418808,0,0x0,8
tick,0x7ff86ea82704,8420777,0,0x0,8
tick,0x7ff86ea82704,8422840,0,0x0,8
tick,0x7ff86ea82704,8424954,0,0x0,8
tick,0x7ff86ea82704,8427099,0,0x0,8
tick,0x7ff86ea82704,8428810,0,0x0,8
tick,0x7ff86ea82704,8430718,0,0x0,8
tick,0x7ff86ea82704,8432762,0,0x0,8
tick,0x7ff86ea82704,8434805,0,0x0,8
tick,0x7ff86ea82704,8436720,0,0x0,8
tick,0x7ff86ea82704,8439098,0,0x0,8
tick,0x7ff86ea82704,8440708,0,0x0,8
tick,0x7ff86ea82704,8442768,0,0x0,8
tick,0x7ff86ea82704,8444749,0,0x0,8
tick,0x7ff86ea82704,8446784,0,0x0,8
tick,0x7ff86ea82704,8448731,0,0x0,8
tick,0x7ff86ea82704,8450720,0,0x0,8
tick,0x7ff86ea82704,8452782,0,0x0,8
tick,0x7ff86ea82704,8454744,0,0x0,8
tick,0x7ff86ea82704,8456788,0,0x0,8
tick,0x7ff86ea82704,8458826,0,0x0,8
tick,0x7ff86ea82704,8460738,0,0x0,8
tick,0x7ff86ea82704,8462642,0,0x0,8
tick,0x7ff86ea82704,8464645,0,0x0,8
tick,0x7ff86ea82704,8466600,0,0x0,8
tick,0x7ff86ea82704,8468622,0,0x0,8
tick,0x7ff86ea82704,8470577,0,0x0,8
tick,0x7ff86ea82704,8472725,0,0x0,8
tick,0x7ff86ea82704,8474605,0,0x0,8
tick,0x7ff86ea82704,8476725,0,0x0,8
tick,0x7ff86ea82704,8478622,0,0x0,8
tick,0x7ff86ea82704,8480616,0,0x0,8
tick,0x7ff86ea82704,8482654,0,0x0,8
tick,0x7ff86ea82704,8484597,0,0x0,8
tick,0x7ff86ea82704,8486656,0,0x0,8
tick,0x7ff86ea82704,8488612,0,0x0,8
tick,0x7ff86ea82704,8490602,0,0x0,8
tick,0x7ff86ea82704,8492622,0,0x0,8
tick,0x7ff86ea82704,8494653,0,0x0,8
tick,0x7ff86ea82704,8496679,0,0x0,8
tick,0x7ff86ea82704,8498601,0,0x0,8
tick,0x7ff86ea82704,8500772,0,0x0,8
tick,0x7ff86ea82704,8502557,0,0x0,8
tick,0x7ff86ea82704,8504615,0,0x0,8
tick,0x7ff86ea82704,8506637,0,0x0,8
tick,0x7ff86ea82704,8508517,0,0x0,8
tick,0x7ff86ea82704,8510562,0,0x0,8
tick,0x7ff86ea82704,8512705,0,0x0,8
tick,0x7ff86ea82704,8514749,0,0x0,8
tick,0x7ff86ea82704,8516539,0,0x0,8
tick,0x7ff86ea82704,8518540,0,0x0,8
tick,0x7ff86ea82704,8520669,0,0x0,8
tick,0x7ff86ea82704,8522668,0,0x0,8
tick,0x7ff86ea82704,8524697,0,0x0,8
tick,0x7ff86ea82704,8526750,0,0x0,8
tick,0x7ff86ea82704,8528771,0,0x0,8
tick,0x7ff86ea82704,8530603,0,0x0,8
tick,0x7ff86ea82704,8532535,0,0x0,8
tick,0x7ff86ea82704,8534794,0,0x0,8
tick,0x7ff86ea82704,8536508,0,0x0,8
tick,0x7ff86ea82704,8538492,0,0x0,8
tick,0x7ff86ea82704,8540477,0,0x0,8
tick,0x7ff86ea82704,8542524,0,0x0,8
tick,0x7ff86ea82704,8544550,0,0x0,8
tick,0x7ff86ea82704,8546498,0,0x0,8
tick,0x7ff86ea82704,8548491,0,0x0,8
tick,0x7ff86ea82704,8550604,0,0x0,8
tick,0x7ff86ea82704,8552740,0,0x0,8
tick,0x7ff86ea82704,8554660,0,0x0,8
tick,0x7ff86ea82704,8556440,0,0x0,8
tick,0x7ff86ea82704,8558555,0,0x0,8
tick,0x7ff86ea82704,8560467,0,0x0,8
tick,0x7ff86ea82704,8562420,0,0x0,8
tick,0x7ff86ea82704,8564532,0,0x0,8
tick,0x7ff86ea82704,8566532,0,0x0,8
tick,0x7ff86ea82704,8568361,0,0x0,8
tick,0x7ff86ea82704,8570576,0,0x0,8
tick,0x7ff86ea82704,8572404,0,0x0,8
tick,0x7ff86ea82704,8574394,0,0x0,8
tick,0x7ff86ea82704,8576377,0,0x0,8
tick,0x7ff86ea82704,8578562,0,0x0,8
tick,0x7ff86ea82704,8580431,0,0x0,8
tick,0x7ff86ea82704,8582840,0,0x0,8
tick,0x7ff86ea82704,8584320,0,0x0,8
tick,0x7ff86ea82704,8586464,0,0x0,8
tick,0x7ff86ea82704,8588308,0,0x0,8
tick,0x7ff86ea82704,8590420,0,0x0,8
tick,0x7ff86ea82704,8592433,0,0x0,8
tick,0x7ff86ea82704,8594505,0,0x0,8
tick,0x7ff86ea82704,8596491,0,0x0,8
tick,0x7ff86ea82704,8598471,0,0x0,8
tick,0x7ff86ea82704,8600435,0,0x0,8
tick,0x7ff86ea82704,8602569,0,0x0,8
tick,0x7ff86ea82704,8604341,0,0x0,8
tick,0x7ff86ea82704,8606476,0,0x0,8
tick,0x7ff86ea82704,8608439,0,0x0,8
tick,0x7ff86ea82704,8610873,0,0x0,8
tick,0x7ff86ea82704,8612557,0,0x0,8
tick,0x7ff86ea82704,8614462,0,0x0,8
tick,0x7ff86ea82704,8617025,0,0x0,8
tick,0x7ff86ea82704,8618292,0,0x0,8
tick,0x7ff86ea82704,8620480,0,0x0,8
tick,0x7ff86ea82704,8622589,0,0x0,8
tick,0x7ff86ea82704,8624217,0,0x0,8
tick,0x7ff86ea82704,8626343,0,0x0,8
tick,0x7ff86ea82704,8628330,0,0x0,8
tick,0x7ff86ea82704,8630258,0,0x0,8
tick,0x7ff86ea82704,8632256,0,0x0,8
tick,0x7ff86ea82704,8634207,0,0x0,8
tick,0x7ff86ea82704,8636134,0,0x0,8
tick,0x7ff86ea82704,8638243,0,0x0,8
tick,0x7ff86ea82704,8640196,0,0x0,8
tick,0x7ff86ea82704,8642222,0,0x0,8
tick,0x7ff86ea82704,8644307,0,0x0,8
tick,0x7ff86ea82704,8646195,0,0x0,8
tick,0x7ff86ea82704,8648087,0,0x0,8
tick,0x7ff86ea82704,8650196,0,0x0,8
tick,0x7ff86ea82704,8652131,0,0x0,8
tick,0x7ff86ea82704,8654188,0,0x0,8
tick,0x7ff86ea82704,8656104,0,0x0,8
tick,0x7ff86ea82704,8658153,0,0x0,8
tick,0x7ff86ea82704,8660106,0,0x0,8
tick,0x7ff86ea82704,8662115,0,0x0,8
tick,0x7ff86ea82704,8664148,0,0x0,8
tick,0x7ff86ea82704,8666155,0,0x0,8
tick,0x7ff86ea82704,8668180,0,0x0,8
tick,0x7ff86ea82704,8670106,0,0x0,8
tick,0x7ff86ea82704,8672103,0,0x0,8
tick,0x7ff86ea82704,8674111,0,0x0,8
tick,0x7ff86ea82704,8676090,0,0x0,8
tick,0x7ff86ea82704,8678065,0,0x0,8
tick,0x7ff86ea82704,8680032,0,0x0,8
tick,0x7ff86ea82704,8682102,0,0x0,8
tick,0x7ff86ea82704,8684195,0,0x0,8
tick,0x7ff86ea82704,8686113,0,0x0,8
tick,0x7ff86ea82704,8688043,0,0x0,8
tick,0x7ff86ea82704,8690051,0,0x0,8
tick,0x7ff86ea82704,8692065,0,0x0,8
tick,0x7ff86ea82704,8694029,0,0x0,8
tick,0x7ff86ea82704,8696107,0,0x0,8
tick,0x7ff86ea82704,8698040,0,0x0,8
tick,0x7ff86ea82704,8699993,0,0x0,8
tick,0x7ff86ea82704,8702035,0,0x0,8
tick,0x7ff86ea82704,8704036,0,0x0,8
tick,0x7ff86ea82704,8706035,0,0x0,8
tick,0x7ff86ea82704,8708047,0,0x0,8
tick,0x7ff86ea82704,8710158,0,0x0,8
tick,0x7ff86ea82704,8711988,0,0x0,8
tick,0x7ff86ea82704,8714004,0,0x0,8
tick,0x7ff86ea82704,8715990,0,0x0,8
tick,0x7ff86ea82704,8717984,0,0x0,8
tick,0x7ff86ea82704,8719956,0,0x0,8
tick,0x7ff86ea82704,8721936,0,0x0,8
tick,0x7ff86ea82704,8724019,0,0x0,8
tick,0x7ff86ea82704,8726009,0,0x0,8
tick,0x7ff86ea82704,8727900,0,0x0,8
tick,0x7ff86ea82704,8729961,0,0x0,8
tick,0x7ff86ea82704,8731968,0,0x0,8
tick,0x7ff86ea82704,8734056,0,0x0,8
tick,0x7ff86ea82704,8736103,0,0x0,8
tick,0x7ff86ea82704,8741383,0,0x0,8
tick,0x7ff86ea82704,8743238,0,0x0,8
tick,0x7ff86ea82704,8745500,0,0x0,8
tick,0x7ff86ea82704,8747190,0,0x0,8
tick,0x7ff86ea82704,8749218,0,0x0,8
tick,0x7ff86ea82704,8751312,0,0x0,8
tick,0x7ff86ea82704,8753218,0,0x0,8
tick,0x7ff86ea82704,8755108,0,0x0,8
tick,0x7ff86ea82704,8757041,0,0x0,8
tick,0x7ff86ea82704,8759112,0,0x0,8
tick,0x7ff86ea82704,8761867,0,0x0,8
tick,0x7ff86ea82704,8764055,0,0x0,8
tick,0x7ff86ea82704,8766499,0,0x0,8
tick,0x7ff86ea82704,8767998,0,0x0,8
tick,0x7ff86ea82704,8770043,0,0x0,8
tick,0x7ff86ea82704,8772197,0,0x0,8
tick,0x7ff86ea82704,8774481,0,0x0,8
tick,0x7ff86ea82704,8776187,0,0x0,8
tick,0x7ff86ea82704,8778121,0,0x0,8
tick,0x7ff86ea82704,8780007,0,0x0,8
tick,0x7ff86ea82704,8781941,0,0x0,8
tick,0x7ff86ea82704,8783956,0,0x0,8
tick,0x7ff86ea82704,8786028,0,0x0,8
tick,0x7ff86ea82704,8787852,0,0x0,8
tick,0x7ff86ea82704,8789879,0,0x0,8
tick,0x7ff86ea82704,8791876,0,0x0,8
tick,0x7ff86ea82704,8794089,0,0x0,8
tick,0x7ff86ea82704,8795923,0,0x0,8
tick,0x7ff86ea82704,8797931,0,0x0,8
tick,0x7ff86ea82704,8799888,0,0x0,8
tick,0x7ff86ea82704,8801969,0,0x0,8
tick,0x7ff86ea82704,8803847,0,0x0,8
tick,0x7ff86ea82704,8805811,0,0x0,8
tick,0x7ff86ea82704,8808027,0,0x0,8
tick,0x7ff86ea82704,8810087,0,0x0,8
tick,0x7ff86ea82704,8811887,0,0x0,8
tick,0x7ff86ea82704,8813887,0,0x0,8
tick,0x7ff86ea82704,8815750,0,0x0,8
tick,0x7ff86ea82704,8818199,0,0x0,8
tick,0x7ff86ea82704,8819793,0,0x0,8
tick,0x7ff86ea82704,8821907,0,0x0,8
tick,0x7ff86ea82704,8823737,0,0x0,8
tick,0x7ff86ea82704,8825823,0,0x0,8
tick,0x7ff86ea82704,8827971,0,0x0,8
tick,0x7ff86ea82704,8829760,0,0x0,8
tick,0x7ff86ea82704,8831750,0,0x0,8
tick,0x7ff86ea82704,8833820,0,0x0,8
tick,0x7ff86ea82704,8835917,0,0x0,8
tick,0x7ff86ea82704,8837705,0,0x0,8
tick,0x7ff86ea82704,8839730,0,0x0,8
tick,0x7ff86ea82704,8841726,0,0x0,8
tick,0x7ff86ea82704,8843870,0,0x0,8
tick,0x7ff86ea82704,8845641,0,0x0,8
tick,0x7ff86ea82704,8847619,0,0x0,8
tick,0x7ff86ea82704,8849702,0,0x0,8
tick,0x7ff86ea82704,8851788,0,0x0,8
tick,0x7ff86ea82704,8853677,0,0x0,8
tick,0x7ff86ea82704,8855661,0,0x0,8
tick,0x7ff86ea82704,8857712,0,0x0,8
tick,0x7ff86ea82704,8859715,0,0x0,8
tick,0x7ff86ea82704,8861604,0,0x0,8
tick,0x7ff86ea82704,8863694,0,0x0,8
tick,0x7ff86ea82704,8865635,0,0x0,8
tick,0x7ff86ea82704,8867537,0,0x0,8
tick,0x7ff86ea82704,8869687,0,0x0,8
tick,0x7ff86ea82704,8871633,0,0x0,8
tick,0x7ff86ea82704,8873689,0,0x0,8
tick,0x7ff86ea82704,8875622,0,0x0,8
tick,0x7ff86ea82704,8877638,0,0x0,8
tick,0x7ff86ea82704,8879584,0,0x0,8
tick,0x7ff86ea82704,8881717,0,0x0,8
tick,0x7ff86ea82704,8883547,0,0x0,8
tick,0x7ff86ea82704,8885639,0,0x0,8
tick,0x7ff86ea82704,8887621,0,0x0,8
tick,0x7ff86ea82704,8889646,0,0x0,8
tick,0x7ff86ea82704,8891514,0,0x0,8
tick,0x7ff86ea82704,8893634,0,0x0,8
tick,0x7ff86ea82704,8895532,0,0x0,8
tick,0x7ff86ea82704,8897578,0,0x0,8
tick,0x7ff86ea82704,8899547,0,0x0,8
tick,0x7ff86ea82704,8901569,0,0x0,8
tick,0x7ff86ea82704,8903598,0,0x0,8
tick,0x7ff86ea82704,8905593,0,0x0,8
tick,0x7ff86ea82704,8907525,0,0x0,8
tick,0x7ff86ea82704,8909627,0,0x0,8
tick,0x7ff86ea82704,8911475,0,0x0,8
tick,0x7ff86ea82704,8913676,0,0x0,8
tick,0x7ff86ea82704,8915512,0,0x0,8
tick,0x7ff86ea82704,8917594,0,0x0,8
tick,0x7ff86ea82704,8919734,0,0x0,8
tick,0x7ff86ea82704,8921657,0,0x0,8
tick,0x7ff86ea82704,8923446,0,0x0,8
tick,0x7ff86ea82704,8925779,0,0x0,8
tick,0x7ff86ea82704,8927451,0,0x0,8
tick,0x7ff86ea82704,8929513,0,0x0,8
tick,0x7ff86ea82704,8931422,0,0x0,8
tick,0x7ff86ea82704,8933470,0,0x0,8
tick,0x7ff86ea82704,8935334,0,0x0,8
tick,0x7ff86ea82704,8937643,0,0x0,8
tick,0x7ff86ea82704,8939374,0,0x0,8
tick,0x7ff86ea82704,8941635,0,0x0,8
tick,0x7ff86ea82704,8943487,0,0x0,8
tick,0x7ff86ea82704,8945599,0,0x0,8
tick,0x7ff86ea82704,8947386,0,0x0,8
tick,0x7ff86ea82704,8949608,0,0x0,8
tick,0x7ff86ea82704,8951434,0,0x0,8
tick,0x7ff86ea82704,8953585,0,0x0,8
tick,0x7ff86ea82704,8955395,0,0x0,8
tick,0x7ff86ea82704,8957434,0,0x0,8
tick,0x7ff86ea82704,8959415,0,0x0,8
tick,0x7ff86ea82704,8961555,0,0x0,8
tick,0x7ff86ea82704,8963573,0,0x0,8
tick,0x7ff86ea82704,8965434,0,0x0,8
tick,0x7ff86ea82704,8967434,0,0x0,8
tick,0x7ff86ea82704,8969590,0,0x0,8
tick,0x7ff86ea82704,8971401,0,0x0,8
tick,0x7ff86ea82704,8973372,0,0x0,8
tick,0x7ff86ea82704,8975545,0,0x0,8
tick,0x7ff86ea82704,8977324,0,0x0,8
tick,0x7ff86ea82704,8979508,0,0x0,8
tick,0x7ff86ea82704,8981301,0,0x0,8
tick,0x7ff86ea82704,8983420,0,0x0,8
tick,0x7ff86ea82704,8985438,0,0x0,8
tick,0x7ff86ea82704,8987482,0,0x0,8
tick,0x7ff86ea82704,8989365,0,0x0,8
tick,0x7ff86ea82704,8991323,0,0x0,8
tick,0x7ff86ea82704,8993355,0,0x0,8
tick,0x7ff86ea82704,8995391,0,0x0,8
tick,0x7ff86ea82704,8997380,0,0x0,8
tick,0x7ff86ea82704,8999285,0,0x0,8
tick,0x7ff86ea82704,9001460,0,0x0,8
tick,0x7ff86ea82704,9003391,0,0x0,8
tick,0x7ff86ea82704,9005487,0,0x0,8
tick,0x7ff86ea82704,9007238,0,0x0,8
tick,0x7ff86ea82704,9009397,0,0x0,8
tick,0x7ff86ea82704,9011230,0,0x0,8
tick,0x7ff86ea82704,9013346,0,0x0,8
tick,0x7ff86ea82704,9015140,0,0x0,8
tick,0x7ff86ea82704,9017624,0,0x0,8
tick,0x7ff86ea82704,9019208,0,0x0,8
tick,0x7ff86ea82704,9021439,0,0x0,8
tick,0x7ff86ea82704,9023274,0,0x0,8
tick,0x7ff86ea82704,9025279,0,0x0,8
tick,0x7ff86ea82704,9027243,0,0x0,8
tick,0x7ff86ea82704,9029454,0,0x0,8
tick,0x7ff86ea82704,9031547,0,0x0,8
tick,0x7ff86ea82704,9033805,0,0x0,8
tick,0x7ff86ea82704,9035511,0,0x0,8
tick,0x7ff86ea82704,9037234,0,0x0,8
tick,0x7ff86ea82704,9039300,0,0x0,8
tick,0x7ff86ea82704,9041211,0,0x0,8
tick,0x7ff86ea82704,9043512,0,0x0,8
tick,0x7ff86ea82704,9045389,0,0x0,8
tick,0x7ff86ea82704,9047377,0,0x0,8
tick,0x7ff86ea82704,9049439,0,0x0,8
tick,0x7ff86ea82704,9051128,0,0x0,8
tick,0x7ff86ea82704,9053159,0,0x0,8
tick,0x7ff86ea82704,9055207,0,0x0,8
tick,0x7ff86ea82704,9057153,0,0x0,8
tick,0x7ff86ea82704,9059289,0,0x0,8
tick,0x7ff86ea82704,9061130,0,0x0,8
tick,0x7ff86ea82704,9063155,0,0x0,8
tick,0x7ff86ea82704,9065259,0,0x0,8
tick,0x7ff86ea82704,9067147,0,0x0,8
tick,0x7ff86ea82704,9069224,0,0x0,8
tick,0x7ff86ea82704,9071194,0,0x0,8
tick,0x7ff86ea82704,9073247,0,0x0,8
tick,0x7ff86ea82704,9075078,0,0x0,8
tick,0x7ff86ea82704,9077206,0,0x0,8
tick,0x7ff86ea82704,9079068,0,0x0,8
tick,0x7ff86ea82704,9081231,0,0x0,8
tick,0x7ff86ea82704,9083084,0,0x0,8
tick,0x7ff86ea82704,9085180,0,0x0,8
tick,0x7ff86ea82704,9087216,0,0x0,8
tick,0x7ff86ea82704,9089164,0,0x0,8
tick,0x7ff86ea82704,9090974,0,0x0,8
tick,0x7ff86ea82704,9093326,0,0x0,8
tick,0x7ff86ea82704,9094955,0,0x0,8
tick,0x7ff86ea82704,9097244,0,0x0,8
tick,0x7ff86ea82704,9099333,0,0x0,8
tick,0x7ff86ea82704,9101248,0,0x0,8
tick,0x7ff86ea82704,9103078,0,0x0,8
tick,0x7ff86ea82704,9105033,0,0x0,8
tick,0x7ff86ea82704,9107086,0,0x0,8
tick,0x7ff86ea82704,9109300,0,0x0,8
tick,0x7ff86ea82704,9111002,0,0x0,8
tick,0x7ff86ea82704,9113072,0,0x0,8
tick,0x7ff86ea82704,9115116,0,0x0,8
tick,0x7ff86ea82704,9117078,0,0x0,8
tick,0x7ff86ea82704,9119162,0,0x0,8
tick,0x7ff86ea82704,9121004,0,0x0,8
tick,0x7ff86ea82704,9123009,0,0x0,8
tick,0x7ff86ea82704,9124945,0,0x0,8
tick,0x7ff86ea82704,9127105,0,0x0,8
tick,0x7ff86ea82704,9128387,0,0x0,8
tick,0x7ff86ea82704,9130672,0,0x0,8
tick,0x7ff86ea82704,9132437,0,0x0,8
tick,0x7ff86ea82704,9134921,0,0x0,8
tick,0x7ff86ea82704,9136461,0,0x0,8
tick,0x7ff86ea82704,9138664,0,0x0,8
tick,0x7ff86ea82704,9140684,0,0x0,8
tick,0x7ff86ea82704,9142571,0,0x0,8
tick,0x7ff86ea82704,9144485,0,0x0,8
tick,0x7ff86ea82704,9146505,0,0x0,8
tick,0x7ff86ea82704,9148422,0,0x0,8
tick,0x7ff86ea82704,9150448,0,0x0,8
tick,0x7ff86ea82704,9152428,0,0x0,8
tick,0x7ff86ea82704,9154439,0,0x0,8
tick,0x7ff86ea82704,9156269,0,0x0,8
tick,0x7ff86ea82704,9158453,0,0x0,8
tick,0x7ff86ea82704,9160296,0,0x0,8
tick,0x7ff86ea82704,9162578,0,0x0,8
tick,0x7ff86ea82704,9164341,0,0x0,8
tick,0x7ff86ea82704,9166580,0,0x0,8
tick,0x7ff86ea82704,9168496,0,0x0,8
tick,0x7ff86ea82704,9170834,0,0x0,8
tick,0x7ff86ea82704,9172400,0,0x0,8
tick,0x7ff86ea82704,9174566,0,0x0,8
tick,0x7ff86ea82704,9176495,0,0x0,8
tick,0x7ff86ea82704,9178851,0,0x0,8
tick,0x7ff86ea82704,9180343,0,0x0,8
tick,0x7ff86ea82704,9182517,0,0x0,8
tick,0x7ff86ea82704,9184420,0,0x0,8
tick,0x7ff86ea82704,9186493,0,0x0,8
tick,0x7ff86ea82704,9188405,0,0x0,8
tick,0x7ff86ea82704,9190565,0,0x0,8
tick,0x7ff86ea82704,9192320,0,0x0,8
tick,0x7ff86ea82704,9194383,0,0x0,8
tick,0x7ff86ea82704,9196316,0,0x0,8
tick,0x7ff86ea82704,9198426,0,0x0,8
tick,0x7ff86ea82704,9200300,0,0x0,8
tick,0x7ff86ea82704,9202401,0,0x0,8
tick,0x7ff86ea82704,9204233,0,0x0,8
tick,0x7ff86ea82704,9206229,0,0x0,8
tick,0x7ff86ea82704,9208373,0,0x0,8
tick,0x7ff86ea82704,9210246,0,0x0,8
tick,0x7ff86ea82704,9212347,0,0x0,8
tick,0x7ff86ea82704,9214193,0,0x0,8
tick,0x7ff86ea82704,9216252,0,0x0,8
tick,0x7ff86ea82704,9218226,0,0x0,8
tick,0x7ff86ea82704,9220225,0,0x0,8
tick,0x7ff86ea82704,9222184,0,0x0,8
tick,0x7ff86ea82704,9224262,0,0x0,8
tick,0x7ff86ea82704,9226098,0,0x0,8
tick,0x7ff86ea82704,9228243,0,0x0,8
tick,0x7ff86ea82704,9230093,0,0x0,8
tick,0x7ff86ea82704,9232317,0,0x0,8
tick,0x7ff86ea82704,9234041,0,0x0,8
tick,0x7ff86ea82704,9236275,0,0x0,8
tick,0x7ff86ea82704,9238255,0,0x0,8
tick,0x7ff86ea82704,9240179,0,0x0,8
tick,0x7ff86ea82704,9242272,0,0x0,8
tick,0x7ff86ea82704,9244200,0,0x0,8
tick,0x7ff86ea82704,9246371,0,0x0,8
tick,0x7ff86ea82704,9248402,0,0x0,8
tick,0x7ff86ea82704,9250166,0,0x0,8
tick,0x7ff86ea82704,9252145,0,0x0,8
tick,0x7ff86ea82704,9254256,0,0x0,8
tick,0x7ff86ea82704,9256136,0,0x0,8
tick,0x7ff86ea82704,9258300,0,0x0,8
tick,0x7ff86ea82704,9260143,0,0x0,8
tick,0x7ff86ea82704,9262272,0,0x0,8
tick,0x7ff86ea82704,9264026,0,0x0,8
tick,0x7ff86ea82704,9268290,0,0x0,8
tick,0x7ff86ea82704,9270341,0,0x0,8
tick,0x7ff86ea82704,9272453,0,0x0,8
tick,0x7ff86ea82704,9274631,0,0x0,8
tick,0x7ff86ea82704,9277092,0,0x0,8
tick,0x7ff86ea82704,9278509,0,0x0,8
tick,0x7ff86ea82704,9280412,0,0x0,8
tick,0x7ff86ea82704,9282612,0,0x0,8
tick,0x7ff86ea82704,9284207,0,0x0,8
tick,0x7ff86ea82704,9286396,0,0x0,8
tick,0x7ff86ea82704,9288276,0,0x0,8
tick,0x7ff86ea82704,9290736,0,0x0,8
tick,0x7ff86ea82704,9292202,0,0x0,8
tick,0x7ff86ea82704,9294564,0,0x0,8
tick,0x7ff86ea82704,9296159,0,0x0,8
tick,0x7ff86ea82704,9298210,0,0x0,8
tick,0x7ff86ea82704,9300104,0,0x0,8
tick,0x7ff86ea82704,9302165,0,0x0,8
tick,0x7ff86ea82704,9304092,0,0x0,8
tick,0x7ff86ea82704,9306158,0,0x0,8
tick,0x7ff86ea82704,9308122,0,0x0,8
tick,0x7ff86ea82704,9310017,0,0x0,8
tick,0x7ff86ea82704,9312342,0,0x0,8
tick,0x7ff86ea82704,9314030,0,0x0,8
tick,0x7ff86ea82704,9316191,0,0x0,8
tick,0x7ff86ea82704,9318037,0,0x0,8
tick,0x7ff86ea82704,9320179,0,0x0,8
tick,0x7ff86ea82704,9322025,0,0x0,8
tick,0x7ff86ea82704,9324252,0,0x0,8
tick,0x7ff86ea82704,9326031,0,0x0,8
tick,0x7ff86ea82704,9327887,0,0x0,8
tick,0x7ff86ea82704,9330261,0,0x0,8
tick,0x7ff86ea82704,9332199,0,0x0,8
tick,0x7ff86ea82704,9334077,0,0x0,8
tick,0x7ff86ea82704,9336010,0,0x0,8
tick,0x7ff86ea82704,9337998,0,0x0,8
tick,0x7ff86ea82704,9339934,0,0x0,8
tick,0x7ff86ea82704,9342021,0,0x0,8
tick,0x7ff86ea82704,9343960,0,0x0,8
tick,0x7ff86ea82704,9346003,0,0x0,8
tick,0x7ff86ea82704,9347993,0,0x0,8
tick,0x7ff86ea82704,9349976,0,0x0,8
tick,0x7ff86ea82704,9352066,0,0x0,8
tick,0x7ff86ea82704,9353964,0,0x0,8
tick,0x7ff86ea82704,9355873,0,0x0,8
tick,0x7ff86ea82704,9358015,0,0x0,8
tick,0x7ff86ea82704,9359878,0,0x0,8
tick,0x7ff86ea82704,9361974,0,0x0,8
tick,0x7ff86ea82704,9363887,0,0x0,8
tick,0x7ff86ea82704,9366087,0,0x0,8
tick,0x7ff86ea82704,9367931,0,0x0,8
tick,0x7ff86ea82704,9370129,0,0x0,8
tick,0x7ff86ea82704,9371956,0,0x0,8
tick,0x7ff86ea82704,9373956,0,0x0,8
tick,0x7ff86ea82704,9375843,0,0x0,8
tick,0x7ff86ea82704,9377895,0,0x0,8
tick,0x7ff86ea82704,9379808,0,0x0,8
tick,0x7ff86ea82704,9382108,0,0x0,8
tick,0x7ff86ea82704,9384138,0,0x0,8
tick,0x7ff86ea82704,9386406,0,0x0,8
tick,0x7ff86ea82704,9388260,0,0x0,8
tick,0x7ff86ea82704,9389945,0,0x0,8
tick,0x7ff86ea82704,9391947,0,0x0,8
tick,0x7ff86ea82704,9393883,0,0x0,8
tick,0x7ff86ea82704,9395849,0,0x0,8
tick,0x7ff86ea82704,9397828,0,0x0,8
tick,0x7ff86ea82704,9399815,0,0x0,8
tick,0x7ff86ea82704,9401860,0,0x0,8
tick,0x7ff86ea82704,9403756,0,0x0,8
tick,0x7ff86ea82704,9405851,0,0x0,8
tick,0x7ff86ea82704,9407713,0,0x0,8
tick,0x7ff86ea82704,9409847,0,0x0,8
tick,0x7ff86ea82704,9411814,0,0x0,8
tick,0x7ff86ea82704,9413840,0,0x0,8
tick,0x7ff86ea82704,9415789,0,0x0,8
tick,0x7ff86ea82704,9417842,0,0x0,8
tick,0x7ff86ea82704,9419988,0,0x0,8
tick,0x7ff86ea82704,9422026,0,0x0,8
tick,0x7ff86ea82704,9423755,0,0x0,8
tick,0x7ff86ea82704,9425689,0,0x0,8
tick,0x7ff86ea82704,9427894,0,0x0,8
tick,0x7ff86ea82704,9429762,0,0x0,8
tick,0x7ff86ea82704,9431718,0,0x0,8
tick,0x7ff86ea82704,9433710,0,0x0,8
tick,0x7ff86ea82704,9435725,0,0x0,8
tick,0x7ff86ea82704,9438004,0,0x0,8
tick,0x7ff86ea82704,9439836,0,0x0,8
tick,0x7ff86ea82704,9441610,0,0x0,8
tick,0x7ff86ea82704,9443693,0,0x0,8
tick,0x7ff86ea82704,9445611,0,0x0,8
tick,0x7ff86ea82704,9447687,0,0x0,8
tick,0x7ff86ea82704,9449717,0,0x0,8
tick,0x7ff86ea82704,9451861,0,0x0,8
tick,0x7ff86ea82704,9453783,0,0x0,8
tick,0x7ff86ea82704,9455836,0,0x0,8
tick,0x7ff86ea82704,9457823,0,0x0,8
tick,0x7ff86ea82704,9459932,0,0x0,8
tick,0x7ff86ea82704,9461687,0,0x0,8
tick,0x7ff86ea82704,9463566,0,0x0,8
tick,0x7ff86ea82704,9465730,0,0x0,8
tick,0x7ff86ea82704,9467728,0,0x0,8
tick,0x7ff86ea82704,9469712,0,0x0,8
tick,0x7ff86ea82704,9471625,0,0x0,8
tick,0x7ff86ea82704,9473743,0,0x0,8
tick,0x7ff86ea82704,9475610,0,0x0,8
tick,0x7ff86ea82704,9477685,0,0x0,8
tick,0x7ff86ea82704,9479957,0,0x0,8
tick,0x7ff86ea82704,9482172,0,0x0,8
tick,0x7ff86ea82704,9483508,0,0x0,8
tick,0x7ff86ea82704,9485638,0,0x0,8
tick,0x7ff86ea82704,9487726,0,0x0,8
tick,0x7ff86ea82704,9489652,0,0x0,8
tick,0x7ff86ea82704,9491448,0,0x0,8
tick,0x7ff86ea82704,9493654,0,0x0,8
tick,0x7ff86ea82704,9495540,0,0x0,8
tick,0x7ff86ea82704,9498070,0,0x0,8
tick,0x7ff86ea82704,9499350,0,0x0,8
tick,0x7ff86ea82704,9501596,0,0x0,8
tick,0x7ff86ea82704,9503482,0,0x0,8
tick,0x7ff86ea82704,9505533,0,0x0,8
tick,0x7ff86ea82704,9507590,0,0x0,8
tick,0x7ff86ea82704,9509475,0,0x0,8
tick,0x7ff86ea82704,9511487,0,0x0,8
tick,0x7ff86ea82704,9513387,0,0x0,8
tick,0x7ff86ea82704,9515459,0,0x0,8
tick,0x7ff86ea82704,9517879,0,0x0,8
tick,0x7ff86ea82704,9519499,0,0x0,8
tick,0x7ff86ea82704,9521354,0,0x0,8
tick,0x7ff86ea82704,9523491,0,0x0,8
tick,0x7ff86ea82704,9525460,0,0x0,8
tick,0x7ff86ea82704,9527283,0,0x0,8
tick,0x7ff86ea82704,9529363,0,0x0,8
tick,0x7ff86ea82704,9531284,0,0x0,8
tick,0x7ff86ea82704,9533271,0,0x0,8
tick,0x7ff86ea82704,9535430,0,0x0,8
tick,0x7ff86ea82704,9537217,0,0x0,8
tick,0x7ff86ea82704,9539474,0,0x0,8
tick,0x7ff86ea82704,9541276,0,0x0,8
tick,0x7ff86ea82704,9543469,0,0x0,8
tick,0x7ff86ea82704,9545421,0,0x0,8
tick,0x7ff86ea82704,9547531,0,0x0,8
tick,0x7ff86ea82704,9549209,0,0x0,8
tick,0x7ff86ea82704,9551397,0,0x0,8
tick,0x7ff86ea82704,9553151,0,0x0,8
tick,0x7ff86ea82704,9555403,0,0x0,8
tick,0x7ff86ea82704,9557193,0,0x0,8
tick,0x7ff86ea82704,9559261,0,0x0,8
tick,0x7ff86ea82704,9561188,0,0x0,8
tick,0x7ff86ea82704,9563290,0,0x0,8
tick,0x7ff86ea82704,9565176,0,0x0,8
tick,0x7ff86ea82704,9567282,0,0x0,8
tick,0x7ff86ea82704,9569124,0,0x0,8
tick,0x7ff86ea82704,9571226,0,0x0,8
tick,0x7ff86ea82704,9573185,0,0x0,8
tick,0x7ff86ea82704,9575207,0,0x0,8
tick,0x7ff86ea82704,9577204,0,0x0,8
tick,0x7ff86ea82704,9579225,0,0x0,8
tick,0x7ff86ea82704,9581152,0,0x0,8
tick,0x7ff86ea82704,9583234,0,0x0,8
tick,0x7ff86ea82704,9585110,0,0x0,8
tick,0x7ff86ea82704,9587141,0,0x0,8
tick,0x7ff86ea82704,9589156,0,0x0,8
tick,0x7ff86ea82704,9591164,0,0x0,8
tick,0x7ff86ea82704,9593192,0,0x0,8
tick,0x7ff86ea82704,9595121,0,0x0,8
tick,0x7ff86ea82704,9597164,0,0x0,8
tick,0x7ff86ea82704,9599100,0,0x0,8
tick,0x7ff86ea82704,9601163,0,0x0,8
tick,0x7ff86ea82704,9603066,0,0x0,8
tick,0x7ff86ea82704,9605318,0,0x0,8
tick,0x7ff86ea82704,9607178,0,0x0,8
tick,0x7ff86ea82704,9609291,0,0x0,8
tick,0x7ff86ea82704,9611048,0,0x0,8
tick,0x7ff86ea82704,9613172,0,0x0,8
tick,0x7ff86ea82704,9615072,0,0x0,8
tick,0x7ff86ea82704,9617178,0,0x0,8
tick,0x7ff86ea82704,9619040,0,0x0,8
tick,0x7ff86ea82704,9621270,0,0x0,8
tick,0x7ff86ea82704,9623043,0,0x0,8
tick,0x7ff86ea82704,9625123,0,0x0,8
tick,0x7ff86ea82704,9627127,0,0x0,8
tick,0x7ff86ea82704,9629158,0,0x0,8
tick,0x7ff86ea82704,9631092,0,0x0,8
tick,0x7ff86ea82704,9633059,0,0x0,8
tick,0x7ff86ea82704,9635095,0,0x0,8
tick,0x7ff86ea82704,9636947,0,0x0,8
tick,0x7ff86ea82704,9639032,0,0x0,8
tick,0x7ff86ea82704,9641008,0,0x0,8
tick,0x7ff86ea82704,9643066,0,0x0,8
tick,0x7ff86ea82704,9645085,0,0x0,8
tick,0x7ff86ea82704,9646953,0,0x0,8
tick,0x7ff86ea82704,9649036,0,0x0,8
tick,0x7ff86ea82704,9650913,0,0x0,8
tick,0x7ff86ea82704,9653032,0,0x0,8
tick,0x7ff86ea82704,9654947,0,0x0,8
tick,0x7ff86ea82704,9657034,0,0x0,8
tick,0x7ff86ea82704,9658988,0,0x0,8
tick,0x7ff86ea82704,9661099,0,0x0,8
tick,0x7ff86ea82704,9662914,0,0x0,8
tick,0x7ff86ea82704,9665024,0,0x0,8
tick,0x7ff86ea82704,9666906,0,0x0,8
tick,0x7ff86ea82704,9668996,0,0x0,8
tick,0x7ff86ea82704,9670850,0,0x0,8
tick,0x7ff86ea82704,9672964,0,0x0,8
tick,0x7ff86ea82704,9674841,0,0x0,8
tick,0x7ff86ea82704,9676927,0,0x0,8
tick,0x7ff86ea82704,9678824,0,0x0,8
tick,0x7ff86ea82704,9680941,0,0x0,8
tick,0x7ff86ea82704,9682999,0,0x0,8
tick,0x7ff86ea82704,9684968,0,0x0,8
tick,0x7ff86ea82704,9686853,0,0x0,8
tick,0x7ff86ea82704,9688908,0,0x0,8
tick,0x7ff86ea82704,9690848,0,0x0,8
tick,0x7ff86ea82704,9692861,0,0x0,8
tick,0x7ff86ea82704,9694843,0,0x0,8
tick,0x7ff86ea82704,9696852,0,0x0,8
tick,0x7ff86ea82704,9698789,0,0x0,8
tick,0x7ff86ea82704,9700864,0,0x0,8
tick,0x7ff86ea82704,9702831,0,0x0,8
tick,0x7ff86ea82704,9704851,0,0x0,8
tick,0x7ff86ea82704,9706738,0,0x0,8
tick,0x7ff86ea82704,9708889,0,0x0,8
tick,0x7ff86ea82704,9710823,0,0x0,8
tick,0x7ff86ea82704,9712878,0,0x0,8
tick,0x7ff86ea82704,9714800,0,0x0,8
tick,0x7ff86ea82704,9716864,0,0x0,8
tick,0x7ff86ea82704,9718885,0,0x0,8
tick,0x7ff86ea82704,9720955,0,0x0,8
tick,0x7ff86ea82704,9722762,0,0x0,8
tick,0x7ff86ea82704,9724832,0,0x0,8
tick,0x7ff86ea82704,9726832,0,0x0,8
tick,0x7ff86ea82704,9728807,0,0x0,8
tick,0x7ff86ea82704,9730743,0,0x0,8
tick,0x7ff86ea82704,9732892,0,0x0,8
tick,0x7ff86ea82704,9734824,0,0x0,8
tick,0x7ff86ea82704,9736863,0,0x0,8
tick,0x7ff86ea82704,9738766,0,0x0,8
tick,0x7ff86ea82704,9740752,0,0x0,8
tick,0x7ff86ea82704,9742840,0,0x0,8
tick,0x7ff86ea82704,9744724,0,0x0,8
tick,0x7ff86ea82704,9746800,0,0x0,8
tick,0x7ff86ea82704,9748904,0,0x0,8
tick,0x7ff86ea82704,9750706,0,0x0,8
tick,0x7ff86ea82704,9752715,0,0x0,8
tick,0x7ff86ea82704,9754870,0,0x0,8
tick,0x7ff86ea82704,9756761,0,0x0,8
tick,0x7ff86ea82704,9758672,0,0x0,8
tick,0x7ff86ea82704,9760731,0,0x0,8
tick,0x7ff86ea82704,9762689,0,0x0,8
tick,0x7ff86ea82704,9764690,0,0x0,8
tick,0x7ff86ea82704,9766638,0,0x0,8
tick,0x7ff86ea82704,9768747,0,0x0,8
tick,0x7ff86ea82704,9770647,0,0x0,8
tick,0x7ff86ea82704,9772733,0,0x0,8
tick,0x7ff86ea82704,9774612,0,0x0,8
tick,0x7ff86ea82704,9776794,0,0x0,8
tick,0x7ff86ea82704,9778673,0,0x0,8
tick,0x7ff86ea82704,9780786,0,0x0,8
tick,0x7ff86ea82704,9782685,0,0x0,8
tick,0x7ff86ea82704,9784693,0,0x0,8
tick,0x7ff86ea82704,9786569,0,0x0,8
tick,0x7ff86ea82704,9788669,0,0x0,8
tick,0x7ff86ea82704,9790590,0,0x0,8
tick,0x7ff86ea82704,9792633,0,0x0,8
tick,0x7ff86ea82704,9794568,0,0x0,8
tick,0x7ff86ea82704,9796593,0,0x0,8
tick,0x7ff86ea82704,9798779,0,0x0,8
tick,0x7ff86ea82704,9800835,0,0x0,8
tick,0x7ff86ea82704,9802903,0,0x0,8
tick,0x7ff86ea82704,9804826,0,0x0,8
tick,0x7ff86ea82704,9806747,0,0x0,8
tick,0x7ff86ea82704,9808680,0,0x0,8
tick,0x7ff86ea82704,9810848,0,0x0,8
tick,0x7ff86ea82704,9812679,0,0x0,8
tick,0x7ff86ea82704,9814787,0,0x0,8
tick,0x7ff86ea82704,9816824,0,0x0,8
tick,0x7ff86ea82704,9818763,0,0x0,8
tick,0x7ff86ea82704,9820711,0,0x0,8
tick,0x7ff86ea82704,9822867,0,0x0,8
tick,0x7ff86ea82704,9824746,0,0x0,8
tick,0x7ff86ea82704,9826787,0,0x0,8
tick,0x7ff86ea82704,9828738,0,0x0,8
tick,0x7ff86ea82704,9830741,0,0x0,8
tick,0x7ff86ea82704,9832733,0,0x0,8
tick,0x7ff86ea82704,9834842,0,0x0,8
tick,0x7ff86ea82704,9836716,0,0x0,8
tick,0x7ff86ea82704,9839167,0,0x0,8
tick,0x7ff86ea82704,9840562,0,0x0,8
tick,0x7ff86ea82704,9842756,0,0x0,8
tick,0x7ff86ea82704,9844649,0,0x0,8
tick,0x7ff86ea82704,9846625,0,0x0,8
tick,0x7ff86ea82704,9848684,0,0x0,8
tick,0x7ff86ea82704,9850733,0,0x0,8
tick,0x7ff86ea82704,9852651,0,0x0,8
tick,0x7ff86ea82704,9854536,0,0x0,8
tick,0x7ff86ea82704,9856578,0,0x0,8
tick,0x7ff86ea82704,9858581,0,0x0,8
tick,0x7ff86ea82704,9860669,0,0x0,8
tick,0x7ff86ea82704,9862642,0,0x0,8
tick,0x7ff86ea82704,9864560,0,0x0,8
tick,0x7ff86ea82704,9866658,0,0x0,8
tick,0x7ff86ea82704,9868550,0,0x0,8
tick,0x7ff86ea82704,9870562,0,0x0,8
tick,0x7ff86ea82704,9872442,0,0x0,8
tick,0x7ff86ea82704,9874697,0,0x0,8
tick,0x7ff86ea82704,9876459,0,0x0,8
tick,0x7ff86ea82704,9878671,0,0x0,8
tick,0x7ff86ea82704,9880512,0,0x0,8
tick,0x7ff86ea82704,9882473,0,0x0,8
tick,0x7ff86ea82704,9884569,0,0x0,8
tick,0x7ff86ea82704,9886696,0,0x0,8
tick,0x7ff86ea82704,9888520,0,0x0,8
tick,0x7ff86ea82704,9890433,0,0x0,8
tick,0x7ff86ea82704,9892430,0,0x0,8
tick,0x7ff86ea82704,9896053,0,0x0,8
tick,0x7ff86ea82704,9897401,0,0x0,8
tick,0x7ff86ea82704,9899350,0,0x0,8
tick,0x7ff86ea82704,9901452,0,0x0,8
tick,0x7ff86ea82704,9903473,0,0x0,8
tick,0x7ff86ea82704,9905359,0,0x0,8
tick,0x7ff86ea82704,9907740,0,0x0,8
tick,0x7ff86ea82704,9909426,0,0x0,8
tick,0x7ff86ea82704,9911574,0,0x0,8
tick,0x7ff86ea82704,9913317,0,0x0,8
tick,0x7ff86ea82704,9915357,0,0x0,8
tick,0x7ff86ea82704,9917293,0,0x0,8
tick,0x7ff86ea82704,9919314,0,0x0,8
tick,0x7ff86ea82704,9921300,0,0x0,8
tick,0x7ff86ea82704,9923444,0,0x0,8
tick,0x7ff86ea82704,9925310,0,0x0,8
tick,0x7ff86ea82704,9927489,0,0x0,8
tick,0x7ff86ea82704,9929270,0,0x0,8
tick,0x7ff86ea82704,9931466,0,0x0,8
tick,0x7ff86ea82704,9933240,0,0x0,8
tick,0x7ff86ea82704,9935375,0,0x0,8
tick,0x7ff86ea82704,9937200,0,0x0,8
tick,0x7ff86ea82704,9939581,0,0x0,8
tick,0x7ff86ea82704,9941309,0,0x0,8
tick,0x7ff86ea82704,9943288,0,0x0,8
tick,0x7ff86ea82704,9945219,0,0x0,8
tick,0x7ff86ea82704,9947322,0,0x0,8
tick,0x7ff86ea82704,9949277,0,0x0,8
tick,0x7ff86ea82704,9951358,0,0x0,8
tick,0x7ff86ea82704,9953466,0,0x0,8
tick,0x7ff86ea82704,9955386,0,0x0,8
tick,0x7ff86ea82704,9957322,0,0x0,8
tick,0x7ff86ea82704,9959321,0,0x0,8
tick,0x7ff86ea82704,9961780,0,0x0,8
tick,0x7ff86ea82704,9963304,0,0x0,8
tick,0x7ff86ea82704,9965278,0,0x0,8
tick,0x7ff86ea82704,9967235,0,0x0,8
tick,0x7ff86ea82704,9969194,0,0x0,8
tick,0x7ff86ea82704,9971169,0,0x0,8
tick,0x7ff86ea82704,9973192,0,0x0,8
tick,0x7ff86ea82704,9975172,0,0x0,8
tick,0x7ff86ea82704,9977238,0,0x0,8
tick,0x7ff86ea82704,9979247,0,0x0,8
tick,0x7ff86ea82704,9981195,0,0x0,8
tick,0x7ff86ea82704,9983184,0,0x0,8
tick,0x7ff86ea82704,9985184,0,0x0,8
tick,0x7ff86ea82704,9987228,0,0x0,8
tick,0x7ff86ea82704,9989191,0,0x0,8
tick,0x7ff86ea82704,9991228,0,0x0,8
tick,0x7ff86ea82704,9993152,0,0x0,8
tick,0x7ff86ea82704,9995112,0,0x0,8
tick,0x7ff86ea82704,9997154,0,0x0,8
tick,0x7ff86ea82704,9999166,0,0x0,8
tick,0x7ff86ea82704,10001098,0,0x0,8
tick,0x7ff86ea82704,10003145,0,0x0,8
tick,0x7ff86ea82704,10005286,0,0x0,8
tick,0x7ff86ea82704,10007216,0,0x0,8
tick,0x7ff86ea82704,10008968,0,0x0,8
tick,0x7ff86ea82704,10011164,0,0x0,8
tick,0x7ff86ea82704,10013008,0,0x0,8
tick,0x7ff86ea82704,10015122,0,0x0,8
tick,0x7ff86ea82704,10016937,0,0x0,8
tick,0x7ff86ea82704,10019208,0,0x0,8
tick,0x7ff86ea82704,10021079,0,0x0,8
tick,0x7ff86ea82704,10023248,0,0x0,8
tick,0x7ff86ea82704,10024950,0,0x0,8
tick,0x7ff86ea82704,10027151,0,0x0,8
tick,0x7ff86ea82704,10028998,0,0x0,8
tick,0x7ff86ea82704,10031132,0,0x0,8
tick,0x7ff86ea82704,10033057,0,0x0,8
tick,0x7ff86ea82704,10035111,0,0x0,8
tick,0x7ff86ea82704,10036989,0,0x0,8
tick,0x7ff86ea82704,10039080,0,0x0,8
tick,0x7ff86ea82704,10041073,0,0x0,8
tick,0x7ff86ea82704,10042957,0,0x0,8
tick,0x7ff86ea82704,10045120,0,0x0,8
tick,0x7ff86ea82704,10047066,0,0x0,8
tick,0x7ff86ea82704,10049041,0,0x0,8
tick,0x7ff86ea82704,10051113,0,0x0,8
tick,0x7ff86ea82704,10053042,0,0x0,8
tick,0x7ff86ea82704,10054971,0,0x0,8
tick,0x7ff86ea82704,10056948,0,0x0,8
tick,0x7ff86ea82704,10059032,0,0x0,8
tick,0x7ff86ea82704,10061039,0,0x0,8
tick,0x7ff86ea82704,10063097,0,0x0,8
tick,0x7ff86ea82704,10064989,0,0x0,8
tick,0x7ff86ea82704,10067075,0,0x0,8
tick,0x7ff86ea82704,10069030,0,0x0,8
tick,0x7ff86ea82704,10070960,0,0x0,8
tick,0x7ff86ea82704,10073060,0,0x0,8
tick,0x7ff86ea82704,10074913,0,0x0,8
tick,0x7ff86ea82704,10076944,0,0x0,8
tick,0x7ff86ea82704,10078891,0,0x0,8
tick,0x7ff86ea82704,10080921,0,0x0,8
tick,0x7ff86ea82704,10082989,0,0x0,8
tick,0x7ff86ea82704,10084970,0,0x0,8
tick,0x7ff86ea82704,10086932,0,0x0,8
tick,0x7ff86ea82704,10089002,0,0x0,8
tick,0x7ff86ea82704,10090882,0,0x0,8
tick,0x7ff86ea82704,10092866,0,0x0,8
tick,0x7ff86ea82704,10094901,0,0x0,8
tick,0x7ff86ea82704,10096921,0,0x0,8
tick,0x7ff86ea82704,10098957,0,0x0,8
tick,0x7ff86ea82704,10100987,0,0x0,8
tick,0x7ff86ea82704,10103127,0,0x0,8
tick,0x7ff86ea82704,10104962,0,0x0,8
tick,0x7ff86ea82704,10107117,0,0x0,8
tick,0x7ff86ea82704,10108973,0,0x0,8
tick,0x7ff86ea82704,10110879,0,0x0,8
tick,0x7ff86ea82704,10113348,0,0x0,8
tick,0x7ff86ea82704,10115143,0,0x0,8
tick,0x7ff86ea82704,10117007,0,0x0,8
tick,0x7ff86ea82704,10118880,0,0x0,8
tick,0x7ff86ea82704,10120841,0,0x0,8
tick,0x7ff86ea82704,10122896,0,0x0,8
tick,0x7ff86ea82704,10125050,0,0x0,8
tick,0x7ff86ea82704,10126906,0,0x0,8
tick,0x7ff86ea82704,10129051,0,0x0,8
tick,0x7ff86ea82704,10130928,0,0x0,8
tick,0x7ff86ea82704,10132792,0,0x0,8
tick,0x7ff86ea82704,10134707,0,0x0,8
tick,0x7ff86ea82704,10136754,0,0x0,8
tick,0x7ff86ea82704,10138825,0,0x0,8
tick,0x7ff86ea82704,10140791,0,0x0,8
tick,0x7ff86ea82704,10142780,0,0x0,8
tick,0x7ff86ea82704,10144738,0,0x0,8
tick,0x7ff86ea82704,10146669,0,0x0,8
tick,0x7ff86ea82704,10148823,0,0x0,8
tick,0x7ff86ea82704,10150672,0,0x0,8
tick,0x7ff86ea82704,10152693,0,0x0,8
tick,0x7ff86ea82704,10154659,0,0x0,8
tick,0x7ff86ea82704,10156768,0,0x0,8
tick,0x7ff86ea82704,10158747,0,0x0,8
tick,0x7ff86ea82704,10160789,0,0x0,8
tick,0x7ff86ea82704,10162736,0,0x0,8
tick,0x7ff86ea82704,10164733,0,0x0,8
tick,0x7ff86ea82704,10166717,0,0x0,8
tick,0x7ff86ea82704,10168659,0,0x0,8
tick,0x7ff86ea82704,10170885,0,0x0,8
tick,0x7ff86ea82704,10172620,0,0x0,8
tick,0x7ff86ea82704,10174761,0,0x0,8
tick,0x7ff86ea82704,10176721,0,0x0,8
tick,0x7ff86ea82704,10179016,0,0x0,8
tick,0x7ff86ea82704,10180605,0,0x0,8
tick,0x7ff86ea82704,10182940,0,0x0,8
tick,0x7ff86ea82704,10184622,0,0x0,8
tick,0x7ff86ea82704,10186730,0,0x0,8
tick,0x7ff86ea82704,10188647,0,0x0,8
tick,0x7ff86ea82704,10190556,0,0x0,8
tick,0x7ff86ea82704,10192685,0,0x0,8
tick,0x7ff86ea82704,10194793,0,0x0,8
tick,0x7ff86ea82704,10196570,0,0x0,8
tick,0x7ff86ea82704,10198686,0,0x0,8
tick,0x7ff86ea82704,10200709,0,0x0,8
tick,0x7ff86ea82704,10202600,0,0x0,8
tick,0x7ff86ea82704,10204665,0,0x0,8
tick,0x7ff86ea82704,10206794,0,0x0,8
tick,0x7ff86ea82704,10208586,0,0x0,8
tick,0x7ff86ea82704,10210581,0,0x0,8
tick,0x7ff86ea82704,10212568,0,0x0,8
tick,0x7ff86ea82704,10214514,0,0x0,8
tick,0x7ff86ea82704,10216526,0,0x0,8
tick,0x7ff86ea82704,10218559,0,0x0,8
tick,0x7ff86ea82704,10220517,0,0x0,8
tick,0x7ff86ea82704,10222569,0,0x0,8
tick,0x7ff86ea82704,10224526,0,0x0,8
tick,0x7ff86ea82704,10226491,0,0x0,8
tick,0x7ff86ea82704,10228452,0,0x0,8
tick,0x7ff86ea82704,10230560,0,0x0,8
tick,0x7ff86ea82704,10232408,0,0x0,8
tick,0x7ff86ea82704,10234585,0,0x0,8
tick,0x7ff86ea82704,10236573,0,0x0,8
tick,0x7ff86ea82704,10238461,0,0x0,8
tick,0x7ff86ea82704,10240518,0,0x0,8
tick,0x7ff86ea82704,10242565,0,0x0,8
tick,0x7ff86ea82704,10244522,0,0x0,8
tick,0x7ff86ea82704,10246602,0,0x0,8
tick,0x7ff86ea82704,10248463,0,0x0,8
tick,0x7ff86ea82704,10250687,0,0x0,8
tick,0x7ff86ea82704,10252438,0,0x0,8
tick,0x7ff86ea82704,10254496,0,0x0,8
tick,0x7ff86ea82704,10256455,0,0x0,8
tick,0x7ff86ea82704,10258546,0,0x0,8
tick,0x7ff86ea82704,10260464,0,0x0,8
tick,0x7ff86ea82704,10262593,0,0x0,8
tick,0x7ff86ea82704,10264711,0,0x0,8
tick,0x7ff86ea82704,10266373,0,0x0,8
tick,0x7ff86ea82704,10268398,0,0x0,8
tick,0x7ff86ea82704,10270515,0,0x0,8
tick,0x7ff86ea82704,10272365,0,0x0,8
tick,0x7ff86ea82704,10274431,0,0x0,8
tick,0x7ff86ea82704,10276423,0,0x0,8
tick,0x7ff86ea82704,10278339,0,0x0,8
tick,0x7ff86ea82704,10280472,0,0x0,8
tick,0x7ff86ea82704,10282501,0,0x0,8
tick,0x7ff86ea82704,10284444,0,0x0,8
tick,0x7ff86ea82704,10286353,0,0x0,8
tick,0x7ff86ea82704,10288301,0,0x0,8
tick,0x7ff86ea82704,10290372,0,0x0,8
tick,0x7ff86ea82704,10292354,0,0x0,8
tick,0x7ff86ea82704,10294269,0,0x0,8
tick,0x7ff86ea82704,10296392,0,0x0,8
tick,0x7ff86ea82704,10298369,0,0x0,8
tick,0x7ff86ea82704,10300396,0,0x0,8
tick,0x7ff86ea82704,10302378,0,0x0,8
tick,0x7ff86ea82704,10304278,0,0x0,8
tick,0x7ff86ea82704,10306287,0,0x0,8
tick,0x7ff86ea82704,10308312,0,0x0,8
tick,0x7ff86ea82704,10310324,0,0x0,8
tick,0x7ff86ea82704,10312250,0,0x0,8
tick,0x7ff86ea82704,10314235,0,0x0,8
tick,0x7ff86ea82704,10316365,0,0x0,8
tick,0x7ff86ea82704,10318293,0,0x0,8
tick,0x7ff86ea82704,10320268,0,0x0,8
tick,0x7ff86ea82704,10322205,0,0x0,8
tick,0x7ff86ea82704,10324307,0,0x0,8
tick,0x7ff86ea82704,10326273,0,0x0,8
tick,0x7ff86ea82704,10328307,0,0x0,8
tick,0x7ff86ea82704,10330295,0,0x0,8
tick,0x7ff86ea82704,10332428,0,0x0,8
tick,0x7ff86ea82704,10334267,0,0x0,8
tick,0x7ff86ea82704,10336229,0,0x0,8
tick,0x7ff86ea82704,10338248,0,0x0,8
tick,0x7ff86ea82704,10340157,0,0x0,8
tick,0x7ff86ea82704,10342158,0,0x0,8
tick,0x7ff86ea82704,10344206,0,0x0,8
tick,0x7ff86ea82704,10346395,0,0x0,8
tick,0x7ff86ea82704,10348177,0,0x0,8
tick,0x7ff86ea82704,10350245,0,0x0,8
tick,0x7ff86ea82704,10352155,0,0x0,8
tick,0x7ff86ea82704,10354245,0,0x0,8
tick,0x7ff86ea82704,10356129,0,0x0,8
tick,0x7ff86ea82704,10358202,0,0x0,8
tick,0x7ff86ea82704,10360182,0,0x0,8
tick,0x7ff86ea82704,10362277,0,0x0,8
tick,0x7ff86ea82704,10364057,0,0x0,8
tick,0x7ff86ea82704,10366223,0,0x0,8
tick,0x7ff86ea82704,10368097,0,0x0,8
tick,0x7ff86ea82704,10370218,0,0x0,8
tick,0x7ff86ea82704,10372030,0,0x0,8
tick,0x7ff86ea82704,10374185,0,0x0,8
tick,0x7ff86ea82704,10376122,0,0x0,8
tick,0x7ff86ea82704,10378173,0,0x0,8
tick,0x7ff86ea82704,10380100,0,0x0,8
tick,0x7ff86ea82704,10382073,0,0x0,8
tick,0x7ff86ea82704,10384081,0,0x0,8
tick,0x7ff86ea82704,10386065,0,0x0,8
tick,0x7ff86ea82704,10388086,0,0x0,8
tick,0x7ff86ea82704,10390158,0,0x0,8
tick,0x7ff86ea82704,10392202,0,0x0,8
tick,0x7ff86ea82704,10394088,0,0x0,8
tick,0x7ff86ea82704,10396169,0,0x0,8
tick,0x7ff86ea82704,10397990,0,0x0,8
tick,0x7ff86ea82704,10400009,0,0x0,8
tick,0x7ff86ea82704,10402036,0,0x0,8
tick,0x7ff86ea82704,10404051,0,0x0,8
tick,0x7ff86ea82704,10406122,0,0x0,8
tick,0x7ff86ea82704,10408106,0,0x0,8
tick,0x7ff86ea82704,10409979,0,0x0,8
tick,0x7ff86ea82704,10412058,0,0x0,8
tick,0x7ff86ea82704,10414010,0,0x0,8
tick,0x7ff86ea82704,10415894,0,0x0,8
tick,0x7ff86ea82704,10418133,0,0x0,8
tick,0x7ff86ea82704,10419965,0,0x0,8
tick,0x7ff86ea82704,10422183,0,0x0,8
tick,0x7ff86ea82704,10423998,0,0x0,8
tick,0x7ff86ea82704,10425986,0,0x0,8
tick,0x7ff86ea82704,10427974,0,0x0,8
tick,0x7ff86ea82704,10430118,0,0x0,8
tick,0x7ff86ea82704,10431876,0,0x0,8
tick,0x7ff86ea82704,10434183,0,0x0,8
tick,0x7ff86ea82704,10435886,0,0x0,8
tick,0x7ff86ea82704,10437988,0,0x0,8
tick,0x7ff86ea82704,10440022,0,0x0,8
tick,0x7ff86ea82704,10441999,0,0x0,8
tick,0x7ff86ea82704,10443915,0,0x0,8
tick,0x7ff86ea82704,10445937,0,0x0,8
tick,0x7ff86ea82704,10447942,0,0x0,8
tick,0x7ff86ea82704,10449910,0,0x0,8
tick,0x7ff86ea82704,10451981,0,0x0,8
tick,0x7ff86ea82704,10454008,0,0x0,8
tick,0x7ff86ea82704,10455953,0,0x0,8
tick,0x7ff86ea82704,10457970,0,0x0,8
tick,0x7ff86ea82704,10459949,0,0x0,8
tick,0x7ff86ea82704,10461905,0,0x0,8
tick,0x7ff86ea82704,10463932,0,0x0,8
tick,0x7ff86ea82704,10466010,0,0x0,8
tick,0x7ff86ea82704,10468060,0,0x0,8
tick,0x7ff86ea82704,10469911,0,0x0,8
tick,0x7ff86ea82704,10471893,0,0x0,8
tick,0x7ff86ea82704,10473753,0,0x0,8
tick,0x7ff86ea82704,10475834,0,0x0,8
tick,0x7ff86ea82704,10477879,0,0x0,8
tick,0x7ff86ea82704,10479786,0,0x0,8
tick,0x7ff86ea82704,10481924,0,0x0,8
tick,0x7ff86ea82704,10483757,0,0x0,8
tick,0x7ff86ea82704,10485919,0,0x0,8
tick,0x7ff86ea82704,10487744,0,0x0,8
tick,0x7ff86ea82704,10489900,0,0x0,8
tick,0x7ff86ea82704,10491835,0,0x0,8
tick,0x7ff86ea82704,10493909,0,0x0,8
tick,0x7ff86ea82704,10495732,0,0x0,8
tick,0x7ff86ea82704,10497966,0,0x0,8
tick,0x7ff86ea82704,10499886,0,0x0,8
tick,0x7ff86ea82704,10501854,0,0x0,8
tick,0x7ff86ea82704,10503750,0,0x0,8
tick,0x7ff86ea82704,10505843,0,0x0,8
tick,0x7ff86ea82704,10507834,0,0x0,8
tick,0x7ff86ea82704,10509795,0,0x0,8
tick,0x7ff86ea82704,10511749,0,0x0,8
tick,0x7ff86ea82704,10513799,0,0x0,8
tick,0x7ff7c482b49f,10515943,0,0x0,1
tick,0x7ff7c4810d70,10517839,0,0x0,1
tick,0x7ff7c4697c6c,10519708,0,0x0,1
tick,0x7ff7c4810d45,10521702,0,0x0,1
tick,0x7ff7c4810d40,10523747,0,0x0,1
markcompact,begin,1,796875,1679951493141
tick,0x7ff7c47e0a06,10525698,0,0x0,1
new,MemoryChunk,0x302a8440000,262144
tick,0x7ff7c48079d9,10527753,0,0x0,1
markcompact,end,1,796875,1679951493144
delete,MemoryChunk,0x34e57000000
delete,MemoryChunk,0x19270380000
delete,MemoryChunk,0xce5480000
delete,MemoryChunk,0xb8bb00000
tick,0x7ff86ea82704,10529828,0,0x0,8
tick,0x7ff86ea82704,10531739,0,0x0,8
tick,0x7ff86ea82704,10533774,0,0x0,8
tick,0x7ff86ea82704,10535711,0,0x0,8
tick,0x7ff86ea82704,10537746,0,0x0,8
tick,0x7ff86ea82704,10539735,0,0x0,8
tick,0x7ff86ea82704,10541693,0,0x0,8
tick,0x7ff86ea82704,10543678,0,0x0,8
tick,0x7ff86ea82704,10545659,0,0x0,8
tick,0x7ff86ea82704,10547577,0,0x0,8
tick,0x7ff86ea82704,10549651,0,0x0,8
tick,0x7ff86ea82704,10551745,0,0x0,8
tick,0x7ff86ea82704,10553759,0,0x0,8
tick,0x7ff86ea82704,10555687,0,0x0,8
tick,0x7ff86ea82704,10557771,0,0x0,8
tick,0x7ff86ea82704,10559630,0,0x0,8
tick,0x7ff86ea82704,10562103,0,0x0,8
tick,0x7ff86ea82704,10563642,0,0x0,8
tick,0x7ff86ea82704,10565555,0,0x0,8
tick,0x7ff86ea82704,10567697,0,0x0,8
tick,0x7ff86ea82704,10569724,0,0x0,8
tick,0x7ff86ea82704,10571691,0,0x0,8
tick,0x7ff86ea82704,10573522,0,0x0,8
tick,0x7ff86ea82704,10575634,0,0x0,8
tick,0x7ff86ea82704,10577578,0,0x0,8
tick,0x7ff86ea82704,10579573,0,0x0,8
tick,0x7ff86ea82704,10581614,0,0x0,8
tick,0x7ff86ea82704,10583535,0,0x0,8
tick,0x7ff86ea82704,10585489,0,0x0,8
tick,0x7ff86ea82704,10587649,0,0x0,8
tick,0x7ff86ea82704,10589477,0,0x0,8
tick,0x7ff86ea82704,10591601,0,0x0,8
tick,0x7ff86ea82704,10593581,0,0x0,8
tick,0x7ff86ea82704,10595600,0,0x0,8
tick,0x7ff86ea82704,10597645,0,0x0,8
tick,0x7ff86ea82704,10599628,0,0x0,8
tick,0x7ff86ea82704,10601698,0,0x0,8
tick,0x7ff86ea82704,10603637,0,0x0,8
tick,0x7ff86ea82704,10605631,0,0x0,8
tick,0x7ff86ea82704,10607479,0,0x0,8
tick,0x7ff86ea82704,10609594,0,0x0,8
tick,0x7ff86ea82704,10611572,0,0x0,8
tick,0x7ff86ea82704,10613604,0,0x0,8
tick,0x7ff86ea82704,10615469,0,0x0,8
tick,0x7ff86ea82704,10617656,0,0x0,8
tick,0x7ff86ea82704,10619370,0,0x0,8
tick,0x7ff86ea82704,10621521,0,0x0,8
tick,0x7ff86ea82704,10623533,0,0x0,8
tick,0x7ff86ea82704,10625459,0,0x0,8
tick,0x7ff86ea82704,10630295,0,0x0,8
tick,0x7ff86ea82704,10632223,0,0x0,8
tick,0x7ff86ea82704,10634206,0,0x0,8
tick,0x7ff86ea82704,10636203,0,0x0,8
tick,0x7ff86ea82704,10638215,0,0x0,8
tick,0x7ff86ea82704,10640219,0,0x0,8
tick,0x7ff86ea82704,10642196,0,0x0,8
tick,0x7ff86ea82704,10644188,0,0x0,8
tick,0x7ff86ea82704,10646305,0,0x0,8
tick,0x7ff86ea82704,10648181,0,0x0,8
tick,0x7ff86ea82704,10650300,0,0x0,8
tick,0x7ff86ea82704,10652226,0,0x0,8
tick,0x7ff86ea82704,10654162,0,0x0,8
tick,0x7ff86ea82704,10656141,0,0x0,8
tick,0x7ff86ea82704,10658178,0,0x0,8
tick,0x7ff86ea82704,10660122,0,0x0,8
tick,0x7ff86ea82704,10662269,0,0x0,8
tick,0x7ff86ea82704,10664219,0,0x0,8
tick,0x7ff86ea82704,10666139,0,0x0,8
tick,0x7ff86ea82704,10668117,0,0x0,8
tick,0x7ff86ea82704,10670243,0,0x0,8
tick,0x7ff86ea82704,10672183,0,0x0,8
tick,0x7ff86ea82704,10674115,0,0x0,8
tick,0x7ff86ea82704,10676189,0,0x0,8
tick,0x7ff86ea82704,10678177,0,0x0,8
tick,0x7ff86ea82704,10680151,0,0x0,8
tick,0x7ff86ea82704,10682100,0,0x0,8
tick,0x7ff86ea82704,10684089,0,0x0,8
tick,0x7ff86ea82704,10686073,0,0x0,8
tick,0x7ff86ea82704,10688087,0,0x0,8
tick,0x7ff86ea82704,10690105,0,0x0,8
tick,0x7ff86ea82704,10692057,0,0x0,8
tick,0x7ff86ea82704,10694072,0,0x0,8
tick,0x7ff86ea82704,10696078,0,0x0,8
tick,0x7ff86ea82704,10698098,0,0x0,8
tick,0x7ff86ea82704,10700053,0,0x0,8
tick,0x7ff86ea82704,10702041,0,0x0,8
tick,0x7ff86ea82704,10704016,0,0x0,8
tick,0x7ff86ea82704,10706040,0,0x0,8
tick,0x7ff86ea82704,10708029,0,0x0,8
tick,0x7ff86ea82704,10710066,0,0x0,8
tick,0x7ff86ea82704,10712002,0,0x0,8
tick,0x7ff86ea82704,10714044,0,0x0,8
tick,0x7ff86ea82704,10715994,0,0x0,8
tick,0x7ff86ea82704,10717985,0,0x0,8
tick,0x7ff86ea82704,10719976,0,0x0,8
tick,0x7ff86ea82704,10721973,0,0x0,8
tick,0x7ff86ea82704,10723974,0,0x0,8
tick,0x7ff86ea82704,10725970,0,0x0,8
tick,0x7ff86ea82704,10727974,0,0x0,8
tick,0x7ff86ea82704,10729985,0,0x0,8
tick,0x7ff86ea82704,10731940,0,0x0,8
tick,0x7ff86ea82704,10733971,0,0x0,8
tick,0x7ff86ea82704,10735941,0,0x0,8
tick,0x7ff86ea82704,10737923,0,0x0,8
tick,0x7ff86ea82704,10739946,0,0x0,8
tick,0x7ff86ea82704,10741921,0,0x0,8
tick,0x7ff86ea82704,10743898,0,0x0,8
tick,0x7ff86ea82704,10745940,0,0x0,8
tick,0x7ff86ea82704,10747944,0,0x0,8
tick,0x7ff86ea82704,10749953,0,0x0,8
tick,0x7ff86ea82704,10751922,0,0x0,8
tick,0x7ff86ea82704,10753957,0,0x0,8
tick,0x7ff86ea82704,10755871,0,0x0,8
tick,0x7ff86ea82704,10757964,0,0x0,8
tick,0x7ff86ea82704,10759855,0,0x0,8
tick,0x7ff86ea82704,10761880,0,0x0,8
tick,0x7ff86ea82704,10763880,0,0x0,8
tick,0x7ff86ea82704,10766235,0,0x0,8
tick,0x7ff86ea82704,10768068,0,0x0,8
tick,0x7ff86ea82704,10769882,0,0x0,8
tick,0x7ff86ea82704,10771900,0,0x0,8
tick,0x7ff86ea82704,10773853,0,0x0,8
tick,0x7ff86ea82704,10775878,0,0x0,8
tick,0x7ff86ea82704,10777884,0,0x0,8
tick,0x7ff86ea82704,10779855,0,0x0,8
tick,0x7ff86ea82704,10781860,0,0x0,8
tick,0x7ff86ea82704,10783825,0,0x0,8
tick,0x7ff86ea82704,10785832,0,0x0,8
tick,0x7ff86ea82704,10787798,0,0x0,8
tick,0x7ff86ea82704,10789874,0,0x0,8
tick,0x7ff86ea82704,10791844,0,0x0,8
tick,0x7ff86ea82704,10793769,0,0x0,8
tick,0x7ff86ea82704,10795808,0,0x0,8
tick,0x7ff86ea82704,10797807,0,0x0,8
tick,0x7ff86ea82704,10799828,0,0x0,8
tick,0x7ff86ea82704,10801757,0,0x0,8
tick,0x7ff86ea82704,10803809,0,0x0,8
tick,0x7ff86ea82704,10805735,0,0x0,8
tick,0x7ff86ea82704,10807775,0,0x0,8
tick,0x7ff86ea82704,10809758,0,0x0,8
tick,0x7ff86ea82704,10811745,0,0x0,8
tick,0x7ff86ea82704,10813790,0,0x0,8
tick,0x7ff86ea82704,10815775,0,0x0,8
tick,0x7ff86ea82704,10817718,0,0x0,8
tick,0x7ff86ea82704,10819762,0,0x0,8
tick,0x7ff86ea82704,10821709,0,0x0,8
tick,0x7ff86ea82704,10823741,0,0x0,8
tick,0x7ff86ea82704,10825695,0,0x0,8
tick,0x7ff86ea82704,10827737,0,0x0,8
tick,0x7ff86ea82704,10829676,0,0x0,8
tick,0x7ff86ea82704,10831697,0,0x0,8
tick,0x7ff86ea82704,10833717,0,0x0,8
tick,0x7ff86ea82704,10835692,0,0x0,8
tick,0x7ff86ea82704,10837646,0,0x0,8
tick,0x7ff86ea82704,10839712,0,0x0,8
tick,0x7ff86ea82704,10841659,0,0x0,8
tick,0x7ff86ea82704,10843694,0,0x0,8
tick,0x7ff86ea82704,10845691,0,0x0,8
tick,0x7ff86ea82704,10847635,0,0x0,8
tick,0x7ff86ea82704,10849669,0,0x0,8
tick,0x7ff86ea82704,10851651,0,0x0,8
tick,0x7ff86ea82704,10853659,0,0x0,8
tick,0x7ff86ea82704,10855625,0,0x0,8
tick,0x7ff86ea82704,10857671,0,0x0,8
tick,0x7ff86ea82704,10859673,0,0x0,8
tick,0x7ff86ea82704,10861635,0,0x0,8
tick,0x7ff86ea82704,10863590,0,0x0,8
tick,0x7ff86ea82704,10865727,0,0x0,8
tick,0x7ff86ea82704,10867576,0,0x0,8
tick,0x7ff86ea82704,10869709,0,0x0,8
tick,0x7ff86ea82704,10871571,0,0x0,8
tick,0x7ff86ea82704,10873639,0,0x0,8
tick,0x7ff86ea82704,10875613,0,0x0,8
tick,0x7ff86ea82704,10877599,0,0x0,8
tick,0x7ff86ea82704,10879594,0,0x0,8
tick,0x7ff86ea82704,10881576,0,0x0,8
tick,0x7ff86ea82704,10883735,0,0x0,8
tick,0x7ff86ea82704,10885666,0,0x0,8
tick,0x7ff86ea82704,10887802,0,0x0,8
tick,0x7ff86ea82704,10889661,0,0x0,8
tick,0x7ff86ea82704,10891808,0,0x0,8
tick,0x7ff86ea82704,10893714,0,0x0,8
tick,0x7ff86ea82704,10895677,0,0x0,8
tick,0x7ff86ea82704,10897670,0,0x0,8
tick,0x7ff86ea82704,10899757,0,0x0,8
tick,0x7ff86ea82704,10901619,0,0x0,8
tick,0x7ff86ea82704,10903699,0,0x0,8
tick,0x7ff86ea82704,10905662,0,0x0,8
tick,0x7ff86ea82704,10907581,0,0x0,8
tick,0x7ff86ea82704,10909655,0,0x0,8
tick,0x7ff86ea82704,10911571,0,0x0,8
tick,0x7ff86ea82704,10913607,0,0x0,8
tick,0x7ff86ea82704,10915591,0,0x0,8
tick,0x7ff86ea82704,10917644,0,0x0,8
tick,0x7ff86ea82704,10919610,0,0x0,8
tick,0x7ff86ea82704,10921615,0,0x0,8
tick,0x7ff86ea82704,10923649,0,0x0,8
tick,0x7ff86ea82704,10925798,0,0x0,8
tick,0x7ff86ea82704,10927631,0,0x0,8
tick,0x7ff86ea82704,10929629,0,0x0,8
tick,0x7ff86ea82704,10931592,0,0x0,8
tick,0x7ff86ea82704,10933609,0,0x0,8
tick,0x7ff86ea82704,10935470,0,0x0,8
tick,0x7ff86ea82704,10937586,0,0x0,8
tick,0x7ff86ea82704,10939513,0,0x0,8
tick,0x7ff86ea82704,10941715,0,0x0,8
tick,0x7ff86ea82704,10943613,0,0x0,8
tick,0x7ff86ea82704,10945555,0,0x0,8
tick,0x7ff86ea82704,10947531,0,0x0,8
tick,0x7ff86ea82704,10949571,0,0x0,8
tick,0x7ff86ea82704,10951451,0,0x0,8
tick,0x7ff86ea82704,10953568,0,0x0,8
tick,0x7ff86ea82704,10955456,0,0x0,8
tick,0x7ff86ea82704,10957466,0,0x0,8
tick,0x7ff86ea82704,10959453,0,0x0,8
tick,0x7ff86ea82704,10961565,0,0x0,8
tick,0x7ff86ea82704,10963450,0,0x0,8
tick,0x7ff86ea82704,10965411,0,0x0,8
tick,0x7ff86ea82704,10967504,0,0x0,8
tick,0x7ff86ea82704,10969411,0,0x0,8
tick,0x7ff86ea82704,10971456,0,0x0,8
tick,0x7ff86ea82704,10973445,0,0x0,8
tick,0x7ff86ea82704,10975526,0,0x0,8
tick,0x7ff86ea82704,10977555,0,0x0,8
tick,0x7ff86ea82704,10979451,0,0x0,8
tick,0x7ff86ea82704,10981479,0,0x0,8
tick,0x7ff86ea82704,10983500,0,0x0,8
tick,0x7ff86ea82704,10985431,0,0x0,8
tick,0x7ff86ea82704,10987475,0,0x0,8
tick,0x7ff86ea82704,10989407,0,0x0,8
tick,0x7ff86ea82704,10991635,0,0x0,8
tick,0x7ff86ea82704,10993627,0,0x0,8
tick,0x7ff86ea82704,10995400,0,0x0,8
tick,0x7ff86ea82704,10997474,0,0x0,8
tick,0x7ff86ea82704,10999390,0,0x0,8
tick,0x7ff86ea82704,11001399,0,0x0,8
tick,0x7ff86ea82704,11003457,0,0x0,8
tick,0x7ff86ea82704,11005463,0,0x0,8
tick,0x7ff86ea82704,11007523,0,0x0,8
tick,0x7ff86ea82704,11009679,0,0x0,8
tick,0x7ff86ea82704,11011364,0,0x0,8
tick,0x7ff86ea82704,11013457,0,0x0,8
tick,0x7ff86ea82704,11015648,0,0x0,8
tick,0x7ff86ea82704,11017460,0,0x0,8
tick,0x7ff86ea82704,11019544,0,0x0,8
tick,0x7ff86ea82704,11021778,0,0x0,8
tick,0x7ff86ea82704,11023417,0,0x0,8
tick,0x7ff86ea82704,11025473,0,0x0,8
tick,0x7ff86ea82704,11027479,0,0x0,8
tick,0x7ff86ea82704,11029527,0,0x0,8
tick,0x7ff86ea82704,11031836,0,0x0,8
tick,0x7ff86ea82704,11033729,0,0x0,8
tick,0x7ff86ea82704,11035361,0,0x0,8
tick,0x7ff86ea82704,11037781,0,0x0,8
tick,0x7ff86ea82704,11039667,0,0x0,8
tick,0x7ff86ea82704,11041376,0,0x0,8
tick,0x7ff86ea82704,11043445,0,0x0,8
tick,0x7ff86ea82704,11045358,0,0x0,8
tick,0x7ff86ea82704,11047570,0,0x0,8
tick,0x7ff86ea82704,11049661,0,0x0,8
tick,0x7ff86ea82704,11051301,0,0x0,8
tick,0x7ff86ea82704,11053391,0,0x0,8
tick,0x7ff86ea82704,11056011,0,0x0,8
tick,0x7ff86ea82704,11057473,0,0x0,8
tick,0x7ff86ea82704,11059173,0,0x0,8
tick,0x7ff86ea82704,11061350,0,0x0,8
tick,0x7ff86ea82704,11063384,0,0x0,8
tick,0x7ff86ea82704,11065363,0,0x0,8
tick,0x7ff86ea82704,11067517,0,0x0,8
tick,0x7ff86ea82704,11069312,0,0x0,8
tick,0x7ff86ea82704,11072991,0,0x0,8
tick,0x7ff86ea82704,11074490,0,0x0,8
tick,0x7ff86ea82704,11076544,0,0x0,8
tick,0x7ff86ea82704,11078331,0,0x0,8
tick,0x7ff86ea82704,11080527,0,0x0,8
tick,0x7ff86ea82704,11082247,0,0x0,8
tick,0x7ff86ea82704,11084394,0,0x0,8
tick,0x7ff86ea82704,11086253,0,0x0,8
tick,0x7ff86ea82704,11088794,0,0x0,8
tick,0x7ff86ea82704,11090632,0,0x0,8
tick,0x7ff86ea82704,11092127,0,0x0,8
tick,0x7ff86ea82704,11094281,0,0x0,8
tick,0x7ff86ea82704,11096160,0,0x0,8
tick,0x7ff86ea82704,11098150,0,0x0,8
tick,0x7ff86ea82704,11100197,0,0x0,8
tick,0x7ff86ea82704,11102153,0,0x0,8
tick,0x7ff86ea82704,11104133,0,0x0,8
tick,0x7ff86ea82704,11106407,0,0x0,8
tick,0x7ff86ea82704,11108197,0,0x0,8
tick,0x7ff86ea82704,11110112,0,0x0,8
tick,0x7ff86ea82704,11112214,0,0x0,8
tick,0x7ff86ea82704,11114213,0,0x0,8
tick,0x7ff86ea82704,11116172,0,0x0,8
tick,0x7ff86ea82704,11118246,0,0x0,8
tick,0x7ff86ea82704,11120129,0,0x0,8
tick,0x7ff86ea82704,11122591,0,0x0,8
tick,0x7ff86ea82704,11124153,0,0x0,8
tick,0x7ff86ea82704,11126334,0,0x0,8
tick,0x7ff86ea82704,11128479,0,0x0,8
tick,0x7ff7c4809f90,11130215,0,0x0,1
tick,0x7ff7c4809f93,11132274,0,0x0,1
tick,0x7ff7c46977a5,11134131,0,0x0,1
tick,0x7ff7c4810764,11136261,0,0x0,1
tick,0x7ff7c4151fc5,11138340,0,0x0,8
markcompact,begin,1,796875,1679951493756
sfi-move,0x28fbd602fa8,0x1ab78ff13e0
sfi-move,0x28fbd602ff8,0x1ab78ff1418
code-move,0x28fbd6030ee,0x1ab78ff150e
sfi-move,0x28fbd6033f0,0x1ab78ff1810
sfi-move,0x28fbd603440,0x1ab78ff1848
sfi-move,0x28fbd603490,0x1ab78ff1880
sfi-move,0x28fbd6034e0,0x1ab78ff18d0
sfi-move,0x28fbd603530,0x1ab78ff1920
sfi-move,0x28fbd6035b8,0x1ab78ff1990
sfi-move,0x28fbd603608,0x1ab78ff19e0
sfi-move,0x28fbd603690,0x1ab78ff1a38
sfi-move,0x28fbd603718,0x1ab78ff1a90
sfi-move,0x28fbd6037a8,0x1ab78ff1b20
code-move,0x28fbd603a8e,0x1ab78ff1e06
new,MemoryChunk,0x327bec00000,262144
code-move,0x397aa9c7186,0x327bec07186
code-move,0x397aa9c90de,0x327bec090de
code-move,0x397aa9c91f6,0x327bec091d6
code-move,0x397aa9cc326,0x327bec0c306
code-move,0x397aa9cc486,0x327bec0c44e
code-move,0x397aa9cc696,0x327bec0c5fe
code-move,0x397aa9cc80e,0x327bec0c776
tick,0x7ff7c484aeb4,11141547,0,0x0,1
code-move,0x397aa9cccb6,0x327bec0cc1e
code-move,0x397aa9cce9e,0x327bec0cdc6
code-move,0x397aa9cd016,0x327bec0cf0e
code-move,0x397aa9cd17e,0x327bec0d05e
code-move,0x397aa9cd446,0x327bec0d30e
code-move,0x397aa9cd5f6,0x327bec0d4be
code-move,0x397aa9cd816,0x327bec0d6de
code-move,0x397aa9cdb76,0x327bec0da3e
code-move,0x397aa9ce6fe,0x327bec0e5c6
code-move,0x397aa9cf35e,0x327bec0ed2e
code-move,0x397aa9cfac6,0x327bec0f496
code-move,0x397aa9d0086,0x327bec0fa56
code-move,0x397aa9d033e,0x327bec0fd0e
code-move,0x397aa9d0606,0x327bec0ffd6
code-move,0x397aa9d075e,0x327bec1012e
code-move,0x397aa9d0836,0x327bec10206
code-move,0x397aa9d0a06,0x327bec103d6
code-move,0x397aa9d0af6,0x327bec104c6
sfi-move,0x397aa9d0bc8,0x327bec10578
code-move,0x397aa9d0c8e,0x327bec1063e
code-move,0x397aa9d0e46,0x327bec107f6
code-move,0x397aa9d0ef6,0x327bec108a6
code-move,0x397aa9d1036,0x327bec109e6
code-move,0x397aa9d1276,0x327bec10c26
code-move,0x397aa9d150e,0x327bec10ebe
code-move,0x397aa9d1dce,0x327bec1177e
tick,0x7ff86ea7faf4,11142240,0,0x0,1
code-move,0x397aa9d1fc6,0x327bec11956
code-move,0x397aa9d237e,0x327bec11d0e
code-move,0x397aa9d2576,0x327bec11f06
code-move,0x397aa9d287e,0x327bec1220e
code-move,0x397aa9d2c76,0x327bec12606
code-move,0x397aa9d2e56,0x327bec127ae
code-move,0x397aa9d3376,0x327bec12c9e
code-move,0x397aa9d37d6,0x327bec130e6
code-move,0x397aa9d3af6,0x327bec13406
code-move,0x397aa9d3bfe,0x327bec1350e
code-move,0x397aa9d3ce6,0x327bec135f6
code-move,0x397aa9d3e3e,0x327bec1374e
code-move,0x397aa9d3fbe,0x327bec138ce
code-move,0x397aa9d4396,0x327bec13ca6
code-move,0x397aa9d4786,0x327bec14096
code-move,0x397aa9d4956,0x327bec14266
code-move,0x397aa9d4b1e,0x327bec1442e
code-move,0x397aa9d4c26,0x327bec14536
code-move,0x397aa9d4d9e,0x327bec146ae
code-move,0x397aa9d4ef6,0x327bec14806
code-move,0x397aa9d4ffe,0x327bec1490e
code-move,0x397aa9d5126,0x327bec14a36
code-move,0x397aa9d523e,0x327bec14b4e
code-move,0x397aa9d53fe,0x327bec14d0e
code-move,0x397aa9d55e6,0x327bec14ef6
code-move,0x397aa9d583e,0x327bec1514e
code-move,0x397aa9d59ae,0x327bec152be
code-move,0x397aa9d5b06,0x327bec15416
code-move,0x397aa9d5d0e,0x327bec155fe
code-move,0x397aa9d6016,0x327bec15906
code-move,0x397aa9d61ce,0x327bec15abe
code-move,0x397aa9d6306,0x327bec15bf6
code-move,0x397aa9d65c6,0x327bec15eb6
code-move,0x397aa9d69ae,0x327bec1629e
code-move,0x397aa9d6c2e,0x327bec1651e
code-move,0x397aa9d719e,0x327bec16a8e
code-move,0x397aa9d7bfe,0x327bec174ee
code-move,0x397aa9d7d76,0x327bec17666
code-move,0x397aa9d7eee,0x327bec177de
sfi-move,0x397aa9d8000,0x327bec178f0
sfi-move,0x397aa9d80d0,0x327bec179c0
code-move,0x397aa9d82e6,0x327bec17bd6
sfi-move,0x397aa9d87a8,0x327bec18020
sfi-move,0x397aa9d87f8,0x327bec18058
sfi-move,0x397aa9d8848,0x327bec180a8
code-move,0x397aa9d8ad6,0x327bec18336
code-move,0x397aa9d9c9e,0x327bec194de
code-move,0x397aa9d9dfe,0x327bec1963e
code-move,0x397aa9d9f8e,0x327bec197b6
sfi-move,0x397aa9da2e8,0x327bec19a20
sfi-move,0x397aa9da3a0,0x327bec19a58
sfi-move,0x397aa9da3f0,0x327bec19a90
code-move,0x397aa9da4b6,0x327bec19b3e
sfi-move,0x397aa9da708,0x327bec19d90
sfi-move,0x397aa9da7f8,0x327bec19e80
code-move,0x397aa9da89e,0x327bec19f26
sfi-move,0x397aa9db858,0x327bec1aee0
sfi-move,0x397aa9db8a8,0x327bec1af30
sfi-move,0x397aa9db8f8,0x327bec1af80
sfi-move,0x397aa9db948,0x327bec1afd0
code-move,0x397aa9dba76,0x327bec1b0fe
code-move,0x397aa9dbdf6,0x327bec1b42e
code-move,0x397aa9dbebe,0x327bec1b4f6
code-move,0x397aa9dc0de,0x327bec1b716
code-move,0x397aa9dc436,0x327bec1ba6e
code-move,0x397aa9dc6ee,0x327bec1bd26
code-move,0x397aa9dcc96,0x327bec1c2b6
code-move,0x397aa9dce2e,0x327bec1c44e
code-move,0x397aa9dcfd6,0x327bec1c5f6
code-move,0x397aa9dd12e,0x327bec1c736
code-move,0x397aa9dd28e,0x327bec1c896
code-move,0x397aa9dd52e,0x327bec1cb16
code-move,0x397aa9ddd9e,0x327bec1d386
code-move,0x397aa9dde9e,0x327bec1d486
code-move,0x397aa9de356,0x327bec1d93e
code-move,0x397aa9de446,0x327bec1da2e
code-move,0x397aa9de53e,0x327bec1db26
code-move,0x397aa9df9ae,0x327bec1ef6e
code-move,0x397aa9dfe7e,0x327bec1f2be
code-move,0x397aa9dff66,0x327bec1f3a6
code-move,0x397aa9e0076,0x327bec1f4b6
code-move,0x397aa9e01be,0x327bec1f5fe
code-move,0x397aa9e02ce,0x327bec1f70e
code-move,0x397aa9e047e,0x327bec1f8a6
code-move,0x397aa9e075e,0x327bec1fb86
code-move,0x397aa9e08a6,0x327bec1fcb6
code-move,0x397aa9e09de,0x327bec1fdee
code-move,0x397aa9e0b2e,0x327bec1ff3e
code-move,0x397aa9e0d16,0x327bec20126
code-move,0x397aa9e0e1e,0x327bec2022e
code-move,0x397aa9e0f7e,0x327bec2038e
sfi-move,0x397aa9e2388,0x327bec20b18
code-move,0x397aa9e2496,0x327bec20c26
sfi-move,0x397aa9e26e8,0x327bec20e78
sfi-move,0x397aa9e2778,0x327bec20ef0
code-move,0x397aa9e2b9e,0x327bec21316
code-move,0x397aa9e3226,0x327bec2199e
code-move,0x397aa9e33ae,0x327bec21aee
code-move,0x397aa9e349e,0x327bec21bde
code-move,0x397aa9e3606,0x327bec21d26
code-move,0x397aa9e37e6,0x327bec21f06
code-move,0x397aa9e3a16,0x327bec220ce
code-move,0x397aa9e4726,0x327bec22dde
code-move,0x397aa9e481e,0x327bec22ed6
tick,0x7ff7c482848b,11144360,0,0x0,1
code-move,0x397aa9e492e,0x327bec22fe6
code-move,0xd48488152e,0x327bec231ce
sfi-move,0xd484881660,0x327bec23300
sfi-move,0xd484881978,0x327bec23408
code-move,0xd484881d5e,0x327bec2370e
code-move,0xd484882f86,0x327bec24936
code-move,0xd4848857d6,0x327bec27186
sfi-move,0xd484885d08,0x327bec27668
sfi-move,0xd484885d58,0x327bec276b8
code-move,0xd484885e76,0x327bec277d6
sfi-move,0xd484886f18,0x327bec28878
sfi-move,0xd484886f90,0x327bec288f0
sfi-move,0xd484887000,0x327bec28960
code-move,0xd48488767e,0x327bec28b6e
code-move,0xd48488ac96,0x327bec2c186
code-move,0xd48488b5fe,0x327bec2caee
code-move,0xd48488b6fe,0x327bec2cbee
code-move,0xd48488b81e,0x327bec2cd0e
code-move,0xd48488be86,0x327bec2d2be
code-move,0xd48488c5a6,0x327bec2d9de
code-move,0xd48488c726,0x327bec2db5e
code-move,0xd48488cad6,0x327bec2df0e
code-move,0xd48488ceb6,0x327bec2e08e
code-move,0xd48488d04e,0x327bec2e1fe
code-move,0xd48488d1fe,0x327bec2e3ae
code-move,0xd48488d37e,0x327bec2e52e
code-move,0xd48488da8e,0x327bec2ec3e
code-move,0xd48488dcfe,0x327bec2eeae
sfi-move,0xd48488e0e0,0x327bec2f128
sfi-move,0xd48488e168,0x327bec2f1b0
sfi-move,0xd48488e1b8,0x327bec2f200
code-move,0xd48488e7c6,0x327bec2f3f6
code-move,0xd48488e926,0x327bec2f556
code-move,0xd484890b86,0x327bec31756
code-move,0xd484890ebe,0x327bec31a8e
code-move,0xd484890fae,0x327bec31b7e
code-move,0xd48489122e,0x327bec31d7e
code-move,0xd4848915d6,0x327bec3210e
code-move,0xd484891996,0x327bec324b6
code-move,0xd484891b36,0x327bec32656
sfi-move,0xd484891d58,0x327bec32848
sfi-move,0xd484891da8,0x327bec32898
code-move,0xd484891ece,0x327bec329a6
code-move,0xd484892826,0x327bec332fe
sfi-move,0xd484892980,0x327bec33458
code-move,0xd484892a96,0x327bec3356e
sfi-move,0xd484893048,0x327bec339c0
sfi-move,0xd484893098,0x327bec339f8
sfi-move,0xd4848930e8,0x327bec33a48
sfi-move,0xd484893138,0x327bec33a98
sfi-move,0xd484893188,0x327bec33ae8
sfi-move,0xd4848931f8,0x327bec33b58
sfi-move,0xd484893268,0x327bec33bc8
sfi-move,0xd4848932d8,0x327bec33c38
sfi-move,0xd484893348,0x327bec33ca8
sfi-move,0xd4848933b8,0x327bec33d18
sfi-move,0xd484893428,0x327bec33d88
sfi-move,0xd484893498,0x327bec33df8
sfi-move,0xd484893508,0x327bec33e68
sfi-move,0xd484893580,0x327bec33ee0
sfi-move,0xd4848935f8,0x327bec33f58
sfi-move,0xd484893670,0x327bec33fd0
sfi-move,0xd4848936e8,0x327bec34048
sfi-move,0xd484893768,0x327bec340c8
sfi-move,0xd4848937e8,0x327bec34148
sfi-move,0xd484894480,0x327bec34498
sfi-move,0xd484894588,0x327bec345a0
sfi-move,0xd484894690,0x327bec346a8
sfi-move,0xd4848947b8,0x327bec347d0
sfi-move,0xd4848948e0,0x327bec348f8
sfi-move,0xd484894a08,0x327bec34a20
sfi-move,0xd484894b30,0x327bec34b48
sfi-move,0xd484894c58,0x327bec34c70
sfi-move,0xd484894d80,0x327bec34d98
sfi-move,0xd484894ea8,0x327bec34ec0
sfi-move,0xd484894fd0,0x327bec34fe8
sfi-move,0xd484895100,0x327bec35118
sfi-move,0xd484895230,0x327bec35248
sfi-move,0xd484895360,0x327bec35378
sfi-move,0xd484895490,0x327bec354a8
sfi-move,0xd4848955c8,0x327bec355e0
code-move,0xd48489586e,0x327bec35826
code-move,0xd4848959b6,0x327bec3594e
sfi-move,0xd484895e98,0x327bec35e30
code-move,0xd484895f76,0x327bec35f0e
code-move,0xd484896206,0x327bec3619e
code-move,0xd484896396,0x327bec3632e
sfi-move,0xd484897278,0x327bec36de0
sfi-move,0xd4848972c8,0x327bec36e30
sfi-move,0xd484897348,0x327bec36e68
sfi-move,0xd484897398,0x327bec36eb8
sfi-move,0xd4848973e8,0x327bec36f08
sfi-move,0xd484897488,0x327bec36fa8
sfi-move,0xd4848974d8,0x327bec36ff8
sfi-move,0xd484897528,0x327bec37048
sfi-move,0xd4848975a8,0x327bec370c8
sfi-move,0xd4848975f8,0x327bec37118
sfi-move,0xd484897648,0x327bec37168
sfi-move,0xd484897698,0x327bec371b8
sfi-move,0xd4848976e8,0x327bec37208
sfi-move,0xd484897738,0x327bec37258
sfi-move,0xd484897788,0x327bec372a8
sfi-move,0xd4848977d8,0x327bec372f8
code-move,0xd48489a27e,0x327bec37656
sfi-move,0xd48489b460,0x327bec38838
sfi-move,0xd48489b4d0,0x327bec388a8
sfi-move,0xd48489b540,0x327bec38918
tick,0x7ff7c4f5096e,11146509,0,0x0,1
sfi-move,0xd48489b5b0,0x327bec38988
sfi-move,0xd48489b620,0x327bec389f8
sfi-move,0xd48489b690,0x327bec38a68
sfi-move,0xd48489b718,0x327bec38af0
sfi-move,0xd48489b7e8,0x327bec38bc0
sfi-move,0xd48489b858,0x327bec38c30
sfi-move,0xd48489b8c8,0x327bec38ca0
sfi-move,0xd48489b938,0x327bec38d10
sfi-move,0xd48489b9a8,0x327bec38d80
sfi-move,0xd48489ba18,0x327bec38df0
sfi-move,0xd48489ba88,0x327bec38e60
sfi-move,0xd48489baf8,0x327bec38ed0
sfi-move,0xd48489bb68,0x327bec38f40
sfi-move,0xd48489bbd8,0x327bec38fb0
sfi-move,0xd48489bc48,0x327bec39020
sfi-move,0xd48489bcc0,0x327bec39098
sfi-move,0xd48489be60,0x327bec39238
sfi-move,0xd48489d270,0x327bec3a290
sfi-move,0xd48489d2c0,0x327bec3a2e0
sfi-move,0xd48489d310,0x327bec3a330
sfi-move,0xd48489d360,0x327bec3a380
sfi-move,0xd48489d3b0,0x327bec3a3d0
sfi-move,0xd48489d400,0x327bec3a420
sfi-move,0xd48489d450,0x327bec3a470
sfi-move,0xd48489d4a0,0x327bec3a4c0
sfi-move,0xd48489d4f0,0x327bec3a510
sfi-move,0xd48489d5d0,0x327bec3a568
sfi-move,0xd48489d620,0x327bec3a5a0
sfi-move,0xd48489d6a0,0x327bec3a620
sfi-move,0xd48489d6f0,0x327bec3a670
sfi-move,0xd48489d740,0x327bec3a6c0
sfi-move,0xd48489d790,0x327bec3a710
sfi-move,0xd48489d7e0,0x327bec3a760
sfi-move,0xd48489d830,0x327bec3a7b0
sfi-move,0xd48489d880,0x327bec3a800
sfi-move,0xd48489d8d0,0x327bec3a850
sfi-move,0xd48489d920,0x327bec3a8a0
sfi-move,0xd48489d970,0x327bec3a8f0
sfi-move,0xd48489d9c0,0x327bec3a940
sfi-move,0xd48489da10,0x327bec3a990
sfi-move,0xd48489da60,0x327bec3a9e0
sfi-move,0xd48489dab0,0x327bec3aa30
sfi-move,0xd48489db00,0x327bec3aa80
sfi-move,0xd48489db88,0x327bec3ab08
sfi-move,0xd48489dc10,0x327bec3ab90
sfi-move,0xd48489dc98,0x327bec3ac18
sfi-move,0xd48489dd20,0x327bec3aca0
sfi-move,0xd48489dd70,0x327bec3acd8
sfi-move,0xd48489ddc0,0x327bec3ad10
sfi-move,0xd48489de10,0x327bec3ad48
sfi-move,0xd48489de60,0x327bec3ad98
sfi-move,0xd48489dec8,0x327bec3ae00
sfi-move,0xd48489df18,0x327bec3ae50
code-move,0xd48489efb6,0x327bec3aed6
sfi-move,0xd4848a3198,0x327bec3c6b0
sfi-move,0xd4848a31e8,0x327bec3c700
sfi-move,0xd4848a3238,0x327bec3c750
sfi-move,0xd4848a3288,0x327bec3c7a0
sfi-move,0xd4848a32d8,0x327bec3c7f0
sfi-move,0xd4848a3328,0x327bec3c840
sfi-move,0xd4848a3378,0x327bec3c890
sfi-move,0xd4848a33c8,0x327bec3c8e0
sfi-move,0xd4848a3418,0x327bec3c930
sfi-move,0xd4848a3468,0x327bec3c980
sfi-move,0xd4848a34b8,0x327bec3c9d0
sfi-move,0xd4848a3508,0x327bec3ca20
sfi-move,0xd4848a3558,0x327bec3ca70
sfi-move,0xd4848a35f8,0x327bec3cac0
sfi-move,0xd4848a3648,0x327bec3cb10
sfi-move,0xd4848a3698,0x327bec3cb60
sfi-move,0xd4848a3738,0x327bec3cc00
sfi-move,0xd4848a3788,0x327bec3cc50
sfi-move,0xd4848a37d8,0x327bec3cca0
sfi-move,0xd4848a3828,0x327bec3ccf0
sfi-move,0xd4848a3878,0x327bec3cd40
sfi-move,0xd4848a38c8,0x327bec3cd90
sfi-move,0xd4848a3918,0x327bec3cde0
sfi-move,0xd4848a3968,0x327bec3ce30
sfi-move,0xd4848a39b8,0x327bec3ce80
sfi-move,0xd4848a3a08,0x327bec3ced0
sfi-move,0xd4848a3a80,0x327bec3cf48
sfi-move,0xd4848a3af8,0x327bec3cfc0
sfi-move,0xd4848a3b48,0x327bec3d010
sfi-move,0xd4848a3b98,0x327bec3d060
sfi-move,0xd4848a3be8,0x327bec3d0b0
sfi-move,0xd4848a3c38,0x327bec3d100
sfi-move,0xd4848a3c88,0x327bec3d150
sfi-move,0xd4848a3d10,0x327bec3d1d8
sfi-move,0xd4848a3da0,0x327bec3d268
sfi-move,0xd4848a3e30,0x327bec3d2f8
sfi-move,0xd4848a3ec0,0x327bec3d388
sfi-move,0xd4848a3f48,0x327bec3d410
sfi-move,0xd4848a3fd0,0x327bec3d498
sfi-move,0xd4848a4020,0x327bec3d4e8
sfi-move,0xd4848a40a8,0x327bec3d570
sfi-move,0xd4848a4130,0x327bec3d5f8
sfi-move,0xd4848a41b8,0x327bec3d680
sfi-move,0xd4848a4240,0x327bec3d6f0
sfi-move,0xd4848a42c8,0x327bec3d760
sfi-move,0xd4848a4350,0x327bec3d7d0
sfi-move,0xd4848a43d8,0x327bec3d858
sfi-move,0xd4848a4460,0x327bec3d8c8
sfi-move,0xd4848a44f0,0x327bec3d958
sfi-move,0xd4848a4580,0x327bec3d9e8
sfi-move,0xd4848a4610,0x327bec3da78
sfi-move,0xd4848a4660,0x327bec3dac8
sfi-move,0xd4848a46b0,0x327bec3db18
sfi-move,0xd4848a4700,0x327bec3db68
sfi-move,0xd4848a4750,0x327bec3dbb8
sfi-move,0xd4848a47e0,0x327bec3dc48
sfi-move,0xd4848a4830,0x327bec3dc98
sfi-move,0xd4848a4880,0x327bec3dce8
sfi-move,0xd4848a4910,0x327bec3dd78
sfi-move,0xd4848a49c8,0x327bec3de30
sfi-move,0xd4848a4a50,0x327bec3deb8
sfi-move,0xd4848a4ad8,0x327bec3df40
sfi-move,0xd4848a4b28,0x327bec3df90
new,MemoryChunk,0x3dda9fc0000,262144
sfi-move,0xd4848a4b78,0x327bec3dfe0
sfi-move,0xd4848a4c00,0x327bec3e068
sfi-move,0xd4848a4c88,0x327bec3e0d8
sfi-move,0xd4848a4d10,0x327bec3e148
sfi-move,0xd4848a4d98,0x327bec3e1d0
sfi-move,0xd4848a4e20,0x327bec3e258
sfi-move,0xd4848a4ea8,0x327bec3e2e0
sfi-move,0xd4848a4f68,0x327bec3e3a0
tick,0x7ff7c4001cf0,11148667,0,0x0,1
sfi-move,0xd4848a5018,0x327bec3e438
sfi-move,0xd4848a50a8,0x327bec3e4c8
sfi-move,0xd4848a5138,0x327bec3e558
sfi-move,0xd4848a5188,0x327bec3e5a8
sfi-move,0xd4848a51d8,0x327bec3e5f8
sfi-move,0xd4848a5228,0x327bec3e648
sfi-move,0xd4848a5278,0x327bec3e698
sfi-move,0xd4848a5308,0x327bec3e728
sfi-move,0xd4848a5390,0x327bec3e798
sfi-move,0xd4848a5418,0x327bec3e808
sfi-move,0xd4848a54d8,0x327bec3e878
sfi-move,0xd4848a5550,0x327bec3e8f0
sfi-move,0xd4848ab858,0x327bec3f320
sfi-move,0xd4848ab8a8,0x327bec3f370
sfi-move,0xd4848ab8f8,0x327bec3f3c0
sfi-move,0xd4848ab948,0x327bec3f410
sfi-move,0xd4848acb00,0x327bec3fd88
sfi-move,0xd4848acb70,0x327bec3fdf8
sfi-move,0xd4848acbe0,0x327bec3fe68
sfi-move,0xd4848acc50,0x327bec3fed8
sfi-move,0xd4848accc0,0x327bec3ff48
sfi-move,0xd4848acd30,0x327bec3ffb8
sfi-move,0xd4848acda0,0x5bf4dfd108
sfi-move,0xd4848ace10,0x5bf4dfcbb8
sfi-move,0xd4848ace80,0x5bf4dfce30
sfi-move,0xd4848acef0,0x5bf4dee480
sfi-move,0xd4848acf60,0x5bf4dc86d8
sfi-move,0xd4848acfd0,0x5bf4dc8640
sfi-move,0xd4848ad170,0x5bf4dfcd48
sfi-move,0xd4848add88,0x1aba9c5c870
sfi-move,0xd4848ade90,0x5bf4dff8f8
code-move,0x28fbd60613e,0x3dda9fc3576
code-move,0x28fbd60625e,0x3dda9fc3696
code-move,0x28fbd6063a6,0x3dda9fc37de
sfi-move,0xd4848adf98,0x5bf4dfd470
sfi-move,0xd4848ae0a0,0x5bf4df0a60
sfi-move,0xd4848ae1a8,0x5bf4def188
sfi-move,0x28fbd606c60,0x3dda9fc3e10
sfi-move,0x28fbd606cb0,0x3dda9fc3e60
sfi-move,0x28fbd606d00,0x3dda9fc3eb0
sfi-move,0x28fbd606d50,0x3dda9fc3f00
sfi-move,0x28fbd606da0,0x3dda9fc3f50
sfi-move,0x28fbd606df0,0x3dda9fc3fa0
sfi-move,0x28fbd606e40,0x3dda9fc3ff0
sfi-move,0x28fbd606e90,0x3dda9fc4040
sfi-move,0x28fbd606ee0,0x3dda9fc4078
sfi-move,0x28fbd606f30,0x3dda9fc40b0
code-move,0x28fbd607f76,0x3dda9fc44ae
code-move,0x28fbd6086ce,0x3dda9fc4bee
code-move,0x28fbd6087c6,0x3dda9fc4ce6
code-move,0x28fbd608a26,0x3dda9fc4f46
code-move,0x28fbd608cb6,0x3dda9fc51d6
code-move,0x28fbd609006,0x3dda9fc5526
code-move,0x28fbd6093d6,0x3dda9fc58f6
code-move,0x28fbd609546,0x3dda9fc5a66
sfi-move,0x28fbd609eb0,0x3dda9fc60f8
sfi-move,0x28fbd609f00,0x3dda9fc6148
sfi-move,0x28fbd609f50,0x3dda9fc6180
sfi-move,0x28fbd609fa0,0x3dda9fc61b8
sfi-move,0x28fbd609ff0,0x3dda9fc61f0
sfi-move,0x28fbd60a040,0x3dda9fc6240
sfi-move,0x28fbd60a090,0x3dda9fc6290
sfi-move,0x28fbd60a0e0,0x3dda9fc62e0
sfi-move,0x28fbd60a130,0x3dda9fc6330
sfi-move,0x28fbd60a180,0x3dda9fc6380
sfi-move,0x28fbd60a1d0,0x3dda9fc63d0
sfi-move,0x28fbd60a220,0x3dda9fc6420
sfi-move,0x28fbd60a270,0x3dda9fc6470
sfi-move,0x28fbd60b568,0x3dda9fc68c8
sfi-move,0x28fbd60b5b8,0x3dda9fc6918
sfi-move,0x28fbd60b608,0x3dda9fc6950
sfi-move,0x28fbd60b658,0x3dda9fc69a0
sfi-move,0x28fbd60b6a8,0x3dda9fc69f0
sfi-move,0x28fbd60b6f8,0x3dda9fc6a40
sfi-move,0x28fbd60b748,0x3dda9fc6a90
sfi-move,0x28fbd60b7c0,0x3dda9fc6b08
code-move,0x28fbd60be16,0x3dda9fc6bb6
sfi-move,0x28fbd60ca80,0x3dda9fc71d8
sfi-move,0x28fbd60cad0,0x3dda9fc7210
tick,0x7ff86ea4a91e,11150022,0,0x0,1
sfi-move,0x28fbd60cb60,0x3dda9fc7248
sfi-move,0x28fbd60cbb0,0x3dda9fc7298
sfi-move,0x28fbd60cc00,0x3dda9fc72e8
sfi-move,0x28fbd60cc50,0x3dda9fc7338
sfi-move,0x28fbd60cca0,0x3dda9fc7388
code-move,0x28fbd60dc0e,0x3dda9fc754e
code-move,0x28fbd60ea4e,0x3dda9fc838e
code-move,0x28fbd60ebc6,0x3dda9fc8506
code-move,0x28fbd60ef4e,0x3dda9fc888e
code-move,0x28fbd60f056,0x3dda9fc8976
sfi-move,0x28fbd60f350,0x3dda9fc8c28
sfi-move,0x28fbd60f3a0,0x3dda9fc8c60
sfi-move,0x28fbd60f3f0,0x3dda9fc8cb0
sfi-move,0x28fbd60f440,0x3dda9fc8d00
code-move,0x28fbd60f7f6,0x3dda9fc90b6
code-move,0x28fbd60fd4e,0x3dda9fc95ce
code-move,0x28fbd60ff4e,0x3dda9fc97ce
sfi-move,0x28fbd611ec8,0x3dda9fcad78
sfi-move,0x28fbd611f18,0x3dda9fcadb0
sfi-move,0x28fbd611f68,0x3dda9fcade8
sfi-move,0x28fbd611fb8,0x3dda9fcae20
sfi-move,0x28fbd612008,0x3dda9fcae70
sfi-move,0x28fbd612058,0x3dda9fcaec0
sfi-move,0x28fbd6120a8,0x3dda9fcaef8
sfi-move,0x28fbd6120f8,0x3dda9fcaf30
sfi-move,0x28fbd612148,0x3dda9fcaf80
sfi-move,0x28fbd612198,0x3dda9fcafd0
sfi-move,0x28fbd6121e8,0x3dda9fcb008
sfi-move,0x28fbd612238,0x3dda9fcb058
sfi-move,0x28fbd612288,0x3dda9fcb090
sfi-move,0x28fbd6122d8,0x3dda9fcb0c8
sfi-move,0x28fbd612328,0x3dda9fcb100
sfi-move,0x28fbd612378,0x3dda9fcb150
sfi-move,0x28fbd6123c8,0x3dda9fcb1a0
sfi-move,0x28fbd612418,0x3dda9fcb1f0
sfi-move,0x28fbd612468,0x3dda9fcb240
sfi-move,0x28fbd6124b8,0x3dda9fcb290
sfi-move,0x28fbd612538,0x3dda9fcb2c8
sfi-move,0x28fbd612588,0x3dda9fcb318
sfi-move,0x28fbd612608,0x3dda9fcb398
sfi-move,0x28fbd612658,0x3dda9fcb3d0
sfi-move,0x28fbd6126a8,0x3dda9fcb420
sfi-move,0x28fbd6126f8,0x3dda9fcb470
sfi-move,0x28fbd612748,0x3dda9fcb4c0
sfi-move,0x28fbd612798,0x3dda9fcb510
sfi-move,0x28fbd6127e8,0x3dda9fcb560
sfi-move,0x28fbd612838,0x3dda9fcb5b0
sfi-move,0x28fbd612888,0x3dda9fcb600
sfi-move,0x28fbd6128d8,0x3dda9fcb650
sfi-move,0x28fbd612928,0x3dda9fcb688
sfi-move,0x28fbd6129b8,0x3dda9fcb700
sfi-move,0x28fbd612ad8,0x3dda9fcb778
sfi-move,0x28fbd612b68,0x3dda9fcb7f0
sfi-move,0x28fbd612bb8,0x3dda9fcb840
sfi-move,0x28fbd612c08,0x3dda9fcb890
sfi-move,0x28fbd612c90,0x3dda9fcb8e8
sfi-move,0x28fbd612d20,0x3dda9fcb960
sfi-move,0x28fbd612da8,0x3dda9fcb9b8
sfi-move,0x28fbd612e30,0x3dda9fcba40
sfi-move,0x28fbd612ec0,0x3dda9fcbab8
sfi-move,0x28fbd612f88,0x3dda9fcbb68
sfi-move,0x28fbd613050,0x3dda9fcbc30
sfi-move,0x28fbd613118,0x3dda9fcbcf8
sfi-move,0x28fbd6131a8,0x3dda9fcbd70
sfi-move,0x28fbd613238,0x3dda9fcbe00
sfi-move,0x28fbd617bf8,0x3dda9fcc538
sfi-move,0x28fbd6185b0,0x3dda9fcc900
sfi-move,0x28fbd618600,0x3dda9fcc950
sfi-move,0x28fbd618690,0x3dda9fcc9e0
sfi-move,0x28fbd6186e0,0x3dda9fcca30
sfi-move,0x28fbd6198b8,0x3dda9fcd150
sfi-move,0x28fbd619908,0x3dda9fcd188
sfi-move,0x28fbd619958,0x3dda9fcd1d8
sfi-move,0x28fbd6199a8,0x3dda9fcd228
sfi-move,0x28fbd6199f8,0x3dda9fcd278
sfi-move,0x28fbd619a48,0x3dda9fcd2c8
sfi-move,0x28fbd619a98,0x3dda9fcd318
sfi-move,0x28fbd619ae8,0x3dda9fcd368
sfi-move,0x28fbd619b38,0x3dda9fcd3b8
sfi-move,0x28fbd619b88,0x3dda9fcd408
code-move,0x28fbd61a3c6,0x3dda9fcd54e
sfi-move,0x28fbd61b7c0,0x3dda9fcd8d8
sfi-move,0x28fbd61b810,0x3dda9fcd928
sfi-move,0x28fbd61b860,0x3dda9fcd960
sfi-move,0x28fbd61b8b0,0x3dda9fcd9b0
sfi-move,0x28fbd61b900,0x3dda9fcda00
sfi-move,0x28fbd61c608,0x3dda9fcdea8
sfi-move,0x28fbd61c658,0x3dda9fcdef8
sfi-move,0x28fbd61c6a8,0x3dda9fcdf48
sfi-move,0x28fbd61c6f8,0x3dda9fcdf98
sfi-move,0x28fbd61c748,0x3dda9fcdfe8
sfi-move,0x28fbd61dbe0,0x3dda9fce880
sfi-move,0x28fbd61dc50,0x3dda9fce8f0
sfi-move,0x28fbd61dcc0,0x3dda9fce960
sfi-move,0x28fbd61dd30,0x3dda9fce9d0
sfi-move,0x28fbd61dda0,0x3dda9fcea40
sfi-move,0x28fbd61de10,0x3dda9fceab0
sfi-move,0x28fbd61de80,0x3dda9fceb20
sfi-move,0x28fbd61def0,0x3dda9fceb90
sfi-move,0x28fbd61df60,0x3dda9fcec00
sfi-move,0x28fbd61dfd0,0x3dda9fcec70
sfi-move,0x28fbd61e0e0,0x3dda9fced80
sfi-move,0x28fbd61e1e8,0x3dda9fcee88
sfi-move,0x28fbd61f850,0x3dda9fcfe08
sfi-move,0x28fbd61f8a0,0x3dda9fcfe58
sfi-move,0x28fbd61f8f0,0x3dda9fcfea8
sfi-move,0x28fbd61f940,0x3dda9fcfef8
sfi-move,0x28fbd61f990,0x3dda9fcff48
sfi-move,0x28fbd61f9e0,0x3dda9fcff98
sfi-move,0x28fbd61fa30,0x3dda9fcffe8
sfi-move,0x28fbd61fa80,0x3dda9fd0038
sfi-move,0x28fbd61fad0,0x3dda9fd0088
sfi-move,0x28fbd61fb20,0x3dda9fd00d8
sfi-move,0x28fbd61fb70,0x3dda9fd0128
sfi-move,0x28fbd61fbc0,0x3dda9fd0178
sfi-move,0x28fbd61fc10,0x3dda9fd01c8
sfi-move,0x28fbd61fc60,0x3dda9fd0218
sfi-move,0x28fbd61fcb0,0x3dda9fd0268
sfi-move,0x28fbd61fd00,0x3dda9fd02b8
sfi-move,0x28fbd61fd50,0x3dda9fd0308
sfi-move,0x28fbd61fda0,0x3dda9fd0358
sfi-move,0x28fbd61fdf0,0x3dda9fd03a8
sfi-move,0x28fbd61fe40,0x3dda9fd03f8
sfi-move,0x28fbd61fe90,0x3dda9fd0448
sfi-move,0x28fbd61fee0,0x3dda9fd0498
sfi-move,0x28fbd61ff30,0x3dda9fd04e8
sfi-move,0x28fbd61ff80,0x3dda9fd0538
sfi-move,0x28fbd61ffd0,0x3dda9fd0588
sfi-move,0x28fbd620020,0x3dda9fd05d8
sfi-move,0x28fbd620070,0x3dda9fd0628
tick,0x7ff86ea4a91e,11152175,0,0x0,1
sfi-move,0x28fbd6200c0,0x3dda9fd0678
sfi-move,0x28fbd620110,0x3dda9fd06c8
sfi-move,0x28fbd620160,0x3dda9fd0718
sfi-move,0x28fbd6201b0,0x3dda9fd0768
sfi-move,0x28fbd620200,0x3dda9fd07b8
sfi-move,0x28fbd620250,0x3dda9fd0808
sfi-move,0x28fbd6239d8,0x3dda9fd0f48
sfi-move,0x28fbd623a28,0x3dda9fd0f98
sfi-move,0x28fbd623a78,0x3dda9fd0fe8
sfi-move,0x28fbd623ac8,0x3dda9fd1038
sfi-move,0x28fbd624658,0x3dda9fd1248
sfi-move,0x28fbd624d08,0x3dda9fd14d0
sfi-move,0x28fbd6261c0,0x3dda9fd2150
sfi-move,0x28fbd626210,0x3dda9fd21a0
sfi-move,0x28fbd626260,0x3dda9fd21f0
sfi-move,0x28fbd6262b0,0x3dda9fd2240
sfi-move,0x28fbd626300,0x3dda9fd2290
sfi-move,0x28fbd626350,0x3dda9fd22e0
sfi-move,0x28fbd6263a0,0x3dda9fd2330
sfi-move,0x28fbd6263f0,0x3dda9fd2380
sfi-move,0x28fbd626440,0x3dda9fd23d0
sfi-move,0x28fbd626490,0x3dda9fd2420
sfi-move,0x28fbd6264e0,0x3dda9fd2470
sfi-move,0x28fbd626530,0x3dda9fd24c0
sfi-move,0x28fbd626580,0x3dda9fd2510
sfi-move,0x28fbd6265d0,0x3dda9fd2560
sfi-move,0x28fbd626620,0x3dda9fd25b0
sfi-move,0x28fbd626670,0x3dda9fd2600
sfi-move,0x28fbd6266c0,0x3dda9fd2650
sfi-move,0x28fbd626710,0x3dda9fd26a0
sfi-move,0x28fbd626760,0x3dda9fd26f0
sfi-move,0x28fbd6267b0,0x3dda9fd2740
sfi-move,0x28fbd626800,0x3dda9fd2790
sfi-move,0x28fbd626850,0x3dda9fd27e0
sfi-move,0x28fbd6268a0,0x3dda9fd2830
sfi-move,0x28fbd6268f0,0x3dda9fd2880
sfi-move,0x28fbd626940,0x3dda9fd28d0
sfi-move,0x28fbd626990,0x3dda9fd2920
sfi-move,0x28fbd6269e0,0x3dda9fd2970
sfi-move,0x28fbd626a30,0x3dda9fd29c0
sfi-move,0x28fbd626a80,0x3dda9fd2a10
sfi-move,0x28fbd626ad0,0x3dda9fd2a60
sfi-move,0x28fbd626b20,0x3dda9fd2ab0
sfi-move,0x28fbd626b70,0x3dda9fd2b00
sfi-move,0x28fbd626bc0,0x3dda9fd2b50
sfi-move,0x28fbd626c10,0x3dda9fd2ba0
sfi-move,0x28fbd626c60,0x3dda9fd2bf0
sfi-move,0x28fbd626cb0,0x3dda9fd2c40
sfi-move,0x28fbd626d00,0x3dda9fd2c90
sfi-move,0x28fbd626d50,0x3dda9fd2ce0
sfi-move,0x28fbd626da0,0x3dda9fd2d30
sfi-move,0x28fbd626df0,0x3dda9fd2d80
sfi-move,0x28fbd626e40,0x3dda9fd2dd0
sfi-move,0x28fbd626e90,0x3dda9fd2e20
sfi-move,0x28fbd626ee0,0x3dda9fd2e70
sfi-move,0x28fbd626f30,0x3dda9fd2ec0
sfi-move,0x28fbd626f80,0x3dda9fd2f10
sfi-move,0x28fbd626fd0,0x3dda9fd2f60
sfi-move,0x28fbd627020,0x3dda9fd2fb0
sfi-move,0x28fbd627088,0x3dda9fd3018
sfi-move,0x28fbd6270d8,0x3dda9fd3068
sfi-move,0x28fbd627128,0x3dda9fd30b8
sfi-move,0x28fbd627178,0x3dda9fd3108
sfi-move,0x28fbd6271c8,0x3dda9fd3158
sfi-move,0x28fbd627218,0x3dda9fd31a8
sfi-move,0x28fbd627268,0x3dda9fd31f8
sfi-move,0x28fbd6272b8,0x3dda9fd3248
sfi-move,0x28fbd627308,0x3dda9fd3298
sfi-move,0x28fbd627358,0x3dda9fd32e8
sfi-move,0x28fbd6273a8,0x3dda9fd3338
sfi-move,0x28fbd6273f8,0x3dda9fd3388
sfi-move,0x28fbd627448,0x3dda9fd33d8
sfi-move,0x28fbd627498,0x3dda9fd3428
sfi-move,0x28fbd6274e8,0x3dda9fd3478
sfi-move,0x28fbd627538,0x3dda9fd34c8
sfi-move,0x28fbd627588,0x3dda9fd3518
sfi-move,0x28fbd6275d8,0x3dda9fd3568
sfi-move,0x28fbd627628,0x3dda9fd35b8
sfi-move,0x28fbd627678,0x3dda9fd3608
sfi-move,0x28fbd6276c8,0x3dda9fd3658
sfi-move,0x28fbd627718,0x3dda9fd36a8
sfi-move,0x28fbd627768,0x3dda9fd36f8
sfi-move,0x28fbd6291c8,0x3dda9fd3748
code-move,0x28fbd629276,0x3dda9fd37f6
sfi-move,0x28fbd62bd48,0x3dda9fd4428
sfi-move,0x28fbd62bdc0,0x3dda9fd44a0
sfi-move,0x28fbd62be10,0x3dda9fd44f0
sfi-move,0x28fbd62be60,0x3dda9fd4540
sfi-move,0x28fbd62beb0,0x3dda9fd4590
sfi-move,0x28fbd62bf00,0x3dda9fd45e0
sfi-move,0x28fbd62bf50,0x3dda9fd4630
sfi-move,0x28fbd62bfa0,0x3dda9fd4680
sfi-move,0x28fbd62bff0,0x3dda9fd46d0
sfi-move,0x28fbd62c040,0x3dda9fd4720
code-move,0x28fbd62d1ae,0x3dda9fd497e
code-move,0x28fbd62fb86,0x3dda9fd733e
code-move,0x28fbd62fd3e,0x3dda9fd74f6
code-move,0x28fbd62ff2e,0x3dda9fd76c6
code-move,0x28fbd63002e,0x3dda9fd77c6
code-move,0x28fbd63011e,0x3dda9fd78b6
sfi-move,0x28fbd630318,0x3dda9fd7ab0
code-move,0x28fbd6304de,0x3dda9fd7c76
sfi-move,0x28fbd630768,0x3dda9fd7ec0
code-move,0x28fbd63096e,0x3dda9fd80c6
sfi-move,0x28fbd6333a0,0x3dda9fda4b0
sfi-move,0x28fbd6333f0,0x3dda9fda500
sfi-move,0x28fbd633440,0x3dda9fda550
sfi-move,0x28fbd633490,0x3dda9fda5a0
sfi-move,0x28fbd6334e0,0x3dda9fda5f0
sfi-move,0x28fbd633530,0x3dda9fda640
sfi-move,0x28fbd633580,0x3dda9fda690
sfi-move,0x28fbd6335f8,0x3dda9fda708
sfi-move,0x28fbd633648,0x3dda9fda758
sfi-move,0x28fbd633698,0x3dda9fda7a8
sfi-move,0x28fbd6336e8,0x3dda9fda7f8
sfi-move,0x28fbd633738,0x3dda9fda848
sfi-move,0x28fbd633788,0x3dda9fda898
sfi-move,0x28fbd633800,0x3dda9fda910
sfi-move,0x28fbd633850,0x3dda9fda960
sfi-move,0x28fbd6338d8,0x3dda9fda9e8
sfi-move,0x28fbd635258,0x3dda9fdadd0
sfi-move,0x28fbd6352a8,0x3dda9fdae20
sfi-move,0x28fbd6352f8,0x3dda9fdae70
sfi-move,0x28fbd635348,0x3dda9fdaec0
sfi-move,0x28fbd636388,0x3dda9fdb8f8
sfi-move,0x28fbd6363d8,0x3dda9fdb930
sfi-move,0x28fbd636448,0x3dda9fdb9a0
sfi-move,0x28fbd6364b8,0x3dda9fdba10
sfi-move,0x28fbd636528,0x3dda9fdba80
sfi-move,0x28fbd636598,0x3dda9fdbaf0
sfi-move,0x28fbd636608,0x3dda9fdbb60
sfi-move,0x28fbd636658,0x3dda9fdbbb0
sfi-move,0x28fbd6366a8,0x3dda9fdbc00
sfi-move,0x28fbd6366f8,0x3dda9fdbc50
sfi-move,0x28fbd636748,0x3dda9fdbca0
sfi-move,0x28fbd6367c0,0x3dda9fdbd18
sfi-move,0x28fbd636830,0x3dda9fdbd88
sfi-move,0x28fbd6368a0,0x3dda9fdbdf8
sfi-move,0x28fbd6368f0,0x3dda9fdbe48
sfi-move,0x28fbd636940,0x3dda9fdbe98
sfi-move,0x28fbd636978,0x3dda9fdbed0
sfi-move,0x28fbd6369c8,0x3dda9fdbf20
sfi-move,0x28fbd636a18,0x3dda9fdbf70
code-move,0x28fbd637af6,0x3dda9fdc0d6
code-move,0x28fbd638eee,0x3dda9fdc5a6
code-move,0x28fbd639e86,0x3dda9fdd53e
code-move,0x28fbd63a0e6,0x3dda9fdd79e
code-move,0x28fbd63a1ee,0x3dda9fdd88e
code-move,0x28fbd63a326,0x3dda9fdd9c6
code-move,0x28fbd63a99e,0x3dda9fddfee
code-move,0x28fbd63ac46,0x3dda9fde296
sfi-move,0x28fbd63db10,0x3dda9fe0f88
sfi-move,0x28fbd63db60,0x3dda9fe0fc0
sfi-move,0x28fbd63dbb0,0x3dda9fe0ff8
sfi-move,0x28fbd63dc00,0x3dda9fe1048
sfi-move,0x28fbd63dc78,0x3dda9fe10c0
code-move,0x28fbd63e3be,0x3dda9fe12be
code-move,0x28fbd63e5d6,0x3dda9fe14a6
code-move,0x28fbd63e6be,0x3dda9fe158e
code-move,0x28fbd63e8ae,0x3dda9fe177e
code-move,0x28fbd63e9d6,0x3dda9fe18a6
code-move,0x28fbd63ee26,0x3dda9fe1cf6
code-move,0x28fbd63f076,0x3dda9fe1f46
code-move,0x28fbd63f426,0x3dda9fe22f6
code-move,0x28fbd63f69e,0x3dda9fe24de
code-move,0x28fbd63f8ae,0x3dda9fe26b6
code-move,0x28fbd63fb0e,0x3dda9fe2916
tick,0x7ff86ea4a91e,11156639,0,0x0,1
tick,0x7ff86ea4a91e,11156669,0,0x0,1
new,MemoryChunk,0x3ab313c0000,262144
sfi-move,0xd4848ae2b0,0x5bf4dc8770
new,MemoryChunk,0x3a363080000,262144
sfi-move,0xd4848b3d68,0x3a363086060
sfi-move,0xd4848b3db8,0x3a3630860b0
sfi-move,0xd4848b3e08,0x3a363086100
sfi-move,0xd4848b3e58,0x3a363086150
sfi-move,0xd4848b3ea8,0x3a3630861a0
sfi-move,0xd4848b3ef8,0x3a3630861f0
sfi-move,0xd4848b3f48,0x3a363086240
sfi-move,0xd4848b3f98,0x3a363086290
sfi-move,0xd4848b3fe8,0x3a3630862e0
sfi-move,0xd4848b4038,0x3a363086330
sfi-move,0xd4848b4088,0x3a363086380
sfi-move,0xd4848b40d8,0x3a3630863d0
sfi-move,0xd4848b4128,0x3a363086420
sfi-move,0xd4848b4178,0x3a363086470
sfi-move,0xd4848b41c8,0x3a3630864c0
sfi-move,0xd4848b4218,0x3a363086510
sfi-move,0xd4848b4268,0x3a363086560
sfi-move,0xd4848b42b8,0x3a3630865b0
sfi-move,0xd4848b4308,0x3a363086600
sfi-move,0xd4848b4358,0x3a363086650
sfi-move,0xd4848b43a8,0x3a3630866a0
sfi-move,0xd4848b43f8,0x3a3630866f0
sfi-move,0xd4848b4448,0x3a363086740
sfi-move,0xd4848b4510,0x3a3630867f0
sfi-move,0xd4848b4598,0x3a363086878
sfi-move,0xd4848b4628,0x3a363086908
sfi-move,0xd4848b46b0,0x3a363086990
sfi-move,0xd4848b4738,0x3a363086a00
sfi-move,0xd4848b47c0,0x3a363086a70
sfi-move,0xd4848b4848,0x3a363086af8
sfi-move,0xd4848b48d8,0x3a363086b88
sfi-move,0xd4848b4968,0x3a363086c18
sfi-move,0xd4848b49f0,0x3a363086ca0
sfi-move,0xd4848b4a80,0x3a363086d30
sfi-move,0xd4848b4b10,0x3a363086dc0
sfi-move,0xd4848b4ba0,0x3a363086e50
sfi-move,0xd4848b4c30,0x3a363086ee0
sfi-move,0xd4848b4cc0,0x3a363086f70
sfi-move,0xd4848b4d50,0x3a363087000
sfi-move,0xd4848b4de0,0x3a363087090
sfi-move,0xd4848b4e68,0x3a363087100
sfi-move,0xd4848b4ef0,0x3a363087170
sfi-move,0xd4848b4f80,0x3a363087200
sfi-move,0xd4848b5010,0x3a363087290
sfi-move,0xd4848b50a0,0x3a363087320
sfi-move,0xd4848b5130,0x3a3630873b0
sfi-move,0xd4848b5180,0x3a363087400
sfi-move,0xd4848b51d0,0x3a363087450
sfi-move,0xd4848b5220,0x3a3630874a0
sfi-move,0xd4848b5270,0x3a3630874f0
sfi-move,0xd4848b52c0,0x3a363087540
sfi-move,0xd4848b5310,0x3a363087590
sfi-move,0xd4848b5360,0x3a3630875e0
sfi-move,0xd4848b53b0,0x3a363087630
sfi-move,0xd4848b5400,0x3a363087680
sfi-move,0xd4848b5450,0x3a3630876d0
sfi-move,0xd4848b54a0,0x3a363087720
sfi-move,0xd4848b54f0,0x3a363087770
sfi-move,0xd4848b5540,0x3a3630877c0
sfi-move,0xd4848b9188,0x3a363087fd0
sfi-move,0xd4848b91d8,0x3a363088020
sfi-move,0xd4848b9228,0x3a363088070
sfi-move,0xd4848b9278,0x3a3630880c0
sfi-move,0xd4848ba890,0x3a3630890e8
sfi-move,0xd4848ba900,0x3a363089158
sfi-move,0xd4848ba970,0x3a3630891c8
sfi-move,0xd4848ba9e0,0x3a363089238
sfi-move,0xd4848baa50,0x3a3630892a8
sfi-move,0xd4848baac0,0x3a363089318
sfi-move,0xd4848bab30,0x3a363089388
sfi-move,0xd4848baba0,0x3a3630893f8
sfi-move,0xd4848bac10,0x3a363089468
sfi-move,0xd4848bac80,0x3a3630894d8
sfi-move,0xd4848bacf0,0x3a363089548
sfi-move,0xd4848bad60,0x3a3630895b8
sfi-move,0xd4848badd0,0x3a363089628
sfi-move,0xd4848bae40,0x3a363089698
sfi-move,0xd4848baeb0,0x3a363089708
sfi-move,0xd4848baf20,0x3a363089778
sfi-move,0xd4848baf90,0x3a3630897e8
sfi-move,0xd4848bb000,0x3a363089858
sfi-move,0xd4848bb070,0x3a3630898c8
sfi-move,0xd4848bb0e0,0x3a363089938
sfi-move,0xd4848bb150,0x3a3630899a8
sfi-move,0xd4848bb1c0,0x3a363089a18
sfi-move,0xd4848bb230,0x3a363089a88
sfi-move,0xd4848bb3d0,0x3a363089c28
code-move,0xd4848bbcfe,0x3a36308a416
sfi-move,0xd4848bd938,0x3a36308c030
sfi-move,0xd4848bd9a8,0x3a36308c0a0
sfi-move,0xd4848bda18,0x3a36308c110
sfi-move,0xd4848bde18,0x3a36308c4f8
sfi-move,0xd4848be130,0x3a36308c7b0
sfi-move,0xd4848be1a0,0x3a36308c820
sfi-move,0xd4848be210,0x3a36308c890
sfi-move,0xd4848be5b8,0x3a36308cac0
sfi-move,0xd4848be608,0x3a36308cb10
sfi-move,0xd4848be688,0x3a36308cb90
sfi-move,0xd4848be6d8,0x3a36308cbe0
sfi-move,0xd4848be728,0x3a36308cc30
sfi-move,0xd4848be7a0,0x3a36308cca8
sfi-move,0xd4848bf198,0x3a36308ce50
sfi-move,0xd4848bf698,0x3a36308d0b0
code-move,0xd4848bf7b6,0x3a36308d136
tick,0x7ff86ea7faf4,11159366,0,0x0,1
tick,0x7ff86e9f8025,11161207,0,0x0,1
delete,MemoryChunk,0x397aa9c0000
delete,MemoryChunk,0x28fbd600000
delete,MemoryChunk,0xd484880000
delete,MemoryChunk,0x302a8440000
markcompact,end,1,796875,1679951493777
delete,MemoryChunk,0x344d7900000
delete,MemoryChunk,0x1a92b040000
delete,MemoryChunk,0x2f77080000
delete,MemoryChunk,0x1e9c5cc0000
tick,0x7ff7c4f646a8,11163742,0,0x0,1
tick,0x7ff7c48a6a60,11164386,0,0x0,6
tick,0x7ff86ea82704,11166173,0,0x0,8
tick,0x7ff86ea82704,11168191,0,0x0,8
tick,0x7ff86ea82704,11170216,0,0x0,8
tick,0x7ff86ea82704,11174320,0,0x0,8
tick,0x7ff86ea82704,11175121,0,0x0,8
tick,0x7ff86ea82704,11176945,0,0x0,8
tick,0x7ff86ea82704,11179564,0,0x0,8
tick,0x7ff86ea82704,11180969,0,0x0,8
tick,0x7ff86ea82704,11183144,0,0x0,8
tick,0x7ff86ea82704,11184979,0,0x0,8
tick,0x7ff86ea82704,11187462,0,0x0,8
tick,0x7ff86ea82704,11189118,0,0x0,8
tick,0x7ff86ea82704,11191403,0,0x0,8
tick,0x7ff86ea82704,11193146,0,0x0,8
tick,0x7ff86ea82704,11196116,0,0x0,8
tick,0x7ff86ea82704,11197037,0,0x0,8
tick,0x7ff86ea82704,11198864,0,0x0,8
tick,0x7ff86ea82704,11201131,0,0x0,8
tick,0x7ff86ea82704,11203059,0,0x0,8
tick,0x7ff86ea82704,11205383,0,0x0,8
tick,0x7ff86ea82704,11206923,0,0x0,8
tick,0x7ff86ea82704,11208812,0,0x0,8
tick,0x7ff86ea82704,11211223,0,0x0,8
tick,0x7ff86ea82704,11212900,0,0x0,8
tick,0x7ff86ea82704,11214844,0,0x0,8
tick,0x7ff86ea82704,11216792,0,0x0,8
tick,0x7ff86ea82704,11219051,0,0x0,8
tick,0x7ff86ea82704,11220740,0,0x0,8
tick,0x7ff86ea82704,11222830,0,0x0,8
tick,0x7ff86ea82704,11224816,0,0x0,8
tick,0x7ff86ea82704,11227010,0,0x0,8
tick,0x7ff86ea82704,11228708,0,0x0,8
tick,0x7ff86ea82704,11230841,0,0x0,8
tick,0x7ff86ea82704,11232749,0,0x0,8
tick,0x7ff86ea82704,11235079,0,0x0,8
tick,0x7ff86ea82704,11236934,0,0x0,8
tick,0x7ff86ea82704,11238832,0,0x0,8
tick,0x7ff86ea82704,11241033,0,0x0,8
tick,0x7ff86ea82704,11242915,0,0x0,8
tick,0x7ff86ea82704,11244941,0,0x0,8
tick,0x7ff86ea82704,11246881,0,0x0,8
tick,0x7ff86ea82704,11248940,0,0x0,8
tick,0x7ff86ea82704,11250817,0,0x0,8
tick,0x7ff86ea82704,11252889,0,0x0,8
tick,0x7ff86ea82704,11255405,0,0x0,8
tick,0x7ff86ea82704,11257075,0,0x0,8
tick,0x7ff86ea82704,11259054,0,0x0,8
tick,0x7ff86ea82704,11260688,0,0x0,8
tick,0x7ff86ea82704,11263009,0,0x0,8
tick,0x7ff86ea82704,11264766,0,0x0,8
tick,0x7ff86ea82704,11267044,0,0x0,8
tick,0x7ff86ea82704,11268708,0,0x0,8
tick,0x7ff86ea82704,11271253,0,0x0,8
tick,0x7ff86ea82704,11272775,0,0x0,8
tick,0x7ff86ea82704,11275115,0,0x0,8
tick,0x7ff86ea82704,11276737,0,0x0,8
tick,0x7ff86ea82704,11278919,0,0x0,8
tick,0x7ff86ea82704,11280904,0,0x0,8
tick,0x7ff86ea82704,11283236,0,0x0,8
tick,0x7ff86ea82704,11284871,0,0x0,8
tick,0x7ff86ea82704,11287183,0,0x0,8
tick,0x7ff86ea82704,11289073,0,0x0,8
tick,0x7ff86ea82704,11290660,0,0x0,8
tick,0x7ff86ea82704,11292678,0,0x0,8
tick,0x7ff86ea82704,11294753,0,0x0,8
tick,0x7ff86ea82704,11296659,0,0x0,8
tick,0x7ff86ea82704,11298798,0,0x0,8
tick,0x7ff86ea82704,11300563,0,0x0,8
tick,0x7ff86ea82704,11302745,0,0x0,8
tick,0x7ff86ea82704,11305008,0,0x0,8
tick,0x7ff86ea82704,11306612,0,0x0,8
tick,0x7ff86ea82704,11308469,0,0x0,8
tick,0x7ff86ea82704,11310543,0,0x0,8
tick,0x7ff86ea82704,11312584,0,0x0,8
tick,0x7ff86ea82704,11314516,0,0x0,8
tick,0x7ff86ea82704,11316441,0,0x0,8
tick,0x7ff86ea82704,11318518,0,0x0,8
tick,0x7ff86ea82704,11320590,0,0x0,8
tick,0x7ff86ea82704,11322495,0,0x0,8
tick,0x7ff86ea82704,11324454,0,0x0,8
tick,0x7ff86ea82704,11326531,0,0x0,8
tick,0x7ff86ea82704,11328453,0,0x0,8
tick,0x7ff86ea82704,11330478,0,0x0,8
tick,0x7ff86ea82704,11332548,0,0x0,8
tick,0x7ff86ea82704,11334536,0,0x0,8
tick,0x7ff86ea82704,11336392,0,0x0,8
tick,0x7ff86ea82704,11338449,0,0x0,8
tick,0x7ff86ea82704,11340575,0,0x0,8
tick,0x7ff86ea82704,11342527,0,0x0,8
tick,0x7ff86ea82704,11344486,0,0x0,8
tick,0x7ff86ea82704,11346468,0,0x0,8
tick,0x7ff86ea82704,11348634,0,0x0,8
tick,0x7ff86ea82704,11350657,0,0x0,8
tick,0x7ff86ea82704,11352455,0,0x0,8
tick,0x7ff86ea82704,11354668,0,0x0,8
tick,0x7ff86ea82704,11356575,0,0x0,8
tick,0x7ff86ea82704,11358362,0,0x0,8
tick,0x7ff86ea82704,11360508,0,0x0,8
tick,0x7ff86ea82704,11362487,0,0x0,8
tick,0x7ff86ea82704,11364345,0,0x0,8
tick,0x7ff86ea82704,11366485,0,0x0,8
tick,0x7ff86ea82704,11368374,0,0x0,8
tick,0x7ff86ea82704,11370490,0,0x0,8
tick,0x7ff86ea82704,11372539,0,0x0,8
tick,0x7ff86ea82704,11374359,0,0x0,8
tick,0x7ff86ea82704,11376375,0,0x0,8
tick,0x7ff86ea82704,11378365,0,0x0,8
tick,0x7ff86ea82704,11380316,0,0x0,8
tick,0x7ff86ea82704,11382440,0,0x0,8
tick,0x7ff86ea82704,11384571,0,0x0,8
tick,0x7ff86ea82704,11386311,0,0x0,8
tick,0x7ff86ea82704,11388464,0,0x0,8
tick,0x7ff86ea82704,11390368,0,0x0,8
tick,0x7ff86ea82704,11392257,0,0x0,8
tick,0x7ff86ea82704,11394344,0,0x0,8
tick,0x7ff86ea82704,11396259,0,0x0,8
tick,0x7ff86ea82704,11398300,0,0x0,8
tick,0x7ff86ea82704,11400311,0,0x0,8
tick,0x7ff86ea82704,11402240,0,0x0,8
tick,0x7ff86ea82704,11404581,0,0x0,8
tick,0x7ff86ea82704,11406654,0,0x0,8
tick,0x7ff86ea82704,11408263,0,0x0,8
tick,0x7ff86ea82704,11410304,0,0x0,8
tick,0x7ff86ea82704,11412261,0,0x0,8
tick,0x7ff86ea82704,11414738,0,0x0,8
tick,0x7ff86ea82704,11416252,0,0x0,8
tick,0x7ff86ea82704,11418361,0,0x0,8
tick,0x7ff86ea82704,11420420,0,0x0,8
tick,0x7ff86ea82704,11422414,0,0x0,8
tick,0x7ff86ea82704,11424482,0,0x0,8
tick,0x7ff86ea82704,11426355,0,0x0,8
tick,0x7ff86ea82704,11431420,0,0x0,8
tick,0x7ff86ea82704,11432161,0,0x0,8
tick,0x7ff86ea82704,11434319,0,0x0,8
tick,0x7ff86ea82704,11436366,0,0x0,8
tick,0x7ff86ea82704,11438243,0,0x0,8
tick,0x7ff86ea82704,11440319,0,0x0,8
tick,0x7ff86ea82704,11442133,0,0x0,8
tick,0x7ff86ea82704,11444238,0,0x0,8
tick,0x7ff86ea82704,11446200,0,0x0,8
tick,0x7ff86ea82704,11448263,0,0x0,8
tick,0x7ff86ea82704,11450106,0,0x0,8
tick,0x7ff86ea82704,11452264,0,0x0,8
tick,0x7ff86ea82704,11454146,0,0x0,8
tick,0x7ff86ea82704,11456408,0,0x0,8
tick,0x7ff86ea82704,11458233,0,0x0,8
tick,0x7ff86ea82704,11460202,0,0x0,8
tick,0x7ff86ea82704,11462242,0,0x0,8
tick,0x7ff86ea82704,11464191,0,0x0,8
tick,0x7ff86ea82704,11466123,0,0x0,8
tick,0x7ff86ea82704,11468234,0,0x0,8
tick,0x7ff86ea82704,11470083,0,0x0,8
tick,0x7ff86ea82704,11472281,0,0x0,8
tick,0x7ff86ea82704,11474459,0,0x0,8
tick,0x7ff86ea82704,11476195,0,0x0,8
tick,0x7ff86ea82704,11478176,0,0x0,8
tick,0x7ff86ea82704,11480144,0,0x0,8
tick,0x7ff86ea82704,11482474,0,0x0,8
tick,0x7ff86ea82704,11484210,0,0x0,8
tick,0x7ff86ea82704,11486210,0,0x0,8
tick,0x7ff86ea82704,11488232,0,0x0,8
tick,0x7ff86ea82704,11490269,0,0x0,8
tick,0x7ff86ea82704,11492161,0,0x0,8
tick,0x7ff86ea82704,11494083,0,0x0,8
tick,0x7ff86ea82704,11496215,0,0x0,8
tick,0x7ff86ea82704,11498408,0,0x0,8
tick,0x7ff86ea82704,11500366,0,0x0,8
tick,0x7ff86ea82704,11502195,0,0x0,8
tick,0x7ff86ea82704,11504114,0,0x0,8
tick,0x7ff86ea82704,11506361,0,0x0,8
tick,0x7ff86ea82704,11508112,0,0x0,8
tick,0x7ff86ea82704,11511698,0,0x0,8
tick,0x7ff86ea82704,11513220,0,0x0,8
tick,0x7ff86ea82704,11515529,0,0x0,8
tick,0x7ff86ea82704,11517183,0,0x0,8
tick,0x7ff86ea82704,11519284,0,0x0,8
tick,0x7ff86ea82704,11522126,0,0x0,8
tick,0x7ff86ea82704,11523085,0,0x0,8
tick,0x7ff86ea82704,11524903,0,0x0,8
tick,0x7ff86ea82704,11527066,0,0x0,8
tick,0x7ff86ea82704,11528887,0,0x0,8
tick,0x7ff86ea82704,11530895,0,0x0,8
tick,0x7ff86ea82704,11532914,0,0x0,8
tick,0x7ff86ea82704,11534947,0,0x0,8
tick,0x7ff86ea82704,11536999,0,0x0,8
tick,0x7ff86ea82704,11539299,0,0x0,8
tick,0x7ff86ea82704,11541000,0,0x0,8
tick,0x7ff86ea82704,11542968,0,0x0,8
tick,0x7ff86ea82704,11544925,0,0x0,8
tick,0x7ff86ea82704,11546992,0,0x0,8
tick,0x7ff86ea82704,11548902,0,0x0,8
tick,0x7ff86ea82704,11551037,0,0x0,8
tick,0x7ff86ea82704,11553199,0,0x0,8
tick,0x7ff86ea82704,11554975,0,0x0,8
tick,0x7ff86ea82704,11557146,0,0x0,8
tick,0x7ff86ea82704,11558943,0,0x0,8
tick,0x7ff86ea82704,11560868,0,0x0,8
tick,0x7ff86ea82704,11562868,0,0x0,8
tick,0x7ff86ea82704,11564922,0,0x0,8
tick,0x7ff86ea82704,11566941,0,0x0,8
tick,0x7ff86ea82704,11568895,0,0x0,8
tick,0x7ff86ea82704,11570810,0,0x0,8
tick,0x7ff86ea82704,11573301,0,0x0,8
tick,0x7ff86ea82704,11574835,0,0x0,8
tick,0x7ff86ea82704,11576832,0,0x0,8
tick,0x7ff86ea82704,11578910,0,0x0,8
tick,0x7ff86ea82704,11580769,0,0x0,8
tick,0x7ff86ea82704,11582784,0,0x0,8
tick,0x7ff86ea82704,11584948,0,0x0,8
tick,0x7ff86ea82704,11586797,0,0x0,8
tick,0x7ff86ea82704,11588881,0,0x0,8
tick,0x7ff86ea82704,11590803,0,0x0,8
tick,0x7ff86ea82704,11592821,0,0x0,8
tick,0x7ff86ea82704,11594762,0,0x0,8
tick,0x7ff86ea82704,11596928,0,0x0,8
tick,0x7ff86ea82704,11598814,0,0x0,8
tick,0x7ff86ea82704,11600835,0,0x0,8
tick,0x7ff86ea82704,11603094,0,0x0,8
tick,0x7ff86ea82704,11605200,0,0x0,8
tick,0x7ff86ea82704,11606874,0,0x0,8
tick,0x7ff86ea82704,11608784,0,0x0,8
tick,0x7ff86ea82704,11610984,0,0x0,8
tick,0x7ff86ea82704,11612891,0,0x0,8
tick,0x7ff86ea82704,11614924,0,0x0,8
tick,0x7ff86ea82704,11616727,0,0x0,8
tick,0x7ff86ea82704,11619035,0,0x0,8
tick,0x7ff86ea82704,11620746,0,0x0,8
tick,0x7ff86ea82704,11623005,0,0x0,8
tick,0x7ff86ea82704,11624770,0,0x0,8
tick,0x7ff86ea82704,11626895,0,0x0,8
tick,0x7ff86ea82704,11628897,0,0x0,8
tick,0x7ff86ea82704,11630664,0,0x0,8
tick,0x7ff86ea82704,11632909,0,0x0,8
tick,0x7ff86ea82704,11634719,0,0x0,8
tick,0x7ff86ea82704,11636813,0,0x0,8
tick,0x7ff86ea82704,11638643,0,0x0,8
tick,0x7ff86ea82704,11640680,0,0x0,8
tick,0x7ff86ea82704,11643040,0,0x0,8
tick,0x7ff86ea82704,11644883,0,0x0,8
tick,0x7ff86ea82704,11646797,0,0x0,8
tick,0x7ff86ea82704,11648721,0,0x0,8
tick,0x7ff86ea82704,11650689,0,0x0,8
tick,0x7ff86ea82704,11652634,0,0x0,8
tick,0x7ff86ea82704,11654687,0,0x0,8
tick,0x7ff86ea82704,11656619,0,0x0,8
tick,0x7ff86ea82704,11658738,0,0x0,8
tick,0x7ff86ea82704,11660639,0,0x0,8
tick,0x7ff86ea82704,11662800,0,0x0,8
tick,0x7ff86ea82704,11664684,0,0x0,8
tick,0x7ff86ea82704,11666555,0,0x0,8
tick,0x7ff86ea82704,11668553,0,0x0,8
tick,0x7ff86ea82704,11670561,0,0x0,8
tick,0x7ff86ea82704,11672578,0,0x0,8
tick,0x7ff86ea82704,11674744,0,0x0,8
tick,0x7ff86ea82704,11676675,0,0x0,8
tick,0x7ff86ea82704,11678564,0,0x0,8
tick,0x7ff86ea82704,11680624,0,0x0,8
tick,0x7ff86ea82704,11682523,0,0x0,8
tick,0x7ff86ea82704,11684723,0,0x0,8
tick,0x7ff86ea82704,11686542,0,0x0,8
tick,0x7ff86ea82704,11688907,0,0x0,8
tick,0x7ff86ea82704,11690620,0,0x0,8
tick,0x7ff86ea82704,11692595,0,0x0,8
tick,0x7ff86ea82704,11694507,0,0x0,8
tick,0x7ff86ea82704,11696568,0,0x0,8
tick,0x7ff86ea82704,11698562,0,0x0,8
tick,0x7ff86ea82704,11700493,0,0x0,8
tick,0x7ff86ea82704,11702526,0,0x0,8
tick,0x7ff86ea82704,11704563,0,0x0,8
tick,0x7ff86ea82704,11706461,0,0x0,8
tick,0x7ff86ea82704,11708445,0,0x0,8
tick,0x7ff86ea82704,11710482,0,0x0,8
tick,0x7ff86ea82704,11712470,0,0x0,8
tick,0x7ff86ea82704,11714490,0,0x0,8
tick,0x7ff86ea82704,11716431,0,0x0,8
tick,0x7ff86ea82704,11718483,0,0x0,8
tick,0x7ff86ea82704,11720478,0,0x0,8
tick,0x7ff86ea82704,11722571,0,0x0,8
tick,0x7ff86ea82704,11724459,0,0x0,8
tick,0x7ff86ea82704,11726394,0,0x0,8
tick,0x7ff86ea82704,11728462,0,0x0,8
tick,0x7ff86ea82704,11730375,0,0x0,8
tick,0x7ff86ea82704,11732571,0,0x0,8
tick,0x7ff86ea82704,11734387,0,0x0,8
tick,0x7ff86ea82704,11736479,0,0x0,8
tick,0x7ff86ea82704,11738428,0,0x0,8
tick,0x7ff86ea82704,11740481,0,0x0,8
tick,0x7ff86ea82704,11742391,0,0x0,8
tick,0x7ff86ea82704,11744448,0,0x0,8
tick,0x7ff86ea82704,11746463,0,0x0,8
tick,0x7ff86ea82704,11748366,0,0x0,8
tick,0x7ff86ea82704,11750439,0,0x0,8
tick,0x7ff86ea82704,11752313,0,0x0,8
tick,0x7ff86ea82704,11754490,0,0x0,8
tick,0x7ff86ea82704,11756404,0,0x0,8
tick,0x7ff86ea82704,11758350,0,0x0,8
tick,0x7ff86ea82704,11760386,0,0x0,8
tick,0x7ff86ea82704,11762798,0,0x0,8
tick,0x7ff86ea82704,11764352,0,0x0,8
tick,0x7ff86ea82704,11766296,0,0x0,8
tick,0x7ff86ea82704,11768420,0,0x0,8
tick,0x7ff86ea82704,11770340,0,0x0,8
tick,0x7ff86ea82704,11772286,0,0x0,8
tick,0x7ff86ea82704,11774445,0,0x0,8
tick,0x7ff86ea82704,11776450,0,0x0,8
tick,0x7ff86ea82704,11778261,0,0x0,8
tick,0x7ff86ea82704,11780390,0,0x0,8
tick,0x7ff86ea82704,11782295,0,0x0,8
tick,0x7ff86ea82704,11784373,0,0x0,8
tick,0x7ff86ea82704,11786234,0,0x0,8
tick,0x7ff86ea82704,11788216,0,0x0,8
tick,0x7ff86ea82704,11790214,0,0x0,8
tick,0x7ff86ea82704,11792259,0,0x0,8
tick,0x7ff86ea82704,11794256,0,0x0,8
tick,0x7ff86ea82704,11796283,0,0x0,8
tick,0x7ff86ea82704,11798195,0,0x0,8
tick,0x7ff86ea82704,11800220,0,0x0,8
tick,0x7ff86ea82704,11802270,0,0x0,8
tick,0x7ff86ea82704,11804250,0,0x0,8
tick,0x7ff86ea82704,11806256,0,0x0,8
tick,0x7ff86ea82704,11808162,0,0x0,8
tick,0x7ff86ea82704,11810233,0,0x0,8
tick,0x7ff86ea82704,11812166,0,0x0,8
tick,0x7ff86ea82704,11814243,0,0x0,8
tick,0x7ff86ea82704,11816238,0,0x0,8
tick,0x7ff86ea82704,11818246,0,0x0,8
tick,0x7ff86ea82704,11820173,0,0x0,8
tick,0x7ff86ea82704,11822207,0,0x0,8
tick,0x7ff86ea82704,11824232,0,0x0,8
tick,0x7ff86ea82704,11826247,0,0x0,8
tick,0x7ff86ea82704,11828167,0,0x0,8
tick,0x7ff86ea82704,11830212,0,0x0,8
tick,0x7ff86ea82704,11832150,0,0x0,8
tick,0x7ff86ea82704,11834116,0,0x0,8
tick,0x7ff86ea82704,11836179,0,0x0,8
tick,0x7ff86ea82704,11838179,0,0x0,8
tick,0x7ff86ea82704,11840412,0,0x0,8
tick,0x7ff86ea82704,11842145,0,0x0,8
tick,0x7ff86ea82704,11844056,0,0x0,8
tick,0x7ff86ea82704,11846125,0,0x0,8
tick,0x7ff86ea82704,11848133,0,0x0,8
tick,0x7ff86ea82704,11850141,0,0x0,8
tick,0x7ff86ea82704,11852198,0,0x0,8
tick,0x7ff86ea82704,11854142,0,0x0,8
tick,0x7ff86ea82704,11856225,0,0x0,8
tick,0x7ff86ea82704,11858073,0,0x0,8
tick,0x7ff86ea82704,11860202,0,0x0,8
tick,0x7ff86ea82704,11862043,0,0x0,8
tick,0x7ff86ea82704,11864086,0,0x0,8
tick,0x7ff86ea82704,11866079,0,0x0,8
tick,0x7ff86ea82704,11868081,0,0x0,8
tick,0x7ff86ea82704,11870045,0,0x0,8
tick,0x7ff86ea82704,11872054,0,0x0,8
tick,0x7ff86ea82704,11873987,0,0x0,8
tick,0x7ff86ea82704,11876066,0,0x0,8
tick,0x7ff86ea82704,11878051,0,0x0,8
tick,0x7ff86ea82704,11880071,0,0x0,8
tick,0x7ff86ea82704,11881952,0,0x0,8
tick,0x7ff86ea82704,11884063,0,0x0,8
tick,0x7ff86ea82704,11885982,0,0x0,8
tick,0x7ff86ea82704,11888015,0,0x0,8
tick,0x7ff86ea82704,11890082,0,0x0,8
tick,0x7ff86ea82704,11892033,0,0x0,8
tick,0x7ff86ea82704,11894114,0,0x0,8
tick,0x7ff86ea82704,11896037,0,0x0,8
tick,0x7ff86ea82704,11898014,0,0x0,8
tick,0x7ff86ea82704,11899951,0,0x0,8
tick,0x7ff86ea82704,11902036,0,0x0,8
tick,0x7ff86ea82704,11904015,0,0x0,8
tick,0x7ff86ea82704,11906013,0,0x0,8
tick,0x7ff86ea82704,11908060,0,0x0,8
tick,0x7ff86ea82704,11909930,0,0x0,8
tick,0x7ff86ea82704,11912140,0,0x0,8
tick,0x7ff86ea82704,11913907,0,0x0,8
tick,0x7ff86ea82704,11916012,0,0x0,8
tick,0x7ff86ea82704,11917888,0,0x0,8
tick,0x7ff86ea82704,11919877,0,0x0,8
tick,0x7ff86ea82704,11921852,0,0x0,8
tick,0x7ff86ea82704,11923888,0,0x0,8
tick,0x7ff86ea82704,11925937,0,0x0,8
tick,0x7ff86ea82704,11927922,0,0x0,8
tick,0x7ff86ea82704,11929933,0,0x0,8
tick,0x7ff86ea82704,11931818,0,0x0,8
tick,0x7ff86ea82704,11933853,0,0x0,8
tick,0x7ff86ea82704,11935854,0,0x0,8
tick,0x7ff86ea82704,11937936,0,0x0,8
tick,0x7ff86ea82704,11939879,0,0x0,8
tick,0x7ff86ea82704,11941903,0,0x0,8
tick,0x7ff86ea82704,11943865,0,0x0,8
tick,0x7ff86ea82704,11945849,0,0x0,8
tick,0x7ff86ea82704,11947861,0,0x0,8
tick,0x7ff86ea82704,11949859,0,0x0,8
tick,0x7ff86ea82704,11951923,0,0x0,8
tick,0x7ff86ea82704,11953916,0,0x0,8
tick,0x7ff86ea82704,11955760,0,0x0,8
tick,0x7ff86ea82704,11957744,0,0x0,8
tick,0x7ff86ea82704,11959830,0,0x0,8
tick,0x7ff86ea82704,11961874,0,0x0,8
tick,0x7ff86ea82704,11963763,0,0x0,8
tick,0x7ff86ea82704,11965856,0,0x0,8
tick,0x7ff86ea82704,11967717,0,0x0,8
tick,0x7ff86ea82704,11969889,0,0x0,8
tick,0x7ff86ea82704,11971763,0,0x0,8
tick,0x7ff86ea82704,11973706,0,0x0,8
tick,0x7ff86ea82704,11975934,0,0x0,8
tick,0x7ff86ea82704,11977748,0,0x0,8
tick,0x7ff86ea82704,11979825,0,0x0,8
tick,0x7ff86ea82704,11981737,0,0x0,8
tick,0x7ff86ea82704,11983818,0,0x0,8
tick,0x7ff86ea82704,11985694,0,0x0,8
tick,0x7ff86ea82704,11987786,0,0x0,8
tick,0x7ff86ea82704,11989691,0,0x0,8
tick,0x7ff86ea82704,11991798,0,0x0,8
tick,0x7ff86ea82704,11993760,0,0x0,8
tick,0x7ff86ea82704,11995718,0,0x0,8
tick,0x7ff86ea82704,11997715,0,0x0,8
tick,0x7ff86ea82704,11999761,0,0x0,8
tick,0x7ff86ea82704,12001783,0,0x0,8
tick,0x7ff86ea82704,12003656,0,0x0,8
tick,0x7ff86ea82704,12005687,0,0x0,8
tick,0x7ff86ea82704,12007750,0,0x0,8
tick,0x7ff86ea82704,12009640,0,0x0,8
tick,0x7ff86ea82704,12011723,0,0x0,8
tick,0x7ff86ea82704,12013706,0,0x0,8
tick,0x7ff86ea82704,12015805,0,0x0,8
tick,0x7ff86ea82704,12017590,0,0x0,8
tick,0x7ff86ea82704,12019693,0,0x0,8
tick,0x7ff86ea82704,12021784,0,0x0,8
tick,0x7ff86ea82704,12023781,0,0x0,8
tick,0x7ff86ea82704,12025642,0,0x0,8
tick,0x7ff86ea82704,12027683,0,0x0,8
tick,0x7ff86ea82704,12029639,0,0x0,8
tick,0x7ff86ea82704,12031632,0,0x0,8
tick,0x7ff86ea82704,12033595,0,0x0,8
tick,0x7ff86ea82704,12035798,0,0x0,8
tick,0x7ff86ea82704,12037655,0,0x0,8
tick,0x7ff86ea82704,12039717,0,0x0,8
tick,0x7ff86ea82704,12041582,0,0x0,8
tick,0x7ff86ea82704,12043658,0,0x0,8
tick,0x7ff86ea82704,12045567,0,0x0,8
tick,0x7ff86ea82704,12047663,0,0x0,8
tick,0x7ff86ea82704,12049632,0,0x0,8
tick,0x7ff86ea82704,12051644,0,0x0,8
tick,0x7ff86ea82704,12053555,0,0x0,8
tick,0x7ff86ea82704,12055620,0,0x0,8
tick,0x7ff86ea82704,12057850,0,0x0,8
tick,0x7ff86ea82704,12059520,0,0x0,8
tick,0x7ff86ea82704,12061569,0,0x0,8
tick,0x7ff86ea82704,12063823,0,0x0,8
tick,0x7ff86ea82704,12065639,0,0x0,8
tick,0x7ff86ea82704,12067582,0,0x0,8
tick,0x7ff86ea82704,12069575,0,0x0,8
tick,0x7ff86ea82704,12071576,0,0x0,8
tick,0x7ff86ea82704,12073556,0,0x0,8
tick,0x7ff86ea82704,12075667,0,0x0,8
tick,0x7ff86ea82704,12077514,0,0x0,8
tick,0x7ff86ea82704,12079497,0,0x0,8
tick,0x7ff86ea82704,12081556,0,0x0,8
tick,0x7ff86ea82704,12083481,0,0x0,8
tick,0x7ff86ea82704,12085506,0,0x0,8
tick,0x7ff86ea82704,12087446,0,0x0,8
tick,0x7ff86ea82704,12089524,0,0x0,8
tick,0x7ff86ea82704,12091509,0,0x0,8
tick,0x7ff86ea82704,12093614,0,0x0,8
tick,0x7ff86ea82704,12095419,0,0x0,8
tick,0x7ff86ea82704,12097394,0,0x0,8
tick,0x7ff86ea82704,12099430,0,0x0,8
tick,0x7ff86ea82704,12101388,0,0x0,8
tick,0x7ff86ea82704,12103523,0,0x0,8
tick,0x7ff86ea82704,12105419,0,0x0,8
tick,0x7ff86ea82704,12107412,0,0x0,8
tick,0x7ff86ea82704,12109491,0,0x0,8
tick,0x7ff86ea82704,12111527,0,0x0,8
tick,0x7ff86ea82704,12113481,0,0x0,8
tick,0x7ff86ea82704,12115562,0,0x0,8
tick,0x7ff86ea82704,12117803,0,0x0,8
tick,0x7ff86ea82704,12119631,0,0x0,8
tick,0x7ff86ea82704,12121459,0,0x0,8
tick,0x7ff86ea82704,12123664,0,0x0,8
tick,0x7ff86ea82704,12125370,0,0x0,8
tick,0x7ff86ea82704,12127446,0,0x0,8
tick,0x7ff86ea82704,12129352,0,0x0,8
tick,0x7ff86ea82704,12131770,0,0x0,8
tick,0x7ff86ea82704,12133634,0,0x0,8
tick,0x7ff86ea82704,12135398,0,0x0,8
tick,0x7ff86ea82704,12137407,0,0x0,8
tick,0x7ff86ea82704,12139334,0,0x0,8
tick,0x7ff86ea82704,12141389,0,0x0,8
tick,0x7ff86ea82704,12143364,0,0x0,8
tick,0x7ff86ea82704,12145392,0,0x0,8
tick,0x7ff86ea82704,12147339,0,0x0,8
tick,0x7ff86ea82704,12149272,0,0x0,8
tick,0x7ff86ea82704,12151351,0,0x0,8
tick,0x7ff86ea82704,12153312,0,0x0,8
tick,0x7ff86ea82704,12155364,0,0x0,8
tick,0x7ff86ea82704,12157218,0,0x0,8
tick,0x7ff86ea82704,12159256,0,0x0,8
tick,0x7ff86ea82704,12161269,0,0x0,8
tick,0x7ff86ea82704,12163285,0,0x0,8
tick,0x7ff86ea82704,12165285,0,0x0,8
tick,0x7ff86ea82704,12167518,0,0x0,8
tick,0x7ff86ea82704,12169420,0,0x0,8
tick,0x7ff86ea82704,12171392,0,0x0,8
tick,0x7ff86ea82704,12173353,0,0x0,8
tick,0x7ff86ea82704,12175281,0,0x0,8
tick,0x7ff86ea82704,12177373,0,0x0,8
tick,0x7ff86ea82704,12179361,0,0x0,8
tick,0x7ff86ea82704,12181592,0,0x0,8
tick,0x7ff86ea82704,12183481,0,0x0,8
tick,0x7ff86ea82704,12185477,0,0x0,8
tick,0x7ff86ea82704,12187586,0,0x0,8
tick,0x7ff86ea82704,12189688,0,0x0,8
tick,0x7ff86ea82704,12191223,0,0x0,8
tick,0x7ff86ea82704,12193290,0,0x0,8
tick,0x7ff86ea82704,12195181,0,0x0,8
tick,0x7ff86ea82704,12197421,0,0x0,8
tick,0x7ff86ea82704,12199225,0,0x0,8
tick,0x7ff86ea82704,12201317,0,0x0,8
tick,0x7ff86ea82704,12203163,0,0x0,8
tick,0x7ff86ea82704,12205414,0,0x0,8
tick,0x7ff86ea82704,12207175,0,0x0,8
tick,0x7ff86ea82704,12209199,0,0x0,8
tick,0x7ff86ea82704,12211120,0,0x0,8
tick,0x7ff86ea82704,12213192,0,0x0,8
tick,0x7ff86ea82704,12215139,0,0x0,8
tick,0x7ff86ea82704,12217311,0,0x0,8
tick,0x7ff86ea82704,12219098,0,0x0,8
tick,0x7ff86ea82704,12221200,0,0x0,8
tick,0x7ff86ea82704,12223154,0,0x0,8
tick,0x7ff86ea82704,12225201,0,0x0,8
tick,0x7ff86ea82704,12227255,0,0x0,8
tick,0x7ff86ea82704,12229193,0,0x0,8
tick,0x7ff86ea82704,12231070,0,0x0,8
tick,0x7ff86ea82704,12233349,0,0x0,8
tick,0x7ff86ea82704,12235072,0,0x0,8
tick,0x7ff86ea82704,12237278,0,0x0,8
tick,0x7ff86ea82704,12239303,0,0x0,8
tick,0x7ff86ea82704,12241325,0,0x0,8
tick,0x7ff86ea82704,12243211,0,0x0,8
tick,0x7ff86ea82704,12245134,0,0x0,8
tick,0x7ff86ea82704,12247372,0,0x0,8
tick,0x7ff86ea82704,12249191,0,0x0,8
tick,0x7ff86ea82704,12251095,0,0x0,8
tick,0x7ff86ea82704,12253046,0,0x0,8
tick,0x7ff86ea82704,12255223,0,0x0,8
tick,0x7ff86ea82704,12257112,0,0x0,8
tick,0x7ff86ea82704,12259136,0,0x0,8
tick,0x7ff86ea82704,12261068,0,0x0,8
tick,0x7ff86ea82704,12263030,0,0x0,8
tick,0x7ff86ea82704,12264999,0,0x0,8
tick,0x7ff86ea82704,12266935,0,0x0,8
tick,0x7ff86ea82704,12268997,0,0x0,8
tick,0x7ff86ea82704,12270978,0,0x0,8
tick,0x7ff86ea82704,12272956,0,0x0,8
tick,0x7ff86ea82704,12275066,0,0x0,8
tick,0x7ff86ea82704,12277036,0,0x0,8
tick,0x7ff86ea82704,12279067,0,0x0,8
tick,0x7ff86ea82704,12280985,0,0x0,8
tick,0x7ff86ea82704,12283006,0,0x0,8
tick,0x7ff86ea82704,12284959,0,0x0,8
tick,0x7ff86ea82704,12287011,0,0x0,8
tick,0x7ff86ea82704,12288993,0,0x0,8
tick,0x7ff86ea82704,12291080,0,0x0,8
tick,0x7ff86ea82704,12292913,0,0x0,8
tick,0x7ff86ea82704,12294974,0,0x0,8
tick,0x7ff86ea82704,12296852,0,0x0,8
tick,0x7ff86ea82704,12298937,0,0x0,8
tick,0x7ff86ea82704,12300931,0,0x0,8
tick,0x7ff86ea82704,12303008,0,0x0,8
tick,0x7ff86ea82704,12304930,0,0x0,8
tick,0x7ff86ea82704,12306893,0,0x0,8
tick,0x7ff86ea82704,12309078,0,0x0,8
tick,0x7ff86ea82704,12310890,0,0x0,8
tick,0x7ff86ea82704,12312980,0,0x0,8
tick,0x7ff86ea82704,12315156,0,0x0,8
tick,0x7ff86ea82704,12316908,0,0x0,8
tick,0x7ff86ea82704,12318888,0,0x0,8
tick,0x7ff86ea82704,12320806,0,0x0,8
tick,0x7ff86ea82704,12322974,0,0x0,8
tick,0x7ff86ea82704,12325179,0,0x0,8
tick,0x7ff86ea82704,12326843,0,0x0,8
tick,0x7ff86ea82704,12328920,0,0x0,8
tick,0x7ff86ea82704,12330813,0,0x0,8
tick,0x7ff86ea82704,12332890,0,0x0,8
tick,0x7ff86ea82704,12334822,0,0x0,8
tick,0x7ff86ea82704,12336826,0,0x0,8
tick,0x7ff86ea82704,12338751,0,0x0,8
tick,0x7ff86ea82704,12340887,0,0x0,8
tick,0x7ff86ea82704,12342948,0,0x0,8
tick,0x7ff86ea82704,12344921,0,0x0,8
tick,0x7ff86ea82704,12346815,0,0x0,8
tick,0x7ff86ea82704,12348821,0,0x0,8
tick,0x7ff86ea82704,12350709,0,0x0,8
tick,0x7ff86ea82704,12352843,0,0x0,8
tick,0x7ff86ea82704,12354743,0,0x0,8
tick,0x7ff86ea82704,12356784,0,0x0,8
tick,0x7ff86ea82704,12358845,0,0x0,8
tick,0x7ff86ea82704,12360761,0,0x0,8
tick,0x7ff86ea82704,12363077,0,0x0,8
tick,0x7ff86ea82704,12364699,0,0x0,8
tick,0x7ff86ea82704,12366792,0,0x0,8
tick,0x7ff86ea82704,12368883,0,0x0,8
tick,0x7ff86ea82704,12370674,0,0x0,8
tick,0x7ff86ea82704,12372833,0,0x0,8
tick,0x7ff86ea82704,12374616,0,0x0,8
tick,0x7ff86ea82704,12376762,0,0x0,8
tick,0x7ff86ea82704,12378713,0,0x0,8
tick,0x7ff86ea82704,12380777,0,0x0,8
tick,0x7ff86ea82704,12382761,0,0x0,8
tick,0x7ff86ea82704,12384700,0,0x0,8
tick,0x7ff86ea82704,12386727,0,0x0,8
tick,0x7ff86ea82704,12388667,0,0x0,8
tick,0x7ff86ea82704,12390765,0,0x0,8
tick,0x7ff86ea82704,12392699,0,0x0,8
tick,0x7ff86ea82704,12394823,0,0x0,8
tick,0x7ff86ea82704,12396664,0,0x0,8
tick,0x7ff86ea82704,12398654,0,0x0,8
tick,0x7ff86ea82704,12400658,0,0x0,8
tick,0x7ff86ea82704,12402730,0,0x0,8
tick,0x7ff86ea82704,12404690,0,0x0,8
tick,0x7ff86ea82704,12406661,0,0x0,8
tick,0x7ff86ea82704,12408664,0,0x0,8
tick,0x7ff86ea82704,12410626,0,0x0,8
tick,0x7ff86ea82704,12412754,0,0x0,8
tick,0x7ff86ea82704,12414551,0,0x0,8
tick,0x7ff86ea82704,12416582,0,0x0,8
tick,0x7ff86ea82704,12418530,0,0x0,8
tick,0x7ff86ea82704,12420630,0,0x0,8
tick,0x7ff86ea82704,12422608,0,0x0,8
tick,0x7ff86ea82704,12424673,0,0x0,8
tick,0x7ff86ea82704,12426680,0,0x0,8
tick,0x7ff86ea82704,12428664,0,0x0,8
tick,0x7ff86ea82704,12430532,0,0x0,8
tick,0x7ff86ea82704,12432558,0,0x0,8
tick,0x7ff86ea82704,12434487,0,0x0,8
tick,0x7ff86ea82704,12436589,0,0x0,8
tick,0x7ff86ea82704,12438598,0,0x0,8
tick,0x7ff86ea82704,12440686,0,0x0,8
tick,0x7ff86ea82704,12442569,0,0x0,8
tick,0x7ff86ea82704,12444518,0,0x0,8
tick,0x7ff86ea82704,12446553,0,0x0,8
tick,0x7ff86ea82704,12448598,0,0x0,8
tick,0x7ff86ea82704,12450477,0,0x0,8
tick,0x7ff86ea82704,12452601,0,0x0,8
tick,0x7ff86ea82704,12454581,0,0x0,8
tick,0x7ff86ea82704,12456561,0,0x0,8
tick,0x7ff86ea82704,12458424,0,0x0,8
tick,0x7ff86ea82704,12460551,0,0x0,8
tick,0x7ff86ea82704,12462476,0,0x0,8
tick,0x7ff86ea82704,12464532,0,0x0,8
tick,0x7ff86ea82704,12466451,0,0x0,8
tick,0x7ff86ea82704,12468488,0,0x0,8
tick,0x7ff86ea82704,12470506,0,0x0,8
tick,0x7ff86ea82704,12472411,0,0x0,8
tick,0x7ff86ea82704,12474494,0,0x0,8
tick,0x7ff86ea82704,12476474,0,0x0,8
tick,0x7ff86ea82704,12478459,0,0x0,8
tick,0x7ff86ea82704,12480411,0,0x0,8
tick,0x7ff86ea82704,12482462,0,0x0,8
tick,0x7ff86ea82704,12484494,0,0x0,8
tick,0x7ff86ea82704,12486433,0,0x0,8
tick,0x7ff86ea82704,12488474,0,0x0,8
tick,0x7ff86ea82704,12490400,0,0x0,8
tick,0x7ff86ea82704,12492355,0,0x0,8
tick,0x7ff86ea82704,12494401,0,0x0,8
tick,0x7ff86ea82704,12496363,0,0x0,8
tick,0x7ff86ea82704,12498476,0,0x0,8
tick,0x7ff86ea82704,12500352,0,0x0,8
tick,0x7ff86ea82704,12502398,0,0x0,8
tick,0x7ff86ea82704,12504334,0,0x0,8
tick,0x7ff86ea82704,12506396,0,0x0,8
tick,0x7ff86ea82704,12508331,0,0x0,8
tick,0x7ff86ea82704,12510414,0,0x0,8
tick,0x7ff86ea82704,12512324,0,0x0,8
tick,0x7ff86ea82704,12514403,0,0x0,8
tick,0x7ff86ea82704,12516478,0,0x0,8
tick,0x7ff86ea82704,12518456,0,0x0,8
tick,0x7ff86ea82704,12520347,0,0x0,8
tick,0x7ff86ea82704,12522301,0,0x0,8
tick,0x7ff86ea82704,12524362,0,0x0,8
tick,0x7ff86ea82704,12526272,0,0x0,8
tick,0x7ff86ea82704,12528318,0,0x0,8
tick,0x7ff86ea82704,12530338,0,0x0,8
tick,0x7ff86ea82704,12532288,0,0x0,8
tick,0x7ff86ea82704,12534297,0,0x0,8
tick,0x7ff86ea82704,12536241,0,0x0,8
tick,0x7ff86ea82704,12538255,0,0x0,8
tick,0x7ff86ea82704,12540277,0,0x0,8
tick,0x7ff86ea82704,12542266,0,0x0,8
tick,0x7ff86ea82704,12544226,0,0x0,8
tick,0x7ff86ea82704,12546236,0,0x0,8
tick,0x7ff86ea82704,12548289,0,0x0,8
tick,0x7ff86ea82704,12550176,0,0x0,8
tick,0x7ff86ea82704,12552246,0,0x0,8
tick,0x7ff86ea82704,12554225,0,0x0,8
tick,0x7ff86ea82704,12556213,0,0x0,8
tick,0x7ff86ea82704,12558187,0,0x0,8
tick,0x7ff86ea82704,12560204,0,0x0,8
tick,0x7ff86ea82704,12562353,0,0x0,8
tick,0x7ff86ea82704,12564235,0,0x0,8
tick,0x7ff86ea82704,12566140,0,0x0,8
tick,0x7ff86ea82704,12568140,0,0x0,8
tick,0x7ff86ea82704,12570185,0,0x0,8
tick,0x7ff86ea82704,12572181,0,0x0,8
tick,0x7ff86ea82704,12574243,0,0x0,8
tick,0x7ff86ea82704,12576133,0,0x0,8
tick,0x7ff86ea82704,12578243,0,0x0,8
tick,0x7ff86ea82704,12580092,0,0x0,8
tick,0x7ff86ea82704,12582111,0,0x0,8
tick,0x7ff86ea82704,12584162,0,0x0,8
tick,0x7ff86ea82704,12586162,0,0x0,8
tick,0x7ff86ea82704,12588159,0,0x0,8
tick,0x7ff86ea82704,12590210,0,0x0,8
tick,0x7ff86ea82704,12592141,0,0x0,8
tick,0x7ff86ea82704,12594149,0,0x0,8
tick,0x7ff86ea82704,12596161,0,0x0,8
tick,0x7ff86ea82704,12598122,0,0x0,8
tick,0x7ff86ea82704,12600138,0,0x0,8
tick,0x7ff86ea82704,12602110,0,0x0,8
tick,0x7ff86ea82704,12604254,0,0x0,8
tick,0x7ff86ea82704,12606093,0,0x0,8
tick,0x7ff86ea82704,12608118,0,0x0,8
tick,0x7ff86ea82704,12610160,0,0x0,8
tick,0x7ff86ea82704,12612142,0,0x0,8
tick,0x7ff86ea82704,12614134,0,0x0,8
tick,0x7ff86ea82704,12616028,0,0x0,8
tick,0x7ff86ea82704,12618104,0,0x0,8
tick,0x7ff86ea82704,12620046,0,0x0,8
tick,0x7ff86ea82704,12622279,0,0x0,8
tick,0x7ff86ea82704,12624052,0,0x0,8
tick,0x7ff86ea82704,12626073,0,0x0,8
tick,0x7ff86ea82704,12628155,0,0x0,8
tick,0x7ff86ea82704,12630046,0,0x0,8
tick,0x7ff86ea82704,12632217,0,0x0,8
tick,0x7ff86ea82704,12634035,0,0x0,8
tick,0x7ff86ea82704,12636096,0,0x0,8
tick,0x7ff86ea82704,12638017,0,0x0,8
tick,0x7ff86ea82704,12640078,0,0x0,8
tick,0x7ff86ea82704,12642029,0,0x0,8
tick,0x7ff86ea82704,12644027,0,0x0,8
tick,0x7ff86ea82704,12646010,0,0x0,8
tick,0x7ff86ea82704,12647983,0,0x0,8
tick,0x7ff86ea82704,12649975,0,0x0,8
tick,0x7ff86ea82704,12651943,0,0x0,8
tick,0x7ff86ea82704,12653979,0,0x0,8
tick,0x7ff86ea82704,12655942,0,0x0,8
tick,0x7ff86ea82704,12658000,0,0x0,8
tick,0x7ff86ea82704,12659973,0,0x0,8
tick,0x7ff86ea82704,12661915,0,0x0,8
tick,0x7ff86ea82704,12664013,0,0x0,8
tick,0x7ff86ea82704,12665848,0,0x0,8
tick,0x7ff86ea82704,12667908,0,0x0,8
tick,0x7ff86ea82704,12669876,0,0x0,8
tick,0x7ff86ea82704,12671923,0,0x0,8
tick,0x7ff86ea82704,12673906,0,0x0,8
tick,0x7ff86ea82704,12675860,0,0x0,8
tick,0x7ff86ea82704,12677840,0,0x0,8
tick,0x7ff86ea82704,12679850,0,0x0,8
tick,0x7ff86ea82704,12681838,0,0x0,8
tick,0x7ff86ea82704,12683917,0,0x0,8
tick,0x7ff86ea82704,12685881,0,0x0,8
tick,0x7ff86ea82704,12687962,0,0x0,8
tick,0x7ff86ea82704,12689862,0,0x0,8
tick,0x7ff86ea82704,12691920,0,0x0,8
tick,0x7ff86ea82704,12693880,0,0x0,8
tick,0x7ff86ea82704,12695817,0,0x0,8
tick,0x7ff86ea82704,12697894,0,0x0,8
tick,0x7ff86ea82704,12699802,0,0x0,8
tick,0x7ff86ea82704,12701889,0,0x0,8
tick,0x7ff86ea82704,12703749,0,0x0,8
tick,0x7ff86ea82704,12705939,0,0x0,8
tick,0x7ff86ea82704,12707765,0,0x0,8
tick,0x7ff86ea82704,12709818,0,0x0,8
tick,0x7ff86ea82704,12711837,0,0x0,8
tick,0x7ff86ea82704,12713771,0,0x0,8
tick,0x7ff86ea82704,12715821,0,0x0,8
tick,0x7ff86ea82704,12717737,0,0x0,8
tick,0x7ff86ea82704,12719813,0,0x0,8
tick,0x7ff86ea82704,12721803,0,0x0,8
tick,0x7ff86ea82704,12723708,0,0x0,8
tick,0x7ff86ea82704,12725778,0,0x0,8
tick,0x7ff86ea82704,12727728,0,0x0,8
tick,0x7ff86ea82704,12729805,0,0x0,8
tick,0x7ff86ea82704,12731745,0,0x0,8
tick,0x7ff86ea82704,12733765,0,0x0,8
tick,0x7ff86ea82704,12735729,0,0x0,8
tick,0x7ff86ea82704,12737788,0,0x0,8
tick,0x7ff86ea82704,12739707,0,0x0,8
tick,0x7ff86ea82704,12741759,0,0x0,8
tick,0x7ff86ea82704,12743709,0,0x0,8
tick,0x7ff86ea82704,12745733,0,0x0,8
tick,0x7ff86ea82704,12747735,0,0x0,8
tick,0x7ff86ea82704,12749803,0,0x0,8
tick,0x7ff86ea82704,12751715,0,0x0,8
tick,0x7ff86ea82704,12753690,0,0x0,8
tick,0x7ff86ea82704,12755727,0,0x0,8
tick,0x7ff86ea82704,12757668,0,0x0,8
tick,0x7ff86ea82704,12759759,0,0x0,8
tick,0x7ff86ea82704,12761688,0,0x0,8
tick,0x7ff86ea82704,12763753,0,0x0,8
tick,0x7ff86ea82704,12765668,0,0x0,8
tick,0x7ff86ea82704,12767686,0,0x0,8
tick,0x7ff86ea82704,12769626,0,0x0,8
tick,0x7ff86ea82704,12771729,0,0x0,8
tick,0x7ff86ea82704,12773664,0,0x0,8
tick,0x7ff86ea82704,12775731,0,0x0,8
tick,0x7ff86ea82704,12777765,0,0x0,8
tick,0x7ff86ea82704,12779648,0,0x0,8
tick,0x7ff86ea82704,12781625,0,0x0,8
tick,0x7ff86ea82704,12783723,0,0x0,8
tick,0x7ff86ea82704,12785626,0,0x0,8
tick,0x7ff86ea82704,12787642,0,0x0,8
tick,0x7ff86ea82704,12789579,0,0x0,8
tick,0x7ff86ea82704,12791640,0,0x0,8
tick,0x7ff86ea82704,12793587,0,0x0,8
tick,0x7ff86ea82704,12795630,0,0x0,8
tick,0x7ff86ea82704,12797582,0,0x0,8
tick,0x7ff86ea82704,12799619,0,0x0,8
tick,0x7ff86ea82704,12801620,0,0x0,8
tick,0x7ff86ea82704,12803586,0,0x0,8
tick,0x7ff86ea82704,12805611,0,0x0,8
tick,0x7ff86ea82704,12807742,0,0x0,8
tick,0x7ff86ea82704,12809588,0,0x0,8
tick,0x7ff86ea82704,12811561,0,0x0,8
tick,0x7ff86ea82704,12813642,0,0x0,8
tick,0x7ff86ea82704,12815541,0,0x0,8
tick,0x7ff86ea82704,12817533,0,0x0,8
tick,0x7ff86ea82704,12819536,0,0x0,8
tick,0x7ff86ea82704,12821575,0,0x0,8
tick,0x7ff86ea82704,12823710,0,0x0,8
tick,0x7ff86ea82704,12825539,0,0x0,8
tick,0x7ff86ea82704,12827554,0,0x0,8
tick,0x7ff86ea82704,12829617,0,0x0,8
tick,0x7ff86ea82704,12831523,0,0x0,8
tick,0x7ff86ea82704,12833466,0,0x0,8
tick,0x7ff86ea82704,12835442,0,0x0,8
tick,0x7ff86ea82704,12837519,0,0x0,8
tick,0x7ff86ea82704,12839541,0,0x0,8
tick,0x7ff86ea82704,12841747,0,0x0,8
tick,0x7ff86ea82704,12843707,0,0x0,8
tick,0x7ff86ea82704,12845715,0,0x0,8
tick,0x7ff86ea82704,12847452,0,0x0,8
tick,0x7ff86ea82704,12849782,0,0x0,8
tick,0x7ff86ea82704,12851468,0,0x0,8
tick,0x7ff86ea82704,12853582,0,0x0,8
tick,0x7ff86ea82704,12855532,0,0x0,8
tick,0x7ff86ea82704,12857467,0,0x0,8
tick,0x7ff86ea82704,12859474,0,0x0,8
tick,0x7ff86ea82704,12861488,0,0x0,8
tick,0x7ff86ea82704,12863449,0,0x0,8
tick,0x7ff86ea82704,12865455,0,0x0,8
tick,0x7ff86ea82704,12867378,0,0x0,8
tick,0x7ff86ea82704,12869471,0,0x0,8
tick,0x7ff86ea82704,12871666,0,0x0,8
tick,0x7ff86ea82704,12873558,0,0x0,8
tick,0x7ff86ea82704,12875463,0,0x0,8
tick,0x7ff86ea82704,12877544,0,0x0,8
tick,0x7ff86ea82704,12879424,0,0x0,8
tick,0x7ff86ea82704,12881624,0,0x0,8
tick,0x7ff86ea82704,12883669,0,0x0,8
tick,0x7ff86ea82704,12885434,0,0x0,8
tick,0x7ff86ea82704,12887398,0,0x0,8
tick,0x7ff86ea82704,12889565,0,0x0,8
tick,0x7ff86ea82704,12891490,0,0x0,8
tick,0x7ff86ea82704,12893480,0,0x0,8
tick,0x7ff86ea82704,12895367,0,0x0,8
tick,0x7ff86ea82704,12897545,0,0x0,8
tick,0x7ff86ea82704,12899687,0,0x0,8
tick,0x7ff86ea82704,12901311,0,0x0,8
tick,0x7ff86ea82704,12903358,0,0x0,8
tick,0x7ff86ea82704,12905677,0,0x0,8
tick,0x7ff86ea82704,12907474,0,0x0,8
tick,0x7ff86ea82704,12909322,0,0x0,8
tick,0x7ff86ea82704,12911234,0,0x0,8
tick,0x7ff86ea82704,12913361,0,0x0,8
tick,0x7ff86ea82704,12915406,0,0x0,8
tick,0x7ff86ea82704,12917332,0,0x0,8
tick,0x7ff86ea82704,12919426,0,0x0,8
tick,0x7ff86ea82704,12921444,0,0x0,8
tick,0x7ff86ea82704,12923421,0,0x0,8
tick,0x7ff86ea82704,12925342,0,0x0,8
tick,0x7ff86ea82704,12927287,0,0x0,8
tick,0x7ff86ea82704,12929392,0,0x0,8
tick,0x7ff86ea82704,12931594,0,0x0,8
tick,0x7ff86ea82704,12933389,0,0x0,8
tick,0x7ff86ea82704,12935221,0,0x0,8
tick,0x7ff86ea82704,12937240,0,0x0,8
tick,0x7ff86ea82704,12939558,0,0x0,8
tick,0x7ff86ea82704,12941299,0,0x0,8
tick,0x7ff86ea82704,12943296,0,0x0,8
tick,0x7ff86ea82704,12945277,0,0x0,8
tick,0x7ff86ea82704,12947597,0,0x0,8
tick,0x7ff86ea82704,12949363,0,0x0,8
tick,0x7ff86ea82704,12951199,0,0x0,8
tick,0x7ff86ea82704,12953186,0,0x0,8
tick,0x7ff86ea82704,12955452,0,0x0,8
tick,0x7ff86ea82704,12957289,0,0x0,8
tick,0x7ff86ea82704,12959222,0,0x0,8
tick,0x7ff86ea82704,12961178,0,0x0,8
tick,0x7ff86ea82704,12963332,0,0x0,8
tick,0x7ff86ea82704,12965246,0,0x0,8
tick,0x7ff86ea82704,12967176,0,0x0,8
tick,0x7ff86ea82704,12969270,0,0x0,8
tick,0x7ff86ea82704,12971536,0,0x0,8
tick,0x7ff86ea82704,12973344,0,0x0,8
tick,0x7ff86ea82704,12975230,0,0x0,8
tick,0x7ff86ea82704,12977166,0,0x0,8
tick,0x7ff86ea82704,12979490,0,0x0,8
tick,0x7ff86ea82704,12981369,0,0x0,8
tick,0x7ff86ea82704,12983126,0,0x0,8
tick,0x7ff86ea82704,12985302,0,0x0,8
tick,0x7ff86ea82704,12987100,0,0x0,8
tick,0x7ff86ea82704,12989399,0,0x0,8
tick,0x7ff86ea82704,12991135,0,0x0,8
tick,0x7ff86ea82704,12993163,0,0x0,8
tick,0x7ff86ea82704,12995073,0,0x0,8
tick,0x7ff86ea82704,12997116,0,0x0,8
tick,0x7ff86ea82704,12999067,0,0x0,8
tick,0x7ff86ea82704,13001167,0,0x0,8
tick,0x7ff86ea82704,13003069,0,0x0,8
tick,0x7ff86ea82704,13005128,0,0x0,8
tick,0x7ff86ea82704,13007281,0,0x0,8
tick,0x7ff86ea82704,13009363,0,0x0,8
tick,0x7ff86ea82704,13011028,0,0x0,8
tick,0x7ff86ea82704,13013188,0,0x0,8
tick,0x7ff86ea82704,13015456,0,0x0,8
tick,0x7ff86ea82704,13017836,0,0x0,8
tick,0x7ff86ea82704,13018970,0,0x0,8
tick,0x7ff86ea82704,13020950,0,0x0,8
tick,0x7ff86ea82704,13023213,0,0x0,8
tick,0x7ff86ea82704,13025156,0,0x0,8
tick,0x7ff86ea82704,13026932,0,0x0,8
tick,0x7ff86ea82704,13029060,0,0x0,8
tick,0x7ff86ea82704,13030892,0,0x0,8
tick,0x7ff86ea82704,13032935,0,0x0,8
tick,0x7ff86ea82704,13036901,0,0x0,8
tick,0x7ff86ea82704,13039133,0,0x0,8
tick,0x7ff86ea82704,13041107,0,0x0,8
tick,0x7ff86ea82704,13042951,0,0x0,8
tick,0x7ff86ea82704,13045084,0,0x0,8
tick,0x7ff86ea82704,13046976,0,0x0,8
tick,0x7ff86ea82704,13049173,0,0x0,8
tick,0x7ff86ea82704,13050977,0,0x0,8
tick,0x7ff86ea82704,13052964,0,0x0,8
tick,0x7ff86ea82704,13054959,0,0x0,8
tick,0x7ff86ea82704,13056965,0,0x0,8
tick,0x7ff86ea82704,13058900,0,0x0,8
tick,0x7ff86ea82704,13060875,0,0x0,8
tick,0x7ff86ea82704,13062875,0,0x0,8
tick,0x7ff86ea82704,13064964,0,0x0,8
tick,0x7ff86ea82704,13067212,0,0x0,8
tick,0x7ff86ea82704,13069083,0,0x0,8
tick,0x7ff86ea82704,13070956,0,0x0,8
tick,0x7ff86ea82704,13073467,0,0x0,8
tick,0x7ff86ea82704,13075151,0,0x0,8
tick,0x7ff86ea82704,13077213,0,0x0,8
tick,0x7ff86ea82704,13078960,0,0x0,8
tick,0x7ff86ea82704,13080985,0,0x0,8
tick,0x7ff86ea82704,13082865,0,0x0,8
tick,0x7ff86ea82704,13084913,0,0x0,8
tick,0x7ff86ea82704,13086821,0,0x0,8
tick,0x7ff86ea82704,13088909,0,0x0,8
tick,0x7ff86ea82704,13090967,0,0x0,8
tick,0x7ff86ea82704,13092862,0,0x0,8
tick,0x7ff86ea82704,13094872,0,0x0,8
tick,0x7ff86ea82704,13096856,0,0x0,8
tick,0x7ff86ea82704,13098852,0,0x0,8
tick,0x7ff86ea82704,13100907,0,0x0,8
tick,0x7ff86ea82704,13103119,0,0x0,8
tick,0x7ff86ea82704,13105096,0,0x0,8
tick,0x7ff86ea82704,13106993,0,0x0,8
tick,0x7ff86ea82704,13108850,0,0x0,8
tick,0x7ff86ea82704,13110929,0,0x0,8
tick,0x7ff86ea82704,13112912,0,0x0,8
tick,0x7ff86ea82704,13114914,0,0x0,8
tick,0x7ff86ea82704,13116861,0,0x0,8
tick,0x7ff86ea82704,13118781,0,0x0,8
tick,0x7ff86ea82704,13120844,0,0x0,8
tick,0x7ff86ea82704,13122930,0,0x0,8
tick,0x7ff86ea82704,13125017,0,0x0,8
tick,0x7ff86ea82704,13126992,0,0x0,8
tick,0x7ff86ea82704,13129296,0,0x0,8
tick,0x7ff86ea82704,13131028,0,0x0,8
tick,0x7ff86ea82704,13132721,0,0x0,8
tick,0x7ff86ea82704,13134851,0,0x0,8
tick,0x7ff86ea82704,13136737,0,0x0,8
tick,0x7ff86ea82704,13138833,0,0x0,8
tick,0x7ff86ea82704,13140754,0,0x0,8
tick,0x7ff86ea82704,13143201,0,0x0,8
tick,0x7ff86ea82704,13144751,0,0x0,8
tick,0x7ff86ea82704,13146835,0,0x0,8
tick,0x7ff86ea82704,13148665,0,0x0,8
tick,0x7ff86ea82704,13150885,0,0x0,8
tick,0x7ff86ea82704,13152676,0,0x0,8
tick,0x7ff86ea82704,13154757,0,0x0,8
tick,0x7ff86ea82704,13156628,0,0x0,8
tick,0x7ff86ea82704,13159075,0,0x0,8
tick,0x7ff86ea82704,13160973,0,0x0,8
tick,0x7ff86ea82704,13162921,0,0x0,8
tick,0x7ff86ea82704,13164636,0,0x0,8
tick,0x7ff86ea82704,13166950,0,0x0,8
tick,0x7ff86ea82704,13168582,0,0x0,8
tick,0x7ff86ea82704,13170833,0,0x0,8
tick,0x7ff86ea82704,13172973,0,0x0,8
tick,0x7ff86ea82704,13174835,0,0x0,8
tick,0x7ff86ea82704,13176769,0,0x0,8
tick,0x7ff86ea82704,13178566,0,0x0,8
tick,0x7ff86ea82704,13180583,0,0x0,8
tick,0x7ff86ea82704,13182697,0,0x0,8
tick,0x7ff86ea82704,13184691,0,0x0,8
tick,0x7ff86ea82704,13186837,0,0x0,8
tick,0x7ff86ea82704,13188629,0,0x0,8
tick,0x7ff86ea82704,13190669,0,0x0,8
tick,0x7ff86ea82704,13192637,0,0x0,8
tick,0x7ff86ea82704,13194577,0,0x0,8
tick,0x7ff86ea82704,13196724,0,0x0,8
tick,0x7ff86ea82704,13198608,0,0x0,8
tick,0x7ff86ea82704,13200799,0,0x0,8
tick,0x7ff86ea82704,13202758,0,0x0,8
tick,0x7ff86ea82704,13205051,0,0x0,8
tick,0x7ff86ea82704,13206616,0,0x0,8
tick,0x7ff86ea82704,13208767,0,0x0,8
tick,0x7ff86ea82704,13210797,0,0x0,8
tick,0x7ff86ea82704,13212888,0,0x0,8
tick,0x7ff86ea82704,13214696,0,0x0,8
tick,0x7ff86ea82704,13216880,0,0x0,8
tick,0x7ff86ea82704,13218550,0,0x0,8
tick,0x7ff86ea82704,13220604,0,0x0,8
tick,0x7ff86ea82704,13223127,0,0x0,8
tick,0x7ff86ea82704,13224593,0,0x0,8
tick,0x7ff86ea82704,13226451,0,0x0,8
tick,0x7ff86ea82704,13228602,0,0x0,8
tick,0x7ff86ea82704,13230477,0,0x0,8
tick,0x7ff86ea82704,13232420,0,0x0,8
tick,0x7ff86ea82704,13234437,0,0x0,8
tick,0x7ff86ea82704,13236327,0,0x0,8
tick,0x7ff86ea82704,13238552,0,0x0,8
tick,0x7ff86ea82704,13240281,0,0x0,8
tick,0x7ff86ea82704,13242450,0,0x0,8
tick,0x7ff86ea82704,13244351,0,0x0,8
tick,0x7ff86ea82704,13246478,0,0x0,8
tick,0x7ff86ea82704,13248310,0,0x0,8
tick,0x7ff86ea82704,13250474,0,0x0,8
tick,0x7ff86ea82704,13252346,0,0x0,8
tick,0x7ff86ea82704,13254775,0,0x0,8
tick,0x7ff86ea82704,13256363,0,0x0,8
tick,0x7ff86ea82704,13258388,0,0x0,8
tick,0x7ff86ea82704,13260390,0,0x0,8
tick,0x7ff86ea82704,13262422,0,0x0,8
tick,0x7ff86ea82704,13264482,0,0x0,8
tick,0x7ff86ea82704,13266353,0,0x0,8
tick,0x7ff86ea82704,13268438,0,0x0,8
tick,0x7ff86ea82704,13270351,0,0x0,8
tick,0x7ff86ea82704,13272413,0,0x0,8
tick,0x7ff86ea82704,13274304,0,0x0,8
tick,0x7ff86ea82704,13276309,0,0x0,8
tick,0x7ff86ea82704,13278232,0,0x0,8
tick,0x7ff86ea82704,13280312,0,0x0,8
tick,0x7ff86ea82704,13282237,0,0x0,8
tick,0x7ff86ea82704,13284459,0,0x0,8
tick,0x7ff86ea82704,13286235,0,0x0,8
tick,0x7ff86ea82704,13288314,0,0x0,8
tick,0x7ff86ea82704,13290262,0,0x0,8
tick,0x7ff86ea82704,13292212,0,0x0,8
tick,0x7ff86ea82704,13294168,0,0x0,8
tick,0x7ff86ea82704,13296206,0,0x0,8
tick,0x7ff86ea82704,13298334,0,0x0,8
tick,0x7ff86ea82704,13300337,0,0x0,8
tick,0x7ff86ea82704,13302186,0,0x0,8
tick,0x7ff86ea82704,13304238,0,0x0,8
tick,0x7ff86ea82704,13306133,0,0x0,8
tick,0x7ff86ea82704,13308254,0,0x0,8
tick,0x7ff86ea82704,13310171,0,0x0,8
tick,0x7ff86ea82704,13312374,0,0x0,8
tick,0x7ff86ea82704,13314386,0,0x0,8
tick,0x7ff86ea82704,13316286,0,0x0,8
tick,0x7ff86ea82704,13318459,0,0x0,8
tick,0x7ff86ea82704,13320480,0,0x0,8
tick,0x7ff86ea82704,13322611,0,0x0,8
tick,0x7ff86ea82704,13324480,0,0x0,8
tick,0x7ff86ea82704,13326208,0,0x0,8
tick,0x7ff86ea82704,13328148,0,0x0,8
tick,0x7ff86ea82704,13330079,0,0x0,8
tick,0x7ff86ea82704,13332226,0,0x0,8
tick,0x7ff86ea82704,13334281,0,0x0,8
tick,0x7ff86ea82704,13336182,0,0x0,8
tick,0x7ff86ea82704,13338284,0,0x0,8
tick,0x7ff86ea82704,13340177,0,0x0,8
tick,0x7ff86ea82704,13342141,0,0x0,8
tick,0x7ff86ea82704,13344302,0,0x0,8
tick,0x7ff86ea82704,13346029,0,0x0,8
tick,0x7ff86ea82704,13348116,0,0x0,8
tick,0x7ff86ea82704,13350085,0,0x0,8
tick,0x7ff86ea82704,13352049,0,0x0,8
tick,0x7ff86ea82704,13354252,0,0x0,8
tick,0x7ff86ea82704,13356214,0,0x0,8
tick,0x7ff86ea82704,13358218,0,0x0,8
tick,0x7ff86ea82704,13360010,0,0x0,8
tick,0x7ff86ea82704,13362087,0,0x0,8
tick,0x7ff86ea82704,13364081,0,0x0,8
tick,0x7ff86ea82704,13366101,0,0x0,8
tick,0x7ff86ea82704,13368066,0,0x0,8
tick,0x7ff86ea82704,13370089,0,0x0,8
tick,0x7ff86ea82704,13372017,0,0x0,8
tick,0x7ff86ea82704,13374009,0,0x0,8
tick,0x7ff86ea82704,13376034,0,0x0,8
tick,0x7ff86ea82704,13377941,0,0x0,8
tick,0x7ff86ea82704,13380033,0,0x0,8
tick,0x7ff86ea82704,13381983,0,0x0,8
tick,0x7ff86ea82704,13384031,0,0x0,8
tick,0x7ff86ea82704,13385922,0,0x0,8
tick,0x7ff86ea82704,13388404,0,0x0,8
tick,0x7ff86ea82704,13389951,0,0x0,8
tick,0x7ff86ea82704,13392409,0,0x0,8
tick,0x7ff86ea82704,13393972,0,0x0,8
tick,0x7ff86ea82704,13396137,0,0x0,8
tick,0x7ff86ea82704,13398019,0,0x0,8
tick,0x7ff86ea82704,13399999,0,0x0,8
tick,0x7ff86ea82704,13402143,0,0x0,8
tick,0x7ff86ea82704,13403958,0,0x0,8
tick,0x7ff86ea82704,13406018,0,0x0,8
tick,0x7ff86ea82704,13407971,0,0x0,8
tick,0x7ff86ea82704,13410010,0,0x0,8
tick,0x7ff86ea82704,13411888,0,0x0,8
tick,0x7ff86ea82704,13413966,0,0x0,8
tick,0x7ff86ea82704,13415838,0,0x0,8
tick,0x7ff86ea82704,13417902,0,0x0,8
tick,0x7ff86ea82704,13419812,0,0x0,8
tick,0x7ff86ea82704,13421929,0,0x0,8
tick,0x7ff86ea82704,13423807,0,0x0,8
tick,0x7ff86ea82704,13425978,0,0x0,8
tick,0x7ff86ea82704,13427776,0,0x0,8
tick,0x7ff86ea82704,13429946,0,0x0,8
tick,0x7ff86ea82704,13431804,0,0x0,8
tick,0x7ff86ea82704,13433941,0,0x0,8
tick,0x7ff86ea82704,13435794,0,0x0,8
tick,0x7ff86ea82704,13438160,0,0x0,8
tick,0x7ff86ea82704,13439905,0,0x0,8
tick,0x7ff86ea82704,13441936,0,0x0,8
tick,0x7ff86ea82704,13443764,0,0x0,8
tick,0x7ff86ea82704,13445848,0,0x0,8
tick,0x7ff86ea82704,13447770,0,0x0,8
tick,0x7ff86ea82704,13449964,0,0x0,8
tick,0x7ff86ea82704,13451750,0,0x0,8
tick,0x7ff86ea82704,13453871,0,0x0,8
tick,0x7ff86ea82704,13455906,0,0x0,8
tick,0x7ff86ea82704,13457751,0,0x0,8
tick,0x7ff86ea82704,13459876,0,0x0,8
tick,0x7ff86ea82704,13461923,0,0x0,8
tick,0x7ff86ea82704,13463950,0,0x0,8
tick,0x7ff86ea82704,13465766,0,0x0,8
tick,0x7ff86ea82704,13467870,0,0x0,8
tick,0x7ff86ea82704,13469681,0,0x0,8
tick,0x7ff86ea82704,13471913,0,0x0,8
tick,0x7ff86ea82704,13473768,0,0x0,8
tick,0x7ff86ea82704,13475795,0,0x0,8
tick,0x7ff86ea82704,13477752,0,0x0,8
tick,0x7ff86ea82704,13479763,0,0x0,8
tick,0x7ff86ea82704,13481761,0,0x0,8
tick,0x7ff86ea82704,13483801,0,0x0,8
tick,0x7ff86ea82704,13485826,0,0x0,8
tick,0x7ff86ea82704,13487934,0,0x0,8
tick,0x7ff86ea82704,13489637,0,0x0,8
tick,0x7ff86ea82704,13491718,0,0x0,8
tick,0x7ff86ea82704,13493669,0,0x0,8
tick,0x7ff86ea82704,13495709,0,0x0,8
tick,0x7ff86ea82704,13497632,0,0x0,8
tick,0x7ff86ea82704,13499668,0,0x0,8
tick,0x7ff86ea82704,13501674,0,0x0,8
tick,0x7ff86ea82704,13503789,0,0x0,8
tick,0x7ff86ea82704,13505589,0,0x0,8
tick,0x7ff86ea82704,13507720,0,0x0,8
tick,0x7ff86ea82704,13509805,0,0x0,8
tick,0x7ff86ea82704,13511972,0,0x0,8
tick,0x7ff86ea82704,13513704,0,0x0,8
tick,0x7ff86ea82704,13515975,0,0x0,8
tick,0x7ff86ea82704,13517657,0,0x0,8
tick,0x7ff86ea82704,13519937,0,0x0,8
tick,0x7ff86ea82704,13521704,0,0x0,8
tick,0x7ff86ea82704,13524081,0,0x0,8
tick,0x7ff86ea82704,13525654,0,0x0,8
tick,0x7ff86ea82704,13527695,0,0x0,8
tick,0x7ff86ea82704,13529643,0,0x0,8
tick,0x7ff86ea82704,13531584,0,0x0,8
tick,0x7ff86ea82704,13533607,0,0x0,8
tick,0x7ff86ea82704,13535546,0,0x0,8
tick,0x7ff86ea82704,13537589,0,0x0,8
tick,0x7ff86ea82704,13539705,0,0x0,8
tick,0x7ff86ea82704,13541584,0,0x0,8
tick,0x7ff86ea82704,13543550,0,0x0,8
tick,0x7ff86ea82704,13545575,0,0x0,8
tick,0x7ff86ea82704,13547570,0,0x0,8
tick,0x7ff86ea82704,13549500,0,0x0,8
tick,0x7ff86ea82704,13551585,0,0x0,8
tick,0x7ff86ea82704,13553546,0,0x0,8
tick,0x7ff86ea82704,13555480,0,0x0,8
tick,0x7ff86ea82704,13557605,0,0x0,8
tick,0x7ff86ea82704,13559458,0,0x0,8
tick,0x7ff86ea82704,13561575,0,0x0,8
tick,0x7ff86ea82704,13563417,0,0x0,8
tick,0x7ff86ea82704,13565635,0,0x0,8
tick,0x7ff86ea82704,13567444,0,0x0,8
tick,0x7ff86ea82704,13569605,0,0x0,8
tick,0x7ff86ea82704,13571437,0,0x0,8
tick,0x7ff86ea82704,13573448,0,0x0,8
tick,0x7ff86ea82704,13575413,0,0x0,8
tick,0x7ff86ea82704,13577502,0,0x0,8
tick,0x7ff86ea82704,13579462,0,0x0,8
tick,0x7ff86ea82704,13581510,0,0x0,8
tick,0x7ff86ea82704,13583397,0,0x0,8
tick,0x7ff86ea82704,13585420,0,0x0,8
tick,0x7ff86ea82704,13587411,0,0x0,8
tick,0x7ff86ea82704,13589427,0,0x0,8
tick,0x7ff86ea82704,13591353,0,0x0,8
tick,0x7ff86ea82704,13593443,0,0x0,8
tick,0x7ff86ea82704,13595379,0,0x0,8
tick,0x7ff86ea82704,13597444,0,0x0,8
tick,0x7ff86ea82704,13599447,0,0x0,8
tick,0x7ff86ea82704,13601476,0,0x0,8
tick,0x7ff86ea82704,13603310,0,0x0,8
tick,0x7ff86ea82704,13605365,0,0x0,8
tick,0x7ff86ea82704,13607401,0,0x0,8
tick,0x7ff86ea82704,13609400,0,0x0,8
tick,0x7ff86ea82704,13611480,0,0x0,8
tick,0x7ff86ea82704,13613424,0,0x0,8
tick,0x7ff86ea82704,13615329,0,0x0,8
tick,0x7ff86ea82704,13617426,0,0x0,8
tick,0x7ff86ea82704,13619330,0,0x0,8
tick,0x7ff86ea82704,13621527,0,0x0,8
tick,0x7ff86ea82704,13623279,0,0x0,8
tick,0x7ff86ea82704,13625400,0,0x0,8
tick,0x7ff86ea82704,13627380,0,0x0,8
tick,0x7ff86ea82704,13629337,0,0x0,8
tick,0x7ff86ea82704,13631333,0,0x0,8
tick,0x7ff86ea82704,13633364,0,0x0,8
tick,0x7ff86ea82704,13635380,0,0x0,8
tick,0x7ff86ea82704,13637430,0,0x0,8
tick,0x7ff86ea82704,13639189,0,0x0,8
tick,0x7ff86ea82704,13641326,0,0x0,8
tick,0x7ff86ea82704,13643236,0,0x0,8
tick,0x7ff86ea82704,13645263,0,0x0,8
tick,0x7ff86ea82704,13647282,0,0x0,8
tick,0x7ff86ea82704,13649285,0,0x0,8
tick,0x7ff86ea82704,13651269,0,0x0,8
tick,0x7ff86ea82704,13653363,0,0x0,8
tick,0x7ff86ea82704,13655197,0,0x0,8
tick,0x7ff86ea82704,13657340,0,0x0,8
tick,0x7ff86ea82704,13659219,0,0x0,8
tick,0x7ff86ea82704,13661212,0,0x0,8
tick,0x7ff86ea82704,13663160,0,0x0,8
tick,0x7ff86ea82704,13665217,0,0x0,8
tick,0x7ff86ea82704,13667226,0,0x0,8
tick,0x7ff86ea82704,13669225,0,0x0,8
tick,0x7ff86ea82704,13671215,0,0x0,8
tick,0x7ff86ea82704,13673264,0,0x0,8
tick,0x7ff86ea82704,13675192,0,0x0,8
tick,0x7ff86ea82704,13677199,0,0x0,8
tick,0x7ff86ea82704,13679192,0,0x0,8
tick,0x7ff86ea82704,13681237,0,0x0,8
tick,0x7ff86ea82704,13683193,0,0x0,8
tick,0x7ff86ea82704,13685179,0,0x0,8
tick,0x7ff86ea82704,13687283,0,0x0,8
tick,0x7ff86ea82704,13689172,0,0x0,8
tick,0x7ff86ea82704,13691281,0,0x0,8
tick,0x7ff86ea82704,13693171,0,0x0,8
tick,0x7ff86ea82704,13695248,0,0x0,8
tick,0x7ff86ea82704,13697125,0,0x0,8
tick,0x7ff86ea82704,13699423,0,0x0,8
tick,0x7ff86ea82704,13701126,0,0x0,8
tick,0x7ff86ea82704,13703098,0,0x0,8
tick,0x7ff86ea82704,13705113,0,0x0,8
tick,0x7ff86ea82704,13707130,0,0x0,8
tick,0x7ff86ea82704,13709063,0,0x0,8
tick,0x7ff86ea82704,13711286,0,0x0,8
tick,0x7ff86ea82704,13713036,0,0x0,8
tick,0x7ff86ea82704,13715183,0,0x0,8
tick,0x7ff86ea82704,13717058,0,0x0,8
tick,0x7ff86ea82704,13719193,0,0x0,8
tick,0x7ff86ea82704,13721025,0,0x0,8
tick,0x7ff86ea82704,13723210,0,0x0,8
tick,0x7ff86ea82704,13725005,0,0x0,8
tick,0x7ff86ea82704,13727080,0,0x0,8
tick,0x7ff86ea82704,13729430,0,0x0,8
tick,0x7ff86ea82704,13731148,0,0x0,8
tick,0x7ff86ea82704,13733357,0,0x0,8
tick,0x7ff86ea82704,13735200,0,0x0,8
tick,0x7ff86ea82704,13737226,0,0x0,8
tick,0x7ff86ea82704,13739310,0,0x0,8
tick,0x7ff86ea82704,13741075,0,0x0,8
tick,0x7ff86ea82704,13743136,0,0x0,8
tick,0x7ff86ea82704,13745108,0,0x0,8
tick,0x7ff86ea82704,13747058,0,0x0,8
tick,0x7ff86ea82704,13749090,0,0x0,8
tick,0x7ff86ea82704,13751061,0,0x0,8
tick,0x7ff86ea82704,13753195,0,0x0,8
tick,0x7ff86ea82704,13755459,0,0x0,8
tick,0x7ff86ea82704,13757153,0,0x0,8
tick,0x7ff86ea82704,13759074,0,0x0,8
tick,0x7ff86ea82704,13761032,0,0x0,8
tick,0x7ff86ea82704,13763073,0,0x0,8
tick,0x7ff86ea82704,13765032,0,0x0,8
tick,0x7ff86ea82704,13767015,0,0x0,8
tick,0x7ff86ea82704,13768950,0,0x0,8
tick,0x7ff86ea82704,13771039,0,0x0,8
tick,0x7ff86ea82704,13773006,0,0x0,8
tick,0x7ff86ea82704,13775088,0,0x0,8
tick,0x7ff86ea82704,13777043,0,0x0,8
tick,0x7ff86ea82704,13778981,0,0x0,8
tick,0x7ff86ea82704,13781096,0,0x0,8
tick,0x7ff86ea82704,13783069,0,0x0,8
tick,0x7ff86ea82704,13785075,0,0x0,8
tick,0x7ff86ea82704,13787086,0,0x0,8
tick,0x7ff86ea82704,13788886,0,0x0,8
tick,0x7ff86ea82704,13790987,0,0x0,8
tick,0x7ff86ea82704,13793021,0,0x0,8
tick,0x7ff86ea82704,13794817,0,0x0,8
tick,0x7ff86ea82704,13796996,0,0x0,8
tick,0x7ff86ea82704,13798832,0,0x0,8
tick,0x7ff86ea82704,13800916,0,0x0,8
tick,0x7ff86ea82704,13802860,0,0x0,8
tick,0x7ff86ea82704,13805294,0,0x0,8
tick,0x7ff86ea82704,13806802,0,0x0,8
tick,0x7ff86ea82704,13808926,0,0x0,8
tick,0x7ff86ea82704,13810861,0,0x0,8
tick,0x7ff86ea82704,13813016,0,0x0,8
tick,0x7ff86ea82704,13814945,0,0x0,8
tick,0x7ff86ea82704,13817054,0,0x0,8
tick,0x7ff86ea82704,13818804,0,0x0,8
tick,0x7ff86ea82704,13820841,0,0x0,8
tick,0x7ff86ea82704,13823021,0,0x0,8
tick,0x7ff86ea82704,13824896,0,0x0,8
tick,0x7ff86ea82704,13826728,0,0x0,8
tick,0x7ff86ea82704,13828828,0,0x0,8
tick,0x7ff86ea82704,13830738,0,0x0,8
tick,0x7ff86ea82704,13832919,0,0x0,8
tick,0x7ff86ea82704,13834706,0,0x0,8
tick,0x7ff86ea82704,13836794,0,0x0,8
tick,0x7ff86ea82704,13838692,0,0x0,8
tick,0x7ff86ea82704,13840829,0,0x0,8
tick,0x7ff86ea82704,13842681,0,0x0,8
tick,0x7ff86ea82704,13844831,0,0x0,8
tick,0x7ff86ea82704,13846733,0,0x0,8
tick,0x7ff86ea82704,13848795,0,0x0,8
tick,0x7ff86ea82704,13850665,0,0x0,8
tick,0x7ff86ea82704,13852785,0,0x0,8
tick,0x7ff86ea82704,13854796,0,0x0,8
tick,0x7ff86ea82704,13856728,0,0x0,8
tick,0x7ff86ea82704,13858742,0,0x0,8
tick,0x7ff86ea82704,13860685,0,0x0,8
tick,0x7ff86ea82704,13862783,0,0x0,8
tick,0x7ff86ea82704,13864700,0,0x0,8
tick,0x7ff86ea82704,13866702,0,0x0,8
tick,0x7ff86ea82704,13868697,0,0x0,8
tick,0x7ff86ea82704,13870656,0,0x0,8
tick,0x7ff86ea82704,13872609,0,0x0,8
tick,0x7ff86ea82704,13874686,0,0x0,8
tick,0x7ff86ea82704,13876704,0,0x0,8
tick,0x7ff86ea82704,13878682,0,0x0,8
tick,0x7ff86ea82704,13880570,0,0x0,8
tick,0x7ff86ea82704,13882756,0,0x0,8
tick,0x7ff86ea82704,13884618,0,0x0,8
tick,0x7ff86ea82704,13886742,0,0x0,8
tick,0x7ff86ea82704,13888691,0,0x0,8
tick,0x7ff86ea82704,13890645,0,0x0,8
tick,0x7ff86ea82704,13892589,0,0x0,8
tick,0x7ff86ea82704,13894586,0,0x0,8
tick,0x7ff86ea82704,13896702,0,0x0,8
tick,0x7ff86ea82704,13898589,0,0x0,8
tick,0x7ff86ea82704,13903589,0,0x0,8
tick,0x7ff86ea82704,13905663,0,0x0,8
tick,0x7ff86ea82704,13907596,0,0x0,8
tick,0x7ff86ea82704,13909638,0,0x0,8
tick,0x7ff86ea82704,13911597,0,0x0,8
tick,0x7ff86ea82704,13913613,0,0x0,8
tick,0x7ff86ea82704,13915530,0,0x0,8
tick,0x7ff86ea82704,13917638,0,0x0,8
tick,0x7ff86ea82704,13919584,0,0x0,8
tick,0x7ff86ea82704,13921633,0,0x0,8
tick,0x7ff86ea82704,13923706,0,0x0,8
tick,0x7ff86ea82704,13925518,0,0x0,8
tick,0x7ff86ea82704,13927641,0,0x0,8
tick,0x7ff86ea82704,13929502,0,0x0,8
tick,0x7ff86ea82704,13931547,0,0x0,8
tick,0x7ff86ea82704,13933525,0,0x0,8
tick,0x7ff86ea82704,13935568,0,0x0,8
tick,0x7ff86ea82704,13937697,0,0x0,8
tick,0x7ff86ea82704,13939471,0,0x0,8
tick,0x7ff86ea82704,13941581,0,0x0,8
tick,0x7ff86ea82704,13943558,0,0x0,8
tick,0x7ff86ea82704,13945496,0,0x0,8
tick,0x7ff86ea82704,13947448,0,0x0,8
tick,0x7ff86ea82704,13949545,0,0x0,8
tick,0x7ff86ea82704,13951539,0,0x0,8
tick,0x7ff86ea82704,13953569,0,0x0,8
tick,0x7ff86ea82704,13955549,0,0x0,8
tick,0x7ff86ea82704,13957580,0,0x0,8
tick,0x7ff86ea82704,13959627,0,0x0,8
tick,0x7ff86ea82704,13961571,0,0x0,8
tick,0x7ff86ea82704,13963569,0,0x0,8
tick,0x7ff86ea82704,13965526,0,0x0,8
tick,0x7ff86ea82704,13967548,0,0x0,8
tick,0x7ff86ea82704,13969465,0,0x0,8
tick,0x7ff86ea82704,13971598,0,0x0,8
tick,0x7ff86ea82704,13973552,0,0x0,8
tick,0x7ff86ea82704,13975495,0,0x0,8
tick,0x7ff86ea82704,13977362,0,0x0,8
tick,0x7ff86ea82704,13979380,0,0x0,8
tick,0x7ff86ea82704,13981520,0,0x0,8
tick,0x7ff86ea82704,13983342,0,0x0,8
tick,0x7ff86ea82704,13985568,0,0x0,8
tick,0x7ff86ea82704,13987369,0,0x0,8
tick,0x7ff86ea82704,13989463,0,0x0,8
tick,0x7ff86ea82704,13991466,0,0x0,8
tick,0x7ff86ea82704,13993385,0,0x0,8
tick,0x7ff86ea82704,13995382,0,0x0,8
tick,0x7ff86ea82704,13997534,0,0x0,8
tick,0x7ff86ea82704,13999416,0,0x0,8
tick,0x7ff86ea82704,14001350,0,0x0,8
tick,0x7ff86ea82704,14003372,0,0x0,8
tick,0x7ff86ea82704,14005391,0,0x0,8
tick,0x7ff86ea82704,14007386,0,0x0,8
tick,0x7ff86ea82704,14009320,0,0x0,8
tick,0x7ff86ea82704,14011512,0,0x0,8
tick,0x7ff86ea82704,14013258,0,0x0,8
tick,0x7ff86ea82704,14015378,0,0x0,8
tick,0x7ff86ea82704,14017356,0,0x0,8
tick,0x7ff86ea82704,14019369,0,0x0,8
tick,0x7ff86ea82704,14021313,0,0x0,8
tick,0x7ff86ea82704,14023227,0,0x0,8
tick,0x7ff86ea82704,14025343,0,0x0,8
tick,0x7ff86ea82704,14027352,0,0x0,8
tick,0x7ff86ea82704,14029441,0,0x0,8
tick,0x7ff86ea82704,14031264,0,0x0,8
tick,0x7ff86ea82704,14033351,0,0x0,8
tick,0x7ff86ea82704,14035293,0,0x0,8
tick,0x7ff86ea82704,14037263,0,0x0,8
tick,0x7ff86ea82704,14039363,0,0x0,8
tick,0x7ff86ea82704,14041307,0,0x0,8
tick,0x7ff86ea82704,14043370,0,0x0,8
tick,0x7ff86ea82704,14045286,0,0x0,8
tick,0x7ff86ea82704,14047389,0,0x0,8
tick,0x7ff86ea82704,14049252,0,0x0,8
tick,0x7ff86ea82704,14051361,0,0x0,8
tick,0x7ff86ea82704,14053228,0,0x0,8
tick,0x7ff86ea82704,14055353,0,0x0,8
tick,0x7ff86ea82704,14057232,0,0x0,8
tick,0x7ff86ea82704,14059249,0,0x0,8
tick,0x7ff86ea82704,14061209,0,0x0,8
tick,0x7ff86ea82704,14063265,0,0x0,8
tick,0x7ff86ea82704,14065217,0,0x0,8
tick,0x7ff86ea82704,14067245,0,0x0,8
tick,0x7ff86ea82704,14069512,0,0x0,8
tick,0x7ff86ea82704,14071465,0,0x0,8
tick,0x7ff86ea82704,14073183,0,0x0,8
tick,0x7ff86ea82704,14075310,0,0x0,8
tick,0x7ff86ea82704,14077182,0,0x0,8
tick,0x7ff86ea82704,14079150,0,0x0,8
tick,0x7ff86ea82704,14081267,0,0x0,8
tick,0x7ff86ea82704,14083291,0,0x0,8
tick,0x7ff86ea82704,14085084,0,0x0,8
tick,0x7ff86ea82704,14087251,0,0x0,8
tick,0x7ff86ea82704,14089186,0,0x0,8
tick,0x7ff86ea82704,14091254,0,0x0,8
tick,0x7ff86ea82704,14093092,0,0x0,8
tick,0x7ff86ea82704,14095178,0,0x0,8
tick,0x7ff86ea82704,14097083,0,0x0,8
tick,0x7ff86ea82704,14099108,0,0x0,8
tick,0x7ff86ea82704,14101066,0,0x0,8
tick,0x7ff86ea82704,14103263,0,0x0,8
tick,0x7ff86ea82704,14105187,0,0x0,8
tick,0x7ff86ea82704,14107111,0,0x0,8
tick,0x7ff86ea82704,14109139,0,0x0,8
tick,0x7ff86ea82704,14111126,0,0x0,8
tick,0x7ff86ea82704,14113245,0,0x0,8
tick,0x7ff86ea82704,14115103,0,0x0,8
tick,0x7ff86ea82704,14117005,0,0x0,8
tick,0x7ff86ea82704,14118960,0,0x0,8
tick,0x7ff86ea82704,14121067,0,0x0,8
tick,0x7ff86ea82704,14123090,0,0x0,8
tick,0x7ff86ea82704,14125018,0,0x0,8
tick,0x7ff86ea82704,14127061,0,0x0,8
tick,0x7ff86ea82704,14129392,0,0x0,8
tick,0x7ff86ea82704,14131049,0,0x0,8
tick,0x7ff86ea82704,14133052,0,0x0,8
tick,0x7ff86ea82704,14135023,0,0x0,8
tick,0x7ff86ea82704,14136980,0,0x0,8
tick,0x7ff86ea82704,14138996,0,0x0,8
tick,0x7ff86ea82704,14141177,0,0x0,8
tick,0x7ff86ea82704,14143070,0,0x0,8
tick,0x7ff86ea82704,14144964,0,0x0,8
tick,0x7ff86ea82704,14147031,0,0x0,8
tick,0x7ff86ea82704,14148989,0,0x0,8
tick,0x7ff86ea82704,14151155,0,0x0,8
tick,0x7ff86ea82704,14152992,0,0x0,8
tick,0x7ff86ea82704,14154927,0,0x0,8
tick,0x7ff86ea82704,14156963,0,0x0,8
tick,0x7ff86ea82704,14158961,0,0x0,8
tick,0x7ff86ea82704,14161086,0,0x0,8
tick,0x7ff86ea82704,14162934,0,0x0,8
tick,0x7ff86ea82704,14165003,0,0x0,8
tick,0x7ff86ea82704,14167020,0,0x0,8
tick,0x7ff86ea82704,14168969,0,0x0,8
tick,0x7ff86ea82704,14171126,0,0x0,8
tick,0x7ff86ea82704,14172921,0,0x0,8
tick,0x7ff86ea82704,14174885,0,0x0,8
tick,0x7ff86ea82704,14177033,0,0x0,8
tick,0x7ff86ea82704,14178795,0,0x0,8
tick,0x7ff86ea82704,14181071,0,0x0,8
tick,0x7ff86ea82704,14182859,0,0x0,8
tick,0x7ff86ea82704,14184944,0,0x0,8
tick,0x7ff86ea82704,14186864,0,0x0,8
tick,0x7ff86ea82704,14188938,0,0x0,8
tick,0x7ff86ea82704,14190890,0,0x0,8
tick,0x7ff86ea82704,14192823,0,0x0,8
tick,0x7ff86ea82704,14194876,0,0x0,8
tick,0x7ff86ea82704,14196869,0,0x0,8
tick,0x7ff86ea82704,14198903,0,0x0,8
tick,0x7ff86ea82704,14200936,0,0x0,8
tick,0x7ff86ea82704,14202809,0,0x0,8
tick,0x7ff86ea82704,14204937,0,0x0,8
tick,0x7ff86ea82704,14206851,0,0x0,8
tick,0x7ff86ea82704,14208841,0,0x0,8
tick,0x7ff86ea82704,14210883,0,0x0,8
tick,0x7ff86ea82704,14212727,0,0x0,8
tick,0x7ff86ea82704,14214799,0,0x0,8
tick,0x7ff86ea82704,14216831,0,0x0,8
tick,0x7ff86ea82704,14218993,0,0x0,8
tick,0x7ff86ea82704,14220815,0,0x0,8
tick,0x7ff86ea82704,14222870,0,0x0,8
tick,0x7ff86ea82704,14224863,0,0x0,8
tick,0x7ff86ea82704,14226849,0,0x0,8
tick,0x7ff86ea82704,14228874,0,0x0,8
tick,0x7ff86ea82704,14230939,0,0x0,8
tick,0x7ff86ea82704,14232746,0,0x0,8
tick,0x7ff86ea82704,14234791,0,0x0,8
tick,0x7ff86ea82704,14236793,0,0x0,8
tick,0x7ff86ea82704,14238903,0,0x0,8
tick,0x7ff86ea82704,14240665,0,0x0,8
tick,0x7ff86ea82704,14242809,0,0x0,8
tick,0x7ff86ea82704,14244888,0,0x0,8
tick,0x7ff86ea82704,14246854,0,0x0,8
tick,0x7ff86ea82704,14248648,0,0x0,8
tick,0x7ff86ea82704,14251280,0,0x0,8
tick,0x7ff86ea82704,14252656,0,0x0,8
tick,0x7ff86ea82704,14254884,0,0x0,8
tick,0x7ff86ea82704,14256841,0,0x0,8
tick,0x7ff86ea82704,14258703,0,0x0,8
tick,0x7ff86ea82704,14260691,0,0x0,8
tick,0x7ff86ea82704,14262625,0,0x0,8
tick,0x7ff86ea82704,14264919,0,0x0,8
tick,0x7ff86ea82704,14266684,0,0x0,8
tick,0x7ff86ea82704,14268876,0,0x0,8
tick,0x7ff86ea82704,14270798,0,0x0,8
tick,0x7ff86ea82704,14272944,0,0x0,8
tick,0x7ff86ea82704,14274604,0,0x0,8
tick,0x7ff86ea82704,14276793,0,0x0,8
tick,0x7ff86ea82704,14278742,0,0x0,8
tick,0x7ff86ea82704,14280970,0,0x0,8
tick,0x7ff86ea82704,14282712,0,0x0,8
tick,0x7ff86ea82704,14284886,0,0x0,8
tick,0x7ff86ea82704,14286522,0,0x0,8
tick,0x7ff86ea82704,14289255,0,0x0,8
tick,0x7ff86ea82704,14290962,0,0x0,8
tick,0x7ff86ea82704,14292707,0,0x0,8
tick,0x7ff86ea82704,14294785,0,0x0,8
tick,0x7ff86ea82704,14296877,0,0x0,8
tick,0x7ff86ea82704,14298603,0,0x0,8
tick,0x7ff86ea82704,14300955,0,0x0,8
tick,0x7ff86ea82704,14302598,0,0x0,8
tick,0x7ff86ea82704,14305208,0,0x0,8
tick,0x7ff86ea82704,14306765,0,0x0,8
tick,0x7ff86ea82704,14308518,0,0x0,8
tick,0x7ff86ea82704,14310550,0,0x0,8
tick,0x7ff86ea82704,14312636,0,0x0,8
tick,0x7ff86ea82704,14314682,0,0x0,8
tick,0x7ff86ea82704,14316525,0,0x0,8
tick,0x7ff86ea82704,14318534,0,0x0,8
tick,0x7ff86ea82704,14320576,0,0x0,8
tick,0x7ff86ea82704,14322829,0,0x0,8
tick,0x7ff86ea82704,14325200,0,0x0,8
tick,0x7ff86ea82704,14326833,0,0x0,8
tick,0x7ff86ea82704,14328448,0,0x0,8
tick,0x7ff86ea82704,14330412,0,0x0,8
tick,0x7ff86ea82704,14332368,0,0x0,8
tick,0x7ff86ea82704,14334440,0,0x0,8
tick,0x7ff86ea82704,14336354,0,0x0,8
tick,0x7ff86ea82704,14338424,0,0x0,8
tick,0x7ff86ea82704,14340351,0,0x0,8
tick,0x7ff86ea82704,14342332,0,0x0,8
tick,0x7ff86ea82704,14344382,0,0x0,8
tick,0x7ff86ea82704,14346354,0,0x0,8
tick,0x7ff86ea82704,14348439,0,0x0,8
tick,0x7ff86ea82704,14350367,0,0x0,8
tick,0x7ff86ea82704,14352380,0,0x0,8
tick,0x7ff86ea82704,14354487,0,0x0,8
tick,0x7ff86ea82704,14356372,0,0x0,8
tick,0x7ff86ea82704,14358612,0,0x0,8
tick,0x7ff86ea82704,14360348,0,0x0,8
tick,0x7ff86ea82704,14362267,0,0x0,8
tick,0x7ff86ea82704,14364322,0,0x0,8
tick,0x7ff86ea82704,14366288,0,0x0,8
tick,0x7ff86ea82704,14368396,0,0x0,8
tick,0x7ff86ea82704,14370941,0,0x0,8
tick,0x7ff86ea82704,14372632,0,0x0,8
tick,0x7ff86ea82704,14374401,0,0x0,8
tick,0x7ff86ea82704,14376545,0,0x0,8
tick,0x7ff86ea82704,14378433,0,0x0,8
tick,0x7ff86ea82704,14380500,0,0x0,8
tick,0x7ff86ea82704,14382422,0,0x0,8
tick,0x7ff86ea82704,14384476,0,0x0,8
tick,0x7ff86ea82704,14386256,0,0x0,8
tick,0x7ff86ea82704,14388457,0,0x0,8
tick,0x7ff86ea82704,14390309,0,0x0,8
tick,0x7ff86ea82704,14392238,0,0x0,8
tick,0x7ff86ea82704,14394282,0,0x0,8
tick,0x7ff86ea82704,14396283,0,0x0,8
tick,0x7ff86ea82704,14398232,0,0x0,8
tick,0x7ff86ea82704,14400311,0,0x0,8
tick,0x7ff86ea82704,14402242,0,0x0,8
tick,0x7ff86ea82704,14404215,0,0x0,8
tick,0x7ff86ea82704,14406173,0,0x0,8
tick,0x7ff86ea82704,14408276,0,0x0,8
tick,0x7ff86ea82704,14410350,0,0x0,8
tick,0x7ff86ea82704,14412276,0,0x0,8
tick,0x7ff86ea82704,14414236,0,0x0,8
tick,0x7ff86ea82704,14416290,0,0x0,8
tick,0x7ff86ea82704,14418367,0,0x0,8
tick,0x7ff86ea82704,14420209,0,0x0,8
tick,0x7ff86ea82704,14422269,0,0x0,8
tick,0x7ff86ea82704,14424173,0,0x0,8
tick,0x7ff86ea82704,14426259,0,0x0,8
tick,0x7ff86ea82704,14428336,0,0x0,8
tick,0x7ff86ea82704,14430129,0,0x0,8
tick,0x7ff86ea82704,14432257,0,0x0,8
tick,0x7ff86ea82704,14434147,0,0x0,8
tick,0x7ff86ea82704,14436166,0,0x0,8
tick,0x7ff86ea82704,14438196,0,0x0,8
tick,0x7ff86ea82704,14440071,0,0x0,8
tick,0x7ff86ea82704,14442244,0,0x0,8
tick,0x7ff86ea82704,14444095,0,0x0,8
tick,0x7ff86ea82704,14446105,0,0x0,8
tick,0x7ff86ea82704,14448145,0,0x0,8
tick,0x7ff86ea82704,14450097,0,0x0,8
tick,0x7ff86ea82704,14452084,0,0x0,8
tick,0x7ff86ea82704,14454194,0,0x0,8
tick,0x7ff86ea82704,14456169,0,0x0,8
tick,0x7ff86ea82704,14458128,0,0x0,8
tick,0x7ff86ea82704,14460101,0,0x0,8
tick,0x7ff86ea82704,14462109,0,0x0,8
tick,0x7ff86ea82704,14464160,0,0x0,8
tick,0x7ff86ea82704,14466070,0,0x0,8
tick,0x7ff86ea82704,14468199,0,0x0,8
tick,0x7ff86ea82704,14470009,0,0x0,8
tick,0x7ff86ea82704,14472148,0,0x0,8
tick,0x7ff86ea82704,14474044,0,0x0,8
tick,0x7ff86ea82704,14476064,0,0x0,8
tick,0x7ff86ea82704,14478040,0,0x0,8
tick,0x7ff86ea82704,14480068,0,0x0,8
tick,0x7ff86ea82704,14482113,0,0x0,8
tick,0x7ff86ea82704,14484058,0,0x0,8
tick,0x7ff86ea82704,14486103,0,0x0,8
tick,0x7ff86ea82704,14488215,0,0x0,8
tick,0x7ff86ea82704,14490036,0,0x0,8
tick,0x7ff86ea82704,14492361,0,0x0,8
tick,0x7ff86ea82704,14494105,0,0x0,8
tick,0x7ff86ea82704,14495984,0,0x0,8
tick,0x7ff86ea82704,14497955,0,0x0,8
tick,0x7ff86ea82704,14499992,0,0x0,8
tick,0x7ff86ea82704,14502211,0,0x0,8
tick,0x7ff86ea82704,14504024,0,0x0,8
tick,0x7ff86ea82704,14506051,0,0x0,8
tick,0x7ff86ea82704,14508113,0,0x0,8
tick,0x7ff86ea82704,14509936,0,0x0,8
tick,0x7ff86ea82704,14511996,0,0x0,8
tick,0x7ff86ea82704,14514097,0,0x0,8
tick,0x7ff86ea82704,14515957,0,0x0,8
tick,0x7ff86ea82704,14517947,0,0x0,8
tick,0x7ff86ea82704,14519985,0,0x0,8
tick,0x7ff86ea82704,14521990,0,0x0,8
tick,0x7ff86ea82704,14524017,0,0x0,8
tick,0x7ff86ea82704,14525877,0,0x0,8
tick,0x7ff86ea82704,14527952,0,0x0,8
tick,0x7ff86ea82704,14529920,0,0x0,8
tick,0x7ff86ea82704,14531888,0,0x0,8
tick,0x7ff86ea82704,14533892,0,0x0,8
tick,0x7ff86ea82704,14535885,0,0x0,8
tick,0x7ff86ea82704,14538008,0,0x0,8
tick,0x7ff86ea82704,14539901,0,0x0,8
tick,0x7ff86ea82704,14541921,0,0x0,8
tick,0x7ff86ea82704,14543942,0,0x0,8
tick,0x7ff86ea82704,14545861,0,0x0,8
tick,0x7ff86ea82704,14547923,0,0x0,8
tick,0x7ff86ea82704,14549840,0,0x0,8
tick,0x7ff86ea82704,14551827,0,0x0,8
tick,0x7ff86ea82704,14553889,0,0x0,8
tick,0x7ff86ea82704,14555856,0,0x0,8
tick,0x7ff86ea82704,14557959,0,0x0,8
tick,0x7ff86ea82704,14559922,0,0x0,8
tick,0x7ff86ea82704,14561935,0,0x0,8
tick,0x7ff86ea82704,14563842,0,0x0,8
tick,0x7ff86ea82704,14565842,0,0x0,8
tick,0x7ff86ea82704,14567886,0,0x0,8
tick,0x7ff86ea82704,14570037,0,0x0,8
tick,0x7ff86ea82704,14571840,0,0x0,8
tick,0x7ff86ea82704,14573855,0,0x0,8
tick,0x7ff86ea82704,14575792,0,0x0,8
tick,0x7ff86ea82704,14578054,0,0x0,8
tick,0x7ff86ea82704,14580066,0,0x0,8
tick,0x7ff86ea82704,14581874,0,0x0,8
tick,0x7ff86ea82704,14583819,0,0x0,8
tick,0x7ff86ea82704,14585805,0,0x0,8
tick,0x7ff86ea82704,14587853,0,0x0,8
tick,0x7ff86ea82704,14589737,0,0x0,8
tick,0x7ff86ea82704,14591936,0,0x0,8
tick,0x7ff86ea82704,14593769,0,0x0,8
tick,0x7ff86ea82704,14595684,0,0x0,8
tick,0x7ff86ea82704,14597694,0,0x0,8
tick,0x7ff86ea82704,14599669,0,0x0,8
tick,0x7ff86ea82704,14601658,0,0x0,8
tick,0x7ff86ea82704,14603686,0,0x0,8
tick,0x7ff86ea82704,14605749,0,0x0,8
tick,0x7ff86ea82704,14607647,0,0x0,8
tick,0x7ff86ea82704,14609655,0,0x0,8
tick,0x7ff86ea82704,14611633,0,0x0,8
tick,0x7ff86ea82704,14613711,0,0x0,8
tick,0x7ff86ea82704,14615662,0,0x0,8
tick,0x7ff86ea82704,14617745,0,0x0,8
tick,0x7ff86ea82704,14619655,0,0x0,8
tick,0x7ff86ea82704,14621623,0,0x0,8
tick,0x7ff86ea82704,14623739,0,0x0,8
tick,0x7ff86ea82704,14625647,0,0x0,8
tick,0x7ff86ea82704,14627761,0,0x0,8
tick,0x7ff86ea82704,14629961,0,0x0,8
tick,0x7ff86ea82704,14631738,0,0x0,8
tick,0x7ff86ea82704,14633630,0,0x0,8
tick,0x7ff86ea82704,14635793,0,0x0,8
tick,0x7ff86ea82704,14637744,0,0x0,8
tick,0x7ff86ea82704,14639776,0,0x0,8
tick,0x7ff86ea82704,14641668,0,0x0,8
tick,0x7ff86ea82704,14643664,0,0x0,8
tick,0x7ff86ea82704,14645631,0,0x0,8
tick,0x7ff86ea82704,14647557,0,0x0,8
tick,0x7ff86ea82704,14649642,0,0x0,8
tick,0x7ff86ea82704,14651600,0,0x0,8
tick,0x7ff86ea82704,14653547,0,0x0,8
tick,0x7ff86ea82704,14655537,0,0x0,8
tick,0x7ff86ea82704,14657646,0,0x0,8
tick,0x7ff86ea82704,14659550,0,0x0,8
tick,0x7ff86ea82704,14661563,0,0x0,8
tick,0x7ff86ea82704,14663540,0,0x0,8
tick,0x7ff86ea82704,14665534,0,0x0,8
tick,0x7ff86ea82704,14667518,0,0x0,8
tick,0x7ff86ea82704,14669512,0,0x0,8
tick,0x7ff86ea82704,14671535,0,0x0,8
tick,0x7ff86ea82704,14673516,0,0x0,8
tick,0x7ff86ea82704,14675497,0,0x0,8
tick,0x7ff86ea82704,14677519,0,0x0,8
tick,0x7ff86ea82704,14679472,0,0x0,8
tick,0x7ff86ea82704,14681495,0,0x0,8
tick,0x7ff86ea82704,14683442,0,0x0,8
tick,0x7ff86ea82704,14685460,0,0x0,8
tick,0x7ff86ea82704,14687548,0,0x0,8
tick,0x7ff86ea82704,14689396,0,0x0,8
tick,0x7ff86ea82704,14691512,0,0x0,8
tick,0x7ff86ea82704,14693438,0,0x0,8
tick,0x7ff86ea82704,14695444,0,0x0,8
tick,0x7ff86ea82704,14697419,0,0x0,8
tick,0x7ff86ea82704,14699448,0,0x0,8
tick,0x7ff86ea82704,14701390,0,0x0,8
tick,0x7ff86ea82704,14703452,0,0x0,8
tick,0x7ff86ea82704,14705420,0,0x0,8
tick,0x7ff86ea82704,14707450,0,0x0,8
tick,0x7ff86ea82704,14709444,0,0x0,8
tick,0x7ff86ea82704,14711485,0,0x0,8
tick,0x7ff86ea82704,14713373,0,0x0,8
tick,0x7ff86ea82704,14715484,0,0x0,8
tick,0x7ff86ea82704,14720242,0,0x0,8
tick,0x7ff86ea82704,14721546,0,0x0,8
tick,0x7ff86ea82704,14723577,0,0x0,8
tick,0x7ff86ea82704,14725405,0,0x0,8
tick,0x7ff86ea82704,14727540,0,0x0,8
tick,0x7ff86ea82704,14729579,0,0x0,8
tick,0x7ff86ea82704,14731578,0,0x0,8
tick,0x7ff86ea82704,14733464,0,0x0,8
tick,0x7ff86ea82704,14735538,0,0x0,8
tick,0x7ff86ea82704,14737365,0,0x0,8
tick,0x7ff86ea82704,14739557,0,0x0,8
tick,0x7ff86ea82704,14741405,0,0x0,8
tick,0x7ff86ea82704,14743537,0,0x0,8
tick,0x7ff86ea82704,14745396,0,0x0,8
tick,0x7ff86ea82704,14747587,0,0x0,8
tick,0x7ff86ea82704,14749436,0,0x0,8
tick,0x7ff86ea82704,14751576,0,0x0,8
tick,0x7ff86ea82704,14753418,0,0x0,8
tick,0x7ff86ea82704,14755443,0,0x0,8
tick,0x7ff86ea82704,14757385,0,0x0,8
tick,0x7ff86ea82704,14759465,0,0x0,8
tick,0x7ff86ea82704,14761345,0,0x0,8
tick,0x7ff86ea82704,14763501,0,0x0,8
tick,0x7ff86ea82704,14765393,0,0x0,8
tick,0x7ff86ea82704,14767480,0,0x0,8
tick,0x7ff86ea82704,14769633,0,0x0,8
tick,0x7ff86ea82704,14771917,0,0x0,8
tick,0x7ff86ea82704,14773390,0,0x0,8
tick,0x7ff86ea82704,14775543,0,0x0,8
tick,0x7ff86ea82704,14777478,0,0x0,8
tick,0x7ff86ea82704,14779565,0,0x0,8
tick,0x7ff86ea82704,14781455,0,0x0,8
tick,0x7ff86ea82704,14783579,0,0x0,8
tick,0x7ff86ea82704,14785504,0,0x0,8
tick,0x7ff86ea82704,14787616,0,0x0,8
tick,0x7ff86ea82704,14789574,0,0x0,8
tick,0x7ff86ea82704,14791460,0,0x0,8
tick,0x7ff86ea82704,14793604,0,0x0,8
tick,0x7ff86ea82704,14795448,0,0x0,8
tick,0x7ff86ea82704,14798046,0,0x0,8
tick,0x7ff86ea82704,14801941,0,0x0,8
tick,0x7ff86ea82704,14803347,0,0x0,8
tick,0x7ff86ea82704,14805599,0,0x0,8
tick,0x7ff86ea82704,14807336,0,0x0,8
tick,0x7ff86ea82704,14809249,0,0x0,8
tick,0x7ff86ea82704,14811333,0,0x0,8
tick,0x7ff86ea82704,14813351,0,0x0,8
tick,0x7ff86ea82704,14815210,0,0x0,8
tick,0x7ff86ea82704,14817264,0,0x0,8
tick,0x7ff86ea82704,14819308,0,0x0,8
tick,0x7ff86ea82704,14821190,0,0x0,8
tick,0x7ff86ea82704,14823291,0,0x0,8
tick,0x7ff86ea82704,14825277,0,0x0,8
tick,0x7ff86ea82704,14827402,0,0x0,8
tick,0x7ff86ea82704,14829438,0,0x0,8
tick,0x7ff86ea82704,14831509,0,0x0,8
tick,0x7ff86ea82704,14833377,0,0x0,8
tick,0x7ff86ea82704,14835177,0,0x0,8
tick,0x7ff86ea82704,14837258,0,0x0,8
tick,0x7ff86ea82704,14839586,0,0x0,8
tick,0x7ff86ea82704,14841308,0,0x0,8
tick,0x7ff86ea82704,14843166,0,0x0,8
tick,0x7ff86ea82704,14845242,0,0x0,8
tick,0x7ff86ea82704,14847182,0,0x0,8
tick,0x7ff86ea82704,14849282,0,0x0,8
tick,0x7ff86ea82704,14851160,0,0x0,8
tick,0x7ff86ea82704,14853217,0,0x0,8
tick,0x7ff86ea82704,14855188,0,0x0,8
tick,0x7ff86ea82704,14857340,0,0x0,8
tick,0x7ff86ea82704,14859196,0,0x0,8
tick,0x7ff86ea82704,14861204,0,0x0,8
tick,0x7ff86ea82704,14863195,0,0x0,8
tick,0x7ff86ea82704,14865154,0,0x0,8
tick,0x7ff86ea82704,14867083,0,0x0,8
tick,0x7ff86ea82704,14869241,0,0x0,8
tick,0x7ff86ea82704,14871013,0,0x0,8
tick,0x7ff86ea82704,14873278,0,0x0,8
tick,0x7ff86ea82704,14875140,0,0x0,8
tick,0x7ff86ea82704,14877004,0,0x0,8
tick,0x7ff86ea82704,14879038,0,0x0,8
tick,0x7ff86ea82704,14880985,0,0x0,8
tick,0x7ff86ea82704,14883109,0,0x0,8
tick,0x7ff86ea82704,14884952,0,0x0,8
tick,0x7ff86ea82704,14886982,0,0x0,8
tick,0x7ff86ea82704,14888999,0,0x0,8
tick,0x7ff86ea82704,14890992,0,0x0,8
tick,0x7ff86ea82704,14892955,0,0x0,8
tick,0x7ff86ea82704,14895080,0,0x0,8
tick,0x7ff86ea82704,14896966,0,0x0,8
tick,0x7ff86ea82704,14898972,0,0x0,8
tick,0x7ff86ea82704,14900917,0,0x0,8
tick,0x7ff86ea82704,14903037,0,0x0,8
tick,0x7ff86ea82704,14904932,0,0x0,8
tick,0x7ff86ea82704,14906913,0,0x0,8
tick,0x7ff86ea82704,14908931,0,0x0,8
tick,0x7ff86ea82704,14910928,0,0x0,8
tick,0x7ff86ea82704,14912907,0,0x0,8
tick,0x7ff86ea82704,14915026,0,0x0,8
tick,0x7ff86ea82704,14916843,0,0x0,8
tick,0x7ff86ea82704,14918964,0,0x0,8
tick,0x7ff86ea82704,14920914,0,0x0,8
tick,0x7ff86ea82704,14922923,0,0x0,8
tick,0x7ff86ea82704,14924896,0,0x0,8
tick,0x7ff86ea82704,14926923,0,0x0,8
tick,0x7ff86ea82704,14928888,0,0x0,8
tick,0x7ff86ea82704,14930887,0,0x0,8
tick,0x7ff86ea82704,14932880,0,0x0,8
tick,0x7ff86ea82704,14934907,0,0x0,8
tick,0x7ff86ea82704,14936835,0,0x0,8
tick,0x7ff86ea82704,14938887,0,0x0,8
tick,0x7ff86ea82704,14940847,0,0x0,8
tick,0x7ff86ea82704,14943073,0,0x0,8
tick,0x7ff86ea82704,14944823,0,0x0,8
tick,0x7ff86ea82704,14946876,0,0x0,8
tick,0x7ff86ea82704,14948803,0,0x0,8
tick,0x7ff86ea82704,14950846,0,0x0,8
tick,0x7ff86ea82704,14952803,0,0x0,8
tick,0x7ff86ea82704,14954928,0,0x0,8
tick,0x7ff86ea82704,14956784,0,0x0,8
tick,0x7ff86ea82704,14958842,0,0x0,8
tick,0x7ff86ea82704,14960813,0,0x0,8
tick,0x7ff86ea82704,14962831,0,0x0,8
tick,0x7ff86ea82704,14964766,0,0x0,8
tick,0x7ff86ea82704,14966895,0,0x0,8
tick,0x7ff86ea82704,14968904,0,0x0,8
tick,0x7ff86ea82704,14970792,0,0x0,8
tick,0x7ff86ea82704,14972780,0,0x0,8
tick,0x7ff86ea82704,14974796,0,0x0,8
tick,0x7ff86ea82704,14976732,0,0x0,8
tick,0x7ff86ea82704,14978828,0,0x0,8
tick,0x7ff86ea82704,14980743,0,0x0,8
tick,0x7ff86ea82704,14982749,0,0x0,8
tick,0x7ff86ea82704,14984756,0,0x0,8
tick,0x7ff86ea82704,14986822,0,0x0,8
tick,0x7ff86ea82704,14988777,0,0x0,8
tick,0x7ff86ea82704,14990804,0,0x0,8
tick,0x7ff86ea82704,14992715,0,0x0,8
tick,0x7ff86ea82704,14994821,0,0x0,8
tick,0x7ff86ea82704,14996736,0,0x0,8
tick,0x7ff86ea82704,14998707,0,0x0,8
tick,0x7ff86ea82704,15000771,0,0x0,8
tick,0x7ff86ea82704,15002695,0,0x0,8
tick,0x7ff86ea82704,15004815,0,0x0,8
tick,0x7ff86ea82704,15006687,0,0x0,8
tick,0x7ff86ea82704,15008666,0,0x0,8
tick,0x7ff86ea82704,15010688,0,0x0,8
tick,0x7ff86ea82704,15012723,0,0x0,8
tick,0x7ff86ea82704,15014727,0,0x0,8
tick,0x7ff86ea82704,15016612,0,0x0,8
tick,0x7ff86ea82704,15018763,0,0x0,8
tick,0x7ff86ea82704,15020819,0,0x0,8
tick,0x7ff86ea82704,15022636,0,0x0,8
tick,0x7ff86ea82704,15024651,0,0x0,8
tick,0x7ff86ea82704,15026604,0,0x0,8
tick,0x7ff86ea82704,15028660,0,0x0,8
tick,0x7ff86ea82704,15030666,0,0x0,8
tick,0x7ff86ea82704,15032636,0,0x0,8
tick,0x7ff86ea82704,15034597,0,0x0,8
tick,0x7ff86ea82704,15036546,0,0x0,8
tick,0x7ff86ea82704,15038617,0,0x0,8
tick,0x7ff86ea82704,15040616,0,0x0,8
tick,0x7ff86ea82704,15042648,0,0x0,8
tick,0x7ff86ea82704,15044575,0,0x0,8
tick,0x7ff86ea82704,15046609,0,0x0,8
tick,0x7ff86ea82704,15048572,0,0x0,8
tick,0x7ff86ea82704,15050563,0,0x0,8
tick,0x7ff86ea82704,15052559,0,0x0,8
tick,0x7ff86ea82704,15054532,0,0x0,8
tick,0x7ff86ea82704,15056557,0,0x0,8
tick,0x7ff86ea82704,15058499,0,0x0,8
tick,0x7ff86ea82704,15060602,0,0x0,8
tick,0x7ff86ea82704,15062749,0,0x0,8
tick,0x7ff86ea82704,15064521,0,0x0,8
tick,0x7ff86ea82704,15066503,0,0x0,8
tick,0x7ff86ea82704,15068653,0,0x0,8
tick,0x7ff86ea82704,15070457,0,0x0,8
tick,0x7ff86ea82704,15072571,0,0x0,8
tick,0x7ff86ea82704,15074473,0,0x0,8
tick,0x7ff86ea82704,15076499,0,0x0,8
tick,0x7ff86ea82704,15081208,0,0x0,8
tick,0x7ff86ea82704,15082574,0,0x0,8
tick,0x7ff86ea82704,15084580,0,0x0,8
tick,0x7ff86ea82704,15086579,0,0x0,8
tick,0x7ff86ea82704,15088712,0,0x0,8
tick,0x7ff86ea82704,15090582,0,0x0,8
tick,0x7ff86ea82704,15092330,0,0x0,8
tick,0x7ff86ea82704,15094649,0,0x0,8
tick,0x7ff86ea82704,15096559,0,0x0,8
tick,0x7ff86ea82704,15098715,0,0x0,8
tick,0x7ff86ea82704,15100532,0,0x0,8
tick,0x7ff86ea82704,15102573,0,0x0,8
tick,0x7ff86ea82704,15104540,0,0x0,8
tick,0x7ff86ea82704,15106574,0,0x0,8
tick,0x7ff86ea82704,15108538,0,0x0,8
tick,0x7ff86ea82704,15110638,0,0x0,8
tick,0x7ff86ea82704,15112699,0,0x0,8
tick,0x7ff86ea82704,15114620,0,0x0,8
tick,0x7ff86ea82704,15116642,0,0x0,8
tick,0x7ff86ea82704,15118583,0,0x0,8
tick,0x7ff86ea82704,15120579,0,0x0,8
tick,0x7ff86ea82704,15122648,0,0x0,8
tick,0x7ff86ea82704,15124533,0,0x0,8
tick,0x7ff86ea82704,15126484,0,0x0,8
tick,0x7ff86ea82704,15128526,0,0x0,8
tick,0x7ff86ea82704,15130617,0,0x0,8
tick,0x7ff86ea82704,15132549,0,0x0,8
tick,0x7ff86ea82704,15134552,0,0x0,8
tick,0x7ff86ea82704,15136473,0,0x0,8
tick,0x7ff86ea82704,15138546,0,0x0,8
tick,0x7ff86ea82704,15140446,0,0x0,8
tick,0x7ff86ea82704,15142479,0,0x0,8
tick,0x7ff86ea82704,15144451,0,0x0,8
tick,0x7ff86ea82704,15146465,0,0x0,8
tick,0x7ff86ea82704,15148398,0,0x0,8
tick,0x7ff86ea82704,15150637,0,0x0,8
tick,0x7ff86ea82704,15152589,0,0x0,8
tick,0x7ff86ea82704,15154400,0,0x0,8
tick,0x7ff86ea82704,15156466,0,0x0,8
tick,0x7ff86ea82704,15158425,0,0x0,8
tick,0x7ff86ea82704,15160574,0,0x0,8
tick,0x7ff86ea82704,15162433,0,0x0,8
tick,0x7ff86ea82704,15164396,0,0x0,8
tick,0x7ff86ea82704,15166492,0,0x0,8
tick,0x7ff86ea82704,15168335,0,0x0,8
tick,0x7ff86ea82704,15170615,0,0x0,8
tick,0x7ff86ea82704,15172363,0,0x0,8
tick,0x7ff86ea82704,15174552,0,0x0,8
tick,0x7ff86ea82704,15176160,0,0x0,8
tick,0x7ff86ea82704,15178493,0,0x0,8
tick,0x7ff86ea82704,15180524,0,0x0,8
tick,0x7ff86ea82704,15182564,0,0x0,8
tick,0x7ff86ea82704,15184395,0,0x0,8
tick,0x7ff86ea82704,15186483,0,0x0,8
tick,0x7ff86ea82704,15188347,0,0x0,8
tick,0x7ff86ea82704,15190487,0,0x0,8
tick,0x7ff86ea82704,15192356,0,0x0,8
tick,0x7ff86ea82704,15194501,0,0x0,8
tick,0x7ff86ea82704,15196315,0,0x0,8
tick,0x7ff86ea82704,15198491,0,0x0,8
tick,0x7ff86ea82704,15200317,0,0x0,8
tick,0x7ff86ea82704,15202407,0,0x0,8
tick,0x7ff86ea82704,15204309,0,0x0,8
tick,0x7ff86ea82704,15206507,0,0x0,8
tick,0x7ff86ea82704,15208343,0,0x0,8
tick,0x7ff86ea82704,15210378,0,0x0,8
tick,0x7ff86ea82704,15212303,0,0x0,8
tick,0x7ff86ea82704,15214395,0,0x0,8
tick,0x7ff86ea82704,15216465,0,0x0,8
tick,0x7ff86ea82704,15218299,0,0x0,8
tick,0x7ff86ea82704,15220157,0,0x0,8
tick,0x7ff86ea82704,15222365,0,0x0,8
tick,0x7ff86ea82704,15224270,0,0x0,8
tick,0x7ff86ea82704,15226337,0,0x0,8
tick,0x7ff86ea82704,15228174,0,0x0,8
tick,0x7ff86ea82704,15230345,0,0x0,8
tick,0x7ff86ea82704,15232215,0,0x0,8
tick,0x7ff86ea82704,15234320,0,0x0,8
tick,0x7ff86ea82704,15236121,0,0x0,8
tick,0x7ff86ea82704,15238363,0,0x0,8
tick,0x7ff86ea82704,15240286,0,0x0,8
tick,0x7ff86ea82704,15242656,0,0x0,8
tick,0x7ff86ea82704,15244390,0,0x0,8
tick,0x7ff86ea82704,15246296,0,0x0,8
tick,0x7ff86ea82704,15248386,0,0x0,8
tick,0x7ff86ea82704,15250313,0,0x0,8
tick,0x7ff86ea82704,15252146,0,0x0,8
tick,0x7ff86ea82704,15254208,0,0x0,8
tick,0x7ff86ea82704,15256333,0,0x0,8
tick,0x7ff86ea82704,15258500,0,0x0,8
tick,0x7ff86ea82704,15260126,0,0x0,8
tick,0x7ff86ea82704,15262511,0,0x0,8
tick,0x7ff86ea82704,15264319,0,0x0,8
tick,0x7ff86ea82704,15266522,0,0x0,8
tick,0x7ff86ea82704,15268650,0,0x0,8
tick,0x7ff86ea82704,15270441,0,0x0,8
tick,0x7ff86ea82704,15272077,0,0x0,8
tick,0x7ff86ea82704,15274167,0,0x0,8
tick,0x7ff86ea82704,15276269,0,0x0,8
tick,0x7ff86ea82704,15278081,0,0x0,8
tick,0x7ff86ea82704,15280426,0,0x0,8
tick,0x7ff86ea82704,15282255,0,0x0,8
tick,0x7ff86ea82704,15284339,0,0x0,8
tick,0x7ff86ea82704,15286015,0,0x0,8
tick,0x7ff86ea82704,15288071,0,0x0,8
tick,0x7ff86ea82704,15290132,0,0x0,8
tick,0x7ff86ea82704,15292075,0,0x0,8
tick,0x7ff86ea82704,15294573,0,0x0,8
tick,0x7ff86ea82704,15296003,0,0x0,8
tick,0x7ff86ea82704,15298790,0,0x0,8
tick,0x7ff86ea82704,15300588,0,0x0,8
tick,0x7ff86ea82704,15302599,0,0x0,8
tick,0x7ff86ea82704,15304120,0,0x0,8
tick,0x7ff86ea82704,15306252,0,0x0,8
tick,0x7ff86ea82704,15308415,0,0x0,8
tick,0x7ff86ea82704,15310373,0,0x0,8
tick,0x7ff86ea82704,15313378,0,0x0,8
tick,0x7ff86ea82704,15314974,0,0x0,8
tick,0x7ff86ea82704,15317258,0,0x0,8
tick,0x7ff86ea82704,15318964,0,0x0,8
tick,0x7ff86ea82704,15321173,0,0x0,8
tick,0x7ff86ea82704,15323173,0,0x0,8
tick,0x7ff86ea82704,15325255,0,0x0,8
tick,0x7ff86ea82704,15327527,0,0x0,8
tick,0x7ff86ea82704,15329252,0,0x0,8
tick,0x7ff86ea82704,15330989,0,0x0,8
tick,0x7ff86ea82704,15333259,0,0x0,8
tick,0x7ff86ea82704,15335115,0,0x0,8
tick,0x7ff86ea82704,15336992,0,0x0,8
tick,0x7ff86ea82704,15339046,0,0x0,8
tick,0x7ff86ea82704,15341096,0,0x0,8
tick,0x7ff86ea82704,15342903,0,0x0,8
tick,0x7ff86ea82704,15344986,0,0x0,8
tick,0x7ff86ea82704,15346805,0,0x0,8
tick,0x7ff86ea82704,15349014,0,0x0,8
tick,0x7ff86ea82704,15350750,0,0x0,8
tick,0x7ff86ea82704,15352875,0,0x0,8
tick,0x7ff86ea82704,15355239,0,0x0,8
tick,0x7ff86ea82704,15357033,0,0x0,8
tick,0x7ff86ea82704,15358864,0,0x0,8
tick,0x7ff86ea82704,15360839,0,0x0,8
tick,0x7ff86ea82704,15363044,0,0x0,8
tick,0x7ff86ea82704,15365742,0,0x0,8
tick,0x7ff86ea82704,15366684,0,0x0,8
tick,0x7ff86ea82704,15368720,0,0x0,8
tick,0x7ff86ea82704,15370791,0,0x0,8
tick,0x7ff86ea82704,15372781,0,0x0,8
tick,0x7ff86ea82704,15374775,0,0x0,8
tick,0x7ff86ea82704,15376787,0,0x0,8
tick,0x7ff86ea82704,15378706,0,0x0,8
tick,0x7ff86ea82704,15380703,0,0x0,8
tick,0x7ff86ea82704,15382737,0,0x0,8
tick,0x7ff86ea82704,15384922,0,0x0,8
tick,0x7ff86ea82704,15386631,0,0x0,8
tick,0x7ff86ea82704,15388699,0,0x0,8
tick,0x7ff86ea82704,15390608,0,0x0,8
tick,0x7ff86ea82704,15392709,0,0x0,8
tick,0x7ff86ea82704,15394749,0,0x0,8
tick,0x7ff86ea82704,15396611,0,0x0,8
tick,0x7ff86ea82704,15398694,0,0x0,8
tick,0x7ff86ea82704,15400586,0,0x0,8
tick,0x7ff86ea82704,15402671,0,0x0,8
tick,0x7ff86ea82704,15404736,0,0x0,8
tick,0x7ff86ea82704,15406780,0,0x0,8
tick,0x7ff86ea82704,15408662,0,0x0,8
tick,0x7ff86ea82704,15410651,0,0x0,8
tick,0x7ff86ea82704,15412633,0,0x0,8
tick,0x7ff86ea82704,15414526,0,0x0,8
tick,0x7ff86ea82704,15416590,0,0x0,8
tick,0x7ff86ea82704,15418501,0,0x0,8
tick,0x7ff86ea82704,15420566,0,0x0,8
tick,0x7ff86ea82704,15422656,0,0x0,8
tick,0x7ff86ea82704,15424565,0,0x0,8
tick,0x7ff86ea82704,15426485,0,0x0,8
tick,0x7ff86ea82704,15428615,0,0x0,8
tick,0x7ff86ea82704,15430509,0,0x0,8
tick,0x7ff86ea82704,15432582,0,0x0,8
tick,0x7ff86ea82704,15434541,0,0x0,8
tick,0x7ff86ea82704,15436688,0,0x0,8
tick,0x7ff86ea82704,15438622,0,0x0,8
tick,0x7ff86ea82704,15440456,0,0x0,8
tick,0x7ff86ea82704,15442478,0,0x0,8
tick,0x7ff86ea82704,15444557,0,0x0,8
tick,0x7ff86ea82704,15446367,0,0x0,8
tick,0x7ff86ea82704,15448557,0,0x0,8
tick,0x7ff86ea82704,15450394,0,0x0,8
tick,0x7ff86ea82704,15452514,0,0x0,8
tick,0x7ff86ea82704,15454381,0,0x0,8
tick,0x7ff86ea82704,15456475,0,0x0,8
tick,0x7ff86ea82704,15458352,0,0x0,8
tick,0x7ff86ea82704,15460523,0,0x0,8
tick,0x7ff86ea82704,15462419,0,0x0,8
tick,0x7ff86ea82704,15464484,0,0x0,8
tick,0x7ff86ea82704,15466451,0,0x0,8
tick,0x7ff86ea82704,15468466,0,0x0,8
tick,0x7ff86ea82704,15470438,0,0x0,8
tick,0x7ff86ea82704,15472402,0,0x0,8
tick,0x7ff86ea82704,15474347,0,0x0,8
tick,0x7ff86ea82704,15476456,0,0x0,8
tick,0x7ff86ea82704,15479970,0,0x0,8
tick,0x7ff86ea82704,15481673,0,0x0,8
tick,0x7ff86ea82704,15483666,0,0x0,8
tick,0x7ff86ea82704,15485753,0,0x0,8
tick,0x7ff86ea82704,15487745,0,0x0,8
tick,0x7ff86ea82704,15489728,0,0x0,8
tick,0x7ff86ea82704,15491819,0,0x0,8
tick,0x7ff86ea82704,15493709,0,0x0,8
tick,0x7ff86ea82704,15495876,0,0x0,8
tick,0x7ff86ea82704,15497654,0,0x0,8
tick,0x7ff86ea82704,15499694,0,0x0,8
tick,0x7ff86ea82704,15501612,0,0x0,8
tick,0x7ff86ea82704,15503591,0,0x0,8
tick,0x7ff86ea82704,15505456,0,0x0,8
tick,0x7ff86ea82704,15507618,0,0x0,8
tick,0x7ff86ea82704,15509654,0,0x0,8
tick,0x7ff86ea82704,15511495,0,0x0,8
tick,0x7ff86ea82704,15513617,0,0x0,8
tick,0x7ff86ea82704,15515534,0,0x0,8
tick,0x7ff86ea82704,15517672,0,0x0,8
tick,0x7ff86ea82704,15519742,0,0x0,8
tick,0x7ff86ea82704,15521679,0,0x0,8
tick,0x7ff86ea82704,15523602,0,0x0,8
tick,0x7ff86ea82704,15525566,0,0x0,8
tick,0x7ff86ea82704,15527697,0,0x0,8
tick,0x7ff86ea82704,15529586,0,0x0,8
tick,0x7ff86ea82704,15531540,0,0x0,8
tick,0x7ff86ea82704,15533503,0,0x0,8
tick,0x7ff86ea82704,15535513,0,0x0,8
tick,0x7ff86ea82704,15537617,0,0x0,8
tick,0x7ff86ea82704,15539492,0,0x0,8
tick,0x7ff86ea82704,15541441,0,0x0,8
tick,0x7ff86ea82704,15543423,0,0x0,8
tick,0x7ff86ea82704,15545445,0,0x0,8
tick,0x7ff86ea82704,15547454,0,0x0,8
tick,0x7ff86ea82704,15549512,0,0x0,8
tick,0x7ff86ea82704,15551645,0,0x0,8
tick,0x7ff86ea82704,15553404,0,0x0,8
tick,0x7ff86ea82704,15555483,0,0x0,8
tick,0x7ff86ea82704,15557344,0,0x0,8
tick,0x7ff86ea82704,15559420,0,0x0,8
tick,0x7ff86ea82704,15561502,0,0x0,8
tick,0x7ff86ea82704,15563495,0,0x0,8
tick,0x7ff86ea82704,15565468,0,0x0,8
tick,0x7ff86ea82704,15567478,0,0x0,8
tick,0x7ff86ea82704,15569438,0,0x0,8
tick,0x7ff86ea82704,15571370,0,0x0,8
tick,0x7ff86ea82704,15573418,0,0x0,8
tick,0x7ff86ea82704,15575332,0,0x0,8
tick,0x7ff86ea82704,15577565,0,0x0,8
tick,0x7ff86ea82704,15579408,0,0x0,8
tick,0x7ff86ea82704,15581475,0,0x0,8
tick,0x7ff86ea82704,15583345,0,0x0,8
tick,0x7ff86ea82704,15585619,0,0x0,8
tick,0x7ff86ea82704,15587193,0,0x0,8
tick,0x7ff86ea82704,15589418,0,0x0,8
tick,0x7ff86ea82704,15591300,0,0x0,8
tick,0x7ff86ea82704,15593386,0,0x0,8
tick,0x7ff86ea82704,15595294,0,0x0,8
tick,0x7ff86ea82704,15597314,0,0x0,8
tick,0x7ff86ea82704,15599106,0,0x0,8
tick,0x7ff86ea82704,15601310,0,0x0,8
tick,0x7ff86ea82704,15603190,0,0x0,8
tick,0x7ff86ea82704,15605350,0,0x0,8
tick,0x7ff86ea82704,15607300,0,0x0,8
tick,0x7ff86ea82704,15609283,0,0x0,8
tick,0x7ff86ea82704,15611334,0,0x0,8
tick,0x7ff86ea82704,15613323,0,0x0,8
tick,0x7ff86ea82704,15615214,0,0x0,8
tick,0x7ff86ea82704,15617350,0,0x0,8
tick,0x7ff86ea82704,15619105,0,0x0,8
tick,0x7ff86ea82704,15621525,0,0x0,8
tick,0x7ff86ea82704,15623168,0,0x0,8
tick,0x7ff86ea82704,15625332,0,0x0,8
tick,0x7ff86ea82704,15627218,0,0x0,8
tick,0x7ff86ea82704,15629418,0,0x0,8
tick,0x7ff86ea82704,15631241,0,0x0,8
tick,0x7ff86ea82704,15633314,0,0x0,8
tick,0x7ff86ea82704,15635280,0,0x0,8
tick,0x7ff86ea82704,15637191,0,0x0,8
tick,0x7ff86ea82704,15639183,0,0x0,8
tick,0x7ff86ea82704,15641302,0,0x0,8
tick,0x7ff86ea82704,15643167,0,0x0,8
tick,0x7ff86ea82704,15645225,0,0x0,8
tick,0x7ff86ea82704,15647142,0,0x0,8
tick,0x7ff86ea82704,15649207,0,0x0,8
tick,0x7ff86ea82704,15651200,0,0x0,8
tick,0x7ff86ea82704,15653180,0,0x0,8
tick,0x7ff86ea82704,15655241,0,0x0,8
tick,0x7ff86ea82704,15657215,0,0x0,8
tick,0x7ff86ea82704,15659303,0,0x0,8
tick,0x7ff86ea82704,15661081,0,0x0,8
tick,0x7ff86ea82704,15663236,0,0x0,8
tick,0x7ff86ea82704,15665008,0,0x0,8
tick,0x7ff86ea82704,15667097,0,0x0,8
tick,0x7ff86ea82704,15668911,0,0x0,8
tick,0x7ff86ea82704,15671201,0,0x0,8
tick,0x7ff86ea82704,15672917,0,0x0,8
tick,0x7ff86ea82704,15675211,0,0x0,8
tick,0x7ff86ea82704,15676935,0,0x0,8
tick,0x7ff86ea82704,15679102,0,0x0,8
tick,0x7ff86ea82704,15681040,0,0x0,8
tick,0x7ff86ea82704,15683060,0,0x0,8
tick,0x7ff86ea82704,15685002,0,0x0,8
tick,0x7ff86ea82704,15687218,0,0x0,8
tick,0x7ff86ea82704,15689011,0,0x0,8
tick,0x7ff86ea82704,15691165,0,0x0,8
tick,0x7ff86ea82704,15693126,0,0x0,8
tick,0x7ff86ea82704,15694986,0,0x0,8
tick,0x7ff86ea82704,15697220,0,0x0,8
tick,0x7ff86ea82704,15699151,0,0x0,8
tick,0x7ff86ea82704,15701176,0,0x0,8
tick,0x7ff86ea82704,15702994,0,0x0,8
tick,0x7ff86ea82704,15705175,0,0x0,8
tick,0x7ff86ea82704,15706950,0,0x0,8
tick,0x7ff86ea82704,15709063,0,0x0,8
tick,0x7ff86ea82704,15710998,0,0x0,8
tick,0x7ff86ea82704,15712979,0,0x0,8
tick,0x7ff86ea82704,15715014,0,0x0,8
tick,0x7ff86ea82704,15717092,0,0x0,8
tick,0x7ff86ea82704,15719114,0,0x0,8
tick,0x7ff86ea82704,15721001,0,0x0,8
tick,0x7ff86ea82704,15723111,0,0x0,8
tick,0x7ff86ea82704,15725099,0,0x0,8
tick,0x7ff86ea82704,15726886,0,0x0,8
tick,0x7ff86ea82704,15729146,0,0x0,8
tick,0x7ff86ea82704,15730925,0,0x0,8
tick,0x7ff86ea82704,15733166,0,0x0,8
tick,0x7ff86ea82704,15734967,0,0x0,8
tick,0x7ff86ea82704,15737080,0,0x0,8
tick,0x7ff86ea82704,15738891,0,0x0,8
tick,0x7ff86ea82704,15741119,0,0x0,8
tick,0x7ff86ea82704,15743092,0,0x0,8
tick,0x7ff86ea82704,15744965,0,0x0,8
tick,0x7ff86ea82704,15746941,0,0x0,8
tick,0x7ff86ea82704,15749375,0,0x0,8
tick,0x7ff86ea82704,15751302,0,0x0,8
tick,0x7ff86ea82704,15753165,0,0x0,8
tick,0x7ff86ea82704,15755251,0,0x0,8
tick,0x7ff86ea82704,15757126,0,0x0,8
tick,0x7ff86ea82704,15758918,0,0x0,8
tick,0x7ff86ea82704,15761247,0,0x0,8
tick,0x7ff86ea82704,15763172,0,0x0,8
tick,0x7ff86ea82704,15765169,0,0x0,8
tick,0x7ff86ea82704,15767424,0,0x0,8
tick,0x7ff86ea82704,15769604,0,0x0,8
tick,0x7ff86ea82704,15771318,0,0x0,8
tick,0x7ff86ea82704,15773445,0,0x0,8
tick,0x7ff86ea82704,15775227,0,0x0,8
tick,0x7ff86ea82704,15776822,0,0x0,8
tick,0x7ff86ea82704,15779930,0,0x0,8
tick,0x7ff86ea82704,15781909,0,0x0,8
tick,0x7ff86ea82704,15783988,0,0x0,8
tick,0x7ff86ea82704,15785665,0,0x0,8
tick,0x7ff86ea82704,15787939,0,0x0,8
tick,0x7ff86ea82704,15790293,0,0x0,8
tick,0x7ff86ea82704,15791835,0,0x0,8
tick,0x7ff86ea82704,15793960,0,0x0,8
tick,0x7ff86ea82704,15795971,0,0x0,8
tick,0x7ff86ea82704,15798223,0,0x0,8
tick,0x7ff86ea82704,15800283,0,0x0,8
tick,0x7ff86ea82704,15802020,0,0x0,8
tick,0x7ff86ea82704,15803662,0,0x0,8
tick,0x7ff86ea82704,15805992,0,0x0,8
tick,0x7ff86ea82704,15807800,0,0x0,8
tick,0x7ff86ea82704,15809857,0,0x0,8
tick,0x7ff86ea82704,15811963,0,0x0,8
tick,0x7ff86ea82704,15813789,0,0x0,8
tick,0x7ff86ea82704,15815830,0,0x0,8
tick,0x7ff86ea82704,15817790,0,0x0,8
tick,0x7ff86ea82704,15819798,0,0x0,8
tick,0x7ff86ea82704,15822013,0,0x0,8
tick,0x7ff86ea82704,15823665,0,0x0,8
tick,0x7ff86ea82704,15825613,0,0x0,8
tick,0x7ff86ea82704,15827732,0,0x0,8
tick,0x7ff86ea82704,15829542,0,0x0,8
tick,0x7ff86ea82704,15831712,0,0x0,8
tick,0x7ff86ea82704,15833561,0,0x0,8
tick,0x7ff86ea82704,15835700,0,0x0,8
tick,0x7ff86ea82704,15837764,0,0x0,8
tick,0x7ff86ea82704,15839609,0,0x0,8
tick,0x7ff86ea82704,15841544,0,0x0,8
tick,0x7ff86ea82704,15843557,0,0x0,8
tick,0x7ff86ea82704,15845615,0,0x0,8
tick,0x7ff86ea82704,15847608,0,0x0,8
tick,0x7ff86ea82704,15849504,0,0x0,8
tick,0x7ff86ea82704,15851443,0,0x0,8
tick,0x7ff86ea82704,15853547,0,0x0,8
tick,0x7ff86ea82704,15855498,0,0x0,8
tick,0x7ff86ea82704,15857514,0,0x0,8
tick,0x7ff86ea82704,15859449,0,0x0,8
tick,0x7ff86ea82704,15861497,0,0x0,8
tick,0x7ff86ea82704,15863452,0,0x0,8
tick,0x7ff86ea82704,15865482,0,0x0,8
tick,0x7ff86ea82704,15867484,0,0x0,8
tick,0x7ff86ea82704,15869466,0,0x0,8
tick,0x7ff86ea82704,15871513,0,0x0,8
tick,0x7ff86ea82704,15873566,0,0x0,8
tick,0x7ff86ea82704,15875437,0,0x0,8
tick,0x7ff86ea82704,15877476,0,0x0,8
tick,0x7ff86ea82704,15879511,0,0x0,8
tick,0x7ff86ea82704,15881295,0,0x0,8
tick,0x7ff86ea82704,15883430,0,0x0,8
tick,0x7ff86ea82704,15885426,0,0x0,8
tick,0x7ff86ea82704,15887448,0,0x0,8
tick,0x7ff86ea82704,15889428,0,0x0,8
tick,0x7ff86ea82704,15891470,0,0x0,8
tick,0x7ff86ea82704,15893352,0,0x0,8
tick,0x7ff86ea82704,15895449,0,0x0,8
tick,0x7ff86ea82704,15897408,0,0x0,8
tick,0x7ff86ea82704,15899490,0,0x0,8
tick,0x7ff86ea82704,15901484,0,0x0,8
tick,0x7ff86ea82704,15903510,0,0x0,8
tick,0x7ff86ea82704,15905513,0,0x0,8
tick,0x7ff86ea82704,15907340,0,0x0,8
tick,0x7ff86ea82704,15909388,0,0x0,8
tick,0x7ff86ea82704,15911442,0,0x0,8
tick,0x7ff86ea82704,15913398,0,0x0,8
tick,0x7ff86ea82704,15915533,0,0x0,8
tick,0x7ff86ea82704,15917303,0,0x0,8
tick,0x7ff86ea82704,15919530,0,0x0,8
tick,0x7ff86ea82704,15921542,0,0x0,8
tick,0x7ff86ea82704,15923285,0,0x0,8
tick,0x7ff86ea82704,15925470,0,0x0,8
tick,0x7ff86ea82704,15927444,0,0x0,8
tick,0x7ff86ea82704,15929395,0,0x0,8
tick,0x7ff86ea82704,15931513,0,0x0,8
tick,0x7ff86ea82704,15933410,0,0x0,8
tick,0x7ff86ea82704,15935491,0,0x0,8
tick,0x7ff86ea82704,15937386,0,0x0,8
tick,0x7ff86ea82704,15939587,0,0x0,8
tick,0x7ff86ea82704,15941475,0,0x0,8
tick,0x7ff86ea82704,15943343,0,0x0,8
tick,0x7ff86ea82704,15945592,0,0x0,8
tick,0x7ff86ea82704,15947265,0,0x0,8
tick,0x7ff86ea82704,15949427,0,0x0,8
tick,0x7ff86ea82704,15951306,0,0x0,8
tick,0x7ff86ea82704,15953374,0,0x0,8
tick,0x7ff86ea82704,15955256,0,0x0,8
tick,0x7ff86ea82704,15957234,0,0x0,8
tick,0x7ff86ea82704,15959313,0,0x0,8
tick,0x7ff86ea82704,15961268,0,0x0,8
tick,0x7ff86ea82704,15963227,0,0x0,8
tick,0x7ff86ea82704,15965685,0,0x0,8
tick,0x7ff86ea82704,15967298,0,0x0,8
tick,0x7ff86ea82704,15969231,0,0x0,8
tick,0x7ff86ea82704,15971264,0,0x0,8
tick,0x7ff86ea82704,15973338,0,0x0,8
tick,0x7ff86ea82704,15975272,0,0x0,8
tick,0x7ff86ea82704,15977278,0,0x0,8
tick,0x7ff86ea82704,15979103,0,0x0,8
tick,0x7ff86ea82704,15981190,0,0x0,8
tick,0x7ff86ea82704,15983350,0,0x0,8
tick,0x7ff86ea82704,15985295,0,0x0,8
tick,0x7ff86ea82704,15987476,0,0x0,8
tick,0x7ff86ea82704,15989299,0,0x0,8
tick,0x7ff86ea82704,15991343,0,0x0,8
tick,0x7ff86ea82704,15993444,0,0x0,8
tick,0x7ff86ea82704,15995167,0,0x0,8
tick,0x7ff86ea82704,15997476,0,0x0,8
tick,0x7ff86ea82704,15999415,0,0x0,8
tick,0x7ff86ea82704,16001225,0,0x0,8
tick,0x7ff86ea82704,16003186,0,0x0,8
tick,0x7ff86ea82704,16005239,0,0x0,8
tick,0x7ff86ea82704,16007211,0,0x0,8
tick,0x7ff86ea82704,16009313,0,0x0,8
tick,0x7ff86ea82704,16011270,0,0x0,8
tick,0x7ff86ea82704,16013256,0,0x0,8
tick,0x7ff86ea82704,16015496,0,0x0,8
tick,0x7ff86ea82704,16017218,0,0x0,8
tick,0x7ff86ea82704,16019181,0,0x0,8
tick,0x7ff86ea82704,16021159,0,0x0,8
tick,0x7ff86ea82704,16023360,0,0x0,8
tick,0x7ff86ea82704,16025156,0,0x0,8
tick,0x7ff86ea82704,16027169,0,0x0,8
tick,0x7ff86ea82704,16029191,0,0x0,8
tick,0x7ff86ea82704,16031027,0,0x0,8
tick,0x7ff86ea82704,16033214,0,0x0,8
tick,0x7ff86ea82704,16035178,0,0x0,8
tick,0x7ff86ea82704,16037266,0,0x0,8
tick,0x7ff86ea82704,16039181,0,0x0,8
tick,0x7ff86ea82704,16041074,0,0x0,8
tick,0x7ff86ea82704,16043031,0,0x0,8
tick,0x7ff86ea82704,16044979,0,0x0,8
tick,0x7ff86ea82704,16047191,0,0x0,8
tick,0x7ff86ea82704,16049002,0,0x0,8
tick,0x7ff86ea82704,16051295,0,0x0,8
tick,0x7ff86ea82704,16053028,0,0x0,8
tick,0x7ff86ea82704,16055206,0,0x0,8
tick,0x7ff86ea82704,16056968,0,0x0,8
tick,0x7ff86ea82704,16059263,0,0x0,8
tick,0x7ff86ea82704,16061357,0,0x0,8
tick,0x7ff86ea82704,16063046,0,0x0,8
tick,0x7ff86ea82704,16065161,0,0x0,8
tick,0x7ff86ea82704,16067085,0,0x0,8
tick,0x7ff86ea82704,16069135,0,0x0,8
tick,0x7ff86ea82704,16071252,0,0x0,8
tick,0x7ff86ea82704,16072997,0,0x0,8
tick,0x7ff86ea82704,16075124,0,0x0,8
tick,0x7ff86ea82704,16077457,0,0x0,8
tick,0x7ff86ea82704,16079365,0,0x0,8
tick,0x7ff86ea82704,16083809,0,0x0,8
tick,0x7ff86ea82704,16085932,0,0x0,8
tick,0x7ff86ea82704,16088009,0,0x0,8
tick,0x7ff86ea82704,16089897,0,0x0,8
tick,0x7ff86ea82704,16091914,0,0x0,8
tick,0x7ff86ea82704,16094071,0,0x0,8
tick,0x7ff86ea82704,16095906,0,0x0,8
tick,0x7ff86ea82704,16097774,0,0x0,8
tick,0x7ff86ea82704,16099750,0,0x0,8
tick,0x7ff86ea82704,16102061,0,0x0,8
tick,0x7ff86ea82704,16103908,0,0x0,8
tick,0x7ff86ea82704,16105993,0,0x0,8
tick,0x7ff86ea82704,16107829,0,0x0,8
tick,0x7ff86ea82704,16110107,0,0x0,8
tick,0x7ff86ea82704,16111695,0,0x0,8
tick,0x7ff86ea82704,16113970,0,0x0,8
tick,0x7ff86ea82704,16115728,0,0x0,8
tick,0x7ff86ea82704,16117921,0,0x0,8
tick,0x7ff86ea82704,16120149,0,0x0,8
tick,0x7ff86ea82704,16121743,0,0x0,8
tick,0x7ff86ea82704,16123790,0,0x0,8
tick,0x7ff86ea82704,16125766,0,0x0,8
tick,0x7ff86ea82704,16127995,0,0x0,8
tick,0x7ff86ea82704,16129845,0,0x0,8
tick,0x7ff86ea82704,16132132,0,0x0,8
tick,0x7ff86ea82704,16133754,0,0x0,8
tick,0x7ff86ea82704,16135774,0,0x0,8
tick,0x7ff86ea82704,16137680,0,0x0,8
tick,0x7ff86ea82704,16139804,0,0x0,8
tick,0x7ff86ea82704,16141885,0,0x0,8
tick,0x7ff86ea82704,16143713,0,0x0,8
tick,0x7ff86ea82704,16145735,0,0x0,8
tick,0x7ff86ea82704,16147616,0,0x0,8
tick,0x7ff86ea82704,16149753,0,0x0,8
tick,0x7ff86ea82704,16151681,0,0x0,8
tick,0x7ff86ea82704,16153707,0,0x0,8
tick,0x7ff86ea82704,16155846,0,0x0,8
tick,0x7ff86ea82704,16157992,0,0x0,8
tick,0x7ff86ea82704,16159758,0,0x0,8
tick,0x7ff86ea82704,16161824,0,0x0,8
tick,0x7ff86ea82704,16163893,0,0x0,8
tick,0x7ff86ea82704,16165969,0,0x0,8
tick,0x7ff86ea82704,16167685,0,0x0,8
tick,0x7ff86ea82704,16169641,0,0x0,8
tick,0x7ff86ea82704,16171782,0,0x0,8
tick,0x7ff86ea82704,16173740,0,0x0,8
tick,0x7ff86ea82704,16175560,0,0x0,8
tick,0x7ff86ea82704,16177622,0,0x0,8
tick,0x7ff86ea82704,16179905,0,0x0,8
tick,0x7ff86ea82704,16181733,0,0x0,8
tick,0x7ff86ea82704,16183604,0,0x0,8
tick,0x7ff86ea82704,16185911,0,0x0,8
tick,0x7ff86ea82704,16187822,0,0x0,8
tick,0x7ff86ea82704,16189493,0,0x0,8
tick,0x7ff86ea82704,16191657,0,0x0,8
tick,0x7ff86ea82704,16193529,0,0x0,8
tick,0x7ff86ea82704,16195765,0,0x0,8
tick,0x7ff86ea82704,16197580,0,0x0,8
tick,0x7ff86ea82704,16199799,0,0x0,8
tick,0x7ff86ea82704,16201648,0,0x0,8
tick,0x7ff86ea82704,16203835,0,0x0,8
tick,0x7ff86ea82704,16205703,0,0x0,8
tick,0x7ff86ea82704,16207592,0,0x0,8
tick,0x7ff86ea82704,16209829,0,0x0,8
tick,0x7ff86ea82704,16211462,0,0x0,8
tick,0x7ff86ea82704,16213621,0,0x0,8
tick,0x7ff86ea82704,16215437,0,0x0,8
tick,0x7ff86ea82704,16217631,0,0x0,8
tick,0x7ff86ea82704,16219458,0,0x0,8
tick,0x7ff86ea82704,16221597,0,0x0,8
tick,0x7ff86ea82704,16223411,0,0x0,8
tick,0x7ff86ea82704,16225718,0,0x0,8
tick,0x7ff86ea82704,16227370,0,0x0,8
tick,0x7ff86ea82704,16229769,0,0x0,8
tick,0x7ff86ea82704,16231400,0,0x0,8
tick,0x7ff86ea82704,16233696,0,0x0,8
tick,0x7ff86ea82704,16235472,0,0x0,8
tick,0x7ff86ea82704,16237903,0,0x0,8
tick,0x7ff86ea82704,16239595,0,0x0,8
tick,0x7ff86ea82704,16241668,0,0x0,8
tick,0x7ff86ea82704,16243731,0,0x0,8
tick,0x7ff86ea82704,16246042,0,0x0,8
tick,0x7ff86ea82704,16248081,0,0x0,8
tick,0x7ff86ea82704,16249891,0,0x0,8
tick,0x7ff86ea82704,16251651,0,0x0,8
tick,0x7ff86ea82704,16254153,0,0x0,8
tick,0x7ff86ea82704,16255776,0,0x0,8
tick,0x7ff86ea82704,16257754,0,0x0,8
tick,0x7ff86ea82704,16260021,0,0x0,8
tick,0x7ff86ea82704,16261738,0,0x0,8
tick,0x7ff86ea82704,16263461,0,0x0,8
tick,0x7ff86ea82704,16265624,0,0x0,8
tick,0x7ff86ea82704,16268005,0,0x0,8
tick,0x7ff86ea82704,16269742,0,0x0,8
tick,0x7ff86ea82704,16271912,0,0x0,8
tick,0x7ff86ea82704,16274176,0,0x0,8
tick,0x7ff86ea82704,16275535,0,0x0,8
tick,0x7ff86ea82704,16277863,0,0x0,8
tick,0x7ff86ea82704,16279496,0,0x0,8
tick,0x7ff86ea82704,16281609,0,0x0,8
tick,0x7ff86ea82704,16283940,0,0x0,8
tick,0x7ff86ea82704,16285461,0,0x0,8
tick,0x7ff86ea82704,16287438,0,0x0,8
tick,0x7ff86ea82704,16289579,0,0x0,8
tick,0x7ff86ea82704,16291499,0,0x0,8
tick,0x7ff86ea82704,16293498,0,0x0,8
tick,0x7ff86ea82704,16295306,0,0x0,8
tick,0x7ff86ea82704,16297356,0,0x0,8
tick,0x7ff86ea82704,16299748,0,0x0,8
tick,0x7ff86ea82704,16301480,0,0x0,8
tick,0x7ff86ea82704,16303604,0,0x0,8
tick,0x7ff86ea82704,16306064,0,0x0,8
tick,0x7ff86ea82704,16309417,0,0x0,8
tick,0x7ff86ea82704,16310906,0,0x0,8
tick,0x7ff86ea82704,16313906,0,0x0,8
tick,0x7ff86ea82704,16316249,0,0x0,8
tick,0x7ff86ea82704,16318775,0,0x0,8
tick,0x7ff86ea82704,16320316,0,0x0,8
tick,0x7ff86ea82704,16323089,0,0x0,8
tick,0x7ff86ea82704,16324312,0,0x0,8
tick,0x7ff86ea82704,16326577,0,0x0,8
tick,0x7ff86ea82704,16328237,0,0x0,8
tick,0x7ff86ea82704,16330357,0,0x0,8
tick,0x7ff86ea82704,16332271,0,0x0,8
tick,0x7ff86ea82704,16334328,0,0x0,8
tick,0x7ff86ea82704,16336439,0,0x0,8
tick,0x7ff86ea82704,16338666,0,0x0,8
tick,0x7ff86ea82704,16340879,0,0x0,8
tick,0x7ff86ea82704,16342335,0,0x0,8
tick,0x7ff86ea82704,16344425,0,0x0,8
tick,0x7ff86ea82704,16346159,0,0x0,8
tick,0x7ff86ea82704,16348160,0,0x0,8
tick,0x7ff86ea82704,16350602,0,0x0,8
tick,0x7ff86ea82704,16352422,0,0x0,8
tick,0x7ff86ea82704,16354275,0,0x0,8
tick,0x7ff86ea82704,16356577,0,0x0,8
tick,0x7ff86ea82704,16358143,0,0x0,8
tick,0x7ff86ea82704,16360489,0,0x0,8
tick,0x7ff86ea82704,16362219,0,0x0,8
tick,0x7ff86ea82704,16364150,0,0x0,8
tick,0x7ff86ea82704,16366233,0,0x0,8
tick,0x7ff86ea82704,16368725,0,0x0,8
tick,0x7ff86ea82704,16370314,0,0x0,8
tick,0x7ff86ea82704,16372302,0,0x0,8
tick,0x7ff86ea82704,16374399,0,0x0,8
tick,0x7ff86ea82704,16376292,0,0x0,8
tick,0x7ff86ea82704,16378242,0,0x0,8
tick,0x7ff86ea82704,16380171,0,0x0,8
tick,0x7ff86ea82704,16382185,0,0x0,8
tick,0x7ff86ea82704,16384133,0,0x0,8
tick,0x7ff86ea82704,16386140,0,0x0,8
tick,0x7ff86ea82704,16388297,0,0x0,8
tick,0x7ff86ea82704,16390437,0,0x0,8
tick,0x7ff86ea82704,16392086,0,0x0,8
tick,0x7ff86ea82704,16394155,0,0x0,8
tick,0x7ff86ea82704,16396210,0,0x0,8
tick,0x7ff86ea82704,16398379,0,0x0,8
tick,0x7ff86ea82704,16400168,0,0x0,8
tick,0x7ff86ea82704,16402217,0,0x0,8
tick,0x7ff86ea82704,16404011,0,0x0,8
tick,0x7ff86ea82704,16406265,0,0x0,8
tick,0x7ff86ea82704,16408005,0,0x0,8
tick,0x7ff86ea82704,16410215,0,0x0,8
tick,0x7ff86ea82704,16412057,0,0x0,8
tick,0x7ff86ea82704,16414131,0,0x0,8
tick,0x7ff86ea82704,16416228,0,0x0,8
tick,0x7ff86ea82704,16418033,0,0x0,8
tick,0x7ff86ea82704,16420051,0,0x0,8
tick,0x7ff86ea82704,16422156,0,0x0,8
tick,0x7ff86ea82704,16424141,0,0x0,8
tick,0x7ff86ea82704,16426176,0,0x0,8
tick,0x7ff86ea82704,16428133,0,0x0,8
tick,0x7ff86ea82704,16430148,0,0x0,8
tick,0x7ff86ea82704,16432149,0,0x0,8
tick,0x7ff86ea82704,16434052,0,0x0,8
tick,0x7ff86ea82704,16436069,0,0x0,8
tick,0x7ff86ea82704,16438005,0,0x0,8
tick,0x7ff86ea82704,16440609,0,0x0,8
tick,0x7ff86ea82704,16441969,0,0x0,8
tick,0x7ff86ea82704,16444067,0,0x0,8
tick,0x7ff86ea82704,16446046,0,0x0,8
tick,0x7ff86ea82704,16448135,0,0x0,8
tick,0x7ff86ea82704,16450243,0,0x0,8
tick,0x7ff86ea82704,16452174,0,0x0,8
tick,0x7ff86ea82704,16454162,0,0x0,8
tick,0x7ff86ea82704,16456083,0,0x0,8
tick,0x7ff86ea82704,16458108,0,0x0,8
tick,0x7ff86ea82704,16460234,0,0x0,8
tick,0x7ff86ea82704,16462148,0,0x0,8
tick,0x7ff86ea82704,16463905,0,0x0,8
tick,0x7ff86ea82704,16466116,0,0x0,8
tick,0x7ff86ea82704,16468140,0,0x0,8
tick,0x7ff86ea82704,16470017,0,0x0,8
tick,0x7ff86ea82704,16472333,0,0x0,8
tick,0x7ff86ea82704,16474237,0,0x0,8
tick,0x7ff86ea82704,16476014,0,0x0,8
tick,0x7ff86ea82704,16477887,0,0x0,8
tick,0x7ff86ea82704,16480030,0,0x0,8
tick,0x7ff86ea82704,16482068,0,0x0,8
tick,0x7ff86ea82704,16484118,0,0x0,8
tick,0x7ff86ea82704,16485955,0,0x0,8
tick,0x7ff86ea82704,16487996,0,0x0,8
tick,0x7ff86ea82704,16490260,0,0x0,8
tick,0x7ff86ea82704,16491988,0,0x0,8
tick,0x7ff86ea82704,16493792,0,0x0,8
tick,0x7ff86ea82704,16496108,0,0x0,8
tick,0x7ff86ea82704,16498062,0,0x0,8
tick,0x7ff86ea82704,16500459,0,0x0,8
tick,0x7ff86ea82704,16501938,0,0x0,8
tick,0x7ff86ea82704,16504090,0,0x0,8
tick,0x7ff86ea82704,16506396,0,0x0,8
tick,0x7ff86ea82704,16508086,0,0x0,8
tick,0x7ff86ea82704,16510262,0,0x0,8
tick,0x7ff86ea82704,16512159,0,0x0,8
tick,0x7ff86ea82704,16514031,0,0x0,8
tick,0x7ff86ea82704,16515788,0,0x0,8
tick,0x7ff86ea82704,16517922,0,0x0,8
tick,0x7ff86ea82704,16520271,0,0x0,8
tick,0x7ff86ea82704,16521986,0,0x0,8
tick,0x7ff86ea82704,16523924,0,0x0,8
tick,0x7ff86ea82704,16525984,0,0x0,8
tick,0x7ff86ea82704,16527985,0,0x0,8
tick,0x7ff86ea82704,16530001,0,0x0,8
tick,0x7ff86ea82704,16532152,0,0x0,8
tick,0x7ff86ea82704,16534048,0,0x0,8
tick,0x7ff86ea82704,16535967,0,0x0,8
tick,0x7ff86ea82704,16537831,0,0x0,8
tick,0x7ff86ea82704,16540452,0,0x0,8
tick,0x7ff86ea82704,16541539,0,0x0,8
tick,0x7ff86ea82704,16543573,0,0x0,8
tick,0x7ff86ea82704,16545503,0,0x0,8
tick,0x7ff86ea82704,16547632,0,0x0,8
tick,0x7ff86ea82704,16549633,0,0x0,8
tick,0x7ff86ea82704,16551587,0,0x0,8
tick,0x7ff86ea82704,16553668,0,0x0,8
tick,0x7ff86ea82704,16555628,0,0x0,8
tick,0x7ff86ea82704,16557475,0,0x0,8
tick,0x7ff86ea82704,16559692,0,0x0,8
tick,0x7ff86ea82704,16561649,0,0x0,8
tick,0x7ff86ea82704,16563567,0,0x0,8
tick,0x7ff86ea82704,16565492,0,0x0,8
tick,0x7ff86ea82704,16567599,0,0x0,8
tick,0x7ff86ea82704,16569619,0,0x0,8
tick,0x7ff86ea82704,16571409,0,0x0,8
tick,0x7ff86ea82704,16573657,0,0x0,8
tick,0x7ff86ea82704,16575880,0,0x0,8
tick,0x7ff86ea82704,16577410,0,0x0,8
tick,0x7ff86ea82704,16579658,0,0x0,8
tick,0x7ff86ea82704,16581593,0,0x0,8
tick,0x7ff86ea82704,16583639,0,0x0,8
tick,0x7ff86ea82704,16585444,0,0x0,8
tick,0x7ff86ea82704,16587710,0,0x0,8
tick,0x7ff86ea82704,16589753,0,0x0,8
tick,0x7ff86ea82704,16591672,0,0x0,8
tick,0x7ff86ea82704,16593429,0,0x0,8
tick,0x7ff86ea82704,16595559,0,0x0,8
tick,0x7ff86ea82704,16597764,0,0x0,8
tick,0x7ff86ea82704,16599480,0,0x0,8
tick,0x7ff86ea82704,16601602,0,0x0,8
tick,0x7ff86ea82704,16603394,0,0x0,8
tick,0x7ff86ea82704,16605725,0,0x0,8
tick,0x7ff86ea82704,16607712,0,0x0,8
tick,0x7ff86ea82704,16609417,0,0x0,8
tick,0x7ff86ea82704,16611514,0,0x0,8
tick,0x7ff86ea82704,16613609,0,0x0,8
tick,0x7ff86ea82704,16615523,0,0x0,8
tick,0x7ff86ea82704,16617544,0,0x0,8
tick,0x7ff86ea82704,16619413,0,0x0,8
tick,0x7ff86ea82704,16621597,0,0x0,8
tick,0x7ff86ea82704,16623601,0,0x0,8
tick,0x7ff86ea82704,16625372,0,0x0,8
tick,0x7ff86ea82704,16627480,0,0x0,8
tick,0x7ff86ea82704,16629387,0,0x0,8
tick,0x7ff86ea82704,16631307,0,0x0,8
tick,0x7ff86ea82704,16633407,0,0x0,8
tick,0x7ff86ea82704,16635444,0,0x0,8
tick,0x7ff86ea82704,16637664,0,0x0,8
tick,0x7ff86ea82704,16639416,0,0x0,8
tick,0x7ff86ea82704,16641351,0,0x0,8
tick,0x7ff86ea82704,16643280,0,0x0,8
tick,0x7ff86ea82704,16645602,0,0x0,8
tick,0x7ff86ea82704,16647385,0,0x0,8
tick,0x7ff86ea82704,16649340,0,0x0,8
tick,0x7ff86ea82704,16651426,0,0x0,8
tick,0x7ff86ea82704,16653465,0,0x0,8
tick,0x7ff86ea82704,16655660,0,0x0,8
tick,0x7ff86ea82704,16657584,0,0x0,8
tick,0x7ff86ea82704,16659261,0,0x0,8
tick,0x7ff86ea82704,16661317,0,0x0,8
tick,0x7ff86ea82704,16663390,0,0x0,8
tick,0x7ff86ea82704,16665461,0,0x0,8
tick,0x7ff86ea82704,16667509,0,0x0,8
tick,0x7ff86ea82704,16669643,0,0x0,8
tick,0x7ff86ea82704,16671418,0,0x0,8
tick,0x7ff86ea82704,16673430,0,0x0,8
tick,0x7ff86ea82704,16675415,0,0x0,8
tick,0x7ff86ea82704,16677507,0,0x0,8
tick,0x7ff86ea82704,16679783,0,0x0,8
tick,0x7ff86ea82704,16681289,0,0x0,8
tick,0x7ff86ea82704,16683192,0,0x0,8
tick,0x7ff86ea82704,16685272,0,0x0,8
tick,0x7ff86ea82704,16687176,0,0x0,8
tick,0x7ff86ea82704,16689297,0,0x0,8
tick,0x7ff86ea82704,16691193,0,0x0,8
tick,0x7ff86ea82704,16693403,0,0x0,8
tick,0x7ff86ea82704,16695285,0,0x0,8
tick,0x7ff86ea82704,16697205,0,0x0,8
tick,0x7ff86ea82704,16699096,0,0x0,8
tick,0x7ff86ea82704,16701223,0,0x0,8
tick,0x7ff86ea82704,16703161,0,0x0,8
tick,0x7ff86ea82704,16705282,0,0x0,8
tick,0x7ff86ea82704,16707220,0,0x0,8
tick,0x7ff86ea82704,16709142,0,0x0,8
tick,0x7ff86ea82704,16711079,0,0x0,8
tick,0x7ff86ea82704,16713245,0,0x0,8
tick,0x7ff86ea82704,16715111,0,0x0,8
tick,0x7ff86ea82704,16717151,0,0x0,8
tick,0x7ff86ea82704,16719163,0,0x0,8
tick,0x7ff86ea82704,16721183,0,0x0,8
tick,0x7ff86ea82704,16723131,0,0x0,8
tick,0x7ff86ea82704,16725213,0,0x0,8
tick,0x7ff86ea82704,16727136,0,0x0,8
tick,0x7ff86ea82704,16729109,0,0x0,8
tick,0x7ff86ea82704,16731092,0,0x0,8
tick,0x7ff86ea82704,16733126,0,0x0,8
tick,0x7ff86ea82704,16735123,0,0x0,8
tick,0x7ff86ea82704,16737166,0,0x0,8
tick,0x7ff86ea82704,16739026,0,0x0,8
tick,0x7ff86ea82704,16741069,0,0x0,8
tick,0x7ff86ea82704,16743060,0,0x0,8
tick,0x7ff86ea82704,16744980,0,0x0,8
tick,0x7ff86ea82704,16747043,0,0x0,8
tick,0x7ff86ea82704,16749013,0,0x0,8
tick,0x7ff86ea82704,16751105,0,0x0,8
tick,0x7ff86ea82704,16753084,0,0x0,8
tick,0x7ff86ea82704,16755055,0,0x0,8
tick,0x7ff86ea82704,16757099,0,0x0,8
tick,0x7ff86ea82704,16759049,0,0x0,8
tick,0x7ff86ea82704,16761053,0,0x0,8
tick,0x7ff86ea82704,16763088,0,0x0,8
tick,0x7ff86ea82704,16764967,0,0x0,8
tick,0x7ff86ea82704,16767107,0,0x0,8
tick,0x7ff86ea82704,16768873,0,0x0,8
tick,0x7ff86ea82704,16771083,0,0x0,8
tick,0x7ff86ea82704,16773236,0,0x0,8
tick,0x7ff86ea82704,16774980,0,0x0,8
tick,0x7ff86ea82704,16776999,0,0x0,8
tick,0x7ff86ea82704,16778973,0,0x0,8
tick,0x7ff86ea82704,16781042,0,0x0,8
tick,0x7ff86ea82704,16782950,0,0x0,8
tick,0x7ff86ea82704,16784998,0,0x0,8
tick,0x7ff86ea82704,16786978,0,0x0,8
tick,0x7ff86ea82704,16788999,0,0x0,8
tick,0x7ff86ea82704,16790928,0,0x0,8
tick,0x7ff86ea82704,16792934,0,0x0,8
tick,0x7ff86ea82704,16794953,0,0x0,8
tick,0x7ff86ea82704,16796947,0,0x0,8
tick,0x7ff86ea82704,16798959,0,0x0,8
tick,0x7ff86ea82704,16800956,0,0x0,8
tick,0x7ff86ea82704,16803111,0,0x0,8
tick,0x7ff86ea82704,16805019,0,0x0,8
tick,0x7ff86ea82704,16806992,0,0x0,8
tick,0x7ff86ea82704,16808855,0,0x0,8
tick,0x7ff86ea82704,16811091,0,0x0,8
tick,0x7ff86ea82704,16813077,0,0x0,8
tick,0x7ff86ea82704,16814938,0,0x0,8
tick,0x7ff86ea82704,16816981,0,0x0,8
tick,0x7ff86ea82704,16819071,0,0x0,8
tick,0x7ff86ea82704,16820982,0,0x0,8
tick,0x7ff86ea82704,16822805,0,0x0,8
tick,0x7ff86ea82704,16824887,0,0x0,8
tick,0x7ff86ea82704,16826833,0,0x0,8
tick,0x7ff86ea82704,16828857,0,0x0,8
tick,0x7ff86ea82704,16830847,0,0x0,8
tick,0x7ff86ea82704,16833001,0,0x0,8
tick,0x7ff86ea82704,16835022,0,0x0,8
tick,0x7ff86ea82704,16836785,0,0x0,8
tick,0x7ff86ea82704,16838835,0,0x0,8
tick,0x7ff86ea82704,16840977,0,0x0,8
tick,0x7ff86ea82704,16842915,0,0x0,8
tick,0x7ff86ea82704,16844820,0,0x0,8
tick,0x7ff86ea82704,16846800,0,0x0,8
tick,0x7ff86ea82704,16848856,0,0x0,8
tick,0x7ff86ea82704,16850767,0,0x0,8
tick,0x7ff86ea82704,16852791,0,0x0,8
tick,0x7ff86ea82704,16854746,0,0x0,8
tick,0x7ff86ea82704,16856798,0,0x0,8
tick,0x7ff86ea82704,16858719,0,0x0,8
tick,0x7ff86ea82704,16860776,0,0x0,8
tick,0x7ff86ea82704,16862746,0,0x0,8
tick,0x7ff86ea82704,16864868,0,0x0,8
tick,0x7ff86ea82704,16866737,0,0x0,8
tick,0x7ff86ea82704,16868736,0,0x0,8
tick,0x7ff86ea82704,16870752,0,0x0,8
tick,0x7ff86ea82704,16873190,0,0x0,8
tick,0x7ff86ea82704,16874812,0,0x0,8
tick,0x7ff86ea82704,16876762,0,0x0,8
tick,0x7ff86ea82704,16878698,0,0x0,8
tick,0x7ff86ea82704,16880698,0,0x0,8
tick,0x7ff86ea82704,16882729,0,0x0,8
tick,0x7ff86ea82704,16884617,0,0x0,8
tick,0x7ff86ea82704,16886764,0,0x0,8
tick,0x7ff86ea82704,16889029,0,0x0,8
tick,0x7ff86ea82704,16890825,0,0x0,8
tick,0x7ff86ea82704,16892737,0,0x0,8
tick,0x7ff86ea82704,16894650,0,0x0,8
tick,0x7ff86ea82704,16896674,0,0x0,8
tick,0x7ff86ea82704,16898692,0,0x0,8
tick,0x7ff86ea82704,16900663,0,0x0,8
tick,0x7ff86ea82704,16902690,0,0x0,8
tick,0x7ff86ea82704,16904662,0,0x0,8
tick,0x7ff86ea82704,16906759,0,0x0,8
tick,0x7ff86ea82704,16908688,0,0x0,8
tick,0x7ff86ea82704,16910610,0,0x0,8
tick,0x7ff86ea82704,16912686,0,0x0,8
tick,0x7ff86ea82704,16914622,0,0x0,8
tick,0x7ff86ea82704,16916681,0,0x0,8
tick,0x7ff86ea82704,16918726,0,0x0,8
tick,0x7ff86ea82704,16920691,0,0x0,8
tick,0x7ff86ea82704,16922861,0,0x0,8
tick,0x7ff86ea82704,16924683,0,0x0,8
tick,0x7ff86ea82704,16926664,0,0x0,8
tick,0x7ff86ea82704,16928640,0,0x0,8
tick,0x7ff86ea82704,16930605,0,0x0,8
tick,0x7ff86ea82704,16932661,0,0x0,8
tick,0x7ff86ea82704,16934652,0,0x0,8
tick,0x7ff86ea82704,16936553,0,0x0,8
tick,0x7ff86ea82704,16938733,0,0x0,8
tick,0x7ff86ea82704,16940688,0,0x0,8
tick,0x7ff86ea82704,16942677,0,0x0,8
tick,0x7ff86ea82704,16944639,0,0x0,8
tick,0x7ff86ea82704,16946659,0,0x0,8
tick,0x7ff86ea82704,16948536,0,0x0,8
tick,0x7ff86ea82704,16950530,0,0x0,8
tick,0x7ff86ea82704,16952550,0,0x0,8
tick,0x7ff86ea82704,16954692,0,0x0,8
tick,0x7ff86ea82704,16956624,0,0x0,8
tick,0x7ff86ea82704,16958662,0,0x0,8
tick,0x7ff86ea82704,16960764,0,0x0,8
tick,0x7ff86ea82704,16962535,0,0x0,8
tick,0x7ff86ea82704,16964566,0,0x0,8
tick,0x7ff86ea82704,16966601,0,0x0,8
tick,0x7ff86ea82704,16968591,0,0x0,8
tick,0x7ff86ea82704,16970389,0,0x0,8
tick,0x7ff86ea82704,16972696,0,0x0,8
tick,0x7ff86ea82704,16974592,0,0x0,8
tick,0x7ff86ea82704,16976519,0,0x0,8
tick,0x7ff86ea82704,16978455,0,0x0,8
tick,0x7ff86ea82704,16980551,0,0x0,8
tick,0x7ff86ea82704,16982591,0,0x0,8
tick,0x7ff86ea82704,16984532,0,0x0,8
tick,0x7ff86ea82704,16986455,0,0x0,8
tick,0x7ff86ea82704,16988663,0,0x0,8
tick,0x7ff86ea82704,16990449,0,0x0,8
tick,0x7ff86ea82704,16992461,0,0x0,8
tick,0x7ff86ea82704,16994438,0,0x0,8
tick,0x7ff86ea82704,16996561,0,0x0,8
tick,0x7ff86ea82704,16998484,0,0x0,8
tick,0x7ff86ea82704,17000433,0,0x0,8
tick,0x7ff86ea82704,17002495,0,0x0,8
tick,0x7ff86ea82704,17004347,0,0x0,8
tick,0x7ff86ea82704,17006461,0,0x0,8
tick,0x7ff86ea82704,17008376,0,0x0,8
tick,0x7ff86ea82704,17010375,0,0x0,8
tick,0x7ff86ea82704,17012427,0,0x0,8
tick,0x7ff86ea82704,17014456,0,0x0,8
tick,0x7ff86ea82704,17016363,0,0x0,8
tick,0x7ff86ea82704,17018389,0,0x0,8
tick,0x7ff86ea82704,17020342,0,0x0,8
tick,0x7ff86ea82704,17022385,0,0x0,8
tick,0x7ff86ea82704,17024379,0,0x0,8
tick,0x7ff86ea82704,17026442,0,0x0,8
tick,0x7ff86ea82704,17028411,0,0x0,8
tick,0x7ff86ea82704,17030342,0,0x0,8
tick,0x7ff86ea82704,17032302,0,0x0,8
tick,0x7ff86ea82704,17034372,0,0x0,8
tick,0x7ff86ea82704,17036345,0,0x0,8
tick,0x7ff86ea82704,17038326,0,0x0,8
tick,0x7ff86ea82704,17040300,0,0x0,8
tick,0x7ff86ea82704,17042273,0,0x0,8
tick,0x7ff86ea82704,17044298,0,0x0,8
tick,0x7ff86ea82704,17046338,0,0x0,8
tick,0x7ff86ea82704,17048311,0,0x0,8
tick,0x7ff86ea82704,17050252,0,0x0,8
tick,0x7ff86ea82704,17052279,0,0x0,8
tick,0x7ff86ea82704,17054290,0,0x0,8
tick,0x7ff86ea82704,17056250,0,0x0,8
tick,0x7ff86ea82704,17058281,0,0x0,8
tick,0x7ff86ea82704,17060221,0,0x0,8
tick,0x7ff86ea82704,17062181,0,0x0,8
tick,0x7ff86ea82704,17064316,0,0x0,8
tick,0x7ff86ea82704,17066446,0,0x0,8
tick,0x7ff86ea82704,17068454,0,0x0,8
tick,0x7ff86ea82704,17070260,0,0x0,8
tick,0x7ff86ea82704,17072219,0,0x0,8
tick,0x7ff86ea82704,17074294,0,0x0,8
tick,0x7ff86ea82704,17076407,0,0x0,8
tick,0x7ff86ea82704,17078336,0,0x0,8
tick,0x7ff86ea82704,17080266,0,0x0,8
tick,0x7ff86ea82704,17082241,0,0x0,8
tick,0x7ff86ea82704,17084243,0,0x0,8
tick,0x7ff86ea82704,17086207,0,0x0,8
tick,0x7ff86ea82704,17088543,0,0x0,8
tick,0x7ff86ea82704,17090186,0,0x0,8
tick,0x7ff86ea82704,17092247,0,0x0,8
tick,0x7ff86ea82704,17094220,0,0x0,8
tick,0x7ff86ea82704,17096296,0,0x0,8
tick,0x7ff86ea82704,17098338,0,0x0,8
tick,0x7ff86ea82704,17103266,0,0x0,8
tick,0x7ff86ea82704,17105363,0,0x0,8
tick,0x7ff86ea82704,17107348,0,0x0,8
tick,0x7ff86ea82704,17109494,0,0x0,8
tick,0x7ff86ea82704,17111430,0,0x0,8
tick,0x7ff86ea82704,17113398,0,0x0,8
tick,0x7ff86ea82704,17115346,0,0x0,8
tick,0x7ff86ea82704,17117565,0,0x0,8
tick,0x7ff86ea82704,17119375,0,0x0,8
tick,0x7ff86ea82704,17121905,0,0x0,8
tick,0x7ff86ea82704,17123345,0,0x0,8
tick,0x7ff86ea82704,17125381,0,0x0,8
tick,0x7ff86ea82704,17127339,0,0x0,8
tick,0x7ff86ea82704,17129096,0,0x0,8
tick,0x7ff86ea82704,17131642,0,0x0,8
tick,0x7ff86ea82704,17133806,0,0x0,8
tick,0x7ff86ea82704,17135454,0,0x0,8
tick,0x7ff86ea82704,17137297,0,0x0,8
tick,0x7ff86ea82704,17139113,0,0x0,8
tick,0x7ff86ea82704,17141119,0,0x0,8
tick,0x7ff86ea82704,17143269,0,0x0,8
tick,0x7ff86ea82704,17145121,0,0x0,8
tick,0x7ff86ea82704,17147420,0,0x0,8
tick,0x7ff86ea82704,17149454,0,0x0,8
tick,0x7ff86ea82704,17151149,0,0x0,8
tick,0x7ff86ea82704,17153119,0,0x0,8
tick,0x7ff86ea82704,17155192,0,0x0,8
tick,0x7ff86ea82704,17157179,0,0x0,8
tick,0x7ff86ea82704,17159466,0,0x0,8
tick,0x7ff86ea82704,17161291,0,0x0,8
tick,0x7ff86ea82704,17163677,0,0x0,8
tick,0x7ff86ea82704,17165300,0,0x0,8
tick,0x7ff86ea82704,17167249,0,0x0,8
tick,0x7ff86ea82704,17169208,0,0x0,8
tick,0x7ff86ea82704,17171224,0,0x0,8
tick,0x7ff86ea82704,17173119,0,0x0,8
tick,0x7ff86ea82704,17175331,0,0x0,8
tick,0x7ff86ea82704,17177245,0,0x0,8
tick,0x7ff86ea82704,17179176,0,0x0,8
tick,0x7ff86ea82704,17181189,0,0x0,8
tick,0x7ff86ea82704,17183163,0,0x0,8
tick,0x7ff86ea82704,17186095,0,0x0,8
tick,0x7ff86ea82704,17189398,0,0x0,8
tick,0x7ff86ea82704,17191349,0,0x0,8
tick,0x7ff86ea82704,17194049,0,0x0,8
tick,0x7ff86ea82704,17196034,0,0x0,8
tick,0x7ff86ea82704,17198187,0,0x0,8
tick,0x7ff86ea82704,17200269,0,0x0,8
tick,0x7ff86ea82704,17201953,0,0x0,8
tick,0x7ff86ea82704,17203877,0,0x0,8
tick,0x7ff86ea82704,17206978,0,0x0,8
tick,0x7ff86ea82704,17209133,0,0x0,8
tick,0x7ff86ea82704,17210900,0,0x0,8
tick,0x7ff86ea82704,17213014,0,0x0,8
tick,0x7ff86ea82704,17215123,0,0x0,8
tick,0x7ff86ea82704,17217325,0,0x0,8
tick,0x7ff86ea82704,17218910,0,0x0,8
tick,0x7ff86ea82704,17220962,0,0x0,8
tick,0x7ff86ea82704,17224442,0,0x0,8
tick,0x7ff86ea82704,17226179,0,0x0,8
tick,0x7ff86ea82704,17228025,0,0x0,8
tick,0x7ff86ea82704,17230147,0,0x0,8
tick,0x7ff86ea82704,17231830,0,0x0,8
tick,0x7ff86ea82704,17234083,0,0x0,8
tick,0x7ff86ea82704,17236149,0,0x0,8
tick,0x7ff86ea82704,17237973,0,0x0,8
tick,0x7ff86ea82704,17242194,0,0x0,8
tick,0x7ff86ea82704,17243101,0,0x0,8
tick,0x7ff86ea82704,17245188,0,0x0,8
tick,0x7ff86ea82704,17246886,0,0x0,8
tick,0x7ff86ea82704,17249262,0,0x0,8
tick,0x7ff86ea82704,17251289,0,0x0,8
tick,0x7ff86ea82704,17252921,0,0x0,8
tick,0x7ff86ea82704,17257093,0,0x0,8
tick,0x7ff86ea82704,17257839,0,0x0,8
tick,0x7ff86ea82704,17259990,0,0x0,8
tick,0x7ff86ea82704,17262101,0,0x0,8
tick,0x7ff86ea82704,17264178,0,0x0,8
tick,0x7ff86ea82704,17265799,0,0x0,8
tick,0x7ff86ea82704,17267984,0,0x0,8
tick,0x7ff86ea82704,17270074,0,0x0,8
tick,0x7ff86ea82704,17272941,0,0x0,8
tick,0x7ff86ea82704,17274822,0,0x0,8
tick,0x7ff86ea82704,17276743,0,0x0,8
tick,0x7ff86ea82704,17278951,0,0x0,8
tick,0x7ff86ea82704,17280615,0,0x0,8
tick,0x7ff86ea82704,17282734,0,0x0,8
tick,0x7ff86ea82704,17284702,0,0x0,8
tick,0x7ff86ea82704,17286728,0,0x0,8
tick,0x7ff86ea82704,17288924,0,0x0,8
tick,0x7ff86ea82704,17290809,0,0x0,8
tick,0x7ff86ea82704,17292930,0,0x0,8
tick,0x7ff86ea82704,17294592,0,0x0,8
tick,0x7ff86ea82704,17296847,0,0x0,8
tick,0x7ff86ea82704,17298790,0,0x0,8
tick,0x7ff86ea82704,17300687,0,0x0,8
tick,0x7ff86ea82704,17302533,0,0x0,8
tick,0x7ff86ea82704,17305074,0,0x0,8
tick,0x7ff86ea82704,17306703,0,0x0,8
tick,0x7ff86ea82704,17308746,0,0x0,8
tick,0x7ff86ea82704,17310952,0,0x0,8
tick,0x7ff86ea82704,17312692,0,0x0,8
tick,0x7ff86ea82704,17314526,0,0x0,8
tick,0x7ff86ea82704,17316802,0,0x0,8
tick,0x7ff86ea82704,17318869,0,0x0,8
tick,0x7ff86ea82704,17320694,0,0x0,8
tick,0x7ff86ea82704,17323152,0,0x0,8
tick,0x7ff86ea82704,17324875,0,0x0,8
tick,0x7ff86ea82704,17326788,0,0x0,8
tick,0x7ff86ea82704,17328861,0,0x0,8
tick,0x7ff86ea82704,17330597,0,0x0,8
tick,0x7ff86ea82704,17332645,0,0x0,8
tick,0x7ff86ea82704,17334646,0,0x0,8
tick,0x7ff86ea82704,17336898,0,0x0,8
tick,0x7ff86ea82704,17338792,0,0x0,8
tick,0x7ff86ea82704,17340616,0,0x0,8
tick,0x7ff86ea82704,17342965,0,0x0,8
tick,0x7ff86ea82704,17344900,0,0x0,8
tick,0x7ff86ea82704,17346889,0,0x0,8
tick,0x7ff86ea82704,17348683,0,0x0,8
tick,0x7ff86ea82704,17350702,0,0x0,8
tick,0x7ff86ea82704,17352645,0,0x0,8
tick,0x7ff86ea82704,17354764,0,0x0,8
tick,0x7ff86ea82704,17356798,0,0x0,8
tick,0x7ff86ea82704,17358883,0,0x0,8
tick,0x7ff86ea82704,17360706,0,0x0,8
tick,0x7ff86ea82704,17362530,0,0x0,8
tick,0x7ff86ea82704,17364508,0,0x0,8
tick,0x7ff86ea82704,17366855,0,0x0,8
tick,0x7ff86ea82704,17368467,0,0x0,8
tick,0x7ff86ea82704,17370680,0,0x0,8
tick,0x7ff86ea82704,17372488,0,0x0,8
tick,0x7ff86ea82704,17374695,0,0x0,8
tick,0x7ff86ea82704,17376547,0,0x0,8
tick,0x7ff86ea82704,17378859,0,0x0,8
tick,0x7ff86ea82704,17380668,0,0x0,8
tick,0x7ff86ea82704,17382644,0,0x0,8
tick,0x7ff86ea82704,17384429,0,0x0,8
tick,0x7ff86ea82704,17386916,0,0x0,8
tick,0x7ff86ea82704,17388607,0,0x0,8
tick,0x7ff86ea82704,17390585,0,0x0,8
tick,0x7ff86ea82704,17392572,0,0x0,8
tick,0x7ff86ea82704,17394374,0,0x0,8
tick,0x7ff86ea82704,17396970,0,0x0,8
tick,0x7ff86ea82704,17398707,0,0x0,8
tick,0x7ff86ea82704,17400609,0,0x0,8
tick,0x7ff86ea82704,17402908,0,0x0,8
tick,0x7ff86ea82704,17405070,0,0x0,8
tick,0x7ff86ea82704,17406442,0,0x0,8
tick,0x7ff86ea82704,17408647,0,0x0,8
tick,0x7ff86ea82704,17410537,0,0x0,8
tick,0x7ff86ea82704,17412526,0,0x0,8
tick,0x7ff86ea82704,17414524,0,0x0,8
tick,0x7ff86ea82704,17416497,0,0x0,8
tick,0x7ff86ea82704,17418493,0,0x0,8
tick,0x7ff86ea82704,17420507,0,0x0,8
tick,0x7ff86ea82704,17422432,0,0x0,8
tick,0x7ff86ea82704,17424401,0,0x0,8
tick,0x7ff86ea82704,17426457,0,0x0,8
tick,0x7ff86ea82704,17428456,0,0x0,8
tick,0x7ff86ea82704,17430491,0,0x0,8
tick,0x7ff86ea82704,17432386,0,0x0,8
tick,0x7ff86ea82704,17434528,0,0x0,8
tick,0x7ff86ea82704,17436388,0,0x0,8
tick,0x7ff86ea82704,17438349,0,0x0,8
tick,0x7ff86ea82704,17440422,0,0x0,8
tick,0x7ff86ea82704,17442413,0,0x0,8
tick,0x7ff86ea82704,17444534,0,0x0,8
tick,0x7ff86ea82704,17446382,0,0x0,8
tick,0x7ff86ea82704,17448435,0,0x0,8
tick,0x7ff86ea82704,17450493,0,0x0,8
tick,0x7ff86ea82704,17452484,0,0x0,8
tick,0x7ff86ea82704,17454276,0,0x0,8
tick,0x7ff86ea82704,17456429,0,0x0,8
tick,0x7ff86ea82704,17458202,0,0x0,8
tick,0x7ff86ea82704,17460367,0,0x0,8
tick,0x7ff86ea82704,17462208,0,0x0,8
tick,0x7ff86ea82704,17464300,0,0x0,8
tick,0x7ff86ea82704,17466198,0,0x0,8
tick,0x7ff86ea82704,17468302,0,0x0,8
tick,0x7ff86ea82704,17470281,0,0x0,8
tick,0x7ff86ea82704,17472271,0,0x0,8
tick,0x7ff86ea82704,17474451,0,0x0,8
tick,0x7ff86ea82704,17476382,0,0x0,8
tick,0x7ff86ea82704,17478428,0,0x0,8
tick,0x7ff86ea82704,17480387,0,0x0,8
tick,0x7ff86ea82704,17482285,0,0x0,8
tick,0x7ff86ea82704,17484206,0,0x0,8
tick,0x7ff86ea82704,17486350,0,0x0,8
tick,0x7ff86ea82704,17488441,0,0x0,8
tick,0x7ff86ea82704,17490354,0,0x0,8
tick,0x7ff86ea82704,17492265,0,0x0,8
tick,0x7ff86ea82704,17494310,0,0x0,8
tick,0x7ff86ea82704,17496617,0,0x0,8
tick,0x7ff86ea82704,17498920,0,0x0,8
tick,0x7ff86ea82704,17500412,0,0x0,8
tick,0x7ff86ea82704,17502343,0,0x0,8
tick,0x7ff86ea82704,17504272,0,0x0,8
tick,0x7ff86ea82704,17506575,0,0x0,8
tick,0x7ff86ea82704,17508458,0,0x0,8
tick,0x7ff86ea82704,17510159,0,0x0,8
tick,0x7ff86ea82704,17512219,0,0x0,8
tick,0x7ff86ea82704,17514110,0,0x0,8
tick,0x7ff86ea82704,17516211,0,0x0,8
tick,0x7ff86ea82704,17518150,0,0x0,8
tick,0x7ff86ea82704,17520104,0,0x0,8
tick,0x7ff86ea82704,17522041,0,0x0,8
tick,0x7ff86ea82704,17524261,0,0x0,8
tick,0x7ff86ea82704,17526643,0,0x0,8
tick,0x7ff86ea82704,17528355,0,0x0,8
tick,0x7ff86ea82704,17530412,0,0x0,8
tick,0x7ff86ea82704,17532179,0,0x0,8
tick,0x7ff86ea82704,17534558,0,0x0,8
tick,0x7ff86ea82704,17536240,0,0x0,8
tick,0x7ff86ea82704,17538167,0,0x0,8
tick,0x7ff86ea82704,17540112,0,0x0,8
tick,0x7ff86ea82704,17542572,0,0x0,8
tick,0x7ff86ea82704,17544059,0,0x0,8
tick,0x7ff86ea82704,17546371,0,0x0,8
tick,0x7ff86ea82704,17548739,0,0x0,8
tick,0x7ff86ea82704,17550237,0,0x0,8
tick,0x7ff86ea82704,17552218,0,0x0,8
tick,0x7ff86ea82704,17554602,0,0x0,8
tick,0x7ff86ea82704,17557253,0,0x0,8
tick,0x7ff86ea82704,17559052,0,0x0,8
tick,0x7ff86ea82704,17561704,0,0x0,8
tick,0x7ff86ea82704,17562827,0,0x0,8
tick,0x7ff86ea82704,17564836,0,0x0,8
tick,0x7ff86ea82704,17566869,0,0x0,8
tick,0x7ff86ea82704,17568789,0,0x0,8
tick,0x7ff86ea82704,17570852,0,0x0,8
tick,0x7ff86ea82704,17573004,0,0x0,8
tick,0x7ff86ea82704,17575102,0,0x0,8
tick,0x7ff86ea82704,17577173,0,0x0,8
tick,0x7ff86ea82704,17578989,0,0x0,8
tick,0x7ff86ea82704,17581162,0,0x0,8
tick,0x7ff86ea82704,17583183,0,0x0,8
tick,0x7ff86ea82704,17584949,0,0x0,8
tick,0x7ff86ea82704,17586894,0,0x0,8
tick,0x7ff86ea82704,17588954,0,0x0,8
tick,0x7ff86ea82704,17590979,0,0x0,8
tick,0x7ff86ea82704,17592885,0,0x0,8
tick,0x7ff86ea82704,17594969,0,0x0,8
tick,0x7ff86ea82704,17596815,0,0x0,8
tick,0x7ff86ea82704,17598993,0,0x0,8
tick,0x7ff86ea82704,17600781,0,0x0,8
tick,0x7ff86ea82704,17602921,0,0x0,8
tick,0x7ff86ea82704,17604780,0,0x0,8
tick,0x7ff86ea82704,17606949,0,0x0,8
tick,0x7ff86ea82704,17609081,0,0x0,8
tick,0x7ff86ea82704,17610846,0,0x0,8
tick,0x7ff86ea82704,17612739,0,0x0,8
tick,0x7ff86ea82704,17614973,0,0x0,8
tick,0x7ff86ea82704,17617514,0,0x0,8
tick,0x7ff86ea82704,17621054,0,0x0,8
tick,0x7ff86ea82704,17622471,0,0x0,8
tick,0x7ff86ea82704,17623979,0,0x0,8
tick,0x7ff86ea82704,17626185,0,0x0,8
tick,0x7ff86ea82704,17628312,0,0x0,8
tick,0x7ff86ea82704,17630864,0,0x0,8
tick,0x7ff86ea82704,17632988,0,0x0,8
tick,0x7ff86ea82704,17634903,0,0x0,8
tick,0x7ff86ea82704,17636938,0,0x0,8
tick,0x7ff86ea82704,17639311,0,0x0,8
tick,0x7ff86ea82704,17641636,0,0x0,8
tick,0x7ff86ea82704,17642503,0,0x0,8
tick,0x7ff86ea82704,17644697,0,0x0,8
tick,0x7ff86ea82704,17646708,0,0x0,8
tick,0x7ff86ea82704,17648613,0,0x0,8
tick,0x7ff86ea82704,17650604,0,0x0,8
tick,0x7ff86ea82704,17652638,0,0x0,8
tick,0x7ff86ea82704,17654529,0,0x0,8
tick,0x7ff86ea82704,17656865,0,0x0,8
tick,0x7ff86ea82704,17658523,0,0x0,8
tick,0x7ff86ea82704,17660751,0,0x0,8
tick,0x7ff86ea82704,17662674,0,0x0,8
tick,0x7ff86ea82704,17664867,0,0x0,8
tick,0x7ff86ea82704,17666706,0,0x0,8
tick,0x7ff86ea82704,17668658,0,0x0,8
tick,0x7ff86ea82704,17670477,0,0x0,8
tick,0x7ff86ea82704,17672650,0,0x0,8
tick,0x7ff86ea82704,17674616,0,0x0,8
tick,0x7ff86ea82704,17676919,0,0x0,8
tick,0x7ff86ea82704,17678643,0,0x0,8
tick,0x7ff86ea82704,17680651,0,0x0,8
tick,0x7ff86ea82704,17682553,0,0x0,8
tick,0x7ff86ea82704,17684534,0,0x0,8
tick,0x7ff86ea82704,17686600,0,0x0,8
tick,0x7ff86ea82704,17688697,0,0x0,8
tick,0x7ff86ea82704,17690431,0,0x0,8
tick,0x7ff86ea82704,17692565,0,0x0,8
tick,0x7ff86ea82704,17694515,0,0x0,8
tick,0x7ff86ea82704,17696697,0,0x0,8
tick,0x7ff86ea82704,17698516,0,0x0,8
tick,0x7ff86ea82704,17700761,0,0x0,8
tick,0x7ff86ea82704,17702558,0,0x0,8
tick,0x7ff86ea82704,17704501,0,0x0,8
tick,0x7ff86ea82704,17706492,0,0x0,8
tick,0x7ff86ea82704,17708442,0,0x0,8
tick,0x7ff86ea82704,17710413,0,0x0,8
tick,0x7ff86ea82704,17712629,0,0x0,8
tick,0x7ff86ea82704,17714465,0,0x0,8
tick,0x7ff86ea82704,17716375,0,0x0,8
tick,0x7ff86ea82704,17718405,0,0x0,8
tick,0x7ff86ea82704,17720349,0,0x0,8
tick,0x7ff86ea82704,17722536,0,0x0,8
tick,0x7ff86ea82704,17724346,0,0x0,8
tick,0x7ff86ea82704,17726476,0,0x0,8
tick,0x7ff86ea82704,17728497,0,0x0,8
tick,0x7ff86ea82704,17730743,0,0x0,8
tick,0x7ff86ea82704,17732888,0,0x0,8
tick,0x7ff86ea82704,17734637,0,0x0,8
tick,0x7ff86ea82704,17736536,0,0x0,8
tick,0x7ff86ea82704,17739075,0,0x0,8
tick,0x7ff86ea82704,17740757,0,0x0,8
tick,0x7ff86ea82704,17742739,0,0x0,8
tick,0x7ff86ea82704,17744486,0,0x0,8
tick,0x7ff86ea82704,17746661,0,0x0,8
tick,0x7ff86ea82704,17748582,0,0x0,8
tick,0x7ff86ea82704,17750490,0,0x0,8
tick,0x7ff86ea82704,17752490,0,0x0,8
tick,0x7ff86ea82704,17754431,0,0x0,8
tick,0x7ff86ea82704,17756450,0,0x0,8
tick,0x7ff86ea82704,17758355,0,0x0,8
tick,0x7ff86ea82704,17760428,0,0x0,8
tick,0x7ff86ea82704,17762336,0,0x0,8
tick,0x7ff86ea82704,17764519,0,0x0,8
tick,0x7ff86ea82704,17766417,0,0x0,8
tick,0x7ff86ea82704,17768476,0,0x0,8
tick,0x7ff86ea82704,17770840,0,0x0,8
tick,0x7ff86ea82704,17772711,0,0x0,8
tick,0x7ff86ea82704,17774836,0,0x0,8
tick,0x7ff86ea82704,17776604,0,0x0,8
tick,0x7ff86ea82704,17778578,0,0x0,8
tick,0x7ff86ea82704,17780449,0,0x0,8
tick,0x7ff86ea82704,17782488,0,0x0,8
tick,0x7ff86ea82704,17784496,0,0x0,8
tick,0x7ff86ea82704,17786527,0,0x0,8
tick,0x7ff86ea82704,17788611,0,0x0,8
tick,0x7ff86ea82704,17790603,0,0x0,8
tick,0x7ff86ea82704,17792786,0,0x0,8
tick,0x7ff86ea82704,17794572,0,0x0,8
tick,0x7ff86ea82704,17796442,0,0x0,8
tick,0x7ff86ea82704,17798319,0,0x0,8
tick,0x7ff86ea82704,17800579,0,0x0,8
tick,0x7ff86ea82704,17802326,0,0x0,8
tick,0x7ff86ea82704,17804425,0,0x0,8
tick,0x7ff86ea82704,17807005,0,0x0,8
tick,0x7ff86ea82704,17809124,0,0x0,8
tick,0x7ff86ea82704,17811323,0,0x0,8
tick,0x7ff86ea82704,17813177,0,0x0,8
tick,0x7ff86ea82704,17815169,0,0x0,8
tick,0x7ff86ea82704,17817111,0,0x0,8
tick,0x7ff86ea82704,17819266,0,0x0,8
tick,0x7ff86ea82704,17822072,0,0x0,8
tick,0x7ff86ea82704,17823263,0,0x0,8
tick,0x7ff86ea82704,17825118,0,0x0,8
tick,0x7ff86ea82704,17827348,0,0x0,8
tick,0x7ff86ea82704,17829124,0,0x0,8
tick,0x7ff86ea82704,17831095,0,0x0,8
tick,0x7ff86ea82704,17833169,0,0x0,8
tick,0x7ff86ea82704,17835155,0,0x0,8
tick,0x7ff86ea82704,17838695,0,0x0,8
tick,0x7ff86ea82704,17873786,0,0x0,8
tick,0x7ff86ea82704,17874091,0,0x0,8
tick,0x7ff86ea82704,17876288,0,0x0,8
tick,0x7ff86ea82704,17878122,0,0x0,8
tick,0x7ff86ea82704,17880355,0,0x0,8
tick,0x7ff86ea82704,17885465,0,0x0,8
tick,0x7ff86ea82704,17886058,0,0x0,8
tick,0x7ff86ea82704,17888034,0,0x0,8
tick,0x7ff86ea82704,17890601,0,0x0,8
tick,0x7ff86ea82704,17891919,0,0x0,8
tick,0x7ff86ea82704,17893922,0,0x0,8
tick,0x7ff86ea82704,17895954,0,0x0,8
tick,0x7ff86ea82704,17898145,0,0x0,8
tick,0x7ff86ea82704,17899875,0,0x0,8
tick,0x7ff86ea82704,17901902,0,0x0,8
tick,0x7ff86ea82704,17903857,0,0x0,8
tick,0x7ff86ea82704,17906028,0,0x0,8
tick,0x7ff86ea82704,17907960,0,0x0,8
tick,0x7ff86ea82704,17909885,0,0x0,8
tick,0x7ff86ea82704,17911872,0,0x0,8
tick,0x7ff86ea82704,17913875,0,0x0,8
tick,0x7ff86ea82704,17915828,0,0x0,8
tick,0x7ff86ea82704,17917881,0,0x0,8
tick,0x7ff86ea82704,17919775,0,0x0,8
tick,0x7ff86ea82704,17922032,0,0x0,8
tick,0x7ff86ea82704,17923804,0,0x0,8
tick,0x7ff86ea82704,17925842,0,0x0,8
tick,0x7ff86ea82704,17927750,0,0x0,8
tick,0x7ff86ea82704,17929787,0,0x0,8
tick,0x7ff86ea82704,17931758,0,0x0,8
tick,0x7ff86ea82704,17934118,0,0x0,8
tick,0x7ff86ea82704,17939280,0,0x0,8
tick,0x7ff86ea82704,17940452,0,0x0,8
tick,0x7ff86ea82704,17942623,0,0x0,8
tick,0x7ff86ea82704,17944970,0,0x0,8
tick,0x7ff86ea82704,17947580,0,0x0,8
tick,0x7ff86ea82704,17948854,0,0x0,8
tick,0x7ff86ea82704,17950838,0,0x0,8
tick,0x7ff86ea82704,17953844,0,0x0,8
tick,0x7ff86ea82704,17955326,0,0x0,8
tick,0x7ff86ea82704,17958471,0,0x0,8
tick,0x7ff86ea82704,17960010,0,0x0,8
tick,0x7ff86ea82704,17962123,0,0x0,8
tick,0x7ff86ea82704,17964021,0,0x0,8
tick,0x7ff86ea82704,17966154,0,0x0,8
tick,0x7ff86ea82704,17968015,0,0x0,8
tick,0x7ff86ea82704,17970042,0,0x0,8
tick,0x7ff86ea82704,17971987,0,0x0,8
tick,0x7ff86ea82704,17974107,0,0x0,8
tick,0x7ff86ea82704,17975881,0,0x0,8
tick,0x7ff86ea82704,17978089,0,0x0,8
tick,0x7ff86ea82704,17980008,0,0x0,8
tick,0x7ff86ea82704,17981796,0,0x0,8
tick,0x7ff86ea82704,17983888,0,0x0,8
tick,0x7ff86ea82704,17985882,0,0x0,8
tick,0x7ff86ea82704,17988170,0,0x0,8
tick,0x7ff86ea82704,17989803,0,0x0,8
tick,0x7ff86ea82704,17991722,0,0x0,8
tick,0x7ff86ea82704,17993724,0,0x0,8
tick,0x7ff86ea82704,17995746,0,0x0,8
tick,0x7ff86ea82704,17997659,0,0x0,8
tick,0x7ff86ea82704,17999623,0,0x0,8
tick,0x7ff86ea82704,18001751,0,0x0,8
tick,0x7ff86ea82704,18003642,0,0x0,8
tick,0x7ff86ea82704,18005786,0,0x0,8
tick,0x7ff86ea82704,18007689,0,0x0,8
tick,0x7ff86ea82704,18009743,0,0x0,8
tick,0x7ff86ea82704,18011621,0,0x0,8
tick,0x7ff86ea82704,18013907,0,0x0,8
tick,0x7ff86ea82704,18015627,0,0x0,8
tick,0x7ff86ea82704,18017887,0,0x0,8
tick,0x7ff86ea82704,18019559,0,0x0,8
tick,0x7ff86ea82704,18021655,0,0x0,8
tick,0x7ff86ea82704,18023585,0,0x0,8
tick,0x7ff86ea82704,18025647,0,0x0,8
tick,0x7ff86ea82704,18027579,0,0x0,8
tick,0x7ff86ea82704,18029642,0,0x0,8
tick,0x7ff86ea82704,18031540,0,0x0,8
tick,0x7ff86ea82704,18033584,0,0x0,8
tick,0x7ff86ea82704,18035486,0,0x0,8
tick,0x7ff86ea82704,18037600,0,0x0,8
tick,0x7ff86ea82704,18039496,0,0x0,8
tick,0x7ff86ea82704,18041734,0,0x0,8
tick,0x7ff86ea82704,18043464,0,0x0,8
tick,0x7ff86ea82704,18045729,0,0x0,8
tick,0x7ff86ea82704,18047633,0,0x0,8
tick,0x7ff86ea82704,18049701,0,0x0,8
tick,0x7ff86ea82704,18051571,0,0x0,8
tick,0x7ff86ea82704,18053981,0,0x0,8
tick,0x7ff86ea82704,18057864,0,0x0,8
tick,0x7ff86ea82704,18057890,0,0x0,8
tick,0x7ff86ea82704,18059897,0,0x0,8
tick,0x7ff86ea82704,18061669,0,0x0,8
tick,0x7ff86ea82704,18063638,0,0x0,8
tick,0x7ff86ea82704,18065467,0,0x0,8
tick,0x7ff86ea82704,18067471,0,0x0,8
tick,0x7ff86ea82704,18069473,0,0x0,8
tick,0x7ff86ea82704,18071453,0,0x0,8
tick,0x7ff86ea82704,18073632,0,0x0,8
tick,0x7ff86ea82704,18075511,0,0x0,8
tick,0x7ff86ea82704,18077777,0,0x0,8
tick,0x7ff86ea82704,18079370,0,0x0,8
tick,0x7ff86ea82704,18081475,0,0x0,8
tick,0x7ff86ea82704,18083574,0,0x0,8
tick,0x7ff86ea82704,18085497,0,0x0,8
tick,0x7ff86ea82704,18087639,0,0x0,8
tick,0x7ff86ea82704,18089512,0,0x0,8
tick,0x7ff86ea82704,18091741,0,0x0,8
tick,0x7ff86ea82704,18093777,0,0x0,8
tick,0x7ff86ea82704,18095414,0,0x0,8
tick,0x7ff86ea82704,18097796,0,0x0,8
tick,0x7ff86ea82704,18099438,0,0x0,8
tick,0x7ff86ea82704,18101371,0,0x0,8
tick,0x7ff86ea82704,18103791,0,0x0,8
tick,0x7ff86ea82704,18105369,0,0x0,8
tick,0x7ff86ea82704,18107364,0,0x0,8
tick,0x7ff86ea82704,18109364,0,0x0,8
tick,0x7ff86ea82704,18111302,0,0x0,8
tick,0x7ff86ea82704,18113391,0,0x0,8
tick,0x7ff86ea82704,18115446,0,0x0,8
tick,0x7ff86ea82704,18117763,0,0x0,8
tick,0x7ff86ea82704,18119585,0,0x0,8
tick,0x7ff86ea82704,18121428,0,0x0,8
tick,0x7ff86ea82704,18123413,0,0x0,8
tick,0x7ff86ea82704,18125505,0,0x0,8
tick,0x7ff86ea82704,18127355,0,0x0,8
tick,0x7ff86ea82704,18129396,0,0x0,8
tick,0x7ff86ea82704,18131331,0,0x0,8
tick,0x7ff86ea82704,18133296,0,0x0,8
tick,0x7ff86ea82704,18135474,0,0x0,8
tick,0x7ff86ea82704,18137221,0,0x0,8
tick,0x7ff86ea82704,18139404,0,0x0,8
tick,0x7ff86ea82704,18141529,0,0x0,8
tick,0x7ff86ea82704,18143290,0,0x0,8
tick,0x7ff86ea82704,18145288,0,0x0,8
tick,0x7ff86ea82704,18147164,0,0x0,8
tick,0x7ff86ea82704,18149303,0,0x0,8
tick,0x7ff86ea82704,18151196,0,0x0,8
tick,0x7ff86ea82704,18153502,0,0x0,8
tick,0x7ff86ea82704,18155098,0,0x0,8
tick,0x7ff86ea82704,18157382,0,0x0,8
tick,0x7ff86ea82704,18159187,0,0x0,8
tick,0x7ff86ea82704,18161372,0,0x0,8
tick,0x7ff86ea82704,18163320,0,0x0,8
tick,0x7ff86ea82704,18165332,0,0x0,8
tick,0x7ff86ea82704,18167212,0,0x0,8
tick,0x7ff86ea82704,18169348,0,0x0,8
tick,0x7ff86ea82704,18171184,0,0x0,8
tick,0x7ff86ea82704,18173291,0,0x0,8
tick,0x7ff86ea82704,18175273,0,0x0,8
tick,0x7ff86ea82704,18177254,0,0x0,8
tick,0x7ff86ea82704,18179284,0,0x0,8
tick,0x7ff86ea82704,18181312,0,0x0,8
tick,0x7ff86ea82704,18183290,0,0x0,8
tick,0x7ff86ea82704,18185234,0,0x0,8
tick,0x7ff86ea82704,18187173,0,0x0,8
tick,0x7ff86ea82704,18189274,0,0x0,8
tick,0x7ff86ea82704,18193255,0,0x0,8
tick,0x7ff86ea82704,18193283,0,0x0,8
tick,0x7ff86ea82704,18209846,0,0x0,8
tick,0x7ff86ea82704,18209874,0,0x0,8
tick,0x7ff86ea82704,18209893,0,0x0,8
tick,0x7ff86ea82704,18209910,0,0x0,8
tick,0x7ff86ea82704,18209932,0,0x0,8
tick,0x7ff86ea82704,18209950,0,0x0,8
tick,0x7ff86ea82704,18209968,0,0x0,8
tick,0x7ff86ea82704,18209985,0,0x0,8
tick,0x7ff86ea82704,18218590,0,0x0,8
tick,0x7ff86ea82704,18218618,0,0x0,8
tick,0x7ff86ea82704,18218638,0,0x0,8
tick,0x7ff86ea82704,18218658,0,0x0,8
tick,0x7ff86ea82704,18219432,0,0x0,8
tick,0x7ff86ea82704,18221104,0,0x0,8
tick,0x7ff86ea82704,18223257,0,0x0,8
tick,0x7ff86ea82704,18225077,0,0x0,8
tick,0x7ff86ea82704,18227110,0,0x0,8
tick,0x7ff86ea82704,18229070,0,0x0,8
tick,0x7ff86ea82704,18231784,0,0x0,8
tick,0x7ff86ea82704,18233236,0,0x0,8
tick,0x7ff86ea82704,18235306,0,0x0,8
tick,0x7ff86ea82704,18237145,0,0x0,8
tick,0x7ff86ea82704,18239642,0,0x0,8
tick,0x7ff86ea82704,18241089,0,0x0,8
tick,0x7ff86ea82704,18243473,0,0x0,8
tick,0x7ff86ea82704,18245143,0,0x0,8
tick,0x7ff86ea82704,18247401,0,0x0,8
tick,0x7ff86ea82704,18249056,0,0x0,8
tick,0x7ff86ea82704,18251126,0,0x0,8
tick,0x7ff86ea82704,18253501,0,0x0,8
tick,0x7ff86ea82704,18257668,0,0x0,8
tick,0x7ff86ea82704,18257700,0,0x0,8
tick,0x7ff86ea82704,18259763,0,0x0,8
tick,0x7ff86ea82704,18260915,0,0x0,8
tick,0x7ff86ea82704,18263173,0,0x0,8
tick,0x7ff86ea82704,18264960,0,0x0,8
tick,0x7ff86ea82704,18267079,0,0x0,8
tick,0x7ff86ea82704,18268981,0,0x0,8
tick,0x7ff86ea82704,18271188,0,0x0,8
tick,0x7ff86ea82704,18273412,0,0x0,8
tick,0x7ff86ea82704,18275012,0,0x0,8
tick,0x7ff86ea82704,18276979,0,0x0,8
tick,0x7ff86ea82704,18278977,0,0x0,8
tick,0x7ff86ea82704,18281012,0,0x0,8
tick,0x7ff86ea82704,18283068,0,0x0,8
tick,0x7ff86ea82704,18284934,0,0x0,8
tick,0x7ff86ea82704,18287092,0,0x0,8
tick,0x7ff86ea82704,18289001,0,0x0,8
tick,0x7ff86ea82704,18290894,0,0x0,8
tick,0x7ff86ea82704,18293005,0,0x0,8
tick,0x7ff86ea82704,18294912,0,0x0,8
tick,0x7ff86ea82704,18297049,0,0x0,8
tick,0x7ff86ea82704,18299000,0,0x0,8
tick,0x7ff86ea82704,18301006,0,0x0,8
tick,0x7ff86ea82704,18303009,0,0x0,8
tick,0x7ff86ea82704,18305083,0,0x0,8
tick,0x7ff86ea82704,18306864,0,0x0,8
tick,0x7ff86ea82704,18308880,0,0x0,8
tick,0x7ff86ea82704,18310848,0,0x0,8
tick,0x7ff86ea82704,18312828,0,0x0,8
tick,0x7ff86ea82704,18314928,0,0x0,8
tick,0x7ff86ea82704,18316411,0,0x0,8
tick,0x7ff86ea82704,18318392,0,0x0,8
tick,0x7ff86ea82704,18320479,0,0x0,8
tick,0x7ff86ea82704,18322428,0,0x0,8
tick,0x7ff86ea82704,18324659,0,0x0,8
tick,0x7ff86ea82704,18326402,0,0x0,8
tick,0x7ff86ea82704,18328456,0,0x0,8
tick,0x7ff86ea82704,18330357,0,0x0,8
tick,0x7ff86ea82704,18332360,0,0x0,8
tick,0x7ff86ea82704,18334286,0,0x0,8
tick,0x7ff86ea82704,18336305,0,0x0,8
tick,0x7ff86ea82704,18338455,0,0x0,8
tick,0x7ff86ea82704,18340617,0,0x0,8
tick,0x7ff86ea82704,18342396,0,0x0,8
tick,0x7ff86ea82704,18344399,0,0x0,8
tick,0x7ff86ea82704,18346363,0,0x0,8
tick,0x7ff86ea82704,18348669,0,0x0,8
tick,0x7ff86ea82704,18350346,0,0x0,8
tick,0x7ff86ea82704,18352385,0,0x0,8
tick,0x7ff86ea82704,18354294,0,0x0,8
tick,0x7ff86ea82704,18356575,0,0x0,8
tick,0x7ff86ea82704,18358334,0,0x0,8
tick,0x7ff86ea82704,18360391,0,0x0,8
tick,0x7ff86ea82704,18362232,0,0x0,8
tick,0x7ff86ea82704,18364471,0,0x0,8
tick,0x7ff86ea82704,18366263,0,0x0,8
tick,0x7ff86ea82704,18368279,0,0x0,8
tick,0x7ff86ea82704,18370199,0,0x0,8
tick,0x7ff86ea82704,18372507,0,0x0,8
tick,0x7ff86ea82704,18374388,0,0x0,8
tick,0x7ff86ea82704,18377622,0,0x0,8
tick,0x7ff86ea82704,18379637,0,0x0,8
tick,0x7ff86ea82704,18381463,0,0x0,8
tick,0x7ff86ea82704,18383348,0,0x0,8
tick,0x7ff86ea82704,18385394,0,0x0,8
tick,0x7ff86ea82704,18387424,0,0x0,8
tick,0x7ff86ea82704,18389541,0,0x0,8
tick,0x7ff86ea82704,18391391,0,0x0,8
tick,0x7ff86ea82704,18393414,0,0x0,8
tick,0x7ff86ea82704,18395374,0,0x0,8
tick,0x7ff86ea82704,18397403,0,0x0,8
tick,0x7ff86ea82704,18399340,0,0x0,8
tick,0x7ff86ea82704,18401364,0,0x0,8
tick,0x7ff86ea82704,18403249,0,0x0,8
tick,0x7ff86ea82704,18405399,0,0x0,8
tick,0x7ff86ea82704,18407303,0,0x0,8
tick,0x7ff86ea82704,18409332,0,0x0,8
tick,0x7ff86ea82704,18411302,0,0x0,8
tick,0x7ff86ea82704,18413259,0,0x0,8
tick,0x7ff86ea82704,18415434,0,0x0,8
tick,0x7ff86ea82704,18417561,0,0x0,8
tick,0x7ff86ea82704,18419503,0,0x0,8
tick,0x7ff86ea82704,18422977,0,0x0,8
tick,0x7ff86ea82704,18424145,0,0x0,8
tick,0x7ff86ea82704,18425432,0,0x0,8
tick,0x7ff86ea82704,18427286,0,0x0,8
tick,0x7ff86ea82704,18429049,0,0x0,8
tick,0x7ff86ea82704,18431182,0,0x0,8
tick,0x7ff86ea82704,18433086,0,0x0,8
tick,0x7ff86ea82704,18435071,0,0x0,8
tick,0x7ff86ea82704,18437127,0,0x0,8
tick,0x7ff86ea82704,18439014,0,0x0,8
tick,0x7ff86ea82704,18441305,0,0x0,8
tick,0x7ff86ea82704,18443055,0,0x0,8
tick,0x7ff86ea82704,18445374,0,0x0,8
tick,0x7ff86ea82704,18449854,0,0x0,8
tick,0x7ff86ea82704,18452519,0,0x0,8
tick,0x7ff86ea82704,18454178,0,0x0,8
tick,0x7ff86ea82704,18456272,0,0x0,8
tick,0x7ff86ea82704,18457867,0,0x0,8
tick,0x7ff86ea82704,18460251,0,0x0,8
tick,0x7ff86ea82704,18461858,0,0x0,8
tick,0x7ff86ea82704,18463942,0,0x0,8
tick,0x7ff86ea82704,18465895,0,0x0,8
tick,0x7ff86ea82704,18468104,0,0x0,8
tick,0x7ff86ea82704,18469841,0,0x0,8
tick,0x7ff86ea82704,18472317,0,0x0,8
tick,0x7ff86ea82704,18473946,0,0x0,8
tick,0x7ff86ea82704,18476281,0,0x0,8
tick,0x7ff86ea82704,18477966,0,0x0,8
tick,0x7ff86ea82704,18480044,0,0x0,8
tick,0x7ff86ea82704,18481851,0,0x0,8
tick,0x7ff86ea82704,18484025,0,0x0,8
tick,0x7ff86ea82704,18486015,0,0x0,8
tick,0x7ff86ea82704,18488036,0,0x0,8
tick,0x7ff86ea82704,18489893,0,0x0,8
tick,0x7ff86ea82704,18492150,0,0x0,8
tick,0x7ff86ea82704,18493808,0,0x0,8
tick,0x7ff86ea82704,18495854,0,0x0,8
tick,0x7ff86ea82704,18497985,0,0x0,8
tick,0x7ff86ea82704,18499801,0,0x0,8
tick,0x7ff86ea82704,18501932,0,0x0,8
tick,0x7ff86ea82704,18503833,0,0x0,8
tick,0x7ff86ea82704,18505840,0,0x0,8
tick,0x7ff86ea82704,18508161,0,0x0,8
tick,0x7ff86ea82704,18509923,0,0x0,8
tick,0x7ff86ea82704,18511989,0,0x0,8
tick,0x7ff86ea82704,18513829,0,0x0,8
tick,0x7ff86ea82704,18515797,0,0x0,8
tick,0x7ff86ea82704,18517748,0,0x0,8
tick,0x7ff86ea82704,18520038,0,0x0,8
tick,0x7ff86ea82704,18522391,0,0x0,8
tick,0x7ff86ea82704,18524013,0,0x0,8
tick,0x7ff86ea82704,18525969,0,0x0,8
tick,0x7ff86ea82704,18528255,0,0x0,8
tick,0x7ff86ea82704,18529835,0,0x0,8
tick,0x7ff86ea82704,18531953,0,0x0,8
tick,0x7ff86ea82704,18533975,0,0x0,8
tick,0x7ff86ea82704,18535687,0,0x0,8
tick,0x7ff86ea82704,18537808,0,0x0,8
tick,0x7ff86ea82704,18540157,0,0x0,8
tick,0x7ff86ea82704,18541806,0,0x0,8
tick,0x7ff86ea82704,18544134,0,0x0,8
tick,0x7ff86ea82704,18545966,0,0x0,8
tick,0x7ff86ea82704,18547748,0,0x0,8
tick,0x7ff86ea82704,18549741,0,0x0,8
tick,0x7ff86ea82704,18551779,0,0x0,8
tick,0x7ff86ea82704,18553920,0,0x0,8
tick,0x7ff86ea82704,18556252,0,0x0,8
tick,0x7ff86ea82704,18557929,0,0x0,8
tick,0x7ff86ea82704,18559914,0,0x0,8
tick,0x7ff86ea82704,18561879,0,0x0,8
tick,0x7ff86ea82704,18563292,0,0x0,8
tick,0x7ff86ea82704,18564993,0,0x0,8
tick,0x7ff86ea82704,18566861,0,0x0,8
tick,0x7ff86ea82704,18568936,0,0x0,8
tick,0x7ff86ea82704,18570885,0,0x0,8
tick,0x7ff86ea82704,18573120,0,0x0,8
tick,0x7ff86ea82704,18574980,0,0x0,8
tick,0x7ff86ea82704,18577057,0,0x0,8
tick,0x7ff86ea82704,18579101,0,0x0,8
tick,0x7ff86ea82704,18580877,0,0x0,8
tick,0x7ff86ea82704,18582960,0,0x0,8
tick,0x7ff86ea82704,18584993,0,0x0,8
tick,0x7ff86ea82704,18586778,0,0x0,8
tick,0x7ff86ea82704,18589111,0,0x0,8
tick,0x7ff86ea82704,18590811,0,0x0,8
tick,0x7ff86ea82704,18592946,0,0x0,8
tick,0x7ff86ea82704,18594724,0,0x0,8
tick,0x7ff86ea82704,18596928,0,0x0,8
tick,0x7ff86ea82704,18598757,0,0x0,8
tick,0x7ff86ea82704,18601161,0,0x0,8
tick,0x7ff86ea82704,18603004,0,0x0,8
tick,0x7ff86ea82704,18605303,0,0x0,8
tick,0x7ff86ea82704,18607301,0,0x0,8
tick,0x7ff86ea82704,18608753,0,0x0,8
tick,0x7ff86ea82704,18611199,0,0x0,8
tick,0x7ff86ea82704,18612940,0,0x0,8
tick,0x7ff86ea82704,18614873,0,0x0,8
tick,0x7ff86ea82704,18616715,0,0x0,8
tick,0x7ff86ea82704,18618884,0,0x0,8
tick,0x7ff86ea82704,18620588,0,0x0,8
tick,0x7ff86ea82704,18623384,0,0x0,8
tick,0x7ff86ea82704,18625828,0,0x0,8
tick,0x7ff86ea82704,18627571,0,0x0,8
tick,0x7ff86ea82704,18628621,0,0x0,8
tick,0x7ff86ea82704,18631011,0,0x0,8
tick,0x7ff86ea82704,18632745,0,0x0,8
tick,0x7ff86ea82704,18634964,0,0x0,8
tick,0x7ff86ea82704,18640665,0,0x0,8
tick,0x7ff86ea82704,18640696,0,0x0,8
tick,0x7ff86ea82704,18640714,0,0x0,8
tick,0x7ff86ea82704,18644470,0,0x0,8
tick,0x7ff86ea82704,18644527,0,0x0,8
tick,0x7ff86ea82704,18648513,0,0x0,8
tick,0x7ff86ea82704,18648541,0,0x0,8
tick,0x7ff86ea82704,18650647,0,0x0,8
tick,0x7ff86ea82704,18652591,0,0x0,8
tick,0x7ff86ea82704,18654668,0,0x0,8
tick,0x7ff86ea82704,18656591,0,0x0,8
tick,0x7ff86ea82704,18658618,0,0x0,8
tick,0x7ff86ea82704,18660582,0,0x0,8
tick,0x7ff86ea82704,18662661,0,0x0,8
tick,0x7ff86ea82704,18664531,0,0x0,8
tick,0x7ff86ea82704,18666613,0,0x0,8
tick,0x7ff86ea82704,18668544,0,0x0,8
tick,0x7ff86ea82704,18670643,0,0x0,8
tick,0x7ff86ea82704,18672477,0,0x0,8
tick,0x7ff86ea82704,18675985,0,0x0,8
tick,0x7ff86ea82704,18677397,0,0x0,8
tick,0x7ff86ea82704,18678624,0,0x0,8
tick,0x7ff86ea82704,18680510,0,0x0,8
tick,0x7ff86ea82704,18682564,0,0x0,8
tick,0x7ff86ea82704,18684413,0,0x0,8
tick,0x7ff86ea82704,18686539,0,0x0,8
tick,0x7ff86ea82704,18688628,0,0x0,8
tick,0x7ff86ea82704,18690861,0,0x0,8
tick,0x7ff86ea82704,18692687,0,0x0,8
tick,0x7ff86ea82704,18694652,0,0x0,8
tick,0x7ff86ea82704,18696537,0,0x0,8
tick,0x7ff86ea82704,18698512,0,0x0,8
tick,0x7ff86ea82704,18700636,0,0x0,8
tick,0x7ff86ea82704,18702494,0,0x0,8
tick,0x7ff86ea82704,18704883,0,0x0,8
tick,0x7ff86ea82704,18706732,0,0x0,8
tick,0x7ff86ea82704,18708580,0,0x0,8
tick,0x7ff86ea82704,18711025,0,0x0,8
tick,0x7ff86ea82704,18713340,0,0x0,8
tick,0x7ff86ea82704,18714394,0,0x0,8
tick,0x7ff86ea82704,18716330,0,0x0,8
tick,0x7ff86ea82704,18718314,0,0x0,8
tick,0x7ff86ea82704,18720359,0,0x0,8
tick,0x7ff86ea82704,18722310,0,0x0,8
tick,0x7ff86ea82704,18724232,0,0x0,8
tick,0x7ff86ea82704,18726471,0,0x0,8
tick,0x7ff86ea82704,18728289,0,0x0,8
tick,0x7ff86ea82704,18730324,0,0x0,8
tick,0x7ff86ea82704,18734695,0,0x0,8
tick,0x7ff86ea82704,18734729,0,0x0,8
tick,0x7ff86ea82704,18736473,0,0x0,8
tick,0x7ff86ea82704,18739473,0,0x0,8
tick,0x7ff86ea82704,18741147,0,0x0,8
tick,0x7ff86ea82704,18742676,0,0x0,8
tick,0x7ff86ea82704,18744944,0,0x0,8
tick,0x7ff86ea82704,18746461,0,0x0,8
tick,0x7ff86ea82704,18748524,0,0x0,8
tick,0x7ff86ea82704,18750564,0,0x0,8
tick,0x7ff86ea82704,18752307,0,0x0,8
tick,0x7ff86ea82704,18754381,0,0x0,8
tick,0x7ff86ea82704,18757112,0,0x0,8
tick,0x7ff86ea82704,18758460,0,0x0,8
tick,0x7ff86ea82704,18760751,0,0x0,8
tick,0x7ff86ea82704,18762537,0,0x0,8
tick,0x7ff86ea82704,18764462,0,0x0,8
tick,0x7ff86ea82704,18766288,0,0x0,8
tick,0x7ff86ea82704,18769031,0,0x0,8
tick,0x7ff86ea82704,18770478,0,0x0,8
tick,0x7ff86ea82704,18772561,0,0x0,8
tick,0x7ff86ea82704,18774085,0,0x0,8
tick,0x7ff86ea82704,18777773,0,0x0,8
tick,0x7ff86ea82704,18779921,0,0x0,8
tick,0x7ff86ea82704,18782087,0,0x0,8
tick,0x7ff86ea82704,18784403,0,0x0,8
tick,0x7ff86ea82704,18786045,0,0x0,8
tick,0x7ff86ea82704,18788106,0,0x0,8
tick,0x7ff86ea82704,18790045,0,0x0,8
tick,0x7ff86ea82704,18792056,0,0x0,8
tick,0x7ff86ea82704,18794194,0,0x0,8
tick,0x7ff86ea82704,18796206,0,0x0,8
tick,0x7ff86ea82704,18798143,0,0x0,8
tick,0x7ff86ea82704,18800110,0,0x0,8
tick,0x7ff86ea82704,18802496,0,0x0,8
tick,0x7ff86ea82704,18804374,0,0x0,8
tick,0x7ff86ea82704,18806482,0,0x0,8
tick,0x7ff86ea82704,18808310,0,0x0,8
tick,0x7ff86ea82704,18810325,0,0x0,8
tick,0x7ff86ea82704,18812044,0,0x0,8
tick,0x7ff86ea82704,18814598,0,0x0,8
tick,0x7ff86ea82704,18817805,0,0x0,8
tick,0x7ff86ea82704,18817890,0,0x0,8
tick,0x7ff86ea82704,18820247,0,0x0,8
tick,0x7ff86ea82704,18822433,0,0x0,8
tick,0x7ff86ea82704,18824148,0,0x0,8
tick,0x7ff86ea82704,18826264,0,0x0,8
tick,0x7ff86ea82704,18828268,0,0x0,8
tick,0x7ff86ea82704,18829892,0,0x0,8
tick,0x7ff86ea82704,18831966,0,0x0,8
tick,0x7ff86ea82704,18834003,0,0x0,8
tick,0x7ff86ea82704,18835962,0,0x0,8
tick,0x7ff86ea82704,18837916,0,0x0,8
tick,0x7ff86ea82704,18839996,0,0x0,8
tick,0x7ff86ea82704,18841963,0,0x0,8
tick,0x7ff86ea82704,18843913,0,0x0,8
tick,0x7ff86ea82704,18846158,0,0x0,8
tick,0x7ff86ea82704,18847935,0,0x0,8
tick,0x7ff86ea82704,18850074,0,0x0,8
tick,0x7ff86ea82704,18852207,0,0x0,8
tick,0x7ff86ea82704,18853972,0,0x0,8
tick,0x7ff86ea82704,18857150,0,0x0,8
tick,0x7ff86ea82704,18857900,0,0x0,8
tick,0x7ff86ea82704,18859864,0,0x0,8
tick,0x7ff86ea82704,18861998,0,0x0,8
tick,0x7ff86ea82704,18864039,0,0x0,8
tick,0x7ff86ea82704,18865916,0,0x0,8
tick,0x7ff86ea82704,18868288,0,0x0,8
tick,0x7ff86ea82704,18869980,0,0x0,8
tick,0x7ff86ea82704,18872159,0,0x0,8
tick,0x7ff86ea82704,18873922,0,0x0,8
tick,0x7ff86ea82704,18875774,0,0x0,8
tick,0x7ff86ea82704,18877868,0,0x0,8
tick,0x7ff86ea82704,18879764,0,0x0,8
tick,0x7ff86ea82704,18881838,0,0x0,8
tick,0x7ff86ea82704,18884127,0,0x0,8
tick,0x7ff86ea82704,18885797,0,0x0,8
tick,0x7ff86ea82704,18888285,0,0x0,8
tick,0x7ff86ea82704,18890280,0,0x0,8
tick,0x7ff86ea82704,18891790,0,0x0,8
tick,0x7ff86ea82704,18893741,0,0x0,8
tick,0x7ff86ea82704,18895893,0,0x0,8
tick,0x7ff86ea82704,18898187,0,0x0,8
tick,0x7ff86ea82704,18899861,0,0x0,8
tick,0x7ff86ea82704,18901706,0,0x0,8
tick,0x7ff86ea82704,18903761,0,0x0,8
tick,0x7ff86ea82704,18905686,0,0x0,8
tick,0x7ff86ea82704,18907745,0,0x0,8
tick,0x7ff86ea82704,18909695,0,0x0,8
tick,0x7ff86ea82704,18911720,0,0x0,8
tick,0x7ff86ea82704,18913777,0,0x0,8
tick,0x7ff86ea82704,18915761,0,0x0,8
tick,0x7ff86ea82704,18917783,0,0x0,8
tick,0x7ff86ea82704,18919742,0,0x0,8
tick,0x7ff86ea82704,18921946,0,0x0,8
tick,0x7ff86ea82704,18923701,0,0x0,8
tick,0x7ff86ea82704,18925716,0,0x0,8
tick,0x7ff86ea82704,18927623,0,0x0,8
tick,0x7ff86ea82704,18929695,0,0x0,8
tick,0x7ff86ea82704,18931656,0,0x0,8
tick,0x7ff86ea82704,18933675,0,0x0,8
tick,0x7ff86ea82704,18935625,0,0x0,8
tick,0x7ff86ea82704,18937805,0,0x0,8
tick,0x7ff86ea82704,18940006,0,0x0,8
tick,0x7ff86ea82704,18941672,0,0x0,8
tick,0x7ff86ea82704,18943663,0,0x0,8
tick,0x7ff86ea82704,18945740,0,0x0,8
tick,0x7ff86ea82704,18947586,0,0x0,8
tick,0x7ff86ea82704,18949660,0,0x0,8
tick,0x7ff86ea82704,18951603,0,0x0,8
tick,0x7ff86ea82704,18953618,0,0x0,8
tick,0x7ff86ea82704,18955577,0,0x0,8
tick,0x7ff86ea82704,18957856,0,0x0,8
tick,0x7ff86ea82704,18959774,0,0x0,8
tick,0x7ff86ea82704,18961651,0,0x0,8
tick,0x7ff86ea82704,18963602,0,0x0,8
tick,0x7ff86ea82704,18965734,0,0x0,8
tick,0x7ff86ea82704,18968107,0,0x0,8
tick,0x7ff86ea82704,18969624,0,0x0,8
tick,0x7ff86ea82704,18971656,0,0x0,8
tick,0x7ff86ea82704,18973591,0,0x0,8
tick,0x7ff86ea82704,18975561,0,0x0,8
tick,0x7ff86ea82704,18977718,0,0x0,8
tick,0x7ff86ea82704,18979524,0,0x0,8
tick,0x7ff86ea82704,18981801,0,0x0,8
tick,0x7ff86ea82704,18983511,0,0x0,8
tick,0x7ff86ea82704,18985856,0,0x0,8
tick,0x7ff86ea82704,18987647,0,0x0,8
tick,0x7ff86ea82704,18989786,0,0x0,8
tick,0x7ff86ea82704,18991475,0,0x0,8
tick,0x7ff86ea82704,18993569,0,0x0,8
tick,0x7ff86ea82704,18995735,0,0x0,8
tick,0x7ff86ea82704,18997549,0,0x0,8
tick,0x7ff86ea82704,18999510,0,0x0,8
tick,0x7ff86ea82704,19001685,0,0x0,8
tick,0x7ff86ea82704,19003646,0,0x0,8
tick,0x7ff86ea82704,19005516,0,0x0,8
tick,0x7ff86ea82704,19007431,0,0x0,8
tick,0x7ff86ea82704,19009523,0,0x0,8
tick,0x7ff86ea82704,19011482,0,0x0,8
tick,0x7ff86ea82704,19013529,0,0x0,8
tick,0x7ff86ea82704,19015476,0,0x0,8
tick,0x7ff86ea82704,19017478,0,0x0,8
tick,0x7ff86ea82704,19019441,0,0x0,8
tick,0x7ff86ea82704,19021492,0,0x0,8
tick,0x7ff86ea82704,19023427,0,0x0,8
tick,0x7ff86ea82704,19025534,0,0x0,8
tick,0x7ff86ea82704,19027379,0,0x0,8
tick,0x7ff86ea82704,19029521,0,0x0,8
tick,0x7ff86ea82704,19031362,0,0x0,8
tick,0x7ff86ea82704,19033415,0,0x0,8
tick,0x7ff86ea82704,19035450,0,0x0,8
tick,0x7ff86ea82704,19037460,0,0x0,8
tick,0x7ff86ea82704,19039371,0,0x0,8
tick,0x7ff86ea82704,19041452,0,0x0,8
tick,0x7ff86ea82704,19043418,0,0x0,8
tick,0x7ff86ea82704,19045395,0,0x0,8
tick,0x7ff86ea82704,19047422,0,0x0,8
tick,0x7ff86ea82704,19049391,0,0x0,8
tick,0x7ff86ea82704,19051388,0,0x0,8
tick,0x7ff86ea82704,19053366,0,0x0,8
tick,0x7ff86ea82704,19055489,0,0x0,8
tick,0x7ff86ea82704,19058553,0,0x0,8
tick,0x7ff86ea82704,19060922,0,0x0,8
tick,0x7ff86ea82704,19062782,0,0x0,8
tick,0x7ff86ea82704,19064711,0,0x0,8
tick,0x7ff86ea82704,19066580,0,0x0,8
tick,0x7ff86ea82704,19068588,0,0x0,8
tick,0x7ff86ea82704,19070429,0,0x0,8
tick,0x7ff86ea82704,19072623,0,0x0,8
tick,0x7ff86ea82704,19074616,0,0x0,8
tick,0x7ff86ea82704,19076570,0,0x0,8
tick,0x7ff86ea82704,19078433,0,0x0,8
tick,0x7ff86ea82704,19081565,0,0x0,8
tick,0x7ff86ea82704,19086817,0,0x0,8
tick,0x7ff86ea82704,19088303,0,0x0,8
tick,0x7ff86ea82704,19090380,0,0x0,8
tick,0x7ff86ea82704,19092357,0,0x0,8
tick,0x7ff86ea82704,19094454,0,0x0,8
tick,0x7ff86ea82704,19096545,0,0x0,8
tick,0x7ff86ea82704,19098692,0,0x0,8
tick,0x7ff86ea82704,19100422,0,0x0,8
tick,0x7ff86ea82704,19102337,0,0x0,8
tick,0x7ff86ea82704,19104803,0,0x0,8
tick,0x7ff86ea82704,19106363,0,0x0,8
tick,0x7ff86ea82704,19108380,0,0x0,8
tick,0x7ff86ea82704,19111032,0,0x0,8
tick,0x7ff86ea82704,19112315,0,0x0,8
tick,0x7ff86ea82704,19114463,0,0x0,8
tick,0x7ff86ea82704,19116605,0,0x0,8
tick,0x7ff86ea82704,19118519,0,0x0,8
tick,0x7ff86ea82704,19120263,0,0x0,8
tick,0x7ff86ea82704,19122284,0,0x0,8
tick,0x7ff86ea82704,19124252,0,0x0,8
tick,0x7ff86ea82704,19126294,0,0x0,8
tick,0x7ff86ea82704,19128428,0,0x0,8
tick,0x7ff86ea82704,19130469,0,0x0,8
tick,0x7ff86ea82704,19132279,0,0x0,8
tick,0x7ff86ea82704,19134538,0,0x0,8
tick,0x7ff86ea82704,19137089,0,0x0,8
tick,0x7ff86ea82704,19138355,0,0x0,8
tick,0x7ff86ea82704,19140205,0,0x0,8
tick,0x7ff86ea82704,19142210,0,0x0,8
tick,0x7ff86ea82704,19144227,0,0x0,8
tick,0x7ff86ea82704,19146353,0,0x0,8
tick,0x7ff86ea82704,19149196,0,0x0,8
tick,0x7ff86ea82704,19151565,0,0x0,8
tick,0x7ff86ea82704,19153280,0,0x0,8
tick,0x7ff86ea82704,19155220,0,0x0,8
tick,0x7ff86ea82704,19157189,0,0x0,8
tick,0x7ff86ea82704,19159188,0,0x0,8
tick,0x7ff86ea82704,19162194,0,0x0,8
tick,0x7ff86ea82704,19164717,0,0x0,8
tick,0x7ff86ea82704,19167401,0,0x0,8
tick,0x7ff86ea82704,19169503,0,0x0,8
tick,0x7ff86ea82704,19171572,0,0x0,8
tick,0x7ff86ea82704,19174160,0,0x0,8
tick,0x7ff86ea82704,19176210,0,0x0,8
tick,0x7ff86ea82704,19178100,0,0x0,8
tick,0x7ff86ea82704,19180121,0,0x0,8
tick,0x7ff86ea82704,19182031,0,0x0,8
tick,0x7ff86ea82704,19184088,0,0x0,8
tick,0x7ff86ea82704,19186264,0,0x0,8
tick,0x7ff86ea82704,19188186,0,0x0,8
tick,0x7ff86ea82704,19190352,0,0x0,8
tick,0x7ff86ea82704,19192352,0,0x0,8
tick,0x7ff86ea82704,19194123,0,0x0,8
tick,0x7ff86ea82704,19196367,0,0x0,8
tick,0x7ff86ea82704,19198806,0,0x0,8
tick,0x7ff86ea82704,19201113,0,0x0,8
tick,0x7ff86ea82704,19203215,0,0x0,8
tick,0x7ff86ea82704,19207543,0,0x0,8
tick,0x7ff86ea82704,19209108,0,0x0,8
tick,0x7ff86ea82704,19211249,0,0x0,8
tick,0x7ff86ea82704,19213458,0,0x0,8
tick,0x7ff86ea82704,19215246,0,0x0,8
tick,0x7ff86ea82704,19217198,0,0x0,8
tick,0x7ff86ea82704,19219341,0,0x0,8
tick,0x7ff86ea82704,19221972,0,0x0,8
tick,0x7ff86ea82704,19224690,0,0x0,8
tick,0x7ff86ea82704,19225315,0,0x0,8
tick,0x7ff86ea82704,19227196,0,0x0,8
tick,0x7ff86ea82704,19229264,0,0x0,8
tick,0x7ff86ea82704,19230994,0,0x0,8
tick,0x7ff86ea82704,19233007,0,0x0,8
tick,0x7ff86ea82704,19234923,0,0x0,8
tick,0x7ff86ea82704,19237127,0,0x0,8
tick,0x7ff86ea82704,19239557,0,0x0,8
tick,0x7ff86ea82704,19241009,0,0x0,8
tick,0x7ff86ea82704,19243195,0,0x0,8
tick,0x7ff86ea82704,19244973,0,0x0,8
tick,0x7ff86ea82704,19246897,0,0x0,8
tick,0x7ff86ea82704,19248946,0,0x0,8
tick,0x7ff86ea82704,19251052,0,0x0,8
tick,0x7ff86ea82704,19252952,0,0x0,8
tick,0x7ff86ea82704,19254877,0,0x0,8
tick,0x7ff86ea82704,19257163,0,0x0,8
tick,0x7ff86ea82704,19259488,0,0x0,8
tick,0x7ff86ea82704,19260737,0,0x0,8
tick,0x7ff86ea82704,19262866,0,0x0,8
tick,0x7ff86ea82704,19264798,0,0x0,8
tick,0x7ff86ea82704,19266984,0,0x0,8
tick,0x7ff86ea82704,19268996,0,0x0,8
tick,0x7ff86ea82704,19270803,0,0x0,8
tick,0x7ff86ea82704,19272909,0,0x0,8
tick,0x7ff86ea82704,19274748,0,0x0,8
tick,0x7ff86ea82704,19276765,0,0x0,8
tick,0x7ff86ea82704,19278724,0,0x0,8
tick,0x7ff86ea82704,19280843,0,0x0,8
tick,0x7ff86ea82704,19282967,0,0x0,8
tick,0x7ff86ea82704,19284781,0,0x0,8
tick,0x7ff86ea82704,19286770,0,0x0,8
tick,0x7ff86ea82704,19288837,0,0x0,8
tick,0x7ff86ea82704,19290723,0,0x0,8
tick,0x7ff86ea82704,19292793,0,0x0,8
tick,0x7ff86ea82704,19294751,0,0x0,8
tick,0x7ff86ea82704,19296789,0,0x0,8
tick,0x7ff86ea82704,19299075,0,0x0,8
tick,0x7ff86ea82704,19300703,0,0x0,8
tick,0x7ff86ea82704,19303269,0,0x0,8
tick,0x7ff86ea82704,19304941,0,0x0,8
tick,0x7ff86ea82704,19307016,0,0x0,8
tick,0x7ff86ea82704,19308920,0,0x0,8
tick,0x7ff86ea82704,19310946,0,0x0,8
tick,0x7ff86ea82704,19312764,0,0x0,8
tick,0x7ff86ea82704,19314977,0,0x0,8
tick,0x7ff86ea82704,19317208,0,0x0,8
tick,0x7ff86ea82704,19318938,0,0x0,8
tick,0x7ff86ea82704,19320778,0,0x0,8
tick,0x7ff86ea82704,19323506,0,0x0,8
tick,0x7ff86ea82704,19325605,0,0x0,8
tick,0x7ff86ea82704,19327010,0,0x0,8
tick,0x7ff86ea82704,19328846,0,0x0,8
tick,0x7ff86ea82704,19330803,0,0x0,8
tick,0x7ff86ea82704,19333036,0,0x0,8
tick,0x7ff86ea82704,19334893,0,0x0,8
tick,0x7ff86ea82704,19336852,0,0x0,8
tick,0x7ff86ea82704,19339213,0,0x0,8
tick,0x7ff86ea82704,19340921,0,0x0,8
tick,0x7ff86ea82704,19343269,0,0x0,8
tick,0x7ff86ea82704,19344949,0,0x0,8
tick,0x7ff86ea82704,19346772,0,0x0,8
tick,0x7ff86ea82704,19348637,0,0x0,8
tick,0x7ff86ea82704,19350764,0,0x0,8
tick,0x7ff86ea82704,19352829,0,0x0,8
tick,0x7ff86ea82704,19356297,0,0x0,8
tick,0x7ff86ea82704,19357158,0,0x0,8
tick,0x7ff86ea82704,19359015,0,0x0,8
tick,0x7ff86ea82704,19361108,0,0x0,8
tick,0x7ff86ea82704,19363050,0,0x0,8
tick,0x7ff86ea82704,19364906,0,0x0,8
tick,0x7ff86ea82704,19367326,0,0x0,8
tick,0x7ff86ea82704,19369156,0,0x0,8
tick,0x7ff86ea82704,19371135,0,0x0,8
tick,0x7ff86ea82704,19372659,0,0x0,8
tick,0x7ff86ea82704,19374497,0,0x0,8
tick,0x7ff86ea82704,19376598,0,0x0,8
tick,0x7ff86ea82704,19378587,0,0x0,8
tick,0x7ff86ea82704,19380770,0,0x0,8
tick,0x7ff86ea82704,19383439,0,0x0,8
tick,0x7ff86ea82704,19384512,0,0x0,8
tick,0x7ff86ea82704,19386615,0,0x0,8
tick,0x7ff86ea82704,19388577,0,0x0,8
tick,0x7ff86ea82704,19390537,0,0x0,8
tick,0x7ff86ea82704,19392593,0,0x0,8
tick,0x7ff86ea82704,19394783,0,0x0,8
tick,0x7ff86ea82704,19396490,0,0x0,8
tick,0x7ff86ea82704,19398632,0,0x0,8
tick,0x7ff86ea82704,19400506,0,0x0,8
tick,0x7ff86ea82704,19402735,0,0x0,8
tick,0x7ff86ea82704,19404564,0,0x0,8
tick,0x7ff86ea82704,19406598,0,0x0,8
tick,0x7ff86ea82704,19408545,0,0x0,8
tick,0x7ff86ea82704,19411087,0,0x0,8
tick,0x7ff86ea82704,19412514,0,0x0,8
tick,0x7ff86ea82704,19414445,0,0x0,8
tick,0x7ff86ea82704,19416366,0,0x0,8
tick,0x7ff86ea82704,19418454,0,0x0,8
tick,0x7ff86ea82704,19420377,0,0x0,8
tick,0x7ff86ea82704,19422392,0,0x0,8
tick,0x7ff86ea82704,19424357,0,0x0,8
tick,0x7ff86ea82704,19426361,0,0x0,8
tick,0x7ff86ea82704,19428447,0,0x0,8
tick,0x7ff86ea82704,19430662,0,0x0,8
tick,0x7ff86ea82704,19432382,0,0x0,8
tick,0x7ff86ea82704,19434464,0,0x0,8
tick,0x7ff86ea82704,19436526,0,0x0,8
tick,0x7ff86ea82704,19438818,0,0x0,8
tick,0x7ff86ea82704,19440458,0,0x0,8
tick,0x7ff86ea82704,19442527,0,0x0,8
tick,0x7ff86ea82704,19444776,0,0x0,8
tick,0x7ff86ea82704,19446691,0,0x0,8
tick,0x7ff86ea82704,19451668,0,0x0,8
tick,0x7ff86ea82704,19451967,0,0x0,8
tick,0x7ff86ea82704,19454267,0,0x0,8
tick,0x7ff86ea82704,19456234,0,0x0,8
tick,0x7ff86ea82704,19458189,0,0x0,8
tick,0x7ff86ea82704,19460095,0,0x0,8
tick,0x7ff86ea82704,19462075,0,0x0,8
tick,0x7ff86ea82704,19464052,0,0x0,8
tick,0x7ff86ea82704,19466325,0,0x0,8
tick,0x7ff86ea82704,19468025,0,0x0,8
tick,0x7ff86ea82704,19469902,0,0x0,8
tick,0x7ff86ea82704,19472085,0,0x0,8
tick,0x7ff86ea82704,19473934,0,0x0,8
tick,0x7ff86ea82704,19476085,0,0x0,8
tick,0x7ff86ea82704,19478022,0,0x0,8
tick,0x7ff86ea82704,19480079,0,0x0,8
tick,0x7ff86ea82704,19482124,0,0x0,8
tick,0x7ff86ea82704,19484007,0,0x0,8
tick,0x7ff86ea82704,19485855,0,0x0,8
tick,0x7ff86ea82704,19488167,0,0x0,8
tick,0x7ff86ea82704,19490092,0,0x0,8
tick,0x7ff86ea82704,19492242,0,0x0,8
tick,0x7ff86ea82704,19493895,0,0x0,8
tick,0x7ff86ea82704,19496212,0,0x0,8
tick,0x7ff86ea82704,19497825,0,0x0,8
tick,0x7ff86ea82704,19499845,0,0x0,8
tick,0x7ff86ea82704,19501932,0,0x0,8
tick,0x7ff86ea82704,19503863,0,0x0,8
tick,0x7ff86ea82704,19505723,0,0x0,8
tick,0x7ff86ea82704,19507820,0,0x0,8
tick,0x7ff86ea82704,19510048,0,0x0,8
tick,0x7ff86ea82704,19512322,0,0x0,8
tick,0x7ff86ea82704,19514278,0,0x0,8
tick,0x7ff86ea82704,19515878,0,0x0,8
tick,0x7ff86ea82704,19518210,0,0x0,8
tick,0x7ff86ea82704,19519810,0,0x0,8
tick,0x7ff86ea82704,19521905,0,0x0,8
tick,0x7ff86ea82704,19524377,0,0x0,8
tick,0x7ff86ea82704,19526505,0,0x0,8
tick,0x7ff86ea82704,19527770,0,0x0,8
tick,0x7ff86ea82704,19529665,0,0x0,8
tick,0x7ff86ea82704,19531752,0,0x0,8
tick,0x7ff86ea82704,19533804,0,0x0,8
tick,0x7ff86ea82704,19535748,0,0x0,8
tick,0x7ff86ea82704,19537776,0,0x0,8
tick,0x7ff86ea82704,19539953,0,0x0,8
tick,0x7ff86ea82704,19541937,0,0x0,8
tick,0x7ff86ea82704,19543856,0,0x0,8
tick,0x7ff86ea82704,19545989,0,0x0,8
tick,0x7ff86ea82704,19547663,0,0x0,8
tick,0x7ff86ea82704,19549816,0,0x0,8
tick,0x7ff86ea82704,19552040,0,0x0,8
tick,0x7ff86ea82704,19553715,0,0x0,8
tick,0x7ff86ea82704,19555873,0,0x0,8
tick,0x7ff86ea82704,19558644,0,0x0,8
tick,0x7ff86ea82704,19560227,0,0x0,8
tick,0x7ff86ea82704,19561892,0,0x0,8
tick,0x7ff86ea82704,19564148,0,0x0,8
tick,0x7ff86ea82704,19565824,0,0x0,8
tick,0x7ff86ea82704,19567650,0,0x0,8
tick,0x7ff86ea82704,19570129,0,0x0,8
tick,0x7ff86ea82704,19571731,0,0x0,8
tick,0x7ff86ea82704,19574749,0,0x0,8
tick,0x7ff86ea82704,19576479,0,0x0,8
tick,0x7ff86ea82704,19578535,0,0x0,8
tick,0x7ff86ea82704,19580438,0,0x0,8
tick,0x7ff86ea82704,19583485,0,0x0,8
tick,0x7ff86ea82704,19585720,0,0x0,8
tick,0x7ff86ea82704,19587839,0,0x0,8
tick,0x7ff86ea82704,19589721,0,0x0,8
tick,0x7ff86ea82704,19591706,0,0x0,8
tick,0x7ff86ea82704,19593939,0,0x0,8
tick,0x7ff86ea82704,19595551,0,0x0,8
tick,0x7ff86ea82704,19597744,0,0x0,8
tick,0x7ff86ea82704,19599538,0,0x0,8
tick,0x7ff86ea82704,19601816,0,0x0,8
tick,0x7ff86ea82704,19603617,0,0x0,8
tick,0x7ff86ea82704,19606000,0,0x0,8
tick,0x7ff86ea82704,19607740,0,0x0,8
tick,0x7ff86ea82704,19609557,0,0x0,8
tick,0x7ff86ea82704,19611827,0,0x0,8
tick,0x7ff86ea82704,19613485,0,0x0,8
tick,0x7ff86ea82704,19616064,0,0x0,8
tick,0x7ff86ea82704,19617746,0,0x0,8
tick,0x7ff86ea82704,19619593,0,0x0,8
tick,0x7ff86ea82704,19621403,0,0x0,8
tick,0x7ff86ea82704,19623630,0,0x0,8
tick,0x7ff86ea82704,19625467,0,0x0,8
tick,0x7ff86ea82704,19627700,0,0x0,8
tick,0x7ff86ea82704,19629492,0,0x0,8
tick,0x7ff86ea82704,19632044,0,0x0,8
tick,0x7ff86ea82704,19633342,0,0x0,8
tick,0x7ff86ea82704,19635427,0,0x0,8
tick,0x7ff86ea82704,19637604,0,0x0,8
tick,0x7ff86ea82704,19639293,0,0x0,8
tick,0x7ff86ea82704,19641435,0,0x0,8
tick,0x7ff86ea82704,19643362,0,0x0,8
tick,0x7ff86ea82704,19645335,0,0x0,8
tick,0x7ff86ea82704,19647449,0,0x0,8
tick,0x7ff86ea82704,19649756,0,0x0,8
tick,0x7ff86ea82704,19651512,0,0x0,8
tick,0x7ff86ea82704,19653468,0,0x0,8
tick,0x7ff86ea82704,19655550,0,0x0,8
tick,0x7ff86ea82704,19657584,0,0x0,8
tick,0x7ff86ea82704,19659410,0,0x0,8
tick,0x7ff86ea82704,19661408,0,0x0,8
tick,0x7ff86ea82704,19663415,0,0x0,8
tick,0x7ff86ea82704,19665738,0,0x0,8
tick,0x7ff86ea82704,19667678,0,0x0,8
tick,0x7ff86ea82704,19669527,0,0x0,8
tick,0x7ff86ea82704,19671893,0,0x0,8
tick,0x7ff86ea82704,19673394,0,0x0,8
tick,0x7ff86ea82704,19675721,0,0x0,8
tick,0x7ff86ea82704,19677371,0,0x0,8
tick,0x7ff86ea82704,19679503,0,0x0,8
tick,0x7ff86ea82704,19681423,0,0x0,8
tick,0x7ff86ea82704,19683410,0,0x0,8
tick,0x7ff86ea82704,19685331,0,0x0,8
tick,0x7ff86ea82704,19687460,0,0x0,8
tick,0x7ff86ea82704,19689387,0,0x0,8
tick,0x7ff86ea82704,19691768,0,0x0,8
tick,0x7ff86ea82704,19693836,0,0x0,8
tick,0x7ff86ea82704,19695463,0,0x0,8
tick,0x7ff86ea82704,19697925,0,0x0,8
tick,0x7ff86ea82704,19699307,0,0x0,8
tick,0x7ff86ea82704,19701260,0,0x0,8
tick,0x7ff86ea82704,19703202,0,0x0,8
tick,0x7ff86ea82704,19705320,0,0x0,8
tick,0x7ff86ea82704,19707175,0,0x0,8
tick,0x7ff86ea82704,19709158,0,0x0,8
tick,0x7ff86ea82704,19711537,0,0x0,8
tick,0x7ff86ea82704,19713249,0,0x0,8
tick,0x7ff86ea82704,19715158,0,0x0,8
tick,0x7ff86ea82704,19717246,0,0x0,8
tick,0x7ff86ea82704,19719187,0,0x0,8
tick,0x7ff86ea82704,19721241,0,0x0,8
tick,0x7ff86ea82704,19723172,0,0x0,8
tick,0x7ff86ea82704,19725406,0,0x0,8
tick,0x7ff86ea82704,19727287,0,0x0,8
tick,0x7ff86ea82704,19729059,0,0x0,8
tick,0x7ff86ea82704,19731229,0,0x0,8
tick,0x7ff86ea82704,19733167,0,0x0,8
tick,0x7ff86ea82704,19735112,0,0x0,8
tick,0x7ff86ea82704,19737102,0,0x0,8
tick,0x7ff86ea82704,19739051,0,0x0,8
tick,0x7ff86ea82704,19741121,0,0x0,8
tick,0x7ff86ea82704,19743014,0,0x0,8
tick,0x7ff86ea82704,19745184,0,0x0,8
tick,0x7ff86ea82704,19747035,0,0x0,8
tick,0x7ff86ea82704,19749191,0,0x0,8
tick,0x7ff86ea82704,19751088,0,0x0,8
tick,0x7ff86ea82704,19753056,0,0x0,8
tick,0x7ff86ea82704,19755156,0,0x0,8
tick,0x7ff86ea82704,19757201,0,0x0,8
tick,0x7ff86ea82704,19759361,0,0x0,8
tick,0x7ff86ea82704,19761170,0,0x0,8
tick,0x7ff86ea82704,19763302,0,0x0,8
tick,0x7ff86ea82704,19765134,0,0x0,8
tick,0x7ff86ea82704,19767385,0,0x0,8
tick,0x7ff86ea82704,19769301,0,0x0,8
tick,0x7ff86ea82704,19771171,0,0x0,8
tick,0x7ff86ea82704,19773398,0,0x0,8
tick,0x7ff86ea82704,19776652,0,0x0,8
tick,0x7ff86ea82704,19778128,0,0x0,8
tick,0x7ff86ea82704,19781046,0,0x0,8
tick,0x7ff86ea82704,19783236,0,0x0,8
tick,0x7ff86ea82704,19785210,0,0x0,8
tick,0x7ff86ea82704,19786978,0,0x0,8
tick,0x7ff86ea82704,19789143,0,0x0,8
tick,0x7ff86ea82704,19791079,0,0x0,8
tick,0x7ff86ea82704,19793036,0,0x0,8
tick,0x7ff86ea82704,19795179,0,0x0,8
tick,0x7ff86ea82704,19797322,0,0x0,8
tick,0x7ff86ea82704,19799014,0,0x0,8
tick,0x7ff86ea82704,19801114,0,0x0,8
tick,0x7ff86ea82704,19802938,0,0x0,8
tick,0x7ff86ea82704,19805093,0,0x0,8
tick,0x7ff86ea82704,19806860,0,0x0,8
tick,0x7ff86ea82704,19808973,0,0x0,8
tick,0x7ff86ea82704,19811240,0,0x0,8
tick,0x7ff86ea82704,19813163,0,0x0,8
tick,0x7ff86ea82704,19814954,0,0x0,8
tick,0x7ff86ea82704,19817079,0,0x0,8
tick,0x7ff86ea82704,19818889,0,0x0,8
tick,0x7ff86ea82704,19821058,0,0x0,8
tick,0x7ff86ea82704,19822943,0,0x0,8
tick,0x7ff86ea82704,19825246,0,0x0,8
tick,0x7ff86ea82704,19826870,0,0x0,8
tick,0x7ff86ea82704,19829017,0,0x0,8
tick,0x7ff86ea82704,19830902,0,0x0,8
tick,0x7ff86ea82704,19833114,0,0x0,8
tick,0x7ff86ea82704,19835028,0,0x0,8
tick,0x7ff86ea82704,19836836,0,0x0,8
tick,0x7ff86ea82704,19838924,0,0x0,8
tick,0x7ff86ea82704,19841627,0,0x0,8
tick,0x7ff86ea82704,19842950,0,0x0,8
tick,0x7ff86ea82704,19844799,0,0x0,8
tick,0x7ff86ea82704,19846863,0,0x0,8
tick,0x7ff86ea82704,19848956,0,0x0,8
tick,0x7ff86ea82704,19850981,0,0x0,8
tick,0x7ff86ea82704,19852803,0,0x0,8
tick,0x7ff86ea82704,19854984,0,0x0,8
tick,0x7ff86ea82704,19856829,0,0x0,8
tick,0x7ff86ea82704,19858880,0,0x0,8
tick,0x7ff86ea82704,19860912,0,0x0,8
tick,0x7ff86ea82704,19862977,0,0x0,8
tick,0x7ff86ea82704,19864858,0,0x0,8
tick,0x7ff86ea82704,19866806,0,0x0,8
tick,0x7ff86ea82704,19868785,0,0x0,8
tick,0x7ff86ea82704,19870898,0,0x0,8
tick,0x7ff86ea82704,19872683,0,0x0,8
tick,0x7ff86ea82704,19875032,0,0x0,8
tick,0x7ff86ea82704,19876781,0,0x0,8
tick,0x7ff86ea82704,19878971,0,0x0,8
tick,0x7ff86ea82704,19880728,0,0x0,8
tick,0x7ff86ea82704,19882864,0,0x0,8
tick,0x7ff86ea82704,19884805,0,0x0,8
tick,0x7ff86ea82704,19886792,0,0x0,8
tick,0x7ff86ea82704,19888838,0,0x0,8
tick,0x7ff86ea82704,19890811,0,0x0,8
tick,0x7ff86ea82704,19892664,0,0x0,8
tick,0x7ff86ea82704,19894815,0,0x0,8
tick,0x7ff86ea82704,19896858,0,0x0,8
tick,0x7ff86ea82704,19898823,0,0x0,8
tick,0x7ff86ea82704,19900667,0,0x0,8
tick,0x7ff86ea82704,19902892,0,0x0,8
tick,0x7ff86ea82704,19904820,0,0x0,8
tick,0x7ff86ea82704,19906968,0,0x0,8
tick,0x7ff86ea82704,19908791,0,0x0,8
tick,0x7ff86ea82704,19910847,0,0x0,8
tick,0x7ff86ea82704,19912684,0,0x0,8
tick,0x7ff86ea82704,19914807,0,0x0,8
tick,0x7ff86ea82704,19916900,0,0x0,8
tick,0x7ff86ea82704,19918817,0,0x0,8
tick,0x7ff86ea82704,19920846,0,0x0,8
tick,0x7ff86ea82704,19922794,0,0x0,8
tick,0x7ff86ea82704,19924667,0,0x0,8
tick,0x7ff86ea82704,19926779,0,0x0,8
tick,0x7ff86ea82704,19928858,0,0x0,8
tick,0x7ff86ea82704,19930926,0,0x0,8
tick,0x7ff86ea82704,19932710,0,0x0,8
tick,0x7ff86ea82704,19934592,0,0x0,8
tick,0x7ff86ea82704,19936650,0,0x0,8
tick,0x7ff86ea82704,19938725,0,0x0,8
tick,0x7ff86ea82704,19940592,0,0x0,8
tick,0x7ff86ea82704,19942786,0,0x0,8
tick,0x7ff86ea82704,19944768,0,0x0,8
tick,0x7ff86ea82704,19946652,0,0x0,8
tick,0x7ff86ea82704,19948619,0,0x0,8
tick,0x7ff86ea82704,19950742,0,0x0,8
tick,0x7ff86ea82704,19952493,0,0x0,8
tick,0x7ff86ea82704,19954633,0,0x0,8
tick,0x7ff86ea82704,19956631,0,0x0,8
tick,0x7ff86ea82704,19958575,0,0x0,8
tick,0x7ff86ea82704,19960636,0,0x0,8
tick,0x7ff86ea82704,19962434,0,0x0,8
tick,0x7ff86ea82704,19964926,0,0x0,8
tick,0x7ff86ea82704,19966620,0,0x0,8
tick,0x7ff86ea82704,19968695,0,0x0,8
tick,0x7ff86ea82704,19970531,0,0x0,8
tick,0x7ff86ea82704,19972495,0,0x0,8
tick,0x7ff86ea82704,19974748,0,0x0,8
tick,0x7ff86ea82704,19976704,0,0x0,8
tick,0x7ff86ea82704,19978450,0,0x0,8
tick,0x7ff86ea82704,19980504,0,0x0,8
tick,0x7ff86ea82704,19982650,0,0x0,8
tick,0x7ff86ea82704,19984464,0,0x0,8
tick,0x7ff86ea82704,19986435,0,0x0,8
tick,0x7ff86ea82704,19988599,0,0x0,8
tick,0x7ff86ea82704,19990454,0,0x0,8
tick,0x7ff86ea82704,19992594,0,0x0,8
tick,0x7ff86ea82704,19994476,0,0x0,8
tick,0x7ff86ea82704,19996937,0,0x0,8
tick,0x7ff86ea82704,19998759,0,0x0,8
tick,0x7ff86ea82704,20000646,0,0x0,8
tick,0x7ff86ea82704,20002411,0,0x0,8
tick,0x7ff86ea82704,20004497,0,0x0,8
tick,0x7ff86ea82704,20006479,0,0x0,8
tick,0x7ff86ea82704,20008661,0,0x0,8
tick,0x7ff86ea82704,20010374,0,0x0,8
tick,0x7ff86ea82704,20012500,0,0x0,8
tick,0x7ff86ea82704,20014427,0,0x0,8
tick,0x7ff86ea82704,20016867,0,0x0,8
tick,0x7ff86ea82704,20018480,0,0x0,8
tick,0x7ff86ea82704,20020663,0,0x0,8
tick,0x7ff86ea82704,20022391,0,0x0,8
tick,0x7ff86ea82704,20024501,0,0x0,8
tick,0x7ff86ea82704,20026325,0,0x0,8
tick,0x7ff86ea82704,20028481,0,0x0,8
tick,0x7ff86ea82704,20030362,0,0x0,8
tick,0x7ff86ea82704,20032413,0,0x0,8
tick,0x7ff86ea82704,20034386,0,0x0,8
tick,0x7ff86ea82704,20036355,0,0x0,8
tick,0x7ff86ea82704,20038433,0,0x0,8
tick,0x7ff86ea82704,20040450,0,0x0,8
tick,0x7ff86ea82704,20042292,0,0x0,8
tick,0x7ff86ea82704,20044392,0,0x0,8
tick,0x7ff86ea82704,20046407,0,0x0,8
tick,0x7ff86ea82704,20048504,0,0x0,8
tick,0x7ff86ea82704,20050328,0,0x0,8
tick,0x7ff86ea82704,20052278,0,0x0,8
tick,0x7ff86ea82704,20054478,0,0x0,8
tick,0x7ff86ea82704,20056379,0,0x0,8
tick,0x7ff86ea82704,20058414,0,0x0,8
tick,0x7ff86ea82704,20060323,0,0x0,8
tick,0x7ff86ea82704,20062295,0,0x0,8
tick,0x7ff86ea82704,20064271,0,0x0,8
tick,0x7ff86ea82704,20066328,0,0x0,8
tick,0x7ff86ea82704,20068421,0,0x0,8
tick,0x7ff86ea82704,20070207,0,0x0,8
tick,0x7ff86ea82704,20072297,0,0x0,8
tick,0x7ff86ea82704,20074331,0,0x0,8
tick,0x7ff86ea82704,20076207,0,0x0,8
tick,0x7ff86ea82704,20078250,0,0x0,8
tick,0x7ff86ea82704,20080389,0,0x0,8
tick,0x7ff86ea82704,20082335,0,0x0,8
tick,0x7ff86ea82704,20084398,0,0x0,8
tick,0x7ff86ea82704,20086166,0,0x0,8
tick,0x7ff86ea82704,20088281,0,0x0,8
tick,0x7ff86ea82704,20090251,0,0x0,8
tick,0x7ff86ea82704,20092227,0,0x0,8
tick,0x7ff86ea82704,20094209,0,0x0,8
tick,0x7ff86ea82704,20096301,0,0x0,8
tick,0x7ff86ea82704,20098201,0,0x0,8
tick,0x7ff86ea82704,20100251,0,0x0,8
tick,0x7ff86ea82704,20102361,0,0x0,8
tick,0x7ff86ea82704,20104270,0,0x0,8
tick,0x7ff86ea82704,20106161,0,0x0,8
tick,0x7ff86ea82704,20108269,0,0x0,8
tick,0x7ff86ea82704,20110195,0,0x0,8
tick,0x7ff86ea82704,20112558,0,0x0,8
tick,0x7ff86ea82704,20114231,0,0x0,8
tick,0x7ff86ea82704,20116239,0,0x0,8
tick,0x7ff86ea82704,20118141,0,0x0,8
tick,0x7ff86ea82704,20120599,0,0x0,8
tick,0x7ff86ea82704,20122132,0,0x0,8
tick,0x7ff86ea82704,20124176,0,0x0,8
tick,0x7ff86ea82704,20126375,0,0x0,8
tick,0x7ff86ea82704,20128157,0,0x0,8
tick,0x7ff86ea82704,20130129,0,0x0,8
tick,0x7ff86ea82704,20132219,0,0x0,8
tick,0x7ff86ea82704,20134307,0,0x0,8
tick,0x7ff86ea82704,20136247,0,0x0,8
tick,0x7ff86ea82704,20138169,0,0x0,8
tick,0x7ff86ea82704,20140086,0,0x0,8
tick,0x7ff86ea82704,20142136,0,0x0,8
tick,0x7ff86ea82704,20144196,0,0x0,8
tick,0x7ff86ea82704,20145943,0,0x0,8
tick,0x7ff86ea82704,20148149,0,0x0,8
tick,0x7ff86ea82704,20150009,0,0x0,8
tick,0x7ff86ea82704,20152078,0,0x0,8
tick,0x7ff86ea82704,20153992,0,0x0,8
tick,0x7ff86ea82704,20156050,0,0x0,8
tick,0x7ff86ea82704,20158059,0,0x0,8
tick,0x7ff86ea82704,20160151,0,0x0,8
tick,0x7ff86ea82704,20162324,0,0x0,8
tick,0x7ff86ea82704,20164502,0,0x0,8
tick,0x7ff86ea82704,20166443,0,0x0,8
tick,0x7ff86ea82704,20168008,0,0x0,8
tick,0x7ff86ea82704,20170031,0,0x0,8
tick,0x7ff86ea82704,20172115,0,0x0,8
tick,0x7ff86ea82704,20174308,0,0x0,8
tick,0x7ff86ea82704,20176332,0,0x0,8
tick,0x7ff86ea82704,20179165,0,0x0,8
tick,0x7ff86ea82704,20180336,0,0x0,8
tick,0x7ff86ea82704,20182268,0,0x0,8
tick,0x7ff86ea82704,20184024,0,0x0,8
tick,0x7ff86ea82704,20186323,0,0x0,8
tick,0x7ff86ea82704,20188000,0,0x0,8
tick,0x7ff86ea82704,20190178,0,0x0,8
tick,0x7ff86ea82704,20192047,0,0x0,8
tick,0x7ff86ea82704,20194051,0,0x0,8
tick,0x7ff86ea82704,20195939,0,0x0,8
tick,0x7ff86ea82704,20198066,0,0x0,8
tick,0x7ff86ea82704,20199922,0,0x0,8
tick,0x7ff86ea82704,20201934,0,0x0,8
tick,0x7ff86ea82704,20203918,0,0x0,8
tick,0x7ff86ea82704,20206207,0,0x0,8
tick,0x7ff86ea82704,20207836,0,0x0,8
tick,0x7ff86ea82704,20209869,0,0x0,8
tick,0x7ff86ea82704,20211786,0,0x0,8
tick,0x7ff86ea82704,20213844,0,0x0,8
tick,0x7ff86ea82704,20215781,0,0x0,8
tick,0x7ff86ea82704,20217901,0,0x0,8
tick,0x7ff86ea82704,20219803,0,0x0,8
tick,0x7ff86ea82704,20222141,0,0x0,8
tick,0x7ff86ea82704,20223728,0,0x0,8
tick,0x7ff86ea82704,20225939,0,0x0,8
tick,0x7ff86ea82704,20227728,0,0x0,8
tick,0x7ff86ea82704,20229861,0,0x0,8
tick,0x7ff86ea82704,20231776,0,0x0,8
tick,0x7ff86ea82704,20233867,0,0x0,8
tick,0x7ff86ea82704,20235748,0,0x0,8
tick,0x7ff86ea82704,20237771,0,0x0,8
tick,0x7ff86ea82704,20239806,0,0x0,8
tick,0x7ff86ea82704,20241846,0,0x0,8
tick,0x7ff86ea82704,20243922,0,0x0,8
tick,0x7ff86ea82704,20245752,0,0x0,8
tick,0x7ff86ea82704,20247744,0,0x0,8
tick,0x7ff86ea82704,20249807,0,0x0,8
tick,0x7ff86ea82704,20251786,0,0x0,8
tick,0x7ff86ea82704,20253799,0,0x0,8
tick,0x7ff86ea82704,20255792,0,0x0,8
tick,0x7ff86ea82704,20257747,0,0x0,8
tick,0x7ff86ea82704,20259866,0,0x0,8
tick,0x7ff86ea82704,20261730,0,0x0,8
tick,0x7ff86ea82704,20263921,0,0x0,8
tick,0x7ff86ea82704,20265721,0,0x0,8
tick,0x7ff86ea82704,20268022,0,0x0,8
tick,0x7ff86ea82704,20269606,0,0x0,8
tick,0x7ff86ea82704,20271699,0,0x0,8
tick,0x7ff86ea82704,20273738,0,0x0,8
tick,0x7ff86ea82704,20275752,0,0x0,8
tick,0x7ff86ea82704,20277872,0,0x0,8
tick,0x7ff86ea82704,20279729,0,0x0,8
tick,0x7ff86ea82704,20281720,0,0x0,8
tick,0x7ff86ea82704,20283739,0,0x0,8
tick,0x7ff86ea82704,20285639,0,0x0,8
tick,0x7ff86ea82704,20287676,0,0x0,8
tick,0x7ff86ea82704,20289584,0,0x0,8
tick,0x7ff86ea82704,20291741,0,0x0,8
tick,0x7ff86ea82704,20293645,0,0x0,8
tick,0x7ff86ea82704,20295618,0,0x0,8
tick,0x7ff86ea82704,20297605,0,0x0,8
tick,0x7ff86ea82704,20299832,0,0x0,8
tick,0x7ff86ea82704,20301863,0,0x0,8
tick,0x7ff86ea82704,20303904,0,0x0,8
tick,0x7ff86ea82704,20306581,0,0x0,8
tick,0x7ff86ea82704,20307751,0,0x0,8
tick,0x7ff86ea82704,20309677,0,0x0,8
tick,0x7ff86ea82704,20311759,0,0x0,8
tick,0x7ff86ea82704,20313572,0,0x0,8
tick,0x7ff86ea82704,20315836,0,0x0,8
tick,0x7ff86ea82704,20317783,0,0x0,8
tick,0x7ff86ea82704,20319670,0,0x0,8
tick,0x7ff86ea82704,20321608,0,0x0,8
tick,0x7ff86ea82704,20323704,0,0x0,8
tick,0x7ff86ea82704,20325557,0,0x0,8
tick,0x7ff86ea82704,20327553,0,0x0,8
tick,0x7ff86ea82704,20329538,0,0x0,8
tick,0x7ff86ea82704,20331545,0,0x0,8
tick,0x7ff86ea82704,20333626,0,0x0,8
tick,0x7ff86ea82704,20335647,0,0x0,8
tick,0x7ff86ea82704,20337530,0,0x0,8
tick,0x7ff86ea82704,20339567,0,0x0,8
tick,0x7ff86ea82704,20341682,0,0x0,8
tick,0x7ff86ea82704,20343566,0,0x0,8
tick,0x7ff86ea82704,20345497,0,0x0,8
tick,0x7ff86ea82704,20347543,0,0x0,8
tick,0x7ff86ea82704,20349468,0,0x0,8
tick,0x7ff86ea82704,20351539,0,0x0,8
tick,0x7ff86ea82704,20353529,0,0x0,8
tick,0x7ff86ea82704,20355614,0,0x0,8
tick,0x7ff86ea82704,20357435,0,0x0,8
tick,0x7ff86ea82704,20359443,0,0x0,8
tick,0x7ff86ea82704,20361526,0,0x0,8
tick,0x7ff86ea82704,20363438,0,0x0,8
tick,0x7ff86ea82704,20365521,0,0x0,8
tick,0x7ff86ea82704,20367534,0,0x0,8
tick,0x7ff86ea82704,20369637,0,0x0,8
tick,0x7ff86ea82704,20371673,0,0x0,8
tick,0x7ff86ea82704,20373522,0,0x0,8
tick,0x7ff86ea82704,20375492,0,0x0,8
tick,0x7ff86ea82704,20377558,0,0x0,8
tick,0x7ff86ea82704,20379648,0,0x0,8
tick,0x7ff86ea82704,20381631,0,0x0,8
tick,0x7ff86ea82704,20383581,0,0x0,8
tick,0x7ff86ea82704,20385461,0,0x0,8
tick,0x7ff86ea82704,20387348,0,0x0,8
tick,0x7ff86ea82704,20389576,0,0x0,8
tick,0x7ff86ea82704,20391378,0,0x0,8
tick,0x7ff86ea82704,20393553,0,0x0,8
tick,0x7ff86ea82704,20395387,0,0x0,8
tick,0x7ff86ea82704,20397508,0,0x0,8
tick,0x7ff86ea82704,20399773,0,0x0,8
tick,0x7ff86ea82704,20401856,0,0x0,8
tick,0x7ff86ea82704,20403715,0,0x0,8
tick,0x7ff86ea82704,20405625,0,0x0,8
tick,0x7ff86ea82704,20407548,0,0x0,8
tick,0x7ff86ea82704,20409496,0,0x0,8
tick,0x7ff86ea82704,20411620,0,0x0,8
tick,0x7ff86ea82704,20413650,0,0x0,8
tick,0x7ff86ea82704,20415362,0,0x0,8
tick,0x7ff86ea82704,20417492,0,0x0,8
tick,0x7ff86ea82704,20419290,0,0x0,8
tick,0x7ff86ea82704,20421327,0,0x0,8
tick,0x7ff86ea82704,20423300,0,0x0,8
tick,0x7ff86ea82704,20425368,0,0x0,8
tick,0x7ff86ea82704,20427305,0,0x0,8
tick,0x7ff86ea82704,20429374,0,0x0,8
tick,0x7ff86ea82704,20431417,0,0x0,8
tick,0x7ff86ea82704,20433337,0,0x0,8
tick,0x7ff86ea82704,20435306,0,0x0,8
tick,0x7ff86ea82704,20437320,0,0x0,8
tick,0x7ff86ea82704,20439321,0,0x0,8
tick,0x7ff86ea82704,20441282,0,0x0,8
tick,0x7ff86ea82704,20443318,0,0x0,8
tick,0x7ff86ea82704,20445355,0,0x0,8
tick,0x7ff86ea82704,20447272,0,0x0,8
tick,0x7ff86ea82704,20449343,0,0x0,8
tick,0x7ff86ea82704,20451298,0,0x0,8
tick,0x7ff86ea82704,20453357,0,0x0,8
tick,0x7ff86ea82704,20455297,0,0x0,8
tick,0x7ff86ea82704,20457341,0,0x0,8
tick,0x7ff86ea82704,20459217,0,0x0,8
tick,0x7ff86ea82704,20461340,0,0x0,8
tick,0x7ff86ea82704,20463211,0,0x0,8
tick,0x7ff86ea82704,20465306,0,0x0,8
tick,0x7ff86ea82704,20467273,0,0x0,8
tick,0x7ff86ea82704,20469321,0,0x0,8
tick,0x7ff86ea82704,20471240,0,0x0,8
tick,0x7ff86ea82704,20473187,0,0x0,8
tick,0x7ff86ea82704,20475379,0,0x0,8
tick,0x7ff86ea82704,20477093,0,0x0,8
tick,0x7ff86ea82704,20479159,0,0x0,8
tick,0x7ff86ea82704,20481565,0,0x0,8
tick,0x7ff86ea82704,20483081,0,0x0,8
tick,0x7ff86ea82704,20485275,0,0x0,8
tick,0x7ff86ea82704,20487181,0,0x0,8
tick,0x7ff86ea82704,20489314,0,0x0,8
tick,0x7ff86ea82704,20491217,0,0x0,8
tick,0x7ff86ea82704,20493729,0,0x0,8
tick,0x7ff86ea82704,20495234,0,0x0,8
tick,0x7ff86ea82704,20497307,0,0x0,8
tick,0x7ff86ea82704,20499102,0,0x0,8
tick,0x7ff86ea82704,20501179,0,0x0,8
tick,0x7ff86ea82704,20503174,0,0x0,8
tick,0x7ff86ea82704,20505524,0,0x0,8
tick,0x7ff86ea82704,20507168,0,0x0,8
tick,0x7ff86ea82704,20509112,0,0x0,8
tick,0x7ff86ea82704,20511264,0,0x0,8
tick,0x7ff86ea82704,20513092,0,0x0,8
tick,0x7ff86ea82704,20515137,0,0x0,8
tick,0x7ff86ea82704,20517197,0,0x0,8
tick,0x7ff86ea82704,20519276,0,0x0,8
tick,0x7ff86ea82704,20521211,0,0x0,8
tick,0x7ff86ea82704,20523095,0,0x0,8
tick,0x7ff86ea82704,20525143,0,0x0,8
tick,0x7ff86ea82704,20527062,0,0x0,8
tick,0x7ff86ea82704,20529109,0,0x0,8
tick,0x7ff86ea82704,20531020,0,0x0,8
tick,0x7ff86ea82704,20533068,0,0x0,8
tick,0x7ff86ea82704,20534962,0,0x0,8
tick,0x7ff86ea82704,20537302,0,0x0,8
tick,0x7ff86ea82704,20539155,0,0x0,8
tick,0x7ff86ea82704,20540952,0,0x0,8
tick,0x7ff86ea82704,20543114,0,0x0,8
tick,0x7ff86ea82704,20545063,0,0x0,8
tick,0x7ff86ea82704,20547139,0,0x0,8
tick,0x7ff86ea82704,20549118,0,0x0,8
tick,0x7ff86ea82704,20551759,0,0x0,8
tick,0x7ff86ea82704,20553313,0,0x0,8
tick,0x7ff86ea82704,20555657,0,0x0,8
tick,0x7ff86ea82704,20557083,0,0x0,8
tick,0x7ff86ea82704,20559073,0,0x0,8
tick,0x7ff86ea82704,20561084,0,0x0,8
tick,0x7ff86ea82704,20563026,0,0x0,8
tick,0x7ff86ea82704,20564944,0,0x0,8
tick,0x7ff86ea82704,20566941,0,0x0,8
tick,0x7ff86ea82704,20569289,0,0x0,8
tick,0x7ff86ea82704,20570949,0,0x0,8
tick,0x7ff86ea82704,20573093,0,0x0,8
tick,0x7ff86ea82704,20574816,0,0x0,8
tick,0x7ff86ea82704,20577097,0,0x0,8
tick,0x7ff86ea82704,20578922,0,0x0,8
tick,0x7ff86ea82704,20580917,0,0x0,8
tick,0x7ff86ea82704,20582799,0,0x0,8
tick,0x7ff86ea82704,20585397,0,0x0,8
tick,0x7ff86ea82704,20586854,0,0x0,8
tick,0x7ff86ea82704,20589405,0,0x0,8
tick,0x7ff86ea82704,20590879,0,0x0,8
tick,0x7ff86ea82704,20593127,0,0x0,8
tick,0x7ff86ea82704,20594777,0,0x0,8
tick,0x7ff86ea82704,20597006,0,0x0,8
tick,0x7ff86ea82704,20598811,0,0x0,8
tick,0x7ff86ea82704,20600883,0,0x0,8
tick,0x7ff86ea82704,20602972,0,0x0,8
tick,0x7ff86ea82704,20604785,0,0x0,8
tick,0x7ff86ea82704,20607080,0,0x0,8
tick,0x7ff86ea82704,20609099,0,0x0,8
tick,0x7ff86ea82704,20610970,0,0x0,8
tick,0x7ff86ea82704,20612920,0,0x0,8
tick,0x7ff86ea82704,20614870,0,0x0,8
tick,0x7ff86ea82704,20616819,0,0x0,8
tick,0x7ff86ea82704,20618887,0,0x0,8
tick,0x7ff86ea82704,20620724,0,0x0,8
tick,0x7ff86ea82704,20623012,0,0x0,8
tick,0x7ff86ea82704,20624711,0,0x0,8
tick,0x7ff86ea82704,20626847,0,0x0,8
tick,0x7ff86ea82704,20628684,0,0x0,8
tick,0x7ff86ea82704,20630979,0,0x0,8
tick,0x7ff86ea82704,20632655,0,0x0,8
tick,0x7ff86ea82704,20634760,0,0x0,8
tick,0x7ff86ea82704,20636798,0,0x0,8
tick,0x7ff86ea82704,20638828,0,0x0,8
tick,0x7ff86ea82704,20641068,0,0x0,8
tick,0x7ff86ea82704,20642757,0,0x0,8
tick,0x7ff86ea82704,20644687,0,0x0,8
tick,0x7ff86ea82704,20646731,0,0x0,8
tick,0x7ff86ea82704,20648691,0,0x0,8
tick,0x7ff86ea82704,20650710,0,0x0,8
tick,0x7ff86ea82704,20652684,0,0x0,8
tick,0x7ff86ea82704,20654790,0,0x0,8
tick,0x7ff86ea82704,20657023,0,0x0,8
tick,0x7ff86ea82704,20658843,0,0x0,8
tick,0x7ff86ea82704,20660653,0,0x0,8
tick,0x7ff86ea82704,20662838,0,0x0,8
tick,0x7ff86ea82704,20665009,0,0x0,8
tick,0x7ff86ea82704,20666756,0,0x0,8
tick,0x7ff86ea82704,20668652,0,0x0,8
tick,0x7ff86ea82704,20670691,0,0x0,8
tick,0x7ff86ea82704,20673059,0,0x0,8
tick,0x7ff86ea82704,20674853,0,0x0,8
tick,0x7ff86ea82704,20676670,0,0x0,8
tick,0x7ff86ea82704,20678678,0,0x0,8
tick,0x7ff86ea82704,20681062,0,0x0,8
tick,0x7ff86ea82704,20682733,0,0x0,8
tick,0x7ff86ea82704,20685263,0,0x0,8
tick,0x7ff86ea82704,20686608,0,0x0,8
tick,0x7ff86ea82704,20690119,0,0x0,8
tick,0x7ff86ea82704,20691759,0,0x0,8
tick,0x7ff86ea82704,20693770,0,0x0,8
tick,0x7ff86ea82704,20695894,0,0x0,8
tick,0x7ff86ea82704,20697879,0,0x0,8
tick,0x7ff86ea82704,20699713,0,0x0,8
tick,0x7ff86ea82704,20701651,0,0x0,8
tick,0x7ff86ea82704,20703723,0,0x0,8
tick,0x7ff86ea82704,20706159,0,0x0,8
tick,0x7ff86ea82704,20707927,0,0x0,8
tick,0x7ff86ea82704,20710240,0,0x0,8
tick,0x7ff86ea82704,20711546,0,0x0,8
tick,0x7ff86ea82704,20713833,0,0x0,8
tick,0x7ff86ea82704,20715554,0,0x0,8
tick,0x7ff86ea82704,20717557,0,0x0,8
tick,0x7ff86ea82704,20719498,0,0x0,8
tick,0x7ff86ea82704,20721876,0,0x0,8
tick,0x7ff86ea82704,20723563,0,0x0,8
tick,0x7ff86ea82704,20725586,0,0x0,8
tick,0x7ff86ea82704,20727487,0,0x0,8
tick,0x7ff86ea82704,20729810,0,0x0,8
tick,0x7ff86ea82704,20731607,0,0x0,8
tick,0x7ff86ea82704,20733600,0,0x0,8
tick,0x7ff86ea82704,20735542,0,0x0,8
tick,0x7ff86ea82704,20737673,0,0x0,8
tick,0x7ff86ea82704,20739556,0,0x0,8
tick,0x7ff86ea82704,20741417,0,0x0,8
tick,0x7ff86ea82704,20743873,0,0x0,8
tick,0x7ff86ea82704,20745486,0,0x0,8
tick,0x7ff86ea82704,20747467,0,0x0,8
tick,0x7ff86ea82704,20749508,0,0x0,8
tick,0x7ff86ea82704,20751544,0,0x0,8
tick,0x7ff86ea82704,20753441,0,0x0,8
tick,0x7ff86ea82704,20756415,0,0x0,8
tick,0x7ff86ea82704,20758691,0,0x0,8
tick,0x7ff86ea82704,20760325,0,0x0,8
tick,0x7ff86ea82704,20762452,0,0x0,8
tick,0x7ff86ea82704,20764370,0,0x0,8
tick,0x7ff86ea82704,20766540,0,0x0,8
tick,0x7ff86ea82704,20768540,0,0x0,8
tick,0x7ff86ea82704,20770561,0,0x0,8
tick,0x7ff86ea82704,20772777,0,0x0,8
tick,0x7ff86ea82704,20775234,0,0x0,8
tick,0x7ff86ea82704,20776800,0,0x0,8
tick,0x7ff86ea82704,20778640,0,0x0,8
tick,0x7ff86ea82704,20780523,0,0x0,8
tick,0x7ff86ea82704,20782629,0,0x0,8
tick,0x7ff86ea82704,20785682,0,0x0,8
tick,0x7ff86ea82704,20786573,0,0x0,8
tick,0x7ff86ea82704,20788472,0,0x0,8
tick,0x7ff86ea82704,20791137,0,0x0,8
tick,0x7ff86ea82704,20793950,0,0x0,8
tick,0x7ff86ea82704,20794859,0,0x0,8
tick,0x7ff86ea82704,20796313,0,0x0,8
tick,0x7ff86ea82704,20798280,0,0x0,8
tick,0x7ff86ea82704,20800530,0,0x0,8
tick,0x7ff86ea82704,20802363,0,0x0,8
tick,0x7ff86ea82704,20804292,0,0x0,8
tick,0x7ff86ea82704,20806996,0,0x0,8
tick,0x7ff86ea82704,20808872,0,0x0,8
tick,0x7ff86ea82704,20811370,0,0x0,8
tick,0x7ff86ea82704,20812244,0,0x0,8
tick,0x7ff86ea82704,20814211,0,0x0,8
tick,0x7ff86ea82704,20816221,0,0x0,8
tick,0x7ff86ea82704,20818256,0,0x0,8
tick,0x7ff86ea82704,20820196,0,0x0,8
tick,0x7ff86ea82704,20822407,0,0x0,8
tick,0x7ff86ea82704,20825463,0,0x0,8
tick,0x7ff86ea82704,20827534,0,0x0,8
tick,0x7ff86ea82704,20829758,0,0x0,8
tick,0x7ff86ea82704,20831218,0,0x0,8
tick,0x7ff86ea82704,20833153,0,0x0,8
tick,0x7ff86ea82704,20835225,0,0x0,8
tick,0x7ff86ea82704,20837277,0,0x0,8
tick,0x7ff86ea82704,20839387,0,0x0,8
tick,0x7ff86ea82704,20841817,0,0x0,8
tick,0x7ff86ea82704,20843424,0,0x0,8
tick,0x7ff86ea82704,20845452,0,0x0,8
tick,0x7ff86ea82704,20847172,0,0x0,8
tick,0x7ff86ea82704,20849358,0,0x0,8
tick,0x7ff86ea82704,20851344,0,0x0,8
tick,0x7ff86ea82704,20854702,0,0x0,8
tick,0x7ff86ea82704,20856685,0,0x0,8
tick,0x7ff86ea82704,20858664,0,0x0,8
tick,0x7ff86ea82704,20860147,0,0x0,8
tick,0x7ff86ea82704,20862281,0,0x0,8
tick,0x7ff86ea82704,20864299,0,0x0,8
tick,0x7ff86ea82704,20866292,0,0x0,8
tick,0x7ff86ea82704,20868331,0,0x0,8
tick,0x7ff86ea82704,20871005,0,0x0,8
tick,0x7ff86ea82704,20872330,0,0x0,8
tick,0x7ff86ea82704,20875022,0,0x0,8
tick,0x7ff86ea82704,20877255,0,0x0,8
tick,0x7ff86ea82704,20878994,0,0x0,8
tick,0x7ff86ea82704,20881198,0,0x0,8
tick,0x7ff86ea82704,20883074,0,0x0,8
tick,0x7ff86ea82704,20886313,0,0x0,8
tick,0x7ff86ea82704,20887216,0,0x0,8
tick,0x7ff86ea82704,20889240,0,0x0,8
tick,0x7ff86ea82704,20892007,0,0x0,8
tick,0x7ff86ea82704,20894478,0,0x0,8
tick,0x7ff86ea82704,20896027,0,0x0,8
tick,0x7ff86ea82704,20898120,0,0x0,8
tick,0x7ff86ea82704,20900039,0,0x0,8
tick,0x7ff86ea82704,20902863,0,0x0,8
tick,0x7ff86ea82704,20903961,0,0x0,8
tick,0x7ff86ea82704,20907780,0,0x0,8
tick,0x7ff86ea82704,20908641,0,0x0,8
tick,0x7ff86ea82704,20910423,0,0x0,8
tick,0x7ff86ea82704,20912199,0,0x0,8
tick,0x7ff86ea82704,20914271,0,0x0,8
tick,0x7ff86ea82704,20916102,0,0x0,8
tick,0x7ff86ea82704,20918152,0,0x0,8
tick,0x7ff86ea82704,20919987,0,0x0,8
tick,0x7ff86ea82704,20922297,0,0x0,8
tick,0x7ff86ea82704,20924647,0,0x0,8
tick,0x7ff86ea82704,20926207,0,0x0,8
tick,0x7ff86ea82704,20928191,0,0x0,8
tick,0x7ff86ea82704,20929965,0,0x0,8
tick,0x7ff86ea82704,20932030,0,0x0,8
tick,0x7ff86ea82704,20934340,0,0x0,8
tick,0x7ff86ea82704,20935840,0,0x0,8
tick,0x7ff86ea82704,20938310,0,0x0,8
tick,0x7ff86ea82704,20940581,0,0x0,8
tick,0x7ff86ea82704,20943337,0,0x0,8
tick,0x7ff86ea82704,20945291,0,0x0,8
tick,0x7ff86ea82704,20947045,0,0x0,8
tick,0x7ff86ea82704,20948952,0,0x0,8
tick,0x7ff86ea82704,20951047,0,0x0,8
tick,0x7ff86ea82704,20952962,0,0x0,8
tick,0x7ff86ea82704,20954846,0,0x0,8
tick,0x7ff86ea82704,20957041,0,0x0,8
tick,0x7ff86ea82704,20958943,0,0x0,8
tick,0x7ff86ea82704,20960877,0,0x0,8
tick,0x7ff86ea82704,20962912,0,0x0,8
tick,0x7ff86ea82704,20964891,0,0x0,8
tick,0x7ff86ea82704,20966878,0,0x0,8
tick,0x7ff86ea82704,20968856,0,0x0,8
tick,0x7ff86ea82704,20971019,0,0x0,8
tick,0x7ff86ea82704,20973106,0,0x0,8
tick,0x7ff86ea82704,20975054,0,0x0,8
tick,0x7ff86ea82704,20976793,0,0x0,8
tick,0x7ff86ea82704,20978870,0,0x0,8
tick,0x7ff86ea82704,20980823,0,0x0,8
tick,0x7ff86ea82704,20982861,0,0x0,8
tick,0x7ff86ea82704,20984833,0,0x0,8
tick,0x7ff86ea82704,20987060,0,0x0,8
tick,0x7ff86ea82704,20989016,0,0x0,8
tick,0x7ff86ea82704,20991028,0,0x0,8
tick,0x7ff86ea82704,20992825,0,0x0,8
tick,0x7ff86ea82704,20994914,0,0x0,8
tick,0x7ff86ea82704,20996847,0,0x0,8
tick,0x7ff86ea82704,20998945,0,0x0,8
tick,0x7ff86ea82704,21000847,0,0x0,8
tick,0x7ff86ea82704,21002871,0,0x0,8
tick,0x7ff86ea82704,21004784,0,0x0,8
tick,0x7ff86ea82704,21007021,0,0x0,8
tick,0x7ff86ea82704,21008733,0,0x0,8
tick,0x7ff86ea82704,21010975,0,0x0,8
tick,0x7ff86ea82704,21012756,0,0x0,8
tick,0x7ff86ea82704,21014746,0,0x0,8
tick,0x7ff86ea82704,21016696,0,0x0,8
tick,0x7ff86ea82704,21018848,0,0x0,8
tick,0x7ff86ea82704,21020789,0,0x0,8
tick,0x7ff86ea82704,21023140,0,0x0,8
tick,0x7ff86ea82704,21024770,0,0x0,8
tick,0x7ff86ea82704,21026980,0,0x0,8
tick,0x7ff86ea82704,21028823,0,0x0,8
tick,0x7ff86ea82704,21030689,0,0x0,8
tick,0x7ff86ea82704,21032703,0,0x0,8
tick,0x7ff86ea82704,21035120,0,0x0,8
tick,0x7ff86ea82704,21036761,0,0x0,8
tick,0x7ff86ea82704,21038724,0,0x0,8
tick,0x7ff86ea82704,21040969,0,0x0,8
tick,0x7ff86ea82704,21042689,0,0x0,8
tick,0x7ff86ea82704,21044692,0,0x0,8
tick,0x7ff86ea82704,21046635,0,0x0,8
tick,0x7ff86ea82704,21048902,0,0x0,8
tick,0x7ff86ea82704,21050680,0,0x0,8
tick,0x7ff86ea82704,21052654,0,0x0,8
tick,0x7ff86ea82704,21054633,0,0x0,8
tick,0x7ff86ea82704,21057168,0,0x0,8
tick,0x7ff86ea82704,21058647,0,0x0,8
tick,0x7ff86ea82704,21060680,0,0x0,8
tick,0x7ff86ea82704,21062619,0,0x0,8
tick,0x7ff86ea82704,21064610,0,0x0,8
tick,0x7ff86ea82704,21066893,0,0x0,8
tick,0x7ff86ea82704,21068631,0,0x0,8
tick,0x7ff86ea82704,21071614,0,0x0,8
tick,0x7ff86ea82704,21073705,0,0x0,8
tick,0x7ff86ea82704,21075758,0,0x0,8
tick,0x7ff86ea82704,21077572,0,0x0,8
tick,0x7ff86ea82704,21079474,0,0x0,8
tick,0x7ff86ea82704,21081564,0,0x0,8
tick,0x7ff86ea82704,21083733,0,0x0,8
tick,0x7ff86ea82704,21085432,0,0x0,8
tick,0x7ff86ea82704,21087514,0,0x0,8
tick,0x7ff86ea82704,21089931,0,0x0,8
tick,0x7ff86ea82704,21091535,0,0x0,8
tick,0x7ff86ea82704,21093569,0,0x0,8
tick,0x7ff86ea82704,21095538,0,0x0,8
tick,0x7ff86ea82704,21097504,0,0x0,8
tick,0x7ff86ea82704,21099394,0,0x0,8
tick,0x7ff86ea82704,21101422,0,0x0,8
tick,0x7ff86ea82704,21103550,0,0x0,8
tick,0x7ff86ea82704,21105746,0,0x0,8
tick,0x7ff86ea82704,21107838,0,0x0,8
tick,0x7ff86ea82704,21109488,0,0x0,8
tick,0x7ff86ea82704,21111346,0,0x0,8
tick,0x7ff86ea82704,21113487,0,0x0,8
tick,0x7ff86ea82704,21115579,0,0x0,8
tick,0x7ff86ea82704,21117479,0,0x0,8
tick,0x7ff86ea82704,21119365,0,0x0,8
tick,0x7ff86ea82704,21121471,0,0x0,8
tick,0x7ff86ea82704,21123563,0,0x0,8
tick,0x7ff86ea82704,21125353,0,0x0,8
tick,0x7ff86ea82704,21127340,0,0x0,8
tick,0x7ff86ea82704,21129404,0,0x0,8
tick,0x7ff86ea82704,21131439,0,0x0,8
tick,0x7ff86ea82704,21133337,0,0x0,8
tick,0x7ff86ea82704,21135293,0,0x0,8
tick,0x7ff86ea82704,21137301,0,0x0,8
tick,0x7ff86ea82704,21139331,0,0x0,8
tick,0x7ff86ea82704,21141340,0,0x0,8
tick,0x7ff86ea82704,21143303,0,0x0,8
tick,0x7ff86ea82704,21145416,0,0x0,8
tick,0x7ff86ea82704,21147270,0,0x0,8
tick,0x7ff86ea82704,21149320,0,0x0,8
tick,0x7ff86ea82704,21151284,0,0x0,8
tick,0x7ff86ea82704,21153296,0,0x0,8
tick,0x7ff86ea82704,21155218,0,0x0,8
tick,0x7ff86ea82704,21157503,0,0x0,8
tick,0x7ff86ea82704,21159371,0,0x0,8
tick,0x7ff86ea82704,21161468,0,0x0,8
tick,0x7ff86ea82704,21163414,0,0x0,8
tick,0x7ff86ea82704,21165334,0,0x0,8
tick,0x7ff86ea82704,21167522,0,0x0,8
tick,0x7ff86ea82704,21169449,0,0x0,8
tick,0x7ff86ea82704,21171221,0,0x0,8
tick,0x7ff86ea82704,21174095,0,0x0,8
tick,0x7ff86ea82704,21175693,0,0x0,8
tick,0x7ff86ea82704,21177357,0,0x0,8
tick,0x7ff86ea82704,21179271,0,0x0,8
tick,0x7ff86ea82704,21181266,0,0x0,8
tick,0x7ff86ea82704,21183176,0,0x0,8
tick,0x7ff86ea82704,21185114,0,0x0,8
tick,0x7ff86ea82704,21187270,0,0x0,8
tick,0x7ff86ea82704,21189493,0,0x0,8
tick,0x7ff86ea82704,21191372,0,0x0,8
tick,0x7ff86ea82704,21193189,0,0x0,8
tick,0x7ff86ea82704,21195160,0,0x0,8
tick,0x7ff86ea82704,21197164,0,0x0,8
tick,0x7ff86ea82704,21199226,0,0x0,8
tick,0x7ff86ea82704,21201150,0,0x0,8
tick,0x7ff86ea82704,21203232,0,0x0,8
tick,0x7ff86ea82704,21205172,0,0x0,8
tick,0x7ff86ea82704,21207630,0,0x0,8
tick,0x7ff86ea82704,21209139,0,0x0,8
tick,0x7ff86ea82704,21211099,0,0x0,8
tick,0x7ff86ea82704,21213113,0,0x0,8
tick,0x7ff86ea82704,21215102,0,0x0,8
tick,0x7ff86ea82704,21217158,0,0x0,8
tick,0x7ff86ea82704,21219095,0,0x0,8
tick,0x7ff86ea82704,21221049,0,0x0,8
tick,0x7ff86ea82704,21223380,0,0x0,8
tick,0x7ff86ea82704,21225076,0,0x0,8
tick,0x7ff86ea82704,21227107,0,0x0,8
tick,0x7ff86ea82704,21229062,0,0x0,8
tick,0x7ff86ea82704,21231062,0,0x0,8
tick,0x7ff86ea82704,21233205,0,0x0,8
tick,0x7ff86ea82704,21235150,0,0x0,8
tick,0x7ff86ea82704,21237086,0,0x0,8
tick,0x7ff86ea82704,21239153,0,0x0,8
tick,0x7ff86ea82704,21241191,0,0x0,8
tick,0x7ff86ea82704,21243130,0,0x0,8
tick,0x7ff86ea82704,21245059,0,0x0,8
tick,0x7ff86ea82704,21247071,0,0x0,8
tick,0x7ff86ea82704,21248998,0,0x0,8
tick,0x7ff86ea82704,21251003,0,0x0,8
tick,0x7ff86ea82704,21253096,0,0x0,8
tick,0x7ff86ea82704,21254994,0,0x0,8
tick,0x7ff86ea82704,21257176,0,0x0,8
tick,0x7ff86ea82704,21259055,0,0x0,8
tick,0x7ff86ea82704,21261113,0,0x0,8
tick,0x7ff86ea82704,21262995,0,0x0,8
tick,0x7ff86ea82704,21265026,0,0x0,8
tick,0x7ff86ea82704,21267057,0,0x0,8
tick,0x7ff86ea82704,21268968,0,0x0,8
tick,0x7ff86ea82704,21270947,0,0x0,8
tick,0x7ff86ea82704,21273136,0,0x0,8
tick,0x7ff86ea82704,21275044,0,0x0,8
tick,0x7ff86ea82704,21276940,0,0x0,8
tick,0x7ff86ea82704,21278940,0,0x0,8
tick,0x7ff86ea82704,21281077,0,0x0,8
tick,0x7ff86ea82704,21282971,0,0x0,8
tick,0x7ff86ea82704,21284934,0,0x0,8
tick,0x7ff86ea82704,21286982,0,0x0,8
tick,0x7ff86ea82704,21289016,0,0x0,8
tick,0x7ff86ea82704,21290887,0,0x0,8
tick,0x7ff86ea82704,21292923,0,0x0,8
tick,0x7ff86ea82704,21294918,0,0x0,8
tick,0x7ff86ea82704,21296900,0,0x0,8
tick,0x7ff86ea82704,21298896,0,0x0,8
tick,0x7ff86ea82704,21300914,0,0x0,8
tick,0x7ff86ea82704,21302918,0,0x0,8
tick,0x7ff86ea82704,21304962,0,0x0,8
tick,0x7ff86ea82704,21306906,0,0x0,8
tick,0x7ff86ea82704,21308948,0,0x0,8
tick,0x7ff86ea82704,21310872,0,0x0,8
tick,0x7ff86ea82704,21313005,0,0x0,8
tick,0x7ff86ea82704,21314802,0,0x0,8
tick,0x7ff86ea82704,21316855,0,0x0,8
tick,0x7ff86ea82704,21318857,0,0x0,8
tick,0x7ff86ea82704,21320802,0,0x0,8
tick,0x7ff86ea82704,21322900,0,0x0,8
tick,0x7ff86ea82704,21324892,0,0x0,8
tick,0x7ff86ea82704,21326866,0,0x0,8
tick,0x7ff86ea82704,21328873,0,0x0,8
tick,0x7ff86ea82704,21330839,0,0x0,8
tick,0x7ff86ea82704,21332777,0,0x0,8
tick,0x7ff86ea82704,21334775,0,0x0,8
tick,0x7ff86ea82704,21337038,0,0x0,8
tick,0x7ff86ea82704,21339071,0,0x0,8
tick,0x7ff86ea82704,21340828,0,0x0,8
tick,0x7ff86ea82704,21342820,0,0x0,8
tick,0x7ff86ea82704,21344948,0,0x0,8
tick,0x7ff86ea82704,21346763,0,0x0,8
tick,0x7ff86ea82704,21348770,0,0x0,8
tick,0x7ff86ea82704,21350777,0,0x0,8
tick,0x7ff86ea82704,21352733,0,0x0,8
tick,0x7ff86ea82704,21354775,0,0x0,8
tick,0x7ff86ea82704,21356846,0,0x0,8
tick,0x7ff86ea82704,21358746,0,0x0,8
tick,0x7ff86ea82704,21360733,0,0x0,8
tick,0x7ff86ea82704,21362736,0,0x0,8
tick,0x7ff86ea82704,21364682,0,0x0,8
tick,0x7ff86ea82704,21366717,0,0x0,8
tick,0x7ff86ea82704,21368659,0,0x0,8
tick,0x7ff86ea82704,21370912,0,0x0,8
tick,0x7ff86ea82704,21372778,0,0x0,8
tick,0x7ff86ea82704,21374720,0,0x0,8
tick,0x7ff86ea82704,21376812,0,0x0,8
tick,0x7ff86ea82704,21378814,0,0x0,8
tick,0x7ff86ea82704,21381102,0,0x0,8
tick,0x7ff86ea82704,21382896,0,0x0,8
tick,0x7ff86ea82704,21384835,0,0x0,8
tick,0x7ff86ea82704,21387236,0,0x0,8
tick,0x7ff86ea82704,21389459,0,0x0,8
tick,0x7ff86ea82704,21390976,0,0x0,8
tick,0x7ff86ea82704,21393046,0,0x0,8
tick,0x7ff86ea82704,21394738,0,0x0,8
tick,0x7ff86ea82704,21397036,0,0x0,8
tick,0x7ff86ea82704,21399268,0,0x0,8
tick,0x7ff86ea82704,21400801,0,0x0,8
tick,0x7ff86ea82704,21403062,0,0x0,8
tick,0x7ff86ea82704,21404802,0,0x0,8
tick,0x7ff86ea82704,21406794,0,0x0,8
tick,0x7ff86ea82704,21408870,0,0x0,8
tick,0x7ff86ea82704,21410975,0,0x0,8
tick,0x7ff86ea82704,21412697,0,0x0,8
tick,0x7ff86ea82704,21414881,0,0x0,8
tick,0x7ff86ea82704,21416814,0,0x0,8
tick,0x7ff86ea82704,21418711,0,0x0,8
tick,0x7ff86ea82704,21420685,0,0x0,8
tick,0x7ff86ea82704,21422705,0,0x0,8
tick,0x7ff86ea82704,21424674,0,0x0,8
tick,0x7ff86ea82704,21426710,0,0x0,8
tick,0x7ff86ea82704,21428749,0,0x0,8
tick,0x7ff86ea82704,21430863,0,0x0,8
tick,0x7ff86ea82704,21432777,0,0x0,8
tick,0x7ff86ea82704,21434645,0,0x0,8
tick,0x7ff86ea82704,21436746,0,0x0,8
tick,0x7ff86ea82704,21438740,0,0x0,8
tick,0x7ff86ea82704,21440724,0,0x0,8
tick,0x7ff86ea82704,21442602,0,0x0,8
tick,0x7ff86ea82704,21444755,0,0x0,8
tick,0x7ff86ea82704,21446700,0,0x0,8
tick,0x7ff86ea82704,21448623,0,0x0,8
tick,0x7ff86ea82704,21450625,0,0x0,8
tick,0x7ff86ea82704,21452736,0,0x0,8
tick,0x7ff86ea82704,21454707,0,0x0,8
tick,0x7ff86ea82704,21456888,0,0x0,8
tick,0x7ff86ea82704,21458608,0,0x0,8
tick,0x7ff86ea82704,21461651,0,0x0,8
tick,0x7ff86ea82704,21463618,0,0x0,8
tick,0x7ff86ea82704,21465582,0,0x0,8
tick,0x7ff86ea82704,21467617,0,0x0,8
tick,0x7ff86ea82704,21469466,0,0x0,8
tick,0x7ff86ea82704,21471557,0,0x0,8
tick,0x7ff86ea82704,21473565,0,0x0,8
tick,0x7ff86ea82704,21475607,0,0x0,8
tick,0x7ff86ea82704,21477827,0,0x0,8
tick,0x7ff86ea82704,21479655,0,0x0,8
tick,0x7ff86ea82704,21481459,0,0x0,8
tick,0x7ff86ea82704,21483552,0,0x0,8
tick,0x7ff86ea82704,21485507,0,0x0,8
tick,0x7ff86ea82704,21487581,0,0x0,8
tick,0x7ff86ea82704,21489463,0,0x0,8
tick,0x7ff86ea82704,21491578,0,0x0,8
tick,0x7ff86ea82704,21493551,0,0x0,8
tick,0x7ff86ea82704,21495446,0,0x0,8
tick,0x7ff86ea82704,21497548,0,0x0,8
tick,0x7ff86ea82704,21499517,0,0x0,8
tick,0x7ff86ea82704,21501519,0,0x0,8
tick,0x7ff86ea82704,21503549,0,0x0,8
tick,0x7ff86ea82704,21505659,0,0x0,8
tick,0x7ff86ea82704,21507638,0,0x0,8
tick,0x7ff86ea82704,21509471,0,0x0,8
tick,0x7ff86ea82704,21511657,0,0x0,8
tick,0x7ff86ea82704,21513420,0,0x0,8
tick,0x7ff86ea82704,21515620,0,0x0,8
tick,0x7ff86ea82704,21517354,0,0x0,8
tick,0x7ff86ea82704,21519439,0,0x0,8
tick,0x7ff86ea82704,21521454,0,0x0,8
tick,0x7ff86ea82704,21523541,0,0x0,8
tick,0x7ff86ea82704,21525487,0,0x0,8
tick,0x7ff86ea82704,21527684,0,0x0,8
tick,0x7ff86ea82704,21529390,0,0x0,8
tick,0x7ff86ea82704,21531557,0,0x0,8
tick,0x7ff86ea82704,21536003,0,0x0,8
tick,0x7ff86ea82704,21537642,0,0x0,8
tick,0x7ff86ea82704,21539328,0,0x0,8
tick,0x7ff86ea82704,21541543,0,0x0,8
tick,0x7ff86ea82704,21543400,0,0x0,8
tick,0x7ff86ea82704,21545912,0,0x0,8
tick,0x7ff86ea82704,21547397,0,0x0,8
tick,0x7ff86ea82704,21549537,0,0x0,8
tick,0x7ff86ea82704,21551388,0,0x0,8
tick,0x7ff86ea82704,21553695,0,0x0,8
tick,0x7ff86ea82704,21556511,0,0x0,8
tick,0x7ff86ea82704,21558494,0,0x0,8
tick,0x7ff86ea82704,21559493,0,0x0,8
tick,0x7ff86ea82704,21561582,0,0x0,8
tick,0x7ff86ea82704,21563433,0,0x0,8
tick,0x7ff86ea82704,21565493,0,0x0,8
tick,0x7ff86ea82704,21567794,0,0x0,8
tick,0x7ff86ea82704,21569573,0,0x0,8
tick,0x7ff86ea82704,21571471,0,0x0,8
tick,0x7ff86ea82704,21573480,0,0x0,8
tick,0x7ff86ea82704,21576334,0,0x0,8
tick,0x7ff86ea82704,21577456,0,0x0,8
tick,0x7ff86ea82704,21579523,0,0x0,8
tick,0x7ff86ea82704,21581572,0,0x0,8
tick,0x7ff86ea82704,21583468,0,0x0,8
tick,0x7ff86ea82704,21585344,0,0x0,8
tick,0x7ff86ea82704,21587369,0,0x0,8
tick,0x7ff86ea82704,21589281,0,0x0,8
tick,0x7ff86ea82704,21591391,0,0x0,8
tick,0x7ff86ea82704,21593290,0,0x0,8
tick,0x7ff86ea82704,21595266,0,0x0,8
tick,0x7ff86ea82704,21597318,0,0x0,8
tick,0x7ff86ea82704,21599356,0,0x0,8
tick,0x7ff86ea82704,21601400,0,0x0,8
tick,0x7ff86ea82704,21603318,0,0x0,8
tick,0x7ff86ea82704,21605316,0,0x0,8
tick,0x7ff86ea82704,21607229,0,0x0,8
tick,0x7ff86ea82704,21609481,0,0x0,8
tick,0x7ff86ea82704,21611296,0,0x0,8
tick,0x7ff86ea82704,21613129,0,0x0,8
tick,0x7ff86ea82704,21615201,0,0x0,8
tick,0x7ff86ea82704,21617139,0,0x0,8
tick,0x7ff86ea82704,21619383,0,0x0,8
tick,0x7ff86ea82704,21621296,0,0x0,8
tick,0x7ff86ea82704,21623211,0,0x0,8
tick,0x7ff86ea82704,21625246,0,0x0,8
tick,0x7ff86ea82704,21627123,0,0x0,8
tick,0x7ff86ea82704,21629135,0,0x0,8
tick,0x7ff86ea82704,21631110,0,0x0,8
tick,0x7ff86ea82704,21633175,0,0x0,8
tick,0x7ff86ea82704,21635050,0,0x0,8
tick,0x7ff86ea82704,21637100,0,0x0,8
tick,0x7ff86ea82704,21639153,0,0x0,8
tick,0x7ff86ea82704,21641037,0,0x0,8
tick,0x7ff86ea82704,21643289,0,0x0,8
tick,0x7ff86ea82704,21645063,0,0x0,8
tick,0x7ff86ea82704,21647076,0,0x0,8
tick,0x7ff86ea82704,21649095,0,0x0,8
tick,0x7ff86ea82704,21651124,0,0x0,8
tick,0x7ff86ea82704,21653122,0,0x0,8
tick,0x7ff86ea82704,21655264,0,0x0,8
tick,0x7ff86ea82704,21657108,0,0x0,8
tick,0x7ff86ea82704,21659023,0,0x0,8
tick,0x7ff86ea82704,21661062,0,0x0,8
tick,0x7ff86ea82704,21662997,0,0x0,8
tick,0x7ff86ea82704,21665020,0,0x0,8
tick,0x7ff86ea82704,21667120,0,0x0,8
tick,0x7ff86ea82704,21668997,0,0x0,8
tick,0x7ff86ea82704,21671009,0,0x0,8
tick,0x7ff86ea82704,21673035,0,0x0,8
tick,0x7ff86ea82704,21675056,0,0x0,8
tick,0x7ff86ea82704,21677047,0,0x0,8
tick,0x7ff86ea82704,21678962,0,0x0,8
tick,0x7ff86ea82704,21681009,0,0x0,8
tick,0x7ff86ea82704,21682928,0,0x0,8
tick,0x7ff86ea82704,21685015,0,0x0,8
tick,0x7ff86ea82704,21686983,0,0x0,8
tick,0x7ff86ea82704,21689084,0,0x0,8
tick,0x7ff86ea82704,21691023,0,0x0,8
tick,0x7ff86ea82704,21693034,0,0x0,8
tick,0x7ff86ea82704,21694879,0,0x0,8
tick,0x7ff86ea82704,21696935,0,0x0,8
tick,0x7ff86ea82704,21698963,0,0x0,8
tick,0x7ff86ea82704,21700929,0,0x0,8
tick,0x7ff86ea82704,21703025,0,0x0,8
tick,0x7ff86ea82704,21705010,0,0x0,8
tick,0x7ff86ea82704,21706884,0,0x0,8
tick,0x7ff86ea82704,21709128,0,0x0,8
tick,0x7ff86ea82704,21710875,0,0x0,8
tick,0x7ff86ea82704,21713137,0,0x0,8
tick,0x7ff86ea82704,21714933,0,0x0,8
tick,0x7ff86ea82704,21716987,0,0x0,8
tick,0x7ff86ea82704,21719013,0,0x0,8
tick,0x7ff86ea82704,21720998,0,0x0,8
tick,0x7ff86ea82704,21723000,0,0x0,8
tick,0x7ff86ea82704,21725164,0,0x0,8
tick,0x7ff86ea82704,21727079,0,0x0,8
tick,0x7ff86ea82704,21728806,0,0x0,8
tick,0x7ff86ea82704,21731017,0,0x0,8
tick,0x7ff86ea82704,21733210,0,0x0,8
tick,0x7ff86ea82704,21735025,0,0x0,8
tick,0x7ff86ea82704,21736934,0,0x0,8
tick,0x7ff86ea82704,21739135,0,0x0,8
tick,0x7ff86ea82704,21740976,0,0x0,8
tick,0x7ff86ea82704,21742852,0,0x0,8
tick,0x7ff86ea82704,21744864,0,0x0,8
tick,0x7ff86ea82704,21746721,0,0x0,8
tick,0x7ff86ea82704,21749018,0,0x0,8
tick,0x7ff86ea82704,21750843,0,0x0,8
tick,0x7ff86ea82704,21752882,0,0x0,8
tick,0x7ff86ea82704,21754759,0,0x0,8
tick,0x7ff86ea82704,21756992,0,0x0,8
tick,0x7ff86ea82704,21758714,0,0x0,8
tick,0x7ff86ea82704,21760727,0,0x0,8
tick,0x7ff86ea82704,21762812,0,0x0,8
tick,0x7ff86ea82704,21765078,0,0x0,8
tick,0x7ff86ea82704,21766664,0,0x0,8
tick,0x7ff86ea82704,21769372,0,0x0,8
tick,0x7ff86ea82704,21771214,0,0x0,8
tick,0x7ff86ea82704,21773497,0,0x0,8
tick,0x7ff86ea82704,21775697,0,0x0,8
tick,0x7ff86ea82704,21779060,0,0x0,8
tick,0x7ff86ea82704,21781293,0,0x0,8
tick,0x7ff86ea82704,21782615,0,0x0,8
tick,0x7ff86ea82704,21784795,0,0x0,8
tick,0x7ff86ea82704,21786576,0,0x0,8
tick,0x7ff86ea82704,21788985,0,0x0,8
tick,0x7ff86ea82704,21791075,0,0x0,8
tick,0x7ff86ea82704,21792588,0,0x0,8
tick,0x7ff86ea82704,21794959,0,0x0,8
tick,0x7ff86ea82704,21796793,0,0x0,8
tick,0x7ff86ea82704,21798610,0,0x0,8
tick,0x7ff86ea82704,21800678,0,0x0,8
tick,0x7ff86ea82704,21802706,0,0x0,8
tick,0x7ff86ea82704,21804594,0,0x0,8
tick,0x7ff86ea82704,21806597,0,0x0,8
tick,0x7ff86ea82704,21808623,0,0x0,8
tick,0x7ff86ea82704,21810631,0,0x0,8
tick,0x7ff86ea82704,21812545,0,0x0,8
tick,0x7ff86ea82704,21814664,0,0x0,8
tick,0x7ff86ea82704,21816613,0,0x0,8
tick,0x7ff86ea82704,21818802,0,0x0,8
tick,0x7ff86ea82704,21820615,0,0x0,8
tick,0x7ff86ea82704,21822722,0,0x0,8
tick,0x7ff86ea82704,21824509,0,0x0,8
tick,0x7ff86ea82704,21826714,0,0x0,8
tick,0x7ff86ea82704,21828564,0,0x0,8
tick,0x7ff86ea82704,21831432,0,0x0,8
tick,0x7ff86ea82704,21835553,0,0x0,8
tick,0x7ff86ea82704,21837904,0,0x0,8
tick,0x7ff86ea82704,21840103,0,0x0,8
tick,0x7ff86ea82704,21842245,0,0x0,8
tick,0x7ff86ea82704,21843616,0,0x0,8
tick,0x7ff86ea82704,21845666,0,0x0,8
tick,0x7ff86ea82704,21847674,0,0x0,8
tick,0x7ff86ea82704,21849506,0,0x0,8
tick,0x7ff86ea82704,21852065,0,0x0,8
tick,0x7ff86ea82704,21853533,0,0x0,8
tick,0x7ff86ea82704,21856210,0,0x0,8
tick,0x7ff86ea82704,21857521,0,0x0,8
tick,0x7ff86ea82704,21859871,0,0x0,8
tick,0x7ff86ea82704,21861742,0,0x0,8
tick,0x7ff86ea82704,21865076,0,0x0,8
tick,0x7ff86ea82704,21865894,0,0x0,8
tick,0x7ff86ea82704,21867905,0,0x0,8
tick,0x7ff86ea82704,21869563,0,0x0,8
tick,0x7ff86ea82704,21871541,0,0x0,8
tick,0x7ff86ea82704,21875368,0,0x0,8
tick,0x7ff86ea82704,21876714,0,0x0,8
tick,0x7ff86ea82704,21878407,0,0x0,8
tick,0x7ff86ea82704,21880385,0,0x0,8
tick,0x7ff86ea82704,21882466,0,0x0,8
tick,0x7ff86ea82704,21884383,0,0x0,8
tick,0x7ff86ea82704,21886474,0,0x0,8
tick,0x7ff86ea82704,21888517,0,0x0,8
tick,0x7ff86ea82704,21890482,0,0x0,8
tick,0x7ff86ea82704,21892523,0,0x0,8
tick,0x7ff86ea82704,21894322,0,0x0,8
tick,0x7ff86ea82704,21896592,0,0x0,8
tick,0x7ff86ea82704,21898364,0,0x0,8
tick,0x7ff86ea82704,21900537,0,0x0,8
tick,0x7ff86ea82704,21902497,0,0x0,8
tick,0x7ff86ea82704,21905188,0,0x0,8
tick,0x7ff86ea82704,21907699,0,0x0,8
tick,0x7ff86ea82704,21909692,0,0x0,8
tick,0x7ff86ea82704,21911514,0,0x0,8
tick,0x7ff86ea82704,21913603,0,0x0,8
tick,0x7ff86ea82704,21915710,0,0x0,8
tick,0x7ff86ea82704,21917691,0,0x0,8
tick,0x7ff86ea82704,21920536,0,0x0,8
tick,0x7ff86ea82704,21924596,0,0x0,8
tick,0x7ff86ea82704,21927270,0,0x0,8
tick,0x7ff86ea82704,21929361,0,0x0,8
tick,0x7ff86ea82704,21931195,0,0x0,8
tick,0x7ff86ea82704,21933150,0,0x0,8
tick,0x7ff86ea82704,21935329,0,0x0,8
tick,0x7ff86ea82704,21937488,0,0x0,8
tick,0x7ff86ea82704,21939477,0,0x0,8
tick,0x7ff86ea82704,21941216,0,0x0,8
tick,0x7ff86ea82704,21943587,0,0x0,8
tick,0x7ff86ea82704,21945104,0,0x0,8
tick,0x7ff86ea82704,21947221,0,0x0,8
tick,0x7ff86ea82704,21949496,0,0x0,8
tick,0x7ff86ea82704,21951406,0,0x0,8
tick,0x7ff86ea82704,21953769,0,0x0,8
tick,0x7ff86ea82704,21955449,0,0x0,8
tick,0x7ff86ea82704,21957906,0,0x0,8
tick,0x7ff86ea82704,21959322,0,0x0,8
tick,0x7ff86ea82704,21961423,0,0x0,8
tick,0x7ff86ea82704,21963338,0,0x0,8
tick,0x7ff86ea82704,21965343,0,0x0,8
tick,0x7ff86ea82704,21967421,0,0x0,8
tick,0x7ff86ea82704,21969424,0,0x0,8
tick,0x7ff86ea82704,21971500,0,0x0,8
tick,0x7ff86ea82704,21974214,0,0x0,8
tick,0x7ff86ea82704,21975142,0,0x0,8
tick,0x7ff86ea82704,21977001,0,0x0,8
tick,0x7ff86ea82704,21979161,0,0x0,8
tick,0x7ff86ea82704,21981069,0,0x0,8
tick,0x7ff86ea82704,21983237,0,0x0,8
tick,0x7ff86ea82704,21985107,0,0x0,8
tick,0x7ff86ea82704,21987236,0,0x0,8
tick,0x7ff86ea82704,21990033,0,0x0,8
tick,0x7ff86ea82704,21991152,0,0x0,8
tick,0x7ff86ea82704,21993151,0,0x0,8
tick,0x7ff86ea82704,21995122,0,0x0,8
tick,0x7ff86ea82704,21997264,0,0x0,8
tick,0x7ff86ea82704,21999115,0,0x0,8
tick,0x7ff86ea82704,22001138,0,0x0,8
tick,0x7ff86ea82704,22003106,0,0x0,8
tick,0x7ff86ea82704,22005585,0,0x0,8
tick,0x7ff86ea82704,22007148,0,0x0,8
tick,0x7ff86ea82704,22009129,0,0x0,8
tick,0x7ff86ea82704,22011133,0,0x0,8
tick,0x7ff86ea82704,22013153,0,0x0,8
tick,0x7ff86ea82704,22015070,0,0x0,8
tick,0x7ff86ea82704,22017097,0,0x0,8
tick,0x7ff86ea82704,22018991,0,0x0,8
tick,0x7ff86ea82704,22021082,0,0x0,8
tick,0x7ff86ea82704,22023453,0,0x0,8
tick,0x7ff86ea82704,22025120,0,0x0,8
tick,0x7ff86ea82704,22027240,0,0x0,8
tick,0x7ff86ea82704,22029037,0,0x0,8
tick,0x7ff86ea82704,22031182,0,0x0,8
tick,0x7ff86ea82704,22033050,0,0x0,8
tick,0x7ff86ea82704,22035045,0,0x0,8
tick,0x7ff86ea82704,22037074,0,0x0,8
tick,0x7ff86ea82704,22039409,0,0x0,8
tick,0x7ff86ea82704,22041944,0,0x0,8
tick,0x7ff86ea82704,22044351,0,0x0,8
tick,0x7ff86ea82704,22046485,0,0x0,8
tick,0x7ff86ea82704,22048392,0,0x0,8
tick,0x7ff86ea82704,22050019,0,0x0,8
tick,0x7ff86ea82704,22052307,0,0x0,8
tick,0x7ff86ea82704,22054161,0,0x0,8
tick,0x7ff86ea82704,22056797,0,0x0,8
tick,0x7ff86ea82704,22058370,0,0x0,8
tick,0x7ff86ea82704,22060163,0,0x0,8
tick,0x7ff86ea82704,22062284,0,0x0,8
tick,0x7ff86ea82704,22063975,0,0x0,8
tick,0x7ff86ea82704,22066321,0,0x0,8
tick,0x7ff86ea82704,22068435,0,0x0,8
tick,0x7ff86ea82704,22070908,0,0x0,8
tick,0x7ff86ea82704,22072315,0,0x0,8
tick,0x7ff86ea82704,22074627,0,0x0,8
tick,0x7ff86ea82704,22076512,0,0x0,8
tick,0x7ff86ea82704,22078057,0,0x0,8
tick,0x7ff86ea82704,22080256,0,0x0,8
tick,0x7ff86ea82704,22082004,0,0x0,8
tick,0x7ff86ea82704,22084189,0,0x0,8
tick,0x7ff86ea82704,22086157,0,0x0,8
tick,0x7ff86ea82704,22088983,0,0x0,8
tick,0x7ff86ea82704,22090838,0,0x0,8
tick,0x7ff86ea82704,22093262,0,0x0,8
tick,0x7ff86ea82704,22095301,0,0x0,8
tick,0x7ff86ea82704,22096964,0,0x0,8
tick,0x7ff86ea82704,22099713,0,0x0,8
tick,0x7ff86ea82704,22102058,0,0x0,8
tick,0x7ff86ea82704,22104118,0,0x0,8
tick,0x7ff86ea82704,22108644,0,0x0,8
tick,0x7ff86ea82704,22110449,0,0x0,8
tick,0x7ff86ea82704,22111989,0,0x0,8
tick,0x7ff86ea82704,22113986,0,0x0,8
tick,0x7ff86ea82704,22116238,0,0x0,8
tick,0x7ff86ea82704,22118061,0,0x0,8
tick,0x7ff86ea82704,22120415,0,0x0,8
tick,0x7ff86ea82704,22122290,0,0x0,8
tick,0x7ff86ea82704,22124956,0,0x0,8
tick,0x7ff86ea82704,22127034,0,0x0,8
tick,0x7ff86ea82704,22129167,0,0x0,8
tick,0x7ff86ea82704,22131048,0,0x0,8
tick,0x7ff86ea82704,22133015,0,0x0,8
tick,0x7ff86ea82704,22135576,0,0x0,8
tick,0x7ff86ea82704,22137701,0,0x0,8
tick,0x7ff86ea82704,22139976,0,0x0,8
tick,0x7ff86ea82704,22141574,0,0x0,8
tick,0x7ff86ea82704,22143679,0,0x0,8
tick,0x7ff86ea82704,22145620,0,0x0,8
tick,0x7ff86ea82704,22147737,0,0x0,8
tick,0x7ff86ea82704,22149584,0,0x0,8
tick,0x7ff86ea82704,22151642,0,0x0,8
tick,0x7ff86ea82704,22153868,0,0x0,8
tick,0x7ff86ea82704,22156068,0,0x0,8
tick,0x7ff86ea82704,22157970,0,0x0,8
tick,0x7ff86ea82704,22160049,0,0x0,8
tick,0x7ff86ea82704,22161779,0,0x0,8
tick,0x7ff86ea82704,22163804,0,0x0,8
tick,0x7ff86ea82704,22165897,0,0x0,8
tick,0x7ff86ea82704,22167673,0,0x0,8
tick,0x7ff86ea82704,22169905,0,0x0,8
tick,0x7ff86ea82704,22171580,0,0x0,8
tick,0x7ff86ea82704,22174196,0,0x0,8
tick,0x7ff86ea82704,22175756,0,0x0,8
tick,0x7ff86ea82704,22178564,0,0x0,8
tick,0x7ff86ea82704,22179710,0,0x0,8
tick,0x7ff86ea82704,22181763,0,0x0,8
tick,0x7ff86ea82704,22183734,0,0x0,8
tick,0x7ff86ea82704,22185656,0,0x0,8
tick,0x7ff86ea82704,22188542,0,0x0,8
tick,0x7ff86ea82704,22190889,0,0x0,8
tick,0x7ff86ea82704,22192570,0,0x0,8
tick,0x7ff86ea82704,22194499,0,0x0,8
tick,0x7ff86ea82704,22196630,0,0x0,8
tick,0x7ff86ea82704,22198535,0,0x0,8
tick,0x7ff86ea82704,22200812,0,0x0,8
tick,0x7ff86ea82704,22202653,0,0x0,8
tick,0x7ff86ea82704,22204629,0,0x0,8
tick,0x7ff86ea82704,22208277,0,0x0,8
tick,0x7ff86ea82704,22210007,0,0x0,8
tick,0x7ff86ea82704,22211963,0,0x0,8
tick,0x7ff86ea82704,22214146,0,0x0,8
tick,0x7ff86ea82704,22215966,0,0x0,8
tick,0x7ff86ea82704,22217787,0,0x0,8
tick,0x7ff86ea82704,22220018,0,0x0,8
tick,0x7ff86ea82704,22221860,0,0x0,8
tick,0x7ff86ea82704,22224732,0,0x0,8
tick,0x7ff86ea82704,22226301,0,0x0,8
tick,0x7ff86ea82704,22227433,0,0x0,8
tick,0x7ff86ea82704,22229738,0,0x0,8
tick,0x7ff86ea82704,22231483,0,0x0,8
tick,0x7ff86ea82704,22233676,0,0x0,8
tick,0x7ff86ea82704,22235580,0,0x0,8
tick,0x7ff86ea82704,22237651,0,0x0,8
tick,0x7ff86ea82704,22241174,0,0x0,8
tick,0x7ff86ea82704,22242671,0,0x0,8
tick,0x7ff86ea82704,22244568,0,0x0,8
tick,0x7ff86ea82704,22246673,0,0x0,8
tick,0x7ff86ea82704,22248776,0,0x0,8
tick,0x7ff86ea82704,22250559,0,0x0,8
tick,0x7ff86ea82704,22252355,0,0x0,8
tick,0x7ff86ea82704,22254779,0,0x0,8
tick,0x7ff86ea82704,22258813,0,0x0,8
tick,0x7ff86ea82704,22260537,0,0x0,8
tick,0x7ff86ea82704,22262601,0,0x0,8
tick,0x7ff86ea82704,22264524,0,0x0,8
tick,0x7ff86ea82704,22267560,0,0x0,8
tick,0x7ff86ea82704,22268856,0,0x0,8
tick,0x7ff86ea82704,22270656,0,0x0,8
tick,0x7ff86ea82704,22274437,0,0x0,8
tick,0x7ff86ea82704,22275210,0,0x0,8
tick,0x7ff86ea82704,22277390,0,0x0,8
tick,0x7ff86ea82704,22279347,0,0x0,8
tick,0x7ff86ea82704,22281537,0,0x0,8
tick,0x7ff86ea82704,22283513,0,0x0,8
tick,0x7ff86ea82704,22285670,0,0x0,8
tick,0x7ff86ea82704,22288548,0,0x0,8
tick,0x7ff86ea82704,22291058,0,0x0,8
tick,0x7ff86ea82704,22294869,0,0x0,8
tick,0x7ff86ea82704,22296078,0,0x0,8
tick,0x7ff86ea82704,22297290,0,0x0,8
tick,0x7ff86ea82704,22299770,0,0x0,8
tick,0x7ff86ea82704,22301938,0,0x0,8
tick,0x7ff86ea82704,22303557,0,0x0,8
tick,0x7ff86ea82704,22306221,0,0x0,8
tick,0x7ff86ea82704,22309687,0,0x0,8
tick,0x7ff86ea82704,22313304,0,0x0,8
tick,0x7ff86ea82704,22315615,0,0x0,8
tick,0x7ff86ea82704,22317328,0,0x0,8
tick,0x7ff86ea82704,22319447,0,0x0,8
tick,0x7ff86ea82704,22321484,0,0x0,8
tick,0x7ff86ea82704,22324577,0,0x0,8
tick,0x7ff86ea82704,22326070,0,0x0,8
tick,0x7ff86ea82704,22327429,0,0x0,8
tick,0x7ff86ea82704,22329963,0,0x0,8
tick,0x7ff86ea82704,22332748,0,0x0,8
tick,0x7ff86ea82704,22334542,0,0x0,8
tick,0x7ff86ea82704,22336897,0,0x0,8
tick,0x7ff86ea82704,22342023,0,0x0,8
tick,0x7ff86ea82704,22343042,0,0x0,8
tick,0x7ff86ea82704,22344829,0,0x0,8
tick,0x7ff86ea82704,22346432,0,0x0,8
tick,0x7ff86ea82704,22348471,0,0x0,8
tick,0x7ff86ea82704,22351037,0,0x0,8
tick,0x7ff86ea82704,22352847,0,0x0,8
tick,0x7ff86ea82704,22354494,0,0x0,8
tick,0x7ff86ea82704,22359437,0,0x0,8
tick,0x7ff86ea82704,22360258,0,0x0,8
tick,0x7ff86ea82704,22362100,0,0x0,8
tick,0x7ff86ea82704,22364083,0,0x0,8
tick,0x7ff86ea82704,22366422,0,0x0,8
tick,0x7ff86ea82704,22368650,0,0x0,8
tick,0x7ff86ea82704,22370191,0,0x0,8
tick,0x7ff86ea82704,22372484,0,0x0,8
tick,0x7ff86ea82704,22376419,0,0x0,8
tick,0x7ff86ea82704,22377514,0,0x0,8
tick,0x7ff86ea82704,22379231,0,0x0,8
tick,0x7ff86ea82704,22381113,0,0x0,8
tick,0x7ff86ea82704,22383168,0,0x0,8
tick,0x7ff86ea82704,22385100,0,0x0,8
tick,0x7ff86ea82704,22387529,0,0x0,8
tick,0x7ff86ea82704,22391981,0,0x0,8
tick,0x7ff86ea82704,22393017,0,0x0,8
tick,0x7ff86ea82704,22393877,0,0x0,8
tick,0x7ff86ea82704,22396005,0,0x0,8
tick,0x7ff86ea82704,22401712,0,0x0,8
tick,0x7ff86ea82704,22403269,0,0x0,8
tick,0x7ff86ea82704,22404594,0,0x0,8
tick,0x7ff86ea82704,22410366,0,0x0,8
tick,0x7ff86ea82704,22412158,0,0x0,8
tick,0x7ff86ea82704,22414129,0,0x0,8
tick,0x7ff86ea82704,22416376,0,0x0,8
tick,0x7ff86ea82704,22418020,0,0x0,8
tick,0x7ff86ea82704,22420584,0,0x0,8
tick,0x7ff86ea82704,22422333,0,0x0,8
tick,0x7ff86ea82704,22426823,0,0x0,8
tick,0x7ff86ea82704,22428000,0,0x0,8
tick,0x7ff86ea82704,22429873,0,0x0,8
tick,0x7ff86ea82704,22432127,0,0x0,8
tick,0x7ff86ea82704,22433933,0,0x0,8
tick,0x7ff86ea82704,22435898,0,0x0,8
tick,0x7ff86ea82704,22437956,0,0x0,8
tick,0x7ff86ea82704,22442649,0,0x0,8
tick,0x7ff86ea82704,22444063,0,0x0,8
tick,0x7ff86ea82704,22445949,0,0x0,8
tick,0x7ff86ea82704,22447878,0,0x0,8
tick,0x7ff86ea82704,22449841,0,0x0,8
tick,0x7ff86ea82704,22452619,0,0x0,8
tick,0x7ff86ea82704,22453957,0,0x0,8
tick,0x7ff86ea82704,22456515,0,0x0,8
tick,0x7ff86ea82704,22459212,0,0x0,8
tick,0x7ff86ea82704,22461372,0,0x0,8
tick,0x7ff86ea82704,22463212,0,0x0,8
tick,0x7ff86ea82704,22465735,0,0x0,8
tick,0x7ff86ea82704,22467000,0,0x0,8
tick,0x7ff86ea82704,22469096,0,0x0,8
tick,0x7ff86ea82704,22471016,0,0x0,8
tick,0x7ff86ea82704,22475775,0,0x0,8
tick,0x7ff86ea82704,22476933,0,0x0,8
tick,0x7ff86ea82704,22479536,0,0x0,8
tick,0x7ff86ea82704,22480968,0,0x0,8
tick,0x7ff86ea82704,22483243,0,0x0,8
tick,0x7ff86ea82704,22485786,0,0x0,8
tick,0x7ff86ea82704,22488128,0,0x0,8
tick,0x7ff86ea82704,22492354,0,0x0,8
tick,0x7ff86ea82704,22494091,0,0x0,8
tick,0x7ff86ea82704,22496147,0,0x0,8
tick,0x7ff86ea82704,22498008,0,0x0,8
tick,0x7ff86ea82704,22500070,0,0x0,8
tick,0x7ff86ea82704,22502001,0,0x0,8
tick,0x7ff86ea82704,22504128,0,0x0,8
tick,0x7ff86ea82704,22508475,0,0x0,8
tick,0x7ff86ea82704,22509995,0,0x0,8
tick,0x7ff86ea82704,22512701,0,0x0,8
tick,0x7ff86ea82704,22514883,0,0x0,8
tick,0x7ff86ea82704,22517260,0,0x0,8
tick,0x7ff86ea82704,22519819,0,0x0,8
tick,0x7ff86ea82704,22525802,0,0x0,8
tick,0x7ff86ea82704,22526728,0,0x0,8
tick,0x7ff86ea82704,22528052,0,0x0,8
tick,0x7ff86ea82704,22530480,0,0x0,8
tick,0x7ff86ea82704,22533621,0,0x0,8
tick,0x7ff86ea82704,22535811,0,0x0,8
tick,0x7ff86ea82704,22537759,0,0x0,8
tick,0x7ff86ea82704,22541689,0,0x0,8
tick,0x7ff86ea82704,22542836,0,0x0,8
tick,0x7ff86ea82704,22544755,0,0x0,8
tick,0x7ff86ea82704,22546565,0,0x0,8
tick,0x7ff86ea82704,22548532,0,0x0,8
tick,0x7ff86ea82704,22550742,0,0x0,8
tick,0x7ff86ea82704,22552701,0,0x0,8
tick,0x7ff86ea82704,22554613,0,0x0,8
tick,0x7ff86ea82704,22559941,0,0x0,8
tick,0x7ff86ea82704,22561986,0,0x0,8
tick,0x7ff86ea82704,22563760,0,0x0,8
tick,0x7ff86ea82704,22565823,0,0x0,8
tick,0x7ff86ea82704,22568096,0,0x0,8
tick,0x7ff86ea82704,22570035,0,0x0,8
tick,0x7ff86ea82704,22571887,0,0x0,8
tick,0x7ff86ea82704,22576066,0,0x0,8
tick,0x7ff86ea82704,22577684,0,0x0,8
tick,0x7ff86ea82704,22580118,0,0x0,8
tick,0x7ff86ea82704,22582213,0,0x0,8
tick,0x7ff86ea82704,22583726,0,0x0,8
tick,0x7ff86ea82704,22585715,0,0x0,8
tick,0x7ff86ea82704,22587645,0,0x0,8
tick,0x7ff86ea82704,22593139,0,0x0,8
tick,0x7ff86ea82704,22593764,0,0x0,8
tick,0x7ff86ea82704,22595825,0,0x0,8
tick,0x7ff86ea82704,22597618,0,0x0,8
tick,0x7ff86ea82704,22599640,0,0x0,8
tick,0x7ff86ea82704,22601604,0,0x0,8
tick,0x7ff86ea82704,22603453,0,0x0,8
tick,0x7ff86ea82704,22607667,0,0x0,8
tick,0x7ff86ea82704,22609811,0,0x0,8
tick,0x7ff86ea82704,22611667,0,0x0,8
tick,0x7ff86ea82704,22613995,0,0x0,8
tick,0x7ff86ea82704,22616033,0,0x0,8
tick,0x7ff86ea82704,22617734,0,0x0,8
tick,0x7ff86ea82704,22619446,0,0x0,8
tick,0x7ff86ea82704,22621719,0,0x0,8
tick,0x7ff86ea82704,22627274,0,0x0,8
tick,0x7ff86ea82704,22629210,0,0x0,8
tick,0x7ff86ea82704,22630674,0,0x0,8
tick,0x7ff86ea82704,22632682,0,0x0,8
tick,0x7ff86ea82704,22634810,0,0x0,8
tick,0x7ff86ea82704,22637786,0,0x0,8
tick,0x7ff86ea82704,22642456,0,0x0,8
tick,0x7ff86ea82704,22643203,0,0x0,8
tick,0x7ff86ea82704,22647181,0,0x0,8
tick,0x7ff86ea82704,22648461,0,0x0,8
tick,0x7ff86ea82704,22650957,0,0x0,8
tick,0x7ff86ea82704,22654074,0,0x0,8
tick,0x7ff86ea82704,22655204,0,0x0,8
tick,0x7ff86ea82704,22659862,0,0x0,8
tick,0x7ff86ea82704,22661798,0,0x0,8
tick,0x7ff86ea82704,22663487,0,0x0,8
tick,0x7ff86ea82704,22665531,0,0x0,8
tick,0x7ff86ea82704,22667987,0,0x0,8
tick,0x7ff86ea82704,22669525,0,0x0,8
tick,0x7ff86ea82704,22671424,0,0x0,8
tick,0x7ff86ea82704,22674597,0,0x0,8
tick,0x7ff86ea82704,22675833,0,0x0,8
tick,0x7ff86ea82704,22677293,0,0x0,8
tick,0x7ff86ea82704,22679566,0,0x0,8
tick,0x7ff86ea82704,22682644,0,0x0,8
tick,0x7ff86ea82704,22683695,0,0x0,8
tick,0x7ff86ea82704,22685303,0,0x0,8
tick,0x7ff86ea82704,22687432,0,0x0,8
tick,0x7ff86ea82704,22690379,0,0x0,8
tick,0x7ff86ea82704,22692312,0,0x0,8
tick,0x7ff86ea82704,22694258,0,0x0,8
tick,0x7ff86ea82704,22696274,0,0x0,8
tick,0x7ff86ea82704,22698442,0,0x0,8
tick,0x7ff86ea82704,22700764,0,0x0,8
tick,0x7ff86ea82704,22702411,0,0x0,8
tick,0x7ff86ea82704,22704601,0,0x0,8
tick,0x7ff86ea82704,22706989,0,0x0,8
tick,0x7ff86ea82704,22708401,0,0x0,8
tick,0x7ff86ea82704,22710732,0,0x0,8
tick,0x7ff86ea82704,22712414,0,0x0,8
tick,0x7ff86ea82704,22714397,0,0x0,8
tick,0x7ff86ea82704,22716261,0,0x0,8
tick,0x7ff86ea82704,22718320,0,0x0,8
tick,0x7ff86ea82704,22720749,0,0x0,8
tick,0x7ff86ea82704,22723022,0,0x0,8
tick,0x7ff86ea82704,22724452,0,0x0,8
tick,0x7ff86ea82704,22726588,0,0x0,8
tick,0x7ff86ea82704,22728894,0,0x0,8
tick,0x7ff86ea82704,22731923,0,0x0,8
tick,0x7ff86ea82704,22733675,0,0x0,8
tick,0x7ff86ea82704,22735656,0,0x0,8
tick,0x7ff86ea82704,22737719,0,0x0,8
tick,0x7ff86ea82704,22740748,0,0x0,8
tick,0x7ff86ea82704,22742695,0,0x0,8
tick,0x7ff86ea82704,22744370,0,0x0,8
tick,0x7ff86ea82704,22746805,0,0x0,8
tick,0x7ff86ea82704,22749122,0,0x0,8
tick,0x7ff86ea82704,22750788,0,0x0,8
tick,0x7ff86ea82704,22752226,0,0x0,8
tick,0x7ff86ea82704,22754595,0,0x0,8
tick,0x7ff86ea82704,22757934,0,0x0,8
tick,0x7ff86ea82704,22759543,0,0x0,8
tick,0x7ff86ea82704,22761416,0,0x0,8
tick,0x7ff86ea82704,22763631,0,0x0,8
tick,0x7ff86ea82704,22765204,0,0x0,8
tick,0x7ff86ea82704,22767113,0,0x0,8
tick,0x7ff86ea82704,22769447,0,0x0,8
tick,0x7ff86ea82704,22771121,0,0x0,8
tick,0x7ff86ea82704,22773109,0,0x0,8
tick,0x7ff86ea82704,22775135,0,0x0,8
tick,0x7ff86ea82704,22778117,0,0x0,8
tick,0x7ff86ea82704,22780687,0,0x0,8
tick,0x7ff86ea82704,22782775,0,0x0,8
tick,0x7ff86ea82704,22784169,0,0x0,8
tick,0x7ff86ea82704,22786001,0,0x0,8
tick,0x7ff86ea82704,22788261,0,0x0,8
tick,0x7ff86ea82704,22790376,0,0x0,8
tick,0x7ff86ea82704,22793329,0,0x0,8
tick,0x7ff86ea82704,22794329,0,0x0,8
tick,0x7ff86ea82704,22796193,0,0x0,8
tick,0x7ff86ea82704,22798289,0,0x0,8
tick,0x7ff86ea82704,22801041,0,0x0,8
tick,0x7ff86ea82704,22802081,0,0x0,8
tick,0x7ff86ea82704,22804299,0,0x0,8
tick,0x7ff86ea82704,22806319,0,0x0,8
tick,0x7ff86ea82704,22808296,0,0x0,8
tick,0x7ff86ea82704,22810440,0,0x0,8
tick,0x7ff86ea82704,22812542,0,0x0,8
tick,0x7ff86ea82704,22815912,0,0x0,8
tick,0x7ff86ea82704,22819528,0,0x0,8
tick,0x7ff86ea82704,22821492,0,0x0,8
tick,0x7ff86ea82704,22823695,0,0x0,8
tick,0x7ff86ea82704,22825603,0,0x0,8
tick,0x7ff86ea82704,22827063,0,0x0,8
tick,0x7ff86ea82704,22829008,0,0x0,8
tick,0x7ff86ea82704,22830946,0,0x0,8
tick,0x7ff86ea82704,22833047,0,0x0,8
tick,0x7ff86ea82704,22835100,0,0x0,8
tick,0x7ff86ea82704,22836932,0,0x0,8
tick,0x7ff86ea82704,22839154,0,0x0,8
tick,0x7ff86ea82704,22841883,0,0x0,8
tick,0x7ff86ea82704,22842775,0,0x0,8
tick,0x7ff86ea82704,22844744,0,0x0,8
tick,0x7ff86ea82704,22846821,0,0x0,8
tick,0x7ff86ea82704,22849233,0,0x0,8
tick,0x7ff86ea82704,22850654,0,0x0,8
tick,0x7ff86ea82704,22852926,0,0x0,8
tick,0x7ff86ea82704,22854695,0,0x0,8
tick,0x7ff86ea82704,22856844,0,0x0,8
tick,0x7ff86ea82704,22858762,0,0x0,8
tick,0x7ff86ea82704,22861002,0,0x0,8
tick,0x7ff86ea82704,22862667,0,0x0,8
tick,0x7ff86ea82704,22864721,0,0x0,8
tick,0x7ff86ea82704,22866608,0,0x0,8
tick,0x7ff86ea82704,22868696,0,0x0,8
tick,0x7ff86ea82704,22870617,0,0x0,8
tick,0x7ff86ea82704,22872813,0,0x0,8
tick,0x7ff86ea82704,22874777,0,0x0,8
tick,0x7ff86ea82704,22877008,0,0x0,8
tick,0x7ff86ea82704,22878867,0,0x0,8
tick,0x7ff86ea82704,22881028,0,0x0,8
tick,0x7ff86ea82704,22882784,0,0x0,8
tick,0x7ff86ea82704,22885041,0,0x0,8
tick,0x7ff86ea82704,22886953,0,0x0,8
tick,0x7ff86ea82704,22888862,0,0x0,8
tick,0x7ff86ea82704,22890806,0,0x0,8
tick,0x7ff86ea82704,22892990,0,0x0,8
tick,0x7ff86ea82704,22894997,0,0x0,8
tick,0x7ff86ea82704,22896917,0,0x0,8
tick,0x7ff86ea82704,22898840,0,0x0,8
tick,0x7ff86ea82704,22900772,0,0x0,8
tick,0x7ff86ea82704,22902974,0,0x0,8
tick,0x7ff86ea82704,22904782,0,0x0,8
tick,0x7ff86ea82704,22906714,0,0x0,8
tick,0x7ff86ea82704,22908684,0,0x0,8
tick,0x7ff86ea82704,22910665,0,0x0,8
tick,0x7ff86ea82704,22912743,0,0x0,8
tick,0x7ff86ea82704,22914569,0,0x0,8
tick,0x7ff86ea82704,22916875,0,0x0,8
tick,0x7ff86ea82704,22918783,0,0x0,8
tick,0x7ff86ea82704,22920714,0,0x0,8
tick,0x7ff86ea82704,22922994,0,0x0,8
tick,0x7ff86ea82704,22924694,0,0x0,8
tick,0x7ff86ea82704,22927005,0,0x0,8
tick,0x7ff86ea82704,22928643,0,0x0,8
tick,0x7ff86ea82704,22930704,0,0x0,8
tick,0x7ff86ea82704,22932716,0,0x0,8
tick,0x7ff86ea82704,22935622,0,0x0,8
tick,0x7ff86ea82704,22936540,0,0x0,8
tick,0x7ff86ea82704,22938623,0,0x0,8
tick,0x7ff86ea82704,22940543,0,0x0,8
tick,0x7ff86ea82704,22942560,0,0x0,8
tick,0x7ff86ea82704,22944539,0,0x0,8
tick,0x7ff86ea82704,22946726,0,0x0,8
tick,0x7ff86ea82704,22948596,0,0x0,8
tick,0x7ff86ea82704,22951354,0,0x0,8
tick,0x7ff86ea82704,22952431,0,0x0,8
tick,0x7ff86ea82704,22954473,0,0x0,8
tick,0x7ff86ea82704,22957782,0,0x0,8
tick,0x7ff86ea82704,22958690,0,0x0,8
tick,0x7ff86ea82704,22960680,0,0x0,8
tick,0x7ff86ea82704,22962568,0,0x0,8
tick,0x7ff86ea82704,22964746,0,0x0,8
tick,0x7ff86ea82704,22966596,0,0x0,8
tick,0x7ff86ea82704,22968515,0,0x0,8
tick,0x7ff86ea82704,22970575,0,0x0,8
tick,0x7ff86ea82704,22973283,0,0x0,8
tick,0x7ff86ea82704,22974629,0,0x0,8
tick,0x7ff86ea82704,22976412,0,0x0,8
tick,0x7ff86ea82704,22978789,0,0x0,8
tick,0x7ff86ea82704,22980544,0,0x0,8
tick,0x7ff86ea82704,22982555,0,0x0,8
tick,0x7ff86ea82704,22984491,0,0x0,8
tick,0x7ff86ea82704,22986637,0,0x0,8
tick,0x7ff86ea82704,22988635,0,0x0,8
tick,0x7ff86ea82704,22990684,0,0x0,8
tick,0x7ff86ea82704,22992530,0,0x0,8
tick,0x7ff86ea82704,22994597,0,0x0,8
tick,0x7ff86ea82704,22996769,0,0x0,8
tick,0x7ff86ea82704,22998774,0,0x0,8
tick,0x7ff86ea82704,23000421,0,0x0,8
tick,0x7ff86ea82704,23002573,0,0x0,8
tick,0x7ff86ea82704,23004652,0,0x0,8
tick,0x7ff86ea82704,23006485,0,0x0,8
tick,0x7ff86ea82704,23008714,0,0x0,8
tick,0x7ff86ea82704,23010353,0,0x0,8
tick,0x7ff86ea82704,23012419,0,0x0,8
tick,0x7ff86ea82704,23014643,0,0x0,8
tick,0x7ff86ea82704,23016349,0,0x0,8
tick,0x7ff86ea82704,23018389,0,0x0,8
tick,0x7ff86ea82704,23020397,0,0x0,8
tick,0x7ff86ea82704,23022765,0,0x0,8
tick,0x7ff86ea82704,23024323,0,0x0,8
tick,0x7ff86ea82704,23026376,0,0x0,8
tick,0x7ff86ea82704,23028388,0,0x0,8
tick,0x7ff86ea82704,23030557,0,0x0,8
tick,0x7ff86ea82704,23032511,0,0x0,8
tick,0x7ff86ea82704,23034441,0,0x0,8
tick,0x7ff86ea82704,23036519,0,0x0,8
tick,0x7ff86ea82704,23038613,0,0x0,8
tick,0x7ff86ea82704,23040414,0,0x0,8
tick,0x7ff86ea82704,23042641,0,0x0,8
tick,0x7ff86ea82704,23044671,0,0x0,8
tick,0x7ff86ea82704,23046451,0,0x0,8
tick,0x7ff86ea82704,23048617,0,0x0,8
tick,0x7ff86ea82704,23050662,0,0x0,8
tick,0x7ff86ea82704,23052304,0,0x0,8
tick,0x7ff86ea82704,23054483,0,0x0,8
tick,0x7ff86ea82704,23056488,0,0x0,8
tick,0x7ff86ea82704,23058582,0,0x0,8
tick,0x7ff86ea82704,23060410,0,0x0,8
tick,0x7ff86ea82704,23062257,0,0x0,8
tick,0x7ff86ea82704,23064326,0,0x0,8
tick,0x7ff86ea82704,23066589,0,0x0,8
tick,0x7ff86ea82704,23068536,0,0x0,8
tick,0x7ff86ea82704,23070291,0,0x0,8
tick,0x7ff86ea82704,23072546,0,0x0,8
tick,0x7ff86ea82704,23074265,0,0x0,8
tick,0x7ff86ea82704,23076278,0,0x0,8
tick,0x7ff86ea82704,23078612,0,0x0,8
tick,0x7ff86ea82704,23080510,0,0x0,8
tick,0x7ff86ea82704,23082925,0,0x0,8
tick,0x7ff86ea82704,23084421,0,0x0,8
tick,0x7ff86ea82704,23086187,0,0x0,8
tick,0x7ff86ea82704,23088181,0,0x0,8
tick,0x7ff86ea82704,23090490,0,0x0,8
tick,0x7ff86ea82704,23092292,0,0x0,8
tick,0x7ff86ea82704,23094559,0,0x0,8
tick,0x7ff86ea82704,23096483,0,0x0,8
tick,0x7ff86ea82704,23098264,0,0x0,8
tick,0x7ff86ea82704,23100745,0,0x0,8
tick,0x7ff86ea82704,23102487,0,0x0,8
tick,0x7ff86ea82704,23104814,0,0x0,8
tick,0x7ff86ea82704,23106334,0,0x0,8
tick,0x7ff86ea82704,23108466,0,0x0,8
tick,0x7ff86ea82704,23110068,0,0x0,8
tick,0x7ff86ea82704,23112581,0,0x0,8
tick,0x7ff86ea82704,23114161,0,0x0,8
tick,0x7ff86ea82704,23116408,0,0x0,8
tick,0x7ff86ea82704,23118507,0,0x0,8
tick,0x7ff86ea82704,23120451,0,0x0,8
tick,0x7ff86ea82704,23122265,0,0x0,8
tick,0x7ff86ea82704,23124544,0,0x0,8
tick,0x7ff86ea82704,23126146,0,0x0,8
tick,0x7ff86ea82704,23128480,0,0x0,8
tick,0x7ff86ea82704,23130247,0,0x0,8
tick,0x7ff86ea82704,23132064,0,0x0,8
tick,0x7ff86ea82704,23134207,0,0x0,8
tick,0x7ff86ea82704,23136231,0,0x0,8
tick,0x7ff86ea82704,23138684,0,0x0,8
tick,0x7ff86ea82704,23140274,0,0x0,8
tick,0x7ff86ea82704,23142209,0,0x0,8
tick,0x7ff86ea82704,23144443,0,0x0,8
tick,0x7ff86ea82704,23147799,0,0x0,8
tick,0x7ff86ea82704,23148243,0,0x0,8
tick,0x7ff86ea82704,23150314,0,0x0,8
tick,0x7ff86ea82704,23152401,0,0x0,8
tick,0x7ff86ea82704,23154074,0,0x0,8
tick,0x7ff86ea82704,23156307,0,0x0,8
tick,0x7ff86ea82704,23158106,0,0x0,8
tick,0x7ff86ea82704,23161948,0,0x0,8
tick,0x7ff86ea82704,23169547,0,0x0,8
tick,0x7ff86ea82704,23173210,0,0x0,8
tick,0x7ff86ea82704,23175913,0,0x0,8
tick,0x7ff86ea82704,23177887,0,0x0,8
tick,0x7ff86ea82704,23180556,0,0x0,8
tick,0x7ff86ea82704,23181979,0,0x0,8
tick,0x7ff86ea82704,23184881,0,0x0,8
tick,0x7ff86ea82704,23187051,0,0x0,8
tick,0x7ff86ea82704,23190131,0,0x0,8
tick,0x7ff86ea82704,23192514,0,0x0,8
tick,0x7ff86ea82704,23194086,0,0x0,8
tick,0x7ff86ea82704,23196009,0,0x0,8
tick,0x7ff86ea82704,23198090,0,0x0,8
tick,0x7ff86ea82704,23201006,0,0x0,8
tick,0x7ff86ea82704,23203049,0,0x0,8
tick,0x7ff86ea82704,23204922,0,0x0,8
tick,0x7ff86ea82704,23206933,0,0x0,8
tick,0x7ff86ea82704,23209054,0,0x0,8
tick,0x7ff86ea82704,23210836,0,0x0,8
tick,0x7ff86ea82704,23213133,0,0x0,8
tick,0x7ff86ea82704,23215430,0,0x0,8
tick,0x7ff86ea82704,23216901,0,0x0,8
tick,0x7ff86ea82704,23218982,0,0x0,8
tick,0x7ff86ea82704,23221055,0,0x0,8
tick,0x7ff86ea82704,23223099,0,0x0,8
tick,0x7ff86ea82704,23224921,0,0x0,8
tick,0x7ff86ea82704,23227876,0,0x0,8
tick,0x7ff86ea82704,23229961,0,0x0,8
tick,0x7ff86ea82704,23231859,0,0x0,8
tick,0x7ff86ea82704,23233883,0,0x0,8
tick,0x7ff86ea82704,23237224,0,0x0,8
tick,0x7ff86ea82704,23239665,0,0x0,8
tick,0x7ff86ea82704,23242085,0,0x0,8
tick,0x7ff86ea82704,23243765,0,0x0,8
tick,0x7ff86ea82704,23245802,0,0x0,8
tick,0x7ff86ea82704,23247970,0,0x0,8
tick,0x7ff86ea82704,23250117,0,0x0,8
tick,0x7ff86ea82704,23251858,0,0x0,8
tick,0x7ff86ea82704,23253885,0,0x0,8
tick,0x7ff86ea82704,23255787,0,0x0,8
tick,0x7ff86ea82704,23260162,0,0x0,8
tick,0x7ff86ea82704,23262670,0,0x0,8
tick,0x7ff86ea82704,23265122,0,0x0,8
tick,0x7ff86ea82704,23266754,0,0x0,8
tick,0x7ff86ea82704,23269160,0,0x0,8
tick,0x7ff86ea82704,23270737,0,0x0,8
tick,0x7ff86ea82704,23272855,0,0x0,8
tick,0x7ff86ea82704,23274809,0,0x0,8
tick,0x7ff86ea82704,23276897,0,0x0,8
tick,0x7ff86ea82704,23278993,0,0x0,8
tick,0x7ff86ea82704,23281292,0,0x0,8
tick,0x7ff86ea82704,23282699,0,0x0,8
tick,0x7ff86ea82704,23284710,0,0x0,8
tick,0x7ff86ea82704,23286674,0,0x0,8
tick,0x7ff86ea82704,23289071,0,0x0,8
tick,0x7ff86ea82704,23290853,0,0x0,8
tick,0x7ff86ea82704,23293069,0,0x0,8
tick,0x7ff86ea82704,23294673,0,0x0,8
tick,0x7ff86ea82704,23298215,0,0x0,8
tick,0x7ff86ea82704,23299798,0,0x0,8
tick,0x7ff86ea82704,23301651,0,0x0,8
tick,0x7ff86ea82704,23304076,0,0x0,8
tick,0x7ff86ea82704,23306712,0,0x0,8
tick,0x7ff86ea82704,23309055,0,0x0,8
tick,0x7ff86ea82704,23310568,0,0x0,8
tick,0x7ff86ea82704,23313113,0,0x0,8
tick,0x7ff86ea82704,23314769,0,0x0,8
tick,0x7ff86ea82704,23316541,0,0x0,8
tick,0x7ff86ea82704,23318685,0,0x0,8
tick,0x7ff86ea82704,23320746,0,0x0,8
tick,0x7ff86ea82704,23322894,0,0x0,8
tick,0x7ff86ea82704,23324554,0,0x0,8
tick,0x7ff86ea82704,23326550,0,0x0,8
tick,0x7ff86ea82704,23328769,0,0x0,8
tick,0x7ff86ea82704,23330664,0,0x0,8
tick,0x7ff86ea82704,23332976,0,0x0,8
tick,0x7ff86ea82704,23334571,0,0x0,8
tick,0x7ff86ea82704,23336506,0,0x0,8
tick,0x7ff86ea82704,23338647,0,0x0,8
tick,0x7ff86ea82704,23341142,0,0x0,8
tick,0x7ff86ea82704,23343319,0,0x0,8
tick,0x7ff86ea82704,23346720,0,0x0,8
tick,0x7ff86ea82704,23349114,0,0x0,8
tick,0x7ff86ea82704,23350562,0,0x0,8
tick,0x7ff86ea82704,23352614,0,0x0,8
tick,0x7ff86ea82704,23354455,0,0x0,8
tick,0x7ff86ea82704,23356944,0,0x0,8
tick,0x7ff86ea82704,23358630,0,0x0,8
tick,0x7ff86ea82704,23360764,0,0x0,8
tick,0x7ff86ea82704,23362577,0,0x0,8
tick,0x7ff86ea82704,23364533,0,0x0,8
tick,0x7ff86ea82704,23366740,0,0x0,8
tick,0x7ff86ea82704,23369032,0,0x0,8
tick,0x7ff86ea82704,23370445,0,0x0,8
tick,0x7ff86ea82704,23372732,0,0x0,8
tick,0x7ff86ea82704,23374456,0,0x0,8
tick,0x7ff86ea82704,23376468,0,0x0,8
tick,0x7ff86ea82704,23378779,0,0x0,8
tick,0x7ff86ea82704,23380439,0,0x0,8
tick,0x7ff86ea82704,23382658,0,0x0,8
tick,0x7ff86ea82704,23385015,0,0x0,8
tick,0x7ff86ea82704,23386555,0,0x0,8
tick,0x7ff86ea82704,23388653,0,0x0,8
tick,0x7ff86ea82704,23390688,0,0x0,8
tick,0x7ff86ea82704,23392532,0,0x0,8
tick,0x7ff86ea82704,23394607,0,0x0,8
tick,0x7ff86ea82704,23396467,0,0x0,8
tick,0x7ff86ea82704,23398373,0,0x0,8
tick,0x7ff86ea82704,23400537,0,0x0,8
tick,0x7ff86ea82704,23402801,0,0x0,8
tick,0x7ff86ea82704,23404490,0,0x0,8
tick,0x7ff86ea82704,23406759,0,0x0,8
tick,0x7ff86ea82704,23408861,0,0x0,8
tick,0x7ff86ea82704,23410546,0,0x0,8
tick,0x7ff86ea82704,23412879,0,0x0,8
tick,0x7ff86ea82704,23414543,0,0x0,8
tick,0x7ff86ea82704,23417227,0,0x0,8
tick,0x7ff86ea82704,23419661,0,0x0,8
tick,0x7ff86ea82704,23421202,0,0x0,8
tick,0x7ff86ea82704,23423458,0,0x0,8
tick,0x7ff86ea82704,23425167,0,0x0,8
tick,0x7ff86ea82704,23427304,0,0x0,8
tick,0x7ff86ea82704,23429270,0,0x0,8
tick,0x7ff86ea82704,23431261,0,0x0,8
tick,0x7ff86ea82704,23433245,0,0x0,8
tick,0x7ff86ea82704,23435314,0,0x0,8
tick,0x7ff86ea82704,23437203,0,0x0,8
tick,0x7ff86ea82704,23439312,0,0x0,8
tick,0x7ff86ea82704,23441230,0,0x0,8
tick,0x7ff86ea82704,23443154,0,0x0,8
tick,0x7ff86ea82704,23445244,0,0x0,8
tick,0x7ff86ea82704,23447125,0,0x0,8
tick,0x7ff86ea82704,23449252,0,0x0,8
tick,0x7ff86ea82704,23451492,0,0x0,8
tick,0x7ff86ea82704,23453218,0,0x0,8
tick,0x7ff86ea82704,23455452,0,0x0,8
tick,0x7ff86ea82704,23457276,0,0x0,8
tick,0x7ff86ea82704,23459283,0,0x0,8
tick,0x7ff86ea82704,23461267,0,0x0,8
tick,0x7ff86ea82704,23463518,0,0x0,8
tick,0x7ff86ea82704,23465331,0,0x0,8
tick,0x7ff86ea82704,23467256,0,0x0,8
tick,0x7ff86ea82704,23469891,0,0x0,8
tick,0x7ff86ea82704,23472367,0,0x0,8
tick,0x7ff86ea82704,23474196,0,0x0,8
tick,0x7ff86ea82704,23476245,0,0x0,8
tick,0x7ff86ea82704,23478345,0,0x0,8
tick,0x7ff86ea82704,23480338,0,0x0,8
tick,0x7ff86ea82704,23482147,0,0x0,8
tick,0x7ff86ea82704,23484191,0,0x0,8
tick,0x7ff86ea82704,23486183,0,0x0,8
tick,0x7ff86ea82704,23488078,0,0x0,8
tick,0x7ff86ea82704,23490007,0,0x0,8
tick,0x7ff86ea82704,23492033,0,0x0,8
tick,0x7ff86ea82704,23494031,0,0x0,8
tick,0x7ff86ea82704,23496253,0,0x0,8
tick,0x7ff86ea82704,23498024,0,0x0,8
tick,0x7ff86ea82704,23500138,0,0x0,8
tick,0x7ff86ea82704,23502075,0,0x0,8
tick,0x7ff86ea82704,23504186,0,0x0,8
tick,0x7ff86ea82704,23506043,0,0x0,8
tick,0x7ff86ea82704,23508132,0,0x0,8
tick,0x7ff86ea82704,23510153,0,0x0,8
tick,0x7ff86ea82704,23512544,0,0x0,8
tick,0x7ff86ea82704,23514026,0,0x0,8
tick,0x7ff86ea82704,23516011,0,0x0,8
tick,0x7ff86ea82704,23518320,0,0x0,8
tick,0x7ff86ea82704,23520082,0,0x0,8
tick,0x7ff86ea82704,23522047,0,0x0,8
tick,0x7ff86ea82704,23523938,0,0x0,8
tick,0x7ff86ea82704,23526285,0,0x0,8
tick,0x7ff86ea82704,23528211,0,0x0,8
tick,0x7ff86ea82704,23529996,0,0x0,8
tick,0x7ff86ea82704,23532076,0,0x0,8
tick,0x7ff86ea82704,23534269,0,0x0,8
tick,0x7ff86ea82704,23536004,0,0x0,8
tick,0x7ff86ea82704,23537887,0,0x0,8
tick,0x7ff86ea82704,23540339,0,0x0,8
tick,0x7ff86ea82704,23541958,0,0x0,8
tick,0x7ff86ea82704,23543960,0,0x0,8
tick,0x7ff86ea82704,23546058,0,0x0,8
tick,0x7ff86ea82704,23547929,0,0x0,8
tick,0x7ff86ea82704,23549974,0,0x0,8
tick,0x7ff86ea82704,23552001,0,0x0,8
tick,0x7ff86ea82704,23554025,0,0x0,8
tick,0x7ff86ea82704,23555867,0,0x0,8
tick,0x7ff86ea82704,23557937,0,0x0,8
tick,0x7ff86ea82704,23560018,0,0x0,8
tick,0x7ff86ea82704,23562122,0,0x0,8
tick,0x7ff86ea82704,23563914,0,0x0,8
tick,0x7ff86ea82704,23565804,0,0x0,8
tick,0x7ff86ea82704,23567878,0,0x0,8
tick,0x7ff86ea82704,23569880,0,0x0,8
tick,0x7ff86ea82704,23571937,0,0x0,8
tick,0x7ff86ea82704,23573773,0,0x0,8
tick,0x7ff86ea82704,23575964,0,0x0,8
tick,0x7ff86ea82704,23577903,0,0x0,8
tick,0x7ff86ea82704,23579919,0,0x0,8
tick,0x7ff86ea82704,23581930,0,0x0,8
tick,0x7ff86ea82704,23583942,0,0x0,8
tick,0x7ff86ea82704,23585786,0,0x0,8
tick,0x7ff86ea82704,23588594,0,0x0,8
tick,0x7ff86ea82704,23589984,0,0x0,8
tick,0x7ff86ea82704,23592017,0,0x0,8
tick,0x7ff86ea82704,23593798,0,0x0,8
tick,0x7ff86ea82704,23595682,0,0x0,8
tick,0x7ff86ea82704,23597837,0,0x0,8
tick,0x7ff86ea82704,23599812,0,0x0,8
tick,0x7ff86ea82704,23601991,0,0x0,8
tick,0x7ff86ea82704,23603758,0,0x0,8
tick,0x7ff86ea82704,23606091,0,0x0,8
tick,0x7ff86ea82704,23607833,0,0x0,8
tick,0x7ff86ea82704,23609733,0,0x0,8
tick,0x7ff86ea82704,23611752,0,0x0,8
tick,0x7ff86ea82704,23613945,0,0x0,8
tick,0x7ff86ea82704,23615917,0,0x0,8
tick,0x7ff86ea82704,23617657,0,0x0,8
tick,0x7ff86ea82704,23619888,0,0x0,8
tick,0x7ff86ea82704,23621684,0,0x0,8
tick,0x7ff86ea82704,23623762,0,0x0,8
tick,0x7ff86ea82704,23625694,0,0x0,8
tick,0x7ff86ea82704,23628436,0,0x0,8
tick,0x7ff86ea82704,23630403,0,0x0,8
tick,0x7ff86ea82704,23632258,0,0x0,8
tick,0x7ff86ea82704,23634403,0,0x0,8
tick,0x7ff86ea82704,23636061,0,0x0,8
tick,0x7ff86ea82704,23638031,0,0x0,8
tick,0x7ff86ea82704,23640105,0,0x0,8
tick,0x7ff86ea82704,23642019,0,0x0,8
tick,0x7ff86ea82704,23643851,0,0x0,8
tick,0x7ff86ea82704,23645904,0,0x0,8
tick,0x7ff86ea82704,23648557,0,0x0,8
tick,0x7ff86ea82704,23650637,0,0x0,8
tick,0x7ff86ea82704,23652693,0,0x0,8
tick,0x7ff86ea82704,23654753,0,0x0,8
tick,0x7ff86ea82704,23656684,0,0x0,8
tick,0x7ff86ea82704,23658744,0,0x0,8
tick,0x7ff86ea82704,23660647,0,0x0,8
tick,0x7ff86ea82704,23662740,0,0x0,8
tick,0x7ff86ea82704,23664648,0,0x0,8
tick,0x7ff86ea82704,23666710,0,0x0,8
tick,0x7ff86ea82704,23668609,0,0x0,8
tick,0x7ff86ea82704,23670780,0,0x0,8
tick,0x7ff86ea82704,23672701,0,0x0,8
tick,0x7ff86ea82704,23674722,0,0x0,8
tick,0x7ff86ea82704,23676675,0,0x0,8
tick,0x7ff86ea82704,23678723,0,0x0,8
tick,0x7ff86ea82704,23680672,0,0x0,8
tick,0x7ff86ea82704,23682898,0,0x0,8
tick,0x7ff86ea82704,23684593,0,0x0,8
tick,0x7ff86ea82704,23686905,0,0x0,8
tick,0x7ff86ea82704,23688895,0,0x0,8
tick,0x7ff86ea82704,23690618,0,0x0,8
tick,0x7ff86ea82704,23692910,0,0x0,8
tick,0x7ff86ea82704,23694644,0,0x0,8
tick,0x7ff86ea82704,23696894,0,0x0,8
tick,0x7ff86ea82704,23700783,0,0x0,8
tick,0x7ff86ea82704,23702753,0,0x0,8
tick,0x7ff86ea82704,23704799,0,0x0,8
tick,0x7ff86ea82704,23706813,0,0x0,8
tick,0x7ff86ea82704,23709206,0,0x0,8
tick,0x7ff86ea82704,23710693,0,0x0,8
tick,0x7ff86ea82704,23712884,0,0x0,8
tick,0x7ff86ea82704,23714747,0,0x0,8
tick,0x7ff86ea82704,23716917,0,0x0,8
tick,0x7ff86ea82704,23718600,0,0x0,8
tick,0x7ff86ea82704,23722091,0,0x0,8
tick,0x7ff86ea82704,23722830,0,0x0,8
tick,0x7ff86ea82704,23724832,0,0x0,8
tick,0x7ff86ea82704,23726706,0,0x0,8
tick,0x7ff86ea82704,23728847,0,0x0,8
tick,0x7ff86ea82704,23730822,0,0x0,8
tick,0x7ff86ea82704,23732920,0,0x0,8
tick,0x7ff86ea82704,23734707,0,0x0,8
tick,0x7ff86ea82704,23736884,0,0x0,8
tick,0x7ff86ea82704,23738686,0,0x0,8
tick,0x7ff86ea82704,23741174,0,0x0,8
tick,0x7ff86ea82704,23742648,0,0x0,8
tick,0x7ff86ea82704,23745777,0,0x0,8
tick,0x7ff86ea82704,23747376,0,0x0,8
tick,0x7ff86ea82704,23749351,0,0x0,8
tick,0x7ff86ea82704,23751418,0,0x0,8
tick,0x7ff86ea82704,23753659,0,0x0,8
tick,0x7ff86ea82704,23755638,0,0x0,8
tick,0x7ff86ea82704,23757381,0,0x0,8
tick,0x7ff86ea82704,23759332,0,0x0,8
tick,0x7ff86ea82704,23761326,0,0x0,8
tick,0x7ff86ea82704,23763636,0,0x0,8
tick,0x7ff86ea82704,23765351,0,0x0,8
tick,0x7ff86ea82704,23767352,0,0x0,8
tick,0x7ff86ea82704,23769286,0,0x0,8
tick,0x7ff86ea82704,23771790,0,0x0,8
tick,0x7ff86ea82704,23773321,0,0x0,8
tick,0x7ff86ea82704,23775509,0,0x0,8
tick,0x7ff86ea82704,23777265,0,0x0,8
tick,0x7ff86ea82704,23779288,0,0x0,8
tick,0x7ff86ea82704,23781285,0,0x0,8
tick,0x7ff86ea82704,23783301,0,0x0,8
tick,0x7ff86ea82704,23785333,0,0x0,8
tick,0x7ff86ea82704,23787351,0,0x0,8
tick,0x7ff86ea82704,23789264,0,0x0,8
tick,0x7ff86ea82704,23791311,0,0x0,8
tick,0x7ff86ea82704,23793344,0,0x0,8
tick,0x7ff86ea82704,23795249,0,0x0,8
tick,0x7ff86ea82704,23797275,0,0x0,8
tick,0x7ff86ea82704,23799435,0,0x0,8
tick,0x7ff86ea82704,23801650,0,0x0,8
tick,0x7ff86ea82704,23803259,0,0x0,8
tick,0x7ff86ea82704,23805330,0,0x0,8
tick,0x7ff86ea82704,23807412,0,0x0,8
tick,0x7ff86ea82704,23809343,0,0x0,8
tick,0x7ff86ea82704,23811466,0,0x0,8
tick,0x7ff86ea82704,23813312,0,0x0,8
tick,0x7ff86ea82704,23815206,0,0x0,8
tick,0x7ff86ea82704,23817177,0,0x0,8
tick,0x7ff86ea82704,23819330,0,0x0,8
tick,0x7ff86ea82704,23821157,0,0x0,8
tick,0x7ff86ea82704,23823206,0,0x0,8
tick,0x7ff86ea82704,23825195,0,0x0,8
tick,0x7ff86ea82704,23827186,0,0x0,8
tick,0x7ff86ea82704,23829248,0,0x0,8
tick,0x7ff86ea82704,23831186,0,0x0,8
tick,0x7ff86ea82704,23833296,0,0x0,8
tick,0x7ff86ea82704,23835195,0,0x0,8
tick,0x7ff86ea82704,23837218,0,0x0,8
tick,0x7ff86ea82704,23839241,0,0x0,8
tick,0x7ff86ea82704,23841334,0,0x0,8
tick,0x7ff86ea82704,23843139,0,0x0,8
tick,0x7ff86ea82704,23845183,0,0x0,8
tick,0x7ff86ea82704,23847147,0,0x0,8
tick,0x7ff86ea82704,23849107,0,0x0,8
tick,0x7ff86ea82704,23851065,0,0x0,8
tick,0x7ff86ea82704,23853163,0,0x0,8
tick,0x7ff86ea82704,23855134,0,0x0,8
tick,0x7ff86ea82704,23857163,0,0x0,8
tick,0x7ff86ea82704,23859162,0,0x0,8
tick,0x7ff86ea82704,23861046,0,0x0,8
tick,0x7ff86ea82704,23863215,0,0x0,8
tick,0x7ff86ea82704,23865177,0,0x0,8
tick,0x7ff86ea82704,23867176,0,0x0,8
tick,0x7ff86ea82704,23869054,0,0x0,8
tick,0x7ff86ea82704,23871142,0,0x0,8
tick,0x7ff86ea82704,23873059,0,0x0,8
tick,0x7ff86ea82704,23875208,0,0x0,8
tick,0x7ff86ea82704,23877370,0,0x0,8
tick,0x7ff86ea82704,23879162,0,0x0,8
tick,0x7ff86ea82704,23881084,0,0x0,8
tick,0x7ff86ea82704,23883053,0,0x0,8
tick,0x7ff86ea82704,23884988,0,0x0,8
tick,0x7ff86ea82704,23887064,0,0x0,8
tick,0x7ff86ea82704,23889269,0,0x0,8
tick,0x7ff86ea82704,23891202,0,0x0,8
tick,0x7ff86ea82704,23893098,0,0x0,8
tick,0x7ff86ea82704,23895155,0,0x0,8
tick,0x7ff86ea82704,23897180,0,0x0,8
tick,0x7ff86ea82704,23899321,0,0x0,8
tick,0x7ff86ea82704,23901104,0,0x0,8
tick,0x7ff86ea82704,23903051,0,0x0,8
tick,0x7ff86ea82704,23905098,0,0x0,8
tick,0x7ff86ea82704,23907023,0,0x0,8
tick,0x7ff86ea82704,23908986,0,0x0,8
tick,0x7ff86ea82704,23910958,0,0x0,8
tick,0x7ff86ea82704,23913038,0,0x0,8
tick,0x7ff86ea82704,23914985,0,0x0,8
tick,0x7ff86ea82704,23916960,0,0x0,8
tick,0x7ff86ea82704,23919132,0,0x0,8
tick,0x7ff86ea82704,23920955,0,0x0,8
tick,0x7ff86ea82704,23922915,0,0x0,8
tick,0x7ff86ea82704,23924958,0,0x0,8
tick,0x7ff86ea82704,23926937,0,0x0,8
tick,0x7ff86ea82704,23928878,0,0x0,8
tick,0x7ff86ea82704,23930851,0,0x0,8
tick,0x7ff86ea82704,23932848,0,0x0,8
tick,0x7ff86ea82704,23934885,0,0x0,8
tick,0x7ff86ea82704,23936859,0,0x0,8
tick,0x7ff86ea82704,23938921,0,0x0,8
tick,0x7ff86ea82704,23941006,0,0x0,8
tick,0x7ff86ea82704,23942863,0,0x0,8
tick,0x7ff86ea82704,23944864,0,0x0,8
tick,0x7ff86ea82704,23947000,0,0x0,8
tick,0x7ff86ea82704,23948951,0,0x0,8
tick,0x7ff86ea82704,23950921,0,0x0,8
tick,0x7ff86ea82704,23953138,0,0x0,8
tick,0x7ff86ea82704,23954914,0,0x0,8
tick,0x7ff86ea82704,23956982,0,0x0,8
tick,0x7ff86ea82704,23958883,0,0x0,8
tick,0x7ff86ea82704,23960994,0,0x0,8
tick,0x7ff86ea82704,23962912,0,0x0,8
tick,0x7ff86ea82704,23964944,0,0x0,8
tick,0x7ff86ea82704,23967084,0,0x0,8
tick,0x7ff86ea82704,23969195,0,0x0,8
tick,0x7ff86ea82704,23971466,0,0x0,8
tick,0x7ff86ea82704,23973330,0,0x0,8
tick,0x7ff86ea82704,23975086,0,0x0,8
tick,0x7ff86ea82704,23976750,0,0x0,8
tick,0x7ff86ea82704,23978803,0,0x0,8
tick,0x7ff86ea82704,23980720,0,0x0,8
tick,0x7ff86ea82704,23983029,0,0x0,8
tick,0x7ff86ea82704,23984720,0,0x0,8
tick,0x7ff86ea82704,23986700,0,0x0,8
tick,0x7ff86ea82704,23988659,0,0x0,8
tick,0x7ff86ea82704,23990882,0,0x0,8
tick,0x7ff86ea82704,23992669,0,0x0,8
tick,0x7ff86ea82704,23994666,0,0x0,8
tick,0x7ff86ea82704,23996683,0,0x0,8
tick,0x7ff86ea82704,23998689,0,0x0,8
tick,0x7ff86ea82704,24000671,0,0x0,8
tick,0x7ff86ea82704,24002680,0,0x0,8
tick,0x7ff86ea82704,24004726,0,0x0,8
tick,0x7ff86ea82704,24006632,0,0x0,8
tick,0x7ff86ea82704,24008717,0,0x0,8
tick,0x7ff86ea82704,24010663,0,0x0,8
tick,0x7ff86ea82704,24012653,0,0x0,8
tick,0x7ff86ea82704,24014692,0,0x0,8
tick,0x7ff86ea82704,24016662,0,0x0,8
tick,0x7ff86ea82704,24018614,0,0x0,8
tick,0x7ff86ea82704,24020637,0,0x0,8
tick,0x7ff86ea82704,24022594,0,0x0,8
tick,0x7ff86ea82704,24024609,0,0x0,8
tick,0x7ff86ea82704,24026604,0,0x0,8
tick,0x7ff86ea82704,24028635,0,0x0,8
tick,0x7ff86ea82704,24030608,0,0x0,8
tick,0x7ff86ea82704,24032613,0,0x0,8
tick,0x7ff86ea82704,24034596,0,0x0,8
tick,0x7ff86ea82704,24036533,0,0x0,8
tick,0x7ff86ea82704,24038567,0,0x0,8
tick,0x7ff86ea82704,24040550,0,0x0,8
tick,0x7ff86ea82704,24042552,0,0x0,8
tick,0x7ff86ea82704,24044577,0,0x0,8
tick,0x7ff86ea82704,24046583,0,0x0,8
tick,0x7ff86ea82704,24048530,0,0x0,8
tick,0x7ff86ea82704,24050546,0,0x0,8
tick,0x7ff86ea82704,24052579,0,0x0,8
tick,0x7ff86ea82704,24054545,0,0x0,8
tick,0x7ff86ea82704,24056522,0,0x0,8
tick,0x7ff86ea82704,24058559,0,0x0,8
tick,0x7ff86ea82704,24060524,0,0x0,8
tick,0x7ff86ea82704,24062515,0,0x0,8
tick,0x7ff86ea82704,24064653,0,0x0,8
tick,0x7ff86ea82704,24066571,0,0x0,8
tick,0x7ff86ea82704,24068494,0,0x0,8
tick,0x7ff86ea82704,24070478,0,0x0,8
tick,0x7ff86ea82704,24072479,0,0x0,8
tick,0x7ff86ea82704,24074482,0,0x0,8
tick,0x7ff86ea82704,24076475,0,0x0,8
tick,0x7ff86ea82704,24078513,0,0x0,8
tick,0x7ff86ea82704,24080418,0,0x0,8
tick,0x7ff86ea82704,24082445,0,0x0,8
tick,0x7ff86ea82704,24084436,0,0x0,8
tick,0x7ff86ea82704,24086458,0,0x0,8
tick,0x7ff86ea82704,24088417,0,0x0,8
tick,0x7ff86ea82704,24090419,0,0x0,8
tick,0x7ff86ea82704,24092414,0,0x0,8
tick,0x7ff86ea82704,24094497,0,0x0,8
tick,0x7ff86ea82704,24096423,0,0x0,8
tick,0x7ff86ea82704,24098439,0,0x0,8
tick,0x7ff86ea82704,24100398,0,0x0,8
tick,0x7ff86ea82704,24102434,0,0x0,8
tick,0x7ff86ea82704,24104462,0,0x0,8
tick,0x7ff86ea82704,24106428,0,0x0,8
tick,0x7ff86ea82704,24108496,0,0x0,8
tick,0x7ff86ea82704,24110459,0,0x0,8
tick,0x7ff86ea82704,24112499,0,0x0,8
tick,0x7ff86ea82704,24114408,0,0x0,8
tick,0x7ff86ea82704,24116417,0,0x0,8
tick,0x7ff86ea82704,24118443,0,0x0,8
tick,0x7ff86ea82704,24120566,0,0x0,8
tick,0x7ff86ea82704,24122491,0,0x0,8
tick,0x7ff86ea82704,24124300,0,0x0,8
tick,0x7ff86ea82704,24126425,0,0x0,8
tick,0x7ff86ea82704,24128379,0,0x0,8
tick,0x7ff86ea82704,24130563,0,0x0,8
tick,0x7ff86ea82704,24132512,0,0x0,8
tick,0x7ff86ea82704,24134614,0,0x0,8
tick,0x7ff86ea82704,24136306,0,0x0,8
tick,0x7ff86ea82704,24138269,0,0x0,8
tick,0x7ff86ea82704,24140366,0,0x0,8
tick,0x7ff86ea82704,24142318,0,0x0,8
tick,0x7ff86ea82704,24144327,0,0x0,8
tick,0x7ff86ea82704,24146266,0,0x0,8
tick,0x7ff86ea82704,24148242,0,0x0,8
tick,0x7ff86ea82704,24150341,0,0x0,8
tick,0x7ff86ea82704,24152239,0,0x0,8
tick,0x7ff86ea82704,24154288,0,0x0,8
tick,0x7ff86ea82704,24156224,0,0x0,8
tick,0x7ff86ea82704,24158252,0,0x0,8
tick,0x7ff86ea82704,24160271,0,0x0,8
tick,0x7ff86ea82704,24162309,0,0x0,8
tick,0x7ff86ea82704,24164322,0,0x0,8
tick,0x7ff86ea82704,24166211,0,0x0,8
tick,0x7ff86ea82704,24168270,0,0x0,8
tick,0x7ff86ea82704,24170173,0,0x0,8
tick,0x7ff86ea82704,24172248,0,0x0,8
tick,0x7ff86ea82704,24174279,0,0x0,8
tick,0x7ff86ea82704,24176218,0,0x0,8
tick,0x7ff86ea82704,24178171,0,0x0,8
tick,0x7ff86ea82704,24180224,0,0x0,8
tick,0x7ff86ea82704,24182238,0,0x0,8
tick,0x7ff86ea82704,24184252,0,0x0,8
tick,0x7ff86ea82704,24186145,0,0x0,8
tick,0x7ff86ea82704,24188288,0,0x0,8
tick,0x7ff86ea82704,24190164,0,0x0,8
tick,0x7ff86ea82704,24192274,0,0x0,8
tick,0x7ff86ea82704,24194230,0,0x0,8
tick,0x7ff86ea82704,24196161,0,0x0,8
tick,0x7ff86ea82704,24198149,0,0x0,8
tick,0x7ff86ea82704,24200182,0,0x0,8
tick,0x7ff86ea82704,24202125,0,0x0,8
tick,0x7ff86ea82704,24204149,0,0x0,8
tick,0x7ff86ea82704,24206103,0,0x0,8
tick,0x7ff86ea82704,24208136,0,0x0,8
tick,0x7ff86ea82704,24210086,0,0x0,8
tick,0x7ff86ea82704,24212123,0,0x0,8
tick,0x7ff86ea82704,24214046,0,0x0,8
tick,0x7ff86ea82704,24216149,0,0x0,8
tick,0x7ff86ea82704,24218039,0,0x0,8
tick,0x7ff86ea82704,24220136,0,0x0,8
tick,0x7ff86ea82704,24222029,0,0x0,8
tick,0x7ff86ea82704,24224088,0,0x0,8
tick,0x7ff86ea82704,24226018,0,0x0,8
tick,0x7ff86ea82704,24228118,0,0x0,8
tick,0x7ff86ea82704,24230006,0,0x0,8
tick,0x7ff86ea82704,24232055,0,0x0,8
tick,0x7ff86ea82704,24234089,0,0x0,8
tick,0x7ff86ea82704,24236035,0,0x0,8
tick,0x7ff86ea82704,24238011,0,0x0,8
tick,0x7ff86ea82704,24240012,0,0x0,8
tick,0x7ff86ea82704,24242044,0,0x0,8
tick,0x7ff86ea82704,24244007,0,0x0,8
tick,0x7ff86ea82704,24246227,0,0x0,8
tick,0x7ff86ea82704,24247989,0,0x0,8
tick,0x7ff86ea82704,24249967,0,0x0,8
tick,0x7ff86ea82704,24251973,0,0x0,8
tick,0x7ff86ea82704,24253998,0,0x0,8
tick,0x7ff86ea82704,24255977,0,0x0,8
tick,0x7ff86ea82704,24257985,0,0x0,8
tick,0x7ff86ea82704,24261813,0,0x0,8
tick,0x7ff86ea82704,24263168,0,0x0,8
tick,0x7ff86ea82704,24265154,0,0x0,8
tick,0x7ff86ea82704,24267073,0,0x0,8
tick,0x7ff86ea82704,24269202,0,0x0,8
tick,0x7ff86ea82704,24271215,0,0x0,8
tick,0x7ff86ea82704,24273152,0,0x0,8
tick,0x7ff86ea82704,24275150,0,0x0,8
tick,0x7ff86ea82704,24277222,0,0x0,8
tick,0x7ff86ea82704,24279036,0,0x0,8
tick,0x7ff86ea82704,24281116,0,0x0,8
tick,0x7ff86ea82704,24283089,0,0x0,8
tick,0x7ff86ea82704,24285028,0,0x0,8
tick,0x7ff86ea82704,24287153,0,0x0,8
tick,0x7ff86ea82704,24289015,0,0x0,8
tick,0x7ff86ea82704,24291089,0,0x0,8
tick,0x7ff86ea82704,24293142,0,0x0,8
tick,0x7ff86ea82704,24295081,0,0x0,8
tick,0x7ff86ea82704,24297072,0,0x0,8
tick,0x7ff86ea82704,24298993,0,0x0,8
tick,0x7ff86ea82704,24300856,0,0x0,8
tick,0x7ff86ea82704,24303041,0,0x0,8
tick,0x7ff86ea82704,24304946,0,0x0,8
tick,0x7ff86ea82704,24307033,0,0x0,8
tick,0x7ff86ea82704,24308941,0,0x0,8
tick,0x7ff86ea82704,24310947,0,0x0,8
tick,0x7ff86ea82704,24312978,0,0x0,8
tick,0x7ff86ea82704,24314966,0,0x0,8
tick,0x7ff86ea82704,24317052,0,0x0,8
tick,0x7ff86ea82704,24318978,0,0x0,8
tick,0x7ff86ea82704,24321013,0,0x0,8
tick,0x7ff86ea82704,24323010,0,0x0,8
tick,0x7ff86ea82704,24325142,0,0x0,8
tick,0x7ff86ea82704,24326883,0,0x0,8
tick,0x7ff86ea82704,24328964,0,0x0,8
tick,0x7ff86ea82704,24330888,0,0x0,8
tick,0x7ff86ea82704,24333035,0,0x0,8
tick,0x7ff86ea82704,24334899,0,0x0,8
tick,0x7ff86ea82704,24336994,0,0x0,8
tick,0x7ff86ea82704,24338926,0,0x0,8
tick,0x7ff86ea82704,24340919,0,0x0,8
tick,0x7ff86ea82704,24342858,0,0x0,8
tick,0x7ff86ea82704,24344960,0,0x0,8
tick,0x7ff86ea82704,24346877,0,0x0,8
tick,0x7ff86ea82704,24348965,0,0x0,8
tick,0x7ff86ea82704,24350983,0,0x0,8
tick,0x7ff86ea82704,24353003,0,0x0,8
tick,0x7ff86ea82704,24354771,0,0x0,8
tick,0x7ff86ea82704,24356882,0,0x0,8
tick,0x7ff86ea82704,24358733,0,0x0,8
tick,0x7ff86ea82704,24360974,0,0x0,8
tick,0x7ff86ea82704,24362736,0,0x0,8
tick,0x7ff86ea82704,24364867,0,0x0,8
tick,0x7ff86ea82704,24367041,0,0x0,8
tick,0x7ff86ea82704,24368757,0,0x0,8
tick,0x7ff86ea82704,24370811,0,0x0,8
tick,0x7ff86ea82704,24372747,0,0x0,8
tick,0x7ff86ea82704,24375009,0,0x0,8
tick,0x7ff86ea82704,24376756,0,0x0,8
tick,0x7ff86ea82704,24378887,0,0x0,8
tick,0x7ff86ea82704,24380827,0,0x0,8
tick,0x7ff86ea82704,24382845,0,0x0,8
tick,0x7ff86ea82704,24384901,0,0x0,8
tick,0x7ff86ea82704,24386834,0,0x0,8
tick,0x7ff86ea82704,24388806,0,0x0,8
tick,0x7ff86ea82704,24390863,0,0x0,8
tick,0x7ff86ea82704,24392752,0,0x0,8
tick,0x7ff86ea82704,24394905,0,0x0,8
tick,0x7ff86ea82704,24396728,0,0x0,8
tick,0x7ff86ea82704,24398893,0,0x0,8
tick,0x7ff86ea82704,24400820,0,0x0,8
tick,0x7ff86ea82704,24402744,0,0x0,8
tick,0x7ff86ea82704,24404762,0,0x0,8
tick,0x7ff86ea82704,24406975,0,0x0,8
tick,0x7ff86ea82704,24408601,0,0x0,8
tick,0x7ff86ea82704,24410835,0,0x0,8
tick,0x7ff86ea82704,24412667,0,0x0,8
tick,0x7ff86ea82704,24414890,0,0x0,8
tick,0x7ff86ea82704,24416727,0,0x0,8
tick,0x7ff86ea82704,24418871,0,0x0,8
tick,0x7ff86ea82704,24420627,0,0x0,8
tick,0x7ff86ea82704,24422765,0,0x0,8
tick,0x7ff86ea82704,24424725,0,0x0,8
tick,0x7ff86ea82704,24427107,0,0x0,8
tick,0x7ff86ea82704,24428972,0,0x0,8
tick,0x7ff86ea82704,24430769,0,0x0,8
tick,0x7ff86ea82704,24432588,0,0x0,8
tick,0x7ff86ea82704,24434757,0,0x0,8
tick,0x7ff86ea82704,24436625,0,0x0,8
tick,0x7ff86ea82704,24438777,0,0x0,8
tick,0x7ff86ea82704,24440664,0,0x0,8
tick,0x7ff86ea82704,24442658,0,0x0,8
tick,0x7ff86ea82704,24444572,0,0x0,8
tick,0x7ff86ea82704,24446686,0,0x0,8
tick,0x7ff86ea82704,24448541,0,0x0,8
tick,0x7ff86ea82704,24450614,0,0x0,8
tick,0x7ff86ea82704,24452719,0,0x0,8
tick,0x7ff86ea82704,24454653,0,0x0,8
tick,0x7ff86ea82704,24456566,0,0x0,8
tick,0x7ff86ea82704,24458685,0,0x0,8
tick,0x7ff86ea82704,24460705,0,0x0,8
tick,0x7ff86ea82704,24462682,0,0x0,8
tick,0x7ff86ea82704,24464519,0,0x0,8
tick,0x7ff86ea82704,24466563,0,0x0,8
tick,0x7ff86ea82704,24468587,0,0x0,8
tick,0x7ff86ea82704,24470518,0,0x0,8
tick,0x7ff86ea82704,24472552,0,0x0,8
tick,0x7ff86ea82704,24474494,0,0x0,8
tick,0x7ff86ea82704,24476554,0,0x0,8
tick,0x7ff86ea82704,24478521,0,0x0,8
tick,0x7ff86ea82704,24480627,0,0x0,8
tick,0x7ff86ea82704,24482610,0,0x0,8
tick,0x7ff86ea82704,24484440,0,0x0,8
tick,0x7ff86ea82704,24486573,0,0x0,8
tick,0x7ff86ea82704,24488471,0,0x0,8
tick,0x7ff86ea82704,24490486,0,0x0,8
tick,0x7ff86ea82704,24492571,0,0x0,8
tick,0x7ff86ea82704,24494507,0,0x0,8
tick,0x7ff86ea82704,24496435,0,0x0,8
tick,0x7ff86ea82704,24498488,0,0x0,8
tick,0x7ff86ea82704,24500468,0,0x0,8
tick,0x7ff86ea82704,24502638,0,0x0,8
tick,0x7ff86ea82704,24504529,0,0x0,8
tick,0x7ff86ea82704,24506465,0,0x0,8
tick,0x7ff86ea82704,24508465,0,0x0,8
tick,0x7ff86ea82704,24510404,0,0x0,8
tick,0x7ff86ea82704,24512376,0,0x0,8
tick,0x7ff86ea82704,24514421,0,0x0,8
tick,0x7ff86ea82704,24516377,0,0x0,8
tick,0x7ff86ea82704,24518528,0,0x0,8
tick,0x7ff86ea82704,24520401,0,0x0,8
tick,0x7ff86ea82704,24522506,0,0x0,8
tick,0x7ff86ea82704,24524787,0,0x0,8
tick,0x7ff86ea82704,24526467,0,0x0,8
tick,0x7ff86ea82704,24528461,0,0x0,8
tick,0x7ff86ea82704,24530462,0,0x0,8
tick,0x7ff86ea82704,24532400,0,0x0,8
tick,0x7ff86ea82704,24534494,0,0x0,8
tick,0x7ff86ea82704,24536759,0,0x0,8
tick,0x7ff86ea82704,24538341,0,0x0,8
tick,0x7ff86ea82704,24540416,0,0x0,8
tick,0x7ff86ea82704,24542477,0,0x0,8
tick,0x7ff86ea82704,24544378,0,0x0,8
tick,0x7ff86ea82704,24546386,0,0x0,8
tick,0x7ff86ea82704,24548414,0,0x0,8
tick,0x7ff86ea82704,24550323,0,0x0,8
tick,0x7ff86ea82704,24552368,0,0x0,8
tick,0x7ff86ea82704,24554330,0,0x0,8
tick,0x7ff86ea82704,24556268,0,0x0,8
tick,0x7ff86ea82704,24558367,0,0x0,8
tick,0x7ff86ea82704,24560374,0,0x0,8
tick,0x7ff86ea82704,24562258,0,0x0,8
tick,0x7ff86ea82704,24564336,0,0x0,8
tick,0x7ff86ea82704,24566402,0,0x0,8
tick,0x7ff86ea82704,24568303,0,0x0,8
tick,0x7ff86ea82704,24570281,0,0x0,8
tick,0x7ff86ea82704,24572392,0,0x0,8
tick,0x7ff86ea82704,24574241,0,0x0,8
tick,0x7ff86ea82704,24576277,0,0x0,8
tick,0x7ff86ea82704,24578318,0,0x0,8
tick,0x7ff86ea82704,24580287,0,0x0,8
tick,0x7ff86ea82704,24582419,0,0x0,8
tick,0x7ff86ea82704,24584231,0,0x0,8
tick,0x7ff86ea82704,24586145,0,0x0,8
tick,0x7ff86ea82704,24588206,0,0x0,8
tick,0x7ff86ea82704,24590297,0,0x0,8
tick,0x7ff86ea82704,24592174,0,0x0,8
tick,0x7ff86ea82704,24594234,0,0x0,8
tick,0x7ff86ea82704,24596186,0,0x0,8
tick,0x7ff86ea82704,24598190,0,0x0,8
tick,0x7ff86ea82704,24600183,0,0x0,8
tick,0x7ff86ea82704,24602199,0,0x0,8
tick,0x7ff86ea82704,24604095,0,0x0,8
tick,0x7ff86ea82704,24606289,0,0x0,8
tick,0x7ff86ea82704,24608352,0,0x0,8
tick,0x7ff86ea82704,24610235,0,0x0,8
tick,0x7ff86ea82704,24612110,0,0x0,8
tick,0x7ff86ea82704,24614206,0,0x0,8
tick,0x7ff86ea82704,24616295,0,0x0,8
tick,0x7ff86ea82704,24618431,0,0x0,8
tick,0x7ff86ea82704,24620164,0,0x0,8
tick,0x7ff86ea82704,24622296,0,0x0,8
tick,0x7ff86ea82704,24624195,0,0x0,8
tick,0x7ff86ea82704,24626332,0,0x0,8
tick,0x7ff86ea82704,24628382,0,0x0,8
tick,0x7ff86ea82704,24630503,0,0x0,8
tick,0x7ff86ea82704,24632135,0,0x0,8
tick,0x7ff86ea82704,24634322,0,0x0,8
tick,0x7ff86ea82704,24636241,0,0x0,8
tick,0x7ff86ea82704,24638400,0,0x0,8
tick,0x7ff86ea82704,24640110,0,0x0,8
tick,0x7ff86ea82704,24642191,0,0x0,8
tick,0x7ff86ea82704,24644205,0,0x0,8
tick,0x7ff86ea82704,24646067,0,0x0,8
tick,0x7ff86ea82704,24648311,0,0x0,8
tick,0x7ff86ea82704,24650078,0,0x0,8
tick,0x7ff86ea82704,24652317,0,0x0,8
tick,0x7ff86ea82704,24654160,0,0x0,8
tick,0x7ff86ea82704,24656462,0,0x0,8
tick,0x7ff86ea82704,24658024,0,0x0,8
tick,0x7ff86ea82704,24660134,0,0x0,8
tick,0x7ff86ea82704,24662228,0,0x0,8
tick,0x7ff86ea82704,24664079,0,0x0,8
tick,0x7ff86ea82704,24666067,0,0x0,8
tick,0x7ff86ea82704,24668152,0,0x0,8
tick,0x7ff86ea82704,24670056,0,0x0,8
tick,0x7ff86ea82704,24671962,0,0x0,8
tick,0x7ff86ea82704,24673975,0,0x0,8
tick,0x7ff86ea82704,24675998,0,0x0,8
tick,0x7ff86ea82704,24678027,0,0x0,8
tick,0x7ff86ea82704,24680115,0,0x0,8
tick,0x7ff86ea82704,24681972,0,0x0,8
tick,0x7ff86ea82704,24684011,0,0x0,8
tick,0x7ff86ea82704,24686025,0,0x0,8
tick,0x7ff86ea82704,24688086,0,0x0,8
tick,0x7ff86ea82704,24689976,0,0x0,8
tick,0x7ff86ea82704,24691936,0,0x0,8
tick,0x7ff86ea82704,24694056,0,0x0,8
tick,0x7ff86ea82704,24696016,0,0x0,8
tick,0x7ff86ea82704,24697882,0,0x0,8
tick,0x7ff86ea82704,24700015,0,0x0,8
tick,0x7ff86ea82704,24701858,0,0x0,8
tick,0x7ff86ea82704,24704044,0,0x0,8
tick,0x7ff86ea82704,24706006,0,0x0,8
tick,0x7ff86ea82704,24708051,0,0x0,8
tick,0x7ff86ea82704,24709934,0,0x0,8
tick,0x7ff86ea82704,24711974,0,0x0,8
tick,0x7ff86ea82704,24713897,0,0x0,8
tick,0x7ff86ea82704,24715998,0,0x0,8
tick,0x7ff86ea82704,24717909,0,0x0,8
tick,0x7ff86ea82704,24719947,0,0x0,8
tick,0x7ff86ea82704,24721913,0,0x0,8
tick,0x7ff86ea82704,24723952,0,0x0,8
tick,0x7ff86ea82704,24725927,0,0x0,8
tick,0x7ff86ea82704,24727963,0,0x0,8
tick,0x7ff86ea82704,24729918,0,0x0,8
tick,0x7ff86ea82704,24731847,0,0x0,8
tick,0x7ff86ea82704,24733957,0,0x0,8
tick,0x7ff86ea82704,24735797,0,0x0,8
tick,0x7ff86ea82704,24737872,0,0x0,8
tick,0x7ff86ea82704,24740159,0,0x0,8
tick,0x7ff86ea82704,24742051,0,0x0,8
tick,0x7ff86ea82704,24743786,0,0x0,8
tick,0x7ff86ea82704,24745843,0,0x0,8
tick,0x7ff86ea82704,24747850,0,0x0,8
tick,0x7ff86ea82704,24749855,0,0x0,8
tick,0x7ff86ea82704,24751854,0,0x0,8
tick,0x7ff86ea82704,24753784,0,0x0,8
tick,0x7ff86ea82704,24756003,0,0x0,8
tick,0x7ff86ea82704,24757941,0,0x0,8
tick,0x7ff86ea82704,24759780,0,0x0,8
tick,0x7ff86ea82704,24761757,0,0x0,8
tick,0x7ff86ea82704,24763823,0,0x0,8
tick,0x7ff86ea82704,24765687,0,0x0,8
tick,0x7ff86ea82704,24767857,0,0x0,8
tick,0x7ff86ea82704,24769622,0,0x0,8
tick,0x7ff86ea82704,24771917,0,0x0,8
tick,0x7ff86ea82704,24773762,0,0x0,8
tick,0x7ff86ea82704,24775999,0,0x0,8
tick,0x7ff86ea82704,24777683,0,0x0,8
tick,0x7ff86ea82704,24779843,0,0x0,8
tick,0x7ff86ea82704,24781736,0,0x0,8
tick,0x7ff86ea82704,24783774,0,0x0,8
tick,0x7ff86ea82704,24785645,0,0x0,8
tick,0x7ff86ea82704,24787772,0,0x0,8
tick,0x7ff86ea82704,24789658,0,0x0,8
tick,0x7ff86ea82704,24791981,0,0x0,8
tick,0x7ff86ea82704,24793703,0,0x0,8
tick,0x7ff86ea82704,24795750,0,0x0,8
tick,0x7ff86ea82704,24797656,0,0x0,8
tick,0x7ff86ea82704,24799682,0,0x0,8
tick,0x7ff86ea82704,24801448,0,0x0,8
tick,0x7ff86ea82704,24803492,0,0x0,8
tick,0x7ff86ea82704,24805420,0,0x0,8
tick,0x7ff86ea82704,24807474,0,0x0,8
tick,0x7ff86ea82704,24809419,0,0x0,8
tick,0x7ff86ea82704,24811539,0,0x0,8
tick,0x7ff86ea82704,24813445,0,0x0,8
tick,0x7ff86ea82704,24815397,0,0x0,8
tick,0x7ff86ea82704,24817450,0,0x0,8
tick,0x7ff86ea82704,24819728,0,0x0,8
tick,0x7ff86ea82704,24821528,0,0x0,8
tick,0x7ff86ea82704,24823835,0,0x0,8
tick,0x7ff86ea82704,24825572,0,0x0,8
tick,0x7ff86ea82704,24827689,0,0x0,8
tick,0x7ff86ea82704,24829587,0,0x0,8
tick,0x7ff86ea82704,24831482,0,0x0,8
tick,0x7ff86ea82704,24833541,0,0x0,8
tick,0x7ff86ea82704,24835593,0,0x0,8
tick,0x7ff86ea82704,24837494,0,0x0,8
tick,0x7ff86ea82704,24839559,0,0x0,8
tick,0x7ff86ea82704,24841539,0,0x0,8
tick,0x7ff86ea82704,24843475,0,0x0,8
tick,0x7ff86ea82704,24845451,0,0x0,8
tick,0x7ff86ea82704,24847426,0,0x0,8
tick,0x7ff86ea82704,24849423,0,0x0,8
tick,0x7ff86ea82704,24851543,0,0x0,8
tick,0x7ff86ea82704,24853489,0,0x0,8
tick,0x7ff86ea82704,24855484,0,0x0,8
tick,0x7ff86ea82704,24857710,0,0x0,8
tick,0x7ff86ea82704,24859812,0,0x0,8
tick,0x7ff86ea82704,24861493,0,0x0,8
tick,0x7ff86ea82704,24863462,0,0x0,8
tick,0x7ff86ea82704,24865337,0,0x0,8
tick,0x7ff86ea82704,24867474,0,0x0,8
tick,0x7ff86ea82704,24869369,0,0x0,8
tick,0x7ff86ea82704,24871418,0,0x0,8
tick,0x7ff86ea82704,24873707,0,0x0,8
tick,0x7ff86ea82704,24875444,0,0x0,8
tick,0x7ff86ea82704,24877579,0,0x0,8
tick,0x7ff86ea82704,24879423,0,0x0,8
tick,0x7ff86ea82704,24881319,0,0x0,8
tick,0x7ff86ea82704,24883339,0,0x0,8
tick,0x7ff86ea82704,24885419,0,0x0,8
tick,0x7ff86ea82704,24887312,0,0x0,8
tick,0x7ff86ea82704,24889749,0,0x0,8
tick,0x7ff86ea82704,24891681,0,0x0,8
tick,0x7ff86ea82704,24893364,0,0x0,8
tick,0x7ff86ea82704,24895391,0,0x0,8
tick,0x7ff86ea82704,24897258,0,0x0,8
tick,0x7ff86ea82704,24899353,0,0x0,8
tick,0x7ff86ea82704,24901325,0,0x0,8
tick,0x7ff86ea82704,24903367,0,0x0,8
tick,0x7ff86ea82704,24905275,0,0x0,8
tick,0x7ff86ea82704,24907532,0,0x0,8
tick,0x7ff86ea82704,24909287,0,0x0,8
tick,0x7ff86ea82704,24911414,0,0x0,8
tick,0x7ff86ea82704,24913366,0,0x0,8
tick,0x7ff86ea82704,24915276,0,0x0,8
tick,0x7ff86ea82704,24917282,0,0x0,8
tick,0x7ff86ea82704,24919194,0,0x0,8
tick,0x7ff86ea82704,24921361,0,0x0,8
tick,0x7ff86ea82704,24923612,0,0x0,8
tick,0x7ff86ea82704,24925371,0,0x0,8
tick,0x7ff86ea82704,24927272,0,0x0,8
tick,0x7ff86ea82704,24929381,0,0x0,8
tick,0x7ff86ea82704,24931326,0,0x0,8
tick,0x7ff86ea82704,24933270,0,0x0,8
tick,0x7ff86ea82704,24935143,0,0x0,8
tick,0x7ff86ea82704,24937430,0,0x0,8
tick,0x7ff86ea82704,24939569,0,0x0,8
tick,0x7ff86ea82704,24941265,0,0x0,8
tick,0x7ff86ea82704,24943334,0,0x0,8
tick,0x7ff86ea82704,24945486,0,0x0,8
tick,0x7ff86ea82704,24947374,0,0x0,8
tick,0x7ff86ea82704,24949225,0,0x0,8
tick,0x7ff86ea82704,24951177,0,0x0,8
tick,0x7ff86ea82704,24953099,0,0x0,8
tick,0x7ff86ea82704,24955182,0,0x0,8
tick,0x7ff86ea82704,24957267,0,0x0,8
tick,0x7ff86ea82704,24959134,0,0x0,8
tick,0x7ff86ea82704,24961137,0,0x0,8
tick,0x7ff86ea82704,24963060,0,0x0,8
tick,0x7ff86ea82704,24965190,0,0x0,8
tick,0x7ff86ea82704,24967217,0,0x0,8
tick,0x7ff86ea82704,24969151,0,0x0,8
tick,0x7ff86ea82704,24971152,0,0x0,8
tick,0x7ff86ea82704,24973248,0,0x0,8
tick,0x7ff86ea82704,24975108,0,0x0,8
tick,0x7ff86ea82704,24977247,0,0x0,8
tick,0x7ff86ea82704,24979045,0,0x0,8
tick,0x7ff86ea82704,24981098,0,0x0,8
tick,0x7ff86ea82704,24983136,0,0x0,8
tick,0x7ff86ea82704,24985107,0,0x0,8
tick,0x7ff86ea82704,24987018,0,0x0,8
tick,0x7ff86ea82704,24989207,0,0x0,8
tick,0x7ff86ea82704,24991102,0,0x0,8
tick,0x7ff86ea82704,24993006,0,0x0,8
tick,0x7ff86ea82704,24995087,0,0x0,8
tick,0x7ff86ea82704,24997062,0,0x0,8
tick,0x7ff86ea82704,24999297,0,0x0,8
tick,0x7ff86ea82704,25000981,0,0x0,8
tick,0x7ff86ea82704,25003028,0,0x0,8
tick,0x7ff86ea82704,25004994,0,0x0,8
tick,0x7ff86ea82704,25007348,0,0x0,8
tick,0x7ff86ea82704,25009034,0,0x0,8
tick,0x7ff86ea82704,25011063,0,0x0,8
tick,0x7ff86ea82704,25012961,0,0x0,8
tick,0x7ff86ea82704,25015143,0,0x0,8
tick,0x7ff86ea82704,25016984,0,0x0,8
tick,0x7ff86ea82704,25019037,0,0x0,8
tick,0x7ff86ea82704,25021035,0,0x0,8
tick,0x7ff86ea82704,25023171,0,0x0,8
tick,0x7ff86ea82704,25025051,0,0x0,8
tick,0x7ff86ea82704,25026964,0,0x0,8
tick,0x7ff86ea82704,25029004,0,0x0,8
tick,0x7ff86ea82704,25031032,0,0x0,8
tick,0x7ff86ea82704,25033055,0,0x0,8
tick,0x7ff86ea82704,25034906,0,0x0,8
tick,0x7ff86ea82704,25036994,0,0x0,8
tick,0x7ff86ea82704,25038858,0,0x0,8
tick,0x7ff86ea82704,25040954,0,0x0,8
tick,0x7ff86ea82704,25042824,0,0x0,8
tick,0x7ff86ea82704,25044951,0,0x0,8
tick,0x7ff86ea82704,25046911,0,0x0,8
tick,0x7ff86ea82704,25048968,0,0x0,8
tick,0x7ff86ea82704,25050814,0,0x0,8
tick,0x7ff86ea82704,25052911,0,0x0,8
tick,0x7ff86ea82704,25054918,0,0x0,8
tick,0x7ff86ea82704,25057036,0,0x0,8
tick,0x7ff86ea82704,25058978,0,0x0,8
tick,0x7ff86ea82704,25060912,0,0x0,8
tick,0x7ff86ea82704,25062936,0,0x0,8
tick,0x7ff86ea82704,25064814,0,0x0,8
tick,0x7ff86ea82704,25067071,0,0x0,8
tick,0x7ff86ea82704,25068882,0,0x0,8
tick,0x7ff86ea82704,25070930,0,0x0,8
tick,0x7ff86ea82704,25072878,0,0x0,8
tick,0x7ff86ea82704,25074950,0,0x0,8
tick,0x7ff86ea82704,25076779,0,0x0,8
tick,0x7ff86ea82704,25078889,0,0x0,8
tick,0x7ff86ea82704,25080772,0,0x0,8
tick,0x7ff86ea82704,25082851,0,0x0,8
tick,0x7ff86ea82704,25084838,0,0x0,8
tick,0x7ff86ea82704,25086797,0,0x0,8
tick,0x7ff86ea82704,25088860,0,0x0,8
tick,0x7ff86ea82704,25091041,0,0x0,8
tick,0x7ff86ea82704,25092811,0,0x0,8
tick,0x7ff86ea82704,25094864,0,0x0,8
tick,0x7ff86ea82704,25096840,0,0x0,8
tick,0x7ff86ea82704,25098864,0,0x0,8
tick,0x7ff86ea82704,25100861,0,0x0,8
tick,0x7ff86ea82704,25102962,0,0x0,8
tick,0x7ff86ea82704,25104833,0,0x0,8
tick,0x7ff86ea82704,25106758,0,0x0,8
tick,0x7ff86ea82704,25112040,0,0x0,8
tick,0x7ff86ea82704,25112526,0,0x0,8
tick,0x7ff86ea82704,25114103,0,0x0,8
tick,0x7ff86ea82704,25115905,0,0x0,8
tick,0x7ff86ea82704,25117935,0,0x0,8
tick,0x7ff86ea82704,25119862,0,0x0,8
tick,0x7ff86ea82704,25121999,0,0x0,8
tick,0x7ff86ea82704,25125188,0,0x0,8
tick,0x7ff86ea82704,25126255,0,0x0,8
tick,0x7ff86ea82704,25127908,0,0x0,8
tick,0x7ff86ea82704,25130046,0,0x0,8
tick,0x7ff86ea82704,25131912,0,0x0,8
tick,0x7ff86ea82704,25134207,0,0x0,8
tick,0x7ff86ea82704,25136362,0,0x0,8
tick,0x7ff86ea82704,25137891,0,0x0,8
tick,0x7ff86ea82704,25141090,0,0x0,8
tick,0x7ff86ea82704,25142958,0,0x0,8
tick,0x7ff86ea82704,25143702,0,0x0,8
tick,0x7ff86ea82704,25145647,0,0x0,8
tick,0x7ff86ea82704,25147649,0,0x0,8
tick,0x7ff86ea82704,25150032,0,0x0,8
tick,0x7ff86ea82704,25152081,0,0x0,8
tick,0x7ff86ea82704,25153744,0,0x0,8
tick,0x7ff86ea82704,25155664,0,0x0,8
tick,0x7ff86ea82704,25158516,0,0x0,8
tick,0x7ff86ea82704,25159560,0,0x0,8
tick,0x7ff86ea82704,25161962,0,0x0,8
tick,0x7ff86ea82704,25163676,0,0x0,8
tick,0x7ff86ea82704,25165676,0,0x0,8
tick,0x7ff86ea82704,25167620,0,0x0,8
tick,0x7ff86ea82704,25169632,0,0x0,8
tick,0x7ff86ea82704,25171645,0,0x0,8
tick,0x7ff86ea82704,25174190,0,0x0,8
tick,0x7ff86ea82704,25175926,0,0x0,8
tick,0x7ff86ea82704,25178128,0,0x0,8
tick,0x7ff86ea82704,25179799,0,0x0,8
tick,0x7ff86ea82704,25181921,0,0x0,8
tick,0x7ff86ea82704,25183691,0,0x0,8
tick,0x7ff86ea82704,25185790,0,0x0,8
tick,0x7ff86ea82704,25187546,0,0x0,8
tick,0x7ff86ea82704,25190123,0,0x0,8
tick,0x7ff86ea82704,25191597,0,0x0,8
tick,0x7ff86ea82704,25193764,0,0x0,8
tick,0x7ff86ea82704,25195506,0,0x0,8
tick,0x7ff86ea82704,25197626,0,0x0,8
tick,0x7ff86ea82704,25199520,0,0x0,8
tick,0x7ff86ea82704,25201655,0,0x0,8
tick,0x7ff86ea82704,25203693,0,0x0,8
tick,0x7ff86ea82704,25205605,0,0x0,8
tick,0x7ff86ea82704,25208009,0,0x0,8
tick,0x7ff86ea82704,25209757,0,0x0,8
tick,0x7ff86ea82704,25211716,0,0x0,8
tick,0x7ff86ea82704,25213495,0,0x0,8
tick,0x7ff86ea82704,25215476,0,0x0,8
tick,0x7ff86ea82704,25217531,0,0x0,8
tick,0x7ff86ea82704,25219519,0,0x0,8
tick,0x7ff86ea82704,25221454,0,0x0,8
tick,0x7ff86ea82704,25223576,0,0x0,8
tick,0x7ff86ea82704,25225538,0,0x0,8
tick,0x7ff86ea82704,25227543,0,0x0,8
tick,0x7ff86ea82704,25229666,0,0x0,8
tick,0x7ff86ea82704,25231480,0,0x0,8
tick,0x7ff86ea82704,25233762,0,0x0,8
tick,0x7ff86ea82704,25235464,0,0x0,8
tick,0x7ff86ea82704,25237479,0,0x0,8
tick,0x7ff86ea82704,25239674,0,0x0,8
tick,0x7ff86ea82704,25241552,0,0x0,8
tick,0x7ff86ea82704,25243590,0,0x0,8
tick,0x7ff86ea82704,25245560,0,0x0,8
tick,0x7ff86ea82704,25247375,0,0x0,8
tick,0x7ff86ea82704,25249428,0,0x0,8
tick,0x7ff86ea82704,25251588,0,0x0,8
tick,0x7ff86ea82704,25253352,0,0x0,8
tick,0x7ff86ea82704,25255420,0,0x0,8
tick,0x7ff86ea82704,25257521,0,0x0,8
tick,0x7ff86ea82704,25259839,0,0x0,8
tick,0x7ff86ea82704,25261408,0,0x0,8
tick,0x7ff86ea82704,25263456,0,0x0,8
tick,0x7ff86ea82704,25265587,0,0x0,8
tick,0x7ff86ea82704,25267278,0,0x0,8
tick,0x7ff86ea82704,25269485,0,0x0,8
tick,0x7ff86ea82704,25271330,0,0x0,8
tick,0x7ff86ea82704,25273542,0,0x0,8
tick,0x7ff86ea82704,25275589,0,0x0,8
tick,0x7ff86ea82704,25277439,0,0x0,8
tick,0x7ff86ea82704,25279317,0,0x0,8
tick,0x7ff86ea82704,25281286,0,0x0,8
tick,0x7ff86ea82704,25283230,0,0x0,8
tick,0x7ff86ea82704,25285276,0,0x0,8
tick,0x7ff86ea82704,25287170,0,0x0,8
tick,0x7ff86ea82704,25289387,0,0x0,8
tick,0x7ff86ea82704,25291617,0,0x0,8
tick,0x7ff86ea82704,25293379,0,0x0,8
tick,0x7ff86ea82704,25295319,0,0x0,8
tick,0x7ff86ea82704,25297213,0,0x0,8
tick,0x7ff86ea82704,25299399,0,0x0,8
tick,0x7ff86ea82704,25301271,0,0x0,8
tick,0x7ff86ea82704,25303257,0,0x0,8
tick,0x7ff86ea82704,25305387,0,0x0,8
tick,0x7ff86ea82704,25307258,0,0x0,8
tick,0x7ff86ea82704,25309227,0,0x0,8
tick,0x7ff86ea82704,25311346,0,0x0,8
tick,0x7ff86ea82704,25313302,0,0x0,8
tick,0x7ff86ea82704,25315297,0,0x0,8
tick,0x7ff86ea82704,25317229,0,0x0,8
tick,0x7ff86ea82704,25319324,0,0x0,8
tick,0x7ff86ea82704,25321383,0,0x0,8
tick,0x7ff86ea82704,25324050,0,0x0,8
tick,0x7ff86ea82704,25326376,0,0x0,8
tick,0x7ff86ea82704,25328268,0,0x0,8
tick,0x7ff86ea82704,25330294,0,0x0,8
tick,0x7ff86ea82704,25332251,0,0x0,8
tick,0x7ff86ea82704,25334261,0,0x0,8
tick,0x7ff86ea82704,25336315,0,0x0,8
tick,0x7ff86ea82704,25338228,0,0x0,8
tick,0x7ff86ea82704,25340566,0,0x0,8
tick,0x7ff86ea82704,25342150,0,0x0,8
tick,0x7ff86ea82704,25344479,0,0x0,8
tick,0x7ff86ea82704,25346229,0,0x0,8
tick,0x7ff86ea82704,25348329,0,0x0,8
tick,0x7ff86ea82704,25350462,0,0x0,8
tick,0x7ff86ea82704,25352216,0,0x0,8
tick,0x7ff86ea82704,25354297,0,0x0,8
tick,0x7ff86ea82704,25356567,0,0x0,8
tick,0x7ff86ea82704,25358178,0,0x0,8
tick,0x7ff86ea82704,25360261,0,0x0,8
tick,0x7ff86ea82704,25362191,0,0x0,8
tick,0x7ff86ea82704,25364218,0,0x0,8
tick,0x7ff86ea82704,25366139,0,0x0,8
tick,0x7ff86ea82704,25368166,0,0x0,8
tick,0x7ff86ea82704,25370177,0,0x0,8
tick,0x7ff86ea82704,25372247,0,0x0,8
tick,0x7ff86ea82704,25374366,0,0x0,8
tick,0x7ff86ea82704,25376317,0,0x0,8
tick,0x7ff86ea82704,25378222,0,0x0,8
tick,0x7ff86ea82704,25380203,0,0x0,8
tick,0x7ff86ea82704,25382029,0,0x0,8
tick,0x7ff86ea82704,25384192,0,0x0,8
tick,0x7ff86ea82704,25386060,0,0x0,8
tick,0x7ff86ea82704,25388241,0,0x0,8
tick,0x7ff86ea82704,25390343,0,0x0,8
tick,0x7ff86ea82704,25392283,0,0x0,8
tick,0x7ff86ea82704,25394233,0,0x0,8
tick,0x7ff86ea82704,25396202,0,0x0,8
tick,0x7ff86ea82704,25398016,0,0x0,8
tick,0x7ff86ea82704,25400044,0,0x0,8
tick,0x7ff86ea82704,25401967,0,0x0,8
tick,0x7ff86ea82704,25404160,0,0x0,8
tick,0x7ff86ea82704,25406102,0,0x0,8
tick,0x7ff86ea82704,25408193,0,0x0,8
tick,0x7ff86ea82704,25410153,0,0x0,8
tick,0x7ff86ea82704,25412100,0,0x0,8
tick,0x7ff86ea82704,25413896,0,0x0,8
tick,0x7ff86ea82704,25416130,0,0x0,8
tick,0x7ff86ea82704,25417974,0,0x0,8
tick,0x7ff86ea82704,25420120,0,0x0,8
tick,0x7ff86ea82704,25422031,0,0x0,8
tick,0x7ff86ea82704,25424354,0,0x0,8
tick,0x7ff86ea82704,25425881,0,0x0,8
tick,0x7ff86ea82704,25428107,0,0x0,8
tick,0x7ff86ea82704,25429860,0,0x0,8
tick,0x7ff86ea82704,25431890,0,0x0,8
tick,0x7ff86ea82704,25434098,0,0x0,8
tick,0x7ff86ea82704,25436118,0,0x0,8
tick,0x7ff86ea82704,25438111,0,0x0,8
tick,0x7ff86ea82704,25440535,0,0x0,8
tick,0x7ff86ea82704,25442498,0,0x0,8
tick,0x7ff86ea82704,25444773,0,0x0,8
tick,0x7ff86ea82704,25445982,0,0x0,8
tick,0x7ff86ea82704,25447856,0,0x0,8
tick,0x7ff86ea82704,25449831,0,0x0,8
tick,0x7ff86ea82704,25451894,0,0x0,8
tick,0x7ff86ea82704,25453915,0,0x0,8
tick,0x7ff86ea82704,25456594,0,0x0,8
tick,0x7ff86ea82704,25458016,0,0x0,8
tick,0x7ff86ea82704,25459852,0,0x0,8
tick,0x7ff86ea82704,25462227,0,0x0,8
tick,0x7ff86ea82704,25464345,0,0x0,8
tick,0x7ff86ea82704,25465903,0,0x0,8
tick,0x7ff86ea82704,25468246,0,0x0,8
tick,0x7ff86ea82704,25469844,0,0x0,8
tick,0x7ff86ea82704,25474957,0,0x0,8
tick,0x7ff86ea82704,25475964,0,0x0,8
tick,0x7ff86ea82704,25478379,0,0x0,8
tick,0x7ff86ea82704,25479817,0,0x0,8
tick,0x7ff86ea82704,25481830,0,0x0,8
tick,0x7ff86ea82704,25483812,0,0x0,8
tick,0x7ff86ea82704,25485773,0,0x0,8
tick,0x7ff86ea82704,25487760,0,0x0,8
tick,0x7ff86ea82704,25490042,0,0x0,8
tick,0x7ff86ea82704,25491928,0,0x0,8
tick,0x7ff86ea82704,25493748,0,0x0,8
tick,0x7ff86ea82704,25495749,0,0x0,8
tick,0x7ff86ea82704,25497797,0,0x0,8
tick,0x7ff86ea82704,25499751,0,0x0,8
tick,0x7ff86ea82704,25501731,0,0x0,8
tick,0x7ff86ea82704,25503877,0,0x0,8
tick,0x7ff86ea82704,25505712,0,0x0,8
tick,0x7ff86ea82704,25508678,0,0x0,8
tick,0x7ff86ea82704,25509861,0,0x0,8
tick,0x7ff86ea82704,25511730,0,0x0,8
tick,0x7ff86ea82704,25513979,0,0x0,8
tick,0x7ff86ea82704,25516055,0,0x0,8
tick,0x7ff86ea82704,25517866,0,0x0,8
tick,0x7ff86ea82704,25520218,0,0x0,8
tick,0x7ff86ea82704,25521757,0,0x0,8
tick,0x7ff86ea82704,25525267,0,0x0,8
tick,0x7ff86ea82704,25525920,0,0x0,8
tick,0x7ff86ea82704,25527857,0,0x0,8
tick,0x7ff86ea82704,25529765,0,0x0,8
tick,0x7ff86ea82704,25532018,0,0x0,8
tick,0x7ff86ea82704,25533863,0,0x0,8
tick,0x7ff86ea82704,25535899,0,0x0,8
tick,0x7ff86ea82704,25537709,0,0x0,8
tick,0x7ff86ea82704,25540287,0,0x0,8
tick,0x7ff86ea82704,25541805,0,0x0,8
tick,0x7ff86ea82704,25543671,0,0x0,8
tick,0x7ff86ea82704,25545663,0,0x0,8
tick,0x7ff86ea82704,25547821,0,0x0,8
tick,0x7ff86ea82704,25549686,0,0x0,8
tick,0x7ff86ea82704,25551666,0,0x0,8
tick,0x7ff86ea82704,25553780,0,0x0,8
tick,0x7ff86ea82704,25555979,0,0x0,8
tick,0x7ff86ea82704,25557901,0,0x0,8
tick,0x7ff86ea82704,25559701,0,0x0,8
tick,0x7ff86ea82704,25561618,0,0x0,8
tick,0x7ff86ea82704,25563624,0,0x0,8
tick,0x7ff86ea82704,25565573,0,0x0,8
tick,0x7ff86ea82704,25567676,0,0x0,8
tick,0x7ff86ea82704,25569596,0,0x0,8
tick,0x7ff86ea82704,25571541,0,0x0,8
tick,0x7ff86ea82704,25573672,0,0x0,8
tick,0x7ff86ea82704,25575765,0,0x0,8
tick,0x7ff86ea82704,25577607,0,0x0,8
tick,0x7ff86ea82704,25579669,0,0x0,8
tick,0x7ff86ea82704,25581507,0,0x0,8
tick,0x7ff86ea82704,25583649,0,0x0,8
tick,0x7ff86ea82704,25585499,0,0x0,8
tick,0x7ff86ea82704,25587642,0,0x0,8
tick,0x7ff86ea82704,25589889,0,0x0,8
tick,0x7ff86ea82704,25592048,0,0x0,8
tick,0x7ff86ea82704,25593490,0,0x0,8
tick,0x7ff86ea82704,25595399,0,0x0,8
tick,0x7ff86ea82704,25597420,0,0x0,8
tick,0x7ff86ea82704,25599340,0,0x0,8
tick,0x7ff86ea82704,25601550,0,0x0,8
tick,0x7ff86ea82704,25603554,0,0x0,8
tick,0x7ff86ea82704,25605534,0,0x0,8
tick,0x7ff86ea82704,25607739,0,0x0,8
tick,0x7ff86ea82704,25609796,0,0x0,8
tick,0x7ff86ea82704,25611681,0,0x0,8
tick,0x7ff86ea82704,25613481,0,0x0,8
tick,0x7ff86ea82704,25615512,0,0x0,8
tick,0x7ff86ea82704,25617530,0,0x0,8
tick,0x7ff86ea82704,25619438,0,0x0,8
tick,0x7ff86ea82704,25621689,0,0x0,8
tick,0x7ff86ea82704,25623808,0,0x0,8
tick,0x7ff86ea82704,25625777,0,0x0,8
tick,0x7ff86ea82704,25627443,0,0x0,8
tick,0x7ff86ea82704,25629541,0,0x0,8
tick,0x7ff86ea82704,25631490,0,0x0,8
tick,0x7ff86ea82704,25633464,0,0x0,8
tick,0x7ff86ea82704,25635503,0,0x0,8
tick,0x7ff86ea82704,25637453,0,0x0,8
tick,0x7ff86ea82704,25639879,0,0x0,8
tick,0x7ff86ea82704,25641459,0,0x0,8
tick,0x7ff86ea82704,25643459,0,0x0,8
tick,0x7ff86ea82704,25645421,0,0x0,8
tick,0x7ff86ea82704,25647421,0,0x0,8
tick,0x7ff86ea82704,25649480,0,0x0,8
tick,0x7ff86ea82704,25651688,0,0x0,8
tick,0x7ff86ea82704,25653426,0,0x0,8
tick,0x7ff86ea82704,25655577,0,0x0,8
tick,0x7ff86ea82704,25657776,0,0x0,8
tick,0x7ff86ea82704,25659552,0,0x0,8
tick,0x7ff86ea82704,25661867,0,0x0,8
tick,0x7ff86ea82704,25663468,0,0x0,8
tick,0x7ff86ea82704,25665479,0,0x0,8
tick,0x7ff86ea82704,25667321,0,0x0,8
tick,0x7ff86ea82704,25669448,0,0x0,8
tick,0x7ff86ea82704,25671376,0,0x0,8
tick,0x7ff86ea82704,25674075,0,0x0,8
tick,0x7ff86ea82704,25676319,0,0x0,8
tick,0x7ff86ea82704,25678286,0,0x0,8
tick,0x7ff86ea82704,25680264,0,0x0,8
tick,0x7ff86ea82704,25682230,0,0x0,8
tick,0x7ff86ea82704,25684221,0,0x0,8
tick,0x7ff86ea82704,25686166,0,0x0,8
tick,0x7ff86ea82704,25688272,0,0x0,8
tick,0x7ff86ea82704,25690356,0,0x0,8
tick,0x7ff86ea82704,25692262,0,0x0,8
tick,0x7ff86ea82704,25694203,0,0x0,8
tick,0x7ff86ea82704,25696356,0,0x0,8
tick,0x7ff86ea82704,25698102,0,0x0,8
tick,0x7ff86ea82704,25700139,0,0x0,8
tick,0x7ff86ea82704,25702163,0,0x0,8
tick,0x7ff86ea82704,25704311,0,0x0,8
tick,0x7ff86ea82704,25706388,0,0x0,8
tick,0x7ff86ea82704,25708228,0,0x0,8
tick,0x7ff86ea82704,25710123,0,0x0,8
tick,0x7ff86ea82704,25712156,0,0x0,8
tick,0x7ff86ea82704,25714076,0,0x0,8
tick,0x7ff86ea82704,25716164,0,0x0,8
tick,0x7ff86ea82704,25718057,0,0x0,8
tick,0x7ff86ea82704,25720113,0,0x0,8
tick,0x7ff86ea82704,25722070,0,0x0,8
tick,0x7ff86ea82704,25724191,0,0x0,8
tick,0x7ff86ea82704,25726214,0,0x0,8
tick,0x7ff86ea82704,25728188,0,0x0,8
tick,0x7ff86ea82704,25730200,0,0x0,8
tick,0x7ff86ea82704,25732095,0,0x0,8
tick,0x7ff86ea82704,25734047,0,0x0,8
tick,0x7ff86ea82704,25736012,0,0x0,8
tick,0x7ff86ea82704,25738047,0,0x0,8
tick,0x7ff86ea82704,25740063,0,0x0,8
tick,0x7ff86ea82704,25742205,0,0x0,8
tick,0x7ff86ea82704,25744036,0,0x0,8
tick,0x7ff86ea82704,25746091,0,0x0,8
tick,0x7ff86ea82704,25748075,0,0x0,8
tick,0x7ff86ea82704,25750007,0,0x0,8
tick,0x7ff86ea82704,25751991,0,0x0,8
tick,0x7ff86ea82704,25754129,0,0x0,8
tick,0x7ff86ea82704,25756151,0,0x0,8
tick,0x7ff86ea82704,25758174,0,0x0,8
tick,0x7ff86ea82704,25760132,0,0x0,8
tick,0x7ff86ea82704,25761995,0,0x0,8
tick,0x7ff86ea82704,25763941,0,0x0,8
tick,0x7ff86ea82704,25766011,0,0x0,8
tick,0x7ff86ea82704,25767998,0,0x0,8
tick,0x7ff86ea82704,25769985,0,0x0,8
tick,0x7ff86ea82704,25771902,0,0x0,8
tick,0x7ff86ea82704,25774028,0,0x0,8
tick,0x7ff86ea82704,25775947,0,0x0,8
tick,0x7ff86ea82704,25777981,0,0x0,8
tick,0x7ff86ea82704,25779882,0,0x0,8
tick,0x7ff86ea82704,25781998,0,0x0,8
tick,0x7ff86ea82704,25783883,0,0x0,8
tick,0x7ff86ea82704,25786072,0,0x0,8
tick,0x7ff86ea82704,25788105,0,0x0,8
tick,0x7ff86ea82704,25790075,0,0x0,8
tick,0x7ff86ea82704,25791885,0,0x0,8
tick,0x7ff86ea82704,25793979,0,0x0,8
tick,0x7ff86ea82704,25795985,0,0x0,8
tick,0x7ff86ea82704,25797912,0,0x0,8
tick,0x7ff86ea82704,25799934,0,0x0,8
tick,0x7ff86ea82704,25802026,0,0x0,8
tick,0x7ff86ea82704,25804050,0,0x0,8
tick,0x7ff86ea82704,25806292,0,0x0,8
tick,0x7ff86ea82704,25807954,0,0x0,8
tick,0x7ff86ea82704,25809912,0,0x0,8
tick,0x7ff86ea82704,25811897,0,0x0,8
tick,0x7ff86ea82704,25813846,0,0x0,8
tick,0x7ff86ea82704,25815977,0,0x0,8
tick,0x7ff86ea82704,25817844,0,0x0,8
tick,0x7ff86ea82704,25819901,0,0x0,8
tick,0x7ff86ea82704,25821907,0,0x0,8
tick,0x7ff86ea82704,25823918,0,0x0,8
tick,0x7ff86ea82704,25825848,0,0x0,8
tick,0x7ff86ea82704,25827846,0,0x0,8
tick,0x7ff86ea82704,25829839,0,0x0,8
tick,0x7ff86ea82704,25831809,0,0x0,8
tick,0x7ff86ea82704,25833751,0,0x0,8
tick,0x7ff86ea82704,25836221,0,0x0,8
tick,0x7ff86ea82704,25837758,0,0x0,8
tick,0x7ff86ea82704,25839957,0,0x0,8
tick,0x7ff86ea82704,25841756,0,0x0,8
tick,0x7ff86ea82704,25843832,0,0x0,8
tick,0x7ff86ea82704,25845757,0,0x0,8
tick,0x7ff86ea82704,25847786,0,0x0,8
tick,0x7ff86ea82704,25849798,0,0x0,8
tick,0x7ff86ea82704,25851773,0,0x0,8
tick,0x7ff86ea82704,25853747,0,0x0,8
tick,0x7ff86ea82704,25855993,0,0x0,8
tick,0x7ff86ea82704,25857968,0,0x0,8
tick,0x7ff86ea82704,25859730,0,0x0,8
tick,0x7ff86ea82704,25861737,0,0x0,8
tick,0x7ff86ea82704,25863722,0,0x0,8
tick,0x7ff86ea82704,25865859,0,0x0,8
tick,0x7ff86ea82704,25867748,0,0x0,8
tick,0x7ff86ea82704,25869773,0,0x0,8
tick,0x7ff86ea82704,25871838,0,0x0,8
tick,0x7ff86ea82704,25874249,0,0x0,8
tick,0x7ff86ea82704,25875779,0,0x0,8
tick,0x7ff86ea82704,25877861,0,0x0,8
tick,0x7ff86ea82704,25879744,0,0x0,8
tick,0x7ff86ea82704,25881788,0,0x0,8
tick,0x7ff86ea82704,25883741,0,0x0,8
tick,0x7ff86ea82704,25885784,0,0x0,8
tick,0x7ff86ea82704,25887763,0,0x0,8
tick,0x7ff86ea82704,25890744,0,0x0,8
tick,0x7ff86ea82704,25891951,0,0x0,8
tick,0x7ff86ea82704,25893821,0,0x0,8
tick,0x7ff86ea82704,25895695,0,0x0,8
tick,0x7ff86ea82704,25897711,0,0x0,8
tick,0x7ff86ea82704,25899710,0,0x0,8
tick,0x7ff86ea82704,25901749,0,0x0,8
tick,0x7ff86ea82704,25903710,0,0x0,8
tick,0x7ff86ea82704,25907271,0,0x0,8
tick,0x7ff86ea82704,25908718,0,0x0,8
tick,0x7ff86ea82704,25910605,0,0x0,8
tick,0x7ff86ea82704,25912560,0,0x0,8
tick,0x7ff86ea82704,25914578,0,0x0,8
tick,0x7ff86ea82704,25916643,0,0x0,8
tick,0x7ff86ea82704,25918597,0,0x0,8
tick,0x7ff86ea82704,25920602,0,0x0,8
tick,0x7ff86ea82704,25922797,0,0x0,8
tick,0x7ff86ea82704,25924604,0,0x0,8
tick,0x7ff86ea82704,25926645,0,0x0,8
tick,0x7ff86ea82704,25928520,0,0x0,8
tick,0x7ff86ea82704,25930554,0,0x0,8
tick,0x7ff86ea82704,25932502,0,0x0,8
tick,0x7ff86ea82704,25934571,0,0x0,8
tick,0x7ff86ea82704,25936590,0,0x0,8
tick,0x7ff86ea82704,25938558,0,0x0,8
tick,0x7ff86ea82704,25940469,0,0x0,8
tick,0x7ff86ea82704,25942646,0,0x0,8
tick,0x7ff86ea82704,25944492,0,0x0,8
tick,0x7ff86ea82704,25946518,0,0x0,8
tick,0x7ff86ea82704,25948439,0,0x0,8
tick,0x7ff86ea82704,25950489,0,0x0,8
tick,0x7ff86ea82704,25952508,0,0x0,8
tick,0x7ff86ea82704,25954469,0,0x0,8
tick,0x7ff86ea82704,25956527,0,0x0,8
tick,0x7ff86ea82704,25958490,0,0x0,8
tick,0x7ff86ea82704,25960456,0,0x0,8
tick,0x7ff86ea82704,25962487,0,0x0,8
tick,0x7ff86ea82704,25964496,0,0x0,8
tick,0x7ff86ea82704,25966395,0,0x0,8
tick,0x7ff86ea82704,25969165,0,0x0,8
tick,0x7ff86ea82704,25970400,0,0x0,8
tick,0x7ff86ea82704,25972604,0,0x0,8
tick,0x7ff86ea82704,25974420,0,0x0,8
tick,0x7ff86ea82704,25976399,0,0x0,8
tick,0x7ff86ea82704,25978416,0,0x0,8
tick,0x7ff86ea82704,25980375,0,0x0,8
tick,0x7ff86ea82704,25982430,0,0x0,8
tick,0x7ff86ea82704,25984368,0,0x0,8
tick,0x7ff86ea82704,25986481,0,0x0,8
tick,0x7ff86ea82704,25988603,0,0x0,8
tick,0x7ff86ea82704,25990290,0,0x0,8
tick,0x7ff86ea82704,25992504,0,0x0,8
tick,0x7ff86ea82704,25994358,0,0x0,8
tick,0x7ff86ea82704,25996397,0,0x0,8
tick,0x7ff86ea82704,25998352,0,0x0,8
tick,0x7ff86ea82704,26000393,0,0x0,8
tick,0x7ff86ea82704,26002275,0,0x0,8
tick,0x7ff86ea82704,26004404,0,0x0,8
tick,0x7ff86ea82704,26006268,0,0x0,8
tick,0x7ff86ea82704,26008279,0,0x0,8
tick,0x7ff86ea82704,26010343,0,0x0,8
tick,0x7ff86ea82704,26012311,0,0x0,8
tick,0x7ff86ea82704,26014313,0,0x0,8
tick,0x7ff86ea82704,26016284,0,0x0,8
tick,0x7ff86ea82704,26018319,0,0x0,8
tick,0x7ff86ea82704,26020319,0,0x0,8
tick,0x7ff86ea82704,26022223,0,0x0,8
tick,0x7ff86ea82704,26024316,0,0x0,8
tick,0x7ff86ea82704,26026237,0,0x0,8
tick,0x7ff86ea82704,26028530,0,0x0,8
tick,0x7ff86ea82704,26030230,0,0x0,8
tick,0x7ff86ea82704,26032283,0,0x0,8
tick,0x7ff86ea82704,26034233,0,0x0,8
tick,0x7ff86ea82704,26036282,0,0x0,8
tick,0x7ff86ea82704,26038219,0,0x0,8
tick,0x7ff86ea82704,26040312,0,0x0,8
tick,0x7ff86ea82704,26042248,0,0x0,8
tick,0x7ff86ea82704,26044214,0,0x0,8
tick,0x7ff86ea82704,26046225,0,0x0,8
tick,0x7ff86ea82704,26048167,0,0x0,8
tick,0x7ff86ea82704,26050273,0,0x0,8
tick,0x7ff86ea82704,26052143,0,0x0,8
tick,0x7ff86ea82704,26054218,0,0x0,8
tick,0x7ff86ea82704,26056197,0,0x0,8
tick,0x7ff86ea82704,26058197,0,0x0,8
tick,0x7ff86ea82704,26060126,0,0x0,8
tick,0x7ff86ea82704,26062149,0,0x0,8
tick,0x7ff86ea82704,26064283,0,0x0,8
tick,0x7ff86ea82704,26066084,0,0x0,8
tick,0x7ff86ea82704,26068158,0,0x0,8
tick,0x7ff86ea82704,26070105,0,0x0,8
tick,0x7ff86ea82704,26072136,0,0x0,8
tick,0x7ff86ea82704,26074339,0,0x0,8
tick,0x7ff86ea82704,26076119,0,0x0,8
tick,0x7ff86ea82704,26078107,0,0x0,8
tick,0x7ff86ea82704,26080222,0,0x0,8
tick,0x7ff86ea82704,26082179,0,0x0,8
tick,0x7ff86ea82704,26084121,0,0x0,8
tick,0x7ff86ea82704,26086037,0,0x0,8
tick,0x7ff86ea82704,26088135,0,0x0,8
tick,0x7ff86ea82704,26090079,0,0x0,8
tick,0x7ff86ea82704,26092186,0,0x0,8
tick,0x7ff86ea82704,26094154,0,0x0,8
tick,0x7ff86ea82704,26096152,0,0x0,8
tick,0x7ff86ea82704,26098489,0,0x0,8
tick,0x7ff86ea82704,26100208,0,0x0,8
tick,0x7ff86ea82704,26102022,0,0x0,8
tick,0x7ff86ea82704,26104437,0,0x0,8
tick,0x7ff86ea82704,26106147,0,0x0,8
tick,0x7ff86ea82704,26108003,0,0x0,8
tick,0x7ff86ea82704,26110089,0,0x0,8
tick,0x7ff86ea82704,26112012,0,0x0,8
tick,0x7ff86ea82704,26114228,0,0x0,8
tick,0x7ff86ea82704,26116067,0,0x0,8
tick,0x7ff86ea82704,26118145,0,0x0,8
tick,0x7ff86ea82704,26120070,0,0x0,8
tick,0x7ff86ea82704,26122161,0,0x0,8
tick,0x7ff86ea82704,26123909,0,0x0,8
tick,0x7ff86ea82704,26126104,0,0x0,8
tick,0x7ff86ea82704,26127982,0,0x0,8
tick,0x7ff86ea82704,26130024,0,0x0,8
tick,0x7ff86ea82704,26131922,0,0x0,8
tick,0x7ff86ea82704,26134073,0,0x0,8
tick,0x7ff86ea82704,26137498,0,0x0,8
tick,0x7ff86ea82704,26139555,0,0x0,8
tick,0x7ff86ea82704,26140505,0,0x0,8
tick,0x7ff86ea82704,26142056,0,0x0,8
tick,0x7ff86ea82704,26144337,0,0x0,8
tick,0x7ff86ea82704,26146142,0,0x0,8
tick,0x7ff86ea82704,26147941,0,0x0,8
tick,0x7ff86ea82704,26150131,0,0x0,8
tick,0x7ff86ea82704,26151930,0,0x0,8
tick,0x7ff86ea82704,26154078,0,0x0,8
tick,0x7ff86ea82704,26156114,0,0x0,8
tick,0x7ff86ea82704,26158217,0,0x0,8
tick,0x7ff86ea82704,26159919,0,0x0,8
tick,0x7ff86ea82704,26162141,0,0x0,8
tick,0x7ff86ea82704,26164038,0,0x0,8
tick,0x7ff86ea82704,26166295,0,0x0,8
tick,0x7ff86ea82704,26167917,0,0x0,8
tick,0x7ff86ea82704,26170466,0,0x0,8
tick,0x7ff86ea82704,26171930,0,0x0,8
tick,0x7ff86ea82704,26173939,0,0x0,8
tick,0x7ff86ea82704,26175824,0,0x0,8
tick,0x7ff86ea82704,26178200,0,0x0,8
tick,0x7ff86ea82704,26179916,0,0x0,8
tick,0x7ff86ea82704,26181981,0,0x0,8
tick,0x7ff86ea82704,26184212,0,0x0,8
tick,0x7ff86ea82704,26186050,0,0x0,8
tick,0x7ff86ea82704,26188383,0,0x0,8
tick,0x7ff86ea82704,26189946,0,0x0,8
tick,0x7ff86ea82704,26191823,0,0x0,8
tick,0x7ff86ea82704,26193872,0,0x0,8
tick,0x7ff86ea82704,26195817,0,0x0,8
tick,0x7ff86ea82704,26197813,0,0x0,8
tick,0x7ff86ea82704,26199781,0,0x0,8
tick,0x7ff86ea82704,26201922,0,0x0,8
tick,0x7ff86ea82704,26204057,0,0x0,8
tick,0x7ff86ea82704,26205837,0,0x0,8
tick,0x7ff86ea82704,26207965,0,0x0,8
tick,0x7ff86ea82704,26209976,0,0x0,8
tick,0x7ff86ea82704,26211648,0,0x0,8
tick,0x7ff86ea82704,26213847,0,0x0,8
tick,0x7ff86ea82704,26215791,0,0x0,8
tick,0x7ff86ea82704,26217720,0,0x0,8
tick,0x7ff86ea82704,26219922,0,0x0,8
tick,0x7ff86ea82704,26221671,0,0x0,8
tick,0x7ff86ea82704,26223873,0,0x0,8
tick,0x7ff86ea82704,26225819,0,0x0,8
tick,0x7ff86ea82704,26227741,0,0x0,8
tick,0x7ff86ea82704,26229863,0,0x0,8
tick,0x7ff86ea82704,26231707,0,0x0,8
tick,0x7ff86ea82704,26233714,0,0x0,8
tick,0x7ff86ea82704,26235664,0,0x0,8
tick,0x7ff86ea82704,26237681,0,0x0,8
tick,0x7ff86ea82704,26239652,0,0x0,8
tick,0x7ff86ea82704,26241707,0,0x0,8
tick,0x7ff86ea82704,26243683,0,0x0,8
tick,0x7ff86ea82704,26245700,0,0x0,8
tick,0x7ff86ea82704,26247596,0,0x0,8
tick,0x7ff86ea82704,26249692,0,0x0,8
tick,0x7ff86ea82704,26251653,0,0x0,8
tick,0x7ff86ea82704,26253654,0,0x0,8
tick,0x7ff86ea82704,26255631,0,0x0,8
tick,0x7ff86ea82704,26257615,0,0x0,8
tick,0x7ff86ea82704,26259581,0,0x0,8
tick,0x7ff86ea82704,26261560,0,0x0,8
tick,0x7ff86ea82704,26264009,0,0x0,8
tick,0x7ff86ea82704,26265615,0,0x0,8
tick,0x7ff86ea82704,26270847,0,0x0,8
tick,0x7ff86ea82704,26273054,0,0x0,8
tick,0x7ff86ea82704,26274866,0,0x0,8
tick,0x7ff86ea82704,26276761,0,0x0,8
tick,0x7ff86ea82704,26278685,0,0x0,8
tick,0x7ff86ea82704,26280658,0,0x0,8
tick,0x7ff86ea82704,26282680,0,0x0,8
tick,0x7ff86ea82704,26284691,0,0x0,8
tick,0x7ff86ea82704,26286908,0,0x0,8
tick,0x7ff86ea82704,26288694,0,0x0,8
tick,0x7ff86ea82704,26290654,0,0x0,8
tick,0x7ff86ea82704,26292715,0,0x0,8
tick,0x7ff86ea82704,26294685,0,0x0,8
tick,0x7ff86ea82704,26296530,0,0x0,8
tick,0x7ff86ea82704,26298671,0,0x0,8
tick,0x7ff86ea82704,26300567,0,0x0,8
tick,0x7ff86ea82704,26303554,0,0x0,8
tick,0x7ff86ea82704,26304730,0,0x0,8
tick,0x7ff86ea82704,26306699,0,0x0,8
tick,0x7ff86ea82704,26308769,0,0x0,8
tick,0x7ff86ea82704,26310683,0,0x0,8
tick,0x7ff86ea82704,26319707,0,0x0,8
tick,0x7ff86ea82704,26335672,0,0x0,8
tick,0x7ff86ea82704,26335698,0,0x0,8
tick,0x7ff86ea82704,26341786,0,0x0,8
tick,0x7ff86ea82704,26341813,0,0x0,8
tick,0x7ff86ea82704,26341832,0,0x0,8
tick,0x7ff86ea82704,26344442,0,0x0,8
tick,0x7ff86ea82704,26345666,0,0x0,8
tick,0x7ff86ea82704,26347489,0,0x0,8
tick,0x7ff86ea82704,26349388,0,0x0,8
tick,0x7ff86ea82704,26351455,0,0x0,8
tick,0x7ff86ea82704,26353635,0,0x0,8
tick,0x7ff86ea82704,26355675,0,0x0,8
tick,0x7ff86ea82704,26360266,0,0x0,8
tick,0x7ff86ea82704,26360293,0,0x0,8
tick,0x7ff86ea82704,26361523,0,0x0,8
tick,0x7ff86ea82704,26363441,0,0x0,8
tick,0x7ff86ea82704,26365390,0,0x0,8
tick,0x7ff86ea82704,26367608,0,0x0,8
tick,0x7ff86ea82704,26369608,0,0x0,8
tick,0x7ff86ea82704,26371426,0,0x0,8
tick,0x7ff86ea82704,26373545,0,0x0,8
tick,0x7ff86ea82704,26375402,0,0x0,8
tick,0x7ff86ea82704,26377358,0,0x0,8
tick,0x7ff86ea82704,26379391,0,0x0,8
tick,0x7ff86ea82704,26381743,0,0x0,8
tick,0x7ff86ea82704,26383315,0,0x0,8
tick,0x7ff86ea82704,26385738,0,0x0,8
tick,0x7ff86ea82704,26387239,0,0x0,8
tick,0x7ff86ea82704,26389514,0,0x0,8
tick,0x7ff86ea82704,26391578,0,0x0,8
tick,0x7ff86ea82704,26393350,0,0x0,8
tick,0x7ff86ea82704,26395266,0,0x0,8
tick,0x7ff86ea82704,26397310,0,0x0,8
tick,0x7ff86ea82704,26399247,0,0x0,8
tick,0x7ff86ea82704,26401397,0,0x0,8
tick,0x7ff86ea82704,26403200,0,0x0,8
tick,0x7ff86ea82704,26405329,0,0x0,8
tick,0x7ff86ea82704,26407230,0,0x0,8
tick,0x7ff86ea82704,26409298,0,0x0,8
tick,0x7ff86ea82704,26411181,0,0x0,8
tick,0x7ff86ea82704,26413301,0,0x0,8
tick,0x7ff86ea82704,26415186,0,0x0,8
tick,0x7ff86ea82704,26417263,0,0x0,8
tick,0x7ff86ea82704,26419180,0,0x0,8
tick,0x7ff86ea82704,26421223,0,0x0,8
tick,0x7ff86ea82704,26423563,0,0x0,8
tick,0x7ff86ea82704,26425750,0,0x0,8
tick,0x7ff86ea82704,26427200,0,0x0,8
tick,0x7ff86ea82704,26429253,0,0x0,8
tick,0x7ff86ea82704,26431210,0,0x0,8
tick,0x7ff86ea82704,26433263,0,0x0,8
tick,0x7ff86ea82704,26435365,0,0x0,8
tick,0x7ff86ea82704,26437492,0,0x0,8
tick,0x7ff86ea82704,26439503,0,0x0,8
tick,0x7ff86ea82704,26442381,0,0x0,8
tick,0x7ff86ea82704,26444211,0,0x0,8
tick,0x7ff86ea82704,26445251,0,0x0,8
tick,0x7ff86ea82704,26447213,0,0x0,8
tick,0x7ff86ea82704,26449275,0,0x0,8
tick,0x7ff86ea82704,26451180,0,0x0,8
tick,0x7ff86ea82704,26453534,0,0x0,8
tick,0x7ff86ea82704,26455189,0,0x0,8
tick,0x7ff86ea82704,26457651,0,0x0,8
tick,0x7ff86ea82704,26459234,0,0x0,8
tick,0x7ff86ea82704,26461189,0,0x0,8
tick,0x7ff86ea82704,26463369,0,0x0,8
tick,0x7ff86ea82704,26465178,0,0x0,8
tick,0x7ff86ea82704,26467088,0,0x0,8
tick,0x7ff86ea82704,26469222,0,0x0,8
tick,0x7ff86ea82704,26471396,0,0x0,8
tick,0x7ff86ea82704,26473926,0,0x0,8
tick,0x7ff86ea82704,26475352,0,0x0,8
tick,0x7ff86ea82704,26477051,0,0x0,8
tick,0x7ff86ea82704,26479052,0,0x0,8
tick,0x7ff86ea82704,26481059,0,0x0,8
tick,0x7ff86ea82704,26483002,0,0x0,8
tick,0x7ff86ea82704,26485069,0,0x0,8
tick,0x7ff86ea82704,26487035,0,0x0,8
tick,0x7ff86ea82704,26489522,0,0x0,8
tick,0x7ff86ea82704,26491374,0,0x0,8
tick,0x7ff86ea82704,26493124,0,0x0,8
tick,0x7ff86ea82704,26495085,0,0x0,8
tick,0x7ff86ea82704,26497100,0,0x0,8
tick,0x7ff86ea82704,26499313,0,0x0,8
tick,0x7ff86ea82704,26501719,0,0x0,8
tick,0x7ff86ea82704,26503222,0,0x0,8
tick,0x7ff86ea82704,26505587,0,0x0,8
tick,0x7ff86ea82704,26507062,0,0x0,8
tick,0x7ff86ea82704,26509275,0,0x0,8
tick,0x7ff86ea82704,26510981,0,0x0,8
tick,0x7ff86ea82704,26513066,0,0x0,8
tick,0x7ff86ea82704,26515017,0,0x0,8
tick,0x7ff86ea82704,26517051,0,0x0,8
tick,0x7ff86ea82704,26519267,0,0x0,8
tick,0x7ff86ea82704,26521020,0,0x0,8
tick,0x7ff86ea82704,26523501,0,0x0,8
tick,0x7ff86ea82704,26525217,0,0x0,8
tick,0x7ff86ea82704,26527081,0,0x0,8
tick,0x7ff86ea82704,26529183,0,0x0,8
tick,0x7ff86ea82704,26531096,0,0x0,8
tick,0x7ff86ea82704,26533367,0,0x0,8
tick,0x7ff86ea82704,26535127,0,0x0,8
tick,0x7ff86ea82704,26536999,0,0x0,8
tick,0x7ff86ea82704,26539032,0,0x0,8
tick,0x7ff86ea82704,26541750,0,0x0,8
tick,0x7ff86ea82704,26543039,0,0x0,8
tick,0x7ff86ea82704,26544920,0,0x0,8
tick,0x7ff86ea82704,26546964,0,0x0,8
tick,0x7ff86ea82704,26548874,0,0x0,8
tick,0x7ff86ea82704,26550931,0,0x0,8
tick,0x7ff86ea82704,26552915,0,0x0,8
tick,0x7ff86ea82704,26555347,0,0x0,8
tick,0x7ff86ea82704,26557248,0,0x0,8
tick,0x7ff86ea82704,26559002,0,0x0,8
tick,0x7ff86ea82704,26560829,0,0x0,8
tick,0x7ff86ea82704,26562938,0,0x0,8
tick,0x7ff86ea82704,26564800,0,0x0,8
tick,0x7ff86ea82704,26566846,0,0x0,8
tick,0x7ff86ea82704,26568850,0,0x0,8
tick,0x7ff86ea82704,26570888,0,0x0,8
tick,0x7ff86ea82704,26573020,0,0x0,8
tick,0x7ff86ea82704,26574966,0,0x0,8
tick,0x7ff86ea82704,26576800,0,0x0,8
tick,0x7ff86ea82704,26578812,0,0x0,8
tick,0x7ff86ea82704,26580813,0,0x0,8
tick,0x7ff86ea82704,26582853,0,0x0,8
tick,0x7ff86ea82704,26584984,0,0x0,8
tick,0x7ff86ea82704,26586812,0,0x0,8
tick,0x7ff86ea82704,26588834,0,0x0,8
tick,0x7ff86ea82704,26591058,0,0x0,8
tick,0x7ff86ea82704,26592874,0,0x0,8
tick,0x7ff86ea82704,26594749,0,0x0,8
tick,0x7ff86ea82704,26596744,0,0x0,8
tick,0x7ff86ea82704,26598775,0,0x0,8
tick,0x7ff86ea82704,26600987,0,0x0,8
tick,0x7ff86ea82704,26602755,0,0x0,8
tick,0x7ff86ea82704,26604748,0,0x0,8
tick,0x7ff86ea82704,26606831,0,0x0,8
tick,0x7ff86ea82704,26608866,0,0x0,8
tick,0x7ff86ea82704,26610672,0,0x0,8
tick,0x7ff86ea82704,26612755,0,0x0,8
tick,0x7ff86ea82704,26614687,0,0x0,8
tick,0x7ff86ea82704,26617057,0,0x0,8
tick,0x7ff86ea82704,26618723,0,0x0,8
tick,0x7ff86ea82704,26621133,0,0x0,8
tick,0x7ff86ea82704,26623097,0,0x0,8
tick,0x7ff86ea82704,26624983,0,0x0,8
tick,0x7ff86ea82704,26626697,0,0x0,8
tick,0x7ff86ea82704,26628751,0,0x0,8
tick,0x7ff86ea82704,26630814,0,0x0,8
tick,0x7ff86ea82704,26633014,0,0x0,8
tick,0x7ff86ea82704,26634647,0,0x0,8
tick,0x7ff86ea82704,26636612,0,0x0,8
tick,0x7ff86ea82704,26638653,0,0x0,8
tick,0x7ff86ea82704,26640689,0,0x0,8
tick,0x7ff86ea82704,26642709,0,0x0,8
tick,0x7ff86ea82704,26644852,0,0x0,8
tick,0x7ff86ea82704,26646626,0,0x0,8
tick,0x7ff86ea82704,26649095,0,0x0,8
tick,0x7ff86ea82704,26650682,0,0x0,8
tick,0x7ff86ea82704,26652892,0,0x0,8
tick,0x7ff86ea82704,26654590,0,0x0,8
tick,0x7ff86ea82704,26657063,0,0x0,8
tick,0x7ff86ea82704,26658864,0,0x0,8
tick,0x7ff86ea82704,26660585,0,0x0,8
tick,0x7ff86ea82704,26662879,0,0x0,8
tick,0x7ff86ea82704,26664808,0,0x0,8
tick,0x7ff86ea82704,26666644,0,0x0,8
tick,0x7ff86ea82704,26668655,0,0x0,8
tick,0x7ff86ea82704,26670779,0,0x0,8
tick,0x7ff86ea82704,26673131,0,0x0,8
tick,0x7ff86ea82704,26674575,0,0x0,8
tick,0x7ff86ea82704,26676630,0,0x0,8
tick,0x7ff86ea82704,26678757,0,0x0,8
tick,0x7ff86ea82704,26680621,0,0x0,8
tick,0x7ff86ea82704,26682500,0,0x0,8
tick,0x7ff86ea82704,26684466,0,0x0,8
tick,0x7ff86ea82704,26686589,0,0x0,8
tick,0x7ff86ea82704,26688467,0,0x0,8
tick,0x7ff86ea82704,26690486,0,0x0,8
tick,0x7ff86ea82704,26692453,0,0x0,8
tick,0x7ff86ea82704,26694541,0,0x0,8
tick,0x7ff86ea82704,26696505,0,0x0,8
tick,0x7ff86ea82704,26698538,0,0x0,8
tick,0x7ff86ea82704,26700437,0,0x0,8
tick,0x7ff86ea82704,26702485,0,0x0,8
tick,0x7ff86ea82704,26704456,0,0x0,8
tick,0x7ff86ea82704,26706426,0,0x0,8
tick,0x7ff86ea82704,26708467,0,0x0,8
tick,0x7ff86ea82704,26710374,0,0x0,8
tick,0x7ff86ea82704,26712448,0,0x0,8
tick,0x7ff86ea82704,26714374,0,0x0,8
tick,0x7ff86ea82704,26716647,0,0x0,8
tick,0x7ff86ea82704,26718360,0,0x0,8
tick,0x7ff86ea82704,26720422,0,0x0,8
tick,0x7ff86ea82704,26722354,0,0x0,8
tick,0x7ff86ea82704,26724472,0,0x0,8
tick,0x7ff86ea82704,26726329,0,0x0,8
tick,0x7ff86ea82704,26728537,0,0x0,8
tick,0x7ff86ea82704,26730327,0,0x0,8
tick,0x7ff86ea82704,26732395,0,0x0,8
tick,0x7ff86ea82704,26734294,0,0x0,8
tick,0x7ff86ea82704,26736592,0,0x0,8
tick,0x7ff86ea82704,26738333,0,0x0,8
tick,0x7ff86ea82704,26740405,0,0x0,8
tick,0x7ff86ea82704,26742352,0,0x0,8
tick,0x7ff86ea82704,26744411,0,0x0,8
tick,0x7ff86ea82704,26746989,0,0x0,8
tick,0x7ff86ea82704,26748732,0,0x0,8
tick,0x7ff86ea82704,26750883,0,0x0,8
tick,0x7ff86ea82704,26752726,0,0x0,8
tick,0x7ff86ea82704,26755532,0,0x0,8
tick,0x7ff86ea82704,26756863,0,0x0,8
tick,0x7ff86ea82704,26759582,0,0x0,8
tick,0x7ff86ea82704,26760215,0,0x0,8
tick,0x7ff86ea82704,26762849,0,0x0,8
tick,0x7ff86ea82704,26764752,0,0x0,8
tick,0x7ff86ea82704,26767671,0,0x0,8
tick,0x7ff86ea82704,26768298,0,0x0,8
tick,0x7ff86ea82704,26770550,0,0x0,8
tick,0x7ff86ea82704,26772402,0,0x0,8
tick,0x7ff86ea82704,26775132,0,0x0,8
tick,0x7ff86ea82704,26776321,0,0x0,8
tick,0x7ff86ea82704,26778494,0,0x0,8
tick,0x7ff86ea82704,26780285,0,0x0,8
tick,0x7ff86ea82704,26782365,0,0x0,8
tick,0x7ff86ea82704,26784197,0,0x0,8
tick,0x7ff86ea82704,26786329,0,0x0,8
tick,0x7ff86ea82704,26788216,0,0x0,8
tick,0x7ff86ea82704,26790334,0,0x0,8
tick,0x7ff86ea82704,26792301,0,0x0,8
tick,0x7ff86ea82704,26794444,0,0x0,8
tick,0x7ff86ea82704,26796304,0,0x0,8
tick,0x7ff86ea82704,26798899,0,0x0,8
tick,0x7ff86ea82704,26800198,0,0x0,8
tick,0x7ff86ea82704,26802245,0,0x0,8
tick,0x7ff86ea82704,26804241,0,0x0,8
tick,0x7ff86ea82704,26806155,0,0x0,8
tick,0x7ff86ea82704,26808723,0,0x0,8
tick,0x7ff86ea82704,26810176,0,0x0,8
tick,0x7ff86ea82704,26812230,0,0x0,8
tick,0x7ff86ea82704,26814111,0,0x0,8
tick,0x7ff86ea82704,26816277,0,0x0,8
tick,0x7ff86ea82704,26818121,0,0x0,8
tick,0x7ff86ea82704,26820691,0,0x0,8
tick,0x7ff86ea82704,26822597,0,0x0,8
tick,0x7ff86ea82704,26825044,0,0x0,8
tick,0x7ff86ea82704,26827244,0,0x0,8
tick,0x7ff86ea82704,26829134,0,0x0,8
tick,0x7ff86ea82704,26831110,0,0x0,8
tick,0x7ff86ea82704,26833083,0,0x0,8
tick,0x7ff86ea82704,26835109,0,0x0,8
tick,0x7ff86ea82704,26838147,0,0x0,8
tick,0x7ff86ea82704,26841269,0,0x0,8
tick,0x7ff86ea82704,26842848,0,0x0,8
tick,0x7ff86ea82704,26844184,0,0x0,8
tick,0x7ff86ea82704,26846056,0,0x0,8
tick,0x7ff86ea82704,26848817,0,0x0,8
tick,0x7ff86ea82704,26850205,0,0x0,8
tick,0x7ff86ea82704,26852320,0,0x0,8
tick,0x7ff86ea82704,26854176,0,0x0,8
tick,0x7ff86ea82704,26860144,0,0x0,8
tick,0x7ff86ea82704,26862611,0,0x0,8
tick,0x7ff86ea82704,26864187,0,0x0,8
tick,0x7ff86ea82704,26866236,0,0x0,8
tick,0x7ff86ea82704,26868369,0,0x0,8
tick,0x7ff86ea82704,26870283,0,0x0,8
tick,0x7ff86ea82704,26872006,0,0x0,8
tick,0x7ff86ea82704,26875723,0,0x0,8
tick,0x7ff86ea82704,26877097,0,0x0,8
tick,0x7ff86ea82704,26879312,0,0x0,8
tick,0x7ff86ea82704,26881084,0,0x0,8
tick,0x7ff86ea82704,26883462,0,0x0,8
tick,0x7ff86ea82704,26885121,0,0x0,8
tick,0x7ff86ea82704,26887112,0,0x0,8
tick,0x7ff86ea82704,26889039,0,0x0,8
tick,0x7ff86ea82704,26891188,0,0x0,8
tick,0x7ff86ea82704,26893293,0,0x0,8
tick,0x7ff86ea82704,26894964,0,0x0,8
tick,0x7ff86ea82704,26897028,0,0x0,8
tick,0x7ff86ea82704,26899082,0,0x0,8
tick,0x7ff86ea82704,26900936,0,0x0,8
tick,0x7ff86ea82704,26902973,0,0x0,8
tick,0x7ff86ea82704,26905005,0,0x0,8
tick,0x7ff86ea82704,26907310,0,0x0,8
tick,0x7ff86ea82704,26909365,0,0x0,8
tick,0x7ff86ea82704,26910895,0,0x0,8
tick,0x7ff86ea82704,26913170,0,0x0,8
tick,0x7ff86ea82704,26915088,0,0x0,8
tick,0x7ff86ea82704,26917364,0,0x0,8
tick,0x7ff86ea82704,26918891,0,0x0,8
tick,0x7ff86ea82704,26921059,0,0x0,8
tick,0x7ff86ea82704,26923337,0,0x0,8
tick,0x7ff86ea82704,26925872,0,0x0,8
tick,0x7ff86ea82704,26927976,0,0x0,8
tick,0x7ff86ea82704,26929851,0,0x0,8
tick,0x7ff86ea82704,26931932,0,0x0,8
tick,0x7ff86ea82704,26934136,0,0x0,8
tick,0x7ff86ea82704,26935909,0,0x0,8
tick,0x7ff86ea82704,26938025,0,0x0,8
tick,0x7ff86ea82704,26940670,0,0x0,8
tick,0x7ff86ea82704,26942263,0,0x0,8
tick,0x7ff86ea82704,26943875,0,0x0,8
tick,0x7ff86ea82704,26946036,0,0x0,8
tick,0x7ff86ea82704,26947957,0,0x0,8
tick,0x7ff86ea82704,26950105,0,0x0,8
tick,0x7ff86ea82704,26951879,0,0x0,8
tick,0x7ff86ea82704,26953995,0,0x0,8
tick,0x7ff86ea82704,26956546,0,0x0,8
tick,0x7ff86ea82704,26958202,0,0x0,8
tick,0x7ff86ea82704,26959919,0,0x0,8
tick,0x7ff86ea82704,26961972,0,0x0,8
tick,0x7ff86ea82704,26964279,0,0x0,8
tick,0x7ff86ea82704,26966151,0,0x0,8
tick,0x7ff86ea82704,26967903,0,0x0,8
tick,0x7ff86ea82704,26969904,0,0x0,8
tick,0x7ff86ea82704,26971751,0,0x0,8
tick,0x7ff86ea82704,26974464,0,0x0,8
tick,0x7ff86ea82704,26975828,0,0x0,8
tick,0x7ff86ea82704,26977858,0,0x0,8
tick,0x7ff86ea82704,26979884,0,0x0,8
tick,0x7ff86ea82704,26981945,0,0x0,8
tick,0x7ff86ea82704,26983901,0,0x0,8
tick,0x7ff86ea82704,26985779,0,0x0,8
tick,0x7ff86ea82704,26987890,0,0x0,8
tick,0x7ff86ea82704,26989902,0,0x0,8
tick,0x7ff86ea82704,26991923,0,0x0,8
tick,0x7ff86ea82704,26993703,0,0x0,8
tick,0x7ff86ea82704,26996008,0,0x0,8
tick,0x7ff86ea82704,26997962,0,0x0,8
tick,0x7ff86ea82704,26999875,0,0x0,8
tick,0x7ff86ea82704,27001848,0,0x0,8
tick,0x7ff86ea82704,27003793,0,0x0,8
tick,0x7ff86ea82704,27005742,0,0x0,8
tick,0x7ff86ea82704,27008120,0,0x0,8
tick,0x7ff86ea82704,27009989,0,0x0,8
tick,0x7ff86ea82704,27011772,0,0x0,8
tick,0x7ff86ea82704,27013789,0,0x0,8
tick,0x7ff86ea82704,27015835,0,0x0,8
tick,0x7ff86ea82704,27017932,0,0x0,8
tick,0x7ff86ea82704,27019651,0,0x0,8
tick,0x7ff86ea82704,27021814,0,0x0,8
tick,0x7ff86ea82704,27024075,0,0x0,8
tick,0x7ff86ea82704,27025720,0,0x0,8
tick,0x7ff86ea82704,27027722,0,0x0,8
tick,0x7ff86ea82704,27029846,0,0x0,8
tick,0x7ff86ea82704,27031828,0,0x0,8
tick,0x7ff86ea82704,27033849,0,0x0,8
tick,0x7ff86ea82704,27035697,0,0x0,8
tick,0x7ff86ea82704,27037658,0,0x0,8
tick,0x7ff86ea82704,27040233,0,0x0,8
tick,0x7ff86ea82704,27041782,0,0x0,8
tick,0x7ff86ea82704,27043550,0,0x0,8
tick,0x7ff86ea82704,27045681,0,0x0,8
tick,0x7ff86ea82704,27047601,0,0x0,8
tick,0x7ff86ea82704,27049699,0,0x0,8
tick,0x7ff86ea82704,27051677,0,0x0,8
tick,0x7ff86ea82704,27053548,0,0x0,8
tick,0x7ff86ea82704,27055564,0,0x0,8
tick,0x7ff86ea82704,27058066,0,0x0,8
tick,0x7ff86ea82704,27059717,0,0x0,8
tick,0x7ff86ea82704,27061666,0,0x0,8
tick,0x7ff86ea82704,27063477,0,0x0,8
tick,0x7ff86ea82704,27065555,0,0x0,8
tick,0x7ff86ea82704,27067624,0,0x0,8
tick,0x7ff86ea82704,27069656,0,0x0,8
tick,0x7ff86ea82704,27071474,0,0x0,8
tick,0x7ff86ea82704,27074311,0,0x0,8
tick,0x7ff86ea82704,27075933,0,0x0,8
tick,0x7ff86ea82704,27077723,0,0x0,8
tick,0x7ff86ea82704,27079592,0,0x0,8
tick,0x7ff86ea82704,27081777,0,0x0,8
tick,0x7ff86ea82704,27083572,0,0x0,8
tick,0x7ff86ea82704,27085710,0,0x0,8
tick,0x7ff86ea82704,27087519,0,0x0,8
tick,0x7ff86ea82704,27090008,0,0x0,8
tick,0x7ff86ea82704,27091748,0,0x0,8
tick,0x7ff86ea82704,27093770,0,0x0,8
tick,0x7ff86ea82704,27095559,0,0x0,8
tick,0x7ff86ea82704,27097665,0,0x0,8
tick,0x7ff86ea82704,27099716,0,0x0,8
tick,0x7ff86ea82704,27101599,0,0x0,8
tick,0x7ff86ea82704,27103604,0,0x0,8
tick,0x7ff86ea82704,27105862,0,0x0,8
tick,0x7ff86ea82704,27108017,0,0x0,8
tick,0x7ff86ea82704,27109577,0,0x0,8
tick,0x7ff86ea82704,27111676,0,0x0,8
tick,0x7ff86ea82704,27113451,0,0x0,8
tick,0x7ff86ea82704,27115735,0,0x0,8
tick,0x7ff86ea82704,27117662,0,0x0,8
tick,0x7ff86ea82704,27119693,0,0x0,8
tick,0x7ff86ea82704,27121601,0,0x0,8
tick,0x7ff86ea82704,27124909,0,0x0,8
tick,0x7ff86ea82704,27126159,0,0x0,8
tick,0x7ff86ea82704,27127655,0,0x0,8
tick,0x7ff86ea82704,27129547,0,0x0,8
tick,0x7ff86ea82704,27131626,0,0x0,8
tick,0x7ff86ea82704,27133575,0,0x0,8
tick,0x7ff86ea82704,27135467,0,0x0,8
tick,0x7ff86ea82704,27137527,0,0x0,8
tick,0x7ff86ea82704,27139926,0,0x0,8
tick,0x7ff86ea82704,27142430,0,0x0,8
tick,0x7ff86ea82704,27143372,0,0x0,8
tick,0x7ff86ea82704,27145459,0,0x0,8
tick,0x7ff86ea82704,27147331,0,0x0,8
tick,0x7ff86ea82704,27149402,0,0x0,8
tick,0x7ff86ea82704,27151212,0,0x0,8
tick,0x7ff86ea82704,27153258,0,0x0,8
tick,0x7ff86ea82704,27155426,0,0x0,8
tick,0x7ff86ea82704,27157600,0,0x0,8
tick,0x7ff86ea82704,27159382,0,0x0,8
tick,0x7ff86ea82704,27161789,0,0x0,8
tick,0x7ff86ea82704,27163360,0,0x0,8
tick,0x7ff86ea82704,27165596,0,0x0,8
tick,0x7ff86ea82704,27167379,0,0x0,8
tick,0x7ff86ea82704,27169235,0,0x0,8
tick,0x7ff86ea82704,27171616,0,0x0,8
tick,0x7ff86ea82704,27173788,0,0x0,8
tick,0x7ff86ea82704,27175694,0,0x0,8
tick,0x7ff86ea82704,27177211,0,0x0,8
tick,0x7ff86ea82704,27179274,0,0x0,8
tick,0x7ff86ea82704,27181471,0,0x0,8
tick,0x7ff86ea82704,27183317,0,0x0,8
tick,0x7ff86ea82704,27185359,0,0x0,8
tick,0x7ff86ea82704,27187409,0,0x0,8
tick,0x7ff86ea82704,27189496,0,0x0,8
tick,0x7ff86ea82704,27192266,0,0x0,8
tick,0x7ff86ea82704,27194194,0,0x0,8
tick,0x7ff86ea82704,27196350,0,0x0,8
tick,0x7ff86ea82704,27198191,0,0x0,8
tick,0x7ff86ea82704,27200327,0,0x0,8
tick,0x7ff86ea82704,27202304,0,0x0,8
tick,0x7ff86ea82704,27204469,0,0x0,8
tick,0x7ff86ea82704,27206493,0,0x0,8
tick,0x7ff86ea82704,27208526,0,0x0,8
tick,0x7ff86ea82704,27210156,0,0x0,8
tick,0x7ff86ea82704,27212174,0,0x0,8
tick,0x7ff86ea82704,27214123,0,0x0,8
tick,0x7ff86ea82704,27216185,0,0x0,8
tick,0x7ff86ea82704,27218134,0,0x0,8
tick,0x7ff86ea82704,27220257,0,0x0,8
tick,0x7ff86ea82704,27222173,0,0x0,8
tick,0x7ff86ea82704,27225534,0,0x0,8
tick,0x7ff86ea82704,27227269,0,0x0,8
tick,0x7ff86ea82704,27229175,0,0x0,8
tick,0x7ff86ea82704,27231271,0,0x0,8
tick,0x7ff86ea82704,27233286,0,0x0,8
tick,0x7ff86ea82704,27235402,0,0x0,8
tick,0x7ff86ea82704,27237276,0,0x0,8
tick,0x7ff86ea82704,27239586,0,0x0,8
tick,0x7ff86ea82704,27241677,0,0x0,8
tick,0x7ff86ea82704,27243232,0,0x0,8
tick,0x7ff86ea82704,27245219,0,0x0,8
tick,0x7ff86ea82704,27247264,0,0x0,8
tick,0x7ff86ea82704,27249095,0,0x0,8
tick,0x7ff86ea82704,27251114,0,0x0,8
tick,0x7ff86ea82704,27253395,0,0x0,8
tick,0x7ff86ea82704,27255239,0,0x0,8
tick,0x7ff86ea82704,27257578,0,0x0,8
tick,0x7ff86ea82704,27259042,0,0x0,8
tick,0x7ff86ea82704,27261008,0,0x0,8
tick,0x7ff86ea82704,27263067,0,0x0,8
tick,0x7ff86ea82704,27264957,0,0x0,8
tick,0x7ff86ea82704,27267014,0,0x0,8
tick,0x7ff86ea82704,27268978,0,0x0,8
tick,0x7ff86ea82704,27270932,0,0x0,8
tick,0x7ff86ea82704,27274819,0,0x0,8
tick,0x7ff86ea82704,27276208,0,0x0,8
tick,0x7ff86ea82704,27278032,0,0x0,8
tick,0x7ff86ea82704,27280044,0,0x0,8
tick,0x7ff86ea82704,27281938,0,0x0,8
tick,0x7ff86ea82704,27283999,0,0x0,8
tick,0x7ff86ea82704,27285955,0,0x0,8
tick,0x7ff86ea82704,27288071,0,0x0,8
tick,0x7ff86ea82704,27290317,0,0x0,8
tick,0x7ff86ea82704,27292002,0,0x0,8
tick,0x7ff86ea82704,27294123,0,0x0,8
tick,0x7ff86ea82704,27296133,0,0x0,8
tick,0x7ff86ea82704,27297967,0,0x0,8
tick,0x7ff86ea82704,27300051,0,0x0,8
tick,0x7ff86ea82704,27301912,0,0x0,8
tick,0x7ff86ea82704,27303925,0,0x0,8
tick,0x7ff86ea82704,27306064,0,0x0,8
tick,0x7ff86ea82704,27308437,0,0x0,8
tick,0x7ff86ea82704,27309904,0,0x0,8
tick,0x7ff86ea82704,27311974,0,0x0,8
tick,0x7ff86ea82704,27313932,0,0x0,8
tick,0x7ff86ea82704,27316046,0,0x0,8
tick,0x7ff86ea82704,27317806,0,0x0,8
tick,0x7ff86ea82704,27319961,0,0x0,8
tick,0x7ff86ea82704,27321857,0,0x0,8
tick,0x7ff86ea82704,27324157,0,0x0,8
tick,0x7ff86ea82704,27325818,0,0x0,8
tick,0x7ff86ea82704,27327868,0,0x0,8
tick,0x7ff86ea82704,27329847,0,0x0,8
tick,0x7ff86ea82704,27331823,0,0x0,8
tick,0x7ff86ea82704,27333830,0,0x0,8
tick,0x7ff86ea82704,27335890,0,0x0,8
tick,0x7ff86ea82704,27337972,0,0x0,8
tick,0x7ff86ea82704,27340207,0,0x0,8
tick,0x7ff86ea82704,27342007,0,0x0,8
tick,0x7ff86ea82704,27343905,0,0x0,8
tick,0x7ff86ea82704,27345890,0,0x0,8
tick,0x7ff86ea82704,27347996,0,0x0,8
tick,0x7ff86ea82704,27349788,0,0x0,8
tick,0x7ff86ea82704,27351779,0,0x0,8
tick,0x7ff86ea82704,27353856,0,0x0,8
tick,0x7ff86ea82704,27358453,0,0x0,8
tick,0x7ff86ea82704,27358848,0,0x0,8
tick,0x7ff86ea82704,27359847,0,0x0,8
tick,0x7ff86ea82704,27361892,0,0x0,8
tick,0x7ff86ea82704,27363817,0,0x0,8
tick,0x7ff86ea82704,27365839,0,0x0,8
tick,0x7ff86ea82704,27367795,0,0x0,8
tick,0x7ff86ea82704,27369749,0,0x0,8
tick,0x7ff86ea82704,27371748,0,0x0,8
tick,0x7ff86ea82704,27374173,0,0x0,8
tick,0x7ff86ea82704,27375649,0,0x0,8
tick,0x7ff86ea82704,27377764,0,0x0,8
tick,0x7ff86ea82704,27379732,0,0x0,8
tick,0x7ff86ea82704,27381675,0,0x0,8
tick,0x7ff86ea82704,27383690,0,0x0,8
tick,0x7ff86ea82704,27385653,0,0x0,8
tick,0x7ff86ea82704,27387855,0,0x0,8
tick,0x7ff86ea82704,27390183,0,0x0,8
tick,0x7ff86ea82704,27391811,0,0x0,8
tick,0x7ff86ea82704,27393682,0,0x0,8
tick,0x7ff86ea82704,27395950,0,0x0,8
tick,0x7ff86ea82704,27397746,0,0x0,8
tick,0x7ff86ea82704,27399693,0,0x0,8
tick,0x7ff86ea82704,27401562,0,0x0,8
tick,0x7ff86ea82704,27403896,0,0x0,8
tick,0x7ff86ea82704,27405605,0,0x0,8
tick,0x7ff86ea82704,27407892,0,0x0,8
tick,0x7ff86ea82704,27409645,0,0x0,8
tick,0x7ff86ea82704,27411750,0,0x0,8
tick,0x7ff86ea82704,27413584,0,0x0,8
tick,0x7ff86ea82704,27415567,0,0x0,8
tick,0x7ff86ea82704,27417634,0,0x0,8
tick,0x7ff86ea82704,27419642,0,0x0,8
tick,0x7ff86ea82704,27421844,0,0x0,8
tick,0x7ff86ea82704,27424162,0,0x0,8
tick,0x7ff86ea82704,27425803,0,0x0,8
tick,0x7ff86ea82704,27427473,0,0x0,8
tick,0x7ff86ea82704,27429577,0,0x0,8
tick,0x7ff86ea82704,27431475,0,0x0,8
tick,0x7ff86ea82704,27433602,0,0x0,8
tick,0x7ff86ea82704,27435502,0,0x0,8
tick,0x7ff86ea82704,27437502,0,0x0,8
tick,0x7ff86ea82704,27440171,0,0x0,8
tick,0x7ff86ea82704,27442244,0,0x0,8
tick,0x7ff86ea82704,27443700,0,0x0,8
tick,0x7ff86ea82704,27445866,0,0x0,8
tick,0x7ff86ea82704,27447733,0,0x0,8
tick,0x7ff86ea82704,27451817,0,0x0,8
tick,0x7ff86ea82704,27452487,0,0x0,8
tick,0x7ff86ea82704,27454495,0,0x0,8
tick,0x7ff86ea82704,27458479,0,0x0,8
tick,0x7ff86ea82704,27458933,0,0x0,8
tick,0x7ff86ea82704,27460725,0,0x0,8
tick,0x7ff86ea82704,27462819,0,0x0,8
tick,0x7ff86ea82704,27464661,0,0x0,8
tick,0x7ff86ea82704,27466469,0,0x0,8
tick,0x7ff86ea82704,27468520,0,0x0,8
tick,0x7ff86ea82704,27470549,0,0x0,8
tick,0x7ff86ea82704,27472525,0,0x0,8
tick,0x7ff86ea82704,27474838,0,0x0,8
tick,0x7ff86ea82704,27476710,0,0x0,8
tick,0x7ff86ea82704,27478720,0,0x0,8
tick,0x7ff86ea82704,27481144,0,0x0,8
tick,0x7ff86ea82704,27482467,0,0x0,8
tick,0x7ff86ea82704,27484632,0,0x0,8
tick,0x7ff86ea82704,27486342,0,0x0,8
tick,0x7ff86ea82704,27488721,0,0x0,8
tick,0x7ff86ea82704,27490671,0,0x0,8
tick,0x7ff86ea82704,27492873,0,0x0,8
tick,0x7ff86ea82704,27494592,0,0x0,8
tick,0x7ff86ea82704,27496782,0,0x0,8
tick,0x7ff86ea82704,27498536,0,0x0,8
tick,0x7ff86ea82704,27500465,0,0x0,8
tick,0x7ff86ea82704,27502634,0,0x0,8
tick,0x7ff86ea82704,27505549,0,0x0,8
tick,0x7ff86ea82704,27507746,0,0x0,8
tick,0x7ff86ea82704,27508959,0,0x0,8
tick,0x7ff86ea82704,27510475,0,0x0,8
tick,0x7ff86ea82704,27512484,0,0x0,8
tick,0x7ff86ea82704,27514374,0,0x0,8
tick,0x7ff86ea82704,27516483,0,0x0,8
tick,0x7ff86ea82704,27518420,0,0x0,8
tick,0x7ff86ea82704,27520387,0,0x0,8
tick,0x7ff86ea82704,27522374,0,0x0,8
tick,0x7ff86ea82704,27525119,0,0x0,8
tick,0x7ff86ea82704,27526983,0,0x0,8
tick,0x7ff86ea82704,27528432,0,0x0,8
tick,0x7ff86ea82704,27530424,0,0x0,8
tick,0x7ff86ea82704,27532478,0,0x0,8
tick,0x7ff86ea82704,27534532,0,0x0,8
tick,0x7ff86ea82704,27536420,0,0x0,8
tick,0x7ff86ea82704,27538816,0,0x0,8
tick,0x7ff86ea82704,27541855,0,0x0,8
tick,0x7ff86ea82704,27544179,0,0x0,8
tick,0x7ff86ea82704,27545527,0,0x0,8
tick,0x7ff86ea82704,27547477,0,0x0,8
tick,0x7ff86ea82704,27549558,0,0x0,8
tick,0x7ff86ea82704,27551674,0,0x0,8
tick,0x7ff86ea82704,27553623,0,0x0,8
tick,0x7ff86ea82704,27555238,0,0x0,8
tick,0x7ff86ea82704,27560822,0,0x0,8
tick,0x7ff86ea82704,27561712,0,0x0,8
tick,0x7ff86ea82704,27563427,0,0x0,8
tick,0x7ff86ea82704,27565651,0,0x0,8
tick,0x7ff86ea82704,27567484,0,0x0,8
tick,0x7ff86ea82704,27569396,0,0x0,8
tick,0x7ff86ea82704,27571399,0,0x0,8
tick,0x7ff86ea82704,27574249,0,0x0,8
tick,0x7ff86ea82704,27577771,0,0x0,8
tick,0x7ff86ea82704,27579443,0,0x0,8
tick,0x7ff86ea82704,27581467,0,0x0,8
tick,0x7ff86ea82704,27583778,0,0x0,8
tick,0x7ff86ea82704,27585316,0,0x0,8
tick,0x7ff86ea82704,27587319,0,0x0,8
tick,0x7ff86ea82704,27589286,0,0x0,8
tick,0x7ff86ea82704,27593094,0,0x0,8
tick,0x7ff86ea82704,27594081,0,0x0,8
tick,0x7ff86ea82704,27596061,0,0x0,8
tick,0x7ff86ea82704,27598056,0,0x0,8
tick,0x7ff86ea82704,27599979,0,0x0,8
tick,0x7ff86ea82704,27602039,0,0x0,8
tick,0x7ff86ea82704,27603998,0,0x0,8
tick,0x7ff86ea82704,27606129,0,0x0,8
tick,0x7ff86ea82704,27609769,0,0x0,8
tick,0x7ff86ea82704,27611656,0,0x0,8
tick,0x7ff86ea82704,27613626,0,0x0,8
tick,0x7ff86ea82704,27615449,0,0x0,8
tick,0x7ff86ea82704,27617458,0,0x0,8
tick,0x7ff86ea82704,27619336,0,0x0,8
tick,0x7ff86ea82704,27621248,0,0x0,8
tick,0x7ff86ea82704,27626236,0,0x0,8
tick,0x7ff86ea82704,27626754,0,0x0,8
tick,0x7ff86ea82704,27628482,0,0x0,8
tick,0x7ff86ea82704,27630309,0,0x0,8
tick,0x7ff86ea82704,27632141,0,0x0,8
tick,0x7ff86ea82704,27634145,0,0x0,8
tick,0x7ff86ea82704,27636306,0,0x0,8
tick,0x7ff86ea82704,27638198,0,0x0,8
tick,0x7ff86ea82704,27641990,0,0x0,8
tick,0x7ff86ea82704,27643839,0,0x0,8
tick,0x7ff86ea82704,27645008,0,0x0,8
tick,0x7ff86ea82704,27647140,0,0x0,8
tick,0x7ff86ea82704,27649096,0,0x0,8
tick,0x7ff86ea82704,27651110,0,0x0,8
tick,0x7ff86ea82704,27653145,0,0x0,8
tick,0x7ff86ea82704,27655029,0,0x0,8
tick,0x7ff86ea82704,27657564,0,0x0,8
tick,0x7ff86ea82704,27659217,0,0x0,8
tick,0x7ff86ea82704,27661119,0,0x0,8
tick,0x7ff86ea82704,27663013,0,0x0,8
tick,0x7ff86ea82704,27664966,0,0x0,8
tick,0x7ff86ea82704,27667003,0,0x0,8
tick,0x7ff86ea82704,27669074,0,0x0,8
tick,0x7ff86ea82704,27671065,0,0x0,8
tick,0x7ff86ea82704,27673631,0,0x0,8
tick,0x7ff86ea82704,27675517,0,0x0,8
tick,0x7ff86ea82704,27676946,0,0x0,8
tick,0x7ff86ea82704,27678971,0,0x0,8
tick,0x7ff86ea82704,27680903,0,0x0,8
tick,0x7ff86ea82704,27682982,0,0x0,8
tick,0x7ff86ea82704,27684925,0,0x0,8
tick,0x7ff86ea82704,27686950,0,0x0,8
tick,0x7ff86ea82704,27688874,0,0x0,8
tick,0x7ff86ea82704,27691717,0,0x0,8
tick,0x7ff86ea82704,27693098,0,0x0,8
tick,0x7ff86ea82704,27694924,0,0x0,8
tick,0x7ff86ea82704,27696958,0,0x0,8
tick,0x7ff86ea82704,27698844,0,0x0,8
tick,0x7ff86ea82704,27700890,0,0x0,8
tick,0x7ff86ea82704,27702898,0,0x0,8
tick,0x7ff86ea82704,27704849,0,0x0,8
tick,0x7ff86ea82704,27707608,0,0x0,8
tick,0x7ff86ea82704,27709152,0,0x0,8
tick,0x7ff86ea82704,27710900,0,0x0,8
tick,0x7ff86ea82704,27712927,0,0x0,8
tick,0x7ff86ea82704,27714905,0,0x0,8
tick,0x7ff86ea82704,27716884,0,0x0,8
tick,0x7ff86ea82704,27718919,0,0x0,8
tick,0x7ff86ea82704,27720809,0,0x0,8
tick,0x7ff86ea82704,27723269,0,0x0,8
tick,0x7ff86ea82704,27725172,0,0x0,8
tick,0x7ff86ea82704,27726870,0,0x0,8
tick,0x7ff86ea82704,27728912,0,0x0,8
tick,0x7ff86ea82704,27730790,0,0x0,8
tick,0x7ff86ea82704,27732914,0,0x0,8
tick,0x7ff86ea82704,27734900,0,0x0,8
tick,0x7ff86ea82704,27736868,0,0x0,8
tick,0x7ff86ea82704,27738839,0,0x0,8
tick,0x7ff86ea82704,27741876,0,0x0,8
tick,0x7ff86ea82704,27743956,0,0x0,8
tick,0x7ff86ea82704,27745761,0,0x0,8
tick,0x7ff86ea82704,27747820,0,0x0,8
tick,0x7ff86ea82704,27749870,0,0x0,8
tick,0x7ff86ea82704,27751778,0,0x0,8
tick,0x7ff86ea82704,27753795,0,0x0,8
tick,0x7ff86ea82704,27755981,0,0x0,8
tick,0x7ff86ea82704,27758527,0,0x0,8
tick,0x7ff86ea82704,27759717,0,0x0,8
tick,0x7ff86ea82704,27761760,0,0x0,8
tick,0x7ff86ea82704,27763721,0,0x0,8
tick,0x7ff86ea82704,27765770,0,0x0,8
tick,0x7ff86ea82704,27767773,0,0x0,8
tick,0x7ff86ea82704,27769782,0,0x0,8
tick,0x7ff86ea82704,27771714,0,0x0,8
tick,0x7ff86ea82704,27774236,0,0x0,8
tick,0x7ff86ea82704,27775762,0,0x0,8
tick,0x7ff86ea82704,27777663,0,0x0,8
tick,0x7ff86ea82704,27779967,0,0x0,8
tick,0x7ff86ea82704,27781622,0,0x0,8
tick,0x7ff86ea82704,27783997,0,0x0,8
tick,0x7ff86ea82704,27785959,0,0x0,8
tick,0x7ff86ea82704,27787745,0,0x0,8
tick,0x7ff86ea82704,27791633,0,0x0,8
tick,0x7ff86ea82704,27793711,0,0x0,8
tick,0x7ff86ea82704,27795723,0,0x0,8
tick,0x7ff86ea82704,27797521,0,0x0,8
tick,0x7ff86ea82704,27799736,0,0x0,8
tick,0x7ff86ea82704,27801689,0,0x0,8
tick,0x7ff86ea82704,27803797,0,0x0,8
tick,0x7ff86ea82704,27805511,0,0x0,8
tick,0x7ff86ea82704,27808284,0,0x0,8
tick,0x7ff86ea82704,27809657,0,0x0,8
tick,0x7ff86ea82704,27811916,0,0x0,8
tick,0x7ff86ea82704,27813657,0,0x0,8
tick,0x7ff86ea82704,27815675,0,0x0,8
tick,0x7ff86ea82704,27817634,0,0x0,8
tick,0x7ff86ea82704,27819588,0,0x0,8
tick,0x7ff86ea82704,27821636,0,0x0,8
tick,0x7ff86ea82704,27824149,0,0x0,8
tick,0x7ff86ea82704,27825466,0,0x0,8
tick,0x7ff86ea82704,27827853,0,0x0,8
tick,0x7ff86ea82704,27829559,0,0x0,8
tick,0x7ff86ea82704,27831621,0,0x0,8
tick,0x7ff86ea82704,27833457,0,0x0,8
tick,0x7ff86ea82704,27835714,0,0x0,8
tick,0x7ff86ea82704,27837604,0,0x0,8
tick,0x7ff86ea82704,27839984,0,0x0,8
tick,0x7ff86ea82704,27842565,0,0x0,8
tick,0x7ff86ea82704,27844650,0,0x0,8
tick,0x7ff86ea82704,27846525,0,0x0,8
tick,0x7ff86ea82704,27848465,0,0x0,8
tick,0x7ff86ea82704,27850498,0,0x0,8
tick,0x7ff86ea82704,27852499,0,0x0,8
tick,0x7ff86ea82704,27854426,0,0x0,8
tick,0x7ff86ea82704,27856938,0,0x0,8
tick,0x7ff86ea82704,27859013,0,0x0,8
tick,0x7ff86ea82704,27860484,0,0x0,8
tick,0x7ff86ea82704,27862563,0,0x0,8
tick,0x7ff86ea82704,27864504,0,0x0,8
tick,0x7ff86ea82704,27866506,0,0x0,8
tick,0x7ff86ea82704,27868535,0,0x0,8
tick,0x7ff86ea82704,27870481,0,0x0,8
tick,0x7ff86ea82704,27872342,0,0x0,8
tick,0x7ff86ea82704,27875150,0,0x0,8
tick,0x7ff86ea82704,27877710,0,0x0,8
tick,0x7ff86ea82704,27879299,0,0x0,8
tick,0x7ff86ea82704,27881671,0,0x0,8
tick,0x7ff86ea82704,27883360,0,0x0,8
tick,0x7ff86ea82704,27885579,0,0x0,8
tick,0x7ff86ea82704,27887403,0,0x0,8
tick,0x7ff86ea82704,27889708,0,0x0,8
tick,0x7ff86ea82704,27891919,0,0x0,8
tick,0x7ff86ea82704,27894423,0,0x0,8
tick,0x7ff86ea82704,27895505,0,0x0,8
tick,0x7ff86ea82704,27897571,0,0x0,8
tick,0x7ff86ea82704,27899516,0,0x0,8
tick,0x7ff86ea82704,27901511,0,0x0,8
tick,0x7ff86ea82704,27903400,0,0x0,8
tick,0x7ff86ea82704,27905618,0,0x0,8
tick,0x7ff86ea82704,27908010,0,0x0,8
tick,0x7ff86ea82704,27909674,0,0x0,8
tick,0x7ff86ea82704,27911626,0,0x0,8
tick,0x7ff86ea82704,27913711,0,0x0,8
tick,0x7ff86ea82704,27915442,0,0x0,8
tick,0x7ff86ea82704,27917419,0,0x0,8
tick,0x7ff86ea82704,27919417,0,0x0,8
tick,0x7ff86ea82704,27921455,0,0x0,8
tick,0x7ff86ea82704,27923813,0,0x0,8
tick,0x7ff86ea82704,27925496,0,0x0,8
tick,0x7ff86ea82704,27927365,0,0x0,8
tick,0x7ff86ea82704,27929777,0,0x0,8
tick,0x7ff86ea82704,27931411,0,0x0,8
tick,0x7ff86ea82704,27933234,0,0x0,8
tick,0x7ff86ea82704,27935362,0,0x0,8
tick,0x7ff86ea82704,27937378,0,0x0,8
tick,0x7ff86ea82704,27939298,0,0x0,8
tick,0x7ff86ea82704,27941753,0,0x0,8
tick,0x7ff86ea82704,27943554,0,0x0,8
tick,0x7ff86ea82704,27945789,0,0x0,8
tick,0x7ff86ea82704,27947407,0,0x0,8
tick,0x7ff86ea82704,27949191,0,0x0,8
tick,0x7ff86ea82704,27951528,0,0x0,8
tick,0x7ff86ea82704,27953276,0,0x0,8
tick,0x7ff86ea82704,27955209,0,0x0,8
tick,0x7ff86ea82704,27958239,0,0x0,8
tick,0x7ff86ea82704,27959773,0,0x0,8
tick,0x7ff86ea82704,27961174,0,0x0,8
tick,0x7ff86ea82704,27963222,0,0x0,8
tick,0x7ff86ea82704,27965193,0,0x0,8
tick,0x7ff86ea82704,27967360,0,0x0,8
tick,0x7ff86ea82704,27969239,0,0x0,8
tick,0x7ff86ea82704,27971102,0,0x0,8
tick,0x7ff86ea82704,27973723,0,0x0,8
tick,0x7ff86ea82704,27976118,0,0x0,8
tick,0x7ff86ea82704,27977167,0,0x0,8
tick,0x7ff86ea82704,27979192,0,0x0,8
tick,0x7ff86ea82704,27981272,0,0x0,8
tick,0x7ff86ea82704,27983269,0,0x0,8
tick,0x7ff86ea82704,27985228,0,0x0,8
tick,0x7ff86ea82704,27987234,0,0x0,8
tick,0x7ff86ea82704,27989235,0,0x0,8
tick,0x7ff86ea82704,27992130,0,0x0,8
tick,0x7ff86ea82704,27993415,0,0x0,8
tick,0x7ff86ea82704,27995115,0,0x0,8
tick,0x7ff86ea82704,27997010,0,0x0,8
tick,0x7ff86ea82704,27999133,0,0x0,8
tick,0x7ff86ea82704,28001026,0,0x0,8
tick,0x7ff86ea82704,28003021,0,0x0,8
tick,0x7ff86ea82704,28005048,0,0x0,8
tick,0x7ff86ea82704,28008159,0,0x0,8
tick,0x7ff86ea82704,28009044,0,0x0,8
tick,0x7ff86ea82704,28011017,0,0x0,8
tick,0x7ff86ea82704,28013072,0,0x0,8
tick,0x7ff86ea82704,28015278,0,0x0,8
tick,0x7ff86ea82704,28017136,0,0x0,8
tick,0x7ff86ea82704,28018981,0,0x0,8
tick,0x7ff86ea82704,28021347,0,0x0,8
tick,0x7ff86ea82704,28024967,0,0x0,8
tick,0x7ff86ea82704,28025953,0,0x0,8
tick,0x7ff86ea82704,28028046,0,0x0,8
tick,0x7ff86ea82704,28029998,0,0x0,8
tick,0x7ff86ea82704,28032092,0,0x0,8
tick,0x7ff86ea82704,28034061,0,0x0,8
tick,0x7ff86ea82704,28036022,0,0x0,8
tick,0x7ff86ea82704,28037945,0,0x0,8
tick,0x7ff86ea82704,28040416,0,0x0,8
tick,0x7ff86ea82704,28042111,0,0x0,8
tick,0x7ff86ea82704,28043877,0,0x0,8
tick,0x7ff86ea82704,28045926,0,0x0,8
tick,0x7ff86ea82704,28047909,0,0x0,8
tick,0x7ff86ea82704,28050022,0,0x0,8
tick,0x7ff86ea82704,28052006,0,0x0,8
tick,0x7ff86ea82704,28054008,0,0x0,8
tick,0x7ff86ea82704,28056524,0,0x0,8
tick,0x7ff86ea82704,28058185,0,0x0,8
tick,0x7ff86ea82704,28059996,0,0x0,8
tick,0x7ff86ea82704,28061861,0,0x0,8
tick,0x7ff86ea82704,28063882,0,0x0,8
tick,0x7ff86ea82704,28066035,0,0x0,8
tick,0x7ff86ea82704,28068709,0,0x0,8
tick,0x7ff86ea82704,28069933,0,0x0,8
tick,0x7ff86ea82704,28072201,0,0x0,8
tick,0x7ff86ea82704,28076003,0,0x0,8
tick,0x7ff86ea82704,28077984,0,0x0,8
tick,0x7ff86ea82704,28079043,0,0x0,8
tick,0x7ff86ea82704,28083137,0,0x0,8
tick,0x7ff86ea82704,28083914,0,0x0,8
tick,0x7ff86ea82704,28085807,0,0x0,8
tick,0x7ff86ea82704,28087855,0,0x0,8
tick,0x7ff86ea82704,28089945,0,0x0,8
tick,0x7ff86ea82704,28092652,0,0x0,8
tick,0x7ff86ea82704,28094907,0,0x0,8
tick,0x7ff86ea82704,28096821,0,0x0,8
tick,0x7ff86ea82704,28099127,0,0x0,8
tick,0x7ff86ea82704,28100692,0,0x0,8
tick,0x7ff86ea82704,28102783,0,0x0,8
tick,0x7ff86ea82704,28104702,0,0x0,8
tick,0x7ff86ea82704,28109441,0,0x0,8
tick,0x7ff86ea82704,28111355,0,0x0,8
tick,0x7ff86ea82704,28112974,0,0x0,8
tick,0x7ff86ea82704,28114881,0,0x0,8
tick,0x7ff86ea82704,28116998,0,0x0,8
tick,0x7ff86ea82704,28118844,0,0x0,8
tick,0x7ff86ea82704,28120906,0,0x0,8
tick,0x7ff86ea82704,28125099,0,0x0,8
tick,0x7ff86ea82704,28127275,0,0x0,8
tick,0x7ff86ea82704,28127747,0,0x0,8
tick,0x7ff86ea82704,28128944,0,0x0,8
tick,0x7ff86ea82704,28130722,0,0x0,8
tick,0x7ff86ea82704,28132916,0,0x0,8
tick,0x7ff86ea82704,28134609,0,0x0,8
tick,0x7ff86ea82704,28136792,0,0x0,8
tick,0x7ff86ea82704,28138580,0,0x0,8
tick,0x7ff86ea82704,28141662,0,0x0,8
tick,0x7ff86ea82704,28143987,0,0x0,8
tick,0x7ff86ea82704,28145813,0,0x0,8
tick,0x7ff86ea82704,28147775,0,0x0,8
tick,0x7ff86ea82704,28149765,0,0x0,8
tick,0x7ff86ea82704,28151742,0,0x0,8
tick,0x7ff86ea82704,28153649,0,0x0,8
tick,0x7ff86ea82704,28155663,0,0x0,8
tick,0x7ff86ea82704,28159739,0,0x0,8
tick,0x7ff86ea82704,28161003,0,0x0,8
tick,0x7ff86ea82704,28163360,0,0x0,8
tick,0x7ff86ea82704,28165880,0,0x0,8
tick,0x7ff86ea82704,28167811,0,0x0,8
tick,0x7ff86ea82704,28169757,0,0x0,8
tick,0x7ff86ea82704,28171829,0,0x0,8
tick,0x7ff86ea82704,28176257,0,0x0,8
tick,0x7ff86ea82704,28177207,0,0x0,8
tick,0x7ff86ea82704,28179290,0,0x0,8
tick,0x7ff86ea82704,28180751,0,0x0,8
tick,0x7ff86ea82704,28182800,0,0x0,8
tick,0x7ff86ea82704,28184995,0,0x0,8
tick,0x7ff86ea82704,28187834,0,0x0,8
tick,0x7ff86ea82704,28190491,0,0x0,8
tick,0x7ff86ea82704,28196768,0,0x0,8
tick,0x7ff86ea82704,28198819,0,0x0,8
tick,0x7ff86ea82704,28200630,0,0x0,8
tick,0x7ff86ea82704,28203073,0,0x0,8
tick,0x7ff86ea82704,28204732,0,0x0,8
tick,0x7ff86ea82704,28208592,0,0x0,8
tick,0x7ff86ea82704,28210225,0,0x0,8
tick,0x7ff86ea82704,28211761,0,0x0,8
tick,0x7ff86ea82704,28213662,0,0x0,8
tick,0x7ff86ea82704,28215644,0,0x0,8
tick,0x7ff86ea82704,28217590,0,0x0,8
tick,0x7ff86ea82704,28219720,0,0x0,8
tick,0x7ff86ea82704,28221631,0,0x0,8
tick,0x7ff86ea82704,28224464,0,0x0,8
tick,0x7ff86ea82704,28226880,0,0x0,8
tick,0x7ff86ea82704,28228803,0,0x0,8
tick,0x7ff86ea82704,28230707,0,0x0,8
tick,0x7ff86ea82704,28232539,0,0x0,8
tick,0x7ff86ea82704,28234693,0,0x0,8
tick,0x7ff86ea82704,28236449,0,0x0,8
tick,0x7ff86ea82704,28238554,0,0x0,8
tick,0x7ff86ea82704,28241459,0,0x0,8
tick,0x7ff86ea82704,28243335,0,0x0,8
tick,0x7ff86ea82704,28244627,0,0x0,8
tick,0x7ff86ea82704,28246498,0,0x0,8
tick,0x7ff86ea82704,28248615,0,0x0,8
tick,0x7ff86ea82704,28250588,0,0x0,8
tick,0x7ff86ea82704,28252464,0,0x0,8
tick,0x7ff86ea82704,28254599,0,0x0,8
tick,0x7ff86ea82704,28256812,0,0x0,8
tick,0x7ff86ea82704,28259821,0,0x0,8
tick,0x7ff86ea82704,28261522,0,0x0,8
tick,0x7ff86ea82704,28263516,0,0x0,8
tick,0x7ff86ea82704,28265491,0,0x0,8
tick,0x7ff86ea82704,28267711,0,0x0,8
tick,0x7ff86ea82704,28269546,0,0x0,8
tick,0x7ff86ea82704,28271828,0,0x0,8
tick,0x7ff86ea82704,28275136,0,0x0,8
tick,0x7ff86ea82704,28276403,0,0x0,8
tick,0x7ff86ea82704,28278290,0,0x0,8
tick,0x7ff86ea82704,28280881,0,0x0,8
tick,0x7ff86ea82704,28282783,0,0x0,8
tick,0x7ff86ea82704,28284330,0,0x0,8
tick,0x7ff86ea82704,28286303,0,0x0,8
tick,0x7ff86ea82704,28288349,0,0x0,8
tick,0x7ff86ea82704,28290952,0,0x0,8
tick,0x7ff86ea82704,28292701,0,0x0,8
tick,0x7ff86ea82704,28294265,0,0x0,8
tick,0x7ff86ea82704,28296969,0,0x0,8
tick,0x7ff86ea82704,28298301,0,0x0,8
tick,0x7ff86ea82704,28300480,0,0x0,8
tick,0x7ff86ea82704,28302244,0,0x0,8
tick,0x7ff86ea82704,28304298,0,0x0,8
tick,0x7ff86ea82704,28306671,0,0x0,8
tick,0x7ff86ea82704,28308663,0,0x0,8
tick,0x7ff86ea82704,28310280,0,0x0,8
tick,0x7ff86ea82704,28312186,0,0x0,8
tick,0x7ff86ea82704,28314331,0,0x0,8
tick,0x7ff86ea82704,28316374,0,0x0,8
tick,0x7ff86ea82704,28318253,0,0x0,8
tick,0x7ff86ea82704,28320104,0,0x0,8
tick,0x7ff86ea82704,28322265,0,0x0,8
tick,0x7ff86ea82704,28324813,0,0x0,8
tick,0x7ff86ea82704,28326280,0,0x0,8
tick,0x7ff86ea82704,28328375,0,0x0,8
tick,0x7ff86ea82704,28331292,0,0x0,8
tick,0x7ff86ea82704,28332924,0,0x0,8
tick,0x7ff86ea82704,28334187,0,0x0,8
tick,0x7ff86ea82704,28336230,0,0x0,8
tick,0x7ff86ea82704,28338082,0,0x0,8
tick,0x7ff86ea82704,28340863,0,0x0,8
tick,0x7ff86ea82704,28342746,0,0x0,8
tick,0x7ff86ea82704,28344802,0,0x0,8
tick,0x7ff86ea82704,28346561,0,0x0,8
tick,0x7ff86ea82704,28348323,0,0x0,8
tick,0x7ff86ea82704,28350340,0,0x0,8
tick,0x7ff86ea82704,28352371,0,0x0,8
tick,0x7ff86ea82704,28354304,0,0x0,8
tick,0x7ff86ea82704,28356390,0,0x0,8
tick,0x7ff86ea82704,28358471,0,0x0,8
tick,0x7ff86ea82704,28360827,0,0x0,8
tick,0x7ff86ea82704,28362269,0,0x0,8
tick,0x7ff86ea82704,28364177,0,0x0,8
tick,0x7ff86ea82704,28366737,0,0x0,8
tick,0x7ff86ea82704,28369479,0,0x0,8
tick,0x7ff86ea82704,28371487,0,0x0,8
tick,0x7ff86ea82704,28374366,0,0x0,8
tick,0x7ff86ea82704,28376895,0,0x0,8
tick,0x7ff86ea82704,28378244,0,0x0,8
tick,0x7ff86ea82704,28380084,0,0x0,8
tick,0x7ff86ea82704,28382293,0,0x0,8
tick,0x7ff86ea82704,28384121,0,0x0,8
tick,0x7ff86ea82704,28386296,0,0x0,8
tick,0x7ff86ea82704,28388267,0,0x0,8
tick,0x7ff86ea82704,28390476,0,0x0,8
tick,0x7ff86ea82704,28392626,0,0x0,8
tick,0x7ff86ea82704,28394071,0,0x0,8
tick,0x7ff86ea82704,28396321,0,0x0,8
tick,0x7ff86ea82704,28398241,0,0x0,8
tick,0x7ff86ea82704,28400183,0,0x0,8
tick,0x7ff86ea82704,28402107,0,0x0,8
tick,0x7ff86ea82704,28404031,0,0x0,8
tick,0x7ff86ea82704,28406377,0,0x0,8
tick,0x7ff86ea82704,28409273,0,0x0,8
tick,0x7ff86ea82704,28411182,0,0x0,8
tick,0x7ff86ea82704,28413049,0,0x0,8
tick,0x7ff86ea82704,28415311,0,0x0,8
tick,0x7ff86ea82704,28417089,0,0x0,8
tick,0x7ff86ea82704,28419173,0,0x0,8
tick,0x7ff86ea82704,28421411,0,0x0,8
tick,0x7ff86ea82704,28424725,0,0x0,8
tick,0x7ff86ea82704,28425142,0,0x0,8
tick,0x7ff86ea82704,28427470,0,0x0,8
tick,0x7ff86ea82704,28428998,0,0x0,8
tick,0x7ff86ea82704,28431497,0,0x0,8
tick,0x7ff86ea82704,28433407,0,0x0,8
tick,0x7ff86ea82704,28435238,0,0x0,8
tick,0x7ff86ea82704,28437306,0,0x0,8
tick,0x7ff86ea82704,28439683,0,0x0,8
tick,0x7ff86ea82704,28441966,0,0x0,8
tick,0x7ff86ea82704,28443229,0,0x0,8
tick,0x7ff86ea82704,28445220,0,0x0,8
tick,0x7ff86ea82704,28447502,0,0x0,8
tick,0x7ff86ea82704,28448870,0,0x0,8
tick,0x7ff86ea82704,28451189,0,0x0,8
tick,0x7ff86ea82704,28453023,0,0x0,8
tick,0x7ff86ea82704,28455095,0,0x0,8
tick,0x7ff86ea82704,28459087,0,0x0,8
tick,0x7ff86ea82704,28463968,0,0x0,8
tick,0x7ff86ea82704,28464012,0,0x0,8
tick,0x7ff86ea82704,28466070,0,0x0,8
tick,0x7ff86ea82704,28467892,0,0x0,8
tick,0x7ff86ea82704,28469834,0,0x0,8
tick,0x7ff86ea82704,28471892,0,0x0,8
tick,0x7ff86ea82704,28474316,0,0x0,8
tick,0x7ff86ea82704,28476242,0,0x0,8
tick,0x7ff86ea82704,28477790,0,0x0,8
tick,0x7ff86ea82704,28479787,0,0x0,8
tick,0x7ff86ea82704,28481676,0,0x0,8
tick,0x7ff86ea82704,28483810,0,0x0,8
tick,0x7ff86ea82704,28485852,0,0x0,8
tick,0x7ff86ea82704,28487804,0,0x0,8
tick,0x7ff86ea82704,28490977,0,0x0,8
tick,0x7ff86ea82704,28493727,0,0x0,8
tick,0x7ff86ea82704,28493755,0,0x0,8
tick,0x7ff86ea82704,28495747,0,0x0,8
tick,0x7ff86ea82704,28497746,0,0x0,8
tick,0x7ff86ea82704,28499754,0,0x0,8
tick,0x7ff86ea82704,28501758,0,0x0,8
tick,0x7ff86ea82704,28503780,0,0x0,8
tick,0x7ff86ea82704,28507062,0,0x0,8
tick,0x7ff86ea82704,28508682,0,0x0,8
tick,0x7ff86ea82704,28510157,0,0x0,8
tick,0x7ff86ea82704,28511686,0,0x0,8
tick,0x7ff86ea82704,28513743,0,0x0,8
tick,0x7ff86ea82704,28515852,0,0x0,8
tick,0x7ff86ea82704,28517763,0,0x0,8
tick,0x7ff86ea82704,28519627,0,0x0,8
tick,0x7ff86ea82704,28521738,0,0x0,8
tick,0x7ff86ea82704,28523912,0,0x0,8
tick,0x7ff86ea82704,28526106,0,0x0,8
tick,0x7ff86ea82704,28527944,0,0x0,8
tick,0x7ff86ea82704,28529676,0,0x0,8
tick,0x7ff86ea82704,28531560,0,0x0,8
tick,0x7ff86ea82704,28533750,0,0x0,8
tick,0x7ff86ea82704,28535708,0,0x0,8
tick,0x7ff86ea82704,28537826,0,0x0,8
tick,0x7ff86ea82704,28542372,0,0x0,8
tick,0x7ff86ea82704,28543302,0,0x0,8
tick,0x7ff86ea82704,28544822,0,0x0,8
tick,0x7ff86ea82704,28547047,0,0x0,8
tick,0x7ff86ea82704,28548673,0,0x0,8
tick,0x7ff86ea82704,28550797,0,0x0,8
tick,0x7ff86ea82704,28552767,0,0x0,8
tick,0x7ff86ea82704,28555615,0,0x0,8
tick,0x7ff86ea82704,28557859,0,0x0,8
tick,0x7ff86ea82704,28559636,0,0x0,8
tick,0x7ff86ea82704,28561686,0,0x0,8
tick,0x7ff86ea82704,28563536,0,0x0,8
tick,0x7ff86ea82704,28565623,0,0x0,8
tick,0x7ff86ea82704,28567506,0,0x0,8
tick,0x7ff86ea82704,28569875,0,0x0,8
tick,0x7ff86ea82704,28571874,0,0x0,8
tick,0x7ff86ea82704,28575037,0,0x0,8
tick,0x7ff86ea82704,28575920,0,0x0,8
tick,0x7ff86ea82704,28577569,0,0x0,8
tick,0x7ff86ea82704,28579640,0,0x0,8
tick,0x7ff86ea82704,28581461,0,0x0,8
tick,0x7ff86ea82704,28583526,0,0x0,8
tick,0x7ff86ea82704,28585532,0,0x0,8
tick,0x7ff86ea82704,28587721,0,0x0,8
tick,0x7ff86ea82704,28589818,0,0x0,8
tick,0x7ff86ea82704,28591789,0,0x0,8
tick,0x7ff86ea82704,28593449,0,0x0,8
tick,0x7ff86ea82704,28595574,0,0x0,8
tick,0x7ff86ea82704,28597625,0,0x0,8
tick,0x7ff86ea82704,28599781,0,0x0,8
tick,0x7ff86ea82704,28601489,0,0x0,8
tick,0x7ff86ea82704,28603601,0,0x0,8
tick,0x7ff86ea82704,28605578,0,0x0,8
tick,0x7ff86ea82704,28607842,0,0x0,8
tick,0x7ff86ea82704,28609581,0,0x0,8
tick,0x7ff86ea82704,28611618,0,0x0,8
tick,0x7ff86ea82704,28613990,0,0x0,8
tick,0x7ff86ea82704,28615372,0,0x0,8
tick,0x7ff86ea82704,28617441,0,0x0,8
tick,0x7ff86ea82704,28619448,0,0x0,8
tick,0x7ff86ea82704,28621514,0,0x0,8
tick,0x7ff86ea82704,28624664,0,0x0,8
tick,0x7ff86ea82704,28627226,0,0x0,8
tick,0x7ff86ea82704,28627648,0,0x0,8
tick,0x7ff86ea82704,28629401,0,0x0,8
tick,0x7ff86ea82704,28631503,0,0x0,8
tick,0x7ff86ea82704,28633504,0,0x0,8
tick,0x7ff86ea82704,28635507,0,0x0,8
tick,0x7ff86ea82704,28637427,0,0x0,8
tick,0x7ff86ea82704,28639409,0,0x0,8
tick,0x7ff86ea82704,28645448,0,0x0,8
tick,0x7ff86ea82704,28646438,0,0x0,8
tick,0x7ff86ea82704,28648363,0,0x0,8
tick,0x7ff86ea82704,28650270,0,0x0,8
tick,0x7ff86ea82704,28652234,0,0x0,8
tick,0x7ff86ea82704,28654355,0,0x0,8
tick,0x7ff86ea82704,28657811,0,0x0,8
tick,0x7ff86ea82704,28659394,0,0x0,8
tick,0x7ff86ea82704,28660255,0,0x0,8
tick,0x7ff86ea82704,28662384,0,0x0,8
tick,0x7ff86ea82704,28664208,0,0x0,8
tick,0x7ff86ea82704,28666803,0,0x0,8
tick,0x7ff86ea82704,28668327,0,0x0,8
tick,0x7ff86ea82704,28670294,0,0x0,8
tick,0x7ff86ea82704,28672294,0,0x0,8
tick,0x7ff86ea82704,28675946,0,0x0,8
tick,0x7ff86ea82704,28676660,0,0x0,8
tick,0x7ff86ea82704,28678366,0,0x0,8
tick,0x7ff86ea82704,28680286,0,0x0,8
tick,0x7ff86ea82704,28682330,0,0x0,8
tick,0x7ff86ea82704,28684260,0,0x0,8
tick,0x7ff86ea82704,28686272,0,0x0,8
tick,0x7ff86ea82704,28688251,0,0x0,8
tick,0x7ff86ea82704,28691307,0,0x0,8
tick,0x7ff86ea82704,28692690,0,0x0,8
tick,0x7ff86ea82704,28694232,0,0x0,8
tick,0x7ff86ea82704,28696296,0,0x0,8
tick,0x7ff86ea82704,28698143,0,0x0,8
tick,0x7ff86ea82704,28700177,0,0x0,8
tick,0x7ff86ea82704,28702220,0,0x0,8
tick,0x7ff86ea82704,28704512,0,0x0,8
tick,0x7ff86ea82704,28706557,0,0x0,8
tick,0x7ff86ea82704,28709003,0,0x0,8
tick,0x7ff86ea82704,28710181,0,0x0,8
tick,0x7ff86ea82704,28712144,0,0x0,8
tick,0x7ff86ea82704,28714093,0,0x0,8
tick,0x7ff86ea82704,28716102,0,0x0,8
tick,0x7ff86ea82704,28718072,0,0x0,8
tick,0x7ff86ea82704,28720084,0,0x0,8
tick,0x7ff86ea82704,28722062,0,0x0,8
tick,0x7ff86ea82704,28725490,0,0x0,8
tick,0x7ff86ea82704,28726270,0,0x0,8
tick,0x7ff86ea82704,28728392,0,0x0,8
tick,0x7ff86ea82704,28730240,0,0x0,8
tick,0x7ff86ea82704,28732106,0,0x0,8
tick,0x7ff86ea82704,28734152,0,0x0,8
tick,0x7ff86ea82704,28736149,0,0x0,8
tick,0x7ff86ea82704,28738174,0,0x0,8
tick,0x7ff86ea82704,28740419,0,0x0,8
tick,0x7ff86ea82704,28742731,0,0x0,8
tick,0x7ff86ea82704,28744030,0,0x0,8
tick,0x7ff86ea82704,28746015,0,0x0,8
tick,0x7ff86ea82704,28748092,0,0x0,8
tick,0x7ff86ea82704,28750048,0,0x0,8
tick,0x7ff86ea82704,28752062,0,0x0,8
tick,0x7ff86ea82704,28754124,0,0x0,8
tick,0x7ff86ea82704,28755959,0,0x0,8
tick,0x7ff86ea82704,28758288,0,0x0,8
tick,0x7ff86ea82704,28760038,0,0x0,8
tick,0x7ff86ea82704,28762164,0,0x0,8
tick,0x7ff86ea82704,28764092,0,0x0,8
tick,0x7ff86ea82704,28766069,0,0x0,8
tick,0x7ff86ea82704,28768022,0,0x0,8
tick,0x7ff86ea82704,28770078,0,0x0,8
tick,0x7ff86ea82704,28772080,0,0x0,8
tick,0x7ff86ea82704,28774613,0,0x0,8
tick,0x7ff86ea82704,28775996,0,0x0,8
tick,0x7ff86ea82704,28778024,0,0x0,8
tick,0x7ff86ea82704,28779954,0,0x0,8
tick,0x7ff86ea82704,28782047,0,0x0,8
tick,0x7ff86ea82704,28783997,0,0x0,8
tick,0x7ff86ea82704,28785923,0,0x0,8
tick,0x7ff86ea82704,28787947,0,0x0,8
tick,0x7ff86ea82704,28790372,0,0x0,8
tick,0x7ff86ea82704,28792218,0,0x0,8
tick,0x7ff86ea82704,28793908,0,0x0,8
tick,0x7ff86ea82704,28796191,0,0x0,8
tick,0x7ff86ea82704,28798111,0,0x0,8
tick,0x7ff86ea82704,28799920,0,0x0,8
tick,0x7ff86ea82704,28801900,0,0x0,8
tick,0x7ff86ea82704,28803919,0,0x0,8
tick,0x7ff86ea82704,28805896,0,0x0,8
tick,0x7ff86ea82704,28809192,0,0x0,8
tick,0x7ff86ea82704,28811009,0,0x0,8
tick,0x7ff86ea82704,28812954,0,0x0,8
tick,0x7ff86ea82704,28815066,0,0x0,8
tick,0x7ff86ea82704,28816871,0,0x0,8
tick,0x7ff86ea82704,28818885,0,0x0,8
tick,0x7ff86ea82704,28820972,0,0x0,8
tick,0x7ff86ea82704,28823103,0,0x0,8
tick,0x7ff86ea82704,28825369,0,0x0,8
tick,0x7ff86ea82704,28826849,0,0x0,8
tick,0x7ff86ea82704,28828928,0,0x0,8
tick,0x7ff86ea82704,28831062,0,0x0,8
tick,0x7ff86ea82704,28832845,0,0x0,8
tick,0x7ff86ea82704,28834836,0,0x0,8
tick,0x7ff86ea82704,28836860,0,0x0,8
tick,0x7ff86ea82704,28838837,0,0x0,8
tick,0x7ff86ea82704,28841290,0,0x0,8
tick,0x7ff86ea82704,28842866,0,0x0,8
tick,0x7ff86ea82704,28844900,0,0x0,8
tick,0x7ff86ea82704,28847110,0,0x0,8
tick,0x7ff86ea82704,28848821,0,0x0,8
tick,0x7ff86ea82704,28850779,0,0x0,8
tick,0x7ff86ea82704,28852970,0,0x0,8
tick,0x7ff86ea82704,28855260,0,0x0,8
tick,0x7ff86ea82704,28856962,0,0x0,8
tick,0x7ff86ea82704,28859151,0,0x0,8
tick,0x7ff86ea82704,28860772,0,0x0,8
tick,0x7ff86ea82704,28862698,0,0x0,8
tick,0x7ff86ea82704,28864814,0,0x0,8
tick,0x7ff86ea82704,28867252,0,0x0,8
tick,0x7ff86ea82704,28869223,0,0x0,8
tick,0x7ff86ea82704,28870867,0,0x0,8
tick,0x7ff86ea82704,28873298,0,0x0,8
tick,0x7ff86ea82704,28875161,0,0x0,8
tick,0x7ff86ea82704,28876711,0,0x0,8
tick,0x7ff86ea82704,28878878,0,0x0,8
tick,0x7ff86ea82704,28880817,0,0x0,8
tick,0x7ff86ea82704,28882715,0,0x0,8
tick,0x7ff86ea82704,28884694,0,0x0,8
tick,0x7ff86ea82704,28886716,0,0x0,8
tick,0x7ff86ea82704,28888775,0,0x0,8
tick,0x7ff86ea82704,28891688,0,0x0,8
tick,0x7ff86ea82704,28893200,0,0x0,8
tick,0x7ff86ea82704,28894874,0,0x0,8
tick,0x7ff86ea82704,28896770,0,0x0,8
tick,0x7ff86ea82704,28898903,0,0x0,8
tick,0x7ff86ea82704,28900798,0,0x0,8
tick,0x7ff86ea82704,28902943,0,0x0,8
tick,0x7ff86ea82704,28904913,0,0x0,8
tick,0x7ff86ea82704,28907237,0,0x0,8
tick,0x7ff86ea82704,28909287,0,0x0,8
tick,0x7ff86ea82704,28910768,0,0x0,8
tick,0x7ff86ea82704,28912674,0,0x0,8
tick,0x7ff86ea82704,28914622,0,0x0,8
tick,0x7ff86ea82704,28916524,0,0x0,8
tick,0x7ff86ea82704,28918663,0,0x0,8
tick,0x7ff86ea82704,28920559,0,0x0,8
tick,0x7ff86ea82704,28922590,0,0x0,8
tick,0x7ff86ea82704,28925083,0,0x0,8
tick,0x7ff86ea82704,28926737,0,0x0,8
tick,0x7ff86ea82704,28928575,0,0x0,8
tick,0x7ff86ea82704,28930543,0,0x0,8
tick,0x7ff86ea82704,28932549,0,0x0,8
tick,0x7ff86ea82704,28934616,0,0x0,8
tick,0x7ff86ea82704,28936527,0,0x0,8
tick,0x7ff86ea82704,28938577,0,0x0,8
tick,0x7ff86ea82704,28940811,0,0x0,8
tick,0x7ff86ea82704,28942519,0,0x0,8
tick,0x7ff86ea82704,28944586,0,0x0,8
tick,0x7ff86ea82704,28946533,0,0x0,8
tick,0x7ff86ea82704,28948513,0,0x0,8
tick,0x7ff86ea82704,28950453,0,0x0,8
tick,0x7ff86ea82704,28952526,0,0x0,8
tick,0x7ff86ea82704,28954586,0,0x0,8
tick,0x7ff86ea82704,28956561,0,0x0,8
tick,0x7ff86ea82704,28958476,0,0x0,8
tick,0x7ff86ea82704,28960492,0,0x0,8
tick,0x7ff86ea82704,28962476,0,0x0,8
tick,0x7ff86ea82704,28964595,0,0x0,8
tick,0x7ff86ea82704,28966387,0,0x0,8
tick,0x7ff86ea82704,28968454,0,0x0,8
tick,0x7ff86ea82704,28970534,0,0x0,8
tick,0x7ff86ea82704,28972637,0,0x0,8
tick,0x7ff86ea82704,28975433,0,0x0,8
tick,0x7ff86ea82704,28976733,0,0x0,8
tick,0x7ff86ea82704,28978589,0,0x0,8
tick,0x7ff86ea82704,28980623,0,0x0,8
tick,0x7ff86ea82704,28982697,0,0x0,8
tick,0x7ff86ea82704,28984752,0,0x0,8
tick,0x7ff86ea82704,28986591,0,0x0,8
tick,0x7ff86ea82704,28988502,0,0x0,8
tick,0x7ff86ea82704,28991251,0,0x0,8
tick,0x7ff86ea82704,28992501,0,0x0,8
tick,0x7ff86ea82704,28994488,0,0x0,8
tick,0x7ff86ea82704,28996533,0,0x0,8
tick,0x7ff86ea82704,28998531,0,0x0,8
tick,0x7ff86ea82704,29000381,0,0x0,8
tick,0x7ff86ea82704,29002458,0,0x0,8
tick,0x7ff86ea82704,29004455,0,0x0,8
tick,0x7ff86ea82704,29006708,0,0x0,8
tick,0x7ff86ea82704,29008598,0,0x0,8
tick,0x7ff86ea82704,29010385,0,0x0,8
tick,0x7ff86ea82704,29012518,0,0x0,8
tick,0x7ff86ea82704,29014479,0,0x0,8
tick,0x7ff86ea82704,29016470,0,0x0,8
tick,0x7ff86ea82704,29018410,0,0x0,8
tick,0x7ff86ea82704,29020492,0,0x0,8
tick,0x7ff86ea82704,29022630,0,0x0,8
tick,0x7ff86ea82704,29024840,0,0x0,8
tick,0x7ff86ea82704,29026408,0,0x0,8
tick,0x7ff86ea82704,29028409,0,0x0,8
tick,0x7ff86ea82704,29030339,0,0x0,8
tick,0x7ff86ea82704,29032563,0,0x0,8
tick,0x7ff86ea82704,29034372,0,0x0,8
tick,0x7ff86ea82704,29036383,0,0x0,8
tick,0x7ff86ea82704,29038317,0,0x0,8
tick,0x7ff86ea82704,29040837,0,0x0,8
tick,0x7ff86ea82704,29042475,0,0x0,8
tick,0x7ff86ea82704,29044351,0,0x0,8
tick,0x7ff86ea82704,29046417,0,0x0,8
tick,0x7ff86ea82704,29048449,0,0x0,8
tick,0x7ff86ea82704,29050296,0,0x0,8
tick,0x7ff86ea82704,29052441,0,0x0,8
tick,0x7ff86ea82704,29054436,0,0x0,8
tick,0x7ff86ea82704,29057560,0,0x0,8
tick,0x7ff86ea82704,29058499,0,0x0,8
tick,0x7ff86ea82704,29060410,0,0x0,8
tick,0x7ff86ea82704,29062506,0,0x0,8
tick,0x7ff86ea82704,29064475,0,0x0,8
tick,0x7ff86ea82704,29066688,0,0x0,8
tick,0x7ff86ea82704,29068660,0,0x0,8
tick,0x7ff86ea82704,29070535,0,0x0,8
tick,0x7ff86ea82704,29072117,0,0x0,8
tick,0x7ff86ea82704,29074805,0,0x0,8
tick,0x7ff86ea82704,29076150,0,0x0,8
tick,0x7ff86ea82704,29078410,0,0x0,8
tick,0x7ff86ea82704,29080264,0,0x0,8
tick,0x7ff86ea82704,29082327,0,0x0,8
tick,0x7ff86ea82704,29084410,0,0x0,8
tick,0x7ff86ea82704,29086561,0,0x0,8
tick,0x7ff86ea82704,29088519,0,0x0,8
tick,0x7ff86ea82704,29092634,0,0x0,8
tick,0x7ff86ea82704,29092666,0,0x0,8
tick,0x7ff86ea82704,29094312,0,0x0,8
tick,0x7ff86ea82704,29096429,0,0x0,8
tick,0x7ff86ea82704,29098779,0,0x0,8
tick,0x7ff86ea82704,29102440,0,0x0,8
tick,0x7ff86ea82704,29104496,0,0x0,8
tick,0x7ff86ea82704,29107269,0,0x0,8
tick,0x7ff86ea82704,29111313,0,0x0,8
tick,0x7ff86ea82704,29113523,0,0x0,8
tick,0x7ff86ea82704,29115128,0,0x0,8
tick,0x7ff86ea82704,29118206,0,0x0,8
tick,0x7ff86ea82704,29119353,0,0x0,8
tick,0x7ff86ea82704,29121188,0,0x0,8
tick,0x7ff86ea82704,29123592,0,0x0,8
tick,0x7ff86ea82704,29126244,0,0x0,8
tick,0x7ff86ea82704,29128419,0,0x0,8
tick,0x7ff86ea82704,29130183,0,0x0,8
tick,0x7ff86ea82704,29132173,0,0x0,8
tick,0x7ff86ea82704,29134113,0,0x0,8
tick,0x7ff86ea82704,29136189,0,0x0,8
tick,0x7ff86ea82704,29138141,0,0x0,8
tick,0x7ff86ea82704,29140943,0,0x0,8
tick,0x7ff86ea82704,29145213,0,0x0,8
tick,0x7ff86ea82704,29147480,0,0x0,8
tick,0x7ff86ea82704,29149177,0,0x0,8
tick,0x7ff86ea82704,29151362,0,0x0,8
tick,0x7ff86ea82704,29153092,0,0x0,8
tick,0x7ff86ea82704,29155081,0,0x0,8
tick,0x7ff86ea82704,29157904,0,0x0,8
tick,0x7ff86ea82704,29159728,0,0x0,8
tick,0x7ff86ea82704,29161474,0,0x0,8
tick,0x7ff86ea82704,29163128,0,0x0,8
tick,0x7ff86ea82704,29164994,0,0x0,8
tick,0x7ff86ea82704,29167093,0,0x0,8
tick,0x7ff86ea82704,29169096,0,0x0,8
tick,0x7ff86ea82704,29171221,0,0x0,8
tick,0x7ff86ea82704,29173388,0,0x0,8
tick,0x7ff86ea82704,29176367,0,0x0,8
tick,0x7ff86ea82704,29178847,0,0x0,8
tick,0x7ff86ea82704,29181087,0,0x0,8
tick,0x7ff86ea82704,29183047,0,0x0,8
tick,0x7ff86ea82704,29185026,0,0x0,8
tick,0x7ff86ea82704,29187021,0,0x0,8
tick,0x7ff86ea82704,29188976,0,0x0,8
tick,0x7ff86ea82704,29191451,0,0x0,8
tick,0x7ff86ea82704,29193738,0,0x0,8
tick,0x7ff86ea82704,29194880,0,0x0,8
tick,0x7ff86ea82704,29196856,0,0x0,8
tick,0x7ff86ea82704,29198887,0,0x0,8
tick,0x7ff86ea82704,29200862,0,0x0,8
tick,0x7ff86ea82704,29202957,0,0x0,8
tick,0x7ff86ea82704,29205589,0,0x0,8
tick,0x7ff86ea82704,29208279,0,0x0,8
tick,0x7ff86ea82704,29210555,0,0x0,8
tick,0x7ff86ea82704,29212550,0,0x0,8
tick,0x7ff86ea82704,29214396,0,0x0,8
tick,0x7ff86ea82704,29216110,0,0x0,8
tick,0x7ff86ea82704,29217952,0,0x0,8
tick,0x7ff86ea82704,29220757,0,0x0,8
tick,0x7ff86ea82704,29222160,0,0x0,8
tick,0x7ff86ea82704,29226273,0,0x0,8
tick,0x7ff86ea82704,29227569,0,0x0,8
tick,0x7ff86ea82704,29228730,0,0x0,8
tick,0x7ff86ea82704,29231015,0,0x0,8
tick,0x7ff86ea82704,29232879,0,0x0,8
tick,0x7ff86ea82704,29234981,0,0x0,8
tick,0x7ff86ea82704,29236808,0,0x0,8
tick,0x7ff86ea82704,29239371,0,0x0,8
tick,0x7ff86ea82704,29241762,0,0x0,8
tick,0x7ff86ea82704,29242976,0,0x0,8
tick,0x7ff86ea82704,29244987,0,0x0,8
tick,0x7ff86ea82704,29247273,0,0x0,8
tick,0x7ff86ea82704,29249129,0,0x0,8
tick,0x7ff86ea82704,29252988,0,0x0,8
tick,0x7ff86ea82704,29253018,0,0x0,8
tick,0x7ff86ea82704,29257344,0,0x0,8
tick,0x7ff86ea82704,29257371,0,0x0,8
tick,0x7ff86ea82704,29259863,0,0x0,8
tick,0x7ff86ea82704,29262082,0,0x0,8
tick,0x7ff86ea82704,29263910,0,0x0,8
tick,0x7ff86ea82704,29265730,0,0x0,8
tick,0x7ff86ea82704,29267757,0,0x0,8
tick,0x7ff86ea82704,29269791,0,0x0,8
tick,0x7ff86ea82704,29272016,0,0x0,8
tick,0x7ff86ea82704,29273934,0,0x0,8
tick,0x7ff86ea82704,29276074,0,0x0,8
tick,0x7ff86ea82704,29277752,0,0x0,8
tick,0x7ff86ea82704,29279840,0,0x0,8
tick,0x7ff86ea82704,29281706,0,0x0,8
tick,0x7ff86ea82704,29283797,0,0x0,8
tick,0x7ff86ea82704,29285815,0,0x0,8
tick,0x7ff86ea82704,29287759,0,0x0,8
tick,0x7ff86ea82704,29289808,0,0x0,8
tick,0x7ff86ea82704,29291842,0,0x0,8
tick,0x7ff86ea82704,29293670,0,0x0,8
tick,0x7ff86ea82704,29298352,0,0x0,8
tick,0x7ff86ea82704,29298890,0,0x0,8
tick,0x7ff86ea82704,29301726,0,0x0,8
tick,0x7ff86ea82704,29304183,0,0x0,8
tick,0x7ff86ea82704,29304653,0,0x0,8
tick,0x7ff86ea82704,29306617,0,0x0,8
tick,0x7ff86ea82704,29308978,0,0x0,8
tick,0x7ff86ea82704,29310662,0,0x0,8
tick,0x7ff86ea82704,29313637,0,0x0,8
tick,0x7ff86ea82704,29315531,0,0x0,8
tick,0x7ff86ea82704,29316613,0,0x0,8
tick,0x7ff86ea82704,29318977,0,0x0,8
tick,0x7ff86ea82704,29320792,0,0x0,8
tick,0x7ff86ea82704,29322717,0,0x0,8
tick,0x7ff86ea82704,29326044,0,0x0,8
tick,0x7ff86ea82704,29328256,0,0x0,8
tick,0x7ff86ea82704,29329566,0,0x0,8
tick,0x7ff86ea82704,29331727,0,0x0,8
tick,0x7ff86ea82704,29333545,0,0x0,8
tick,0x7ff86ea82704,29336067,0,0x0,8
tick,0x7ff86ea82704,29338378,0,0x0,8
tick,0x7ff86ea82704,29340828,0,0x0,8
tick,0x7ff86ea82704,29343140,0,0x0,8
tick,0x7ff86ea82704,29344537,0,0x0,8
tick,0x7ff86ea82704,29346583,0,0x0,8
tick,0x7ff86ea82704,29348826,0,0x0,8
tick,0x7ff86ea82704,29350432,0,0x0,8
tick,0x7ff86ea82704,29352615,0,0x0,8
tick,0x7ff86ea82704,29354717,0,0x0,8
tick,0x7ff86ea82704,29359995,0,0x0,8
tick,0x7ff86ea82704,29361302,0,0x0,8
tick,0x7ff86ea82704,29361733,0,0x0,8
tick,0x7ff86ea82704,29364592,0,0x0,8
tick,0x7ff86ea82704,29366409,0,0x0,8
tick,0x7ff86ea82704,29368307,0,0x0,8
tick,0x7ff86ea82704,29370337,0,0x0,8
tick,0x7ff86ea82704,29372335,0,0x0,8
tick,0x7ff86ea82704,29374430,0,0x0,8
tick,0x7ff86ea82704,29376298,0,0x0,8
tick,0x7ff86ea82704,29378288,0,0x0,8
tick,0x7ff86ea82704,29380321,0,0x0,8
tick,0x7ff86ea82704,29382847,0,0x0,8
tick,0x7ff86ea82704,29384377,0,0x0,8
tick,0x7ff86ea82704,29386359,0,0x0,8
tick,0x7ff86ea82704,29388396,0,0x0,8
tick,0x7ff86ea82704,29390736,0,0x0,8
tick,0x7ff86ea82704,29392678,0,0x0,8
tick,0x7ff86ea82704,29394393,0,0x0,8
tick,0x7ff86ea82704,29396978,0,0x0,8
tick,0x7ff86ea82704,29398334,0,0x0,8
tick,0x7ff86ea82704,29400432,0,0x0,8
tick,0x7ff86ea82704,29403038,0,0x0,8
tick,0x7ff86ea82704,29404262,0,0x0,8
tick,0x7ff86ea82704,29406432,0,0x0,8
tick,0x7ff86ea82704,29409276,0,0x0,8
tick,0x7ff86ea82704,29410624,0,0x0,8
tick,0x7ff86ea82704,29412448,0,0x0,8
tick,0x7ff86ea82704,29414622,0,0x0,8
tick,0x7ff86ea82704,29416636,0,0x0,8
tick,0x7ff86ea82704,29418398,0,0x0,8
tick,0x7ff86ea82704,29420264,0,0x0,8
tick,0x7ff86ea82704,29422327,0,0x0,8
tick,0x7ff86ea82704,29424678,0,0x0,8
tick,0x7ff86ea82704,29426521,0,0x0,8
tick,0x7ff86ea82704,29428261,0,0x0,8
tick,0x7ff86ea82704,29430255,0,0x0,8
tick,0x7ff86ea82704,29432296,0,0x0,8
tick,0x7ff86ea82704,29434152,0,0x0,8
tick,0x7ff86ea82704,29436291,0,0x0,8
tick,0x7ff86ea82704,29438127,0,0x0,8
tick,0x7ff86ea82704,29440193,0,0x0,8
tick,0x7ff86ea82704,29442105,0,0x0,8
tick,0x7ff86ea82704,29444273,0,0x0,8
tick,0x7ff86ea82704,29446166,0,0x0,8
tick,0x7ff86ea82704,29448359,0,0x0,8
tick,0x7ff86ea82704,29450960,0,0x0,8
tick,0x7ff86ea82704,29453454,0,0x0,8
tick,0x7ff86ea82704,29454082,0,0x0,8
tick,0x7ff86ea82704,29456046,0,0x0,8
tick,0x7ff86ea82704,29459074,0,0x0,8
tick,0x7ff86ea82704,29460317,0,0x0,8
tick,0x7ff86ea82704,29462127,0,0x0,8
tick,0x7ff86ea82704,29464158,0,0x0,8
tick,0x7ff86ea82704,29466119,0,0x0,8
tick,0x7ff86ea82704,29468245,0,0x0,8
tick,0x7ff86ea82704,29470325,0,0x0,8
tick,0x7ff86ea82704,29472236,0,0x0,8
tick,0x7ff86ea82704,29474606,0,0x0,8
tick,0x7ff86ea82704,29476450,0,0x0,8
tick,0x7ff86ea82704,29478378,0,0x0,8
tick,0x7ff86ea82704,29480201,0,0x0,8
tick,0x7ff86ea82704,29482307,0,0x0,8
tick,0x7ff86ea82704,29484262,0,0x0,8
tick,0x7ff86ea82704,29486091,0,0x0,8
tick,0x7ff86ea82704,29488254,0,0x0,8
tick,0x7ff86ea82704,29490107,0,0x0,8
tick,0x7ff86ea82704,29492231,0,0x0,8
tick,0x7ff86ea82704,29494100,0,0x0,8
tick,0x7ff86ea82704,29496054,0,0x0,8
tick,0x7ff86ea82704,29498186,0,0x0,8
tick,0x7ff86ea82704,29500161,0,0x0,8
tick,0x7ff86ea82704,29502124,0,0x0,8
tick,0x7ff86ea82704,29504133,0,0x0,8
tick,0x7ff86ea82704,29506115,0,0x0,8
tick,0x7ff86ea82704,29508194,0,0x0,8
tick,0x7ff86ea82704,29510139,0,0x0,8
tick,0x7ff86ea82704,29512304,0,0x0,8
tick,0x7ff86ea82704,29513997,0,0x0,8
tick,0x7ff86ea82704,29516045,0,0x0,8
tick,0x7ff86ea82704,29518045,0,0x0,8
tick,0x7ff86ea82704,29520038,0,0x0,8
tick,0x7ff86ea82704,29522019,0,0x0,8
tick,0x7ff86ea82704,29524078,0,0x0,8
tick,0x7ff86ea82704,29526063,0,0x0,8
tick,0x7ff86ea82704,29528102,0,0x0,8
tick,0x7ff86ea82704,29530006,0,0x0,8
tick,0x7ff86ea82704,29532140,0,0x0,8
tick,0x7ff86ea82704,29534077,0,0x0,8
tick,0x7ff86ea82704,29535928,0,0x0,8
tick,0x7ff86ea82704,29538000,0,0x0,8
tick,0x7ff86ea82704,29539970,0,0x0,8
tick,0x7ff86ea82704,29542473,0,0x0,8
tick,0x7ff86ea82704,29544592,0,0x0,8
tick,0x7ff86ea82704,29546933,0,0x0,8
tick,0x7ff86ea82704,29549005,0,0x0,8
tick,0x7ff86ea82704,29550898,0,0x0,8
tick,0x7ff86ea82704,29553007,0,0x0,8
tick,0x7ff86ea82704,29554997,0,0x0,8
tick,0x7ff86ea82704,29557531,0,0x0,8
tick,0x7ff86ea82704,29560044,0,0x0,8
tick,0x7ff86ea82704,29562389,0,0x0,8
tick,0x7ff86ea82704,29564041,0,0x0,8
tick,0x7ff86ea82704,29566036,0,0x0,8
tick,0x7ff86ea82704,29568057,0,0x0,8
tick,0x7ff86ea82704,29569908,0,0x0,8
tick,0x7ff86ea82704,29571958,0,0x0,8
tick,0x7ff86ea82704,29573990,0,0x0,8
tick,0x7ff86ea82704,29576049,0,0x0,8
tick,0x7ff86ea82704,29578098,0,0x0,8
tick,0x7ff86ea82704,29580391,0,0x0,8
tick,0x7ff86ea82704,29582093,0,0x0,8
tick,0x7ff86ea82704,29583972,0,0x0,8
tick,0x7ff86ea82704,29585932,0,0x0,8
tick,0x7ff86ea82704,29587967,0,0x0,8
tick,0x7ff86ea82704,29590126,0,0x0,8
tick,0x7ff86ea82704,29592460,0,0x0,8
tick,0x7ff86ea82704,29593969,0,0x0,8
tick,0x7ff86ea82704,29596037,0,0x0,8
tick,0x7ff86ea82704,29598507,0,0x0,8
tick,0x7ff86ea82704,29599737,0,0x0,8
tick,0x7ff86ea82704,29601719,0,0x0,8
tick,0x7ff86ea82704,29603725,0,0x0,8
tick,0x7ff86ea82704,29605685,0,0x0,8
tick,0x7ff86ea82704,29608155,0,0x0,8
tick,0x7ff86ea82704,29609772,0,0x0,8
tick,0x7ff86ea82704,29611931,0,0x0,8
tick,0x7ff86ea82704,29613955,0,0x0,8
tick,0x7ff86ea82704,29615802,0,0x0,8
tick,0x7ff86ea82704,29618133,0,0x0,8
tick,0x7ff86ea82704,29619718,0,0x0,8
tick,0x7ff86ea82704,29621826,0,0x0,8
tick,0x7ff86ea82704,29624019,0,0x0,8
tick,0x7ff86ea82704,29625872,0,0x0,8
tick,0x7ff86ea82704,29627687,0,0x0,8
tick,0x7ff86ea82704,29629895,0,0x0,8
tick,0x7ff86ea82704,29631709,0,0x0,8
tick,0x7ff86ea82704,29633653,0,0x0,8
tick,0x7ff86ea82704,29635614,0,0x0,8
tick,0x7ff86ea82704,29637688,0,0x0,8
tick,0x7ff86ea82704,29639928,0,0x0,8
tick,0x7ff86ea82704,29641842,0,0x0,8
tick,0x7ff86ea82704,29643918,0,0x0,8
tick,0x7ff86ea82704,29645728,0,0x0,8
tick,0x7ff86ea82704,29648435,0,0x0,8
tick,0x7ff86ea82704,29649739,0,0x0,8
tick,0x7ff86ea82704,29651700,0,0x0,8
tick,0x7ff86ea82704,29653746,0,0x0,8
tick,0x7ff86ea82704,29655615,0,0x0,8
tick,0x7ff86ea82704,29658265,0,0x0,8
tick,0x7ff86ea82704,29659754,0,0x0,8
tick,0x7ff86ea82704,29662018,0,0x0,8
tick,0x7ff86ea82704,29664233,0,0x0,8
tick,0x7ff86ea82704,29665714,0,0x0,8
tick,0x7ff86ea82704,29667600,0,0x0,8
tick,0x7ff86ea82704,29669896,0,0x0,8
tick,0x7ff86ea82704,29671693,0,0x0,8
tick,0x7ff86ea82704,29673958,0,0x0,8
tick,0x7ff86ea82704,29675638,0,0x0,8
tick,0x7ff86ea82704,29677659,0,0x0,8
tick,0x7ff86ea82704,29679957,0,0x0,8
tick,0x7ff86ea82704,29681786,0,0x0,8
tick,0x7ff86ea82704,29683964,0,0x0,8
tick,0x7ff86ea82704,29685837,0,0x0,8
tick,0x7ff86ea82704,29688259,0,0x0,8
tick,0x7ff86ea82704,29690091,0,0x0,8
tick,0x7ff86ea82704,29691940,0,0x0,8
tick,0x7ff86ea82704,29694156,0,0x0,8
tick,0x7ff86ea82704,29695851,0,0x0,8
tick,0x7ff86ea82704,29697927,0,0x0,8
tick,0x7ff86ea82704,29699663,0,0x0,8
tick,0x7ff86ea82704,29701760,0,0x0,8
tick,0x7ff86ea82704,29704033,0,0x0,8
tick,0x7ff86ea82704,29705677,0,0x0,8
tick,0x7ff86ea82704,29707980,0,0x0,8
tick,0x7ff86ea82704,29709776,0,0x0,8
tick,0x7ff86ea82704,29712147,0,0x0,8
tick,0x7ff86ea82704,29714099,0,0x0,8
tick,0x7ff86ea82704,29715606,0,0x0,8
tick,0x7ff86ea82704,29717422,0,0x0,8
tick,0x7ff86ea82704,29719662,0,0x0,8
tick,0x7ff86ea82704,29721526,0,0x0,8
tick,0x7ff86ea82704,29723717,0,0x0,8
tick,0x7ff86ea82704,29725620,0,0x0,8
tick,0x7ff86ea82704,29727655,0,0x0,8
tick,0x7ff86ea82704,29729607,0,0x0,8
tick,0x7ff86ea82704,29731644,0,0x0,8
tick,0x7ff86ea82704,29733598,0,0x0,8
tick,0x7ff86ea82704,29736328,0,0x0,8
tick,0x7ff86ea82704,29738607,0,0x0,8
tick,0x7ff86ea82704,29741701,0,0x0,8
tick,0x7ff86ea82704,29742561,0,0x0,8
tick,0x7ff86ea82704,29745336,0,0x0,8
tick,0x7ff86ea82704,29747788,0,0x0,8
tick,0x7ff86ea82704,29749214,0,0x0,8
tick,0x7ff86ea82704,29751240,0,0x0,8
tick,0x7ff86ea82704,29753183,0,0x0,8
tick,0x7ff86ea82704,29755236,0,0x0,8
tick,0x7ff86ea82704,29757637,0,0x0,8
tick,0x7ff86ea82704,29759243,0,0x0,8
tick,0x7ff86ea82704,29761322,0,0x0,8
tick,0x7ff86ea82704,29763254,0,0x0,8
tick,0x7ff86ea82704,29765251,0,0x0,8
tick,0x7ff86ea82704,29767211,0,0x0,8
tick,0x7ff86ea82704,29769178,0,0x0,8
tick,0x7ff86ea82704,29771233,0,0x0,8
tick,0x7ff86ea82704,29773603,0,0x0,8
tick,0x7ff86ea82704,29776112,0,0x0,8
tick,0x7ff86ea82704,29777502,0,0x0,8
tick,0x7ff86ea82704,29779460,0,0x0,8
tick,0x7ff86ea82704,29781581,0,0x0,8
tick,0x7ff86ea82704,29783263,0,0x0,8
tick,0x7ff86ea82704,29785258,0,0x0,8
tick,0x7ff86ea82704,29787239,0,0x0,8
tick,0x7ff86ea82704,29789299,0,0x0,8
tick,0x7ff86ea82704,29791661,0,0x0,8
tick,0x7ff86ea82704,29793285,0,0x0,8
tick,0x7ff86ea82704,29795303,0,0x0,8
tick,0x7ff86ea82704,29797512,0,0x0,8
tick,0x7ff86ea82704,29799199,0,0x0,8
tick,0x7ff86ea82704,29801501,0,0x0,8
tick,0x7ff86ea82704,29803205,0,0x0,8
tick,0x7ff86ea82704,29805303,0,0x0,8
tick,0x7ff86ea82704,29807567,0,0x0,8
tick,0x7ff86ea82704,29809326,0,0x0,8
tick,0x7ff86ea82704,29811224,0,0x0,8
tick,0x7ff86ea82704,29813462,0,0x0,8
tick,0x7ff86ea82704,29815161,0,0x0,8
tick,0x7ff86ea82704,29817186,0,0x0,8
tick,0x7ff86ea82704,29819181,0,0x0,8
tick,0x7ff86ea82704,29821364,0,0x0,8
tick,0x7ff86ea82704,29823513,0,0x0,8
tick,0x7ff86ea82704,29825348,0,0x0,8
tick,0x7ff86ea82704,29827165,0,0x0,8
tick,0x7ff86ea82704,29829231,0,0x0,8
tick,0x7ff86ea82704,29831286,0,0x0,8
tick,0x7ff86ea82704,29833289,0,0x0,8
tick,0x7ff86ea82704,29835133,0,0x0,8
tick,0x7ff86ea82704,29837187,0,0x0,8
tick,0x7ff86ea82704,29839054,0,0x0,8
tick,0x7ff86ea82704,29841460,0,0x0,8
tick,0x7ff86ea82704,29843382,0,0x0,8
tick,0x7ff86ea82704,29845292,0,0x0,8
tick,0x7ff86ea82704,29847330,0,0x0,8
tick,0x7ff86ea82704,29849076,0,0x0,8
tick,0x7ff86ea82704,29851313,0,0x0,8
tick,0x7ff86ea82704,29853127,0,0x0,8
tick,0x7ff86ea82704,29855137,0,0x0,8
tick,0x7ff86ea82704,29857346,0,0x0,8
tick,0x7ff86ea82704,29859335,0,0x0,8
tick,0x7ff86ea82704,29861150,0,0x0,8
tick,0x7ff86ea82704,29863199,0,0x0,8
tick,0x7ff86ea82704,29865107,0,0x0,8
tick,0x7ff86ea82704,29867144,0,0x0,8
tick,0x7ff86ea82704,29868995,0,0x0,8
tick,0x7ff86ea82704,29871077,0,0x0,8
tick,0x7ff86ea82704,29873149,0,0x0,8
tick,0x7ff86ea82704,29875349,0,0x0,8
tick,0x7ff86ea82704,29877186,0,0x0,8
tick,0x7ff86ea82704,29878988,0,0x0,8
tick,0x7ff86ea82704,29881073,0,0x0,8
tick,0x7ff86ea82704,29883076,0,0x0,8
tick,0x7ff86ea82704,29885003,0,0x0,8
tick,0x7ff86ea82704,29887039,0,0x0,8
tick,0x7ff86ea82704,29888984,0,0x0,8
tick,0x7ff86ea82704,29891437,0,0x0,8
tick,0x7ff86ea82704,29893424,0,0x0,8
tick,0x7ff86ea82704,29894992,0,0x0,8
tick,0x7ff86ea82704,29896938,0,0x0,8
tick,0x7ff86ea82704,29899095,0,0x0,8
tick,0x7ff86ea82704,29900909,0,0x0,8
tick,0x7ff86ea82704,29903083,0,0x0,8
tick,0x7ff86ea82704,29905068,0,0x0,8
tick,0x7ff86ea82704,29907404,0,0x0,8
tick,0x7ff86ea82704,29909007,0,0x0,8
tick,0x7ff86ea82704,29910969,0,0x0,8
tick,0x7ff86ea82704,29912899,0,0x0,8
tick,0x7ff86ea82704,29914896,0,0x0,8
tick,0x7ff86ea82704,29916871,0,0x0,8
tick,0x7ff86ea82704,29918936,0,0x0,8
tick,0x7ff86ea82704,29920903,0,0x0,8
tick,0x7ff86ea82704,29923010,0,0x0,8
tick,0x7ff86ea82704,29925108,0,0x0,8
tick,0x7ff86ea82704,29927095,0,0x0,8
tick,0x7ff86ea82704,29928942,0,0x0,8
tick,0x7ff86ea82704,29930905,0,0x0,8
tick,0x7ff86ea82704,29932965,0,0x0,8
tick,0x7ff86ea82704,29934808,0,0x0,8
tick,0x7ff86ea82704,29936879,0,0x0,8
tick,0x7ff86ea82704,29938926,0,0x0,8
tick,0x7ff86ea82704,29940988,0,0x0,8
tick,0x7ff86ea82704,29943007,0,0x0,8
tick,0x7ff86ea82704,29944915,0,0x0,8
tick,0x7ff86ea82704,29946957,0,0x0,8
tick,0x7ff86ea82704,29948801,0,0x0,8
tick,0x7ff86ea82704,29950764,0,0x0,8
tick,0x7ff86ea82704,29952870,0,0x0,8
tick,0x7ff86ea82704,29954849,0,0x0,8
tick,0x7ff86ea82704,29957065,0,0x0,8
tick,0x7ff86ea82704,29958797,0,0x0,8
tick,0x7ff86ea82704,29961348,0,0x0,8
tick,0x7ff86ea82704,29962848,0,0x0,8
tick,0x7ff86ea82704,29964787,0,0x0,8
tick,0x7ff86ea82704,29966820,0,0x0,8
tick,0x7ff86ea82704,29968768,0,0x0,8
tick,0x7ff86ea82704,29970764,0,0x0,8
tick,0x7ff86ea82704,29972682,0,0x0,8
tick,0x7ff86ea82704,29975298,0,0x0,8
tick,0x7ff86ea82704,29976917,0,0x0,8
tick,0x7ff86ea82704,29978846,0,0x0,8
tick,0x7ff86ea82704,29980935,0,0x0,8
tick,0x7ff86ea82704,29982771,0,0x0,8
tick,0x7ff86ea82704,29984791,0,0x0,8
tick,0x7ff86ea82704,29986739,0,0x0,8
tick,0x7ff86ea82704,29988703,0,0x0,8
tick,0x7ff86ea82704,29990942,0,0x0,8
tick,0x7ff86ea82704,29992823,0,0x0,8
tick,0x7ff86ea82704,29994844,0,0x0,8
tick,0x7ff86ea82704,29997050,0,0x0,8
tick,0x7ff86ea82704,29998652,0,0x0,8
tick,0x7ff86ea82704,30000761,0,0x0,8
tick,0x7ff86ea82704,30002662,0,0x0,8
tick,0x7ff86ea82704,30004733,0,0x0,8
tick,0x7ff86ea82704,30006759,0,0x0,8
tick,0x7ff86ea82704,30008728,0,0x0,8
tick,0x7ff86ea82704,30010640,0,0x0,8
tick,0x7ff86ea82704,30012724,0,0x0,8
tick,0x7ff86ea82704,30014827,0,0x0,8
tick,0x7ff86ea82704,30016609,0,0x0,8
tick,0x7ff86ea82704,30018692,0,0x0,8
tick,0x7ff86ea82704,30020677,0,0x0,8
tick,0x7ff86ea82704,30022655,0,0x0,8
tick,0x7ff86ea82704,30025132,0,0x0,8
tick,0x7ff86ea82704,30026713,0,0x0,8
tick,0x7ff86ea82704,30028684,0,0x0,8
tick,0x7ff86ea82704,30030608,0,0x0,8
tick,0x7ff86ea82704,30032695,0,0x0,8
tick,0x7ff86ea82704,30034656,0,0x0,8
tick,0x7ff86ea82704,30036771,0,0x0,8
tick,0x7ff86ea82704,30038565,0,0x0,8
tick,0x7ff86ea82704,30040868,0,0x0,8
tick,0x7ff86ea82704,30042761,0,0x0,8
tick,0x7ff86ea82704,30044556,0,0x0,8
tick,0x7ff86ea82704,30046669,0,0x0,8
tick,0x7ff86ea82704,30048627,0,0x0,8
tick,0x7ff86ea82704,30050572,0,0x0,8
tick,0x7ff86ea82704,30052571,0,0x0,8
tick,0x7ff86ea82704,30054533,0,0x0,8
tick,0x7ff86ea82704,30056806,0,0x0,8
tick,0x7ff86ea82704,30058687,0,0x0,8
tick,0x7ff86ea82704,30060538,0,0x0,8
tick,0x7ff86ea82704,30062447,0,0x0,8
tick,0x7ff86ea82704,30064512,0,0x0,8
tick,0x7ff86ea82704,30066562,0,0x0,8
tick,0x7ff86ea82704,30068552,0,0x0,8
tick,0x7ff86ea82704,30070546,0,0x0,8
tick,0x7ff86ea82704,30072460,0,0x0,8
tick,0x7ff86ea82704,30075096,0,0x0,8
tick,0x7ff86ea82704,30076770,0,0x0,8
tick,0x7ff86ea82704,30078460,0,0x0,8
tick,0x7ff86ea82704,30080538,0,0x0,8
tick,0x7ff86ea82704,30082525,0,0x0,8
tick,0x7ff86ea82704,30084517,0,0x0,8
tick,0x7ff86ea82704,30086385,0,0x0,8
tick,0x7ff86ea82704,30088543,0,0x0,8
tick,0x7ff86ea82704,30090608,0,0x0,8
tick,0x7ff86ea82704,30092890,0,0x0,8
tick,0x7ff86ea82704,30094449,0,0x0,8
tick,0x7ff86ea82704,30096537,0,0x0,8
tick,0x7ff86ea82704,30098512,0,0x0,8
tick,0x7ff86ea82704,30100978,0,0x0,8
tick,0x7ff86ea82704,30102506,0,0x0,8
tick,0x7ff86ea82704,30104460,0,0x0,8
tick,0x7ff86ea82704,30106732,0,0x0,8
tick,0x7ff86ea82704,30108694,0,0x0,8
tick,0x7ff86ea82704,30110731,0,0x0,8
tick,0x7ff86ea82704,30112341,0,0x0,8
tick,0x7ff86ea82704,30114508,0,0x0,8
tick,0x7ff86ea82704,30116477,0,0x0,8
tick,0x7ff86ea82704,30118380,0,0x0,8
tick,0x7ff86ea82704,30120382,0,0x0,8
tick,0x7ff86ea82704,30122352,0,0x0,8
tick,0x7ff86ea82704,30124603,0,0x0,8
tick,0x7ff86ea82704,30126450,0,0x0,8
tick,0x7ff86ea82704,30128629,0,0x0,8
tick,0x7ff86ea82704,30130491,0,0x0,8
tick,0x7ff86ea82704,30132731,0,0x0,8
tick,0x7ff86ea82704,30134402,0,0x0,8
tick,0x7ff86ea82704,30136285,0,0x0,8
tick,0x7ff86ea82704,30138292,0,0x0,8
tick,0x7ff86ea82704,30140456,0,0x0,8
tick,0x7ff86ea82704,30142329,0,0x0,8
tick,0x7ff86ea82704,30144327,0,0x0,8
tick,0x7ff86ea82704,30146332,0,0x0,8
tick,0x7ff86ea82704,30148257,0,0x0,8
tick,0x7ff86ea82704,30150367,0,0x0,8
tick,0x7ff86ea82704,30152219,0,0x0,8
tick,0x7ff86ea82704,30154311,0,0x0,8
tick,0x7ff86ea82704,30156224,0,0x0,8
tick,0x7ff86ea82704,30158557,0,0x0,8
tick,0x7ff86ea82704,30160463,0,0x0,8
tick,0x7ff86ea82704,30162334,0,0x0,8
tick,0x7ff86ea82704,30164335,0,0x0,8
tick,0x7ff86ea82704,30166383,0,0x0,8
tick,0x7ff86ea82704,30168343,0,0x0,8
tick,0x7ff86ea82704,30170306,0,0x0,8
tick,0x7ff86ea82704,30172269,0,0x0,8
tick,0x7ff86ea82704,30174501,0,0x0,8
tick,0x7ff86ea82704,30176862,0,0x0,8
tick,0x7ff86ea82704,30178233,0,0x0,8
tick,0x7ff86ea82704,30180161,0,0x0,8
tick,0x7ff86ea82704,30182173,0,0x0,8
tick,0x7ff86ea82704,30184163,0,0x0,8
tick,0x7ff86ea82704,30186109,0,0x0,8
tick,0x7ff86ea82704,30188139,0,0x0,8
tick,0x7ff86ea82704,30190233,0,0x0,8
tick,0x7ff86ea82704,30192195,0,0x0,8
tick,0x7ff86ea82704,30194446,0,0x0,8
tick,0x7ff86ea82704,30196583,0,0x0,8
tick,0x7ff86ea82704,30198295,0,0x0,8
tick,0x7ff86ea82704,30200126,0,0x0,8
tick,0x7ff86ea82704,30202324,0,0x0,8
tick,0x7ff86ea82704,30204158,0,0x0,8
tick,0x7ff86ea82704,30206117,0,0x0,8
tick,0x7ff86ea82704,30208733,0,0x0,8
tick,0x7ff86ea82704,30210488,0,0x0,8
tick,0x7ff86ea82704,30212309,0,0x0,8
tick,0x7ff86ea82704,30214170,0,0x0,8
tick,0x7ff86ea82704,30216064,0,0x0,8
tick,0x7ff86ea82704,30218162,0,0x0,8
tick,0x7ff86ea82704,30220178,0,0x0,8
tick,0x7ff86ea82704,30222344,0,0x0,8
tick,0x7ff86ea82704,30224209,0,0x0,8
tick,0x7ff86ea82704,30226230,0,0x0,8
tick,0x7ff86ea82704,30228121,0,0x0,8
tick,0x7ff86ea82704,30230512,0,0x0,8
tick,0x7ff86ea82704,30232367,0,0x0,8
tick,0x7ff86ea82704,30234051,0,0x0,8
tick,0x7ff86ea82704,30236182,0,0x0,8
tick,0x7ff86ea82704,30238046,0,0x0,8
tick,0x7ff86ea82704,30240264,0,0x0,8
tick,0x7ff86ea82704,30242129,0,0x0,8
tick,0x7ff86ea82704,30244012,0,0x0,8
tick,0x7ff86ea82704,30246635,0,0x0,8
tick,0x7ff86ea82704,30248149,0,0x0,8
tick,0x7ff86ea82704,30250187,0,0x0,8
tick,0x7ff86ea82704,30252016,0,0x0,8
tick,0x7ff86ea82704,30254106,0,0x0,8
tick,0x7ff86ea82704,30256033,0,0x0,8
tick,0x7ff86ea82704,30258540,0,0x0,8
tick,0x7ff86ea82704,30260073,0,0x0,8
tick,0x7ff86ea82704,30262350,0,0x0,8
tick,0x7ff86ea82704,30264212,0,0x0,8
tick,0x7ff86ea82704,30266175,0,0x0,8
tick,0x7ff86ea82704,30267974,0,0x0,8
tick,0x7ff86ea82704,30269951,0,0x0,8
tick,0x7ff86ea82704,30272087,0,0x0,8
tick,0x7ff86ea82704,30274201,0,0x0,8
tick,0x7ff86ea82704,30275981,0,0x0,8
tick,0x7ff86ea82704,30277927,0,0x0,8
tick,0x7ff86ea82704,30279979,0,0x0,8
tick,0x7ff86ea82704,30282050,0,0x0,8
tick,0x7ff86ea82704,30284249,0,0x0,8
tick,0x7ff86ea82704,30286002,0,0x0,8
tick,0x7ff86ea82704,30288103,0,0x0,8
tick,0x7ff86ea82704,30290242,0,0x0,8
tick,0x7ff86ea82704,30292342,0,0x0,8
tick,0x7ff86ea82704,30293997,0,0x0,8
tick,0x7ff86ea82704,30296087,0,0x0,8
tick,0x7ff86ea82704,30297983,0,0x0,8
tick,0x7ff86ea82704,30300119,0,0x0,8
tick,0x7ff86ea82704,30302005,0,0x0,8
tick,0x7ff86ea82704,30303823,0,0x0,8
tick,0x7ff86ea82704,30305983,0,0x0,8
tick,0x7ff86ea82704,30308773,0,0x0,8
tick,0x7ff86ea82704,30311294,0,0x0,8
tick,0x7ff86ea82704,30313040,0,0x0,8
tick,0x7ff86ea82704,30315180,0,0x0,8
tick,0x7ff86ea82704,30316886,0,0x0,8
tick,0x7ff86ea82704,30318974,0,0x0,8
tick,0x7ff86ea82704,30320881,0,0x0,8
tick,0x7ff86ea82704,30323198,0,0x0,8
tick,0x7ff86ea82704,30325135,0,0x0,8
tick,0x7ff86ea82704,30327449,0,0x0,8
tick,0x7ff86ea82704,30328954,0,0x0,8
tick,0x7ff86ea82704,30331445,0,0x0,8
tick,0x7ff86ea82704,30332832,0,0x0,8
tick,0x7ff86ea82704,30334985,0,0x0,8
tick,0x7ff86ea82704,30336817,0,0x0,8
tick,0x7ff86ea82704,30338993,0,0x0,8
tick,0x7ff86ea82704,30341091,0,0x0,8
tick,0x7ff86ea82704,30343034,0,0x0,8
tick,0x7ff86ea82704,30344896,0,0x0,8
tick,0x7ff86ea82704,30347223,0,0x0,8
tick,0x7ff86ea82704,30348935,0,0x0,8
tick,0x7ff86ea82704,30350867,0,0x0,8
tick,0x7ff86ea82704,30353202,0,0x0,8
tick,0x7ff86ea82704,30355497,0,0x0,8
tick,0x7ff86ea82704,30357832,0,0x0,8
tick,0x7ff86ea82704,30360120,0,0x0,8
tick,0x7ff86ea82704,30362049,0,0x0,8
tick,0x7ff86ea82704,30363930,0,0x0,8
tick,0x7ff86ea82704,30366099,0,0x0,8
tick,0x7ff86ea82704,30368203,0,0x0,8
tick,0x7ff86ea82704,30370031,0,0x0,8
tick,0x7ff86ea82704,30371930,0,0x0,8
tick,0x7ff86ea82704,30374894,0,0x0,8
tick,0x7ff86ea82704,30376853,0,0x0,8
tick,0x7ff86ea82704,30378038,0,0x0,8
tick,0x7ff86ea82704,30379707,0,0x0,8
tick,0x7ff86ea82704,30381969,0,0x0,8
tick,0x7ff86ea82704,30383756,0,0x0,8
tick,0x7ff86ea82704,30385898,0,0x0,8
tick,0x7ff86ea82704,30387768,0,0x0,8
tick,0x7ff86ea82704,30390450,0,0x0,8
tick,0x7ff86ea82704,30392396,0,0x0,8
tick,0x7ff86ea82704,30393901,0,0x0,8
tick,0x7ff86ea82704,30395603,0,0x0,8
tick,0x7ff86ea82704,30397630,0,0x0,8
tick,0x7ff86ea82704,30399575,0,0x0,8
tick,0x7ff86ea82704,30401674,0,0x0,8
tick,0x7ff86ea82704,30403565,0,0x0,8
tick,0x7ff86ea82704,30405631,0,0x0,8
tick,0x7ff86ea82704,30407890,0,0x0,8
tick,0x7ff86ea82704,30410281,0,0x0,8
tick,0x7ff86ea82704,30411984,0,0x0,8
tick,0x7ff86ea82704,30413663,0,0x0,8
tick,0x7ff86ea82704,30415879,0,0x0,8
tick,0x7ff86ea82704,30417836,0,0x0,8
tick,0x7ff86ea82704,30419912,0,0x0,8
tick,0x7ff86ea82704,30421807,0,0x0,8
tick,0x7ff86ea82704,30424225,0,0x0,8
tick,0x7ff86ea82704,30426381,0,0x0,8
tick,0x7ff86ea82704,30428253,0,0x0,8
tick,0x7ff86ea82704,30429811,0,0x0,8
tick,0x7ff86ea82704,30431671,0,0x0,8
tick,0x7ff86ea82704,30433716,0,0x0,8
tick,0x7ff86ea82704,30435603,0,0x0,8
tick,0x7ff86ea82704,30437692,0,0x0,8
tick,0x7ff86ea82704,30441593,0,0x0,8
tick,0x7ff86ea82704,30441884,0,0x0,8
tick,0x7ff86ea82704,30444509,0,0x0,8
tick,0x7ff86ea82704,30446298,0,0x0,8
tick,0x7ff86ea82704,30447596,0,0x0,8
tick,0x7ff86ea82704,30449572,0,0x0,8
tick,0x7ff86ea82704,30451431,0,0x0,8
tick,0x7ff86ea82704,30453447,0,0x0,8
tick,0x7ff86ea82704,30455692,0,0x0,8
tick,0x7ff86ea82704,30458608,0,0x0,8
tick,0x7ff86ea82704,30460600,0,0x0,8
tick,0x7ff86ea82704,30461846,0,0x0,8
tick,0x7ff86ea82704,30463658,0,0x0,8
tick,0x7ff86ea82704,30465494,0,0x0,8
tick,0x7ff86ea82704,30467634,0,0x0,8
tick,0x7ff86ea82704,30469725,0,0x0,8
tick,0x7ff86ea82704,30471740,0,0x0,8
tick,0x7ff86ea82704,30473657,0,0x0,8
tick,0x7ff86ea82704,30475954,0,0x0,8
tick,0x7ff86ea82704,30477447,0,0x0,8
tick,0x7ff86ea82704,30479830,0,0x0,8
tick,0x7ff86ea82704,30481554,0,0x0,8
tick,0x7ff86ea82704,30484687,0,0x0,8
tick,0x7ff86ea82704,30487087,0,0x0,8
tick,0x7ff86ea82704,30488595,0,0x0,8
tick,0x7ff86ea82704,30492123,0,0x0,8
tick,0x7ff86ea82704,30492865,0,0x0,8
tick,0x7ff86ea82704,30495867,0,0x0,8
tick,0x7ff86ea82704,30497791,0,0x0,8
tick,0x7ff86ea82704,30499561,0,0x0,8
tick,0x7ff86ea82704,30501570,0,0x0,8
tick,0x7ff86ea82704,30503528,0,0x0,8
tick,0x7ff86ea82704,30505462,0,0x0,8
tick,0x7ff86ea82704,30509247,0,0x0,8
tick,0x7ff86ea82704,30509281,0,0x0,8
tick,0x7ff86ea82704,30511825,0,0x0,8
tick,0x7ff86ea82704,30514110,0,0x0,8
tick,0x7ff86ea82704,30516116,0,0x0,8
tick,0x7ff86ea82704,30517569,0,0x0,8
tick,0x7ff86ea82704,30519475,0,0x0,8
tick,0x7ff86ea82704,30521531,0,0x0,8
tick,0x7ff86ea82704,30524433,0,0x0,8
tick,0x7ff86ea82704,30525779,0,0x0,8
tick,0x7ff86ea82704,30527545,0,0x0,8
tick,0x7ff86ea82704,30529683,0,0x0,8
tick,0x7ff86ea82704,30531609,0,0x0,8
tick,0x7ff86ea82704,30533528,0,0x0,8
tick,0x7ff86ea82704,30535566,0,0x0,8
tick,0x7ff86ea82704,30537698,0,0x0,8
tick,0x7ff86ea82704,30539420,0,0x0,8
tick,0x7ff86ea82704,30542684,0,0x0,8
tick,0x7ff86ea82704,30543587,0,0x0,8
tick,0x7ff86ea82704,30545418,0,0x0,8
tick,0x7ff86ea82704,30547371,0,0x0,8
tick,0x7ff86ea82704,30549364,0,0x0,8
tick,0x7ff86ea82704,30551525,0,0x0,8
tick,0x7ff86ea82704,30553353,0,0x0,8
tick,0x7ff86ea82704,30555442,0,0x0,8
tick,0x7ff86ea82704,30558162,0,0x0,8
tick,0x7ff86ea82704,30559433,0,0x0,8
tick,0x7ff86ea82704,30561399,0,0x0,8
tick,0x7ff86ea82704,30563398,0,0x0,8
tick,0x7ff86ea82704,30565300,0,0x0,8
tick,0x7ff86ea82704,30567327,0,0x0,8
tick,0x7ff86ea82704,30572193,0,0x0,8
tick,0x7ff86ea82704,30575254,0,0x0,8
tick,0x7ff86ea82704,30576322,0,0x0,8
tick,0x7ff86ea82704,30578328,0,0x0,8
tick,0x7ff86ea82704,30580213,0,0x0,8
tick,0x7ff86ea82704,30582149,0,0x0,8
tick,0x7ff86ea82704,30584171,0,0x0,8
tick,0x7ff86ea82704,30586163,0,0x0,8
tick,0x7ff86ea82704,30588137,0,0x0,8
tick,0x7ff86ea82704,30590607,0,0x0,8
tick,0x7ff86ea82704,30592254,0,0x0,8
tick,0x7ff86ea82704,30594286,0,0x0,8
tick,0x7ff86ea82704,30596629,0,0x0,8
tick,0x7ff86ea82704,30598217,0,0x0,8
tick,0x7ff86ea82704,30600231,0,0x0,8
tick,0x7ff86ea82704,30602092,0,0x0,8
tick,0x7ff86ea82704,30604091,0,0x0,8
tick,0x7ff86ea82704,30606110,0,0x0,8
tick,0x7ff86ea82704,30609148,0,0x0,8
tick,0x7ff86ea82704,30610272,0,0x0,8
tick,0x7ff86ea82704,30612515,0,0x0,8
tick,0x7ff86ea82704,30614184,0,0x0,8
tick,0x7ff86ea82704,30616091,0,0x0,8
tick,0x7ff86ea82704,30618158,0,0x0,8
tick,0x7ff86ea82704,30620113,0,0x0,8
tick,0x7ff86ea82704,30622146,0,0x0,8
tick,0x7ff86ea82704,30624898,0,0x0,8
tick,0x7ff86ea82704,30626339,0,0x0,8
tick,0x7ff86ea82704,30628307,0,0x0,8
tick,0x7ff86ea82704,30630233,0,0x0,8
tick,0x7ff86ea82704,30632062,0,0x0,8
tick,0x7ff86ea82704,30634147,0,0x0,8
tick,0x7ff86ea82704,30636319,0,0x0,8
tick,0x7ff86ea82704,30638315,0,0x0,8
tick,0x7ff86ea82704,30641062,0,0x0,8
tick,0x7ff86ea82704,30642676,0,0x0,8
tick,0x7ff86ea82704,30644032,0,0x0,8
tick,0x7ff86ea82704,30646161,0,0x0,8
tick,0x7ff86ea82704,30648023,0,0x0,8
tick,0x7ff86ea82704,30650134,0,0x0,8
tick,0x7ff86ea82704,30652206,0,0x0,8
tick,0x7ff86ea82704,30654211,0,0x0,8
tick,0x7ff86ea82704,30656328,0,0x0,8
tick,0x7ff86ea82704,30658871,0,0x0,8
tick,0x7ff86ea82704,30660241,0,0x0,8
tick,0x7ff86ea82704,30662198,0,0x0,8
tick,0x7ff86ea82704,30664172,0,0x0,8
tick,0x7ff86ea82704,30666070,0,0x0,8
tick,0x7ff86ea82704,30668035,0,0x0,8
tick,0x7ff86ea82704,30670061,0,0x0,8
tick,0x7ff86ea82704,30672272,0,0x0,8
tick,0x7ff86ea82704,30674339,0,0x0,8
tick,0x7ff86ea82704,30675994,0,0x0,8
tick,0x7ff86ea82704,30677998,0,0x0,8
tick,0x7ff86ea82704,30680233,0,0x0,8
tick,0x7ff86ea82704,30682229,0,0x0,8
tick,0x7ff86ea82704,30684104,0,0x0,8
tick,0x7ff86ea82704,30685966,0,0x0,8
tick,0x7ff86ea82704,30688210,0,0x0,8
tick,0x7ff86ea82704,30690912,0,0x0,8
tick,0x7ff86ea82704,30692535,0,0x0,8
tick,0x7ff86ea82704,30694016,0,0x0,8
tick,0x7ff86ea82704,30696350,0,0x0,8
tick,0x7ff86ea82704,30698369,0,0x0,8
tick,0x7ff86ea82704,30700341,0,0x0,8
tick,0x7ff86ea82704,30702312,0,0x0,8
tick,0x7ff86ea82704,30704270,0,0x0,8
tick,0x7ff86ea82704,30706121,0,0x0,8
tick,0x7ff86ea82704,30708401,0,0x0,8
tick,0x7ff86ea82704,30709958,0,0x0,8
tick,0x7ff86ea82704,30711904,0,0x0,8
tick,0x7ff86ea82704,30713885,0,0x0,8
tick,0x7ff86ea82704,30716095,0,0x0,8
tick,0x7ff86ea82704,30717737,0,0x0,8
tick,0x7ff86ea82704,30720707,0,0x0,8
tick,0x7ff86ea82704,30721635,0,0x0,8
tick,0x7ff86ea82704,30724285,0,0x0,8
tick,0x7ff86ea82704,30726387,0,0x0,8
tick,0x7ff86ea82704,30727822,0,0x0,8
tick,0x7ff86ea82704,30729668,0,0x0,8
tick,0x7ff86ea82704,30731726,0,0x0,8
tick,0x7ff86ea82704,30733654,0,0x0,8
tick,0x7ff86ea82704,30735762,0,0x0,8
tick,0x7ff86ea82704,30737753,0,0x0,8
tick,0x7ff86ea82704,30739667,0,0x0,8
tick,0x7ff86ea82704,30741891,0,0x0,8
tick,0x7ff86ea82704,30743674,0,0x0,8
tick,0x7ff86ea82704,30745777,0,0x0,8
tick,0x7ff86ea82704,30747782,0,0x0,8
tick,0x7ff86ea82704,30749709,0,0x0,8
tick,0x7ff86ea82704,30751733,0,0x0,8
tick,0x7ff86ea82704,30753680,0,0x0,8
tick,0x7ff86ea82704,30755631,0,0x0,8
tick,0x7ff86ea82704,30758251,0,0x0,8
tick,0x7ff86ea82704,30760048,0,0x0,8
tick,0x7ff86ea82704,30761575,0,0x0,8
tick,0x7ff86ea82704,30763776,0,0x0,8
tick,0x7ff86ea82704,30765741,0,0x0,8
tick,0x7ff86ea82704,30767828,0,0x0,8
tick,0x7ff86ea82704,30769612,0,0x0,8
tick,0x7ff86ea82704,30771627,0,0x0,8
tick,0x7ff86ea82704,30773541,0,0x0,8
tick,0x7ff86ea82704,30776065,0,0x0,8
tick,0x7ff86ea82704,30777519,0,0x0,8
tick,0x7ff86ea82704,30779678,0,0x0,8
tick,0x7ff86ea82704,30781681,0,0x0,8
tick,0x7ff86ea82704,30783697,0,0x0,8
tick,0x7ff86ea82704,30785597,0,0x0,8
tick,0x7ff86ea82704,30787663,0,0x0,8
tick,0x7ff86ea82704,30789528,0,0x0,8
tick,0x7ff86ea82704,30792548,0,0x0,8
tick,0x7ff86ea82704,30794708,0,0x0,8
tick,0x7ff86ea82704,30796679,0,0x0,8
tick,0x7ff86ea82704,30798717,0,0x0,8
tick,0x7ff86ea82704,30800539,0,0x0,8
tick,0x7ff86ea82704,30802729,0,0x0,8
tick,0x7ff86ea82704,30804619,0,0x0,8
tick,0x7ff86ea82704,30806918,0,0x0,8
tick,0x7ff86ea82704,30809136,0,0x0,8
tick,0x7ff86ea82704,30810468,0,0x0,8
tick,0x7ff86ea82704,30812428,0,0x0,8
tick,0x7ff86ea82704,30814442,0,0x0,8
tick,0x7ff86ea82704,30816517,0,0x0,8
tick,0x7ff86ea82704,30818454,0,0x0,8
tick,0x7ff86ea82704,30820467,0,0x0,8
tick,0x7ff86ea82704,30822621,0,0x0,8
tick,0x7ff86ea82704,30824659,0,0x0,8
tick,0x7ff86ea82704,30826582,0,0x0,8
tick,0x7ff86ea82704,30828650,0,0x0,8
tick,0x7ff86ea82704,30830996,0,0x0,8
tick,0x7ff86ea82704,30832853,0,0x0,8
tick,0x7ff86ea82704,30834678,0,0x0,8
tick,0x7ff86ea82704,30836611,0,0x0,8
tick,0x7ff86ea82704,30838732,0,0x0,8
tick,0x7ff86ea82704,30841382,0,0x0,8
tick,0x7ff86ea82704,30843715,0,0x0,8
tick,0x7ff86ea82704,30844450,0,0x0,8
tick,0x7ff86ea82704,30846998,0,0x0,8
tick,0x7ff86ea82704,30848611,0,0x0,8
tick,0x7ff86ea82704,30850787,0,0x0,8
tick,0x7ff86ea82704,30852432,0,0x0,8
tick,0x7ff86ea82704,30854585,0,0x0,8
tick,0x7ff86ea82704,30856685,0,0x0,8
tick,0x7ff86ea82704,30858929,0,0x0,8
tick,0x7ff86ea82704,30860419,0,0x0,8
tick,0x7ff86ea82704,30862478,0,0x0,8
tick,0x7ff86ea82704,30864379,0,0x0,8
tick,0x7ff86ea82704,30866473,0,0x0,8
tick,0x7ff86ea82704,30868354,0,0x0,8
tick,0x7ff86ea82704,30870418,0,0x0,8
tick,0x7ff86ea82704,30872766,0,0x0,8
tick,0x7ff86ea82704,30874494,0,0x0,8
tick,0x7ff86ea82704,30876343,0,0x0,8
tick,0x7ff86ea82704,30878496,0,0x0,8
tick,0x7ff86ea82704,30880405,0,0x0,8
tick,0x7ff86ea82704,30882445,0,0x0,8
tick,0x7ff86ea82704,30884386,0,0x0,8
tick,0x7ff86ea82704,30886429,0,0x0,8
tick,0x7ff86ea82704,30888359,0,0x0,8
tick,0x7ff86ea82704,30891259,0,0x0,8
tick,0x7ff86ea82704,30892856,0,0x0,8
tick,0x7ff86ea82704,30894948,0,0x0,8
tick,0x7ff86ea82704,30896644,0,0x0,8
tick,0x7ff86ea82704,30898714,0,0x0,8
tick,0x7ff86ea82704,30900640,0,0x0,8
tick,0x7ff86ea82704,30902566,0,0x0,8
tick,0x7ff86ea82704,30904361,0,0x0,8
tick,0x7ff86ea82704,30906243,0,0x0,8
tick,0x7ff86ea82704,30909614,0,0x0,8
tick,0x7ff86ea82704,30910239,0,0x0,8
tick,0x7ff86ea82704,30912349,0,0x0,8
tick,0x7ff86ea82704,30914657,0,0x0,8
tick,0x7ff86ea82704,30916451,0,0x0,8
tick,0x7ff86ea82704,30918557,0,0x0,8
tick,0x7ff86ea82704,30920438,0,0x0,8
tick,0x7ff86ea82704,30922264,0,0x0,8
tick,0x7ff86ea82704,30925037,0,0x0,8
tick,0x7ff86ea82704,30926214,0,0x0,8
tick,0x7ff86ea82704,30928303,0,0x0,8
tick,0x7ff86ea82704,30930360,0,0x0,8
tick,0x7ff86ea82704,30932415,0,0x0,8
tick,0x7ff86ea82704,30934275,0,0x0,8
tick,0x7ff86ea82704,30936342,0,0x0,8
tick,0x7ff86ea82704,30938316,0,0x0,8
tick,0x7ff86ea82704,30941335,0,0x0,8
tick,0x7ff86ea82704,30942919,0,0x0,8
tick,0x7ff86ea82704,30944371,0,0x0,8
tick,0x7ff86ea82704,30946248,0,0x0,8
tick,0x7ff86ea82704,30948286,0,0x0,8
tick,0x7ff86ea82704,30950237,0,0x0,8
tick,0x7ff86ea82704,30952394,0,0x0,8
tick,0x7ff86ea82704,30954285,0,0x0,8
tick,0x7ff86ea82704,30960030,0,0x0,8
tick,0x7ff86ea82704,30960133,0,0x0,8
tick,0x7ff86ea82704,30961371,0,0x0,8
tick,0x7ff86ea82704,30962181,0,0x0,8
tick,0x7ff86ea82704,30964122,0,0x0,8
tick,0x7ff86ea82704,30966268,0,0x0,8
tick,0x7ff86ea82704,30968238,0,0x0,8
tick,0x7ff86ea82704,30970452,0,0x0,8
tick,0x7ff86ea82704,30972420,0,0x0,8
tick,0x7ff86ea82704,30975523,0,0x0,8
tick,0x7ff86ea82704,30976431,0,0x0,8
tick,0x7ff86ea82704,30978372,0,0x0,8
tick,0x7ff86ea82704,30980231,0,0x0,8
tick,0x7ff86ea82704,30982240,0,0x0,8
tick,0x7ff86ea82704,30984174,0,0x0,8
tick,0x7ff86ea82704,30986414,0,0x0,8
tick,0x7ff86ea82704,30988491,0,0x0,8
tick,0x7ff86ea82704,30991725,0,0x0,8
tick,0x7ff86ea82704,30993108,0,0x0,8
tick,0x7ff86ea82704,30994055,0,0x0,8
tick,0x7ff86ea82704,30996593,0,0x0,8
tick,0x7ff86ea82704,30998188,0,0x0,8
tick,0x7ff86ea82704,31000090,0,0x0,8
tick,0x7ff86ea82704,31002237,0,0x0,8
tick,0x7ff86ea82704,31004015,0,0x0,8
tick,0x7ff86ea82704,31006735,0,0x0,8
tick,0x7ff86ea82704,31008573,0,0x0,8
tick,0x7ff86ea82704,31010294,0,0x0,8
tick,0x7ff86ea82704,31012307,0,0x0,8
tick,0x7ff86ea82704,31014134,0,0x0,8
tick,0x7ff86ea82704,31016582,0,0x0,8
tick,0x7ff86ea82704,31020713,0,0x0,8
tick,0x7ff86ea82704,31021904,0,0x0,8
tick,0x7ff86ea82704,31026118,0,0x0,8
tick,0x7ff86ea82704,31026178,0,0x0,8
tick,0x7ff86ea82704,31027485,0,0x0,8
tick,0x7ff86ea82704,31029239,0,0x0,8
tick,0x7ff86ea82704,31031355,0,0x0,8
tick,0x7ff86ea82704,31032989,0,0x0,8
tick,0x7ff86ea82704,31034904,0,0x0,8
tick,0x7ff86ea82704,31036887,0,0x0,8
tick,0x7ff86ea82704,31039400,0,0x0,8
tick,0x7ff86ea82704,31042382,0,0x0,8
tick,0x7ff86ea82704,31043038,0,0x0,8
tick,0x7ff86ea82704,31044961,0,0x0,8
tick,0x7ff86ea82704,31047052,0,0x0,8
tick,0x7ff86ea82704,31049236,0,0x0,8
tick,0x7ff86ea82704,31051383,0,0x0,8
tick,0x7ff86ea82704,31052984,0,0x0,8
tick,0x7ff86ea82704,31054909,0,0x0,8
tick,0x7ff86ea82704,31057975,0,0x0,8
tick,0x7ff86ea82704,31060134,0,0x0,8
tick,0x7ff86ea82704,31061770,0,0x0,8
tick,0x7ff86ea82704,31064503,0,0x0,8
tick,0x7ff86ea82704,31065779,0,0x0,8
tick,0x7ff86ea82704,31067735,0,0x0,8
tick,0x7ff86ea82704,31069858,0,0x0,8
tick,0x7ff86ea82704,31071730,0,0x0,8
tick,0x7ff86ea82704,31075261,0,0x0,8
tick,0x7ff86ea82704,31077011,0,0x0,8
tick,0x7ff86ea82704,31078783,0,0x0,8
tick,0x7ff86ea82704,31081050,0,0x0,8
tick,0x7ff86ea82704,31082833,0,0x0,8
tick,0x7ff86ea82704,31085003,0,0x0,8
tick,0x7ff86ea82704,31086883,0,0x0,8
tick,0x7ff86ea82704,31089305,0,0x0,8
tick,0x7ff86ea82704,31091968,0,0x0,8
tick,0x7ff86ea82704,31093575,0,0x0,8
tick,0x7ff86ea82704,31094787,0,0x0,8
tick,0x7ff86ea82704,31096837,0,0x0,8
tick,0x7ff86ea82704,31098820,0,0x0,8
tick,0x7ff86ea82704,31100962,0,0x0,8
tick,0x7ff86ea82704,31102778,0,0x0,8
tick,0x7ff86ea82704,31104856,0,0x0,8
tick,0x7ff86ea82704,31106858,0,0x0,8
tick,0x7ff86ea82704,31109288,0,0x0,8
tick,0x7ff86ea82704,31110679,0,0x0,8
tick,0x7ff86ea82704,31112792,0,0x0,8
tick,0x7ff86ea82704,31114886,0,0x0,8
tick,0x7ff86ea82704,31116783,0,0x0,8
tick,0x7ff86ea82704,31118746,0,0x0,8
tick,0x7ff86ea82704,31120747,0,0x0,8
tick,0x7ff86ea82704,31123022,0,0x0,8
tick,0x7ff86ea82704,31125227,0,0x0,8
tick,0x7ff86ea82704,31126684,0,0x0,8
tick,0x7ff86ea82704,31128600,0,0x0,8
tick,0x7ff86ea82704,31130740,0,0x0,8
tick,0x7ff86ea82704,31132623,0,0x0,8
tick,0x7ff86ea82704,31134732,0,0x0,8
tick,0x7ff86ea82704,31136659,0,0x0,8
tick,0x7ff86ea82704,31139095,0,0x0,8
tick,0x7ff86ea82704,31142735,0,0x0,8
tick,0x7ff86ea82704,31143151,0,0x0,8
tick,0x7ff86ea82704,31145154,0,0x0,8
tick,0x7ff86ea82704,31147107,0,0x0,8
tick,0x7ff86ea82704,31149035,0,0x0,8
tick,0x7ff86ea82704,31151007,0,0x0,8
tick,0x7ff86ea82704,31152720,0,0x0,8
tick,0x7ff86ea82704,31155271,0,0x0,8
tick,0x7ff86ea82704,31157757,0,0x0,8
tick,0x7ff86ea82704,31159216,0,0x0,8
tick,0x7ff86ea82704,31161447,0,0x0,8
tick,0x7ff86ea82704,31163033,0,0x0,8
tick,0x7ff86ea82704,31164823,0,0x0,8
tick,0x7ff86ea82704,31167189,0,0x0,8
tick,0x7ff86ea82704,31168694,0,0x0,8
tick,0x7ff86ea82704,31170942,0,0x0,8
tick,0x7ff86ea82704,31172686,0,0x0,8
tick,0x7ff86ea82704,31175549,0,0x0,8
tick,0x7ff86ea82704,31176671,0,0x0,8
tick,0x7ff86ea82704,31178739,0,0x0,8
tick,0x7ff86ea82704,31180933,0,0x0,8
tick,0x7ff86ea82704,31182678,0,0x0,8
tick,0x7ff86ea82704,31184571,0,0x0,8
tick,0x7ff86ea82704,31186895,0,0x0,8
tick,0x7ff86ea82704,31188613,0,0x0,8
tick,0x7ff86ea82704,31190886,0,0x0,8
tick,0x7ff86ea82704,31193029,0,0x0,8
tick,0x7ff86ea82704,31194997,0,0x0,8
tick,0x7ff86ea82704,31197215,0,0x0,8
tick,0x7ff86ea82704,31198700,0,0x0,8
tick,0x7ff86ea82704,31200648,0,0x0,8
tick,0x7ff86ea82704,31202834,0,0x0,8
tick,0x7ff86ea82704,31204852,0,0x0,8
tick,0x7ff86ea82704,31206596,0,0x0,8
tick,0x7ff86ea82704,31208788,0,0x0,8
tick,0x7ff86ea82704,31210477,0,0x0,8
tick,0x7ff86ea82704,31212683,0,0x0,8
tick,0x7ff86ea82704,31214937,0,0x0,8
tick,0x7ff86ea82704,31216530,0,0x0,8
tick,0x7ff86ea82704,31218742,0,0x0,8
tick,0x7ff86ea82704,31220657,0,0x0,8
tick,0x7ff86ea82704,31222742,0,0x0,8
tick,0x7ff86ea82704,31224559,0,0x0,8
tick,0x7ff86ea82704,31226397,0,0x0,8
tick,0x7ff86ea82704,31228435,0,0x0,8
tick,0x7ff86ea82704,31230428,0,0x0,8
tick,0x7ff86ea82704,31232548,0,0x0,8
tick,0x7ff86ea82704,31234431,0,0x0,8
tick,0x7ff86ea82704,31236463,0,0x0,8
tick,0x7ff86ea82704,31238394,0,0x0,8
tick,0x7ff86ea82704,31240740,0,0x0,8
tick,0x7ff86ea82704,31243050,0,0x0,8
tick,0x7ff86ea82704,31245187,0,0x0,8
tick,0x7ff86ea82704,31250349,0,0x0,8
tick,0x7ff86ea82704,31250394,0,0x0,8
tick,0x7ff86ea82704,31251533,0,0x0,8
tick,0x7ff86ea82704,31253452,0,0x0,8
tick,0x7ff86ea82704,31255235,0,0x0,8
tick,0x7ff86ea82704,31257311,0,0x0,8
tick,0x7ff86ea82704,31259925,0,0x0,8
tick,0x7ff86ea82704,31261335,0,0x0,8
tick,0x7ff86ea82704,31263200,0,0x0,8
tick,0x7ff86ea82704,31265337,0,0x0,8
tick,0x7ff86ea82704,31267209,0,0x0,8
tick,0x7ff86ea82704,31269230,0,0x0,8
tick,0x7ff86ea82704,31271151,0,0x0,8
tick,0x7ff86ea82704,31273610,0,0x0,8
tick,0x7ff86ea82704,31275261,0,0x0,8
tick,0x7ff86ea82704,31277320,0,0x0,8
tick,0x7ff86ea82704,31279162,0,0x0,8
tick,0x7ff86ea82704,31282169,0,0x0,8
tick,0x7ff86ea82704,31283281,0,0x0,8
tick,0x7ff86ea82704,31285320,0,0x0,8
tick,0x7ff86ea82704,31287182,0,0x0,8
tick,0x7ff86ea82704,31289331,0,0x0,8
tick,0x7ff86ea82704,31292287,0,0x0,8
tick,0x7ff86ea82704,31295506,0,0x0,8
tick,0x7ff86ea82704,31295563,0,0x0,8
tick,0x7ff86ea82704,31297304,0,0x0,8
tick,0x7ff86ea82704,31299241,0,0x0,8
tick,0x7ff86ea82704,31301327,0,0x0,8
tick,0x7ff86ea82704,31304665,0,0x0,8
tick,0x7ff86ea82704,31306362,0,0x0,8
tick,0x7ff86ea82704,31309602,0,0x0,8
tick,0x7ff86ea82704,31310508,0,0x0,8
tick,0x7ff86ea82704,31312214,0,0x0,8
tick,0x7ff86ea82704,31314255,0,0x0,8
tick,0x7ff86ea82704,31316304,0,0x0,8
tick,0x7ff86ea82704,31318251,0,0x0,8
tick,0x7ff86ea82704,31320154,0,0x0,8
tick,0x7ff86ea82704,31322349,0,0x0,8
tick,0x7ff86ea82704,31325331,0,0x0,8
tick,0x7ff86ea82704,31326712,0,0x0,8
tick,0x7ff86ea82704,31328162,0,0x0,8
tick,0x7ff86ea82704,31330292,0,0x0,8
tick,0x7ff86ea82704,31332147,0,0x0,8
tick,0x7ff86ea82704,31334250,0,0x0,8
tick,0x7ff86ea82704,31336223,0,0x0,8
tick,0x7ff86ea82704,31338083,0,0x0,8
tick,0x7ff86ea82704,31340595,0,0x0,8
tick,0x7ff86ea82704,31343782,0,0x0,8
tick,0x7ff86ea82704,31344350,0,0x0,8
tick,0x7ff86ea82704,31346114,0,0x0,8
tick,0x7ff86ea82704,31348371,0,0x0,8
tick,0x7ff86ea82704,31350104,0,0x0,8
tick,0x7ff86ea82704,31352267,0,0x0,8
tick,0x7ff86ea82704,31354235,0,0x0,8
tick,0x7ff86ea82704,31356358,0,0x0,8
tick,0x7ff86ea82704,31360359,0,0x0,8
tick,0x7ff86ea82704,31361128,0,0x0,8
tick,0x7ff86ea82704,31363028,0,0x0,8
tick,0x7ff86ea82704,31365092,0,0x0,8
tick,0x7ff86ea82704,31367608,0,0x0,8
tick,0x7ff86ea82704,31369060,0,0x0,8
tick,0x7ff86ea82704,31371157,0,0x0,8
tick,0x7ff86ea82704,31373531,0,0x0,8
tick,0x7ff86ea82704,31376131,0,0x0,8
tick,0x7ff86ea82704,31378016,0,0x0,8
tick,0x7ff86ea82704,31379971,0,0x0,8
tick,0x7ff86ea82704,31382016,0,0x0,8
tick,0x7ff86ea82704,31383976,0,0x0,8
tick,0x7ff86ea82704,31386007,0,0x0,8
tick,0x7ff86ea82704,31387997,0,0x0,8
tick,0x7ff86ea82704,31390232,0,0x0,8
tick,0x7ff86ea82704,31392455,0,0x0,8
tick,0x7ff86ea82704,31394196,0,0x0,8
tick,0x7ff86ea82704,31396078,0,0x0,8
tick,0x7ff86ea82704,31397987,0,0x0,8
tick,0x7ff86ea82704,31400060,0,0x0,8
tick,0x7ff86ea82704,31401899,0,0x0,8
tick,0x7ff86ea82704,31404149,0,0x0,8
tick,0x7ff86ea82704,31405875,0,0x0,8
tick,0x7ff86ea82704,31409251,0,0x0,8
tick,0x7ff86ea82704,31411046,0,0x0,8
tick,0x7ff86ea82704,31412913,0,0x0,8
tick,0x7ff86ea82704,31415003,0,0x0,8
tick,0x7ff86ea82704,31416886,0,0x0,8
tick,0x7ff86ea82704,31418957,0,0x0,8
tick,0x7ff86ea82704,31420946,0,0x0,8
tick,0x7ff86ea82704,31423041,0,0x0,8
tick,0x7ff86ea82704,31425855,0,0x0,8
tick,0x7ff86ea82704,31427180,0,0x0,8
tick,0x7ff86ea82704,31429108,0,0x0,8
tick,0x7ff86ea82704,31431086,0,0x0,8
tick,0x7ff86ea82704,31433051,0,0x0,8
tick,0x7ff86ea82704,31435149,0,0x0,8
tick,0x7ff86ea82704,31437146,0,0x0,8
tick,0x7ff86ea82704,31439188,0,0x0,8
tick,0x7ff86ea82704,31442336,0,0x0,8
tick,0x7ff86ea82704,31443807,0,0x0,8
tick,0x7ff86ea82704,31445810,0,0x0,8
tick,0x7ff86ea82704,31447747,0,0x0,8
tick,0x7ff86ea82704,31450077,0,0x0,8
tick,0x7ff86ea82704,31451827,0,0x0,8
tick,0x7ff86ea82704,31453991,0,0x0,8
tick,0x7ff86ea82704,31455734,0,0x0,8
tick,0x7ff86ea82704,31458049,0,0x0,8
tick,0x7ff86ea82704,31459772,0,0x0,8
tick,0x7ff86ea82704,31461855,0,0x0,8
tick,0x7ff86ea82704,31463740,0,0x0,8
tick,0x7ff86ea82704,31465847,0,0x0,8
tick,0x7ff86ea82704,31468231,0,0x0,8
tick,0x7ff86ea82704,31469769,0,0x0,8
tick,0x7ff86ea82704,31471927,0,0x0,8
tick,0x7ff86ea82704,31474343,0,0x0,8
tick,0x7ff86ea82704,31475806,0,0x0,8
tick,0x7ff86ea82704,31477832,0,0x0,8
tick,0x7ff86ea82704,31479924,0,0x0,8
tick,0x7ff86ea82704,31481753,0,0x0,8
tick,0x7ff86ea82704,31483821,0,0x0,8
tick,0x7ff86ea82704,31485686,0,0x0,8
tick,0x7ff86ea82704,31487737,0,0x0,8
tick,0x7ff86ea82704,31489679,0,0x0,8
tick,0x7ff86ea82704,31491800,0,0x0,8
tick,0x7ff86ea82704,31493653,0,0x0,8
tick,0x7ff86ea82704,31495780,0,0x0,8
tick,0x7ff86ea82704,31497727,0,0x0,8
tick,0x7ff86ea82704,31499992,0,0x0,8
tick,0x7ff86ea82704,31502362,0,0x0,8
tick,0x7ff86ea82704,31503764,0,0x0,8
tick,0x7ff86ea82704,31505934,0,0x0,8
tick,0x7ff86ea82704,31508361,0,0x0,8
tick,0x7ff86ea82704,31509714,0,0x0,8
tick,0x7ff86ea82704,31512176,0,0x0,8
tick,0x7ff86ea82704,31513933,0,0x0,8
tick,0x7ff86ea82704,31516596,0,0x0,8
tick,0x7ff86ea82704,31518249,0,0x0,8
tick,0x7ff86ea82704,31519917,0,0x0,8
tick,0x7ff86ea82704,31521814,0,0x0,8
tick,0x7ff86ea82704,31524190,0,0x0,8
tick,0x7ff86ea82704,31525630,0,0x0,8
tick,0x7ff86ea82704,31528005,0,0x0,8
tick,0x7ff86ea82704,31529849,0,0x0,8
tick,0x7ff86ea82704,31531827,0,0x0,8
tick,0x7ff86ea82704,31534142,0,0x0,8
tick,0x7ff86ea82704,31535805,0,0x0,8
tick,0x7ff86ea82704,31537669,0,0x0,8
tick,0x7ff86ea82704,31540321,0,0x0,8
tick,0x7ff86ea82704,31542654,0,0x0,8
tick,0x7ff86ea82704,31543742,0,0x0,8
tick,0x7ff86ea82704,31545614,0,0x0,8
tick,0x7ff86ea82704,31547478,0,0x0,8
tick,0x7ff86ea82704,31549482,0,0x0,8
tick,0x7ff86ea82704,31551635,0,0x0,8
tick,0x7ff86ea82704,31553579,0,0x0,8
tick,0x7ff86ea82704,31555532,0,0x0,8
tick,0x7ff86ea82704,31558525,0,0x0,8
tick,0x7ff86ea82704,31560124,0,0x0,8
tick,0x7ff86ea82704,31561447,0,0x0,8
tick,0x7ff86ea82704,31563579,0,0x0,8
tick,0x7ff86ea82704,31565476,0,0x0,8
tick,0x7ff86ea82704,31567524,0,0x0,8
tick,0x7ff86ea82704,31569520,0,0x0,8
tick,0x7ff86ea82704,31571587,0,0x0,8
tick,0x7ff86ea82704,31574126,0,0x0,8
tick,0x7ff86ea82704,31577580,0,0x0,8
tick,0x7ff86ea82704,31579907,0,0x0,8
tick,0x7ff86ea82704,31581595,0,0x0,8
tick,0x7ff86ea82704,31583525,0,0x0,8
tick,0x7ff86ea82704,31585582,0,0x0,8
tick,0x7ff86ea82704,31587695,0,0x0,8
tick,0x7ff86ea82704,31589641,0,0x0,8
tick,0x7ff86ea82704,31592763,0,0x0,8
tick,0x7ff86ea82704,31594557,0,0x0,8
tick,0x7ff86ea82704,31596501,0,0x0,8
tick,0x7ff86ea82704,31598545,0,0x0,8
tick,0x7ff86ea82704,31600458,0,0x0,8
tick,0x7ff86ea82704,31602746,0,0x0,8
tick,0x7ff86ea82704,31604521,0,0x0,8
tick,0x7ff86ea82704,31607572,0,0x0,8
tick,0x7ff86ea82704,31609315,0,0x0,8
tick,0x7ff86ea82704,31610551,0,0x0,8
tick,0x7ff86ea82704,31612409,0,0x0,8
tick,0x7ff86ea82704,31614439,0,0x0,8
tick,0x7ff86ea82704,31616435,0,0x0,8
tick,0x7ff86ea82704,31618505,0,0x0,8
tick,0x7ff86ea82704,31620453,0,0x0,8
tick,0x7ff86ea82704,31622467,0,0x0,8
tick,0x7ff86ea82704,31625561,0,0x0,8
tick,0x7ff86ea82704,31626561,0,0x0,8
tick,0x7ff86ea82704,31628450,0,0x0,8
tick,0x7ff86ea82704,31630406,0,0x0,8
tick,0x7ff86ea82704,31633219,0,0x0,8
tick,0x7ff86ea82704,31635431,0,0x0,8
tick,0x7ff86ea82704,31637262,0,0x0,8
tick,0x7ff86ea82704,31639333,0,0x0,8
tick,0x7ff86ea82704,31641881,0,0x0,8
tick,0x7ff86ea82704,31643378,0,0x0,8
tick,0x7ff86ea82704,31645369,0,0x0,8
tick,0x7ff86ea82704,31647279,0,0x0,8
tick,0x7ff86ea82704,31649266,0,0x0,8
tick,0x7ff86ea82704,31651397,0,0x0,8
tick,0x7ff86ea82704,31653212,0,0x0,8
tick,0x7ff86ea82704,31655242,0,0x0,8
tick,0x7ff86ea82704,31657413,0,0x0,8
tick,0x7ff86ea82704,31659485,0,0x0,8
tick,0x7ff86ea82704,31661206,0,0x0,8
tick,0x7ff86ea82704,31663402,0,0x0,8
tick,0x7ff86ea82704,31665257,0,0x0,8
tick,0x7ff86ea82704,31667228,0,0x0,8
tick,0x7ff86ea82704,31669395,0,0x0,8
tick,0x7ff86ea82704,31671612,0,0x0,8
tick,0x7ff86ea82704,31673379,0,0x0,8
tick,0x7ff86ea82704,31675714,0,0x0,8
tick,0x7ff86ea82704,31677219,0,0x0,8
tick,0x7ff86ea82704,31679175,0,0x0,8
tick,0x7ff86ea82704,31681376,0,0x0,8
tick,0x7ff86ea82704,31683169,0,0x0,8
tick,0x7ff86ea82704,31685325,0,0x0,8
tick,0x7ff86ea82704,31687331,0,0x0,8
tick,0x7ff86ea82704,31689264,0,0x0,8
tick,0x7ff86ea82704,31692355,0,0x0,8
tick,0x7ff86ea82704,31693167,0,0x0,8
tick,0x7ff86ea82704,31695191,0,0x0,8
tick,0x7ff86ea82704,31697070,0,0x0,8
tick,0x7ff86ea82704,31699134,0,0x0,8
tick,0x7ff86ea82704,31701476,0,0x0,8
tick,0x7ff86ea82704,31703220,0,0x0,8
tick,0x7ff86ea82704,31705154,0,0x0,8
tick,0x7ff86ea82704,31707772,0,0x0,8
tick,0x7ff86ea82704,31709501,0,0x0,8
tick,0x7ff86ea82704,31712148,0,0x0,8
tick,0x7ff86ea82704,31713103,0,0x0,8
tick,0x7ff86ea82704,31715442,0,0x0,8
tick,0x7ff86ea82704,31717357,0,0x0,8
tick,0x7ff86ea82704,31719094,0,0x0,8
tick,0x7ff86ea82704,31721083,0,0x0,8
tick,0x7ff86ea82704,31723080,0,0x0,8
tick,0x7ff86ea82704,31725817,0,0x0,8
tick,0x7ff86ea82704,31727735,0,0x0,8
tick,0x7ff86ea82704,31729255,0,0x0,8
tick,0x7ff86ea82704,31730992,0,0x0,8
tick,0x7ff86ea82704,31733594,0,0x0,8
tick,0x7ff86ea82704,31735196,0,0x0,8
tick,0x7ff86ea82704,31736980,0,0x0,8
tick,0x7ff86ea82704,31739205,0,0x0,8
tick,0x7ff86ea82704,31741754,0,0x0,8
tick,0x7ff86ea82704,31745531,0,0x0,8
tick,0x7ff86ea82704,31745580,0,0x0,8
tick,0x7ff86ea82704,31747012,0,0x0,8
tick,0x7ff86ea82704,31749347,0,0x0,8
tick,0x7ff86ea82704,31751193,0,0x0,8
tick,0x7ff86ea82704,31753378,0,0x0,8
tick,0x7ff86ea82704,31755134,0,0x0,8
tick,0x7ff86ea82704,31757313,0,0x0,8
tick,0x7ff86ea82704,31759889,0,0x0,8
tick,0x7ff86ea82704,31761084,0,0x0,8
tick,0x7ff86ea82704,31762945,0,0x0,8
tick,0x7ff86ea82704,31765126,0,0x0,8
tick,0x7ff86ea82704,31767074,0,0x0,8
tick,0x7ff86ea82704,31769238,0,0x0,8
tick,0x7ff86ea82704,31770939,0,0x0,8
tick,0x7ff86ea82704,31773224,0,0x0,8
tick,0x7ff86ea82704,31775296,0,0x0,8
tick,0x7ff86ea82704,31776973,0,0x0,8
tick,0x7ff86ea82704,31778949,0,0x0,8
tick,0x7ff86ea82704,31781083,0,0x0,8
tick,0x7ff86ea82704,31782914,0,0x0,8
tick,0x7ff86ea82704,31785353,0,0x0,8
tick,0x7ff86ea82704,31786996,0,0x0,8
tick,0x7ff86ea82704,31789388,0,0x0,8
tick,0x7ff86ea82704,31791745,0,0x0,8
tick,0x7ff86ea82704,31793835,0,0x0,8
tick,0x7ff86ea82704,31796116,0,0x0,8
tick,0x7ff86ea82704,31797925,0,0x0,8
tick,0x7ff86ea82704,31799995,0,0x0,8
tick,0x7ff86ea82704,31801990,0,0x0,8
tick,0x7ff86ea82704,31804053,0,0x0,8
tick,0x7ff86ea82704,31806050,0,0x0,8
tick,0x7ff86ea82704,31808573,0,0x0,8
tick,0x7ff86ea82704,31809870,0,0x0,8
tick,0x7ff86ea82704,31812156,0,0x0,8
tick,0x7ff86ea82704,31813878,0,0x0,8
tick,0x7ff86ea82704,31815971,0,0x0,8
tick,0x7ff86ea82704,31817852,0,0x0,8
tick,0x7ff86ea82704,31820036,0,0x0,8
tick,0x7ff86ea82704,31821908,0,0x0,8
tick,0x7ff86ea82704,31824374,0,0x0,8
tick,0x7ff86ea82704,31826095,0,0x0,8
tick,0x7ff86ea82704,31828071,0,0x0,8
tick,0x7ff86ea82704,31829754,0,0x0,8
tick,0x7ff86ea82704,31831934,0,0x0,8
tick,0x7ff86ea82704,31833809,0,0x0,8
tick,0x7ff86ea82704,31835902,0,0x0,8
tick,0x7ff86ea82704,31837820,0,0x0,8
tick,0x7ff86ea82704,31841085,0,0x0,8
tick,0x7ff86ea82704,31842568,0,0x0,8
tick,0x7ff86ea82704,31843827,0,0x0,8
tick,0x7ff86ea82704,31845851,0,0x0,8
tick,0x7ff86ea82704,31847790,0,0x0,8
tick,0x7ff86ea82704,31849879,0,0x0,8
tick,0x7ff86ea82704,31851784,0,0x0,8
tick,0x7ff86ea82704,31853907,0,0x0,8
tick,0x7ff86ea82704,31855753,0,0x0,8
tick,0x7ff86ea82704,31858162,0,0x0,8
tick,0x7ff86ea82704,31859645,0,0x0,8
tick,0x7ff86ea82704,31861771,0,0x0,8
tick,0x7ff86ea82704,31863636,0,0x0,8
tick,0x7ff86ea82704,31865674,0,0x0,8
tick,0x7ff86ea82704,31867601,0,0x0,8
tick,0x7ff86ea82704,31869984,0,0x0,8
tick,0x7ff86ea82704,31871717,0,0x0,8
tick,0x7ff86ea82704,31875948,0,0x0,8
tick,0x7ff86ea82704,31875979,0,0x0,8
tick,0x7ff86ea82704,31877671,0,0x0,8
tick,0x7ff86ea82704,31879629,0,0x0,8
tick,0x7ff86ea82704,31881729,0,0x0,8
tick,0x7ff86ea82704,31883711,0,0x0,8
tick,0x7ff86ea82704,31885765,0,0x0,8
tick,0x7ff86ea82704,31887636,0,0x0,8
tick,0x7ff86ea82704,31889988,0,0x0,8
tick,0x7ff86ea82704,31892215,0,0x0,8
tick,0x7ff86ea82704,31893701,0,0x0,8
tick,0x7ff86ea82704,31895713,0,0x0,8
tick,0x7ff86ea82704,31897732,0,0x0,8
tick,0x7ff86ea82704,31899891,0,0x0,8
tick,0x7ff86ea82704,31901767,0,0x0,8
tick,0x7ff86ea82704,31903610,0,0x0,8
tick,0x7ff86ea82704,31905764,0,0x0,8
tick,0x7ff86ea82704,31908090,0,0x0,8
tick,0x7ff86ea82704,31909645,0,0x0,8
tick,0x7ff86ea82704,31911473,0,0x0,8
tick,0x7ff86ea82704,31913584,0,0x0,8
tick,0x7ff86ea82704,31915592,0,0x0,8
tick,0x7ff86ea82704,31917679,0,0x0,8
tick,0x7ff86ea82704,31919532,0,0x0,8
tick,0x7ff86ea82704,31921578,0,0x0,8
tick,0x7ff86ea82704,31923811,0,0x0,8
tick,0x7ff86ea82704,31925984,0,0x0,8
tick,0x7ff86ea82704,31927454,0,0x0,8
tick,0x7ff86ea82704,31929535,0,0x0,8
tick,0x7ff86ea82704,31931549,0,0x0,8
tick,0x7ff86ea82704,31933675,0,0x0,8
tick,0x7ff86ea82704,31935513,0,0x0,8
tick,0x7ff86ea82704,31937821,0,0x0,8
tick,0x7ff86ea82704,31939572,0,0x0,8
tick,0x7ff86ea82704,31942617,0,0x0,8
tick,0x7ff86ea82704,31944663,0,0x0,8
tick,0x7ff86ea82704,31946804,0,0x0,8
tick,0x7ff86ea82704,31948666,0,0x0,8
tick,0x7ff86ea82704,31950618,0,0x0,8
tick,0x7ff86ea82704,31952647,0,0x0,8
tick,0x7ff86ea82704,31954929,0,0x0,8
tick,0x7ff86ea82704,31956752,0,0x0,8
tick,0x7ff86ea82704,31959996,0,0x0,8
tick,0x7ff86ea82704,31961382,0,0x0,8
tick,0x7ff86ea82704,31963488,0,0x0,8
tick,0x7ff86ea82704,31965454,0,0x0,8
tick,0x7ff86ea82704,31967524,0,0x0,8
tick,0x7ff86ea82704,31969319,0,0x0,8
tick,0x7ff86ea82704,31971598,0,0x0,8
tick,0x7ff86ea82704,31973572,0,0x0,8
tick,0x7ff86ea82704,31976299,0,0x0,8
tick,0x7ff86ea82704,31978393,0,0x0,8
tick,0x7ff86ea82704,31980557,0,0x0,8
tick,0x7ff86ea82704,31982391,0,0x0,8
tick,0x7ff86ea82704,31984509,0,0x0,8
tick,0x7ff86ea82704,31986617,0,0x0,8
tick,0x7ff86ea82704,31988404,0,0x0,8
tick,0x7ff86ea82704,31990594,0,0x0,8
tick,0x7ff86ea82704,31992971,0,0x0,8
tick,0x7ff86ea82704,31994423,0,0x0,8
tick,0x7ff86ea82704,31996624,0,0x0,8
tick,0x7ff86ea82704,31998347,0,0x0,8
tick,0x7ff86ea82704,32000566,0,0x0,8
tick,0x7ff86ea82704,32002427,0,0x0,8
tick,0x7ff86ea82704,32004544,0,0x0,8
tick,0x7ff86ea82704,32006332,0,0x0,8
tick,0x7ff86ea82704,32009288,0,0x0,8
tick,0x7ff86ea82704,32010323,0,0x0,8
tick,0x7ff86ea82704,32012722,0,0x0,8
tick,0x7ff86ea82704,32014318,0,0x0,8
tick,0x7ff86ea82704,32016403,0,0x0,8
tick,0x7ff86ea82704,32018386,0,0x0,8
tick,0x7ff86ea82704,32020383,0,0x0,8
tick,0x7ff86ea82704,32022450,0,0x0,8
tick,0x7ff86ea82704,32025479,0,0x0,8
tick,0x7ff86ea82704,32026387,0,0x0,8
tick,0x7ff86ea82704,32028484,0,0x0,8
tick,0x7ff86ea82704,32030420,0,0x0,8
tick,0x7ff86ea82704,32032563,0,0x0,8
tick,0x7ff86ea82704,32034210,0,0x0,8
tick,0x7ff86ea82704,32036286,0,0x0,8
tick,0x7ff86ea82704,32038364,0,0x0,8
tick,0x7ff86ea82704,32040624,0,0x0,8
tick,0x7ff86ea82704,32042737,0,0x0,8
tick,0x7ff86ea82704,32044229,0,0x0,8
tick,0x7ff86ea82704,32046316,0,0x0,8
tick,0x7ff86ea82704,32048372,0,0x0,8
tick,0x7ff86ea82704,32050324,0,0x0,8
tick,0x7ff86ea82704,32052240,0,0x0,8
tick,0x7ff86ea82704,32054405,0,0x0,8
tick,0x7ff86ea82704,32056266,0,0x0,8
tick,0x7ff86ea82704,32058848,0,0x0,8
tick,0x7ff86ea82704,32060107,0,0x0,8
tick,0x7ff86ea82704,32062303,0,0x0,8
tick,0x7ff86ea82704,32064166,0,0x0,8
tick,0x7ff86ea82704,32066211,0,0x0,8
tick,0x7ff86ea82704,32068178,0,0x0,8
tick,0x7ff86ea82704,32070158,0,0x0,8
tick,0x7ff86ea82704,32072181,0,0x0,8
tick,0x7ff86ea82704,32074764,0,0x0,8
tick,0x7ff86ea82704,32077381,0,0x0,8
tick,0x7ff86ea82704,32079211,0,0x0,8
tick,0x7ff86ea82704,32081297,0,0x0,8
tick,0x7ff86ea82704,32083190,0,0x0,8
tick,0x7ff86ea82704,32085212,0,0x0,8
tick,0x7ff86ea82704,32087219,0,0x0,8
tick,0x7ff86ea82704,32089373,0,0x0,8
tick,0x7ff86ea82704,32091241,0,0x0,8
tick,0x7ff86ea82704,32093078,0,0x0,8
tick,0x7ff86ea82704,32095175,0,0x0,8
tick,0x7ff86ea82704,32097647,0,0x0,8
tick,0x7ff86ea82704,32099330,0,0x0,8
tick,0x7ff86ea82704,32101271,0,0x0,8
tick,0x7ff86ea82704,32103247,0,0x0,8
tick,0x7ff86ea82704,32105205,0,0x0,8
tick,0x7ff86ea82704,32107352,0,0x0,8
tick,0x7ff86ea82704,32109554,0,0x0,8
tick,0x7ff86ea82704,32111038,0,0x0,8
tick,0x7ff86ea82704,32113388,0,0x0,8
tick,0x7ff86ea82704,32115235,0,0x0,8
tick,0x7ff86ea82704,32117074,0,0x0,8
tick,0x7ff86ea82704,32119054,0,0x0,8
tick,0x7ff86ea82704,32121083,0,0x0,8
tick,0x7ff86ea82704,32123620,0,0x0,8
tick,0x7ff86ea82704,32126404,0,0x0,8
tick,0x7ff86ea82704,32127872,0,0x0,8
tick,0x7ff86ea82704,32129188,0,0x0,8
tick,0x7ff86ea82704,32131151,0,0x0,8
tick,0x7ff86ea82704,32133455,0,0x0,8
tick,0x7ff86ea82704,32135012,0,0x0,8
tick,0x7ff86ea82704,32137487,0,0x0,8
tick,0x7ff86ea82704,32139077,0,0x0,8
tick,0x7ff86ea82704,32145025,0,0x0,8
tick,0x7ff86ea82704,32145107,0,0x0,8
tick,0x7ff86ea82704,32145127,0,0x0,8
tick,0x7ff86ea82704,32147051,0,0x0,8
tick,0x7ff86ea82704,32149125,0,0x0,8
tick,0x7ff86ea82704,32150942,0,0x0,8
tick,0x7ff86ea82704,32153083,0,0x0,8
tick,0x7ff86ea82704,32155010,0,0x0,8
tick,0x7ff86ea82704,32157322,0,0x0,8
tick,0x7ff86ea82704,32159779,0,0x0,8
tick,0x7ff86ea82704,32161091,0,0x0,8
tick,0x7ff86ea82704,32163159,0,0x0,8
tick,0x7ff86ea82704,32164960,0,0x0,8
tick,0x7ff86ea82704,32166938,0,0x0,8
tick,0x7ff86ea82704,32168908,0,0x0,8
tick,0x7ff86ea82704,32171016,0,0x0,8
tick,0x7ff86ea82704,32172921,0,0x0,8
tick,0x7ff86ea82704,32177595,0,0x0,8
tick,0x7ff86ea82704,32177625,0,0x0,8
tick,0x7ff86ea82704,32178856,0,0x0,8
tick,0x7ff86ea82704,32180853,0,0x0,8
tick,0x7ff86ea82704,32183011,0,0x0,8
tick,0x7ff86ea82704,32185933,0,0x0,8
tick,0x7ff86ea82704,32188141,0,0x0,8
tick,0x7ff86ea82704,32190450,0,0x0,8
tick,0x7ff86ea82704,32192490,0,0x0,8
tick,0x7ff86ea82704,32194067,0,0x0,8
tick,0x7ff86ea82704,32196085,0,0x0,8
tick,0x7ff86ea82704,32198031,0,0x0,8
tick,0x7ff86ea82704,32200025,0,0x0,8
tick,0x7ff86ea82704,32202118,0,0x0,8
tick,0x7ff86ea82704,32204220,0,0x0,8
tick,0x7ff86ea82704,32206161,0,0x0,8
tick,0x7ff86ea82704,32208484,0,0x0,8
tick,0x7ff86ea82704,32209917,0,0x0,8
tick,0x7ff86ea82704,32212006,0,0x0,8
tick,0x7ff86ea82704,32213989,0,0x0,8
tick,0x7ff86ea82704,32215840,0,0x0,8
tick,0x7ff86ea82704,32217772,0,0x0,8
tick,0x7ff86ea82704,32219926,0,0x0,8
tick,0x7ff86ea82704,32221761,0,0x0,8
tick,0x7ff86ea82704,32223977,0,0x0,8
tick,0x7ff86ea82704,32225877,0,0x0,8
tick,0x7ff86ea82704,32228092,0,0x0,8
tick,0x7ff86ea82704,32229899,0,0x0,8
tick,0x7ff86ea82704,32232219,0,0x0,8
tick,0x7ff86ea82704,32233812,0,0x0,8
tick,0x7ff86ea82704,32235849,0,0x0,8
tick,0x7ff86ea82704,32238050,0,0x0,8
tick,0x7ff86ea82704,32240026,0,0x0,8
tick,0x7ff86ea82704,32242046,0,0x0,8
tick,0x7ff86ea82704,32243911,0,0x0,8
tick,0x7ff86ea82704,32245759,0,0x0,8
tick,0x7ff86ea82704,32247769,0,0x0,8
tick,0x7ff86ea82704,32249867,0,0x0,8
tick,0x7ff86ea82704,32251819,0,0x0,8
tick,0x7ff86ea82704,32253825,0,0x0,8
tick,0x7ff86ea82704,32255913,0,0x0,8
tick,0x7ff86ea82704,32258063,0,0x0,8
tick,0x7ff86ea82704,32259752,0,0x0,8
tick,0x7ff86ea82704,32261784,0,0x0,8
tick,0x7ff86ea82704,32263930,0,0x0,8
tick,0x7ff86ea82704,32266171,0,0x0,8
tick,0x7ff86ea82704,32267707,0,0x0,8
tick,0x7ff86ea82704,32269722,0,0x0,8
tick,0x7ff86ea82704,32271759,0,0x0,8
tick,0x7ff86ea82704,32273782,0,0x0,8
tick,0x7ff86ea82704,32275917,0,0x0,8
tick,0x7ff86ea82704,32277659,0,0x0,8
tick,0x7ff86ea82704,32279850,0,0x0,8
tick,0x7ff86ea82704,32281669,0,0x0,8
tick,0x7ff86ea82704,32283677,0,0x0,8
tick,0x7ff86ea82704,32285639,0,0x0,8
tick,0x7ff86ea82704,32287698,0,0x0,8
tick,0x7ff86ea82704,32289735,0,0x0,8
tick,0x7ff86ea82704,32291695,0,0x0,8
tick,0x7ff86ea82704,32293805,0,0x0,8
tick,0x7ff86ea82704,32295701,0,0x0,8
tick,0x7ff86ea82704,32298361,0,0x0,8
tick,0x7ff86ea82704,32300980,0,0x0,8
tick,0x7ff86ea82704,32302589,0,0x0,8
tick,0x7ff86ea82704,32304481,0,0x0,8
tick,0x7ff86ea82704,32306449,0,0x0,8
tick,0x7ff86ea82704,32308546,0,0x0,8
tick,0x7ff86ea82704,32310503,0,0x0,8
tick,0x7ff86ea82704,32312605,0,0x0,8
tick,0x7ff86ea82704,32314438,0,0x0,8
tick,0x7ff86ea82704,32316492,0,0x0,8
tick,0x7ff86ea82704,32318428,0,0x0,8
tick,0x7ff86ea82704,32320487,0,0x0,8
tick,0x7ff86ea82704,32322452,0,0x0,8
tick,0x7ff86ea82704,32324653,0,0x0,8
tick,0x7ff86ea82704,32326418,0,0x0,8
tick,0x7ff86ea82704,32328572,0,0x0,8
tick,0x7ff86ea82704,32330412,0,0x0,8
tick,0x7ff86ea82704,32332417,0,0x0,8
tick,0x7ff86ea82704,32334426,0,0x0,8
tick,0x7ff86ea82704,32336530,0,0x0,8
tick,0x7ff86ea82704,32338426,0,0x0,8
tick,0x7ff86ea82704,32340307,0,0x0,8
tick,0x7ff86ea82704,32342545,0,0x0,8
tick,0x7ff86ea82704,32344326,0,0x0,8
tick,0x7ff86ea82704,32346444,0,0x0,8
tick,0x7ff86ea82704,32348311,0,0x0,8
tick,0x7ff86ea82704,32350404,0,0x0,8
tick,0x7ff86ea82704,32352347,0,0x0,8
tick,0x7ff86ea82704,32354438,0,0x0,8
tick,0x7ff86ea82704,32356279,0,0x0,8
tick,0x7ff86ea82704,32358372,0,0x0,8
tick,0x7ff86ea82704,32360312,0,0x0,8
tick,0x7ff86ea82704,32362410,0,0x0,8
tick,0x7ff86ea82704,32364347,0,0x0,8
tick,0x7ff86ea82704,32366481,0,0x0,8
tick,0x7ff86ea82704,32368320,0,0x0,8
tick,0x7ff86ea82704,32370306,0,0x0,8
tick,0x7ff86ea82704,32372248,0,0x0,8
tick,0x7ff86ea82704,32374289,0,0x0,8
tick,0x7ff86ea82704,32376307,0,0x0,8
tick,0x7ff86ea82704,32378298,0,0x0,8
tick,0x7ff86ea82704,32380235,0,0x0,8
tick,0x7ff86ea82704,32382292,0,0x0,8
tick,0x7ff86ea82704,32384485,0,0x0,8
tick,0x7ff86ea82704,32386322,0,0x0,8
tick,0x7ff86ea82704,32388287,0,0x0,8
tick,0x7ff86ea82704,32390314,0,0x0,8
tick,0x7ff86ea82704,32392216,0,0x0,8
tick,0x7ff86ea82704,32394250,0,0x0,8
tick,0x7ff86ea82704,32396240,0,0x0,8
tick,0x7ff86ea82704,32398370,0,0x0,8
tick,0x7ff86ea82704,32400147,0,0x0,8
tick,0x7ff86ea82704,32402275,0,0x0,8
tick,0x7ff86ea82704,32404194,0,0x0,8
tick,0x7ff86ea82704,32406245,0,0x0,8
tick,0x7ff86ea82704,32408292,0,0x0,8
tick,0x7ff86ea82704,32410253,0,0x0,8
tick,0x7ff86ea82704,32412175,0,0x0,8
tick,0x7ff86ea82704,32414243,0,0x0,8
tick,0x7ff86ea82704,32416241,0,0x0,8
tick,0x7ff86ea82704,32418126,0,0x0,8
tick,0x7ff86ea82704,32420150,0,0x0,8
tick,0x7ff86ea82704,32422183,0,0x0,8
tick,0x7ff86ea82704,32424239,0,0x0,8
tick,0x7ff86ea82704,32426199,0,0x0,8
tick,0x7ff86ea82704,32428124,0,0x0,8
tick,0x7ff86ea82704,32430123,0,0x0,8
tick,0x7ff86ea82704,32432093,0,0x0,8
tick,0x7ff86ea82704,32434202,0,0x0,8
tick,0x7ff86ea82704,32436086,0,0x0,8
tick,0x7ff86ea82704,32438101,0,0x0,8
tick,0x7ff86ea82704,32440167,0,0x0,8
tick,0x7ff86ea82704,32442323,0,0x0,8
tick,0x7ff86ea82704,32444171,0,0x0,8
tick,0x7ff86ea82704,32446088,0,0x0,8
tick,0x7ff86ea82704,32448151,0,0x0,8
tick,0x7ff86ea82704,32450130,0,0x0,8
tick,0x7ff86ea82704,32452098,0,0x0,8
tick,0x7ff86ea82704,32454218,0,0x0,8
tick,0x7ff86ea82704,32456247,0,0x0,8
tick,0x7ff86ea82704,32458371,0,0x0,8
tick,0x7ff86ea82704,32460074,0,0x0,8
tick,0x7ff86ea82704,32462053,0,0x0,8
tick,0x7ff86ea82704,32464170,0,0x0,8
tick,0x7ff86ea82704,32466067,0,0x0,8
tick,0x7ff86ea82704,32468050,0,0x0,8
tick,0x7ff86ea82704,32470065,0,0x0,8
tick,0x7ff86ea82704,32472141,0,0x0,8
tick,0x7ff86ea82704,32474017,0,0x0,8
tick,0x7ff86ea82704,32476099,0,0x0,8
tick,0x7ff86ea82704,32478047,0,0x0,8
tick,0x7ff86ea82704,32480064,0,0x0,8
tick,0x7ff86ea82704,32482040,0,0x0,8
tick,0x7ff86ea82704,32483971,0,0x0,8
tick,0x7ff86ea82704,32486040,0,0x0,8
tick,0x7ff86ea82704,32488066,0,0x0,8
tick,0x7ff86ea82704,32490251,0,0x0,8
tick,0x7ff86ea82704,32492064,0,0x0,8
tick,0x7ff86ea82704,32494059,0,0x0,8
tick,0x7ff86ea82704,32495935,0,0x0,8
tick,0x7ff86ea82704,32498068,0,0x0,8
tick,0x7ff86ea82704,32499911,0,0x0,8
tick,0x7ff86ea82704,32501989,0,0x0,8
tick,0x7ff86ea82704,32503912,0,0x0,8
tick,0x7ff86ea82704,32506001,0,0x0,8
tick,0x7ff86ea82704,32507892,0,0x0,8
tick,0x7ff86ea82704,32510176,0,0x0,8
tick,0x7ff86ea82704,32511954,0,0x0,8
tick,0x7ff86ea82704,32514016,0,0x0,8
tick,0x7ff86ea82704,32515960,0,0x0,8
tick,0x7ff86ea82704,32518011,0,0x0,8
tick,0x7ff86ea82704,32520128,0,0x0,8
tick,0x7ff86ea82704,32522022,0,0x0,8
tick,0x7ff86ea82704,32523977,0,0x0,8
tick,0x7ff86ea82704,32526113,0,0x0,8
tick,0x7ff86ea82704,32527981,0,0x0,8
tick,0x7ff86ea82704,32529896,0,0x0,8
tick,0x7ff86ea82704,32531889,0,0x0,8
tick,0x7ff86ea82704,32534009,0,0x0,8
tick,0x7ff86ea82704,32536167,0,0x0,8
tick,0x7ff86ea82704,32537875,0,0x0,8
tick,0x7ff86ea82704,32540079,0,0x0,8
tick,0x7ff86ea82704,32542038,0,0x0,8
tick,0x7ff86ea82704,32543935,0,0x0,8
tick,0x7ff86ea82704,32546077,0,0x0,8
tick,0x7ff86ea82704,32547925,0,0x0,8
tick,0x7ff86ea82704,32549801,0,0x0,8
tick,0x7ff86ea82704,32551960,0,0x0,8
tick,0x7ff86ea82704,32553905,0,0x0,8
tick,0x7ff86ea82704,32555850,0,0x0,8
tick,0x7ff86ea82704,32558079,0,0x0,8
tick,0x7ff86ea82704,32559926,0,0x0,8
tick,0x7ff86ea82704,32561923,0,0x0,8
tick,0x7ff86ea82704,32563791,0,0x0,8
tick,0x7ff86ea82704,32566116,0,0x0,8
tick,0x7ff86ea82704,32567883,0,0x0,8
tick,0x7ff86ea82704,32570003,0,0x0,8
tick,0x7ff86ea82704,32571823,0,0x0,8
tick,0x7ff86ea82704,32574074,0,0x0,8
tick,0x7ff86ea82704,32575781,0,0x0,8
tick,0x7ff86ea82704,32577964,0,0x0,8
tick,0x7ff86ea82704,32579957,0,0x0,8
tick,0x7ff86ea82704,32581953,0,0x0,8
tick,0x7ff86ea82704,32583851,0,0x0,8
tick,0x7ff86ea82704,32585925,0,0x0,8
tick,0x7ff86ea82704,32587850,0,0x0,8
tick,0x7ff86ea82704,32589876,0,0x0,8
tick,0x7ff86ea82704,32591707,0,0x0,8
tick,0x7ff86ea82704,32593806,0,0x0,8
tick,0x7ff86ea82704,32595783,0,0x0,8
tick,0x7ff86ea82704,32597993,0,0x0,8
tick,0x7ff86ea82704,32599967,0,0x0,8
tick,0x7ff86ea82704,32601844,0,0x0,8
tick,0x7ff86ea82704,32603765,0,0x0,8
tick,0x7ff86ea82704,32605907,0,0x0,8
tick,0x7ff86ea82704,32607900,0,0x0,8
tick,0x7ff86ea82704,32609801,0,0x0,8
tick,0x7ff86ea82704,32612036,0,0x0,8
tick,0x7ff86ea82704,32613727,0,0x0,8
tick,0x7ff86ea82704,32615784,0,0x0,8
tick,0x7ff86ea82704,32617736,0,0x0,8
tick,0x7ff86ea82704,32619723,0,0x0,8
tick,0x7ff86ea82704,32621675,0,0x0,8
tick,0x7ff86ea82704,32623705,0,0x0,8
tick,0x7ff86ea82704,32625696,0,0x0,8
tick,0x7ff86ea82704,32627652,0,0x0,8
tick,0x7ff86ea82704,32629678,0,0x0,8
tick,0x7ff86ea82704,32631564,0,0x0,8
tick,0x7ff86ea82704,32633614,0,0x0,8
tick,0x7ff86ea82704,32635747,0,0x0,8
tick,0x7ff86ea82704,32637549,0,0x0,8
tick,0x7ff86ea82704,32639658,0,0x0,8
tick,0x7ff86ea82704,32641582,0,0x0,8
tick,0x7ff86ea82704,32643704,0,0x0,8
tick,0x7ff86ea82704,32645521,0,0x0,8
tick,0x7ff86ea82704,32647639,0,0x0,8
tick,0x7ff86ea82704,32649609,0,0x0,8
tick,0x7ff86ea82704,32651640,0,0x0,8
tick,0x7ff86ea82704,32653596,0,0x0,8
tick,0x7ff86ea82704,32655612,0,0x0,8
tick,0x7ff86ea82704,32657584,0,0x0,8
tick,0x7ff86ea82704,32659630,0,0x0,8
tick,0x7ff86ea82704,32661568,0,0x0,8
tick,0x7ff86ea82704,32663593,0,0x0,8
tick,0x7ff86ea82704,32665575,0,0x0,8
tick,0x7ff86ea82704,32667597,0,0x0,8
tick,0x7ff86ea82704,32669523,0,0x0,8
tick,0x7ff86ea82704,32671592,0,0x0,8
tick,0x7ff86ea82704,32673489,0,0x0,8
tick,0x7ff86ea82704,32675603,0,0x0,8
tick,0x7ff86ea82704,32677430,0,0x0,8
tick,0x7ff86ea82704,32679493,0,0x0,8
tick,0x7ff86ea82704,32681509,0,0x0,8
tick,0x7ff86ea82704,32683540,0,0x0,8
tick,0x7ff86ea82704,32685469,0,0x0,8
tick,0x7ff86ea82704,32687572,0,0x0,8
tick,0x7ff86ea82704,32689488,0,0x0,8
tick,0x7ff86ea82704,32691605,0,0x0,8
tick,0x7ff86ea82704,32693438,0,0x0,8
tick,0x7ff86ea82704,32695492,0,0x0,8
tick,0x7ff86ea82704,32697424,0,0x0,8
tick,0x7ff86ea82704,32699444,0,0x0,8
tick,0x7ff86ea82704,32701485,0,0x0,8
tick,0x7ff86ea82704,32703420,0,0x0,8
tick,0x7ff86ea82704,32705502,0,0x0,8
tick,0x7ff86ea82704,32707423,0,0x0,8
tick,0x7ff86ea82704,32709535,0,0x0,8
tick,0x7ff86ea82704,32711471,0,0x0,8
tick,0x7ff86ea82704,32713428,0,0x0,8
tick,0x7ff86ea82704,32715407,0,0x0,8
tick,0x7ff86ea82704,32717569,0,0x0,8
tick,0x7ff86ea82704,32719570,0,0x0,8
tick,0x7ff86ea82704,32721652,0,0x0,8
tick,0x7ff86ea82704,32723871,0,0x0,8
tick,0x7ff86ea82704,32725485,0,0x0,8
tick,0x7ff86ea82704,32727675,0,0x0,8
tick,0x7ff86ea82704,32729367,0,0x0,8
tick,0x7ff86ea82704,32731424,0,0x0,8
tick,0x7ff86ea82704,32733381,0,0x0,8
tick,0x7ff86ea82704,32735401,0,0x0,8
tick,0x7ff86ea82704,32737363,0,0x0,8
tick,0x7ff86ea82704,32739355,0,0x0,8
tick,0x7ff86ea82704,32741480,0,0x0,8
tick,0x7ff86ea82704,32743402,0,0x0,8
tick,0x7ff86ea82704,32745359,0,0x0,8
tick,0x7ff86ea82704,32747262,0,0x0,8
tick,0x7ff86ea82704,32749356,0,0x0,8
tick,0x7ff86ea82704,32751360,0,0x0,8
tick,0x7ff86ea82704,32753351,0,0x0,8
tick,0x7ff86ea82704,32755419,0,0x0,8
tick,0x7ff86ea82704,32757310,0,0x0,8
tick,0x7ff86ea82704,32759406,0,0x0,8
tick,0x7ff86ea82704,32761332,0,0x0,8
tick,0x7ff86ea82704,32763379,0,0x0,8
tick,0x7ff86ea82704,32765314,0,0x0,8
tick,0x7ff86ea82704,32767355,0,0x0,8
tick,0x7ff86ea82704,32769303,0,0x0,8
tick,0x7ff86ea82704,32771289,0,0x0,8
tick,0x7ff86ea82704,32773469,0,0x0,8
tick,0x7ff86ea82704,32775403,0,0x0,8
tick,0x7ff86ea82704,32777759,0,0x0,8
tick,0x7ff86ea82704,32779284,0,0x0,8
tick,0x7ff86ea82704,32781293,0,0x0,8
tick,0x7ff86ea82704,32783287,0,0x0,8
tick,0x7ff86ea82704,32785252,0,0x0,8
tick,0x7ff86ea82704,32787276,0,0x0,8
tick,0x7ff86ea82704,32789266,0,0x0,8
tick,0x7ff86ea82704,32791299,0,0x0,8
tick,0x7ff86ea82704,32793175,0,0x0,8
tick,0x7ff86ea82704,32795433,0,0x0,8
tick,0x7ff86ea82704,32797335,0,0x0,8
tick,0x7ff86ea82704,32799184,0,0x0,8
tick,0x7ff86ea82704,32801229,0,0x0,8
tick,0x7ff86ea82704,32803265,0,0x0,8
tick,0x7ff86ea82704,32805271,0,0x0,8
tick,0x7ff86ea82704,32807324,0,0x0,8
tick,0x7ff86ea82704,32809317,0,0x0,8
tick,0x7ff86ea82704,32811642,0,0x0,8
tick,0x7ff86ea82704,32813256,0,0x0,8
tick,0x7ff86ea82704,32815276,0,0x0,8
tick,0x7ff86ea82704,32817283,0,0x0,8
tick,0x7ff86ea82704,32819247,0,0x0,8
tick,0x7ff86ea82704,32821315,0,0x0,8
tick,0x7ff86ea82704,32823523,0,0x0,8
tick,0x7ff86ea82704,32825128,0,0x0,8
tick,0x7ff86ea82704,32827275,0,0x0,8
tick,0x7ff86ea82704,32829129,0,0x0,8
tick,0x7ff86ea82704,32831188,0,0x0,8
tick,0x7ff86ea82704,32833074,0,0x0,8
tick,0x7ff86ea82704,32835147,0,0x0,8
tick,0x7ff86ea82704,32837235,0,0x0,8
tick,0x7ff86ea82704,32839231,0,0x0,8
tick,0x7ff86ea82704,32841216,0,0x0,8
tick,0x7ff86ea82704,32843079,0,0x0,8
tick,0x7ff86ea82704,32845162,0,0x0,8
tick,0x7ff86ea82704,32847159,0,0x0,8
tick,0x7ff86ea82704,32849149,0,0x0,8
tick,0x7ff86ea82704,32851131,0,0x0,8
tick,0x7ff86ea82704,32853162,0,0x0,8
tick,0x7ff86ea82704,32855019,0,0x0,8
tick,0x7ff86ea82704,32857213,0,0x0,8
tick,0x7ff86ea82704,32859122,0,0x0,8
tick,0x7ff86ea82704,32861352,0,0x0,8
tick,0x7ff86ea82704,32863047,0,0x0,8
tick,0x7ff86ea82704,32865096,0,0x0,8
tick,0x7ff86ea82704,32867111,0,0x0,8
tick,0x7ff86ea82704,32868987,0,0x0,8
tick,0x7ff86ea82704,32871058,0,0x0,8
tick,0x7ff86ea82704,32872994,0,0x0,8
tick,0x7ff86ea82704,32875120,0,0x0,8
tick,0x7ff86ea82704,32877070,0,0x0,8
tick,0x7ff86ea82704,32879074,0,0x0,8
tick,0x7ff86ea82704,32881136,0,0x0,8
tick,0x7ff86ea82704,32883089,0,0x0,8
tick,0x7ff86ea82704,32885059,0,0x0,8
tick,0x7ff86ea82704,32887146,0,0x0,8
tick,0x7ff86ea82704,32889071,0,0x0,8
tick,0x7ff86ea82704,32891152,0,0x0,8
tick,0x7ff86ea82704,32893144,0,0x0,8
tick,0x7ff86ea82704,32895576,0,0x0,8
tick,0x7ff86ea82704,32897285,0,0x0,8
tick,0x7ff86ea82704,32899113,0,0x0,8
tick,0x7ff86ea82704,32900960,0,0x0,8
tick,0x7ff86ea82704,32903095,0,0x0,8
tick,0x7ff86ea82704,32905025,0,0x0,8
tick,0x7ff86ea82704,32906928,0,0x0,8
tick,0x7ff86ea82704,32908893,0,0x0,8
tick,0x7ff86ea82704,32911010,0,0x0,8
tick,0x7ff86ea82704,32912880,0,0x0,8
tick,0x7ff86ea82704,32914916,0,0x0,8
tick,0x7ff86ea82704,32916942,0,0x0,8
tick,0x7ff86ea82704,32918860,0,0x0,8
tick,0x7ff86ea82704,32920985,0,0x0,8
tick,0x7ff86ea82704,32922897,0,0x0,8
tick,0x7ff86ea82704,32924837,0,0x0,8
tick,0x7ff86ea82704,32926953,0,0x0,8
tick,0x7ff86ea82704,32928820,0,0x0,8
tick,0x7ff86ea82704,32930857,0,0x0,8
tick,0x7ff86ea82704,32932864,0,0x0,8
tick,0x7ff86ea82704,32934870,0,0x0,8
tick,0x7ff86ea82704,32936830,0,0x0,8
tick,0x7ff86ea82704,32938905,0,0x0,8
tick,0x7ff86ea82704,32940854,0,0x0,8
tick,0x7ff86ea82704,32942854,0,0x0,8
tick,0x7ff86ea82704,32944832,0,0x0,8
tick,0x7ff86ea82704,32946757,0,0x0,8
tick,0x7ff86ea82704,32948771,0,0x0,8
tick,0x7ff86ea82704,32950806,0,0x0,8
tick,0x7ff86ea82704,32952845,0,0x0,8
tick,0x7ff86ea82704,32954887,0,0x0,8
tick,0x7ff86ea82704,32956961,0,0x0,8
tick,0x7ff86ea82704,32959019,0,0x0,8
tick,0x7ff86ea82704,32960842,0,0x0,8
tick,0x7ff86ea82704,32962817,0,0x0,8
tick,0x7ff86ea82704,32964786,0,0x0,8
tick,0x7ff86ea82704,32966814,0,0x0,8
tick,0x7ff86ea82704,32968842,0,0x0,8
tick,0x7ff86ea82704,32970886,0,0x0,8
tick,0x7ff86ea82704,32973882,0,0x0,8
tick,0x7ff86ea82704,32976020,0,0x0,8
tick,0x7ff86ea82704,32977825,0,0x0,8
tick,0x7ff86ea82704,32979849,0,0x0,8
tick,0x7ff86ea82704,32981748,0,0x0,8
tick,0x7ff86ea82704,32983895,0,0x0,8
tick,0x7ff86ea82704,32985841,0,0x0,8
tick,0x7ff86ea82704,32987826,0,0x0,8
tick,0x7ff86ea82704,32989755,0,0x0,8
tick,0x7ff86ea82704,32991891,0,0x0,8
tick,0x7ff86ea82704,32993966,0,0x0,8
tick,0x7ff86ea82704,32995904,0,0x0,8
tick,0x7ff86ea82704,32997753,0,0x0,8
tick,0x7ff86ea82704,32999914,0,0x0,8
tick,0x7ff86ea82704,33001963,0,0x0,8
tick,0x7ff86ea82704,33004093,0,0x0,8
tick,0x7ff86ea82704,33005844,0,0x0,8
tick,0x7ff86ea82704,33007697,0,0x0,8
tick,0x7ff86ea82704,33011884,0,0x0,8
tick,0x7ff86ea82704,33014083,0,0x0,8
tick,0x7ff86ea82704,33016255,0,0x0,8
tick,0x7ff86ea82704,33017800,0,0x0,8
tick,0x7ff86ea82704,33020171,0,0x0,8
tick,0x7ff86ea82704,33021963,0,0x0,8
tick,0x7ff86ea82704,33023981,0,0x0,8
tick,0x7ff86ea82704,33025890,0,0x0,8
tick,0x7ff86ea82704,33028182,0,0x0,8
tick,0x7ff86ea82704,33029883,0,0x0,8
tick,0x7ff86ea82704,33031948,0,0x0,8
tick,0x7ff86ea82704,33033651,0,0x0,8
tick,0x7ff86ea82704,33035970,0,0x0,8
tick,0x7ff86ea82704,33037784,0,0x0,8
tick,0x7ff86ea82704,33039820,0,0x0,8
tick,0x7ff86ea82704,33041755,0,0x0,8
tick,0x7ff86ea82704,33043834,0,0x0,8
tick,0x7ff86ea82704,33045974,0,0x0,8
tick,0x7ff86ea82704,33047849,0,0x0,8
tick,0x7ff86ea82704,33049787,0,0x0,8
tick,0x7ff86ea82704,33051880,0,0x0,8
tick,0x7ff86ea82704,33053756,0,0x0,8
tick,0x7ff86ea82704,33056090,0,0x0,8
tick,0x7ff86ea82704,33057805,0,0x0,8
tick,0x7ff86ea82704,33059974,0,0x0,8
tick,0x7ff86ea82704,33061901,0,0x0,8
tick,0x7ff86ea82704,33064110,0,0x0,8
tick,0x7ff86ea82704,33066054,0,0x0,8
tick,0x7ff86ea82704,33068052,0,0x0,8
tick,0x7ff86ea82704,33069944,0,0x0,8
tick,0x7ff86ea82704,33071897,0,0x0,8
tick,0x7ff86ea82704,33074182,0,0x0,8
tick,0x7ff86ea82704,33076445,0,0x0,8
tick,0x7ff86ea82704,33078574,0,0x0,8
tick,0x7ff86ea82704,33079425,0,0x0,8
tick,0x7ff86ea82704,33081639,0,0x0,8
tick,0x7ff86ea82704,33083431,0,0x0,8
tick,0x7ff86ea82704,33085655,0,0x0,8
tick,0x7ff86ea82704,33087484,0,0x0,8
tick,0x7ff86ea82704,33089726,0,0x0,8
tick,0x7ff86ea82704,33091713,0,0x0,8
tick,0x7ff86ea82704,33093529,0,0x0,8
tick,0x7ff86ea82704,33095515,0,0x0,8
tick,0x7ff86ea82704,33097651,0,0x0,8
tick,0x7ff86ea82704,33099450,0,0x0,8
tick,0x7ff86ea82704,33101656,0,0x0,8
tick,0x7ff86ea82704,33103386,0,0x0,8
tick,0x7ff86ea82704,33105601,0,0x0,8
tick,0x7ff86ea82704,33107600,0,0x0,8
tick,0x7ff86ea82704,33109731,0,0x0,8
tick,0x7ff86ea82704,33111743,0,0x0,8
tick,0x7ff86ea82704,33113665,0,0x0,8
tick,0x7ff86ea82704,33115759,0,0x0,8
tick,0x7ff86ea82704,33117505,0,0x0,8
tick,0x7ff86ea82704,33119639,0,0x0,8
tick,0x7ff86ea82704,33121504,0,0x0,8
tick,0x7ff86ea82704,33123803,0,0x0,8
tick,0x7ff86ea82704,33125512,0,0x0,8
tick,0x7ff86ea82704,33127758,0,0x0,8
tick,0x7ff86ea82704,33129341,0,0x0,8
tick,0x7ff86ea82704,33131509,0,0x0,8
tick,0x7ff86ea82704,33133372,0,0x0,8
tick,0x7ff86ea82704,33135596,0,0x0,8
tick,0x7ff86ea82704,33137356,0,0x0,8
tick,0x7ff86ea82704,33139560,0,0x0,8
tick,0x7ff86ea82704,33141350,0,0x0,8
tick,0x7ff86ea82704,33143804,0,0x0,8
tick,0x7ff86ea82704,33145509,0,0x0,8
tick,0x7ff86ea82704,33147285,0,0x0,8
tick,0x7ff86ea82704,33149590,0,0x0,8
tick,0x7ff86ea82704,33151500,0,0x0,8
tick,0x7ff86ea82704,33153361,0,0x0,8
tick,0x7ff86ea82704,33155462,0,0x0,8
tick,0x7ff86ea82704,33157429,0,0x0,8
tick,0x7ff86ea82704,33159233,0,0x0,8
tick,0x7ff86ea82704,33161509,0,0x0,8
tick,0x7ff86ea82704,33163342,0,0x0,8
tick,0x7ff86ea82704,33165457,0,0x0,8
tick,0x7ff86ea82704,33167685,0,0x0,8
tick,0x7ff86ea82704,33169548,0,0x0,8
tick,0x7ff86ea82704,33171334,0,0x0,8
tick,0x7ff86ea82704,33173545,0,0x0,8
tick,0x7ff86ea82704,33175225,0,0x0,8
tick,0x7ff86ea82704,33177454,0,0x0,8
tick,0x7ff86ea82704,33179180,0,0x0,8
tick,0x7ff86ea82704,33181524,0,0x0,8
tick,0x7ff86ea82704,33183269,0,0x0,8
tick,0x7ff86ea82704,33185460,0,0x0,8
tick,0x7ff86ea82704,33187214,0,0x0,8
tick,0x7ff86ea82704,33189503,0,0x0,8
tick,0x7ff86ea82704,33191197,0,0x0,8
tick,0x7ff86ea82704,33193390,0,0x0,8
tick,0x7ff86ea82704,33195315,0,0x0,8
tick,0x7ff86ea82704,33197563,0,0x0,8
tick,0x7ff86ea82704,33199747,0,0x0,8
tick,0x7ff86ea82704,33201254,0,0x0,8
tick,0x7ff86ea82704,33203356,0,0x0,8
tick,0x7ff86ea82704,33205459,0,0x0,8
tick,0x7ff86ea82704,33207767,0,0x0,8
tick,0x7ff86ea82704,33209308,0,0x0,8
tick,0x7ff86ea82704,33211293,0,0x0,8
tick,0x7ff86ea82704,33213931,0,0x0,8
tick,0x7ff86ea82704,33215527,0,0x0,8
tick,0x7ff86ea82704,33217361,0,0x0,8
tick,0x7ff86ea82704,33219070,0,0x0,8
tick,0x7ff86ea82704,33221159,0,0x0,8
tick,0x7ff86ea82704,33223425,0,0x0,8
tick,0x7ff86ea82704,33225373,0,0x0,8
tick,0x7ff86ea82704,33227366,0,0x0,8
tick,0x7ff86ea82704,33229311,0,0x0,8
tick,0x7ff86ea82704,33231296,0,0x0,8
tick,0x7ff86ea82704,33233018,0,0x0,8
tick,0x7ff86ea82704,33235164,0,0x0,8
tick,0x7ff86ea82704,33237226,0,0x0,8
tick,0x7ff86ea82704,33239241,0,0x0,8
tick,0x7ff86ea82704,33241102,0,0x0,8
tick,0x7ff86ea82704,33243196,0,0x0,8
tick,0x7ff86ea82704,33245034,0,0x0,8
tick,0x7ff86ea82704,33247142,0,0x0,8
tick,0x7ff86ea82704,33249002,0,0x0,8
tick,0x7ff86ea82704,33251167,0,0x0,8
tick,0x7ff86ea82704,33253184,0,0x0,8
tick,0x7ff86ea82704,33255071,0,0x0,8
tick,0x7ff86ea82704,33257268,0,0x0,8
tick,0x7ff86ea82704,33259263,0,0x0,8
tick,0x7ff86ea82704,33261106,0,0x0,8
tick,0x7ff86ea82704,33263169,0,0x0,8
tick,0x7ff86ea82704,33265185,0,0x0,8
tick,0x7ff86ea82704,33267100,0,0x0,8
tick,0x7ff86ea82704,33269053,0,0x0,8
tick,0x7ff86ea82704,33271193,0,0x0,8
tick,0x7ff86ea82704,33273064,0,0x0,8
tick,0x7ff86ea82704,33275018,0,0x0,8
tick,0x7ff86ea82704,33277012,0,0x0,8
tick,0x7ff86ea82704,33278937,0,0x0,8
tick,0x7ff86ea82704,33281081,0,0x0,8
tick,0x7ff86ea82704,33282890,0,0x0,8
tick,0x7ff86ea82704,33285034,0,0x0,8
tick,0x7ff86ea82704,33286909,0,0x0,8
tick,0x7ff86ea82704,33289104,0,0x0,8
tick,0x7ff86ea82704,33290951,0,0x0,8
tick,0x7ff86ea82704,33293041,0,0x0,8
tick,0x7ff86ea82704,33295035,0,0x0,8
tick,0x7ff86ea82704,33296886,0,0x0,8
tick,0x7ff86ea82704,33299005,0,0x0,8
tick,0x7ff86ea82704,33300893,0,0x0,8
tick,0x7ff86ea82704,33302928,0,0x0,8
tick,0x7ff86ea82704,33304842,0,0x0,8
tick,0x7ff86ea82704,33306932,0,0x0,8
tick,0x7ff86ea82704,33308857,0,0x0,8
tick,0x7ff86ea82704,33310927,0,0x0,8
tick,0x7ff86ea82704,33312861,0,0x0,8
tick,0x7ff86ea82704,33314933,0,0x0,8
tick,0x7ff86ea82704,33316982,0,0x0,8
tick,0x7ff86ea82704,33318972,0,0x0,8
tick,0x7ff86ea82704,33320900,0,0x0,8
tick,0x7ff86ea82704,33322876,0,0x0,8
tick,0x7ff86ea82704,33324832,0,0x0,8
tick,0x7ff86ea82704,33326837,0,0x0,8
tick,0x7ff86ea82704,33328902,0,0x0,8
tick,0x7ff86ea82704,33330979,0,0x0,8
tick,0x7ff86ea82704,33332724,0,0x0,8
tick,0x7ff86ea82704,33334857,0,0x0,8
tick,0x7ff86ea82704,33336951,0,0x0,8
tick,0x7ff86ea82704,33338918,0,0x0,8
tick,0x7ff86ea82704,33340860,0,0x0,8
tick,0x7ff86ea82704,33342916,0,0x0,8
tick,0x7ff86ea82704,33344944,0,0x0,8
tick,0x7ff86ea82704,33346853,0,0x0,8
tick,0x7ff86ea82704,33348800,0,0x0,8
tick,0x7ff86ea82704,33350852,0,0x0,8
tick,0x7ff86ea82704,33352884,0,0x0,8
tick,0x7ff86ea82704,33354881,0,0x0,8
tick,0x7ff86ea82704,33356802,0,0x0,8
tick,0x7ff86ea82704,33358899,0,0x0,8
tick,0x7ff86ea82704,33360734,0,0x0,8
tick,0x7ff86ea82704,33362906,0,0x0,8
tick,0x7ff86ea82704,33364728,0,0x0,8
tick,0x7ff86ea82704,33366772,0,0x0,8
tick,0x7ff86ea82704,33368887,0,0x0,8
tick,0x7ff86ea82704,33370779,0,0x0,8
tick,0x7ff86ea82704,33372646,0,0x0,8
tick,0x7ff86ea82704,33374765,0,0x0,8
tick,0x7ff86ea82704,33376705,0,0x0,8
tick,0x7ff86ea82704,33378876,0,0x0,8
tick,0x7ff86ea82704,33380840,0,0x0,8
tick,0x7ff86ea82704,33382915,0,0x0,8
tick,0x7ff86ea82704,33384810,0,0x0,8
tick,0x7ff86ea82704,33386667,0,0x0,8
tick,0x7ff86ea82704,33388935,0,0x0,8
tick,0x7ff86ea82704,33390627,0,0x0,8
tick,0x7ff86ea82704,33392778,0,0x0,8
tick,0x7ff86ea82704,33394800,0,0x0,8
tick,0x7ff86ea82704,33396673,0,0x0,8
tick,0x7ff86ea82704,33398815,0,0x0,8
tick,0x7ff86ea82704,33400629,0,0x0,8
tick,0x7ff86ea82704,33402817,0,0x0,8
tick,0x7ff86ea82704,33404752,0,0x0,8
tick,0x7ff86ea82704,33406852,0,0x0,8
tick,0x7ff86ea82704,33408611,0,0x0,8
tick,0x7ff86ea82704,33410777,0,0x0,8
tick,0x7ff86ea82704,33412654,0,0x0,8
tick,0x7ff86ea82704,33414745,0,0x0,8
tick,0x7ff86ea82704,33416694,0,0x0,8
tick,0x7ff86ea82704,33418547,0,0x0,8
tick,0x7ff86ea82704,33420733,0,0x0,8
tick,0x7ff86ea82704,33422692,0,0x0,8
tick,0x7ff86ea82704,33424818,0,0x0,8
tick,0x7ff86ea82704,33426565,0,0x0,8
tick,0x7ff86ea82704,33428712,0,0x0,8
tick,0x7ff86ea82704,33430768,0,0x0,8
tick,0x7ff86ea82704,33432883,0,0x0,8
tick,0x7ff86ea82704,33434581,0,0x0,8
tick,0x7ff86ea82704,33436626,0,0x0,8
tick,0x7ff86ea82704,33438458,0,0x0,8
tick,0x7ff86ea82704,33440675,0,0x0,8
tick,0x7ff86ea82704,33442626,0,0x0,8
tick,0x7ff86ea82704,33444610,0,0x0,8
tick,0x7ff86ea82704,33446526,0,0x0,8
tick,0x7ff86ea82704,33448591,0,0x0,8
tick,0x7ff86ea82704,33450506,0,0x0,8
tick,0x7ff86ea82704,33452687,0,0x0,8
tick,0x7ff86ea82704,33454759,0,0x0,8
tick,0x7ff86ea82704,33456638,0,0x0,8
tick,0x7ff86ea82704,33458627,0,0x0,8
tick,0x7ff86ea82704,33460717,0,0x0,8
tick,0x7ff86ea82704,33462574,0,0x0,8
tick,0x7ff86ea82704,33464530,0,0x0,8
tick,0x7ff86ea82704,33466647,0,0x0,8
tick,0x7ff86ea82704,33468567,0,0x0,8
tick,0x7ff86ea82704,33470676,0,0x0,8
tick,0x7ff86ea82704,33472614,0,0x0,8
tick,0x7ff86ea82704,33474568,0,0x0,8
tick,0x7ff86ea82704,33476613,0,0x0,8
tick,0x7ff86ea82704,33478613,0,0x0,8
tick,0x7ff86ea82704,33480413,0,0x0,8
tick,0x7ff86ea82704,33482577,0,0x0,8
tick,0x7ff86ea82704,33484395,0,0x0,8
tick,0x7ff86ea82704,33486553,0,0x0,8
tick,0x7ff86ea82704,33488596,0,0x0,8
tick,0x7ff86ea82704,33490617,0,0x0,8
tick,0x7ff86ea82704,33492505,0,0x0,8
tick,0x7ff86ea82704,33494489,0,0x0,8
tick,0x7ff86ea82704,33496538,0,0x0,8
tick,0x7ff86ea82704,33498356,0,0x0,8
tick,0x7ff86ea82704,33500492,0,0x0,8
tick,0x7ff86ea82704,33502520,0,0x0,8
tick,0x7ff86ea82704,33504474,0,0x0,8
tick,0x7ff86ea82704,33506442,0,0x0,8
tick,0x7ff86ea82704,33508448,0,0x0,8
tick,0x7ff86ea82704,33510452,0,0x0,8
tick,0x7ff86ea82704,33512506,0,0x0,8
tick,0x7ff86ea82704,33514454,0,0x0,8
tick,0x7ff86ea82704,33516464,0,0x0,8
tick,0x7ff86ea82704,33518368,0,0x0,8
tick,0x7ff86ea82704,33520422,0,0x0,8
tick,0x7ff86ea82704,33522272,0,0x0,8
tick,0x7ff86ea82704,33524345,0,0x0,8
tick,0x7ff86ea82704,33526391,0,0x0,8
tick,0x7ff86ea82704,33528390,0,0x0,8
tick,0x7ff86ea82704,33530410,0,0x0,8
tick,0x7ff86ea82704,33532278,0,0x0,8
tick,0x7ff86ea82704,33534397,0,0x0,8
tick,0x7ff86ea82704,33536498,0,0x0,8
tick,0x7ff86ea82704,33538574,0,0x0,8
tick,0x7ff86ea82704,33540250,0,0x0,8
tick,0x7ff86ea82704,33542393,0,0x0,8
tick,0x7ff86ea82704,33544257,0,0x0,8
tick,0x7ff86ea82704,33546507,0,0x0,8
tick,0x7ff86ea82704,33548277,0,0x0,8
tick,0x7ff86ea82704,33550220,0,0x0,8
tick,0x7ff86ea82704,33552347,0,0x0,8
tick,0x7ff86ea82704,33554256,0,0x0,8
tick,0x7ff86ea82704,33556482,0,0x0,8
tick,0x7ff86ea82704,33558205,0,0x0,8
tick,0x7ff86ea82704,33560342,0,0x0,8
tick,0x7ff86ea82704,33562222,0,0x0,8
tick,0x7ff86ea82704,33564297,0,0x0,8
tick,0x7ff86ea82704,33566320,0,0x0,8
tick,0x7ff86ea82704,33568229,0,0x0,8
tick,0x7ff86ea82704,33570251,0,0x0,8
tick,0x7ff86ea82704,33572273,0,0x0,8
tick,0x7ff86ea82704,33574124,0,0x0,8
tick,0x7ff86ea82704,33576357,0,0x0,8
tick,0x7ff86ea82704,33578232,0,0x0,8
tick,0x7ff86ea82704,33580209,0,0x0,8
tick,0x7ff86ea82704,33582213,0,0x0,8
tick,0x7ff86ea82704,33584159,0,0x0,8
tick,0x7ff86ea82704,33586175,0,0x0,8
tick,0x7ff86ea82704,33588149,0,0x0,8
tick,0x7ff86ea82704,33590431,0,0x0,8
tick,0x7ff86ea82704,33592162,0,0x0,8
tick,0x7ff86ea82704,33594108,0,0x0,8
tick,0x7ff86ea82704,33596102,0,0x0,8
tick,0x7ff86ea82704,33598158,0,0x0,8
tick,0x7ff86ea82704,33600190,0,0x0,8
tick,0x7ff86ea82704,33602225,0,0x0,8
tick,0x7ff86ea82704,33604244,0,0x0,8
tick,0x7ff86ea82704,33606412,0,0x0,8
tick,0x7ff86ea82704,33608410,0,0x0,8
tick,0x7ff86ea82704,33610282,0,0x0,8
tick,0x7ff86ea82704,33612246,0,0x0,8
tick,0x7ff86ea82704,33614174,0,0x0,8
tick,0x7ff86ea82704,33616239,0,0x0,8
tick,0x7ff86ea82704,33618432,0,0x0,8
tick,0x7ff86ea82704,33620117,0,0x0,8
tick,0x7ff86ea82704,33622179,0,0x0,8
tick,0x7ff86ea82704,33624264,0,0x0,8
tick,0x7ff86ea82704,33626241,0,0x0,8
tick,0x7ff86ea82704,33627945,0,0x0,8
tick,0x7ff86ea82704,33630138,0,0x0,8
tick,0x7ff86ea82704,33632146,0,0x0,8
tick,0x7ff86ea82704,33634192,0,0x0,8
tick,0x7ff86ea82704,33636203,0,0x0,8
tick,0x7ff86ea82704,33638004,0,0x0,8
tick,0x7ff86ea82704,33640181,0,0x0,8
tick,0x7ff86ea82704,33642107,0,0x0,8
tick,0x7ff86ea82704,33644183,0,0x0,8
tick,0x7ff86ea82704,33646192,0,0x0,8
tick,0x7ff86ea82704,33647900,0,0x0,8
tick,0x7ff86ea82704,33650143,0,0x0,8
tick,0x7ff86ea82704,33651944,0,0x0,8
tick,0x7ff86ea82704,33654006,0,0x0,8
tick,0x7ff86ea82704,33656064,0,0x0,8
tick,0x7ff86ea82704,33658095,0,0x0,8
tick,0x7ff86ea82704,33659994,0,0x0,8
tick,0x7ff86ea82704,33661887,0,0x0,8
tick,0x7ff86ea82704,33664058,0,0x0,8
tick,0x7ff86ea82704,33665946,0,0x0,8
tick,0x7ff86ea82704,33667986,0,0x0,8
tick,0x7ff86ea82704,33669918,0,0x0,8
tick,0x7ff86ea82704,33672095,0,0x0,8
tick,0x7ff86ea82704,33673970,0,0x0,8
tick,0x7ff86ea82704,33676066,0,0x0,8
tick,0x7ff86ea82704,33677963,0,0x0,8
tick,0x7ff86ea82704,33679846,0,0x0,8
tick,0x7ff86ea82704,33681897,0,0x0,8
tick,0x7ff86ea82704,33683780,0,0x0,8
tick,0x7ff86ea82704,33686021,0,0x0,8
tick,0x7ff86ea82704,33687916,0,0x0,8
tick,0x7ff86ea82704,33690073,0,0x0,8
tick,0x7ff86ea82704,33692035,0,0x0,8
tick,0x7ff86ea82704,33693917,0,0x0,8
tick,0x7ff86ea82704,33696013,0,0x0,8
tick,0x7ff86ea82704,33697849,0,0x0,8
tick,0x7ff86ea82704,33700046,0,0x0,8
tick,0x7ff86ea82704,33701928,0,0x0,8
tick,0x7ff86ea82704,33703907,0,0x0,8
tick,0x7ff86ea82704,33705826,0,0x0,8
tick,0x7ff86ea82704,33707998,0,0x0,8
tick,0x7ff86ea82704,33709810,0,0x0,8
tick,0x7ff86ea82704,33711907,0,0x0,8
tick,0x7ff86ea82704,33713924,0,0x0,8
tick,0x7ff86ea82704,33715954,0,0x0,8
tick,0x7ff86ea82704,33717873,0,0x0,8
tick,0x7ff86ea82704,33719839,0,0x0,8
tick,0x7ff86ea82704,33721843,0,0x0,8
tick,0x7ff86ea82704,33723925,0,0x0,8
tick,0x7ff86ea82704,33725850,0,0x0,8
tick,0x7ff86ea82704,33727845,0,0x0,8
tick,0x7ff86ea82704,33729821,0,0x0,8
tick,0x7ff86ea82704,33731696,0,0x0,8
tick,0x7ff86ea82704,33733884,0,0x0,8
tick,0x7ff86ea82704,33735836,0,0x0,8
tick,0x7ff86ea82704,33737737,0,0x0,8
tick,0x7ff86ea82704,33739834,0,0x0,8
tick,0x7ff86ea82704,33741812,0,0x0,8
tick,0x7ff86ea82704,33743792,0,0x0,8
tick,0x7ff86ea82704,33745792,0,0x0,8
tick,0x7ff86ea82704,33747711,0,0x0,8
tick,0x7ff86ea82704,33749717,0,0x0,8
tick,0x7ff86ea82704,33751804,0,0x0,8
tick,0x7ff86ea82704,33753650,0,0x0,8
tick,0x7ff86ea82704,33755799,0,0x0,8
tick,0x7ff86ea82704,33757680,0,0x0,8
tick,0x7ff86ea82704,33759823,0,0x0,8
tick,0x7ff86ea82704,33761716,0,0x0,8
tick,0x7ff86ea82704,33763697,0,0x0,8
tick,0x7ff86ea82704,33765779,0,0x0,8
tick,0x7ff86ea82704,33767596,0,0x0,8
tick,0x7ff86ea82704,33769761,0,0x0,8
tick,0x7ff86ea82704,33771641,0,0x0,8
tick,0x7ff86ea82704,33773607,0,0x0,8
tick,0x7ff86ea82704,33775683,0,0x0,8
tick,0x7ff86ea82704,33777719,0,0x0,8
tick,0x7ff86ea82704,33779665,0,0x0,8
tick,0x7ff86ea82704,33781670,0,0x0,8
tick,0x7ff86ea82704,33783620,0,0x0,8
tick,0x7ff86ea82704,33785666,0,0x0,8
tick,0x7ff86ea82704,33787726,0,0x0,8
tick,0x7ff86ea82704,33789657,0,0x0,8
tick,0x7ff86ea82704,33791769,0,0x0,8
tick,0x7ff86ea82704,33793777,0,0x0,8
tick,0x7ff86ea82704,33795526,0,0x0,8
tick,0x7ff86ea82704,33797683,0,0x0,8
tick,0x7ff86ea82704,33799633,0,0x0,8
tick,0x7ff86ea82704,33804710,0,0x0,8
tick,0x7ff86ea82704,33806534,0,0x0,8
tick,0x7ff86ea82704,33808614,0,0x0,8
tick,0x7ff86ea82704,33810648,0,0x0,8
tick,0x7ff86ea82704,33812423,0,0x0,8
tick,0x7ff86ea82704,33814466,0,0x0,8
tick,0x7ff86ea82704,33816472,0,0x0,8
tick,0x7ff86ea82704,33818676,0,0x0,8
tick,0x7ff86ea82704,33820594,0,0x0,8
tick,0x7ff86ea82704,33822864,0,0x0,8
tick,0x7ff86ea82704,33824817,0,0x0,8
tick,0x7ff86ea82704,33826938,0,0x0,8
tick,0x7ff86ea82704,33828351,0,0x0,8
tick,0x7ff86ea82704,33830413,0,0x0,8
tick,0x7ff86ea82704,33832374,0,0x0,8
tick,0x7ff86ea82704,33834408,0,0x0,8
tick,0x7ff86ea82704,33836375,0,0x0,8
tick,0x7ff86ea82704,33838382,0,0x0,8
tick,0x7ff86ea82704,33840560,0,0x0,8
tick,0x7ff86ea82704,33842511,0,0x0,8
tick,0x7ff86ea82704,33844439,0,0x0,8
tick,0x7ff86ea82704,33846418,0,0x0,8
tick,0x7ff86ea82704,33848408,0,0x0,8
tick,0x7ff86ea82704,33850385,0,0x0,8
tick,0x7ff86ea82704,33852416,0,0x0,8
tick,0x7ff86ea82704,33854380,0,0x0,8
tick,0x7ff86ea82704,33856423,0,0x0,8
tick,0x7ff86ea82704,33858518,0,0x0,8
tick,0x7ff86ea82704,33860390,0,0x0,8
tick,0x7ff86ea82704,33862550,0,0x0,8
tick,0x7ff86ea82704,33864769,0,0x0,8
tick,0x7ff86ea82704,33866795,0,0x0,8
tick,0x7ff86ea82704,33868331,0,0x0,8
tick,0x7ff86ea82704,33870352,0,0x0,8
tick,0x7ff86ea82704,33872328,0,0x0,8
tick,0x7ff86ea82704,33874649,0,0x0,8
tick,0x7ff86ea82704,33876258,0,0x0,8
tick,0x7ff86ea82704,33878342,0,0x0,8
tick,0x7ff86ea82704,33880226,0,0x0,8
tick,0x7ff86ea82704,33882259,0,0x0,8
tick,0x7ff86ea82704,33884234,0,0x0,8
tick,0x7ff86ea82704,33886389,0,0x0,8
tick,0x7ff86ea82704,33888179,0,0x0,8
tick,0x7ff86ea82704,33890520,0,0x0,8
tick,0x7ff86ea82704,33892251,0,0x0,8
tick,0x7ff86ea82704,33894369,0,0x0,8
tick,0x7ff86ea82704,33896336,0,0x0,8
tick,0x7ff86ea82704,33898325,0,0x0,8
tick,0x7ff86ea82704,33900266,0,0x0,8
tick,0x7ff86ea82704,33902259,0,0x0,8
tick,0x7ff86ea82704,33904189,0,0x0,8
tick,0x7ff86ea82704,33906502,0,0x0,8
tick,0x7ff86ea82704,33908252,0,0x0,8
tick,0x7ff86ea82704,33910406,0,0x0,8
tick,0x7ff86ea82704,33912200,0,0x0,8
tick,0x7ff86ea82704,33914432,0,0x0,8
tick,0x7ff86ea82704,33916302,0,0x0,8
tick,0x7ff86ea82704,33918375,0,0x0,8
tick,0x7ff86ea82704,33920239,0,0x0,8
tick,0x7ff86ea82704,33922286,0,0x0,8
tick,0x7ff86ea82704,33924345,0,0x0,8
tick,0x7ff86ea82704,33926368,0,0x0,8
tick,0x7ff86ea82704,33928183,0,0x0,8
tick,0x7ff86ea82704,33930427,0,0x0,8
tick,0x7ff86ea82704,33932190,0,0x0,8
tick,0x7ff86ea82704,33934365,0,0x0,8
tick,0x7ff86ea82704,33936449,0,0x0,8
tick,0x7ff86ea82704,33938286,0,0x0,8
tick,0x7ff86ea82704,33940638,0,0x0,8
tick,0x7ff86ea82704,33942365,0,0x0,8
tick,0x7ff86ea82704,33944388,0,0x0,8
tick,0x7ff86ea82704,33946267,0,0x0,8
tick,0x7ff86ea82704,33948559,0,0x0,8
tick,0x7ff86ea82704,33950323,0,0x0,8
tick,0x7ff86ea82704,33953257,0,0x0,8
tick,0x7ff86ea82704,33954590,0,0x0,8
tick,0x7ff86ea82704,33956311,0,0x0,8
tick,0x7ff86ea82704,33958457,0,0x0,8
tick,0x7ff86ea82704,33960185,0,0x0,8
tick,0x7ff86ea82704,33962186,0,0x0,8
tick,0x7ff86ea82704,33964208,0,0x0,8
tick,0x7ff86ea82704,33966185,0,0x0,8
tick,0x7ff86ea82704,33968229,0,0x0,8
tick,0x7ff86ea82704,33970193,0,0x0,8
tick,0x7ff86ea82704,33972048,0,0x0,8
tick,0x7ff86ea82704,33974145,0,0x0,8
tick,0x7ff86ea82704,33976133,0,0x0,8
tick,0x7ff86ea82704,33978176,0,0x0,8
tick,0x7ff86ea82704,33980084,0,0x0,8
tick,0x7ff86ea82704,33982238,0,0x0,8
tick,0x7ff86ea82704,33984063,0,0x0,8
tick,0x7ff86ea82704,33986184,0,0x0,8
tick,0x7ff86ea82704,33988216,0,0x0,8
tick,0x7ff86ea82704,33990311,0,0x0,8
tick,0x7ff86ea82704,33992488,0,0x0,8
tick,0x7ff86ea82704,33994083,0,0x0,8
tick,0x7ff86ea82704,33996088,0,0x0,8
tick,0x7ff86ea82704,33998100,0,0x0,8
tick,0x7ff86ea82704,34000153,0,0x0,8
tick,0x7ff86ea82704,34002138,0,0x0,8
tick,0x7ff86ea82704,34004019,0,0x0,8
tick,0x7ff86ea82704,34006059,0,0x0,8
tick,0x7ff86ea82704,34008185,0,0x0,8
tick,0x7ff86ea82704,34010062,0,0x0,8
tick,0x7ff86ea82704,34012292,0,0x0,8
tick,0x7ff86ea82704,34014226,0,0x0,8
tick,0x7ff86ea82704,34016222,0,0x0,8
tick,0x7ff86ea82704,34017949,0,0x0,8
tick,0x7ff86ea82704,34019993,0,0x0,8
tick,0x7ff86ea82704,34021880,0,0x0,8
tick,0x7ff86ea82704,34023939,0,0x0,8
tick,0x7ff86ea82704,34025887,0,0x0,8
tick,0x7ff86ea82704,34027934,0,0x0,8
tick,0x7ff86ea82704,34029859,0,0x0,8
tick,0x7ff86ea82704,34031820,0,0x0,8
tick,0x7ff86ea82704,34033942,0,0x0,8
tick,0x7ff86ea82704,34035924,0,0x0,8
tick,0x7ff86ea82704,34037920,0,0x0,8
tick,0x7ff86ea82704,34039882,0,0x0,8
tick,0x7ff86ea82704,34042055,0,0x0,8
tick,0x7ff86ea82704,34043801,0,0x0,8
tick,0x7ff86ea82704,34045984,0,0x0,8
tick,0x7ff86ea82704,34047828,0,0x0,8
tick,0x7ff86ea82704,34049921,0,0x0,8
tick,0x7ff86ea82704,34051825,0,0x0,8
tick,0x7ff86ea82704,34053966,0,0x0,8
tick,0x7ff86ea82704,34055837,0,0x0,8
tick,0x7ff86ea82704,34058052,0,0x0,8
tick,0x7ff86ea82704,34059830,0,0x0,8
tick,0x7ff86ea82704,34061892,0,0x0,8
tick,0x7ff86ea82704,34063785,0,0x0,8
tick,0x7ff86ea82704,34065749,0,0x0,8
tick,0x7ff86ea82704,34067883,0,0x0,8
tick,0x7ff86ea82704,34069747,0,0x0,8
tick,0x7ff86ea82704,34071857,0,0x0,8
tick,0x7ff86ea82704,34073840,0,0x0,8
tick,0x7ff86ea82704,34075856,0,0x0,8
tick,0x7ff86ea82704,34077810,0,0x0,8
tick,0x7ff86ea82704,34079762,0,0x0,8
tick,0x7ff86ea82704,34081755,0,0x0,8
tick,0x7ff86ea82704,34083945,0,0x0,8
tick,0x7ff86ea82704,34085678,0,0x0,8
tick,0x7ff86ea82704,34087888,0,0x0,8
tick,0x7ff86ea82704,34089633,0,0x0,8
tick,0x7ff86ea82704,34091851,0,0x0,8
tick,0x7ff86ea82704,34093684,0,0x0,8
tick,0x7ff86ea82704,34095674,0,0x0,8
tick,0x7ff86ea82704,34097724,0,0x0,8
tick,0x7ff86ea82704,34099754,0,0x0,8
tick,0x7ff86ea82704,34101775,0,0x0,8
tick,0x7ff86ea82704,34103725,0,0x0,8
tick,0x7ff86ea82704,34105772,0,0x0,8
tick,0x7ff86ea82704,34107621,0,0x0,8
tick,0x7ff86ea82704,34109749,0,0x0,8
tick,0x7ff86ea82704,34111713,0,0x0,8
tick,0x7ff86ea82704,34113789,0,0x0,8
tick,0x7ff86ea82704,34115668,0,0x0,8
tick,0x7ff86ea82704,34117746,0,0x0,8
tick,0x7ff86ea82704,34119663,0,0x0,8
tick,0x7ff86ea82704,34121645,0,0x0,8
tick,0x7ff86ea82704,34123736,0,0x0,8
tick,0x7ff86ea82704,34125682,0,0x0,8
tick,0x7ff86ea82704,34127638,0,0x0,8
tick,0x7ff86ea82704,34129661,0,0x0,8
tick,0x7ff86ea82704,34131651,0,0x0,8
tick,0x7ff86ea82704,34133606,0,0x0,8
tick,0x7ff86ea82704,34135563,0,0x0,8
tick,0x7ff86ea82704,34137641,0,0x0,8
tick,0x7ff86ea82704,34139603,0,0x0,8
tick,0x7ff86ea82704,34141736,0,0x0,8
tick,0x7ff86ea82704,34143546,0,0x0,8
tick,0x7ff86ea82704,34145698,0,0x0,8
tick,0x7ff86ea82704,34147483,0,0x0,8
tick,0x7ff86ea82704,34149527,0,0x0,8
tick,0x7ff86ea82704,34151545,0,0x0,8
tick,0x7ff86ea82704,34153632,0,0x0,8
tick,0x7ff86ea82704,34155546,0,0x0,8
tick,0x7ff86ea82704,34157822,0,0x0,8
tick,0x7ff86ea82704,34159593,0,0x0,8
tick,0x7ff86ea82704,34161523,0,0x0,8
tick,0x7ff86ea82704,34163654,0,0x0,8
tick,0x7ff86ea82704,34165792,0,0x0,8
tick,0x7ff86ea82704,34167587,0,0x0,8
tick,0x7ff86ea82704,34169633,0,0x0,8
tick,0x7ff86ea82704,34171553,0,0x0,8
tick,0x7ff86ea82704,34173636,0,0x0,8
tick,0x7ff86ea82704,34175570,0,0x0,8
tick,0x7ff86ea82704,34177459,0,0x0,8
tick,0x7ff86ea82704,34179531,0,0x0,8
tick,0x7ff86ea82704,34181487,0,0x0,8
tick,0x7ff86ea82704,34183577,0,0x0,8
tick,0x7ff86ea82704,34185561,0,0x0,8
tick,0x7ff86ea82704,34187521,0,0x0,8
tick,0x7ff86ea82704,34189648,0,0x0,8
tick,0x7ff86ea82704,34191525,0,0x0,8
tick,0x7ff86ea82704,34193415,0,0x0,8
tick,0x7ff86ea82704,34195601,0,0x0,8
tick,0x7ff86ea82704,34197595,0,0x0,8
tick,0x7ff86ea82704,34199473,0,0x0,8
tick,0x7ff86ea82704,34201454,0,0x0,8
tick,0x7ff86ea82704,34203505,0,0x0,8
tick,0x7ff86ea82704,34205420,0,0x0,8
tick,0x7ff86ea82704,34207562,0,0x0,8
tick,0x7ff86ea82704,34209407,0,0x0,8
tick,0x7ff86ea82704,34211485,0,0x0,8
tick,0x7ff86ea82704,34213370,0,0x0,8
tick,0x7ff86ea82704,34215420,0,0x0,8
tick,0x7ff86ea82704,34217305,0,0x0,8
tick,0x7ff86ea82704,34219451,0,0x0,8
tick,0x7ff86ea82704,34221417,0,0x0,8
tick,0x7ff86ea82704,34223527,0,0x0,8
tick,0x7ff86ea82704,34225427,0,0x0,8
tick,0x7ff86ea82704,34227298,0,0x0,8
tick,0x7ff86ea82704,34229390,0,0x0,8
tick,0x7ff86ea82704,34231345,0,0x0,8
tick,0x7ff86ea82704,34233506,0,0x0,8
tick,0x7ff86ea82704,34235314,0,0x0,8
tick,0x7ff86ea82704,34237357,0,0x0,8
tick,0x7ff86ea82704,34239288,0,0x0,8
tick,0x7ff86ea82704,34241347,0,0x0,8
tick,0x7ff86ea82704,34243237,0,0x0,8
tick,0x7ff86ea82704,34245328,0,0x0,8
tick,0x7ff86ea82704,34247288,0,0x0,8
tick,0x7ff86ea82704,34249244,0,0x0,8
tick,0x7ff86ea82704,34251256,0,0x0,8
tick,0x7ff86ea82704,34253419,0,0x0,8
tick,0x7ff86ea82704,34255218,0,0x0,8
tick,0x7ff86ea82704,34257374,0,0x0,8
tick,0x7ff86ea82704,34259328,0,0x0,8
tick,0x7ff86ea82704,34261271,0,0x0,8
tick,0x7ff86ea82704,34263240,0,0x0,8
tick,0x7ff86ea82704,34265344,0,0x0,8
tick,0x7ff86ea82704,34267350,0,0x0,8
tick,0x7ff86ea82704,34269343,0,0x0,8
tick,0x7ff86ea82704,34271223,0,0x0,8
tick,0x7ff86ea82704,34273335,0,0x0,8
tick,0x7ff86ea82704,34275209,0,0x0,8
tick,0x7ff86ea82704,34277316,0,0x0,8
tick,0x7ff86ea82704,34279244,0,0x0,8
tick,0x7ff86ea82704,34281213,0,0x0,8
tick,0x7ff86ea82704,34283170,0,0x0,8
tick,0x7ff86ea82704,34285157,0,0x0,8
tick,0x7ff86ea82704,34287303,0,0x0,8
tick,0x7ff86ea82704,34289180,0,0x0,8
tick,0x7ff86ea82704,34291300,0,0x0,8
tick,0x7ff86ea82704,34293146,0,0x0,8
tick,0x7ff86ea82704,34295241,0,0x0,8
tick,0x7ff86ea82704,34297084,0,0x0,8
tick,0x7ff86ea82704,34299191,0,0x0,8
tick,0x7ff86ea82704,34301106,0,0x0,8
tick,0x7ff86ea82704,34303213,0,0x0,8
tick,0x7ff86ea82704,34305144,0,0x0,8
tick,0x7ff86ea82704,34307102,0,0x0,8
tick,0x7ff86ea82704,34309148,0,0x0,8
tick,0x7ff86ea82704,34311114,0,0x0,8
tick,0x7ff86ea82704,34313172,0,0x0,8
tick,0x7ff86ea82704,34315034,0,0x0,8
tick,0x7ff86ea82704,34317080,0,0x0,8
tick,0x7ff86ea82704,34319072,0,0x0,8
tick,0x7ff86ea82704,34321182,0,0x0,8
tick,0x7ff86ea82704,34323107,0,0x0,8
tick,0x7ff86ea82704,34325024,0,0x0,8
tick,0x7ff86ea82704,34327125,0,0x0,8
tick,0x7ff86ea82704,34329086,0,0x0,8
tick,0x7ff86ea82704,34331097,0,0x0,8
tick,0x7ff86ea82704,34333118,0,0x0,8
tick,0x7ff86ea82704,34334990,0,0x0,8
tick,0x7ff86ea82704,34337065,0,0x0,8
tick,0x7ff86ea82704,34339001,0,0x0,8
tick,0x7ff86ea82704,34341071,0,0x0,8
tick,0x7ff86ea82704,34343035,0,0x0,8
tick,0x7ff86ea82704,34345024,0,0x0,8
tick,0x7ff86ea82704,34346959,0,0x0,8
tick,0x7ff86ea82704,34349099,0,0x0,8
tick,0x7ff86ea82704,34350992,0,0x0,8
tick,0x7ff86ea82704,34353092,0,0x0,8
tick,0x7ff86ea82704,34355010,0,0x0,8
tick,0x7ff86ea82704,34357004,0,0x0,8
tick,0x7ff86ea82704,34359078,0,0x0,8
tick,0x7ff86ea82704,34360960,0,0x0,8
tick,0x7ff86ea82704,34363059,0,0x0,8
tick,0x7ff86ea82704,34364998,0,0x0,8
tick,0x7ff86ea82704,34366964,0,0x0,8
tick,0x7ff86ea82704,34369051,0,0x0,8
tick,0x7ff86ea82704,34370897,0,0x0,8
tick,0x7ff86ea82704,34372990,0,0x0,8
tick,0x7ff86ea82704,34374921,0,0x0,8
tick,0x7ff86ea82704,34377028,0,0x0,8
tick,0x7ff86ea82704,34378930,0,0x0,8
tick,0x7ff86ea82704,34381074,0,0x0,8
tick,0x7ff86ea82704,34382890,0,0x0,8
tick,0x7ff86ea82704,34384988,0,0x0,8
tick,0x7ff86ea82704,34386894,0,0x0,8
tick,0x7ff86ea82704,34388937,0,0x0,8
tick,0x7ff86ea82704,34390982,0,0x0,8
tick,0x7ff86ea82704,34392977,0,0x0,8
tick,0x7ff86ea82704,34395003,0,0x0,8
tick,0x7ff86ea82704,34396906,0,0x0,8
tick,0x7ff86ea82704,34398906,0,0x0,8
tick,0x7ff86ea82704,34400910,0,0x0,8
tick,0x7ff86ea82704,34402911,0,0x0,8
tick,0x7ff86ea82704,34404894,0,0x0,8
tick,0x7ff86ea82704,34407024,0,0x0,8
tick,0x7ff86ea82704,34408868,0,0x0,8
tick,0x7ff86ea82704,34410886,0,0x0,8
tick,0x7ff86ea82704,34412861,0,0x0,8
tick,0x7ff86ea82704,34414880,0,0x0,8
tick,0x7ff86ea82704,34416855,0,0x0,8
tick,0x7ff86ea82704,34418813,0,0x0,8
tick,0x7ff86ea82704,34420812,0,0x0,8
tick,0x7ff86ea82704,34422824,0,0x0,8
tick,0x7ff86ea82704,34424884,0,0x0,8
tick,0x7ff86ea82704,34426807,0,0x0,8
tick,0x7ff86ea82704,34428877,0,0x0,8
tick,0x7ff86ea82704,34430837,0,0x0,8
tick,0x7ff86ea82704,34432877,0,0x0,8
tick,0x7ff86ea82704,34434796,0,0x0,8
tick,0x7ff86ea82704,34436818,0,0x0,8
tick,0x7ff86ea82704,34438832,0,0x0,8
tick,0x7ff86ea82704,34441281,0,0x0,8
tick,0x7ff86ea82704,34442794,0,0x0,8
tick,0x7ff86ea82704,34444869,0,0x0,8
tick,0x7ff86ea82704,34446869,0,0x0,8
tick,0x7ff86ea82704,34448805,0,0x0,8
tick,0x7ff86ea82704,34450798,0,0x0,8
tick,0x7ff86ea82704,34452827,0,0x0,8
tick,0x7ff86ea82704,34454764,0,0x0,8
tick,0x7ff86ea82704,34456897,0,0x0,8
tick,0x7ff86ea82704,34458853,0,0x0,8
tick,0x7ff86ea82704,34460964,0,0x0,8
tick,0x7ff86ea82704,34462765,0,0x0,8
tick,0x7ff86ea82704,34464847,0,0x0,8
tick,0x7ff86ea82704,34466840,0,0x0,8
tick,0x7ff86ea82704,34468866,0,0x0,8
tick,0x7ff86ea82704,34470773,0,0x0,8
tick,0x7ff86ea82704,34472767,0,0x0,8
tick,0x7ff86ea82704,34474853,0,0x0,8
tick,0x7ff86ea82704,34476752,0,0x0,8
tick,0x7ff86ea82704,34478791,0,0x0,8
tick,0x7ff86ea82704,34480748,0,0x0,8
tick,0x7ff86ea82704,34482732,0,0x0,8
tick,0x7ff86ea82704,34484737,0,0x0,8
tick,0x7ff86ea82704,34486769,0,0x0,8
tick,0x7ff86ea82704,34488644,0,0x0,8
tick,0x7ff86ea82704,34490800,0,0x0,8
tick,0x7ff86ea82704,34492702,0,0x0,8
tick,0x7ff86ea82704,34494674,0,0x0,8
tick,0x7ff86ea82704,34496675,0,0x0,8
tick,0x7ff86ea82704,34498711,0,0x0,8
tick,0x7ff86ea82704,34500683,0,0x0,8
tick,0x7ff86ea82704,34502707,0,0x0,8
tick,0x7ff86ea82704,34504660,0,0x0,8
tick,0x7ff86ea82704,34506756,0,0x0,8
tick,0x7ff86ea82704,34508576,0,0x0,8
tick,0x7ff86ea82704,34510728,0,0x0,8
tick,0x7ff86ea82704,34512630,0,0x0,8
tick,0x7ff86ea82704,34514824,0,0x0,8
tick,0x7ff86ea82704,34516770,0,0x0,8
tick,0x7ff86ea82704,34518723,0,0x0,8
tick,0x7ff86ea82704,34520632,0,0x0,8
tick,0x7ff86ea82704,34522584,0,0x0,8
tick,0x7ff86ea82704,34524693,0,0x0,8
tick,0x7ff86ea82704,34526683,0,0x0,8
tick,0x7ff86ea82704,34528589,0,0x0,8
tick,0x7ff86ea82704,34530554,0,0x0,8
tick,0x7ff86ea82704,34532500,0,0x0,8
tick,0x7ff86ea82704,34534558,0,0x0,8
tick,0x7ff86ea82704,34536521,0,0x0,8
tick,0x7ff86ea82704,34538501,0,0x0,8
tick,0x7ff86ea82704,34540592,0,0x0,8
tick,0x7ff86ea82704,34542649,0,0x0,8
tick,0x7ff86ea82704,34544586,0,0x0,8
tick,0x7ff86ea82704,34546534,0,0x0,8
tick,0x7ff86ea82704,34548563,0,0x0,8
tick,0x7ff86ea82704,34550579,0,0x0,8
tick,0x7ff86ea82704,34552751,0,0x0,8
tick,0x7ff86ea82704,34554650,0,0x0,8
tick,0x7ff86ea82704,34556606,0,0x0,8
tick,0x7ff86ea82704,34558552,0,0x0,8
tick,0x7ff86ea82704,34560623,0,0x0,8
tick,0x7ff86ea82704,34562469,0,0x0,8
tick,0x7ff86ea82704,34564679,0,0x0,8
tick,0x7ff86ea82704,34566490,0,0x0,8
tick,0x7ff86ea82704,34568523,0,0x0,8
tick,0x7ff86ea82704,34570539,0,0x0,8
tick,0x7ff86ea82704,34572445,0,0x0,8
tick,0x7ff86ea82704,34574491,0,0x0,8
tick,0x7ff86ea82704,34576461,0,0x0,8
tick,0x7ff86ea82704,34578340,0,0x0,8
tick,0x7ff86ea82704,34580503,0,0x0,8
tick,0x7ff86ea82704,34582461,0,0x0,8
tick,0x7ff86ea82704,34584480,0,0x0,8
tick,0x7ff86ea82704,34586375,0,0x0,8
tick,0x7ff86ea82704,34588375,0,0x0,8
tick,0x7ff86ea82704,34590351,0,0x0,8
tick,0x7ff86ea82704,34592493,0,0x0,8
tick,0x7ff86ea82704,34594432,0,0x0,8
tick,0x7ff86ea82704,34596448,0,0x0,8
tick,0x7ff86ea82704,34598544,0,0x0,8
tick,0x7ff86ea82704,34600652,0,0x0,8
tick,0x7ff86ea82704,34602375,0,0x0,8
tick,0x7ff86ea82704,34604433,0,0x0,8
tick,0x7ff86ea82704,34606443,0,0x0,8
tick,0x7ff86ea82704,34608472,0,0x0,8
tick,0x7ff86ea82704,34610304,0,0x0,8
tick,0x7ff86ea82704,34612526,0,0x0,8
tick,0x7ff86ea82704,34614394,0,0x0,8
tick,0x7ff86ea82704,34616506,0,0x0,8
tick,0x7ff86ea82704,34618461,0,0x0,8
tick,0x7ff86ea82704,34620442,0,0x0,8
tick,0x7ff86ea82704,34622351,0,0x0,8
tick,0x7ff86ea82704,34624425,0,0x0,8
tick,0x7ff86ea82704,34626487,0,0x0,8
tick,0x7ff86ea82704,34628386,0,0x0,8
tick,0x7ff86ea82704,34630385,0,0x0,8
tick,0x7ff86ea82704,34632405,0,0x0,8
tick,0x7ff86ea82704,34634286,0,0x0,8
tick,0x7ff86ea82704,34636300,0,0x0,8
tick,0x7ff86ea82704,34638244,0,0x0,8
tick,0x7ff86ea82704,34640357,0,0x0,8
tick,0x7ff86ea82704,34642247,0,0x0,8
tick,0x7ff86ea82704,34644374,0,0x0,8
tick,0x7ff86ea82704,34646275,0,0x0,8
tick,0x7ff86ea82704,34648336,0,0x0,8
tick,0x7ff86ea82704,34650250,0,0x0,8
tick,0x7ff86ea82704,34652229,0,0x0,8
tick,0x7ff86ea82704,34654314,0,0x0,8
tick,0x7ff86ea82704,34656183,0,0x0,8
tick,0x7ff86ea82704,34658214,0,0x0,8
tick,0x7ff86ea82704,34660295,0,0x0,8
tick,0x7ff86ea82704,34662230,0,0x0,8
tick,0x7ff86ea82704,34664377,0,0x0,8
tick,0x7ff86ea82704,34666192,0,0x0,8
tick,0x7ff86ea82704,34668284,0,0x0,8
tick,0x7ff86ea82704,34670193,0,0x0,8
tick,0x7ff86ea82704,34672228,0,0x0,8
tick,0x7ff86ea82704,34674223,0,0x0,8
tick,0x7ff86ea82704,34676205,0,0x0,8
tick,0x7ff86ea82704,34678211,0,0x0,8
tick,0x7ff86ea82704,34680181,0,0x0,8
tick,0x7ff86ea82704,34682228,0,0x0,8
tick,0x7ff86ea82704,34684184,0,0x0,8
tick,0x7ff86ea82704,34686235,0,0x0,8
tick,0x7ff86ea82704,34688240,0,0x0,8
tick,0x7ff86ea82704,34690178,0,0x0,8
tick,0x7ff86ea82704,34692150,0,0x0,8
tick,0x7ff86ea82704,34694117,0,0x0,8
tick,0x7ff86ea82704,34696193,0,0x0,8
tick,0x7ff86ea82704,34698059,0,0x0,8
tick,0x7ff86ea82704,34700177,0,0x0,8
tick,0x7ff86ea82704,34702054,0,0x0,8
tick,0x7ff86ea82704,34704255,0,0x0,8
tick,0x7ff86ea82704,34706151,0,0x0,8
tick,0x7ff86ea82704,34708184,0,0x0,8
tick,0x7ff86ea82704,34710144,0,0x0,8
tick,0x7ff86ea82704,34712182,0,0x0,8
tick,0x7ff86ea82704,34714114,0,0x0,8
tick,0x7ff86ea82704,34716166,0,0x0,8
tick,0x7ff86ea82704,34718043,0,0x0,8
tick,0x7ff86ea82704,34720113,0,0x0,8
tick,0x7ff86ea82704,34722092,0,0x0,8
tick,0x7ff86ea82704,34724199,0,0x0,8
tick,0x7ff86ea82704,34726089,0,0x0,8
tick,0x7ff86ea82704,34727996,0,0x0,8
tick,0x7ff86ea82704,34730106,0,0x0,8
tick,0x7ff86ea82704,34732119,0,0x0,8
tick,0x7ff86ea82704,34734002,0,0x0,8
tick,0x7ff86ea82704,34736085,0,0x0,8
tick,0x7ff86ea82704,34737979,0,0x0,8
tick,0x7ff86ea82704,34740132,0,0x0,8
tick,0x7ff86ea82704,34742035,0,0x0,8
tick,0x7ff86ea82704,34744105,0,0x0,8
tick,0x7ff86ea82704,34745947,0,0x0,8
tick,0x7ff86ea82704,34748029,0,0x0,8
tick,0x7ff86ea82704,34750018,0,0x0,8
tick,0x7ff86ea82704,34752107,0,0x0,8
tick,0x7ff86ea82704,34753957,0,0x0,8
tick,0x7ff86ea82704,34755988,0,0x0,8
tick,0x7ff86ea82704,34757923,0,0x0,8
tick,0x7ff86ea82704,34759917,0,0x0,8
tick,0x7ff86ea82704,34762002,0,0x0,8
tick,0x7ff86ea82704,34763978,0,0x0,8
tick,0x7ff86ea82704,34765991,0,0x0,8
tick,0x7ff86ea82704,34767987,0,0x0,8
tick,0x7ff86ea82704,34770033,0,0x0,8
tick,0x7ff86ea82704,34771990,0,0x0,8
tick,0x7ff86ea82704,34773945,0,0x0,8
tick,0x7ff86ea82704,34775963,0,0x0,8
tick,0x7ff86ea82704,34777940,0,0x0,8
tick,0x7ff86ea82704,34779946,0,0x0,8
tick,0x7ff86ea82704,34781894,0,0x0,8
tick,0x7ff86ea82704,34783948,0,0x0,8
tick,0x7ff86ea82704,34785931,0,0x0,8
tick,0x7ff86ea82704,34787961,0,0x0,8
tick,0x7ff86ea82704,34789922,0,0x0,8
tick,0x7ff86ea82704,34791964,0,0x0,8
tick,0x7ff86ea82704,34793846,0,0x0,8
tick,0x7ff86ea82704,34795990,0,0x0,8
tick,0x7ff86ea82704,34797904,0,0x0,8
tick,0x7ff86ea82704,34799903,0,0x0,8
tick,0x7ff86ea82704,34801895,0,0x0,8
tick,0x7ff86ea82704,34803864,0,0x0,8
tick,0x7ff86ea82704,34805834,0,0x0,8
tick,0x7ff86ea82704,34807953,0,0x0,8
tick,0x7ff86ea82704,34809810,0,0x0,8
tick,0x7ff86ea82704,34811922,0,0x0,8
tick,0x7ff86ea82704,34813822,0,0x0,8
tick,0x7ff86ea82704,34815844,0,0x0,8
tick,0x7ff86ea82704,34817894,0,0x0,8
tick,0x7ff86ea82704,34819898,0,0x0,8
tick,0x7ff86ea82704,34821891,0,0x0,8
tick,0x7ff86ea82704,34823808,0,0x0,8
tick,0x7ff86ea82704,34825820,0,0x0,8
tick,0x7ff86ea82704,34827789,0,0x0,8
tick,0x7ff86ea82704,34829841,0,0x0,8
tick,0x7ff86ea82704,34831987,0,0x0,8
tick,0x7ff86ea82704,34833854,0,0x0,8
tick,0x7ff86ea82704,34835848,0,0x0,8
tick,0x7ff86ea82704,34837741,0,0x0,8
tick,0x7ff86ea82704,34839853,0,0x0,8
tick,0x7ff86ea82704,34841848,0,0x0,8
tick,0x7ff86ea82704,34843821,0,0x0,8
tick,0x7ff86ea82704,34845834,0,0x0,8
tick,0x7ff86ea82704,34847795,0,0x0,8
tick,0x7ff86ea82704,34849771,0,0x0,8
tick,0x7ff86ea82704,34851671,0,0x0,8
tick,0x7ff86ea82704,34853768,0,0x0,8
tick,0x7ff86ea82704,34855699,0,0x0,8
tick,0x7ff86ea82704,34857850,0,0x0,8
tick,0x7ff86ea82704,34859803,0,0x0,8
tick,0x7ff86ea82704,34861774,0,0x0,8
tick,0x7ff86ea82704,34863721,0,0x0,8
tick,0x7ff86ea82704,34865696,0,0x0,8
tick,0x7ff86ea82704,34867698,0,0x0,8
tick,0x7ff86ea82704,34869787,0,0x0,8
tick,0x7ff86ea82704,34871611,0,0x0,8
tick,0x7ff86ea82704,34873786,0,0x0,8
tick,0x7ff86ea82704,34875859,0,0x0,8
tick,0x7ff86ea82704,34877676,0,0x0,8
tick,0x7ff86ea82704,34879635,0,0x0,8
tick,0x7ff86ea82704,34881623,0,0x0,8
tick,0x7ff86ea82704,34883673,0,0x0,8
tick,0x7ff86ea82704,34885721,0,0x0,8
tick,0x7ff86ea82704,34887670,0,0x0,8
tick,0x7ff86ea82704,34889620,0,0x0,8
tick,0x7ff86ea82704,34891659,0,0x0,8
tick,0x7ff86ea82704,34893839,0,0x0,8
tick,0x7ff86ea82704,34895678,0,0x0,8
tick,0x7ff86ea82704,34897643,0,0x0,8
tick,0x7ff86ea82704,34899580,0,0x0,8
tick,0x7ff86ea82704,34901746,0,0x0,8
tick,0x7ff86ea82704,34903605,0,0x0,8
tick,0x7ff86ea82704,34905583,0,0x0,8
tick,0x7ff86ea82704,34907760,0,0x0,8
tick,0x7ff86ea82704,34909718,0,0x0,8
tick,0x7ff86ea82704,34911624,0,0x0,8
tick,0x7ff86ea82704,34913567,0,0x0,8
tick,0x7ff86ea82704,34915493,0,0x0,8
tick,0x7ff86ea82704,34917742,0,0x0,8
tick,0x7ff86ea82704,34919540,0,0x0,8
tick,0x7ff86ea82704,34921645,0,0x0,8
tick,0x7ff86ea82704,34923575,0,0x0,8
tick,0x7ff86ea82704,34925708,0,0x0,8
tick,0x7ff86ea82704,34927615,0,0x0,8
tick,0x7ff86ea82704,34929752,0,0x0,8
tick,0x7ff86ea82704,34931724,0,0x0,8
tick,0x7ff86ea82704,34933546,0,0x0,8
tick,0x7ff86ea82704,34935351,0,0x0,8
tick,0x7ff86ea82704,34937622,0,0x0,8
tick,0x7ff86ea82704,34939454,0,0x0,8
tick,0x7ff86ea82704,34942856,0,0x0,8
tick,0x7ff86ea82704,34944530,0,0x0,8
tick,0x7ff86ea82704,34946548,0,0x0,8
tick,0x7ff86ea82704,34948556,0,0x0,8
tick,0x7ff86ea82704,34950510,0,0x0,8
tick,0x7ff86ea82704,34952495,0,0x0,8
tick,0x7ff86ea82704,34954425,0,0x0,8
tick,0x7ff86ea82704,34956449,0,0x0,8
tick,0x7ff86ea82704,34958460,0,0x0,8
tick,0x7ff86ea82704,34960577,0,0x0,8
tick,0x7ff86ea82704,34962728,0,0x0,8
tick,0x7ff86ea82704,34964700,0,0x0,8
tick,0x7ff86ea82704,34966398,0,0x0,8
tick,0x7ff86ea82704,34968430,0,0x0,8
tick,0x7ff86ea82704,34970436,0,0x0,8
tick,0x7ff86ea82704,34972361,0,0x0,8
tick,0x7ff86ea82704,34974483,0,0x0,8
tick,0x7ff86ea82704,34976384,0,0x0,8
tick,0x7ff86ea82704,34978432,0,0x0,8
tick,0x7ff86ea82704,34980422,0,0x0,8
tick,0x7ff86ea82704,34982405,0,0x0,8
tick,0x7ff86ea82704,34984405,0,0x0,8
tick,0x7ff86ea82704,34986513,0,0x0,8
tick,0x7ff86ea82704,34988435,0,0x0,8
tick,0x7ff86ea82704,34990522,0,0x0,8
tick,0x7ff86ea82704,34992380,0,0x0,8
tick,0x7ff86ea82704,34994383,0,0x0,8
tick,0x7ff86ea82704,34996315,0,0x0,8
tick,0x7ff86ea82704,34998335,0,0x0,8
tick,0x7ff86ea82704,35000319,0,0x0,8
tick,0x7ff86ea82704,35002337,0,0x0,8
tick,0x7ff86ea82704,35004285,0,0x0,8
tick,0x7ff86ea82704,35006314,0,0x0,8
tick,0x7ff86ea82704,35008291,0,0x0,8
tick,0x7ff86ea82704,35010297,0,0x0,8
tick,0x7ff86ea82704,35012376,0,0x0,8
tick,0x7ff86ea82704,35014447,0,0x0,8
tick,0x7ff86ea82704,35016242,0,0x0,8
tick,0x7ff86ea82704,35018455,0,0x0,8
tick,0x7ff86ea82704,35020227,0,0x0,8
tick,0x7ff86ea82704,35022469,0,0x0,8
tick,0x7ff86ea82704,35025935,0,0x0,8
tick,0x7ff86ea82704,35027745,0,0x0,8
tick,0x7ff86ea82704,35029282,0,0x0,8
tick,0x7ff86ea82704,35031253,0,0x0,8
tick,0x7ff86ea82704,35033315,0,0x0,8
tick,0x7ff86ea82704,35035541,0,0x0,8
tick,0x7ff86ea82704,35037317,0,0x0,8
tick,0x7ff86ea82704,35039331,0,0x0,8
tick,0x7ff86ea82704,35041230,0,0x0,8
tick,0x7ff86ea82704,35043483,0,0x0,8
tick,0x7ff86ea82704,35045392,0,0x0,8
tick,0x7ff86ea82704,35047305,0,0x0,8
tick,0x7ff86ea82704,35049228,0,0x0,8
tick,0x7ff86ea82704,35051327,0,0x0,8
tick,0x7ff86ea82704,35053330,0,0x0,8
tick,0x7ff86ea82704,35055334,0,0x0,8
tick,0x7ff86ea82704,35057410,0,0x0,8
tick,0x7ff86ea82704,35059343,0,0x0,8
tick,0x7ff86ea82704,35061209,0,0x0,8
tick,0x7ff86ea82704,35063267,0,0x0,8
tick,0x7ff86ea82704,35065229,0,0x0,8
tick,0x7ff86ea82704,35067752,0,0x0,8
tick,0x7ff86ea82704,35070420,0,0x0,8
tick,0x7ff86ea82704,35073731,0,0x0,8
tick,0x7ff86ea82704,35075540,0,0x0,8
tick,0x7ff86ea82704,35077186,0,0x0,8
tick,0x7ff86ea82704,35079155,0,0x0,8
tick,0x7ff86ea82704,35081273,0,0x0,8
tick,0x7ff86ea82704,35083558,0,0x0,8
tick,0x7ff86ea82704,35085264,0,0x0,8
tick,0x7ff86ea82704,35087182,0,0x0,8
tick,0x7ff86ea82704,35089154,0,0x0,8
tick,0x7ff86ea82704,35092577,0,0x0,8
tick,0x7ff86ea82704,35094658,0,0x0,8
tick,0x7ff86ea82704,35096475,0,0x0,8
tick,0x7ff86ea82704,35098397,0,0x0,8
tick,0x7ff86ea82704,35100237,0,0x0,8
tick,0x7ff86ea82704,35102295,0,0x0,8
tick,0x7ff86ea82704,35104144,0,0x0,8
tick,0x7ff86ea82704,35106319,0,0x0,8
tick,0x7ff86ea82704,35108183,0,0x0,8
tick,0x7ff86ea82704,35110417,0,0x0,8
tick,0x7ff86ea82704,35112514,0,0x0,8
tick,0x7ff86ea82704,35114252,0,0x0,8
tick,0x7ff86ea82704,35116497,0,0x0,8
tick,0x7ff86ea82704,35118495,0,0x0,8
tick,0x7ff86ea82704,35120284,0,0x0,8
tick,0x7ff86ea82704,35122186,0,0x0,8
tick,0x7ff86ea82704,35125691,0,0x0,8
tick,0x7ff86ea82704,35127784,0,0x0,8
tick,0x7ff86ea82704,35128396,0,0x0,8
tick,0x7ff86ea82704,35130259,0,0x0,8
tick,0x7ff86ea82704,35132481,0,0x0,8
tick,0x7ff86ea82704,35134595,0,0x0,8
tick,0x7ff86ea82704,35136340,0,0x0,8
tick,0x7ff86ea82704,35138210,0,0x0,8
tick,0x7ff86ea82704,35141017,0,0x0,8
tick,0x7ff86ea82704,35142706,0,0x0,8
tick,0x7ff86ea82704,35144277,0,0x0,8
tick,0x7ff86ea82704,35146058,0,0x0,8
tick,0x7ff86ea82704,35148096,0,0x0,8
tick,0x7ff86ea82704,35149979,0,0x0,8
tick,0x7ff86ea82704,35152325,0,0x0,8
tick,0x7ff86ea82704,35154141,0,0x0,8
tick,0x7ff86ea82704,35156165,0,0x0,8
tick,0x7ff86ea82704,35158900,0,0x0,8
tick,0x7ff86ea82704,35160631,0,0x0,8
tick,0x7ff86ea82704,35162050,0,0x0,8
tick,0x7ff86ea82704,35164083,0,0x0,8
tick,0x7ff86ea82704,35166027,0,0x0,8
tick,0x7ff86ea82704,35168039,0,0x0,8
tick,0x7ff86ea82704,35170134,0,0x0,8
tick,0x7ff86ea82704,35172186,0,0x0,8
tick,0x7ff86ea82704,35174964,0,0x0,8
tick,0x7ff86ea82704,35177398,0,0x0,8
tick,0x7ff86ea82704,35179479,0,0x0,8
tick,0x7ff86ea82704,35180843,0,0x0,8
tick,0x7ff86ea82704,35182925,0,0x0,8
tick,0x7ff86ea82704,35184816,0,0x0,8
tick,0x7ff86ea82704,35186859,0,0x0,8
tick,0x7ff86ea82704,35188894,0,0x0,8
tick,0x7ff86ea82704,35192864,0,0x0,8
tick,0x7ff86ea82704,35195345,0,0x0,8
tick,0x7ff86ea82704,35197025,0,0x0,8
tick,0x7ff86ea82704,35199030,0,0x0,8
tick,0x7ff86ea82704,35200823,0,0x0,8
tick,0x7ff86ea82704,35203029,0,0x0,8
tick,0x7ff86ea82704,35204799,0,0x0,8
tick,0x7ff86ea82704,35207988,0,0x0,8
tick,0x7ff86ea82704,35209108,0,0x0,8
tick,0x7ff86ea82704,35211130,0,0x0,8
tick,0x7ff86ea82704,35212967,0,0x0,8
tick,0x7ff86ea82704,35215108,0,0x0,8
tick,0x7ff86ea82704,35216851,0,0x0,8
tick,0x7ff86ea82704,35218826,0,0x0,8
tick,0x7ff86ea82704,35220775,0,0x0,8
tick,0x7ff86ea82704,35223010,0,0x0,8
tick,0x7ff86ea82704,35224911,0,0x0,8
tick,0x7ff86ea82704,35226974,0,0x0,8
tick,0x7ff86ea82704,35228819,0,0x0,8
tick,0x7ff86ea82704,35231037,0,0x0,8
tick,0x7ff86ea82704,35232658,0,0x0,8
tick,0x7ff86ea82704,35234824,0,0x0,8
tick,0x7ff86ea82704,35236623,0,0x0,8
tick,0x7ff86ea82704,35238793,0,0x0,8
tick,0x7ff86ea82704,35240802,0,0x0,8
tick,0x7ff86ea82704,35242863,0,0x0,8
tick,0x7ff86ea82704,35244661,0,0x0,8
tick,0x7ff86ea82704,35246881,0,0x0,8
tick,0x7ff86ea82704,35248682,0,0x0,8
tick,0x7ff86ea82704,35250938,0,0x0,8
tick,0x7ff86ea82704,35252634,0,0x0,8
tick,0x7ff86ea82704,35255595,0,0x0,8
tick,0x7ff86ea82704,35256787,0,0x0,8
tick,0x7ff86ea82704,35258757,0,0x0,8
tick,0x7ff86ea82704,35260822,0,0x0,8
tick,0x7ff86ea82704,35262632,0,0x0,8
tick,0x7ff86ea82704,35264712,0,0x0,8
tick,0x7ff86ea82704,35266721,0,0x0,8
tick,0x7ff86ea82704,35269074,0,0x0,8
tick,0x7ff86ea82704,35270655,0,0x0,8
tick,0x7ff86ea82704,35272752,0,0x0,8
tick,0x7ff86ea82704,35275820,0,0x0,8
tick,0x7ff86ea82704,35276774,0,0x0,8
tick,0x7ff86ea82704,35278894,0,0x0,8
tick,0x7ff86ea82704,35280633,0,0x0,8
tick,0x7ff86ea82704,35282519,0,0x0,8
tick,0x7ff86ea82704,35285193,0,0x0,8
tick,0x7ff86ea82704,35286558,0,0x0,8
tick,0x7ff86ea82704,35288592,0,0x0,8
tick,0x7ff86ea82704,35290851,0,0x0,8
tick,0x7ff86ea82704,35293082,0,0x0,8
tick,0x7ff86ea82704,35294997,0,0x0,8
tick,0x7ff86ea82704,35296646,0,0x0,8
tick,0x7ff86ea82704,35298519,0,0x0,8
tick,0x7ff86ea82704,35300824,0,0x0,8
tick,0x7ff86ea82704,35302455,0,0x0,8
tick,0x7ff86ea82704,35304619,0,0x0,8
tick,0x7ff86ea82704,35306445,0,0x0,8
tick,0x7ff86ea82704,35309080,0,0x0,8
tick,0x7ff86ea82704,35310540,0,0x0,8
tick,0x7ff86ea82704,35312635,0,0x0,8
tick,0x7ff86ea82704,35314539,0,0x0,8
tick,0x7ff86ea82704,35316465,0,0x0,8
tick,0x7ff86ea82704,35318513,0,0x0,8
tick,0x7ff86ea82704,35320443,0,0x0,8
tick,0x7ff86ea82704,35323184,0,0x0,8
tick,0x7ff86ea82704,35326147,0,0x0,8
tick,0x7ff86ea82704,35326577,0,0x0,8
tick,0x7ff86ea82704,35328542,0,0x0,8
tick,0x7ff86ea82704,35330823,0,0x0,8
tick,0x7ff86ea82704,35332754,0,0x0,8
tick,0x7ff86ea82704,35334546,0,0x0,8
tick,0x7ff86ea82704,35336488,0,0x0,8
tick,0x7ff86ea82704,35338594,0,0x0,8
tick,0x7ff86ea82704,35342008,0,0x0,8
tick,0x7ff86ea82704,35342652,0,0x0,8
tick,0x7ff86ea82704,35344627,0,0x0,8
tick,0x7ff86ea82704,35346369,0,0x0,8
tick,0x7ff86ea82704,35348454,0,0x0,8
tick,0x7ff86ea82704,35350333,0,0x0,8
tick,0x7ff86ea82704,35352452,0,0x0,8
tick,0x7ff86ea82704,35354372,0,0x0,8
tick,0x7ff86ea82704,35356312,0,0x0,8
tick,0x7ff86ea82704,35359971,0,0x0,8
tick,0x7ff86ea82704,35361330,0,0x0,8
tick,0x7ff86ea82704,35363630,0,0x0,8
tick,0x7ff86ea82704,35365400,0,0x0,8
tick,0x7ff86ea82704,35367333,0,0x0,8
tick,0x7ff86ea82704,35369352,0,0x0,8
tick,0x7ff86ea82704,35371468,0,0x0,8
tick,0x7ff86ea82704,35373627,0,0x0,8
tick,0x7ff86ea82704,35376505,0,0x0,8
tick,0x7ff86ea82704,35377600,0,0x0,8
tick,0x7ff86ea82704,35379774,0,0x0,8
tick,0x7ff86ea82704,35381712,0,0x0,8
tick,0x7ff86ea82704,35383310,0,0x0,8
tick,0x7ff86ea82704,35385525,0,0x0,8
tick,0x7ff86ea82704,35387406,0,0x0,8
tick,0x7ff86ea82704,35389448,0,0x0,8
tick,0x7ff86ea82704,35392472,0,0x0,8
tick,0x7ff86ea82704,35393559,0,0x0,8
tick,0x7ff86ea82704,35395651,0,0x0,8
tick,0x7ff86ea82704,35397406,0,0x0,8
tick,0x7ff86ea82704,35399410,0,0x0,8
tick,0x7ff86ea82704,35401351,0,0x0,8
tick,0x7ff86ea82704,35403714,0,0x0,8
tick,0x7ff86ea82704,35405307,0,0x0,8
tick,0x7ff86ea82704,35408095,0,0x0,8
tick,0x7ff86ea82704,35409726,0,0x0,8
tick,0x7ff86ea82704,35411205,0,0x0,8
tick,0x7ff86ea82704,35413403,0,0x0,8
tick,0x7ff86ea82704,35415253,0,0x0,8
tick,0x7ff86ea82704,35417340,0,0x0,8
tick,0x7ff86ea82704,35419283,0,0x0,8
tick,0x7ff86ea82704,35421262,0,0x0,8
tick,0x7ff86ea82704,35423173,0,0x0,8
tick,0x7ff86ea82704,35425704,0,0x0,8
tick,0x7ff86ea82704,35427222,0,0x0,8
tick,0x7ff86ea82704,35429261,0,0x0,8
tick,0x7ff86ea82704,35431102,0,0x0,8
tick,0x7ff86ea82704,35433249,0,0x0,8
tick,0x7ff86ea82704,35435179,0,0x0,8
tick,0x7ff86ea82704,35437340,0,0x0,8
tick,0x7ff86ea82704,35439332,0,0x0,8
tick,0x7ff86ea82704,35441128,0,0x0,8
tick,0x7ff86ea82704,35443311,0,0x0,8
tick,0x7ff86ea82704,35445427,0,0x0,8
tick,0x7ff86ea82704,35447363,0,0x0,8
tick,0x7ff86ea82704,35449456,0,0x0,8
tick,0x7ff86ea82704,35451125,0,0x0,8
tick,0x7ff86ea82704,35453157,0,0x0,8
tick,0x7ff86ea82704,35455277,0,0x0,8
tick,0x7ff86ea82704,35457290,0,0x0,8
tick,0x7ff86ea82704,35459297,0,0x0,8
tick,0x7ff86ea82704,35461092,0,0x0,8
tick,0x7ff86ea82704,35463159,0,0x0,8
tick,0x7ff86ea82704,35465085,0,0x0,8
tick,0x7ff86ea82704,35467186,0,0x0,8
tick,0x7ff86ea82704,35469114,0,0x0,8
tick,0x7ff86ea82704,35471134,0,0x0,8
tick,0x7ff86ea82704,35473109,0,0x0,8
tick,0x7ff86ea82704,35475157,0,0x0,8
tick,0x7ff86ea82704,35477134,0,0x0,8
tick,0x7ff86ea82704,35479079,0,0x0,8
tick,0x7ff86ea82704,35481064,0,0x0,8
tick,0x7ff86ea82704,35483094,0,0x0,8
tick,0x7ff86ea82704,35485167,0,0x0,8
tick,0x7ff86ea82704,35487017,0,0x0,8
tick,0x7ff86ea82704,35489149,0,0x0,8
tick,0x7ff86ea82704,35491107,0,0x0,8
tick,0x7ff86ea82704,35493060,0,0x0,8
tick,0x7ff86ea82704,35495115,0,0x0,8
tick,0x7ff86ea82704,35497335,0,0x0,8
tick,0x7ff86ea82704,35499039,0,0x0,8
tick,0x7ff86ea82704,35501391,0,0x0,8
tick,0x7ff86ea82704,35503029,0,0x0,8
tick,0x7ff86ea82704,35505375,0,0x0,8
tick,0x7ff86ea82704,35507344,0,0x0,8
tick,0x7ff86ea82704,35509173,0,0x0,8
tick,0x7ff86ea82704,35511124,0,0x0,8
tick,0x7ff86ea82704,35512982,0,0x0,8
tick,0x7ff86ea82704,35515765,0,0x0,8
tick,0x7ff86ea82704,35516996,0,0x0,8
tick,0x7ff86ea82704,35519018,0,0x0,8
tick,0x7ff86ea82704,35520929,0,0x0,8
tick,0x7ff86ea82704,35522977,0,0x0,8
tick,0x7ff86ea82704,35525127,0,0x0,8
tick,0x7ff86ea82704,35526884,0,0x0,8
tick,0x7ff86ea82704,35529120,0,0x0,8
tick,0x7ff86ea82704,35530908,0,0x0,8
tick,0x7ff86ea82704,35533002,0,0x0,8
tick,0x7ff86ea82704,35534898,0,0x0,8
tick,0x7ff86ea82704,35536996,0,0x0,8
tick,0x7ff86ea82704,35538915,0,0x0,8
tick,0x7ff86ea82704,35541047,0,0x0,8
tick,0x7ff86ea82704,35542944,0,0x0,8
tick,0x7ff86ea82704,35545102,0,0x0,8
tick,0x7ff86ea82704,35546812,0,0x0,8
tick,0x7ff86ea82704,35548909,0,0x0,8
tick,0x7ff86ea82704,35550836,0,0x0,8
tick,0x7ff86ea82704,35553089,0,0x0,8
tick,0x7ff86ea82704,35554809,0,0x0,8
tick,0x7ff86ea82704,35557178,0,0x0,8
tick,0x7ff86ea82704,35559156,0,0x0,8
tick,0x7ff86ea82704,35561173,0,0x0,8
tick,0x7ff86ea82704,35563266,0,0x0,8
tick,0x7ff86ea82704,35564906,0,0x0,8
tick,0x7ff86ea82704,35567084,0,0x0,8
tick,0x7ff86ea82704,35569026,0,0x0,8
tick,0x7ff86ea82704,35570849,0,0x0,8
tick,0x7ff86ea82704,35572887,0,0x0,8
tick,0x7ff86ea82704,35575041,0,0x0,8
tick,0x7ff86ea82704,35577056,0,0x0,8
tick,0x7ff86ea82704,35579412,0,0x0,8
tick,0x7ff86ea82704,35581104,0,0x0,8
tick,0x7ff86ea82704,35583209,0,0x0,8
tick,0x7ff86ea82704,35585071,0,0x0,8
tick,0x7ff86ea82704,35587021,0,0x0,8
tick,0x7ff86ea82704,35588853,0,0x0,8
tick,0x7ff86ea82704,35591423,0,0x0,8
tick,0x7ff86ea82704,35592752,0,0x0,8
tick,0x7ff86ea82704,35595244,0,0x0,8
tick,0x7ff86ea82704,35596748,0,0x0,8
tick,0x7ff86ea82704,35599955,0,0x0,8
tick,0x7ff86ea82704,35601885,0,0x0,8
tick,0x7ff86ea82704,35603763,0,0x0,8
tick,0x7ff86ea82704,35605808,0,0x0,8
tick,0x7ff86ea82704,35608146,0,0x0,8
tick,0x7ff86ea82704,35609836,0,0x0,8
tick,0x7ff86ea82704,35612706,0,0x0,8
tick,0x7ff86ea82704,35614854,0,0x0,8
tick,0x7ff86ea82704,35616723,0,0x0,8
tick,0x7ff86ea82704,35618785,0,0x0,8
tick,0x7ff86ea82704,35620757,0,0x0,8
tick,0x7ff86ea82704,35623076,0,0x0,8
tick,0x7ff86ea82704,35625349,0,0x0,8
tick,0x7ff86ea82704,35626725,0,0x0,8
tick,0x7ff86ea82704,35629044,0,0x0,8
tick,0x7ff86ea82704,35631172,0,0x0,8
tick,0x7ff86ea82704,35632716,0,0x0,8
tick,0x7ff86ea82704,35634819,0,0x0,8
tick,0x7ff86ea82704,35636690,0,0x0,8
tick,0x7ff86ea82704,35639376,0,0x0,8
tick,0x7ff86ea82704,35641524,0,0x0,8
tick,0x7ff86ea82704,35642959,0,0x0,8
tick,0x7ff86ea82704,35645086,0,0x0,8
tick,0x7ff86ea82704,35647486,0,0x0,8
tick,0x7ff86ea82704,35648521,0,0x0,8
tick,0x7ff86ea82704,35650613,0,0x0,8
tick,0x7ff86ea82704,35652522,0,0x0,8
tick,0x7ff86ea82704,35654712,0,0x0,8
tick,0x7ff86ea82704,35656527,0,0x0,8
tick,0x7ff86ea82704,35658897,0,0x0,8
tick,0x7ff86ea82704,35660837,0,0x0,8
tick,0x7ff86ea82704,35663042,0,0x0,8
tick,0x7ff86ea82704,35664672,0,0x0,8
tick,0x7ff86ea82704,35666632,0,0x0,8
tick,0x7ff86ea82704,35668819,0,0x0,8
tick,0x7ff86ea82704,35670695,0,0x0,8
tick,0x7ff86ea82704,35672590,0,0x0,8
tick,0x7ff86ea82704,35675276,0,0x0,8
tick,0x7ff86ea82704,35676670,0,0x0,8
tick,0x7ff86ea82704,35678822,0,0x0,8
tick,0x7ff86ea82704,35680451,0,0x0,8
tick,0x7ff86ea82704,35682412,0,0x0,8
tick,0x7ff86ea82704,35684514,0,0x0,8
tick,0x7ff86ea82704,35686405,0,0x0,8
tick,0x7ff86ea82704,35688436,0,0x0,8
tick,0x7ff86ea82704,35690672,0,0x0,8
tick,0x7ff86ea82704,35692545,0,0x0,8
tick,0x7ff86ea82704,35694399,0,0x0,8
tick,0x7ff86ea82704,35696593,0,0x0,8
tick,0x7ff86ea82704,35698404,0,0x0,8
tick,0x7ff86ea82704,35700411,0,0x0,8
tick,0x7ff86ea82704,35702439,0,0x0,8
tick,0x7ff86ea82704,35704323,0,0x0,8
tick,0x7ff86ea82704,35706385,0,0x0,8
tick,0x7ff86ea82704,35708599,0,0x0,8
tick,0x7ff86ea82704,35710380,0,0x0,8
tick,0x7ff86ea82704,35712417,0,0x0,8
tick,0x7ff86ea82704,35714361,0,0x0,8
tick,0x7ff86ea82704,35716356,0,0x0,8
tick,0x7ff86ea82704,35718609,0,0x0,8
tick,0x7ff86ea82704,35720320,0,0x0,8
tick,0x7ff86ea82704,35722332,0,0x0,8
tick,0x7ff86ea82704,35724424,0,0x0,8
tick,0x7ff86ea82704,35726419,0,0x0,8
tick,0x7ff86ea82704,35728303,0,0x0,8
tick,0x7ff86ea82704,35730444,0,0x0,8
tick,0x7ff86ea82704,35732328,0,0x0,8
tick,0x7ff86ea82704,35734448,0,0x0,8
tick,0x7ff86ea82704,35736304,0,0x0,8
tick,0x7ff86ea82704,35738296,0,0x0,8
tick,0x7ff86ea82704,35740408,0,0x0,8
tick,0x7ff86ea82704,35742423,0,0x0,8
tick,0x7ff86ea82704,35744398,0,0x0,8
tick,0x7ff86ea82704,35746297,0,0x0,8
tick,0x7ff86ea82704,35748336,0,0x0,8
tick,0x7ff86ea82704,35750290,0,0x0,8
tick,0x7ff86ea82704,35752267,0,0x0,8
tick,0x7ff86ea82704,35754241,0,0x0,8
tick,0x7ff86ea82704,35756504,0,0x0,8
tick,0x7ff86ea82704,35758235,0,0x0,8
tick,0x7ff86ea82704,35760200,0,0x0,8
tick,0x7ff86ea82704,35762366,0,0x0,8
tick,0x7ff86ea82704,35764387,0,0x0,8
tick,0x7ff86ea82704,35766186,0,0x0,8
tick,0x7ff86ea82704,35768258,0,0x0,8
tick,0x7ff86ea82704,35770209,0,0x0,8
tick,0x7ff86ea82704,35772242,0,0x0,8
tick,0x7ff86ea82704,35774170,0,0x0,8
tick,0x7ff86ea82704,35776338,0,0x0,8
tick,0x7ff86ea82704,35778155,0,0x0,8
tick,0x7ff86ea82704,35780210,0,0x0,8
tick,0x7ff86ea82704,35782128,0,0x0,8
tick,0x7ff86ea82704,35784155,0,0x0,8
tick,0x7ff86ea82704,35786130,0,0x0,8
tick,0x7ff86ea82704,35788136,0,0x0,8
tick,0x7ff86ea82704,35790162,0,0x0,8
tick,0x7ff86ea82704,35792100,0,0x0,8
tick,0x7ff86ea82704,35794135,0,0x0,8
tick,0x7ff86ea82704,35796159,0,0x0,8
tick,0x7ff86ea82704,35798095,0,0x0,8
tick,0x7ff86ea82704,35800167,0,0x0,8
tick,0x7ff86ea82704,35802125,0,0x0,8
tick,0x7ff86ea82704,35804191,0,0x0,8
tick,0x7ff86ea82704,35806090,0,0x0,8
tick,0x7ff86ea82704,35808229,0,0x0,8
tick,0x7ff86ea82704,35810073,0,0x0,8
tick,0x7ff86ea82704,35812170,0,0x0,8
tick,0x7ff86ea82704,35814106,0,0x0,8
tick,0x7ff86ea82704,35816053,0,0x0,8
tick,0x7ff86ea82704,35818146,0,0x0,8
tick,0x7ff86ea82704,35820085,0,0x0,8
tick,0x7ff86ea82704,35822100,0,0x0,8
tick,0x7ff86ea82704,35824103,0,0x0,8
tick,0x7ff86ea82704,35826005,0,0x0,8
tick,0x7ff86ea82704,35828119,0,0x0,8
tick,0x7ff86ea82704,35830056,0,0x0,8
tick,0x7ff86ea82704,35832089,0,0x0,8
tick,0x7ff86ea82704,35834129,0,0x0,8
tick,0x7ff86ea82704,35835997,0,0x0,8
tick,0x7ff86ea82704,35838020,0,0x0,8
tick,0x7ff86ea82704,35840091,0,0x0,8
tick,0x7ff86ea82704,35841985,0,0x0,8
tick,0x7ff86ea82704,35844184,0,0x0,8
tick,0x7ff86ea82704,35845977,0,0x0,8
tick,0x7ff86ea82704,35847991,0,0x0,8
tick,0x7ff86ea82704,35849973,0,0x0,8
tick,0x7ff86ea82704,35851934,0,0x0,8
tick,0x7ff86ea82704,35854052,0,0x0,8
tick,0x7ff86ea82704,35855925,0,0x0,8
tick,0x7ff86ea82704,35858037,0,0x0,8
tick,0x7ff86ea82704,35860144,0,0x0,8
tick,0x7ff86ea82704,35862073,0,0x0,8
tick,0x7ff86ea82704,35863921,0,0x0,8
tick,0x7ff86ea82704,35865992,0,0x0,8
tick,0x7ff86ea82704,35867916,0,0x0,8
tick,0x7ff86ea82704,35869957,0,0x0,8
tick,0x7ff86ea82704,35871927,0,0x0,8
tick,0x7ff86ea82704,35874142,0,0x0,8
tick,0x7ff86ea82704,35876027,0,0x0,8
tick,0x7ff86ea82704,35877988,0,0x0,8
tick,0x7ff86ea82704,35879928,0,0x0,8
tick,0x7ff86ea82704,35881941,0,0x0,8
tick,0x7ff86ea82704,35883901,0,0x0,8
tick,0x7ff86ea82704,35885931,0,0x0,8
tick,0x7ff86ea82704,35887918,0,0x0,8
tick,0x7ff86ea82704,35889859,0,0x0,8
tick,0x7ff86ea82704,35892025,0,0x0,8
tick,0x7ff86ea82704,35893928,0,0x0,8
tick,0x7ff86ea82704,35895953,0,0x0,8
tick,0x7ff86ea82704,35897845,0,0x0,8
tick,0x7ff86ea82704,35900021,0,0x0,8
tick,0x7ff86ea82704,35901857,0,0x0,8
tick,0x7ff86ea82704,35903832,0,0x0,8
tick,0x7ff86ea82704,35905913,0,0x0,8
tick,0x7ff86ea82704,35907920,0,0x0,8
tick,0x7ff86ea82704,35909827,0,0x0,8
tick,0x7ff86ea82704,35911890,0,0x0,8
tick,0x7ff86ea82704,35913803,0,0x0,8
tick,0x7ff86ea82704,35915812,0,0x0,8
tick,0x7ff86ea82704,35917805,0,0x0,8
tick,0x7ff86ea82704,35919874,0,0x0,8
tick,0x7ff86ea82704,35921809,0,0x0,8
tick,0x7ff86ea82704,35923940,0,0x0,8
tick,0x7ff86ea82704,35925748,0,0x0,8
tick,0x7ff86ea82704,35927812,0,0x0,8
tick,0x7ff86ea82704,35929799,0,0x0,8
tick,0x7ff86ea82704,35931771,0,0x0,8
tick,0x7ff86ea82704,35933743,0,0x0,8
tick,0x7ff86ea82704,35935758,0,0x0,8
tick,0x7ff86ea82704,35937762,0,0x0,8
tick,0x7ff86ea82704,35939777,0,0x0,8
tick,0x7ff86ea82704,35941934,0,0x0,8
tick,0x7ff86ea82704,35943725,0,0x0,8
tick,0x7ff86ea82704,35945805,0,0x0,8
tick,0x7ff86ea82704,35947703,0,0x0,8
tick,0x7ff86ea82704,35949861,0,0x0,8
tick,0x7ff86ea82704,35951707,0,0x0,8
tick,0x7ff86ea82704,35953762,0,0x0,8
tick,0x7ff86ea82704,35955692,0,0x0,8
tick,0x7ff86ea82704,35957771,0,0x0,8
tick,0x7ff86ea82704,35959858,0,0x0,8
tick,0x7ff86ea82704,35961897,0,0x0,8
tick,0x7ff86ea82704,35963693,0,0x0,8
tick,0x7ff86ea82704,35965668,0,0x0,8
tick,0x7ff86ea82704,35967666,0,0x0,8
tick,0x7ff86ea82704,35969690,0,0x0,8
tick,0x7ff86ea82704,35971617,0,0x0,8
tick,0x7ff86ea82704,35973848,0,0x0,8
tick,0x7ff86ea82704,35975689,0,0x0,8
tick,0x7ff86ea82704,35977722,0,0x0,8
tick,0x7ff86ea82704,35979626,0,0x0,8
tick,0x7ff86ea82704,35981728,0,0x0,8
tick,0x7ff86ea82704,35983698,0,0x0,8
tick,0x7ff86ea82704,35985677,0,0x0,8
tick,0x7ff86ea82704,35987589,0,0x0,8
tick,0x7ff86ea82704,35989642,0,0x0,8
tick,0x7ff86ea82704,35991634,0,0x0,8
tick,0x7ff86ea82704,35993867,0,0x0,8
tick,0x7ff86ea82704,35995576,0,0x0,8
tick,0x7ff86ea82704,35997742,0,0x0,8
tick,0x7ff86ea82704,35999612,0,0x0,8
tick,0x7ff86ea82704,36001673,0,0x0,8
tick,0x7ff86ea82704,36003575,0,0x0,8
tick,0x7ff86ea82704,36005573,0,0x0,8
tick,0x7ff86ea82704,36007586,0,0x0,8
tick,0x7ff86ea82704,36009839,0,0x0,8
tick,0x7ff86ea82704,36011557,0,0x0,8
tick,0x7ff86ea82704,36013571,0,0x0,8
tick,0x7ff86ea82704,36015489,0,0x0,8
tick,0x7ff86ea82704,36017554,0,0x0,8
tick,0x7ff86ea82704,36019523,0,0x0,8
tick,0x7ff86ea82704,36021498,0,0x0,8
tick,0x7ff86ea82704,36023847,0,0x0,8
tick,0x7ff86ea82704,36025537,0,0x0,8
tick,0x7ff86ea82704,36027660,0,0x0,8
tick,0x7ff86ea82704,36029496,0,0x0,8
tick,0x7ff86ea82704,36031675,0,0x0,8
tick,0x7ff86ea82704,36033468,0,0x0,8
tick,0x7ff86ea82704,36035479,0,0x0,8
tick,0x7ff86ea82704,36037502,0,0x0,8
tick,0x7ff86ea82704,36039559,0,0x0,8
tick,0x7ff86ea82704,36041550,0,0x0,8
tick,0x7ff86ea82704,36043424,0,0x0,8
tick,0x7ff86ea82704,36045472,0,0x0,8
tick,0x7ff86ea82704,36047485,0,0x0,8
tick,0x7ff86ea82704,36049435,0,0x0,8
tick,0x7ff86ea82704,36051434,0,0x0,8
tick,0x7ff86ea82704,36053397,0,0x0,8
tick,0x7ff86ea82704,36055597,0,0x0,8
tick,0x7ff86ea82704,36057403,0,0x0,8
tick,0x7ff86ea82704,36059558,0,0x0,8
tick,0x7ff86ea82704,36061475,0,0x0,8
tick,0x7ff86ea82704,36063539,0,0x0,8
tick,0x7ff86ea82704,36065440,0,0x0,8
tick,0x7ff86ea82704,36067508,0,0x0,8
tick,0x7ff86ea82704,36069394,0,0x0,8
tick,0x7ff86ea82704,36071378,0,0x0,8
tick,0x7ff86ea82704,36073391,0,0x0,8
tick,0x7ff86ea82704,36075424,0,0x0,8
tick,0x7ff86ea82704,36077476,0,0x0,8
tick,0x7ff86ea82704,36079549,0,0x0,8
tick,0x7ff86ea82704,36081461,0,0x0,8
tick,0x7ff86ea82704,36083352,0,0x0,8
tick,0x7ff86ea82704,36085376,0,0x0,8
tick,0x7ff86ea82704,36087425,0,0x0,8
tick,0x7ff86ea82704,36089348,0,0x0,8
tick,0x7ff86ea82704,36091367,0,0x0,8
tick,0x7ff86ea82704,36093492,0,0x0,8
tick,0x7ff86ea82704,36095368,0,0x0,8
tick,0x7ff86ea82704,36097407,0,0x0,8
tick,0x7ff86ea82704,36099444,0,0x0,8
tick,0x7ff86ea82704,36101441,0,0x0,8
tick,0x7ff86ea82704,36103347,0,0x0,8
tick,0x7ff86ea82704,36105348,0,0x0,8
tick,0x7ff86ea82704,36107373,0,0x0,8
tick,0x7ff86ea82704,36109465,0,0x0,8
tick,0x7ff86ea82704,36111311,0,0x0,8
tick,0x7ff86ea82704,36113326,0,0x0,8
tick,0x7ff86ea82704,36115216,0,0x0,8
tick,0x7ff86ea82704,36117501,0,0x0,8
tick,0x7ff86ea82704,36119230,0,0x0,8
tick,0x7ff86ea82704,36121237,0,0x0,8
tick,0x7ff86ea82704,36123337,0,0x0,8
tick,0x7ff86ea82704,36125393,0,0x0,8
tick,0x7ff86ea82704,36127296,0,0x0,8
tick,0x7ff86ea82704,36129178,0,0x0,8
tick,0x7ff86ea82704,36131258,0,0x0,8
tick,0x7ff86ea82704,36133253,0,0x0,8
tick,0x7ff86ea82704,36135227,0,0x0,8
tick,0x7ff86ea82704,36137217,0,0x0,8
tick,0x7ff86ea82704,36139372,0,0x0,8
tick,0x7ff86ea82704,36141408,0,0x0,8
tick,0x7ff86ea82704,36143192,0,0x0,8
tick,0x7ff86ea82704,36145168,0,0x0,8
tick,0x7ff86ea82704,36147194,0,0x0,8
tick,0x7ff86ea82704,36149369,0,0x0,8
tick,0x7ff86ea82704,36151191,0,0x0,8
tick,0x7ff86ea82704,36153320,0,0x0,8
tick,0x7ff86ea82704,36155185,0,0x0,8
tick,0x7ff86ea82704,36157341,0,0x0,8
tick,0x7ff86ea82704,36159241,0,0x0,8
tick,0x7ff86ea82704,36161489,0,0x0,8
tick,0x7ff86ea82704,36163240,0,0x0,8
tick,0x7ff86ea82704,36165420,0,0x0,8
tick,0x7ff86ea82704,36167203,0,0x0,8
tick,0x7ff86ea82704,36169116,0,0x0,8
tick,0x7ff86ea82704,36171098,0,0x0,8
tick,0x7ff86ea82704,36173394,0,0x0,8
tick,0x7ff86ea82704,36175285,0,0x0,8
tick,0x7ff86ea82704,36177120,0,0x0,8
tick,0x7ff86ea82704,36179109,0,0x0,8
tick,0x7ff86ea82704,36181367,0,0x0,8
tick,0x7ff86ea82704,36183089,0,0x0,8
tick,0x7ff86ea82704,36185260,0,0x0,8
tick,0x7ff86ea82704,36187065,0,0x0,8
tick,0x7ff86ea82704,36189340,0,0x0,8
tick,0x7ff86ea82704,36191141,0,0x0,8
tick,0x7ff86ea82704,36193173,0,0x0,8
tick,0x7ff86ea82704,36195068,0,0x0,8
tick,0x7ff86ea82704,36197154,0,0x0,8
tick,0x7ff86ea82704,36199213,0,0x0,8
tick,0x7ff86ea82704,36201053,0,0x0,8
tick,0x7ff86ea82704,36203113,0,0x0,8
tick,0x7ff86ea82704,36205063,0,0x0,8
tick,0x7ff86ea82704,36207407,0,0x0,8
tick,0x7ff86ea82704,36209108,0,0x0,8
tick,0x7ff86ea82704,36211027,0,0x0,8
tick,0x7ff86ea82704,36213016,0,0x0,8
tick,0x7ff86ea82704,36214978,0,0x0,8
tick,0x7ff86ea82704,36217000,0,0x0,8
tick,0x7ff86ea82704,36219007,0,0x0,8
tick,0x7ff86ea82704,36221031,0,0x0,8
tick,0x7ff86ea82704,36223060,0,0x0,8
tick,0x7ff86ea82704,36224998,0,0x0,8
tick,0x7ff86ea82704,36227000,0,0x0,8
tick,0x7ff86ea82704,36228939,0,0x0,8
tick,0x7ff86ea82704,36231072,0,0x0,8
tick,0x7ff86ea82704,36232997,0,0x0,8
tick,0x7ff86ea82704,36235048,0,0x0,8
tick,0x7ff86ea82704,36236930,0,0x0,8
tick,0x7ff86ea82704,36239009,0,0x0,8
tick,0x7ff86ea82704,36240946,0,0x0,8
tick,0x7ff86ea82704,36243014,0,0x0,8
tick,0x7ff86ea82704,36244864,0,0x0,8
tick,0x7ff86ea82704,36247084,0,0x0,8
tick,0x7ff86ea82704,36248929,0,0x0,8
tick,0x7ff86ea82704,36250988,0,0x0,8
tick,0x7ff86ea82704,36252884,0,0x0,8
tick,0x7ff86ea82704,36254945,0,0x0,8
tick,0x7ff86ea82704,36256966,0,0x0,8
tick,0x7ff86ea82704,36258915,0,0x0,8
tick,0x7ff86ea82704,36260861,0,0x0,8
tick,0x7ff86ea82704,36262932,0,0x0,8
tick,0x7ff86ea82704,36264948,0,0x0,8
tick,0x7ff86ea82704,36267053,0,0x0,8
tick,0x7ff86ea82704,36268946,0,0x0,8
tick,0x7ff86ea82704,36270861,0,0x0,8
tick,0x7ff86ea82704,36272934,0,0x0,8
tick,0x7ff86ea82704,36274816,0,0x0,8
tick,0x7ff86ea82704,36276899,0,0x0,8
tick,0x7ff86ea82704,36278798,0,0x0,8
tick,0x7ff86ea82704,36280931,0,0x0,8
tick,0x7ff86ea82704,36282799,0,0x0,8
tick,0x7ff86ea82704,36284831,0,0x0,8
tick,0x7ff86ea82704,36287115,0,0x0,8
tick,0x7ff86ea82704,36288941,0,0x0,8
tick,0x7ff86ea82704,36290887,0,0x0,8
tick,0x7ff86ea82704,36292801,0,0x0,8
tick,0x7ff86ea82704,36295021,0,0x0,8
tick,0x7ff86ea82704,36296847,0,0x0,8
tick,0x7ff86ea82704,36298968,0,0x0,8
tick,0x7ff86ea82704,36300810,0,0x0,8
tick,0x7ff86ea82704,36303018,0,0x0,8
tick,0x7ff86ea82704,36304860,0,0x0,8
tick,0x7ff86ea82704,36306825,0,0x0,8
tick,0x7ff86ea82704,36308822,0,0x0,8
tick,0x7ff86ea82704,36310866,0,0x0,8
tick,0x7ff86ea82704,36312774,0,0x0,8
tick,0x7ff86ea82704,36314880,0,0x0,8
tick,0x7ff86ea82704,36316760,0,0x0,8
tick,0x7ff86ea82704,36318804,0,0x0,8
tick,0x7ff86ea82704,36320743,0,0x0,8
tick,0x7ff86ea82704,36322722,0,0x0,8
tick,0x7ff86ea82704,36324875,0,0x0,8
tick,0x7ff86ea82704,36326737,0,0x0,8
tick,0x7ff86ea82704,36329197,0,0x0,8
tick,0x7ff86ea82704,36330695,0,0x0,8
tick,0x7ff86ea82704,36332740,0,0x0,8
tick,0x7ff86ea82704,36334667,0,0x0,8
tick,0x7ff86ea82704,36336633,0,0x0,8
tick,0x7ff86ea82704,36338753,0,0x0,8
tick,0x7ff86ea82704,36340689,0,0x0,8
tick,0x7ff86ea82704,36342637,0,0x0,8
tick,0x7ff86ea82704,36344729,0,0x0,8
tick,0x7ff86ea82704,36346812,0,0x0,8
tick,0x7ff86ea82704,36348636,0,0x0,8
tick,0x7ff86ea82704,36350682,0,0x0,8
tick,0x7ff86ea82704,36352635,0,0x0,8
tick,0x7ff86ea82704,36354673,0,0x0,8
tick,0x7ff86ea82704,36356581,0,0x0,8
tick,0x7ff86ea82704,36358869,0,0x0,8
tick,0x7ff86ea82704,36360644,0,0x0,8
tick,0x7ff86ea82704,36362637,0,0x0,8
tick,0x7ff86ea82704,36364622,0,0x0,8
tick,0x7ff86ea82704,36366674,0,0x0,8
tick,0x7ff86ea82704,36368676,0,0x0,8
tick,0x7ff86ea82704,36370662,0,0x0,8
tick,0x7ff86ea82704,36372539,0,0x0,8
tick,0x7ff86ea82704,36374896,0,0x0,8
tick,0x7ff86ea82704,36376660,0,0x0,8
tick,0x7ff86ea82704,36378547,0,0x0,8
tick,0x7ff86ea82704,36380625,0,0x0,8
tick,0x7ff86ea82704,36382582,0,0x0,8
tick,0x7ff86ea82704,36384784,0,0x0,8
tick,0x7ff86ea82704,36386665,0,0x0,8
tick,0x7ff86ea82704,36388540,0,0x0,8
tick,0x7ff86ea82704,36390737,0,0x0,8
tick,0x7ff86ea82704,36393191,0,0x0,8
tick,0x7ff86ea82704,36394515,0,0x0,8
tick,0x7ff86ea82704,36398225,0,0x0,8
tick,0x7ff86ea82704,36399731,0,0x0,8
tick,0x7ff86ea82704,36402055,0,0x0,8
tick,0x7ff86ea82704,36403998,0,0x0,8
tick,0x7ff86ea82704,36405818,0,0x0,8
tick,0x7ff86ea82704,36408037,0,0x0,8
tick,0x7ff86ea82704,36409676,0,0x0,8
tick,0x7ff86ea82704,36411654,0,0x0,8
tick,0x7ff86ea82704,36413789,0,0x0,8
tick,0x7ff86ea82704,36415981,0,0x0,8
tick,0x7ff86ea82704,36417597,0,0x0,8
tick,0x7ff86ea82704,36419761,0,0x0,8
tick,0x7ff86ea82704,36421619,0,0x0,8
tick,0x7ff86ea82704,36423911,0,0x0,8
tick,0x7ff86ea82704,36425757,0,0x0,8
tick,0x7ff86ea82704,36427997,0,0x0,8
tick,0x7ff86ea82704,36429673,0,0x0,8
tick,0x7ff86ea82704,36431674,0,0x0,8
tick,0x7ff86ea82704,36433595,0,0x0,8
tick,0x7ff86ea82704,36435734,0,0x0,8
tick,0x7ff86ea82704,36437645,0,0x0,8
tick,0x7ff86ea82704,36439811,0,0x0,8
tick,0x7ff86ea82704,36441651,0,0x0,8
tick,0x7ff86ea82704,36443675,0,0x0,8
tick,0x7ff86ea82704,36445602,0,0x0,8
tick,0x7ff86ea82704,36447596,0,0x0,8
tick,0x7ff86ea82704,36449590,0,0x0,8
tick,0x7ff86ea82704,36452080,0,0x0,8
tick,0x7ff86ea82704,36453548,0,0x0,8
tick,0x7ff86ea82704,36455943,0,0x0,8
tick,0x7ff86ea82704,36457561,0,0x0,8
tick,0x7ff86ea82704,36459584,0,0x0,8
tick,0x7ff86ea82704,36461479,0,0x0,8
tick,0x7ff86ea82704,36464048,0,0x0,8
tick,0x7ff86ea82704,36465578,0,0x0,8
tick,0x7ff86ea82704,36467951,0,0x0,8
tick,0x7ff86ea82704,36469667,0,0x0,8
tick,0x7ff86ea82704,36471534,0,0x0,8
tick,0x7ff86ea82704,36473979,0,0x0,8
tick,0x7ff86ea82704,36475873,0,0x0,8
tick,0x7ff86ea82704,36477433,0,0x0,8
tick,0x7ff86ea82704,36479448,0,0x0,8
tick,0x7ff86ea82704,36481469,0,0x0,8
tick,0x7ff86ea82704,36483595,0,0x0,8
tick,0x7ff86ea82704,36485450,0,0x0,8
tick,0x7ff86ea82704,36487604,0,0x0,8
tick,0x7ff86ea82704,36489640,0,0x0,8
tick,0x7ff86ea82704,36491439,0,0x0,8
tick,0x7ff86ea82704,36493673,0,0x0,8
tick,0x7ff86ea82704,36495695,0,0x0,8
tick,0x7ff86ea82704,36497482,0,0x0,8
tick,0x7ff86ea82704,36499434,0,0x0,8
tick,0x7ff86ea82704,36501458,0,0x0,8
tick,0x7ff86ea82704,36503506,0,0x0,8
tick,0x7ff86ea82704,36505564,0,0x0,8
tick,0x7ff86ea82704,36507579,0,0x0,8
tick,0x7ff86ea82704,36509511,0,0x0,8
tick,0x7ff86ea82704,36511460,0,0x0,8
tick,0x7ff86ea82704,36513779,0,0x0,8
tick,0x7ff86ea82704,36515394,0,0x0,8
tick,0x7ff86ea82704,36517426,0,0x0,8
tick,0x7ff86ea82704,36519329,0,0x0,8
tick,0x7ff86ea82704,36521528,0,0x0,8
tick,0x7ff86ea82704,36523345,0,0x0,8
tick,0x7ff86ea82704,36526673,0,0x0,8
tick,0x7ff86ea82704,36528290,0,0x0,8
tick,0x7ff86ea82704,36530332,0,0x0,8
tick,0x7ff86ea82704,36532355,0,0x0,8
tick,0x7ff86ea82704,36534272,0,0x0,8
tick,0x7ff86ea82704,36536234,0,0x0,8
tick,0x7ff86ea82704,36538157,0,0x0,8
tick,0x7ff86ea82704,36540269,0,0x0,8
tick,0x7ff86ea82704,36542317,0,0x0,8
tick,0x7ff86ea82704,36544326,0,0x0,8
tick,0x7ff86ea82704,36546290,0,0x0,8
tick,0x7ff86ea82704,36548350,0,0x0,8
tick,0x7ff86ea82704,36550286,0,0x0,8
tick,0x7ff86ea82704,36552254,0,0x0,8
tick,0x7ff86ea82704,36554197,0,0x0,8
tick,0x7ff86ea82704,36556389,0,0x0,8
tick,0x7ff86ea82704,36558317,0,0x0,8
tick,0x7ff86ea82704,36560733,0,0x0,8
tick,0x7ff86ea82704,36562379,0,0x0,8
tick,0x7ff86ea82704,36564181,0,0x0,8
tick,0x7ff86ea82704,36566304,0,0x0,8
tick,0x7ff86ea82704,36568097,0,0x0,8
tick,0x7ff86ea82704,36570190,0,0x0,8
tick,0x7ff86ea82704,36572120,0,0x0,8
tick,0x7ff86ea82704,36574808,0,0x0,8
tick,0x7ff86ea82704,36576252,0,0x0,8
tick,0x7ff86ea82704,36578250,0,0x0,8
tick,0x7ff86ea82704,36580171,0,0x0,8
tick,0x7ff86ea82704,36582347,0,0x0,8
tick,0x7ff86ea82704,36584223,0,0x0,8
tick,0x7ff86ea82704,36586219,0,0x0,8
tick,0x7ff86ea82704,36588432,0,0x0,8
tick,0x7ff86ea82704,36590501,0,0x0,8
tick,0x7ff86ea82704,36592190,0,0x0,8
tick,0x7ff86ea82704,36594168,0,0x0,8
tick,0x7ff86ea82704,36596063,0,0x0,8
tick,0x7ff86ea82704,36598172,0,0x0,8
tick,0x7ff86ea82704,36600058,0,0x0,8
tick,0x7ff86ea82704,36602090,0,0x0,8
tick,0x7ff86ea82704,36604691,0,0x0,8
tick,0x7ff86ea82704,36606027,0,0x0,8
tick,0x7ff86ea82704,36608357,0,0x0,8
tick,0x7ff86ea82704,36610008,0,0x0,8
tick,0x7ff86ea82704,36612020,0,0x0,8
tick,0x7ff86ea82704,36613989,0,0x0,8
tick,0x7ff86ea82704,36615986,0,0x0,8
tick,0x7ff86ea82704,36617922,0,0x0,8
tick,0x7ff86ea82704,36620014,0,0x0,8
tick,0x7ff86ea82704,36621999,0,0x0,8
tick,0x7ff86ea82704,36624012,0,0x0,8
tick,0x7ff86ea82704,36626179,0,0x0,8
tick,0x7ff86ea82704,36628173,0,0x0,8
tick,0x7ff86ea82704,36630325,0,0x0,8
tick,0x7ff86ea82704,36632244,0,0x0,8
tick,0x7ff86ea82704,36634089,0,0x0,8
tick,0x7ff86ea82704,36636181,0,0x0,8
tick,0x7ff86ea82704,36637922,0,0x0,8
tick,0x7ff86ea82704,36640873,0,0x0,8
tick,0x7ff86ea82704,36641841,0,0x0,8
tick,0x7ff86ea82704,36644112,0,0x0,8
tick,0x7ff86ea82704,36645888,0,0x0,8
tick,0x7ff86ea82704,36647889,0,0x0,8
tick,0x7ff86ea82704,36649789,0,0x0,8
tick,0x7ff86ea82704,36651858,0,0x0,8
tick,0x7ff86ea82704,36653781,0,0x0,8
tick,0x7ff86ea82704,36655870,0,0x0,8
tick,0x7ff86ea82704,36657792,0,0x0,8
tick,0x7ff86ea82704,36659846,0,0x0,8
tick,0x7ff86ea82704,36661889,0,0x0,8
tick,0x7ff86ea82704,36664538,0,0x0,8
tick,0x7ff86ea82704,36666644,0,0x0,8
tick,0x7ff86ea82704,36668014,0,0x0,8
tick,0x7ff86ea82704,36670058,0,0x0,8
tick,0x7ff86ea82704,36672042,0,0x0,8
tick,0x7ff86ea82704,36673972,0,0x0,8
tick,0x7ff86ea82704,36676207,0,0x0,8
tick,0x7ff86ea82704,36678032,0,0x0,8
tick,0x7ff86ea82704,36679986,0,0x0,8
tick,0x7ff86ea82704,36682101,0,0x0,8
tick,0x7ff86ea82704,36684031,0,0x0,8
tick,0x7ff86ea82704,36685890,0,0x0,8
tick,0x7ff86ea82704,36687866,0,0x0,8
tick,0x7ff86ea82704,36689906,0,0x0,8
tick,0x7ff86ea82704,36691995,0,0x0,8
tick,0x7ff86ea82704,36693996,0,0x0,8
tick,0x7ff86ea82704,36695895,0,0x0,8
tick,0x7ff86ea82704,36697836,0,0x0,8
tick,0x7ff86ea82704,36699863,0,0x0,8
tick,0x7ff86ea82704,36701885,0,0x0,8
tick,0x7ff86ea82704,36703965,0,0x0,8
tick,0x7ff86ea82704,36705947,0,0x0,8
tick,0x7ff86ea82704,36707987,0,0x0,8
tick,0x7ff86ea82704,36709901,0,0x0,8
tick,0x7ff86ea82704,36711873,0,0x0,8
tick,0x7ff86ea82704,36713898,0,0x0,8
tick,0x7ff86ea82704,36715809,0,0x0,8
tick,0x7ff86ea82704,36717778,0,0x0,8
tick,0x7ff86ea82704,36719734,0,0x0,8
tick,0x7ff86ea82704,36721889,0,0x0,8
tick,0x7ff86ea82704,36723888,0,0x0,8
tick,0x7ff86ea82704,36725828,0,0x0,8
tick,0x7ff86ea82704,36727718,0,0x0,8
tick,0x7ff86ea82704,36729864,0,0x0,8
tick,0x7ff86ea82704,36731990,0,0x0,8
tick,0x7ff86ea82704,36733983,0,0x0,8
tick,0x7ff86ea82704,36735838,0,0x0,8
tick,0x7ff86ea82704,36737808,0,0x0,8
tick,0x7ff86ea82704,36739871,0,0x0,8
tick,0x7ff86ea82704,36741913,0,0x0,8
tick,0x7ff86ea82704,36743868,0,0x0,8
tick,0x7ff86ea82704,36745600,0,0x0,8
tick,0x7ff86ea82704,36747927,0,0x0,8
tick,0x7ff86ea82704,36749813,0,0x0,8
tick,0x7ff86ea82704,36751830,0,0x0,8
tick,0x7ff86ea82704,36753889,0,0x0,8
tick,0x7ff86ea82704,36755818,0,0x0,8
tick,0x7ff86ea82704,36757715,0,0x0,8
tick,0x7ff86ea82704,36759909,0,0x0,8
tick,0x7ff86ea82704,36761726,0,0x0,8
tick,0x7ff86ea82704,36763585,0,0x0,8
tick,0x7ff86ea82704,36765827,0,0x0,8
tick,0x7ff86ea82704,36767627,0,0x0,8
tick,0x7ff86ea82704,36769695,0,0x0,8
tick,0x7ff86ea82704,36771613,0,0x0,8
tick,0x7ff86ea82704,36773888,0,0x0,8
tick,0x7ff86ea82704,36775626,0,0x0,8
tick,0x7ff86ea82704,36777675,0,0x0,8
tick,0x7ff86ea82704,36779808,0,0x0,8
tick,0x7ff86ea82704,36781714,0,0x0,8
tick,0x7ff86ea82704,36783652,0,0x0,8
tick,0x7ff86ea82704,36785640,0,0x0,8
tick,0x7ff86ea82704,36787662,0,0x0,8
tick,0x7ff86ea82704,36789629,0,0x0,8
tick,0x7ff86ea82704,36791707,0,0x0,8
tick,0x7ff86ea82704,36793714,0,0x0,8
tick,0x7ff86ea82704,36795552,0,0x0,8
tick,0x7ff86ea82704,36797734,0,0x0,8
tick,0x7ff86ea82704,36799552,0,0x0,8
tick,0x7ff86ea82704,36801685,0,0x0,8
tick,0x7ff86ea82704,36803701,0,0x0,8
tick,0x7ff86ea82704,36805550,0,0x0,8
tick,0x7ff86ea82704,36807504,0,0x0,8
tick,0x7ff86ea82704,36809691,0,0x0,8
tick,0x7ff86ea82704,36811579,0,0x0,8
tick,0x7ff86ea82704,36813601,0,0x0,8
tick,0x7ff86ea82704,36816094,0,0x0,8
tick,0x7ff86ea82704,36817576,0,0x0,8
tick,0x7ff86ea82704,36819340,0,0x0,8
tick,0x7ff86ea82704,36821511,0,0x0,8
tick,0x7ff86ea82704,36823449,0,0x0,8
tick,0x7ff86ea82704,36825455,0,0x0,8
tick,0x7ff86ea82704,36827443,0,0x0,8
tick,0x7ff86ea82704,36829477,0,0x0,8
tick,0x7ff86ea82704,36831346,0,0x0,8
tick,0x7ff86ea82704,36833437,0,0x0,8
tick,0x7ff86ea82704,36835579,0,0x0,8
tick,0x7ff86ea82704,36837295,0,0x0,8
tick,0x7ff86ea82704,36839408,0,0x0,8
tick,0x7ff86ea82704,36841318,0,0x0,8
tick,0x7ff86ea82704,36843393,0,0x0,8
tick,0x7ff86ea82704,36845297,0,0x0,8
tick,0x7ff86ea82704,36847372,0,0x0,8
tick,0x7ff86ea82704,36849386,0,0x0,8
tick,0x7ff86ea82704,36851372,0,0x0,8
tick,0x7ff86ea82704,36853299,0,0x0,8
tick,0x7ff86ea82704,36855355,0,0x0,8
tick,0x7ff86ea82704,36857324,0,0x0,8
tick,0x7ff86ea82704,36859358,0,0x0,8
tick,0x7ff86ea82704,36861313,0,0x0,8
tick,0x7ff86ea82704,36863348,0,0x0,8
tick,0x7ff86ea82704,36865308,0,0x0,8
tick,0x7ff86ea82704,36867291,0,0x0,8
tick,0x7ff86ea82704,36869311,0,0x0,8
tick,0x7ff86ea82704,36871236,0,0x0,8
tick,0x7ff86ea82704,36873301,0,0x0,8
tick,0x7ff86ea82704,36875274,0,0x0,8
tick,0x7ff86ea82704,36877379,0,0x0,8
tick,0x7ff86ea82704,36879353,0,0x0,8
tick,0x7ff86ea82704,36881308,0,0x0,8
tick,0x7ff86ea82704,36883288,0,0x0,8
tick,0x7ff86ea82704,36885294,0,0x0,8
tick,0x7ff86ea82704,36887346,0,0x0,8
tick,0x7ff86ea82704,36889300,0,0x0,8
tick,0x7ff86ea82704,36891217,0,0x0,8
tick,0x7ff86ea82704,36893354,0,0x0,8
tick,0x7ff86ea82704,36895212,0,0x0,8
tick,0x7ff86ea82704,36897305,0,0x0,8
tick,0x7ff86ea82704,36899212,0,0x0,8
tick,0x7ff86ea82704,36901128,0,0x0,8
tick,0x7ff86ea82704,36903227,0,0x0,8
tick,0x7ff86ea82704,36905167,0,0x0,8
tick,0x7ff86ea82704,36907287,0,0x0,8
tick,0x7ff86ea82704,36909172,0,0x0,8
tick,0x7ff86ea82704,36911146,0,0x0,8
tick,0x7ff86ea82704,36913199,0,0x0,8
tick,0x7ff86ea82704,36915190,0,0x0,8
tick,0x7ff86ea82704,36917163,0,0x0,8
tick,0x7ff86ea82704,36919138,0,0x0,8
tick,0x7ff86ea82704,36921174,0,0x0,8
tick,0x7ff86ea82704,36923179,0,0x0,8
tick,0x7ff86ea82704,36925170,0,0x0,8
tick,0x7ff86ea82704,36927184,0,0x0,8
tick,0x7ff86ea82704,36929143,0,0x0,8
tick,0x7ff86ea82704,36931159,0,0x0,8
tick,0x7ff86ea82704,36933122,0,0x0,8
tick,0x7ff86ea82704,36935103,0,0x0,8
tick,0x7ff86ea82704,36937122,0,0x0,8
tick,0x7ff86ea82704,36939051,0,0x0,8
tick,0x7ff86ea82704,36941130,0,0x0,8
tick,0x7ff86ea82704,36943117,0,0x0,8
tick,0x7ff86ea82704,36945125,0,0x0,8
tick,0x7ff86ea82704,36947113,0,0x0,8
tick,0x7ff86ea82704,36949092,0,0x0,8
tick,0x7ff86ea82704,36951086,0,0x0,8
tick,0x7ff86ea82704,36953033,0,0x0,8
tick,0x7ff86ea82704,36955106,0,0x0,8
tick,0x7ff86ea82704,36957090,0,0x0,8
tick,0x7ff86ea82704,36959103,0,0x0,8
tick,0x7ff86ea82704,36961072,0,0x0,8
tick,0x7ff86ea82704,36963075,0,0x0,8
tick,0x7ff86ea82704,36965054,0,0x0,8
tick,0x7ff86ea82704,36967008,0,0x0,8
tick,0x7ff86ea82704,36969011,0,0x0,8
tick,0x7ff86ea82704,36970985,0,0x0,8
tick,0x7ff86ea82704,36973037,0,0x0,8
tick,0x7ff86ea82704,36974966,0,0x0,8
tick,0x7ff86ea82704,36977008,0,0x0,8
tick,0x7ff86ea82704,36979001,0,0x0,8
tick,0x7ff86ea82704,36980981,0,0x0,8
tick,0x7ff86ea82704,36983075,0,0x0,8
tick,0x7ff86ea82704,36985007,0,0x0,8
tick,0x7ff86ea82704,36986996,0,0x0,8
tick,0x7ff86ea82704,36989039,0,0x0,8
tick,0x7ff86ea82704,36991000,0,0x0,8
tick,0x7ff86ea82704,36993073,0,0x0,8
tick,0x7ff86ea82704,36994964,0,0x0,8
tick,0x7ff86ea82704,36997175,0,0x0,8
tick,0x7ff86ea82704,36999023,0,0x0,8
tick,0x7ff86ea82704,37001000,0,0x0,8
tick,0x7ff86ea82704,37002923,0,0x0,8
tick,0x7ff86ea82704,37004912,0,0x0,8
tick,0x7ff86ea82704,37006985,0,0x0,8
tick,0x7ff86ea82704,37008835,0,0x0,8
tick,0x7ff86ea82704,37010984,0,0x0,8
tick,0x7ff86ea82704,37012863,0,0x0,8
tick,0x7ff86ea82704,37014934,0,0x0,8
tick,0x7ff86ea82704,37016876,0,0x0,8
tick,0x7ff86ea82704,37018992,0,0x0,8
tick,0x7ff86ea82704,37020917,0,0x0,8
tick,0x7ff86ea82704,37022921,0,0x0,8
tick,0x7ff86ea82704,37024879,0,0x0,8
tick,0x7ff86ea82704,37026953,0,0x0,8
tick,0x7ff86ea82704,37028918,0,0x0,8
tick,0x7ff86ea82704,37031042,0,0x0,8
tick,0x7ff86ea82704,37032832,0,0x0,8
tick,0x7ff86ea82704,37034908,0,0x0,8
tick,0x7ff86ea82704,37036774,0,0x0,8
tick,0x7ff86ea82704,37038886,0,0x0,8
tick,0x7ff86ea82704,37040819,0,0x0,8
tick,0x7ff86ea82704,37042887,0,0x0,8
tick,0x7ff86ea82704,37044804,0,0x0,8
tick,0x7ff86ea82704,37046867,0,0x0,8
tick,0x7ff86ea82704,37049006,0,0x0,8
tick,0x7ff86ea82704,37050829,0,0x0,8
tick,0x7ff86ea82704,37052749,0,0x0,8
tick,0x7ff86ea82704,37054895,0,0x0,8
tick,0x7ff86ea82704,37056872,0,0x0,8
tick,0x7ff86ea82704,37059041,0,0x0,8
tick,0x7ff86ea82704,37060729,0,0x0,8
tick,0x7ff86ea82704,37062855,0,0x0,8
tick,0x7ff86ea82704,37064799,0,0x0,8
tick,0x7ff86ea82704,37066898,0,0x0,8
tick,0x7ff86ea82704,37068770,0,0x0,8
tick,0x7ff86ea82704,37070825,0,0x0,8
tick,0x7ff86ea82704,37072731,0,0x0,8
tick,0x7ff86ea82704,37074806,0,0x0,8
tick,0x7ff86ea82704,37076767,0,0x0,8
tick,0x7ff86ea82704,37078783,0,0x0,8
tick,0x7ff86ea82704,37080758,0,0x0,8
tick,0x7ff86ea82704,37082754,0,0x0,8
tick,0x7ff86ea82704,37084818,0,0x0,8
tick,0x7ff86ea82704,37086784,0,0x0,8
tick,0x7ff86ea82704,37088724,0,0x0,8
tick,0x7ff86ea82704,37090745,0,0x0,8
tick,0x7ff86ea82704,37092696,0,0x0,8
tick,0x7ff86ea82704,37094673,0,0x0,8
tick,0x7ff86ea82704,37096707,0,0x0,8
tick,0x7ff86ea82704,37098795,0,0x0,8
tick,0x7ff86ea82704,37100810,0,0x0,8
tick,0x7ff86ea82704,37102714,0,0x0,8
tick,0x7ff86ea82704,37104709,0,0x0,8
tick,0x7ff86ea82704,37106682,0,0x0,8
tick,0x7ff86ea82704,37108815,0,0x0,8
tick,0x7ff86ea82704,37110684,0,0x0,8
tick,0x7ff86ea82704,37112709,0,0x0,8
tick,0x7ff86ea82704,37114654,0,0x0,8
tick,0x7ff86ea82704,37116846,0,0x0,8
tick,0x7ff86ea82704,37118695,0,0x0,8
tick,0x7ff86ea82704,37120724,0,0x0,8
tick,0x7ff86ea82704,37122750,0,0x0,8
tick,0x7ff86ea82704,37124724,0,0x0,8
tick,0x7ff86ea82704,37126790,0,0x0,8
tick,0x7ff86ea82704,37128709,0,0x0,8
tick,0x7ff86ea82704,37130583,0,0x0,8
tick,0x7ff86ea82704,37132582,0,0x0,8
tick,0x7ff86ea82704,37134882,0,0x0,8
tick,0x7ff86ea82704,37136673,0,0x0,8
tick,0x7ff86ea82704,37138538,0,0x0,8
tick,0x7ff86ea82704,37140695,0,0x0,8
tick,0x7ff86ea82704,37142565,0,0x0,8
tick,0x7ff86ea82704,37144582,0,0x0,8
tick,0x7ff86ea82704,37146524,0,0x0,8
tick,0x7ff86ea82704,37148624,0,0x0,8
tick,0x7ff86ea82704,37150534,0,0x0,8
tick,0x7ff86ea82704,37152642,0,0x0,8
tick,0x7ff86ea82704,37154522,0,0x0,8
tick,0x7ff86ea82704,37156701,0,0x0,8
tick,0x7ff86ea82704,37158614,0,0x0,8
tick,0x7ff86ea82704,37160681,0,0x0,8
tick,0x7ff86ea82704,37162608,0,0x0,8
tick,0x7ff86ea82704,37164640,0,0x0,8
tick,0x7ff86ea82704,37166517,0,0x0,8
tick,0x7ff86ea82704,37168574,0,0x0,8
tick,0x7ff86ea82704,37170520,0,0x0,8
tick,0x7ff86ea82704,37172528,0,0x0,8
tick,0x7ff86ea82704,37174454,0,0x0,8
tick,0x7ff86ea82704,37176507,0,0x0,8
tick,0x7ff86ea82704,37178634,0,0x0,8
tick,0x7ff86ea82704,37180606,0,0x0,8
tick,0x7ff86ea82704,37182741,0,0x0,8
tick,0x7ff86ea82704,37184515,0,0x0,8
tick,0x7ff86ea82704,37186621,0,0x0,8
tick,0x7ff86ea82704,37188460,0,0x0,8
tick,0x7ff86ea82704,37190548,0,0x0,8
tick,0x7ff86ea82704,37192458,0,0x0,8
tick,0x7ff86ea82704,37194608,0,0x0,8
tick,0x7ff86ea82704,37196645,0,0x0,8
tick,0x7ff86ea82704,37198501,0,0x0,8
tick,0x7ff86ea82704,37200676,0,0x0,8
tick,0x7ff86ea82704,37202413,0,0x0,8
tick,0x7ff86ea82704,37204584,0,0x0,8
tick,0x7ff86ea82704,37206387,0,0x0,8
tick,0x7ff86ea82704,37208400,0,0x0,8
tick,0x7ff86ea82704,37210427,0,0x0,8
tick,0x7ff86ea82704,37212466,0,0x0,8
tick,0x7ff86ea82704,37214371,0,0x0,8
tick,0x7ff86ea82704,37216460,0,0x0,8
tick,0x7ff86ea82704,37218396,0,0x0,8
tick,0x7ff86ea82704,37220422,0,0x0,8
tick,0x7ff86ea82704,37222336,0,0x0,8
tick,0x7ff86ea82704,37224578,0,0x0,8
tick,0x7ff86ea82704,37226351,0,0x0,8
tick,0x7ff86ea82704,37228306,0,0x0,8
tick,0x7ff86ea82704,37230334,0,0x0,8
tick,0x7ff86ea82704,37232336,0,0x0,8
tick,0x7ff86ea82704,37234334,0,0x0,8
tick,0x7ff86ea82704,37236299,0,0x0,8
tick,0x7ff86ea82704,37238328,0,0x0,8
tick,0x7ff86ea82704,37240401,0,0x0,8
tick,0x7ff86ea82704,37242354,0,0x0,8
tick,0x7ff86ea82704,37244355,0,0x0,8
tick,0x7ff86ea82704,37246373,0,0x0,8
tick,0x7ff86ea82704,37248234,0,0x0,8
tick,0x7ff86ea82704,37250336,0,0x0,8
tick,0x7ff86ea82704,37252336,0,0x0,8
tick,0x7ff86ea82704,37254289,0,0x0,8
tick,0x7ff86ea82704,37256306,0,0x0,8
tick,0x7ff86ea82704,37258265,0,0x0,8
tick,0x7ff86ea82704,37260264,0,0x0,8
tick,0x7ff86ea82704,37262159,0,0x0,8
tick,0x7ff86ea82704,37264204,0,0x0,8
tick,0x7ff86ea82704,37266251,0,0x0,8
tick,0x7ff86ea82704,37268443,0,0x0,8
tick,0x7ff86ea82704,37270240,0,0x0,8
tick,0x7ff86ea82704,37272332,0,0x0,8
tick,0x7ff86ea82704,37274302,0,0x0,8
tick,0x7ff86ea82704,37276182,0,0x0,8
tick,0x7ff86ea82704,37278152,0,0x0,8
tick,0x7ff86ea82704,37280216,0,0x0,8
tick,0x7ff86ea82704,37282172,0,0x0,8
tick,0x7ff86ea82704,37284355,0,0x0,8
tick,0x7ff86ea82704,37286174,0,0x0,8
tick,0x7ff86ea82704,37288180,0,0x0,8
tick,0x7ff86ea82704,37290179,0,0x0,8
tick,0x7ff86ea82704,37292226,0,0x0,8
tick,0x7ff86ea82704,37294208,0,0x0,8
tick,0x7ff86ea82704,37296159,0,0x0,8
tick,0x7ff86ea82704,37298150,0,0x0,8
tick,0x7ff86ea82704,37300175,0,0x0,8
tick,0x7ff86ea82704,37302140,0,0x0,8
tick,0x7ff86ea82704,37304155,0,0x0,8
tick,0x7ff86ea82704,37306124,0,0x0,8
tick,0x7ff86ea82704,37308104,0,0x0,8
tick,0x7ff86ea82704,37310113,0,0x0,8
tick,0x7ff86ea82704,37312327,0,0x0,8
tick,0x7ff86ea82704,37314146,0,0x0,8
tick,0x7ff86ea82704,37316126,0,0x0,8
tick,0x7ff86ea82704,37318237,0,0x0,8
tick,0x7ff86ea82704,37320078,0,0x0,8
tick,0x7ff86ea82704,37322055,0,0x0,8
tick,0x7ff86ea82704,37324095,0,0x0,8
tick,0x7ff86ea82704,37326121,0,0x0,8
tick,0x7ff86ea82704,37328163,0,0x0,8
tick,0x7ff86ea82704,37330089,0,0x0,8
tick,0x7ff86ea82704,37332000,0,0x0,8
tick,0x7ff86ea82704,37334103,0,0x0,8
tick,0x7ff86ea82704,37336042,0,0x0,8
tick,0x7ff86ea82704,37338159,0,0x0,8
tick,0x7ff86ea82704,37340043,0,0x0,8
tick,0x7ff86ea82704,37342113,0,0x0,8
tick,0x7ff86ea82704,37344059,0,0x0,8
tick,0x7ff86ea82704,37346057,0,0x0,8
tick,0x7ff86ea82704,37348008,0,0x0,8
tick,0x7ff86ea82704,37350050,0,0x0,8
tick,0x7ff86ea82704,37352159,0,0x0,8
tick,0x7ff86ea82704,37354104,0,0x0,8
tick,0x7ff86ea82704,37356018,0,0x0,8
tick,0x7ff86ea82704,37358000,0,0x0,8
tick,0x7ff86ea82704,37359940,0,0x0,8
tick,0x7ff86ea82704,37362032,0,0x0,8
tick,0x7ff86ea82704,37363960,0,0x0,8
tick,0x7ff86ea82704,37365932,0,0x0,8
tick,0x7ff86ea82704,37367970,0,0x0,8
tick,0x7ff86ea82704,37369942,0,0x0,8
tick,0x7ff86ea82704,37371982,0,0x0,8
tick,0x7ff86ea82704,37373937,0,0x0,8
tick,0x7ff86ea82704,37376225,0,0x0,8
tick,0x7ff86ea82704,37378069,0,0x0,8
tick,0x7ff86ea82704,37380002,0,0x0,8
tick,0x7ff86ea82704,37381958,0,0x0,8
tick,0x7ff86ea82704,37383952,0,0x0,8
tick,0x7ff86ea82704,37386013,0,0x0,8
tick,0x7ff86ea82704,37388005,0,0x0,8
tick,0x7ff86ea82704,37389994,0,0x0,8
tick,0x7ff86ea82704,37391999,0,0x0,8
tick,0x7ff86ea82704,37394057,0,0x0,8
tick,0x7ff86ea82704,37395933,0,0x0,8
tick,0x7ff86ea82704,37398022,0,0x0,8
tick,0x7ff86ea82704,37399862,0,0x0,8
tick,0x7ff86ea82704,37401901,0,0x0,8
tick,0x7ff86ea82704,37403980,0,0x0,8
tick,0x7ff86ea82704,37405923,0,0x0,8
tick,0x7ff86ea82704,37407891,0,0x0,8
tick,0x7ff86ea82704,37409881,0,0x0,8
tick,0x7ff86ea82704,37411820,0,0x0,8
tick,0x7ff86ea82704,37413851,0,0x0,8
tick,0x7ff86ea82704,37415906,0,0x0,8
tick,0x7ff86ea82704,37417911,0,0x0,8
tick,0x7ff86ea82704,37419844,0,0x0,8
tick,0x7ff86ea82704,37421980,0,0x0,8
tick,0x7ff86ea82704,37423907,0,0x0,8
tick,0x7ff86ea82704,37425866,0,0x0,8
tick,0x7ff86ea82704,37427883,0,0x0,8
tick,0x7ff86ea82704,37429917,0,0x0,8
tick,0x7ff86ea82704,37431807,0,0x0,8
tick,0x7ff86ea82704,37433844,0,0x0,8
tick,0x7ff86ea82704,37435911,0,0x0,8
tick,0x7ff86ea82704,37437742,0,0x0,8
tick,0x7ff86ea82704,37439810,0,0x0,8
tick,0x7ff86ea82704,37441873,0,0x0,8
tick,0x7ff86ea82704,37443831,0,0x0,8
tick,0x7ff86ea82704,37446001,0,0x0,8
tick,0x7ff86ea82704,37447861,0,0x0,8
tick,0x7ff86ea82704,37449843,0,0x0,8
tick,0x7ff86ea82704,37452210,0,0x0,8
tick,0x7ff86ea82704,37454016,0,0x0,8
tick,0x7ff86ea82704,37456266,0,0x0,8
tick,0x7ff86ea82704,37457785,0,0x0,8
tick,0x7ff86ea82704,37459835,0,0x0,8
tick,0x7ff86ea82704,37461811,0,0x0,8
tick,0x7ff86ea82704,37463854,0,0x0,8
tick,0x7ff86ea82704,37465689,0,0x0,8
tick,0x7ff86ea82704,37467917,0,0x0,8
tick,0x7ff86ea82704,37469792,0,0x0,8
tick,0x7ff86ea82704,37471792,0,0x0,8
tick,0x7ff86ea82704,37473893,0,0x0,8
tick,0x7ff86ea82704,37475872,0,0x0,8
tick,0x7ff86ea82704,37477706,0,0x0,8
tick,0x7ff86ea82704,37479828,0,0x0,8
tick,0x7ff86ea82704,37481898,0,0x0,8
tick,0x7ff86ea82704,37483862,0,0x0,8
tick,0x7ff86ea82704,37485956,0,0x0,8
tick,0x7ff86ea82704,37487852,0,0x0,8
tick,0x7ff86ea82704,37489674,0,0x0,8
tick,0x7ff86ea82704,37491896,0,0x0,8
tick,0x7ff86ea82704,37493654,0,0x0,8
tick,0x7ff86ea82704,37495837,0,0x0,8
tick,0x7ff86ea82704,37497788,0,0x0,8
tick,0x7ff86ea82704,37499824,0,0x0,8
tick,0x7ff86ea82704,37501620,0,0x0,8
tick,0x7ff86ea82704,37503801,0,0x0,8
tick,0x7ff86ea82704,37505761,0,0x0,8
tick,0x7ff86ea82704,37507743,0,0x0,8
tick,0x7ff86ea82704,37509551,0,0x0,8
tick,0x7ff86ea82704,37511771,0,0x0,8
tick,0x7ff86ea82704,37513609,0,0x0,8
tick,0x7ff86ea82704,37515863,0,0x0,8
tick,0x7ff86ea82704,37517585,0,0x0,8
tick,0x7ff86ea82704,37519990,0,0x0,8
tick,0x7ff86ea82704,37521899,0,0x0,8
tick,0x7ff86ea82704,37524168,0,0x0,8
tick,0x7ff86ea82704,37526991,0,0x0,8
tick,0x7ff86ea82704,37528107,0,0x0,8
tick,0x7ff86ea82704,37530037,0,0x0,8
tick,0x7ff86ea82704,37531835,0,0x0,8
tick,0x7ff86ea82704,37533573,0,0x0,8
tick,0x7ff86ea82704,37535759,0,0x0,8
tick,0x7ff86ea82704,37537907,0,0x0,8
tick,0x7ff86ea82704,37539601,0,0x0,8
tick,0x7ff86ea82704,37541788,0,0x0,8
tick,0x7ff86ea82704,37543499,0,0x0,8
tick,0x7ff86ea82704,37545704,0,0x0,8
tick,0x7ff86ea82704,37547588,0,0x0,8
tick,0x7ff86ea82704,37549596,0,0x0,8
tick,0x7ff86ea82704,37551458,0,0x0,8
tick,0x7ff86ea82704,37553481,0,0x0,8
tick,0x7ff86ea82704,37555536,0,0x0,8
tick,0x7ff86ea82704,37557454,0,0x0,8
tick,0x7ff86ea82704,37559636,0,0x0,8
tick,0x7ff86ea82704,37561477,0,0x0,8
tick,0x7ff86ea82704,37563610,0,0x0,8
tick,0x7ff86ea82704,37565502,0,0x0,8
tick,0x7ff86ea82704,37567598,0,0x0,8
tick,0x7ff86ea82704,37569446,0,0x0,8
tick,0x7ff86ea82704,37571554,0,0x0,8
tick,0x7ff86ea82704,37573401,0,0x0,8
tick,0x7ff86ea82704,37575434,0,0x0,8
tick,0x7ff86ea82704,37577665,0,0x0,8
tick,0x7ff86ea82704,37579538,0,0x0,8
tick,0x7ff86ea82704,37581396,0,0x0,8
tick,0x7ff86ea82704,37583643,0,0x0,8
tick,0x7ff86ea82704,37585644,0,0x0,8
tick,0x7ff86ea82704,37587489,0,0x0,8
tick,0x7ff86ea82704,37589431,0,0x0,8
tick,0x7ff86ea82704,37591800,0,0x0,8
tick,0x7ff86ea82704,37593539,0,0x0,8
tick,0x7ff86ea82704,37595929,0,0x0,8
tick,0x7ff86ea82704,37598003,0,0x0,8
tick,0x7ff86ea82704,37599478,0,0x0,8
tick,0x7ff86ea82704,37601526,0,0x0,8
tick,0x7ff86ea82704,37603442,0,0x0,8
tick,0x7ff86ea82704,37605724,0,0x0,8
tick,0x7ff86ea82704,37607658,0,0x0,8
tick,0x7ff86ea82704,37609308,0,0x0,8
tick,0x7ff86ea82704,37611361,0,0x0,8
tick,0x7ff86ea82704,37613320,0,0x0,8
tick,0x7ff86ea82704,37615438,0,0x0,8
tick,0x7ff86ea82704,37617255,0,0x0,8
tick,0x7ff86ea82704,37619447,0,0x0,8
tick,0x7ff86ea82704,37621328,0,0x0,8
tick,0x7ff86ea82704,37623376,0,0x0,8
tick,0x7ff86ea82704,37625278,0,0x0,8
tick,0x7ff86ea82704,37627623,0,0x0,8
tick,0x7ff86ea82704,37629515,0,0x0,8
tick,0x7ff86ea82704,37631327,0,0x0,8
tick,0x7ff86ea82704,37633328,0,0x0,8
tick,0x7ff86ea82704,37635528,0,0x0,8
tick,0x7ff86ea82704,37637269,0,0x0,8
tick,0x7ff86ea82704,37639214,0,0x0,8
tick,0x7ff86ea82704,37641386,0,0x0,8
tick,0x7ff86ea82704,37643279,0,0x0,8
tick,0x7ff86ea82704,37645283,0,0x0,8
tick,0x7ff86ea82704,37647204,0,0x0,8
tick,0x7ff86ea82704,37649490,0,0x0,8
tick,0x7ff86ea82704,37651297,0,0x0,8
tick,0x7ff86ea82704,37653174,0,0x0,8
tick,0x7ff86ea82704,37655191,0,0x0,8
tick,0x7ff86ea82704,37657338,0,0x0,8
tick,0x7ff86ea82704,37659148,0,0x0,8
tick,0x7ff86ea82704,37661204,0,0x0,8
tick,0x7ff86ea82704,37663176,0,0x0,8
tick,0x7ff86ea82704,37665198,0,0x0,8
tick,0x7ff86ea82704,37667247,0,0x0,8
tick,0x7ff86ea82704,37669133,0,0x0,8
tick,0x7ff86ea82704,37671269,0,0x0,8
tick,0x7ff86ea82704,37673220,0,0x0,8
tick,0x7ff86ea82704,37675261,0,0x0,8
tick,0x7ff86ea82704,37677268,0,0x0,8
tick,0x7ff86ea82704,37679059,0,0x0,8
tick,0x7ff86ea82704,37681178,0,0x0,8
tick,0x7ff86ea82704,37683163,0,0x0,8
tick,0x7ff86ea82704,37685177,0,0x0,8
tick,0x7ff86ea82704,37687199,0,0x0,8
tick,0x7ff86ea82704,37689311,0,0x0,8
tick,0x7ff86ea82704,37693424,0,0x0,8
tick,0x7ff86ea82704,37695414,0,0x0,8
tick,0x7ff86ea82704,37697458,0,0x0,8
tick,0x7ff86ea82704,37699558,0,0x0,8
tick,0x7ff86ea82704,37701191,0,0x0,8
tick,0x7ff86ea82704,37703606,0,0x0,8
tick,0x7ff86ea82704,37705301,0,0x0,8
tick,0x7ff86ea82704,37707372,0,0x0,8
tick,0x7ff86ea82704,37709315,0,0x0,8
tick,0x7ff86ea82704,37711444,0,0x0,8
tick,0x7ff86ea82704,37713301,0,0x0,8
tick,0x7ff86ea82704,37715281,0,0x0,8
tick,0x7ff86ea82704,37717365,0,0x0,8
tick,0x7ff86ea82704,37719519,0,0x0,8
tick,0x7ff86ea82704,37721293,0,0x0,8
tick,0x7ff86ea82704,37723332,0,0x0,8
tick,0x7ff86ea82704,37725412,0,0x0,8
tick,0x7ff86ea82704,37727374,0,0x0,8
tick,0x7ff86ea82704,37729193,0,0x0,8
tick,0x7ff86ea82704,37731444,0,0x0,8
tick,0x7ff86ea82704,37733177,0,0x0,8
tick,0x7ff86ea82704,37735331,0,0x0,8
tick,0x7ff86ea82704,37737256,0,0x0,8
tick,0x7ff86ea82704,37739485,0,0x0,8
tick,0x7ff86ea82704,37741435,0,0x0,8
tick,0x7ff86ea82704,37743303,0,0x0,8
tick,0x7ff86ea82704,37745241,0,0x0,8
tick,0x7ff86ea82704,37747169,0,0x0,8
tick,0x7ff86ea82704,37749296,0,0x0,8
tick,0x7ff86ea82704,37751182,0,0x0,8
tick,0x7ff86ea82704,37753292,0,0x0,8
tick,0x7ff86ea82704,37755147,0,0x0,8
tick,0x7ff86ea82704,37757314,0,0x0,8
tick,0x7ff86ea82704,37759295,0,0x0,8
tick,0x7ff86ea82704,37761264,0,0x0,8
tick,0x7ff86ea82704,37763183,0,0x0,8
tick,0x7ff86ea82704,37765271,0,0x0,8
tick,0x7ff86ea82704,37767140,0,0x0,8
tick,0x7ff86ea82704,37769187,0,0x0,8
tick,0x7ff86ea82704,37771305,0,0x0,8
tick,0x7ff86ea82704,37772925,0,0x0,8
tick,0x7ff86ea82704,37775300,0,0x0,8
tick,0x7ff86ea82704,37777140,0,0x0,8
tick,0x7ff86ea82704,37779241,0,0x0,8
tick,0x7ff86ea82704,37781064,0,0x0,8
tick,0x7ff86ea82704,37783206,0,0x0,8
tick,0x7ff86ea82704,37785079,0,0x0,8
tick,0x7ff86ea82704,37787312,0,0x0,8
tick,0x7ff86ea82704,37789063,0,0x0,8
tick,0x7ff86ea82704,37791303,0,0x0,8
tick,0x7ff86ea82704,37793179,0,0x0,8
tick,0x7ff86ea82704,37795054,0,0x0,8
tick,0x7ff86ea82704,37797261,0,0x0,8
tick,0x7ff86ea82704,37799207,0,0x0,8
tick,0x7ff86ea82704,37800983,0,0x0,8
tick,0x7ff86ea82704,37803129,0,0x0,8
tick,0x7ff86ea82704,37805110,0,0x0,8
tick,0x7ff86ea82704,37807253,0,0x0,8
tick,0x7ff86ea82704,37808978,0,0x0,8
tick,0x7ff86ea82704,37811552,0,0x0,8
tick,0x7ff86ea82704,37812955,0,0x0,8
tick,0x7ff86ea82704,37815073,0,0x0,8
tick,0x7ff86ea82704,37817095,0,0x0,8
tick,0x7ff86ea82704,37819105,0,0x0,8
tick,0x7ff86ea82704,37820991,0,0x0,8
tick,0x7ff86ea82704,37822922,0,0x0,8
tick,0x7ff86ea82704,37824996,0,0x0,8
tick,0x7ff86ea82704,37826973,0,0x0,8
tick,0x7ff86ea82704,37828929,0,0x0,8
tick,0x7ff86ea82704,37830845,0,0x0,8
tick,0x7ff86ea82704,37832813,0,0x0,8
tick,0x7ff86ea82704,37834863,0,0x0,8
tick,0x7ff86ea82704,37837125,0,0x0,8
tick,0x7ff86ea82704,37839207,0,0x0,8
tick,0x7ff86ea82704,37841103,0,0x0,8
tick,0x7ff86ea82704,37843195,0,0x0,8
tick,0x7ff86ea82704,37844730,0,0x0,8
tick,0x7ff86ea82704,37847484,0,0x0,8
tick,0x7ff86ea82704,37849251,0,0x0,8
tick,0x7ff86ea82704,37851093,0,0x0,8
tick,0x7ff86ea82704,37853144,0,0x0,8
tick,0x7ff86ea82704,37854922,0,0x0,8
tick,0x7ff86ea82704,37856887,0,0x0,8
tick,0x7ff86ea82704,37859724,0,0x0,8
tick,0x7ff86ea82704,37862496,0,0x0,8
tick,0x7ff86ea82704,37863601,0,0x0,8
tick,0x7ff86ea82704,37866184,0,0x0,8
tick,0x7ff86ea82704,37867739,0,0x0,8
tick,0x7ff86ea82704,37869785,0,0x0,8
tick,0x7ff86ea82704,37871803,0,0x0,8
tick,0x7ff86ea82704,37873852,0,0x0,8
tick,0x7ff86ea82704,37876123,0,0x0,8
tick,0x7ff86ea82704,37877675,0,0x0,8
tick,0x7ff86ea82704,37879945,0,0x0,8
tick,0x7ff86ea82704,37881681,0,0x0,8
tick,0x7ff86ea82704,37883606,0,0x0,8
tick,0x7ff86ea82704,37885503,0,0x0,8
tick,0x7ff86ea82704,37887729,0,0x0,8
tick,0x7ff86ea82704,37889587,0,0x0,8
tick,0x7ff86ea82704,37891644,0,0x0,8
tick,0x7ff86ea82704,37893581,0,0x0,8
tick,0x7ff86ea82704,37895675,0,0x0,8
tick,0x7ff86ea82704,37897547,0,0x0,8
tick,0x7ff86ea82704,37899533,0,0x0,8
tick,0x7ff86ea82704,37901544,0,0x0,8
tick,0x7ff86ea82704,37903522,0,0x0,8
tick,0x7ff86ea82704,37905564,0,0x0,8
tick,0x7ff86ea82704,37907541,0,0x0,8
tick,0x7ff86ea82704,37909556,0,0x0,8
tick,0x7ff86ea82704,37911691,0,0x0,8
tick,0x7ff86ea82704,37913481,0,0x0,8
tick,0x7ff86ea82704,37915580,0,0x0,8
tick,0x7ff86ea82704,37917512,0,0x0,8
tick,0x7ff86ea82704,37919730,0,0x0,8
tick,0x7ff86ea82704,37921485,0,0x0,8
tick,0x7ff86ea82704,37923571,0,0x0,8
tick,0x7ff86ea82704,37925462,0,0x0,8
tick,0x7ff86ea82704,37927578,0,0x0,8
tick,0x7ff86ea82704,37929477,0,0x0,8
tick,0x7ff86ea82704,37931487,0,0x0,8
tick,0x7ff86ea82704,37933475,0,0x0,8
tick,0x7ff86ea82704,37935530,0,0x0,8
tick,0x7ff86ea82704,37937432,0,0x0,8
tick,0x7ff86ea82704,37939465,0,0x0,8
tick,0x7ff86ea82704,37941479,0,0x0,8
tick,0x7ff86ea82704,37943498,0,0x0,8
tick,0x7ff86ea82704,37945447,0,0x0,8
tick,0x7ff86ea82704,37947537,0,0x0,8
tick,0x7ff86ea82704,37949487,0,0x0,8
tick,0x7ff86ea82704,37951416,0,0x0,8
tick,0x7ff86ea82704,37953400,0,0x0,8
tick,0x7ff86ea82704,37955421,0,0x0,8
tick,0x7ff86ea82704,37957429,0,0x0,8
tick,0x7ff86ea82704,37959417,0,0x0,8
tick,0x7ff86ea82704,37961365,0,0x0,8
tick,0x7ff86ea82704,37963359,0,0x0,8
tick,0x7ff86ea82704,37965328,0,0x0,8
tick,0x7ff86ea82704,37967429,0,0x0,8
tick,0x7ff86ea82704,37969395,0,0x0,8
tick,0x7ff86ea82704,37971413,0,0x0,8
tick,0x7ff86ea82704,37973373,0,0x0,8
tick,0x7ff86ea82704,37975378,0,0x0,8
tick,0x7ff86ea82704,37977418,0,0x0,8
tick,0x7ff86ea82704,37979378,0,0x0,8
tick,0x7ff86ea82704,37981399,0,0x0,8
tick,0x7ff86ea82704,37983380,0,0x0,8
tick,0x7ff86ea82704,37985333,0,0x0,8
tick,0x7ff86ea82704,37987335,0,0x0,8
tick,0x7ff86ea82704,37989404,0,0x0,8
tick,0x7ff86ea82704,37991305,0,0x0,8
tick,0x7ff86ea82704,37993487,0,0x0,8
tick,0x7ff86ea82704,37995431,0,0x0,8
tick,0x7ff86ea82704,37997289,0,0x0,8
tick,0x7ff86ea82704,37999349,0,0x0,8
tick,0x7ff86ea82704,38001275,0,0x0,8
tick,0x7ff86ea82704,38003325,0,0x0,8
tick,0x7ff86ea82704,38005278,0,0x0,8
tick,0x7ff86ea82704,38007340,0,0x0,8
tick,0x7ff86ea82704,38009399,0,0x0,8
tick,0x7ff86ea82704,38011330,0,0x0,8
tick,0x7ff86ea82704,38013279,0,0x0,8
tick,0x7ff86ea82704,38015334,0,0x0,8
tick,0x7ff86ea82704,38017294,0,0x0,8
tick,0x7ff86ea82704,38019206,0,0x0,8
tick,0x7ff86ea82704,38021300,0,0x0,8
tick,0x7ff86ea82704,38023190,0,0x0,8
tick,0x7ff86ea82704,38025307,0,0x0,8
tick,0x7ff86ea82704,38027187,0,0x0,8
tick,0x7ff86ea82704,38029263,0,0x0,8
tick,0x7ff86ea82704,38031124,0,0x0,8
tick,0x7ff86ea82704,38033202,0,0x0,8
tick,0x7ff86ea82704,38035150,0,0x0,8
tick,0x7ff86ea82704,38037283,0,0x0,8
tick,0x7ff86ea82704,38039161,0,0x0,8
tick,0x7ff86ea82704,38041253,0,0x0,8
tick,0x7ff86ea82704,38043143,0,0x0,8
tick,0x7ff86ea82704,38045139,0,0x0,8
tick,0x7ff86ea82704,38047071,0,0x0,8
tick,0x7ff86ea82704,38049297,0,0x0,8
tick,0x7ff86ea82704,38051195,0,0x0,8
tick,0x7ff86ea82704,38053198,0,0x0,8
tick,0x7ff86ea82704,38055161,0,0x0,8
tick,0x7ff86ea82704,38057190,0,0x0,8
tick,0x7ff86ea82704,38059206,0,0x0,8
tick,0x7ff86ea82704,38061083,0,0x0,8
tick,0x7ff86ea82704,38063162,0,0x0,8
tick,0x7ff86ea82704,38065066,0,0x0,8
tick,0x7ff86ea82704,38067079,0,0x0,8
tick,0x7ff86ea82704,38069011,0,0x0,8
tick,0x7ff86ea82704,38071082,0,0x0,8
tick,0x7ff86ea82704,38073045,0,0x0,8
tick,0x7ff86ea82704,38075071,0,0x0,8
tick,0x7ff86ea82704,38077005,0,0x0,8
tick,0x7ff86ea82704,38079102,0,0x0,8
tick,0x7ff86ea82704,38081107,0,0x0,8
tick,0x7ff86ea82704,38083101,0,0x0,8
tick,0x7ff86ea82704,38085210,0,0x0,8
tick,0x7ff86ea82704,38087006,0,0x0,8
tick,0x7ff86ea82704,38089127,0,0x0,8
tick,0x7ff86ea82704,38091250,0,0x0,8
tick,0x7ff86ea82704,38093083,0,0x0,8
tick,0x7ff86ea82704,38095082,0,0x0,8
tick,0x7ff86ea82704,38096986,0,0x0,8
tick,0x7ff86ea82704,38099013,0,0x0,8
tick,0x7ff86ea82704,38101021,0,0x0,8
tick,0x7ff86ea82704,38103067,0,0x0,8
tick,0x7ff86ea82704,38104956,0,0x0,8
tick,0x7ff86ea82704,38107059,0,0x0,8
tick,0x7ff86ea82704,38109416,0,0x0,8
tick,0x7ff86ea82704,38110960,0,0x0,8
tick,0x7ff86ea82704,38112962,0,0x0,8
tick,0x7ff86ea82704,38114929,0,0x0,8
tick,0x7ff86ea82704,38116957,0,0x0,8
tick,0x7ff86ea82704,38118971,0,0x0,8
tick,0x7ff86ea82704,38121014,0,0x0,8
tick,0x7ff86ea82704,38122880,0,0x0,8
tick,0x7ff86ea82704,38124988,0,0x0,8
tick,0x7ff86ea82704,38126986,0,0x0,8
tick,0x7ff86ea82704,38129105,0,0x0,8
tick,0x7ff86ea82704,38130891,0,0x0,8
tick,0x7ff86ea82704,38132964,0,0x0,8
tick,0x7ff86ea82704,38134918,0,0x0,8
tick,0x7ff86ea82704,38136873,0,0x0,8
tick,0x7ff86ea82704,38138878,0,0x0,8
tick,0x7ff86ea82704,38141154,0,0x0,8
tick,0x7ff86ea82704,38142850,0,0x0,8
tick,0x7ff86ea82704,38144916,0,0x0,8
tick,0x7ff86ea82704,38146901,0,0x0,8
tick,0x7ff86ea82704,38149119,0,0x0,8
tick,0x7ff86ea82704,38151021,0,0x0,8
tick,0x7ff86ea82704,38153053,0,0x0,8
tick,0x7ff86ea82704,38154795,0,0x0,8
tick,0x7ff86ea82704,38157306,0,0x0,8
tick,0x7ff86ea82704,38158817,0,0x0,8
tick,0x7ff86ea82704,38160893,0,0x0,8
tick,0x7ff86ea82704,38162854,0,0x0,8
tick,0x7ff86ea82704,38164899,0,0x0,8
tick,0x7ff86ea82704,38166823,0,0x0,8
tick,0x7ff86ea82704,38168923,0,0x0,8
tick,0x7ff86ea82704,38171056,0,0x0,8
tick,0x7ff86ea82704,38172941,0,0x0,8
tick,0x7ff86ea82704,38174973,0,0x0,8
tick,0x7ff86ea82704,38176954,0,0x0,8
tick,0x7ff86ea82704,38178821,0,0x0,8
tick,0x7ff86ea82704,38181367,0,0x0,8
tick,0x7ff86ea82704,38182788,0,0x0,8
tick,0x7ff86ea82704,38184882,0,0x0,8
tick,0x7ff86ea82704,38186992,0,0x0,8
tick,0x7ff86ea82704,38188897,0,0x0,8
tick,0x7ff86ea82704,38190772,0,0x0,8
tick,0x7ff86ea82704,38192802,0,0x0,8
tick,0x7ff86ea82704,38194859,0,0x0,8
tick,0x7ff86ea82704,38196680,0,0x0,8
tick,0x7ff86ea82704,38198811,0,0x0,8
tick,0x7ff86ea82704,38200863,0,0x0,8
tick,0x7ff86ea82704,38202830,0,0x0,8
tick,0x7ff86ea82704,38204716,0,0x0,8
tick,0x7ff86ea82704,38206829,0,0x0,8
tick,0x7ff86ea82704,38208769,0,0x0,8
tick,0x7ff86ea82704,38210733,0,0x0,8
tick,0x7ff86ea82704,38212687,0,0x0,8
tick,0x7ff86ea82704,38214743,0,0x0,8
tick,0x7ff86ea82704,38216716,0,0x0,8
tick,0x7ff86ea82704,38218743,0,0x0,8
tick,0x7ff86ea82704,38220666,0,0x0,8
tick,0x7ff86ea82704,38222758,0,0x0,8
tick,0x7ff86ea82704,38224644,0,0x0,8
tick,0x7ff86ea82704,38226649,0,0x0,8
tick,0x7ff86ea82704,38228642,0,0x0,8
tick,0x7ff86ea82704,38230683,0,0x0,8
tick,0x7ff86ea82704,38232595,0,0x0,8
tick,0x7ff86ea82704,38234646,0,0x0,8
tick,0x7ff86ea82704,38236632,0,0x0,8
tick,0x7ff86ea82704,38238710,0,0x0,8
tick,0x7ff86ea82704,38240877,0,0x0,8
tick,0x7ff86ea82704,38242636,0,0x0,8
tick,0x7ff86ea82704,38244527,0,0x0,8
tick,0x7ff86ea82704,38246665,0,0x0,8
tick,0x7ff86ea82704,38248555,0,0x0,8
tick,0x7ff86ea82704,38250625,0,0x0,8
tick,0x7ff86ea82704,38252533,0,0x0,8
tick,0x7ff86ea82704,38254576,0,0x0,8
tick,0x7ff86ea82704,38256653,0,0x0,8
tick,0x7ff86ea82704,38258621,0,0x0,8
tick,0x7ff86ea82704,38260515,0,0x0,8
tick,0x7ff86ea82704,38262625,0,0x0,8
tick,0x7ff86ea82704,38264514,0,0x0,8
tick,0x7ff86ea82704,38266685,0,0x0,8
tick,0x7ff86ea82704,38268477,0,0x0,8
tick,0x7ff86ea82704,38270557,0,0x0,8
tick,0x7ff86ea82704,38272557,0,0x0,8
tick,0x7ff86ea82704,38274623,0,0x0,8
tick,0x7ff86ea82704,38276484,0,0x0,8
tick,0x7ff86ea82704,38278592,0,0x0,8
tick,0x7ff86ea82704,38280476,0,0x0,8
tick,0x7ff86ea82704,38282498,0,0x0,8
tick,0x7ff86ea82704,38284484,0,0x0,8
tick,0x7ff86ea82704,38286496,0,0x0,8
tick,0x7ff86ea82704,38288482,0,0x0,8
tick,0x7ff86ea82704,38290501,0,0x0,8
tick,0x7ff86ea82704,38292448,0,0x0,8
tick,0x7ff86ea82704,38294474,0,0x0,8
tick,0x7ff86ea82704,38296486,0,0x0,8
tick,0x7ff86ea82704,38298439,0,0x0,8
tick,0x7ff86ea82704,38300453,0,0x0,8
tick,0x7ff86ea82704,38302421,0,0x0,8
tick,0x7ff86ea82704,38304467,0,0x0,8
tick,0x7ff86ea82704,38306419,0,0x0,8
tick,0x7ff86ea82704,38308441,0,0x0,8
tick,0x7ff86ea82704,38310374,0,0x0,8
tick,0x7ff86ea82704,38312405,0,0x0,8
tick,0x7ff86ea82704,38314379,0,0x0,8
tick,0x7ff86ea82704,38316479,0,0x0,8
tick,0x7ff86ea82704,38318376,0,0x0,8
tick,0x7ff86ea82704,38320408,0,0x0,8
tick,0x7ff86ea82704,38322332,0,0x0,8
tick,0x7ff86ea82704,38324444,0,0x0,8
tick,0x7ff86ea82704,38326370,0,0x0,8
tick,0x7ff86ea82704,38328372,0,0x0,8
tick,0x7ff86ea82704,38330413,0,0x0,8
tick,0x7ff86ea82704,38332344,0,0x0,8
tick,0x7ff86ea82704,38334336,0,0x0,8
tick,0x7ff86ea82704,38336435,0,0x0,8
tick,0x7ff86ea82704,38338349,0,0x0,8
tick,0x7ff86ea82704,38340481,0,0x0,8
tick,0x7ff86ea82704,38342286,0,0x0,8
tick,0x7ff86ea82704,38344376,0,0x0,8
tick,0x7ff86ea82704,38346265,0,0x0,8
tick,0x7ff86ea82704,38348441,0,0x0,8
tick,0x7ff86ea82704,38350297,0,0x0,8
tick,0x7ff86ea82704,38352289,0,0x0,8
tick,0x7ff86ea82704,38354316,0,0x0,8
tick,0x7ff86ea82704,38356403,0,0x0,8
tick,0x7ff86ea82704,38358330,0,0x0,8
tick,0x7ff86ea82704,38360278,0,0x0,8
tick,0x7ff86ea82704,38362352,0,0x0,8
tick,0x7ff86ea82704,38364361,0,0x0,8
tick,0x7ff86ea82704,38366211,0,0x0,8
tick,0x7ff86ea82704,38368257,0,0x0,8
tick,0x7ff86ea82704,38370289,0,0x0,8
tick,0x7ff86ea82704,38372303,0,0x0,8
tick,0x7ff86ea82704,38374335,0,0x0,8
tick,0x7ff86ea82704,38376184,0,0x0,8
tick,0x7ff86ea82704,38378229,0,0x0,8
tick,0x7ff86ea82704,38380248,0,0x0,8
tick,0x7ff86ea82704,38382185,0,0x0,8
tick,0x7ff86ea82704,38384264,0,0x0,8
tick,0x7ff86ea82704,38386239,0,0x0,8
tick,0x7ff86ea82704,38388316,0,0x0,8
tick,0x7ff86ea82704,38390225,0,0x0,8
tick,0x7ff86ea82704,38392275,0,0x0,8
tick,0x7ff86ea82704,38394167,0,0x0,8
tick,0x7ff86ea82704,38396282,0,0x0,8
tick,0x7ff86ea82704,38398128,0,0x0,8
tick,0x7ff86ea82704,38400291,0,0x0,8
tick,0x7ff86ea82704,38402167,0,0x0,8
tick,0x7ff86ea82704,38404234,0,0x0,8
tick,0x7ff86ea82704,38406191,0,0x0,8
tick,0x7ff86ea82704,38408228,0,0x0,8
tick,0x7ff86ea82704,38410112,0,0x0,8
tick,0x7ff86ea82704,38412202,0,0x0,8
tick,0x7ff86ea82704,38414154,0,0x0,8
tick,0x7ff86ea82704,38416184,0,0x0,8
tick,0x7ff86ea82704,38418075,0,0x0,8
tick,0x7ff86ea82704,38420135,0,0x0,8
tick,0x7ff86ea82704,38422141,0,0x0,8
tick,0x7ff86ea82704,38424105,0,0x0,8
tick,0x7ff86ea82704,38426110,0,0x0,8
tick,0x7ff86ea82704,38427593,0,0x0,8
tick,0x7ff86ea82704,38429253,0,0x0,8
tick,0x7ff86ea82704,38431606,0,0x0,8
tick,0x7ff86ea82704,38433276,0,0x0,8
tick,0x7ff86ea82704,38435513,0,0x0,8
tick,0x7ff86ea82704,38437336,0,0x0,8
tick,0x7ff86ea82704,38439555,0,0x0,8
tick,0x7ff86ea82704,38441209,0,0x0,8
tick,0x7ff86ea82704,38443857,0,0x0,8
tick,0x7ff86ea82704,38445220,0,0x0,8
tick,0x7ff86ea82704,38447493,0,0x0,8
tick,0x7ff86ea82704,38449175,0,0x0,8
tick,0x7ff86ea82704,38451323,0,0x0,8
tick,0x7ff86ea82704,38453385,0,0x0,8
tick,0x7ff86ea82704,38455368,0,0x0,8
tick,0x7ff86ea82704,38457389,0,0x0,8
tick,0x7ff86ea82704,38459226,0,0x0,8
tick,0x7ff86ea82704,38461287,0,0x0,8
tick,0x7ff86ea82704,38463249,0,0x0,8
tick,0x7ff86ea82704,38465302,0,0x0,8
tick,0x7ff86ea82704,38467401,0,0x0,8
tick,0x7ff86ea82704,38469405,0,0x0,8
tick,0x7ff86ea82704,38471362,0,0x0,8
tick,0x7ff86ea82704,38473187,0,0x0,8
tick,0x7ff86ea82704,38475328,0,0x0,8
tick,0x7ff86ea82704,38477255,0,0x0,8
tick,0x7ff86ea82704,38479239,0,0x0,8
tick,0x7ff86ea82704,38481080,0,0x0,8
tick,0x7ff86ea82704,38483285,0,0x0,8
tick,0x7ff86ea82704,38485144,0,0x0,8
tick,0x7ff86ea82704,38487197,0,0x0,8
tick,0x7ff86ea82704,38489262,0,0x0,8
tick,0x7ff86ea82704,38491155,0,0x0,8
tick,0x7ff86ea82704,38493171,0,0x0,8
tick,0x7ff86ea82704,38495150,0,0x0,8
tick,0x7ff86ea82704,38497229,0,0x0,8
tick,0x7ff86ea82704,38499140,0,0x0,8
tick,0x7ff86ea82704,38501114,0,0x0,8
tick,0x7ff86ea82704,38503147,0,0x0,8
tick,0x7ff86ea82704,38505049,0,0x0,8
tick,0x7ff86ea82704,38507163,0,0x0,8
tick,0x7ff86ea82704,38509097,0,0x0,8
tick,0x7ff86ea82704,38511147,0,0x0,8
tick,0x7ff86ea82704,38513032,0,0x0,8
tick,0x7ff86ea82704,38515100,0,0x0,8
tick,0x7ff86ea82704,38516954,0,0x0,8
tick,0x7ff86ea82704,38518902,0,0x0,8
tick,0x7ff86ea82704,38521340,0,0x0,8
tick,0x7ff86ea82704,38523051,0,0x0,8
tick,0x7ff86ea82704,38525068,0,0x0,8
tick,0x7ff86ea82704,38527204,0,0x0,8
tick,0x7ff86ea82704,38528972,0,0x0,8
tick,0x7ff86ea82704,38531074,0,0x0,8
tick,0x7ff86ea82704,38533131,0,0x0,8
tick,0x7ff86ea82704,38534863,0,0x0,8
tick,0x7ff86ea82704,38537117,0,0x0,8
tick,0x7ff86ea82704,38538814,0,0x0,8
tick,0x7ff86ea82704,38541091,0,0x0,8
tick,0x7ff86ea82704,38542985,0,0x0,8
tick,0x7ff86ea82704,38545110,0,0x0,8
tick,0x7ff86ea82704,38546995,0,0x0,8
tick,0x7ff86ea82704,38549119,0,0x0,8
tick,0x7ff86ea82704,38550945,0,0x0,8
tick,0x7ff86ea82704,38553131,0,0x0,8
tick,0x7ff86ea82704,38554951,0,0x0,8
tick,0x7ff86ea82704,38557056,0,0x0,8
tick,0x7ff86ea82704,38558816,0,0x0,8
tick,0x7ff86ea82704,38561069,0,0x0,8
tick,0x7ff86ea82704,38562996,0,0x0,8
tick,0x7ff86ea82704,38564958,0,0x0,8
tick,0x7ff86ea82704,38566887,0,0x0,8
tick,0x7ff86ea82704,38569156,0,0x0,8
tick,0x7ff86ea82704,38570888,0,0x0,8
tick,0x7ff86ea82704,38572999,0,0x0,8
tick,0x7ff86ea82704,38575008,0,0x0,8
tick,0x7ff86ea82704,38576997,0,0x0,8
tick,0x7ff86ea82704,38578915,0,0x0,8
tick,0x7ff86ea82704,38581063,0,0x0,8
tick,0x7ff86ea82704,38582801,0,0x0,8
tick,0x7ff86ea82704,38585020,0,0x0,8
tick,0x7ff86ea82704,38586929,0,0x0,8
tick,0x7ff86ea82704,38589009,0,0x0,8
tick,0x7ff86ea82704,38590956,0,0x0,8
tick,0x7ff86ea82704,38593064,0,0x0,8
tick,0x7ff86ea82704,38594914,0,0x0,8
tick,0x7ff86ea82704,38597085,0,0x0,8
tick,0x7ff86ea82704,38599036,0,0x0,8
tick,0x7ff86ea82704,38600824,0,0x0,8
tick,0x7ff86ea82704,38602858,0,0x0,8
tick,0x7ff86ea82704,38604960,0,0x0,8
tick,0x7ff86ea82704,38607142,0,0x0,8
tick,0x7ff86ea82704,38609284,0,0x0,8
tick,0x7ff86ea82704,38611002,0,0x0,8
tick,0x7ff86ea82704,38613046,0,0x0,8
tick,0x7ff86ea82704,38614999,0,0x0,8
tick,0x7ff86ea82704,38616917,0,0x0,8
tick,0x7ff86ea82704,38619063,0,0x0,8
tick,0x7ff86ea82704,38620769,0,0x0,8
tick,0x7ff86ea82704,38623143,0,0x0,8
tick,0x7ff86ea82704,38625099,0,0x0,8
tick,0x7ff86ea82704,38626943,0,0x0,8
tick,0x7ff86ea82704,38628995,0,0x0,8
tick,0x7ff86ea82704,38630963,0,0x0,8
tick,0x7ff86ea82704,38633103,0,0x0,8
tick,0x7ff86ea82704,38635141,0,0x0,8
tick,0x7ff86ea82704,38636945,0,0x0,8
tick,0x7ff86ea82704,38639347,0,0x0,8
tick,0x7ff86ea82704,38641108,0,0x0,8
tick,0x7ff86ea82704,38642997,0,0x0,8
tick,0x7ff86ea82704,38644606,0,0x0,8
tick,0x7ff86ea82704,38646744,0,0x0,8
tick,0x7ff86ea82704,38648769,0,0x0,8
tick,0x7ff86ea82704,38650848,0,0x0,8
tick,0x7ff86ea82704,38652756,0,0x0,8
tick,0x7ff86ea82704,38654854,0,0x0,8
tick,0x7ff86ea82704,38656652,0,0x0,8
tick,0x7ff86ea82704,38658912,0,0x0,8
tick,0x7ff86ea82704,38660576,0,0x0,8
tick,0x7ff86ea82704,38662646,0,0x0,8
tick,0x7ff86ea82704,38664706,0,0x0,8
tick,0x7ff86ea82704,38666732,0,0x0,8
tick,0x7ff86ea82704,38668815,0,0x0,8
tick,0x7ff86ea82704,38670560,0,0x0,8
tick,0x7ff86ea82704,38672744,0,0x0,8
tick,0x7ff86ea82704,38674481,0,0x0,8
tick,0x7ff86ea82704,38676603,0,0x0,8
tick,0x7ff86ea82704,38678671,0,0x0,8
tick,0x7ff86ea82704,38680727,0,0x0,8
tick,0x7ff86ea82704,38682572,0,0x0,8
tick,0x7ff86ea82704,38684813,0,0x0,8
tick,0x7ff86ea82704,38686559,0,0x0,8
tick,0x7ff86ea82704,38688730,0,0x0,8
tick,0x7ff86ea82704,38690540,0,0x0,8
tick,0x7ff86ea82704,38692646,0,0x0,8
tick,0x7ff86ea82704,38694421,0,0x0,8
tick,0x7ff86ea82704,38696659,0,0x0,8
tick,0x7ff86ea82704,38698451,0,0x0,8
tick,0x7ff86ea82704,38700708,0,0x0,8
tick,0x7ff86ea82704,38702525,0,0x0,8
tick,0x7ff86ea82704,38704542,0,0x0,8
tick,0x7ff86ea82704,38706432,0,0x0,8
tick,0x7ff86ea82704,38708600,0,0x0,8
tick,0x7ff86ea82704,38710489,0,0x0,8
tick,0x7ff86ea82704,38712680,0,0x0,8
tick,0x7ff86ea82704,38714466,0,0x0,8
tick,0x7ff86ea82704,38716595,0,0x0,8
tick,0x7ff86ea82704,38718456,0,0x0,8
tick,0x7ff86ea82704,38720665,0,0x0,8
tick,0x7ff86ea82704,38722498,0,0x0,8
tick,0x7ff86ea82704,38724593,0,0x0,8
tick,0x7ff86ea82704,38726397,0,0x0,8
tick,0x7ff86ea82704,38728618,0,0x0,8
tick,0x7ff86ea82704,38730381,0,0x0,8
tick,0x7ff86ea82704,38732601,0,0x0,8
tick,0x7ff86ea82704,38736160,0,0x0,8
tick,0x7ff86ea82704,38737262,0,0x0,8
tick,0x7ff86ea82704,38739264,0,0x0,8
tick,0x7ff86ea82704,38741251,0,0x0,8
tick,0x7ff86ea82704,38743310,0,0x0,8
tick,0x7ff86ea82704,38745189,0,0x0,8
tick,0x7ff86ea82704,38747215,0,0x0,8
tick,0x7ff86ea82704,38749268,0,0x0,8
tick,0x7ff86ea82704,38751217,0,0x0,8
tick,0x7ff86ea82704,38753189,0,0x0,8
tick,0x7ff86ea82704,38755271,0,0x0,8
tick,0x7ff86ea82704,38757193,0,0x0,8
tick,0x7ff86ea82704,38759235,0,0x0,8
tick,0x7ff86ea82704,38761149,0,0x0,8
tick,0x7ff86ea82704,38763122,0,0x0,8
tick,0x7ff86ea82704,38765201,0,0x0,8
tick,0x7ff86ea82704,38767176,0,0x0,8
tick,0x7ff86ea82704,38769161,0,0x0,8
tick,0x7ff86ea82704,38771093,0,0x0,8
tick,0x7ff86ea82704,38773203,0,0x0,8
tick,0x7ff86ea82704,38775079,0,0x0,8
tick,0x7ff86ea82704,38777178,0,0x0,8
tick,0x7ff86ea82704,38779184,0,0x0,8
tick,0x7ff86ea82704,38781634,0,0x0,8
tick,0x7ff86ea82704,38783080,0,0x0,8
tick,0x7ff86ea82704,38785166,0,0x0,8
tick,0x7ff86ea82704,38787121,0,0x0,8
tick,0x7ff86ea82704,38789166,0,0x0,8
tick,0x7ff86ea82704,38791156,0,0x0,8
tick,0x7ff86ea82704,38793168,0,0x0,8
tick,0x7ff86ea82704,38795094,0,0x0,8
tick,0x7ff86ea82704,38797106,0,0x0,8
tick,0x7ff86ea82704,38799066,0,0x0,8
tick,0x7ff86ea82704,38801061,0,0x0,8
tick,0x7ff86ea82704,38803110,0,0x0,8
tick,0x7ff86ea82704,38805147,0,0x0,8
tick,0x7ff86ea82704,38807140,0,0x0,8
tick,0x7ff86ea82704,38808992,0,0x0,8
tick,0x7ff86ea82704,38811125,0,0x0,8
tick,0x7ff86ea82704,38813081,0,0x0,8
tick,0x7ff86ea82704,38815106,0,0x0,8
tick,0x7ff86ea82704,38817161,0,0x0,8
tick,0x7ff86ea82704,38819144,0,0x0,8
tick,0x7ff86ea82704,38821021,0,0x0,8
tick,0x7ff86ea82704,38822948,0,0x0,8
tick,0x7ff86ea82704,38825020,0,0x0,8
tick,0x7ff86ea82704,38827016,0,0x0,8
tick,0x7ff86ea82704,38829181,0,0x0,8
tick,0x7ff86ea82704,38830976,0,0x0,8
tick,0x7ff86ea82704,38833043,0,0x0,8
tick,0x7ff86ea82704,38835047,0,0x0,8
tick,0x7ff86ea82704,38836996,0,0x0,8
tick,0x7ff86ea82704,38838963,0,0x0,8
tick,0x7ff86ea82704,38841071,0,0x0,8
tick,0x7ff86ea82704,38843161,0,0x0,8
tick,0x7ff86ea82704,38845751,0,0x0,8
tick,0x7ff86ea82704,38846858,0,0x0,8
tick,0x7ff86ea82704,38848879,0,0x0,8
tick,0x7ff86ea82704,38851325,0,0x0,8
tick,0x7ff86ea82704,38852936,0,0x0,8
tick,0x7ff86ea82704,38854941,0,0x0,8
tick,0x7ff86ea82704,38857239,0,0x0,8
tick,0x7ff86ea82704,38859531,0,0x0,8
tick,0x7ff86ea82704,38860914,0,0x0,8
tick,0x7ff86ea82704,38862940,0,0x0,8
tick,0x7ff86ea82704,38864905,0,0x0,8
tick,0x7ff86ea82704,38867017,0,0x0,8
tick,0x7ff86ea82704,38868903,0,0x0,8
tick,0x7ff86ea82704,38871005,0,0x0,8
tick,0x7ff86ea82704,38872975,0,0x0,8
tick,0x7ff86ea82704,38875157,0,0x0,8
tick,0x7ff86ea82704,38877066,0,0x0,8
tick,0x7ff86ea82704,38878937,0,0x0,8
tick,0x7ff86ea82704,38880988,0,0x0,8
tick,0x7ff86ea82704,38883028,0,0x0,8
tick,0x7ff86ea82704,38885088,0,0x0,8
tick,0x7ff86ea82704,38886887,0,0x0,8
tick,0x7ff86ea82704,38888951,0,0x0,8
tick,0x7ff86ea82704,38891117,0,0x0,8
tick,0x7ff86ea82704,38892978,0,0x0,8
tick,0x7ff86ea82704,38894936,0,0x0,8
tick,0x7ff86ea82704,38896875,0,0x0,8
tick,0x7ff86ea82704,38898882,0,0x0,8
tick,0x7ff86ea82704,38900914,0,0x0,8
tick,0x7ff86ea82704,38902860,0,0x0,8
tick,0x7ff86ea82704,38904959,0,0x0,8
tick,0x7ff86ea82704,38906928,0,0x0,8
tick,0x7ff86ea82704,38908810,0,0x0,8
tick,0x7ff86ea82704,38910972,0,0x0,8
tick,0x7ff86ea82704,38912958,0,0x0,8
tick,0x7ff86ea82704,38914923,0,0x0,8
tick,0x7ff86ea82704,38916789,0,0x0,8
tick,0x7ff86ea82704,38919045,0,0x0,8
tick,0x7ff86ea82704,38920853,0,0x0,8
tick,0x7ff86ea82704,38922954,0,0x0,8
tick,0x7ff86ea82704,38924852,0,0x0,8
tick,0x7ff86ea82704,38927078,0,0x0,8
tick,0x7ff86ea82704,38928927,0,0x0,8
tick,0x7ff86ea82704,38931076,0,0x0,8
tick,0x7ff86ea82704,38932826,0,0x0,8
tick,0x7ff86ea82704,38934813,0,0x0,8
tick,0x7ff86ea82704,38936906,0,0x0,8
tick,0x7ff86ea82704,38938767,0,0x0,8
tick,0x7ff86ea82704,38941084,0,0x0,8
tick,0x7ff86ea82704,38942897,0,0x0,8
tick,0x7ff86ea82704,38944993,0,0x0,8
tick,0x7ff86ea82704,38946809,0,0x0,8
tick,0x7ff86ea82704,38948825,0,0x0,8
tick,0x7ff86ea82704,38950894,0,0x0,8
tick,0x7ff86ea82704,38952936,0,0x0,8
tick,0x7ff86ea82704,38954716,0,0x0,8
tick,0x7ff86ea82704,38956994,0,0x0,8
tick,0x7ff86ea82704,38959280,0,0x0,8
tick,0x7ff86ea82704,38960988,0,0x0,8
tick,0x7ff86ea82704,38962854,0,0x0,8
tick,0x7ff86ea82704,38964795,0,0x0,8
tick,0x7ff86ea82704,38966745,0,0x0,8
tick,0x7ff86ea82704,38968758,0,0x0,8
tick,0x7ff86ea82704,38970827,0,0x0,8
tick,0x7ff86ea82704,38972788,0,0x0,8
tick,0x7ff86ea82704,38974868,0,0x0,8
tick,0x7ff86ea82704,38977325,0,0x0,8
tick,0x7ff86ea82704,38978616,0,0x0,8
tick,0x7ff86ea82704,38980622,0,0x0,8
tick,0x7ff86ea82704,38982843,0,0x0,8
tick,0x7ff86ea82704,38984666,0,0x0,8
tick,0x7ff86ea82704,38986630,0,0x0,8
tick,0x7ff86ea82704,38988609,0,0x0,8
tick,0x7ff86ea82704,38990941,0,0x0,8
tick,0x7ff86ea82704,38992843,0,0x0,8
tick,0x7ff86ea82704,38994702,0,0x0,8
tick,0x7ff86ea82704,38996661,0,0x0,8
tick,0x7ff86ea82704,38998759,0,0x0,8
tick,0x7ff86ea82704,39000631,0,0x0,8
tick,0x7ff86ea82704,39002665,0,0x0,8
tick,0x7ff86ea82704,39004579,0,0x0,8
tick,0x7ff86ea82704,39006866,0,0x0,8
tick,0x7ff86ea82704,39008575,0,0x0,8
tick,0x7ff86ea82704,39010849,0,0x0,8
tick,0x7ff86ea82704,39012601,0,0x0,8
tick,0x7ff86ea82704,39015119,0,0x0,8
tick,0x7ff86ea82704,39016556,0,0x0,8
tick,0x7ff86ea82704,39018642,0,0x0,8
tick,0x7ff86ea82704,39020783,0,0x0,8
tick,0x7ff86ea82704,39022675,0,0x0,8
tick,0x7ff86ea82704,39024794,0,0x0,8
tick,0x7ff86ea82704,39026650,0,0x0,8
tick,0x7ff86ea82704,39028829,0,0x0,8
tick,0x7ff86ea82704,39030715,0,0x0,8
tick,0x7ff86ea82704,39032636,0,0x0,8
tick,0x7ff86ea82704,39034501,0,0x0,8
tick,0x7ff86ea82704,39036682,0,0x0,8
tick,0x7ff86ea82704,39038632,0,0x0,8
tick,0x7ff86ea82704,39042297,0,0x0,8
tick,0x7ff86ea82704,39043887,0,0x0,8
tick,0x7ff86ea82704,39045744,0,0x0,8
tick,0x7ff86ea82704,39047418,0,0x0,8
tick,0x7ff86ea82704,39049521,0,0x0,8
tick,0x7ff86ea82704,39051603,0,0x0,8
tick,0x7ff86ea82704,39053595,0,0x0,8
tick,0x7ff86ea82704,39055558,0,0x0,8
tick,0x7ff86ea82704,39058456,0,0x0,8
tick,0x7ff86ea82704,39060121,0,0x0,8
tick,0x7ff86ea82704,39062161,0,0x0,8
tick,0x7ff86ea82704,39064590,0,0x0,8
tick,0x7ff86ea82704,39066626,0,0x0,8
tick,0x7ff86ea82704,39068449,0,0x0,8
tick,0x7ff86ea82704,39071516,0,0x0,8
tick,0x7ff86ea82704,39073493,0,0x0,8
tick,0x7ff86ea82704,39075783,0,0x0,8
tick,0x7ff86ea82704,39077416,0,0x0,8
tick,0x7ff86ea82704,39079484,0,0x0,8
tick,0x7ff86ea82704,39081711,0,0x0,8
tick,0x7ff86ea82704,39083673,0,0x0,8
tick,0x7ff86ea82704,39085369,0,0x0,8
tick,0x7ff86ea82704,39087415,0,0x0,8
tick,0x7ff86ea82704,39089424,0,0x0,8
tick,0x7ff86ea82704,39091595,0,0x0,8
tick,0x7ff86ea82704,39093382,0,0x0,8
tick,0x7ff86ea82704,39095464,0,0x0,8
tick,0x7ff86ea82704,39097355,0,0x0,8
tick,0x7ff86ea82704,39099989,0,0x0,8
tick,0x7ff86ea82704,39101952,0,0x0,8
tick,0x7ff86ea82704,39103506,0,0x0,8
tick,0x7ff86ea82704,39105615,0,0x0,8
tick,0x7ff86ea82704,39111085,0,0x0,8
tick,0x7ff86ea82704,39111142,0,0x0,8
tick,0x7ff86ea82704,39112576,0,0x0,8
tick,0x7ff86ea82704,39114347,0,0x0,8
tick,0x7ff86ea82704,39116358,0,0x0,8
tick,0x7ff86ea82704,39118292,0,0x0,8
tick,0x7ff86ea82704,39120467,0,0x0,8
tick,0x7ff86ea82704,39122375,0,0x0,8
tick,0x7ff86ea82704,39126241,0,0x0,8
tick,0x7ff86ea82704,39128176,0,0x0,8
tick,0x7ff86ea82704,39129777,0,0x0,8
tick,0x7ff86ea82704,39131669,0,0x0,8
tick,0x7ff86ea82704,39133692,0,0x0,8
tick,0x7ff86ea82704,39135421,0,0x0,8
tick,0x7ff86ea82704,39137688,0,0x0,8
tick,0x7ff86ea82704,39139469,0,0x0,8
tick,0x7ff86ea82704,39141980,0,0x0,8
tick,0x7ff86ea82704,39144468,0,0x0,8
tick,0x7ff86ea82704,39147187,0,0x0,8
tick,0x7ff86ea82704,39149699,0,0x0,8
tick,0x7ff86ea82704,39151304,0,0x0,8
tick,0x7ff86ea82704,39153390,0,0x0,8
tick,0x7ff86ea82704,39155229,0,0x0,8
tick,0x7ff86ea82704,39157386,0,0x0,8
tick,0x7ff86ea82704,39159549,0,0x0,8
tick,0x7ff86ea82704,39161282,0,0x0,8
tick,0x7ff86ea82704,39163260,0,0x0,8
tick,0x7ff86ea82704,39165218,0,0x0,8
tick,0x7ff86ea82704,39167557,0,0x0,8
tick,0x7ff86ea82704,39169144,0,0x0,8
tick,0x7ff86ea82704,39171362,0,0x0,8
tick,0x7ff86ea82704,39173453,0,0x0,8
tick,0x7ff86ea82704,39176186,0,0x0,8
tick,0x7ff86ea82704,39177438,0,0x0,8
tick,0x7ff86ea82704,39179562,0,0x0,8
tick,0x7ff86ea82704,39181171,0,0x0,8
tick,0x7ff86ea82704,39183547,0,0x0,8
tick,0x7ff86ea82704,39185134,0,0x0,8
tick,0x7ff86ea82704,39187231,0,0x0,8
tick,0x7ff86ea82704,39189474,0,0x0,8
tick,0x7ff86ea82704,39192675,0,0x0,8
tick,0x7ff86ea82704,39195196,0,0x0,8
tick,0x7ff86ea82704,39196397,0,0x0,8
tick,0x7ff86ea82704,39197018,0,0x0,8
tick,0x7ff86ea82704,39199752,0,0x0,8
tick,0x7ff86ea82704,39201095,0,0x0,8
tick,0x7ff86ea82704,39203337,0,0x0,8
tick,0x7ff86ea82704,39205113,0,0x0,8
tick,0x7ff86ea82704,39207246,0,0x0,8
tick,0x7ff86ea82704,39211309,0,0x0,8
tick,0x7ff86ea82704,39212771,0,0x0,8
tick,0x7ff86ea82704,39214356,0,0x0,8
tick,0x7ff86ea82704,39216439,0,0x0,8
tick,0x7ff86ea82704,39220707,0,0x0,8
tick,0x7ff86ea82704,39220736,0,0x0,8
tick,0x7ff86ea82704,39222774,0,0x0,8
tick,0x7ff86ea82704,39224428,0,0x0,8
tick,0x7ff86ea82704,39229601,0,0x0,8
tick,0x7ff86ea82704,39229670,0,0x0,8
tick,0x7ff86ea82704,39230757,0,0x0,8
tick,0x7ff86ea82704,39232042,0,0x0,8
tick,0x7ff86ea82704,39234226,0,0x0,8
tick,0x7ff86ea82704,39235982,0,0x0,8
tick,0x7ff86ea82704,39238149,0,0x0,8
tick,0x7ff86ea82704,39240021,0,0x0,8
tick,0x7ff86ea82704,39244332,0,0x0,8
tick,0x7ff86ea82704,39245032,0,0x0,8
tick,0x7ff86ea82704,39245890,0,0x0,8
tick,0x7ff86ea82704,39248166,0,0x0,8
tick,0x7ff86ea82704,39249992,0,0x0,8
tick,0x7ff86ea82704,39251996,0,0x0,8
tick,0x7ff86ea82704,39253960,0,0x0,8
tick,0x7ff86ea82704,39256120,0,0x0,8
tick,0x7ff86ea82704,39258067,0,0x0,8
tick,0x7ff86ea82704,39261411,0,0x0,8
tick,0x7ff86ea82704,39262105,0,0x0,8
tick,0x7ff86ea82704,39264218,0,0x0,8
tick,0x7ff86ea82704,39266060,0,0x0,8
tick,0x7ff86ea82704,39268349,0,0x0,8
tick,0x7ff86ea82704,39270363,0,0x0,8
tick,0x7ff86ea82704,39272004,0,0x0,8
tick,0x7ff86ea82704,39274310,0,0x0,8
tick,0x7ff86ea82704,39276676,0,0x0,8
tick,0x7ff86ea82704,39278556,0,0x0,8
tick,0x7ff86ea82704,39279877,0,0x0,8
tick,0x7ff86ea82704,39282034,0,0x0,8
tick,0x7ff86ea82704,39284005,0,0x0,8
tick,0x7ff86ea82704,39285957,0,0x0,8
tick,0x7ff86ea82704,39287965,0,0x0,8
tick,0x7ff86ea82704,39289977,0,0x0,8
tick,0x7ff86ea82704,39292640,0,0x0,8
tick,0x7ff86ea82704,39294842,0,0x0,8
tick,0x7ff86ea82704,39296881,0,0x0,8
tick,0x7ff86ea82704,39299074,0,0x0,8
tick,0x7ff86ea82704,39300845,0,0x0,8
tick,0x7ff86ea82704,39302846,0,0x0,8
tick,0x7ff86ea82704,39305506,0,0x0,8
tick,0x7ff86ea82704,39306750,0,0x0,8
tick,0x7ff86ea82704,39310123,0,0x0,8
tick,0x7ff86ea82704,39310938,0,0x0,8
tick,0x7ff86ea82704,39312857,0,0x0,8
tick,0x7ff86ea82704,39314928,0,0x0,8
tick,0x7ff86ea82704,39316862,0,0x0,8
tick,0x7ff86ea82704,39318780,0,0x0,8
tick,0x7ff86ea82704,39321117,0,0x0,8
tick,0x7ff86ea82704,39322837,0,0x0,8
tick,0x7ff86ea82704,39326239,0,0x0,8
tick,0x7ff86ea82704,39327752,0,0x0,8
tick,0x7ff86ea82704,39329865,0,0x0,8
tick,0x7ff86ea82704,39332166,0,0x0,8
tick,0x7ff86ea82704,39333836,0,0x0,8
tick,0x7ff86ea82704,39336091,0,0x0,8
tick,0x7ff86ea82704,39337945,0,0x0,8
tick,0x7ff86ea82704,39339749,0,0x0,8
tick,0x7ff86ea82704,39342925,0,0x0,8
tick,0x7ff86ea82704,39343804,0,0x0,8
tick,0x7ff86ea82704,39346004,0,0x0,8
tick,0x7ff86ea82704,39347624,0,0x0,8
tick,0x7ff86ea82704,39349669,0,0x0,8
tick,0x7ff86ea82704,39351546,0,0x0,8
tick,0x7ff86ea82704,39353805,0,0x0,8
tick,0x7ff86ea82704,39355617,0,0x0,8
tick,0x7ff86ea82704,39359404,0,0x0,8
tick,0x7ff86ea82704,39360279,0,0x0,8
tick,0x7ff86ea82704,39361731,0,0x0,8
tick,0x7ff86ea82704,39363571,0,0x0,8
tick,0x7ff86ea82704,39365762,0,0x0,8
tick,0x7ff86ea82704,39367652,0,0x0,8
tick,0x7ff86ea82704,39369687,0,0x0,8
tick,0x7ff86ea82704,39371565,0,0x0,8
tick,0x7ff86ea82704,39373637,0,0x0,8
tick,0x7ff86ea82704,39376721,0,0x0,8
tick,0x7ff86ea82704,39377927,0,0x0,8
tick,0x7ff86ea82704,39379813,0,0x0,8
tick,0x7ff86ea82704,39382443,0,0x0,8
tick,0x7ff86ea82704,39383572,0,0x0,8
tick,0x7ff86ea82704,39385720,0,0x0,8
tick,0x7ff86ea82704,39387585,0,0x0,8
tick,0x7ff86ea82704,39389608,0,0x0,8
tick,0x7ff86ea82704,39391933,0,0x0,8
tick,0x7ff86ea82704,39393598,0,0x0,8
tick,0x7ff86ea82704,39395917,0,0x0,8
tick,0x7ff86ea82704,39397644,0,0x0,8
tick,0x7ff86ea82704,39399590,0,0x0,8
tick,0x7ff86ea82704,39401691,0,0x0,8
tick,0x7ff86ea82704,39403695,0,0x0,8
tick,0x7ff86ea82704,39405783,0,0x0,8
tick,0x7ff86ea82704,39408720,0,0x0,8
tick,0x7ff86ea82704,39410697,0,0x0,8
tick,0x7ff86ea82704,39411752,0,0x0,8
tick,0x7ff86ea82704,39413565,0,0x0,8
tick,0x7ff86ea82704,39415481,0,0x0,8
tick,0x7ff86ea82704,39417438,0,0x0,8
tick,0x7ff86ea82704,39419430,0,0x0,8
tick,0x7ff86ea82704,39421487,0,0x0,8
tick,0x7ff86ea82704,39423407,0,0x0,8
tick,0x7ff86ea82704,39426447,0,0x0,8
tick,0x7ff86ea82704,39427430,0,0x0,8
tick,0x7ff86ea82704,39429494,0,0x0,8
tick,0x7ff86ea82704,39431426,0,0x0,8
tick,0x7ff86ea82704,39433414,0,0x0,8
tick,0x7ff86ea82704,39435530,0,0x0,8
tick,0x7ff86ea82704,39437539,0,0x0,8
tick,0x7ff86ea82704,39439432,0,0x0,8
tick,0x7ff86ea82704,39443433,0,0x0,8
tick,0x7ff86ea82704,39443459,0,0x0,8
tick,0x7ff86ea82704,39445721,0,0x0,8
tick,0x7ff86ea82704,39447892,0,0x0,8
tick,0x7ff86ea82704,39449526,0,0x0,8
tick,0x7ff86ea82704,39451363,0,0x0,8
tick,0x7ff86ea82704,39453508,0,0x0,8
tick,0x7ff86ea82704,39455507,0,0x0,8
tick,0x7ff86ea82704,39458630,0,0x0,8
tick,0x7ff86ea82704,39460722,0,0x0,8
tick,0x7ff86ea82704,39462374,0,0x0,8
tick,0x7ff86ea82704,39463367,0,0x0,8
tick,0x7ff86ea82704,39465284,0,0x0,8
tick,0x7ff86ea82704,39467456,0,0x0,8
tick,0x7ff86ea82704,39469299,0,0x0,8
tick,0x7ff86ea82704,39471293,0,0x0,8
tick,0x7ff86ea82704,39473342,0,0x0,8
tick,0x7ff86ea82704,39476564,0,0x0,8
tick,0x7ff86ea82704,39477631,0,0x0,8
tick,0x7ff86ea82704,39479523,0,0x0,8
tick,0x7ff86ea82704,39481389,0,0x0,8
tick,0x7ff86ea82704,39483734,0,0x0,8
tick,0x7ff86ea82704,39485437,0,0x0,8
tick,0x7ff86ea82704,39487424,0,0x0,8
tick,0x7ff86ea82704,39489339,0,0x0,8
tick,0x7ff86ea82704,39493579,0,0x0,8
tick,0x7ff86ea82704,39493611,0,0x0,8
tick,0x7ff86ea82704,39496457,0,0x0,8
tick,0x7ff86ea82704,39498440,0,0x0,8
tick,0x7ff86ea82704,39500367,0,0x0,8
tick,0x7ff86ea82704,39502696,0,0x0,8
tick,0x7ff86ea82704,39504371,0,0x0,8
tick,0x7ff86ea82704,39506517,0,0x0,8
tick,0x7ff86ea82704,39508613,0,0x0,8
tick,0x7ff86ea82704,39510349,0,0x0,8
tick,0x7ff86ea82704,39512318,0,0x0,8
tick,0x7ff86ea82704,39514261,0,0x0,8
tick,0x7ff86ea82704,39516349,0,0x0,8
tick,0x7ff86ea82704,39518357,0,0x0,8
tick,0x7ff86ea82704,39520705,0,0x0,8
tick,0x7ff86ea82704,39522508,0,0x0,8
tick,0x7ff86ea82704,39525468,0,0x0,8
tick,0x7ff86ea82704,39526856,0,0x0,8
tick,0x7ff86ea82704,39528318,0,0x0,8
tick,0x7ff86ea82704,39530269,0,0x0,8
tick,0x7ff86ea82704,39532131,0,0x0,8
tick,0x7ff86ea82704,39534224,0,0x0,8
tick,0x7ff86ea82704,39536894,0,0x0,8
tick,0x7ff86ea82704,39538360,0,0x0,8
tick,0x7ff86ea82704,39540227,0,0x0,8
tick,0x7ff86ea82704,39543343,0,0x0,8
tick,0x7ff86ea82704,39545312,0,0x0,8
tick,0x7ff86ea82704,39547338,0,0x0,8
tick,0x7ff86ea82704,39549589,0,0x0,8
tick,0x7ff86ea82704,39551380,0,0x0,8
tick,0x7ff86ea82704,39553150,0,0x0,8
tick,0x7ff86ea82704,39555365,0,0x0,8
tick,0x7ff86ea82704,39557161,0,0x0,8
tick,0x7ff86ea82704,39559517,0,0x0,8
tick,0x7ff86ea82704,39562083,0,0x0,8
tick,0x7ff86ea82704,39563158,0,0x0,8
tick,0x7ff86ea82704,39565302,0,0x0,8
tick,0x7ff86ea82704,39567172,0,0x0,8
tick,0x7ff86ea82704,39569271,0,0x0,8
tick,0x7ff86ea82704,39571177,0,0x0,8
tick,0x7ff86ea82704,39573390,0,0x0,8
tick,0x7ff86ea82704,39575386,0,0x0,8
tick,0x7ff86ea82704,39577783,0,0x0,8
tick,0x7ff86ea82704,39579287,0,0x0,8
tick,0x7ff86ea82704,39581084,0,0x0,8
tick,0x7ff86ea82704,39583208,0,0x0,8
tick,0x7ff86ea82704,39585066,0,0x0,8
tick,0x7ff86ea82704,39586973,0,0x0,8
tick,0x7ff86ea82704,39589168,0,0x0,8
tick,0x7ff86ea82704,39592115,0,0x0,8
tick,0x7ff86ea82704,39595187,0,0x0,8
tick,0x7ff86ea82704,39595217,0,0x0,8
tick,0x7ff86ea82704,39596992,0,0x0,8
tick,0x7ff86ea82704,39599477,0,0x0,8
tick,0x7ff86ea82704,39601037,0,0x0,8
tick,0x7ff86ea82704,39603199,0,0x0,8
tick,0x7ff86ea82704,39605365,0,0x0,8
tick,0x7ff86ea82704,39607057,0,0x0,8
tick,0x7ff86ea82704,39610273,0,0x0,8
tick,0x7ff86ea82704,39611498,0,0x0,8
tick,0x7ff86ea82704,39613094,0,0x0,8
tick,0x7ff86ea82704,39614930,0,0x0,8
tick,0x7ff86ea82704,39616910,0,0x0,8
tick,0x7ff86ea82704,39618921,0,0x0,8
tick,0x7ff86ea82704,39621078,0,0x0,8
tick,0x7ff86ea82704,39622873,0,0x0,8
tick,0x7ff86ea82704,39626419,0,0x0,8
tick,0x7ff86ea82704,39628316,0,0x0,8
tick,0x7ff86ea82704,39629220,0,0x0,8
tick,0x7ff86ea82704,39630864,0,0x0,8
tick,0x7ff86ea82704,39632866,0,0x0,8
tick,0x7ff86ea82704,39634815,0,0x0,8
tick,0x7ff86ea82704,39637083,0,0x0,8
tick,0x7ff86ea82704,39638943,0,0x0,8
tick,0x7ff86ea82704,39642366,0,0x0,8
tick,0x7ff86ea82704,39645274,0,0x0,8
tick,0x7ff86ea82704,39645820,0,0x0,8
tick,0x7ff86ea82704,39647244,0,0x0,8
tick,0x7ff86ea82704,39649238,0,0x0,8
tick,0x7ff86ea82704,39651035,0,0x0,8
tick,0x7ff86ea82704,39653146,0,0x0,8
tick,0x7ff86ea82704,39654922,0,0x0,8
tick,0x7ff86ea82704,39657079,0,0x0,8
tick,0x7ff86ea82704,39660815,0,0x0,8
tick,0x7ff86ea82704,39661710,0,0x0,8
tick,0x7ff86ea82704,39662877,0,0x0,8
tick,0x7ff86ea82704,39665107,0,0x0,8
tick,0x7ff86ea82704,39666973,0,0x0,8
tick,0x7ff86ea82704,39668958,0,0x0,8
tick,0x7ff86ea82704,39670881,0,0x0,8
tick,0x7ff86ea82704,39673051,0,0x0,8
tick,0x7ff86ea82704,39678066,0,0x0,8
tick,0x7ff86ea82704,39678111,0,0x0,8
tick,0x7ff86ea82704,39678984,0,0x0,8
tick,0x7ff86ea82704,39680998,0,0x0,8
tick,0x7ff86ea82704,39682774,0,0x0,8
tick,0x7ff86ea82704,39684976,0,0x0,8
tick,0x7ff86ea82704,39686955,0,0x0,8
tick,0x7ff86ea82704,39689070,0,0x0,8
tick,0x7ff86ea82704,39692206,0,0x0,8
tick,0x7ff86ea82704,39694895,0,0x0,8
tick,0x7ff86ea82704,39695422,0,0x0,8
tick,0x7ff86ea82704,39696974,0,0x0,8
tick,0x7ff86ea82704,39699087,0,0x0,8
tick,0x7ff86ea82704,39700922,0,0x0,8
tick,0x7ff86ea82704,39702804,0,0x0,8
tick,0x7ff86ea82704,39705104,0,0x0,8
tick,0x7ff86ea82704,39706963,0,0x0,8
tick,0x7ff86ea82704,39709108,0,0x0,8
tick,0x7ff86ea82704,39710989,0,0x0,8
tick,0x7ff86ea82704,39712635,0,0x0,8
tick,0x7ff86ea82704,39714784,0,0x0,8
tick,0x7ff86ea82704,39716746,0,0x0,8
tick,0x7ff86ea82704,39718728,0,0x0,8
tick,0x7ff86ea82704,39720767,0,0x0,8
tick,0x7ff86ea82704,39722647,0,0x0,8
tick,0x7ff86ea82704,39726544,0,0x0,8
tick,0x7ff86ea82704,39728858,0,0x0,8
tick,0x7ff86ea82704,39728890,0,0x0,8
tick,0x7ff86ea82704,39730857,0,0x0,8
tick,0x7ff86ea82704,39732992,0,0x0,8
tick,0x7ff86ea82704,39734881,0,0x0,8
tick,0x7ff86ea82704,39737583,0,0x0,8
tick,0x7ff86ea82704,39738970,0,0x0,8
tick,0x7ff86ea82704,39742039,0,0x0,8
tick,0x7ff86ea82704,39745005,0,0x0,8
tick,0x7ff86ea82704,39746028,0,0x0,8
tick,0x7ff86ea82704,39747611,0,0x0,8
tick,0x7ff86ea82704,39749817,0,0x0,8
tick,0x7ff86ea82704,39751766,0,0x0,8
tick,0x7ff86ea82704,39753855,0,0x0,8
tick,0x7ff86ea82704,39755843,0,0x0,8
tick,0x7ff86ea82704,39761812,0,0x0,8
tick,0x7ff86ea82704,39761838,0,0x0,8
tick,0x7ff86ea82704,39762577,0,0x0,8
tick,0x7ff86ea82704,39763499,0,0x0,8
tick,0x7ff86ea82704,39765488,0,0x0,8
tick,0x7ff86ea82704,39767726,0,0x0,8
tick,0x7ff86ea82704,39769721,0,0x0,8
tick,0x7ff86ea82704,39771651,0,0x0,8
tick,0x7ff86ea82704,39773750,0,0x0,8
tick,0x7ff86ea82704,39775784,0,0x0,8
tick,0x7ff86ea82704,39777962,0,0x0,8
tick,0x7ff86ea82704,39779710,0,0x0,8
tick,0x7ff86ea82704,39781567,0,0x0,8
tick,0x7ff86ea82704,39785780,0,0x0,8
tick,0x7ff86ea82704,39785833,0,0x0,8
tick,0x7ff86ea82704,39787568,0,0x0,8
tick,0x7ff86ea82704,39789586,0,0x0,8
tick,0x7ff86ea82704,39792035,0,0x0,8
tick,0x7ff86ea82704,39795334,0,0x0,8
tick,0x7ff86ea82704,39797584,0,0x0,8
tick,0x7ff86ea82704,39799626,0,0x0,8
tick,0x7ff86ea82704,39800944,0,0x0,8
tick,0x7ff86ea82704,39802697,0,0x0,8
tick,0x7ff86ea82704,39804708,0,0x0,8
tick,0x7ff86ea82704,39806670,0,0x0,8
tick,0x7ff86ea82704,39810784,0,0x0,8
tick,0x7ff86ea82704,39810904,0,0x0,8
tick,0x7ff86ea82704,39812546,0,0x0,8
tick,0x7ff86ea82704,39814383,0,0x0,8
tick,0x7ff86ea82704,39816470,0,0x0,8
tick,0x7ff86ea82704,39818394,0,0x0,8
tick,0x7ff86ea82704,39820419,0,0x0,8
tick,0x7ff86ea82704,39822370,0,0x0,8
tick,0x7ff86ea82704,39825395,0,0x0,8
tick,0x7ff86ea82704,39826900,0,0x0,8
tick,0x7ff86ea82704,39828683,0,0x0,8
tick,0x7ff86ea82704,39830763,0,0x0,8
tick,0x7ff86ea82704,39832570,0,0x0,8
tick,0x7ff86ea82704,39834612,0,0x0,8
tick,0x7ff86ea82704,39836686,0,0x0,8
tick,0x7ff86ea82704,39838604,0,0x0,8
tick,0x7ff86ea82704,39841110,0,0x0,8
tick,0x7ff86ea82704,39843276,0,0x0,8
tick,0x7ff86ea82704,39845411,0,0x0,8
tick,0x7ff86ea82704,39847525,0,0x0,8
tick,0x7ff86ea82704,39849424,0,0x0,8
tick,0x7ff86ea82704,39851383,0,0x0,8
tick,0x7ff86ea82704,39853506,0,0x0,8
tick,0x7ff86ea82704,39855314,0,0x0,8
tick,0x7ff86ea82704,39858647,0,0x0,8
tick,0x7ff86ea82704,39860002,0,0x0,8
tick,0x7ff86ea82704,39861838,0,0x0,8
tick,0x7ff86ea82704,39863453,0,0x0,8
tick,0x7ff86ea82704,39865417,0,0x0,8
tick,0x7ff86ea82704,39867509,0,0x0,8
tick,0x7ff86ea82704,39869808,0,0x0,8
tick,0x7ff86ea82704,39871536,0,0x0,8
tick,0x7ff86ea82704,39873454,0,0x0,8
tick,0x7ff86ea82704,39876198,0,0x0,8
tick,0x7ff86ea82704,39877605,0,0x0,8
tick,0x7ff86ea82704,39879255,0,0x0,8
tick,0x7ff86ea82704,39881196,0,0x0,8
tick,0x7ff86ea82704,39883219,0,0x0,8
tick,0x7ff86ea82704,39885134,0,0x0,8
tick,0x7ff86ea82704,39887335,0,0x0,8
tick,0x7ff86ea82704,39889258,0,0x0,8
tick,0x7ff86ea82704,39891650,0,0x0,8
tick,0x7ff86ea82704,39894686,0,0x0,8
tick,0x7ff86ea82704,39896112,0,0x0,8
tick,0x7ff86ea82704,39898135,0,0x0,8
tick,0x7ff86ea82704,39900244,0,0x0,8
tick,0x7ff86ea82704,39902124,0,0x0,8
tick,0x7ff86ea82704,39904166,0,0x0,8
tick,0x7ff86ea82704,39906140,0,0x0,8
tick,0x7ff86ea82704,39910053,0,0x0,8
tick,0x7ff86ea82704,39912136,0,0x0,8
tick,0x7ff86ea82704,39914146,0,0x0,8
tick,0x7ff86ea82704,39916105,0,0x0,8
tick,0x7ff86ea82704,39918068,0,0x0,8
tick,0x7ff86ea82704,39920147,0,0x0,8
tick,0x7ff86ea82704,39922446,0,0x0,8
tick,0x7ff86ea82704,39924756,0,0x0,8
tick,0x7ff86ea82704,39926702,0,0x0,8
tick,0x7ff86ea82704,39928157,0,0x0,8
tick,0x7ff86ea82704,39930057,0,0x0,8
tick,0x7ff86ea82704,39932104,0,0x0,8
tick,0x7ff86ea82704,39934191,0,0x0,8
tick,0x7ff86ea82704,39936082,0,0x0,8
tick,0x7ff86ea82704,39938031,0,0x0,8
tick,0x7ff86ea82704,39940124,0,0x0,8
tick,0x7ff86ea82704,39942069,0,0x0,8
tick,0x7ff86ea82704,39944229,0,0x0,8
tick,0x7ff86ea82704,39946227,0,0x0,8
tick,0x7ff86ea82704,39948071,0,0x0,8
tick,0x7ff86ea82704,39950070,0,0x0,8
tick,0x7ff86ea82704,39952250,0,0x0,8
tick,0x7ff86ea82704,39954171,0,0x0,8
tick,0x7ff86ea82704,39956019,0,0x0,8
tick,0x7ff86ea82704,39958903,0,0x0,8
tick,0x7ff86ea82704,39960566,0,0x0,8
tick,0x7ff86ea82704,39962038,0,0x0,8
tick,0x7ff86ea82704,39964248,0,0x0,8
tick,0x7ff86ea82704,39966007,0,0x0,8
tick,0x7ff86ea82704,39968078,0,0x0,8
tick,0x7ff86ea82704,39970244,0,0x0,8
tick,0x7ff86ea82704,39972056,0,0x0,8
tick,0x7ff86ea82704,39974978,0,0x0,8
tick,0x7ff86ea82704,39976638,0,0x0,8
tick,0x7ff86ea82704,39978057,0,0x0,8
tick,0x7ff86ea82704,39980112,0,0x0,8
tick,0x7ff86ea82704,39982608,0,0x0,8
tick,0x7ff86ea82704,39984127,0,0x0,8
tick,0x7ff86ea82704,39986189,0,0x0,8
tick,0x7ff86ea82704,39988130,0,0x0,8
tick,0x7ff86ea82704,39990132,0,0x0,8
tick,0x7ff86ea82704,39992189,0,0x0,8
tick,0x7ff86ea82704,39994042,0,0x0,8
tick,0x7ff86ea82704,39996906,0,0x0,8
tick,0x7ff86ea82704,39999181,0,0x0,8
tick,0x7ff86ea82704,40000944,0,0x0,8
tick,0x7ff86ea82704,40003049,0,0x0,8
tick,0x7ff86ea82704,40004938,0,0x0,8
tick,0x7ff86ea82704,40007097,0,0x0,8
tick,0x7ff86ea82704,40009385,0,0x0,8
tick,0x7ff86ea82704,40011219,0,0x0,8
tick,0x7ff86ea82704,40013022,0,0x0,8
tick,0x7ff86ea82704,40014998,0,0x0,8
tick,0x7ff86ea82704,40016992,0,0x0,8
tick,0x7ff86ea82704,40019031,0,0x0,8
tick,0x7ff86ea82704,40020903,0,0x0,8
tick,0x7ff86ea82704,40023108,0,0x0,8
tick,0x7ff86ea82704,40024971,0,0x0,8
tick,0x7ff86ea82704,40026952,0,0x0,8
tick,0x7ff86ea82704,40028409,0,0x0,8
tick,0x7ff86ea82704,40030244,0,0x0,8
tick,0x7ff86ea82704,40031959,0,0x0,8
tick,0x7ff86ea82704,40034261,0,0x0,8
tick,0x7ff86ea82704,40036010,0,0x0,8
tick,0x7ff86ea82704,40038085,0,0x0,8
tick,0x7ff86ea82704,40040225,0,0x0,8
tick,0x7ff86ea82704,40042440,0,0x0,8
tick,0x7ff86ea82704,40044040,0,0x0,8
tick,0x7ff86ea82704,40046157,0,0x0,8
tick,0x7ff86ea82704,40047947,0,0x0,8
tick,0x7ff86ea82704,40049926,0,0x0,8
tick,0x7ff86ea82704,40052170,0,0x0,8
tick,0x7ff86ea82704,40054133,0,0x0,8
tick,0x7ff86ea82704,40055935,0,0x0,8
tick,0x7ff86ea82704,40060151,0,0x0,8
tick,0x7ff86ea82704,40060787,0,0x0,8
tick,0x7ff86ea82704,40062028,0,0x0,8
tick,0x7ff86ea82704,40063865,0,0x0,8
tick,0x7ff86ea82704,40066002,0,0x0,8
tick,0x7ff86ea82704,40068035,0,0x0,8
tick,0x7ff86ea82704,40070042,0,0x0,8
tick,0x7ff86ea82704,40071803,0,0x0,8
tick,0x7ff86ea82704,40073870,0,0x0,8
tick,0x7ff86ea82704,40076080,0,0x0,8
tick,0x7ff86ea82704,40077864,0,0x0,8
tick,0x7ff86ea82704,40079724,0,0x0,8
tick,0x7ff86ea82704,40082015,0,0x0,8
tick,0x7ff86ea82704,40083861,0,0x0,8
tick,0x7ff86ea82704,40085814,0,0x0,8
tick,0x7ff86ea82704,40087732,0,0x0,8
tick,0x7ff86ea82704,40089775,0,0x0,8
tick,0x7ff86ea82704,40093113,0,0x0,8
tick,0x7ff86ea82704,40093891,0,0x0,8
tick,0x7ff86ea82704,40095775,0,0x0,8
tick,0x7ff86ea82704,40097878,0,0x0,8
tick,0x7ff86ea82704,40099745,0,0x0,8
tick,0x7ff86ea82704,40101867,0,0x0,8
tick,0x7ff86ea82704,40103724,0,0x0,8
tick,0x7ff86ea82704,40105806,0,0x0,8
tick,0x7ff86ea82704,40108264,0,0x0,8
tick,0x7ff86ea82704,40110298,0,0x0,8
tick,0x7ff86ea82704,40111813,0,0x0,8
tick,0x7ff86ea82704,40113678,0,0x0,8
tick,0x7ff86ea82704,40115848,0,0x0,8
tick,0x7ff86ea82704,40117701,0,0x0,8
tick,0x7ff86ea82704,40119958,0,0x0,8
tick,0x7ff86ea82704,40121760,0,0x0,8
tick,0x7ff86ea82704,40123786,0,0x0,8
tick,0x7ff86ea82704,40126567,0,0x0,8
tick,0x7ff86ea82704,40127656,0,0x0,8
tick,0x7ff86ea82704,40129642,0,0x0,8
tick,0x7ff86ea82704,40131687,0,0x0,8
tick,0x7ff86ea82704,40133682,0,0x0,8
tick,0x7ff86ea82704,40135739,0,0x0,8
tick,0x7ff86ea82704,40137766,0,0x0,8
tick,0x7ff86ea82704,40139887,0,0x0,8
tick,0x7ff86ea82704,40142031,0,0x0,8
tick,0x7ff86ea82704,40143824,0,0x0,8
tick,0x7ff86ea82704,40145636,0,0x0,8
tick,0x7ff86ea82704,40147807,0,0x0,8
tick,0x7ff86ea82704,40149563,0,0x0,8
tick,0x7ff86ea82704,40151563,0,0x0,8
tick,0x7ff86ea82704,40153640,0,0x0,8
tick,0x7ff86ea82704,40155666,0,0x0,8
tick,0x7ff86ea82704,40158131,0,0x0,8
tick,0x7ff86ea82704,40160191,0,0x0,8
tick,0x7ff86ea82704,40161605,0,0x0,8
tick,0x7ff86ea82704,40163549,0,0x0,8
tick,0x7ff86ea82704,40165577,0,0x0,8
tick,0x7ff86ea82704,40167789,0,0x0,8
tick,0x7ff86ea82704,40169594,0,0x0,8
tick,0x7ff86ea82704,40171757,0,0x0,8
tick,0x7ff86ea82704,40173632,0,0x0,8
tick,0x7ff86ea82704,40177221,0,0x0,8
tick,0x7ff86ea82704,40178237,0,0x0,8
tick,0x7ff86ea82704,40179762,0,0x0,8
tick,0x7ff86ea82704,40181683,0,0x0,8
tick,0x7ff86ea82704,40183704,0,0x0,8
tick,0x7ff86ea82704,40185664,0,0x0,8
tick,0x7ff86ea82704,40187631,0,0x0,8
tick,0x7ff86ea82704,40189545,0,0x0,8
tick,0x7ff86ea82704,40192142,0,0x0,8
tick,0x7ff86ea82704,40193941,0,0x0,8
tick,0x7ff86ea82704,40195630,0,0x0,8
tick,0x7ff86ea82704,40197583,0,0x0,8
tick,0x7ff86ea82704,40199619,0,0x0,8
tick,0x7ff86ea82704,40201441,0,0x0,8
tick,0x7ff86ea82704,40204424,0,0x0,8
tick,0x7ff86ea82704,40205316,0,0x0,8
tick,0x7ff86ea82704,40208649,0,0x0,8
tick,0x7ff86ea82704,40211798,0,0x0,8
tick,0x7ff86ea82704,40213518,0,0x0,8
tick,0x7ff86ea82704,40215480,0,0x0,8
tick,0x7ff86ea82704,40217453,0,0x0,8
tick,0x7ff86ea82704,40219625,0,0x0,8
tick,0x7ff86ea82704,40221665,0,0x0,8
tick,0x7ff86ea82704,40223694,0,0x0,8
tick,0x7ff86ea82704,40226040,0,0x0,8
tick,0x7ff86ea82704,40228350,0,0x0,8
tick,0x7ff86ea82704,40230345,0,0x0,8
tick,0x7ff86ea82704,40232236,0,0x0,8
tick,0x7ff86ea82704,40234372,0,0x0,8
tick,0x7ff86ea82704,40236282,0,0x0,8
tick,0x7ff86ea82704,40238324,0,0x0,8
tick,0x7ff86ea82704,40240251,0,0x0,8
tick,0x7ff86ea82704,40243556,0,0x0,8
tick,0x7ff86ea82704,40245003,0,0x0,8
tick,0x7ff86ea82704,40246349,0,0x0,8
tick,0x7ff86ea82704,40248332,0,0x0,8
tick,0x7ff86ea82704,40250301,0,0x0,8
tick,0x7ff86ea82704,40252352,0,0x0,8
tick,0x7ff86ea82704,40254401,0,0x0,8
tick,0x7ff86ea82704,40256304,0,0x0,8
tick,0x7ff86ea82704,40259264,0,0x0,8
tick,0x7ff86ea82704,40260763,0,0x0,8
tick,0x7ff86ea82704,40262984,0,0x0,8
tick,0x7ff86ea82704,40264243,0,0x0,8
tick,0x7ff86ea82704,40266285,0,0x0,8
tick,0x7ff86ea82704,40268257,0,0x0,8
tick,0x7ff86ea82704,40270323,0,0x0,8
tick,0x7ff86ea82704,40272356,0,0x0,8
tick,0x7ff86ea82704,40275832,0,0x0,8
tick,0x7ff86ea82704,40276776,0,0x0,8
tick,0x7ff86ea82704,40278299,0,0x0,8
tick,0x7ff86ea82704,40280271,0,0x0,8
tick,0x7ff86ea82704,40282235,0,0x0,8
tick,0x7ff86ea82704,40284521,0,0x0,8
tick,0x7ff86ea82704,40286269,0,0x0,8
tick,0x7ff86ea82704,40288545,0,0x0,8
tick,0x7ff86ea82704,40290336,0,0x0,8
tick,0x7ff86ea82704,40292504,0,0x0,8
tick,0x7ff86ea82704,40294912,0,0x0,8
tick,0x7ff86ea82704,40296203,0,0x0,8
tick,0x7ff86ea82704,40298398,0,0x0,8
tick,0x7ff86ea82704,40300149,0,0x0,8
tick,0x7ff86ea82704,40302140,0,0x0,8
tick,0x7ff86ea82704,40304250,0,0x0,8
tick,0x7ff86ea82704,40306116,0,0x0,8
tick,0x7ff86ea82704,40308885,0,0x0,8
tick,0x7ff86ea82704,40311342,0,0x0,8
tick,0x7ff86ea82704,40312109,0,0x0,8
tick,0x7ff86ea82704,40314072,0,0x0,8
tick,0x7ff86ea82704,40316140,0,0x0,8
tick,0x7ff86ea82704,40318179,0,0x0,8
tick,0x7ff86ea82704,40320363,0,0x0,8
tick,0x7ff86ea82704,40322093,0,0x0,8
tick,0x7ff86ea82704,40324306,0,0x0,8
tick,0x7ff86ea82704,40327003,0,0x0,8
tick,0x7ff86ea82704,40328012,0,0x0,8
tick,0x7ff86ea82704,40330150,0,0x0,8
tick,0x7ff86ea82704,40332013,0,0x0,8
tick,0x7ff86ea82704,40334186,0,0x0,8
tick,0x7ff86ea82704,40335988,0,0x0,8
tick,0x7ff86ea82704,40338006,0,0x0,8
tick,0x7ff86ea82704,40340113,0,0x0,8
tick,0x7ff86ea82704,40342343,0,0x0,8
tick,0x7ff86ea82704,40344705,0,0x0,8
tick,0x7ff86ea82704,40346259,0,0x0,8
tick,0x7ff86ea82704,40348134,0,0x0,8
tick,0x7ff86ea82704,40350179,0,0x0,8
tick,0x7ff86ea82704,40352087,0,0x0,8
tick,0x7ff86ea82704,40354290,0,0x0,8
tick,0x7ff86ea82704,40356017,0,0x0,8
tick,0x7ff86ea82704,40358113,0,0x0,8
tick,0x7ff86ea82704,40360029,0,0x0,8
tick,0x7ff86ea82704,40362039,0,0x0,8
tick,0x7ff86ea82704,40364075,0,0x0,8
tick,0x7ff86ea82704,40366039,0,0x0,8
tick,0x7ff86ea82704,40368117,0,0x0,8
tick,0x7ff86ea82704,40369996,0,0x0,8
tick,0x7ff86ea82704,40372025,0,0x0,8
tick,0x7ff86ea82704,40374231,0,0x0,8
tick,0x7ff86ea82704,40376075,0,0x0,8
tick,0x7ff86ea82704,40377975,0,0x0,8
tick,0x7ff86ea82704,40379976,0,0x0,8
tick,0x7ff86ea82704,40382019,0,0x0,8
tick,0x7ff86ea82704,40383956,0,0x0,8
tick,0x7ff86ea82704,40386026,0,0x0,8
tick,0x7ff86ea82704,40388433,0,0x0,8
tick,0x7ff86ea82704,40389902,0,0x0,8
tick,0x7ff86ea82704,40391843,0,0x0,8
tick,0x7ff86ea82704,40394072,0,0x0,8
tick,0x7ff86ea82704,40395852,0,0x0,8
tick,0x7ff86ea82704,40397912,0,0x0,8
tick,0x7ff86ea82704,40399962,0,0x0,8
tick,0x7ff86ea82704,40401912,0,0x0,8
tick,0x7ff86ea82704,40403921,0,0x0,8
tick,0x7ff86ea82704,40405954,0,0x0,8
tick,0x7ff86ea82704,40407938,0,0x0,8
tick,0x7ff86ea82704,40411012,0,0x0,8
tick,0x7ff86ea82704,40413095,0,0x0,8
tick,0x7ff86ea82704,40415003,0,0x0,8
tick,0x7ff86ea82704,40417359,0,0x0,8
tick,0x7ff86ea82704,40419139,0,0x0,8
tick,0x7ff86ea82704,40420844,0,0x0,8
tick,0x7ff86ea82704,40422994,0,0x0,8
tick,0x7ff86ea82704,40425087,0,0x0,8
tick,0x7ff86ea82704,40427751,0,0x0,8
tick,0x7ff86ea82704,40428854,0,0x0,8
tick,0x7ff86ea82704,40430916,0,0x0,8
tick,0x7ff86ea82704,40432944,0,0x0,8
tick,0x7ff86ea82704,40434889,0,0x0,8
tick,0x7ff86ea82704,40436863,0,0x0,8
tick,0x7ff86ea82704,40439146,0,0x0,8
tick,0x7ff86ea82704,40441447,0,0x0,8
tick,0x7ff86ea82704,40442952,0,0x0,8
tick,0x7ff86ea82704,40444766,0,0x0,8
tick,0x7ff86ea82704,40446708,0,0x0,8
tick,0x7ff86ea82704,40448888,0,0x0,8
tick,0x7ff86ea82704,40450783,0,0x0,8
tick,0x7ff86ea82704,40452915,0,0x0,8
tick,0x7ff86ea82704,40454701,0,0x0,8
tick,0x7ff86ea82704,40457308,0,0x0,8
tick,0x7ff86ea82704,40459194,0,0x0,8
tick,0x7ff86ea82704,40461322,0,0x0,8
tick,0x7ff86ea82704,40462902,0,0x0,8
tick,0x7ff86ea82704,40464858,0,0x0,8
tick,0x7ff86ea82704,40466873,0,0x0,8
tick,0x7ff86ea82704,40468967,0,0x0,8
tick,0x7ff86ea82704,40470863,0,0x0,8
tick,0x7ff86ea82704,40472975,0,0x0,8
tick,0x7ff86ea82704,40475119,0,0x0,8
tick,0x7ff86ea82704,40476852,0,0x0,8
tick,0x7ff86ea82704,40478677,0,0x0,8
tick,0x7ff86ea82704,40480840,0,0x0,8
tick,0x7ff86ea82704,40482637,0,0x0,8
tick,0x7ff86ea82704,40484952,0,0x0,8
tick,0x7ff86ea82704,40486728,0,0x0,8
tick,0x7ff86ea82704,40489030,0,0x0,8
tick,0x7ff86ea82704,40491070,0,0x0,8
tick,0x7ff86ea82704,40492852,0,0x0,8
tick,0x7ff86ea82704,40494675,0,0x0,8
tick,0x7ff86ea82704,40496899,0,0x0,8
tick,0x7ff86ea82704,40498659,0,0x0,8
tick,0x7ff86ea82704,40501398,0,0x0,8
tick,0x7ff86ea82704,40503341,0,0x0,8
tick,0x7ff86ea82704,40505121,0,0x0,8
tick,0x7ff86ea82704,40508206,0,0x0,8
tick,0x7ff86ea82704,40510628,0,0x0,8
tick,0x7ff86ea82704,40512831,0,0x0,8
tick,0x7ff86ea82704,40514798,0,0x0,8
tick,0x7ff86ea82704,40516627,0,0x0,8
tick,0x7ff86ea82704,40518797,0,0x0,8
tick,0x7ff86ea82704,40520673,0,0x0,8
tick,0x7ff86ea82704,40522979,0,0x0,8
tick,0x7ff86ea82704,40525344,0,0x0,8
tick,0x7ff86ea82704,40527524,0,0x0,8
tick,0x7ff86ea82704,40528652,0,0x0,8
tick,0x7ff86ea82704,40530586,0,0x0,8
tick,0x7ff86ea82704,40532680,0,0x0,8
tick,0x7ff86ea82704,40534516,0,0x0,8
tick,0x7ff86ea82704,40536672,0,0x0,8
tick,0x7ff86ea82704,40538624,0,0x0,8
tick,0x7ff86ea82704,40541123,0,0x0,8
tick,0x7ff86ea82704,40543002,0,0x0,8
tick,0x7ff86ea82704,40544677,0,0x0,8
tick,0x7ff86ea82704,40546485,0,0x0,8
tick,0x7ff86ea82704,40548749,0,0x0,8
tick,0x7ff86ea82704,40550488,0,0x0,8
tick,0x7ff86ea82704,40552571,0,0x0,8
tick,0x7ff86ea82704,40555086,0,0x0,8
tick,0x7ff86ea82704,40556519,0,0x0,8
tick,0x7ff86ea82704,40559498,0,0x0,8
tick,0x7ff86ea82704,40560668,0,0x0,8
tick,0x7ff86ea82704,40562598,0,0x0,8
tick,0x7ff86ea82704,40564374,0,0x0,8
tick,0x7ff86ea82704,40566576,0,0x0,8
tick,0x7ff86ea82704,40568340,0,0x0,8
tick,0x7ff86ea82704,40570571,0,0x0,8
tick,0x7ff86ea82704,40572347,0,0x0,8
tick,0x7ff86ea82704,40574984,0,0x0,8
tick,0x7ff86ea82704,40576687,0,0x0,8
tick,0x7ff86ea82704,40578473,0,0x0,8
tick,0x7ff86ea82704,40580538,0,0x0,8
tick,0x7ff86ea82704,40583037,0,0x0,8
tick,0x7ff86ea82704,40584467,0,0x0,8
tick,0x7ff86ea82704,40586525,0,0x0,8
tick,0x7ff86ea82704,40588496,0,0x0,8
tick,0x7ff86ea82704,40590003,0,0x0,8
tick,0x7ff86ea82704,40592631,0,0x0,8
tick,0x7ff86ea82704,40594647,0,0x0,8
tick,0x7ff86ea82704,40596488,0,0x0,8
tick,0x7ff86ea82704,40598419,0,0x0,8
tick,0x7ff86ea82704,40600015,0,0x0,8
tick,0x7ff86ea82704,40602243,0,0x0,8
tick,0x7ff86ea82704,40604239,0,0x0,8
tick,0x7ff86ea82704,40606031,0,0x0,8
tick,0x7ff86ea82704,40609756,0,0x0,8
tick,0x7ff86ea82704,40611220,0,0x0,8
tick,0x7ff86ea82704,40613235,0,0x0,8
tick,0x7ff86ea82704,40614969,0,0x0,8
tick,0x7ff86ea82704,40617402,0,0x0,8
tick,0x7ff86ea82704,40619130,0,0x0,8
tick,0x7ff86ea82704,40621090,0,0x0,8
tick,0x7ff86ea82704,40622979,0,0x0,8
tick,0x7ff86ea82704,40627733,0,0x0,8
tick,0x7ff86ea82704,40627826,0,0x0,8
tick,0x7ff86ea82704,40631910,0,0x0,8
tick,0x7ff86ea82704,40632835,0,0x0,8
tick,0x7ff86ea82704,40635066,0,0x0,8
tick,0x7ff86ea82704,40636806,0,0x0,8
tick,0x7ff86ea82704,40638788,0,0x0,8
tick,0x7ff86ea82704,40640971,0,0x0,8
tick,0x7ff86ea82704,40643837,0,0x0,8
tick,0x7ff86ea82704,40645787,0,0x0,8
tick,0x7ff86ea82704,40647745,0,0x0,8
tick,0x7ff86ea82704,40649930,0,0x0,8
tick,0x7ff86ea82704,40652238,0,0x0,8
tick,0x7ff86ea82704,40653817,0,0x0,8
tick,0x7ff86ea82704,40655863,0,0x0,8
tick,0x7ff86ea82704,40659908,0,0x0,8
tick,0x7ff86ea82704,40661000,0,0x0,8
tick,0x7ff86ea82704,40661655,0,0x0,8
tick,0x7ff86ea82704,40663886,0,0x0,8
tick,0x7ff86ea82704,40666001,0,0x0,8
tick,0x7ff86ea82704,40667991,0,0x0,8
tick,0x7ff86ea82704,40670318,0,0x0,8
tick,0x7ff86ea82704,40671928,0,0x0,8
tick,0x7ff86ea82704,40673908,0,0x0,8
tick,0x7ff86ea82704,40677737,0,0x0,8
tick,0x7ff86ea82704,40677764,0,0x0,8
tick,0x7ff86ea82704,40679811,0,0x0,8
tick,0x7ff86ea82704,40681740,0,0x0,8
tick,0x7ff86ea82704,40683672,0,0x0,8
tick,0x7ff86ea82704,40685721,0,0x0,8
tick,0x7ff86ea82704,40687671,0,0x0,8
tick,0x7ff86ea82704,40689845,0,0x0,8
tick,0x7ff86ea82704,40692101,0,0x0,8
tick,0x7ff86ea82704,40693621,0,0x0,8
tick,0x7ff86ea82704,40695682,0,0x0,8
tick,0x7ff86ea82704,40697625,0,0x0,8
tick,0x7ff86ea82704,40699610,0,0x0,8
tick,0x7ff86ea82704,40701586,0,0x0,8
tick,0x7ff86ea82704,40703548,0,0x0,8
tick,0x7ff86ea82704,40705661,0,0x0,8
tick,0x7ff86ea82704,40707761,0,0x0,8
tick,0x7ff86ea82704,40710115,0,0x0,8
tick,0x7ff86ea82704,40711542,0,0x0,8
tick,0x7ff86ea82704,40713580,0,0x0,8
tick,0x7ff86ea82704,40715819,0,0x0,8
tick,0x7ff86ea82704,40717757,0,0x0,8
tick,0x7ff86ea82704,40719513,0,0x0,8
tick,0x7ff86ea82704,40721600,0,0x0,8
tick,0x7ff86ea82704,40723597,0,0x0,8
tick,0x7ff86ea82704,40725916,0,0x0,8
tick,0x7ff86ea82704,40727504,0,0x0,8
tick,0x7ff86ea82704,40729614,0,0x0,8
tick,0x7ff86ea82704,40731473,0,0x0,8
tick,0x7ff86ea82704,40733567,0,0x0,8
tick,0x7ff86ea82704,40735665,0,0x0,8
tick,0x7ff86ea82704,40738008,0,0x0,8
tick,0x7ff86ea82704,40739620,0,0x0,8
tick,0x7ff86ea82704,40741601,0,0x0,8
tick,0x7ff86ea82704,40743810,0,0x0,8
tick,0x7ff86ea82704,40745590,0,0x0,8
tick,0x7ff86ea82704,40747776,0,0x0,8
tick,0x7ff86ea82704,40749895,0,0x0,8
tick,0x7ff86ea82704,40752026,0,0x0,8
tick,0x7ff86ea82704,40754005,0,0x0,8
tick,0x7ff86ea82704,40755546,0,0x0,8
tick,0x7ff86ea82704,40757743,0,0x0,8
tick,0x7ff86ea82704,40760033,0,0x0,8
tick,0x7ff86ea82704,40762269,0,0x0,8
tick,0x7ff86ea82704,40763604,0,0x0,8
tick,0x7ff86ea82704,40765765,0,0x0,8
tick,0x7ff86ea82704,40767925,0,0x0,8
tick,0x7ff86ea82704,40769765,0,0x0,8
tick,0x7ff86ea82704,40771542,0,0x0,8
tick,0x7ff86ea82704,40773575,0,0x0,8
tick,0x7ff86ea82704,40775503,0,0x0,8
tick,0x7ff86ea82704,40777440,0,0x0,8
tick,0x7ff86ea82704,40779416,0,0x0,8
tick,0x7ff86ea82704,40781778,0,0x0,8
tick,0x7ff86ea82704,40783511,0,0x0,8
tick,0x7ff86ea82704,40785417,0,0x0,8
tick,0x7ff86ea82704,40787506,0,0x0,8
tick,0x7ff86ea82704,40789774,0,0x0,8
tick,0x7ff86ea82704,40791906,0,0x0,8
tick,0x7ff86ea82704,40793557,0,0x0,8
tick,0x7ff86ea82704,40795444,0,0x0,8
tick,0x7ff86ea82704,40797431,0,0x0,8
tick,0x7ff86ea82704,40799374,0,0x0,8
tick,0x7ff86ea82704,40801635,0,0x0,8
tick,0x7ff86ea82704,40803328,0,0x0,8
tick,0x7ff86ea82704,40805811,0,0x0,8
tick,0x7ff86ea82704,40807511,0,0x0,8
tick,0x7ff86ea82704,40809683,0,0x0,8
tick,0x7ff86ea82704,40811325,0,0x0,8
tick,0x7ff86ea82704,40813303,0,0x0,8
tick,0x7ff86ea82704,40815260,0,0x0,8
tick,0x7ff86ea82704,40817241,0,0x0,8
tick,0x7ff86ea82704,40819301,0,0x0,8
tick,0x7ff86ea82704,40821363,0,0x0,8
tick,0x7ff86ea82704,40823299,0,0x0,8
tick,0x7ff86ea82704,40825307,0,0x0,8
tick,0x7ff86ea82704,40827132,0,0x0,8
tick,0x7ff86ea82704,40829410,0,0x0,8
tick,0x7ff86ea82704,40831227,0,0x0,8
tick,0x7ff86ea82704,40833442,0,0x0,8
tick,0x7ff86ea82704,40835489,0,0x0,8
tick,0x7ff86ea82704,40837462,0,0x0,8
tick,0x7ff86ea82704,40839297,0,0x0,8
tick,0x7ff86ea82704,40841483,0,0x0,8
tick,0x7ff86ea82704,40843304,0,0x0,8
tick,0x7ff86ea82704,40845348,0,0x0,8
tick,0x7ff86ea82704,40847299,0,0x0,8
tick,0x7ff86ea82704,40849256,0,0x0,8
tick,0x7ff86ea82704,40851129,0,0x0,8
tick,0x7ff86ea82704,40853330,0,0x0,8
tick,0x7ff86ea82704,40855224,0,0x0,8
tick,0x7ff86ea82704,40857229,0,0x0,8
tick,0x7ff86ea82704,40859153,0,0x0,8
tick,0x7ff86ea82704,40861283,0,0x0,8
tick,0x7ff86ea82704,40863132,0,0x0,8
tick,0x7ff86ea82704,40865231,0,0x0,8
tick,0x7ff86ea82704,40867165,0,0x0,8
tick,0x7ff86ea82704,40869155,0,0x0,8
tick,0x7ff86ea82704,40871165,0,0x0,8
tick,0x7ff86ea82704,40873207,0,0x0,8
tick,0x7ff86ea82704,40875191,0,0x0,8
tick,0x7ff86ea82704,40877081,0,0x0,8
tick,0x7ff86ea82704,40879257,0,0x0,8
tick,0x7ff86ea82704,40881069,0,0x0,8
tick,0x7ff86ea82704,40883340,0,0x0,8
tick,0x7ff86ea82704,40885113,0,0x0,8
tick,0x7ff86ea82704,40887170,0,0x0,8
tick,0x7ff86ea82704,40889132,0,0x0,8
tick,0x7ff86ea82704,40891075,0,0x0,8
tick,0x7ff86ea82704,40893309,0,0x0,8
tick,0x7ff86ea82704,40895089,0,0x0,8
tick,0x7ff86ea82704,40897124,0,0x0,8
tick,0x7ff86ea82704,40899098,0,0x0,8
tick,0x7ff86ea82704,40901273,0,0x0,8
tick,0x7ff86ea82704,40902996,0,0x0,8
tick,0x7ff86ea82704,40905148,0,0x0,8
tick,0x7ff86ea82704,40907040,0,0x0,8
tick,0x7ff86ea82704,40909064,0,0x0,8
tick,0x7ff86ea82704,40911014,0,0x0,8
tick,0x7ff86ea82704,40913074,0,0x0,8
tick,0x7ff86ea82704,40914945,0,0x0,8
tick,0x7ff86ea82704,40917107,0,0x0,8
tick,0x7ff86ea82704,40918974,0,0x0,8
tick,0x7ff86ea82704,40921198,0,0x0,8
tick,0x7ff86ea82704,40923055,0,0x0,8
tick,0x7ff86ea82704,40925019,0,0x0,8
tick,0x7ff86ea82704,40927079,0,0x0,8
tick,0x7ff86ea82704,40928988,0,0x0,8
tick,0x7ff86ea82704,40930921,0,0x0,8
tick,0x7ff86ea82704,40933052,0,0x0,8
tick,0x7ff86ea82704,40934943,0,0x0,8
tick,0x7ff86ea82704,40937059,0,0x0,8
tick,0x7ff86ea82704,40938907,0,0x0,8
tick,0x7ff86ea82704,40941020,0,0x0,8
tick,0x7ff86ea82704,40942979,0,0x0,8
tick,0x7ff86ea82704,40945013,0,0x0,8
tick,0x7ff86ea82704,40946906,0,0x0,8
tick,0x7ff86ea82704,40948928,0,0x0,8
tick,0x7ff86ea82704,40950933,0,0x0,8
tick,0x7ff86ea82704,40953050,0,0x0,8
tick,0x7ff86ea82704,40955074,0,0x0,8
tick,0x7ff86ea82704,40956874,0,0x0,8
tick,0x7ff86ea82704,40959030,0,0x0,8
tick,0x7ff86ea82704,40960820,0,0x0,8
tick,0x7ff86ea82704,40963093,0,0x0,8
tick,0x7ff86ea82704,40964954,0,0x0,8
tick,0x7ff86ea82704,40966951,0,0x0,8
tick,0x7ff86ea82704,40968831,0,0x0,8
tick,0x7ff86ea82704,40970993,0,0x0,8
tick,0x7ff86ea82704,40972856,0,0x0,8
tick,0x7ff86ea82704,40975136,0,0x0,8
tick,0x7ff86ea82704,40976821,0,0x0,8
tick,0x7ff86ea82704,40978995,0,0x0,8
tick,0x7ff86ea82704,40980878,0,0x0,8
tick,0x7ff86ea82704,40983001,0,0x0,8
tick,0x7ff86ea82704,40984855,0,0x0,8
tick,0x7ff86ea82704,40987084,0,0x0,8
tick,0x7ff86ea82704,40988908,0,0x0,8
tick,0x7ff86ea82704,40990954,0,0x0,8
tick,0x7ff86ea82704,40993173,0,0x0,8
tick,0x7ff86ea82704,40994869,0,0x0,8
tick,0x7ff86ea82704,40996852,0,0x0,8
tick,0x7ff86ea82704,40998827,0,0x0,8
tick,0x7ff86ea82704,41000910,0,0x0,8
tick,0x7ff86ea82704,41002801,0,0x0,8
tick,0x7ff86ea82704,41004958,0,0x0,8
tick,0x7ff86ea82704,41006858,0,0x0,8
tick,0x7ff86ea82704,41008737,0,0x0,8
tick,0x7ff86ea82704,41010905,0,0x0,8
tick,0x7ff86ea82704,41012753,0,0x0,8
tick,0x7ff86ea82704,41014935,0,0x0,8
tick,0x7ff86ea82704,41016775,0,0x0,8
tick,0x7ff86ea82704,41018899,0,0x0,8
tick,0x7ff86ea82704,41020868,0,0x0,8
tick,0x7ff86ea82704,41023138,0,0x0,8
tick,0x7ff86ea82704,41025306,0,0x0,8
tick,0x7ff86ea82704,41027092,0,0x0,8
tick,0x7ff86ea82704,41028802,0,0x0,8
tick,0x7ff86ea82704,41030981,0,0x0,8
tick,0x7ff86ea82704,41032876,0,0x0,8
tick,0x7ff86ea82704,41034892,0,0x0,8
tick,0x7ff86ea82704,41036724,0,0x0,8
tick,0x7ff86ea82704,41038810,0,0x0,8
tick,0x7ff86ea82704,41041266,0,0x0,8
tick,0x7ff86ea82704,41046400,0,0x0,8
tick,0x7ff86ea82704,41046441,0,0x0,8
tick,0x7ff86ea82704,41047641,0,0x0,8
tick,0x7ff86ea82704,41049740,0,0x0,8
tick,0x7ff86ea82704,41051694,0,0x0,8
tick,0x7ff86ea82704,41053773,0,0x0,8
tick,0x7ff86ea82704,41055727,0,0x0,8
tick,0x7ff86ea82704,41058002,0,0x0,8
tick,0x7ff86ea82704,41061123,0,0x0,8
tick,0x7ff86ea82704,41062763,0,0x0,8
tick,0x7ff86ea82704,41064802,0,0x0,8
tick,0x7ff86ea82704,41066554,0,0x0,8
tick,0x7ff86ea82704,41068664,0,0x0,8
tick,0x7ff86ea82704,41070520,0,0x0,8
tick,0x7ff86ea82704,41072559,0,0x0,8
tick,0x7ff86ea82704,41074640,0,0x0,8
tick,0x7ff86ea82704,41077927,0,0x0,8
tick,0x7ff86ea82704,41078542,0,0x0,8
tick,0x7ff86ea82704,41080631,0,0x0,8
tick,0x7ff86ea82704,41082506,0,0x0,8
tick,0x7ff86ea82704,41084562,0,0x0,8
tick,0x7ff86ea82704,41086426,0,0x0,8
tick,0x7ff86ea82704,41088602,0,0x0,8
tick,0x7ff86ea82704,41090434,0,0x0,8
tick,0x7ff86ea82704,41093865,0,0x0,8
tick,0x7ff86ea82704,41095035,0,0x0,8
tick,0x7ff86ea82704,41097169,0,0x0,8
tick,0x7ff86ea82704,41098692,0,0x0,8
tick,0x7ff86ea82704,41100778,0,0x0,8
tick,0x7ff86ea82704,41102751,0,0x0,8
tick,0x7ff86ea82704,41104621,0,0x0,8
tick,0x7ff86ea82704,41106824,0,0x0,8
tick,0x7ff86ea82704,41111156,0,0x0,8
tick,0x7ff86ea82704,41111230,0,0x0,8
tick,0x7ff86ea82704,41112549,0,0x0,8
tick,0x7ff86ea82704,41114600,0,0x0,8
tick,0x7ff86ea82704,41116668,0,0x0,8
tick,0x7ff86ea82704,41118745,0,0x0,8
tick,0x7ff86ea82704,41120545,0,0x0,8
tick,0x7ff86ea82704,41122534,0,0x0,8
tick,0x7ff86ea82704,41126010,0,0x0,8
tick,0x7ff86ea82704,41127575,0,0x0,8
tick,0x7ff86ea82704,41128408,0,0x0,8
tick,0x7ff86ea82704,41148076,0,0x0,8
tick,0x7ff86ea82704,41148102,0,0x0,8
tick,0x7ff86ea82704,41148121,0,0x0,8
tick,0x7ff86ea82704,41167806,0,0x0,8
tick,0x7ff86ea82704,41167834,0,0x0,8
tick,0x7ff86ea82704,41167851,0,0x0,8
tick,0x7ff86ea82704,41167868,0,0x0,8
tick,0x7ff86ea82704,41167886,0,0x0,8
tick,0x7ff86ea82704,41167904,0,0x0,8
tick,0x7ff86ea82704,41167922,0,0x0,8
tick,0x7ff86ea82704,41167940,0,0x0,8
tick,0x7ff86ea82704,41169082,0,0x0,8
tick,0x7ff86ea82704,41170676,0,0x0,8
tick,0x7ff86ea82704,41172833,0,0x0,8
tick,0x7ff86ea82704,41175398,0,0x0,8
tick,0x7ff86ea82704,41178369,0,0x0,8
tick,0x7ff86ea82704,41180183,0,0x0,8
tick,0x7ff86ea82704,41182241,0,0x0,8
tick,0x7ff86ea82704,41184203,0,0x0,8
tick,0x7ff86ea82704,41186208,0,0x0,8
tick,0x7ff86ea82704,41188167,0,0x0,8
tick,0x7ff86ea82704,41190202,0,0x0,8
tick,0x7ff86ea82704,41192475,0,0x0,8
tick,0x7ff86ea82704,41194201,0,0x0,8
tick,0x7ff86ea82704,41196124,0,0x0,8
tick,0x7ff86ea82704,41198253,0,0x0,8
tick,0x7ff86ea82704,41200136,0,0x0,8
tick,0x7ff86ea82704,41202130,0,0x0,8
tick,0x7ff86ea82704,41204146,0,0x0,8
tick,0x7ff86ea82704,41206117,0,0x0,8
tick,0x7ff86ea82704,41208568,0,0x0,8
tick,0x7ff86ea82704,41210898,0,0x0,8
tick,0x7ff86ea82704,41212149,0,0x0,8
tick,0x7ff86ea82704,41214160,0,0x0,8
tick,0x7ff86ea82704,41216137,0,0x0,8
tick,0x7ff86ea82704,41218092,0,0x0,8
tick,0x7ff86ea82704,41220125,0,0x0,8
tick,0x7ff86ea82704,41222123,0,0x0,8
tick,0x7ff86ea82704,41224483,0,0x0,8
tick,0x7ff86ea82704,41226462,0,0x0,8
tick,0x7ff86ea82704,41228207,0,0x0,8
tick,0x7ff86ea82704,41230141,0,0x0,8
tick,0x7ff86ea82704,41232306,0,0x0,8
tick,0x7ff86ea82704,41234158,0,0x0,8
tick,0x7ff86ea82704,41236252,0,0x0,8
tick,0x7ff86ea82704,41238124,0,0x0,8
tick,0x7ff86ea82704,41240317,0,0x0,8
tick,0x7ff86ea82704,41242544,0,0x0,8
tick,0x7ff86ea82704,41244399,0,0x0,8
tick,0x7ff86ea82704,41246103,0,0x0,8
tick,0x7ff86ea82704,41248145,0,0x0,8
tick,0x7ff86ea82704,41250209,0,0x0,8
tick,0x7ff86ea82704,41252331,0,0x0,8
tick,0x7ff86ea82704,41254146,0,0x0,8
tick,0x7ff86ea82704,41256319,0,0x0,8
tick,0x7ff86ea82704,41258286,0,0x0,8
tick,0x7ff86ea82704,41260693,0,0x0,8
tick,0x7ff86ea82704,41262155,0,0x0,8
tick,0x7ff86ea82704,41264109,0,0x0,8
tick,0x7ff86ea82704,41266062,0,0x0,8
tick,0x7ff86ea82704,41268016,0,0x0,8
tick,0x7ff86ea82704,41270203,0,0x0,8
tick,0x7ff86ea82704,41271997,0,0x0,8
tick,0x7ff86ea82704,41274787,0,0x0,8
tick,0x7ff86ea82704,41277116,0,0x0,8
tick,0x7ff86ea82704,41278272,0,0x0,8
tick,0x7ff86ea82704,41280099,0,0x0,8
tick,0x7ff86ea82704,41282053,0,0x0,8
tick,0x7ff86ea82704,41284189,0,0x0,8
tick,0x7ff86ea82704,41286087,0,0x0,8
tick,0x7ff86ea82704,41288066,0,0x0,8
tick,0x7ff86ea82704,41290598,0,0x0,8
tick,0x7ff86ea82704,41293367,0,0x0,8
tick,0x7ff86ea82704,41295161,0,0x0,8
tick,0x7ff86ea82704,41297336,0,0x0,8
tick,0x7ff86ea82704,41299120,0,0x0,8
tick,0x7ff86ea82704,41301059,0,0x0,8
tick,0x7ff86ea82704,41303103,0,0x0,8
tick,0x7ff86ea82704,41305047,0,0x0,8
tick,0x7ff86ea82704,41307146,0,0x0,8
tick,0x7ff86ea82704,41310756,0,0x0,8
tick,0x7ff86ea82704,41313041,0,0x0,8
tick,0x7ff86ea82704,41315098,0,0x0,8
tick,0x7ff86ea82704,41317020,0,0x0,8
tick,0x7ff86ea82704,41318951,0,0x0,8
tick,0x7ff86ea82704,41320905,0,0x0,8
tick,0x7ff86ea82704,41322427,0,0x0,8
tick,0x7ff86ea82704,41324968,0,0x0,8
tick,0x7ff86ea82704,41327119,0,0x0,8
tick,0x7ff86ea82704,41328653,0,0x0,8
tick,0x7ff86ea82704,41330492,0,0x0,8
tick,0x7ff86ea82704,41332718,0,0x0,8
tick,0x7ff86ea82704,41334473,0,0x0,8
tick,0x7ff86ea82704,41336479,0,0x0,8
tick,0x7ff86ea82704,41338414,0,0x0,8
tick,0x7ff86ea82704,41340498,0,0x0,8
tick,0x7ff86ea82704,41343053,0,0x0,8
tick,0x7ff86ea82704,41344835,0,0x0,8
tick,0x7ff86ea82704,41346388,0,0x0,8
tick,0x7ff86ea82704,41348369,0,0x0,8
tick,0x7ff86ea82704,41350471,0,0x0,8
tick,0x7ff86ea82704,41352337,0,0x0,8
tick,0x7ff86ea82704,41354609,0,0x0,8
tick,0x7ff86ea82704,41356408,0,0x0,8
tick,0x7ff86ea82704,41358709,0,0x0,8
tick,0x7ff86ea82704,41361213,0,0x0,8
tick,0x7ff86ea82704,41362300,0,0x0,8
tick,0x7ff86ea82704,41364415,0,0x0,8
tick,0x7ff86ea82704,41366405,0,0x0,8
tick,0x7ff86ea82704,41368293,0,0x0,8
tick,0x7ff86ea82704,41370406,0,0x0,8
tick,0x7ff86ea82704,41372281,0,0x0,8
tick,0x7ff86ea82704,41374529,0,0x0,8
tick,0x7ff86ea82704,41376644,0,0x0,8
tick,0x7ff86ea82704,41378362,0,0x0,8
tick,0x7ff86ea82704,41380289,0,0x0,8
tick,0x7ff86ea82704,41382249,0,0x0,8
tick,0x7ff86ea82704,41384380,0,0x0,8
tick,0x7ff86ea82704,41386309,0,0x0,8
tick,0x7ff86ea82704,41388297,0,0x0,8
tick,0x7ff86ea82704,41390300,0,0x0,8
tick,0x7ff86ea82704,41392323,0,0x0,8
tick,0x7ff86ea82704,41394322,0,0x0,8
tick,0x7ff86ea82704,41396215,0,0x0,8
tick,0x7ff86ea82704,41398200,0,0x0,8
tick,0x7ff86ea82704,41400273,0,0x0,8
tick,0x7ff86ea82704,41402280,0,0x0,8
tick,0x7ff86ea82704,41404236,0,0x0,8
tick,0x7ff86ea82704,41406284,0,0x0,8
tick,0x7ff86ea82704,41408874,0,0x0,8
tick,0x7ff86ea82704,41410405,0,0x0,8
tick,0x7ff86ea82704,41412255,0,0x0,8
tick,0x7ff86ea82704,41414174,0,0x0,8
tick,0x7ff86ea82704,41416193,0,0x0,8
tick,0x7ff86ea82704,41418118,0,0x0,8
tick,0x7ff86ea82704,41420297,0,0x0,8
tick,0x7ff86ea82704,41422073,0,0x0,8
tick,0x7ff86ea82704,41424453,0,0x0,8
tick,0x7ff86ea82704,41426619,0,0x0,8
tick,0x7ff86ea82704,41428082,0,0x0,8
tick,0x7ff86ea82704,41430181,0,0x0,8
tick,0x7ff86ea82704,41432077,0,0x0,8
tick,0x7ff86ea82704,41434026,0,0x0,8
tick,0x7ff86ea82704,41436118,0,0x0,8
tick,0x7ff86ea82704,41438008,0,0x0,8
tick,0x7ff86ea82704,41440349,0,0x0,8
tick,0x7ff86ea82704,41442263,0,0x0,8
tick,0x7ff86ea82704,41444221,0,0x0,8
tick,0x7ff86ea82704,41446096,0,0x0,8
tick,0x7ff86ea82704,41448201,0,0x0,8
tick,0x7ff86ea82704,41450058,0,0x0,8
tick,0x7ff86ea82704,41452059,0,0x0,8
tick,0x7ff86ea82704,41454189,0,0x0,8
tick,0x7ff86ea82704,41456058,0,0x0,8
tick,0x7ff86ea82704,41458733,0,0x0,8
tick,0x7ff86ea82704,41460559,0,0x0,8
tick,0x7ff86ea82704,41462176,0,0x0,8
tick,0x7ff86ea82704,41464063,0,0x0,8
tick,0x7ff86ea82704,41466024,0,0x0,8
tick,0x7ff86ea82704,41468087,0,0x0,8
tick,0x7ff86ea82704,41469988,0,0x0,8
tick,0x7ff86ea82704,41472205,0,0x0,8
tick,0x7ff86ea82704,41474431,0,0x0,8
tick,0x7ff86ea82704,41476395,0,0x0,8
tick,0x7ff86ea82704,41478048,0,0x0,8
tick,0x7ff86ea82704,41480097,0,0x0,8
tick,0x7ff86ea82704,41481971,0,0x0,8
tick,0x7ff86ea82704,41483990,0,0x0,8
tick,0x7ff86ea82704,41486105,0,0x0,8
tick,0x7ff86ea82704,41487987,0,0x0,8
tick,0x7ff86ea82704,41490139,0,0x0,8
tick,0x7ff86ea82704,41493281,0,0x0,8
tick,0x7ff86ea82704,41494084,0,0x0,8
tick,0x7ff86ea82704,41495940,0,0x0,8
tick,0x7ff86ea82704,41498020,0,0x0,8
tick,0x7ff86ea82704,41500113,0,0x0,8
tick,0x7ff86ea82704,41502527,0,0x0,8
tick,0x7ff86ea82704,41504373,0,0x0,8
tick,0x7ff86ea82704,41506168,0,0x0,8
tick,0x7ff86ea82704,41508585,0,0x0,8
tick,0x7ff86ea82704,41510444,0,0x0,8
tick,0x7ff86ea82704,41512380,0,0x0,8
tick,0x7ff86ea82704,41514038,0,0x0,8
tick,0x7ff86ea82704,41516603,0,0x0,8
tick,0x7ff86ea82704,41518195,0,0x0,8
tick,0x7ff86ea82704,41520229,0,0x0,8
tick,0x7ff86ea82704,41522198,0,0x0,8
tick,0x7ff86ea82704,41524313,0,0x0,8
tick,0x7ff86ea82704,41526440,0,0x0,8
tick,0x7ff86ea82704,41527885,0,0x0,8
tick,0x7ff86ea82704,41529912,0,0x0,8
tick,0x7ff86ea82704,41532061,0,0x0,8
tick,0x7ff86ea82704,41533809,0,0x0,8
tick,0x7ff86ea82704,41536461,0,0x0,8
tick,0x7ff86ea82704,41537783,0,0x0,8
tick,0x7ff86ea82704,41540221,0,0x0,8
tick,0x7ff86ea82704,41541999,0,0x0,8
tick,0x7ff86ea82704,41543923,0,0x0,8
tick,0x7ff86ea82704,41545802,0,0x0,8
tick,0x7ff86ea82704,41547834,0,0x0,8
tick,0x7ff86ea82704,41549872,0,0x0,8
tick,0x7ff86ea82704,41551772,0,0x0,8
tick,0x7ff86ea82704,41553936,0,0x0,8
tick,0x7ff86ea82704,41555790,0,0x0,8
tick,0x7ff86ea82704,41558845,0,0x0,8
tick,0x7ff86ea82704,41560432,0,0x0,8
tick,0x7ff86ea82704,41562036,0,0x0,8
tick,0x7ff86ea82704,41565413,0,0x0,8
tick,0x7ff86ea82704,41567182,0,0x0,8
tick,0x7ff86ea82704,41568285,0,0x0,8
tick,0x7ff86ea82704,41573121,0,0x0,8
tick,0x7ff86ea82704,41573151,0,0x0,8
tick,0x7ff86ea82704,41577888,0,0x0,8
tick,0x7ff86ea82704,41577915,0,0x0,8
tick,0x7ff86ea82704,41577932,0,0x0,8
tick,0x7ff86ea82704,41580024,0,0x0,8
tick,0x7ff86ea82704,41582035,0,0x0,8
tick,0x7ff86ea82704,41583915,0,0x0,8
tick,0x7ff86ea82704,41586071,0,0x0,8
tick,0x7ff86ea82704,41587918,0,0x0,8
tick,0x7ff86ea82704,41589873,0,0x0,8
tick,0x7ff86ea82704,41593452,0,0x0,8
tick,0x7ff86ea82704,41594455,0,0x0,8
tick,0x7ff86ea82704,41595747,0,0x0,8
tick,0x7ff86ea82704,41598069,0,0x0,8
tick,0x7ff86ea82704,41599794,0,0x0,8
tick,0x7ff86ea82704,41601844,0,0x0,8
tick,0x7ff86ea82704,41603750,0,0x0,8
tick,0x7ff86ea82704,41605870,0,0x0,8
tick,0x7ff86ea82704,41607949,0,0x0,8
tick,0x7ff86ea82704,41610705,0,0x0,8
tick,0x7ff86ea82704,41611703,0,0x0,8
tick,0x7ff86ea82704,41613860,0,0x0,8
tick,0x7ff86ea82704,41615682,0,0x0,8
tick,0x7ff86ea82704,41617907,0,0x0,8
tick,0x7ff86ea82704,41619640,0,0x0,8
tick,0x7ff86ea82704,41621819,0,0x0,8
tick,0x7ff86ea82704,41623943,0,0x0,8
tick,0x7ff86ea82704,41628074,0,0x0,8
tick,0x7ff86ea82704,41629581,0,0x0,8
tick,0x7ff86ea82704,41630626,0,0x0,8
tick,0x7ff86ea82704,41632641,0,0x0,8
tick,0x7ff86ea82704,41634699,0,0x0,8
tick,0x7ff86ea82704,41636700,0,0x0,8
tick,0x7ff86ea82704,41638643,0,0x0,8
tick,0x7ff86ea82704,41640587,0,0x0,8
tick,0x7ff86ea82704,41643872,0,0x0,8
tick,0x7ff86ea82704,41645699,0,0x0,8
tick,0x7ff86ea82704,41647887,0,0x0,8
tick,0x7ff86ea82704,41649745,0,0x0,8
tick,0x7ff86ea82704,41651712,0,0x0,8
tick,0x7ff86ea82704,41653627,0,0x0,8
tick,0x7ff86ea82704,41655661,0,0x0,8
tick,0x7ff86ea82704,41658235,0,0x0,8
tick,0x7ff86ea82704,41660076,0,0x0,8
tick,0x7ff86ea82704,41661605,0,0x0,8
tick,0x7ff86ea82704,41663627,0,0x0,8
tick,0x7ff86ea82704,41665533,0,0x0,8
tick,0x7ff86ea82704,41667647,0,0x0,8
tick,0x7ff86ea82704,41669636,0,0x0,8
tick,0x7ff86ea82704,41671627,0,0x0,8
tick,0x7ff86ea82704,41673682,0,0x0,8
tick,0x7ff86ea82704,41676088,0,0x0,8
tick,0x7ff86ea82704,41677629,0,0x0,8
tick,0x7ff86ea82704,41679466,0,0x0,8
tick,0x7ff86ea82704,41681727,0,0x0,8
tick,0x7ff86ea82704,41683474,0,0x0,8
tick,0x7ff86ea82704,41685777,0,0x0,8
tick,0x7ff86ea82704,41687669,0,0x0,8
tick,0x7ff86ea82704,41689494,0,0x0,8
tick,0x7ff86ea82704,41692049,0,0x0,8
tick,0x7ff86ea82704,41693796,0,0x0,8
tick,0x7ff86ea82704,41695668,0,0x0,8
tick,0x7ff86ea82704,41697744,0,0x0,8
tick,0x7ff86ea82704,41699686,0,0x0,8
tick,0x7ff86ea82704,41701444,0,0x0,8
tick,0x7ff86ea82704,41703707,0,0x0,8
tick,0x7ff86ea82704,41705507,0,0x0,8
tick,0x7ff86ea82704,41707930,0,0x0,8
tick,0x7ff86ea82704,41710332,0,0x0,8
tick,0x7ff86ea82704,41711539,0,0x0,8
tick,0x7ff86ea82704,41713605,0,0x0,8
tick,0x7ff86ea82704,41715561,0,0x0,8
tick,0x7ff86ea82704,41717454,0,0x0,8
tick,0x7ff86ea82704,41719392,0,0x0,8
tick,0x7ff86ea82704,41721459,0,0x0,8
tick,0x7ff86ea82704,41723511,0,0x0,8
tick,0x7ff86ea82704,41726052,0,0x0,8
tick,0x7ff86ea82704,41727393,0,0x0,8
tick,0x7ff86ea82704,41729422,0,0x0,8
tick,0x7ff86ea82704,41731361,0,0x0,8
tick,0x7ff86ea82704,41733393,0,0x0,8
tick,0x7ff86ea82704,41735353,0,0x0,8
tick,0x7ff86ea82704,41737314,0,0x0,8
tick,0x7ff86ea82704,41739426,0,0x0,8
tick,0x7ff86ea82704,41741650,0,0x0,8
tick,0x7ff86ea82704,41743706,0,0x0,8
tick,0x7ff86ea82704,41745398,0,0x0,8
tick,0x7ff86ea82704,41747483,0,0x0,8
tick,0x7ff86ea82704,41749334,0,0x0,8
tick,0x7ff86ea82704,41751445,0,0x0,8
tick,0x7ff86ea82704,41753482,0,0x0,8
tick,0x7ff86ea82704,41755516,0,0x0,8
tick,0x7ff86ea82704,41757458,0,0x0,8
tick,0x7ff86ea82704,41759749,0,0x0,8
tick,0x7ff86ea82704,41761359,0,0x0,8
tick,0x7ff86ea82704,41763247,0,0x0,8
tick,0x7ff86ea82704,41765293,0,0x0,8
tick,0x7ff86ea82704,41767302,0,0x0,8
tick,0x7ff86ea82704,41769278,0,0x0,8
tick,0x7ff86ea82704,41771432,0,0x0,8
tick,0x7ff86ea82704,41773422,0,0x0,8
tick,0x7ff86ea82704,41776715,0,0x0,8
tick,0x7ff86ea82704,41777312,0,0x0,8
tick,0x7ff86ea82704,41779430,0,0x0,8
tick,0x7ff86ea82704,41781236,0,0x0,8
tick,0x7ff86ea82704,41783239,0,0x0,8
tick,0x7ff86ea82704,41785259,0,0x0,8
tick,0x7ff86ea82704,41787298,0,0x0,8
tick,0x7ff86ea82704,41789370,0,0x0,8
tick,0x7ff86ea82704,41791530,0,0x0,8
tick,0x7ff86ea82704,41793516,0,0x0,8
tick,0x7ff86ea82704,41795200,0,0x0,8
tick,0x7ff86ea82704,41797335,0,0x0,8
tick,0x7ff86ea82704,41799311,0,0x0,8
tick,0x7ff86ea82704,41801454,0,0x0,8
tick,0x7ff86ea82704,41803318,0,0x0,8
tick,0x7ff86ea82704,41805589,0,0x0,8
tick,0x7ff86ea82704,41807173,0,0x0,8
tick,0x7ff86ea82704,41809750,0,0x0,8
tick,0x7ff86ea82704,41811157,0,0x0,8
tick,0x7ff86ea82704,41813164,0,0x0,8
tick,0x7ff86ea82704,41815095,0,0x0,8
tick,0x7ff86ea82704,41817248,0,0x0,8
tick,0x7ff86ea82704,41819159,0,0x0,8
tick,0x7ff86ea82704,41821253,0,0x0,8
tick,0x7ff86ea82704,41823092,0,0x0,8
tick,0x7ff86ea82704,41825215,0,0x0,8
tick,0x7ff86ea82704,41827180,0,0x0,8
tick,0x7ff86ea82704,41829075,0,0x0,8
tick,0x7ff86ea82704,41831222,0,0x0,8
tick,0x7ff86ea82704,41833178,0,0x0,8
tick,0x7ff86ea82704,41835123,0,0x0,8
tick,0x7ff86ea82704,41837056,0,0x0,8
tick,0x7ff86ea82704,41839123,0,0x0,8
tick,0x7ff86ea82704,41841217,0,0x0,8
tick,0x7ff86ea82704,41843362,0,0x0,8
tick,0x7ff86ea82704,41845234,0,0x0,8
tick,0x7ff86ea82704,41847250,0,0x0,8
tick,0x7ff86ea82704,41848993,0,0x0,8
tick,0x7ff86ea82704,41851168,0,0x0,8
tick,0x7ff86ea82704,41852997,0,0x0,8
tick,0x7ff86ea82704,41855013,0,0x0,8
tick,0x7ff86ea82704,41856956,0,0x0,8
tick,0x7ff86ea82704,41859373,0,0x0,8
tick,0x7ff86ea82704,41860992,0,0x0,8
tick,0x7ff86ea82704,41863030,0,0x0,8
tick,0x7ff86ea82704,41864992,0,0x0,8
tick,0x7ff86ea82704,41867054,0,0x0,8
tick,0x7ff86ea82704,41868958,0,0x0,8
tick,0x7ff86ea82704,41871074,0,0x0,8
tick,0x7ff86ea82704,41872886,0,0x0,8
tick,0x7ff86ea82704,41875030,0,0x0,8
tick,0x7ff86ea82704,41876911,0,0x0,8
tick,0x7ff86ea82704,41878988,0,0x0,8
tick,0x7ff86ea82704,41880985,0,0x0,8
tick,0x7ff86ea82704,41883018,0,0x0,8
tick,0x7ff86ea82704,41884891,0,0x0,8
tick,0x7ff86ea82704,41887025,0,0x0,8
tick,0x7ff86ea82704,41888923,0,0x0,8
tick,0x7ff86ea82704,41890949,0,0x0,8
tick,0x7ff86ea82704,41892969,0,0x0,8
tick,0x7ff86ea82704,41894889,0,0x0,8
tick,0x7ff86ea82704,41896936,0,0x0,8
tick,0x7ff86ea82704,41898858,0,0x0,8
tick,0x7ff86ea82704,41900893,0,0x0,8
tick,0x7ff86ea82704,41902854,0,0x0,8
tick,0x7ff86ea82704,41905008,0,0x0,8
tick,0x7ff86ea82704,41906879,0,0x0,8
tick,0x7ff86ea82704,41908957,0,0x0,8
tick,0x7ff86ea82704,41910926,0,0x0,8
tick,0x7ff86ea82704,41912955,0,0x0,8
tick,0x7ff86ea82704,41914763,0,0x0,8
tick,0x7ff86ea82704,41916946,0,0x0,8
tick,0x7ff86ea82704,41918860,0,0x0,8
tick,0x7ff86ea82704,41920914,0,0x0,8
tick,0x7ff86ea82704,41922774,0,0x0,8
tick,0x7ff86ea82704,41924841,0,0x0,8
tick,0x7ff86ea82704,41926800,0,0x0,8
tick,0x7ff86ea82704,41928917,0,0x0,8
tick,0x7ff86ea82704,41930821,0,0x0,8
tick,0x7ff86ea82704,41932848,0,0x0,8
tick,0x7ff86ea82704,41934840,0,0x0,8
tick,0x7ff86ea82704,41936812,0,0x0,8
tick,0x7ff86ea82704,41938853,0,0x0,8
tick,0x7ff86ea82704,41940858,0,0x0,8
tick,0x7ff86ea82704,41942856,0,0x0,8
tick,0x7ff86ea82704,41944834,0,0x0,8
tick,0x7ff86ea82704,41946680,0,0x0,8
tick,0x7ff86ea82704,41948808,0,0x0,8
tick,0x7ff86ea82704,41950742,0,0x0,8
tick,0x7ff86ea82704,41952720,0,0x0,8
tick,0x7ff86ea82704,41954747,0,0x0,8
tick,0x7ff86ea82704,41956711,0,0x0,8
tick,0x7ff86ea82704,41958793,0,0x0,8
tick,0x7ff86ea82704,41960772,0,0x0,8
tick,0x7ff86ea82704,41962750,0,0x0,8
tick,0x7ff86ea82704,41964752,0,0x0,8
tick,0x7ff86ea82704,41966784,0,0x0,8
tick,0x7ff86ea82704,41968730,0,0x0,8
tick,0x7ff86ea82704,41970684,0,0x0,8
tick,0x7ff86ea82704,41972643,0,0x0,8
tick,0x7ff86ea82704,41974683,0,0x0,8
tick,0x7ff86ea82704,41976581,0,0x0,8
tick,0x7ff86ea82704,41978717,0,0x0,8
tick,0x7ff86ea82704,41980665,0,0x0,8
tick,0x7ff86ea82704,41982710,0,0x0,8
tick,0x7ff86ea82704,41984645,0,0x0,8
tick,0x7ff86ea82704,41986609,0,0x0,8
tick,0x7ff86ea82704,41988671,0,0x0,8
tick,0x7ff86ea82704,41990624,0,0x0,8
tick,0x7ff86ea82704,41992683,0,0x0,8
tick,0x7ff86ea82704,41994586,0,0x0,8
tick,0x7ff86ea82704,41996597,0,0x0,8
tick,0x7ff86ea82704,41998628,0,0x0,8
tick,0x7ff86ea82704,42000583,0,0x0,8
tick,0x7ff86ea82704,42002627,0,0x0,8
tick,0x7ff86ea82704,42004704,0,0x0,8
tick,0x7ff86ea82704,42006614,0,0x0,8
tick,0x7ff86ea82704,42008663,0,0x0,8
tick,0x7ff86ea82704,42010586,0,0x0,8
tick,0x7ff86ea82704,42012634,0,0x0,8
tick,0x7ff86ea82704,42014570,0,0x0,8
tick,0x7ff86ea82704,42016640,0,0x0,8
tick,0x7ff86ea82704,42018563,0,0x0,8
tick,0x7ff86ea82704,42020690,0,0x0,8
tick,0x7ff86ea82704,42022543,0,0x0,8
tick,0x7ff86ea82704,42024665,0,0x0,8
tick,0x7ff86ea82704,42026591,0,0x0,8
tick,0x7ff86ea82704,42028585,0,0x0,8
tick,0x7ff86ea82704,42030566,0,0x0,8
tick,0x7ff86ea82704,42032572,0,0x0,8
tick,0x7ff86ea82704,42034514,0,0x0,8
tick,0x7ff86ea82704,42036538,0,0x0,8
tick,0x7ff86ea82704,42038592,0,0x0,8
tick,0x7ff86ea82704,42040441,0,0x0,8
tick,0x7ff86ea82704,42042555,0,0x0,8
tick,0x7ff86ea82704,42044527,0,0x0,8
tick,0x7ff86ea82704,42046535,0,0x0,8
tick,0x7ff86ea82704,42048481,0,0x0,8
tick,0x7ff86ea82704,42050518,0,0x0,8
tick,0x7ff86ea82704,42052444,0,0x0,8
tick,0x7ff86ea82704,42054444,0,0x0,8
tick,0x7ff86ea82704,42056418,0,0x0,8
tick,0x7ff86ea82704,42058400,0,0x0,8
tick,0x7ff86ea82704,42060424,0,0x0,8
tick,0x7ff86ea82704,42062355,0,0x0,8
tick,0x7ff86ea82704,42064516,0,0x0,8
tick,0x7ff86ea82704,42066527,0,0x0,8
tick,0x7ff86ea82704,42068554,0,0x0,8
tick,0x7ff86ea82704,42070706,0,0x0,8
tick,0x7ff86ea82704,42072406,0,0x0,8
tick,0x7ff86ea82704,42074490,0,0x0,8
tick,0x7ff86ea82704,42076417,0,0x0,8
tick,0x7ff86ea82704,42078408,0,0x0,8
tick,0x7ff86ea82704,42080455,0,0x0,8
tick,0x7ff86ea82704,42082401,0,0x0,8
tick,0x7ff86ea82704,42084459,0,0x0,8
tick,0x7ff86ea82704,42086436,0,0x0,8
tick,0x7ff86ea82704,42088412,0,0x0,8
tick,0x7ff86ea82704,42090440,0,0x0,8
tick,0x7ff86ea82704,42092411,0,0x0,8
tick,0x7ff86ea82704,42094393,0,0x0,8
tick,0x7ff86ea82704,42096365,0,0x0,8
tick,0x7ff86ea82704,42098368,0,0x0,8
tick,0x7ff86ea82704,42100533,0,0x0,8
tick,0x7ff86ea82704,42102448,0,0x0,8
tick,0x7ff86ea82704,42104526,0,0x0,8
tick,0x7ff86ea82704,42106433,0,0x0,8
tick,0x7ff86ea82704,42108441,0,0x0,8
tick,0x7ff86ea82704,42110409,0,0x0,8
tick,0x7ff86ea82704,42112365,0,0x0,8
tick,0x7ff86ea82704,42114550,0,0x0,8
tick,0x7ff86ea82704,42116284,0,0x0,8
tick,0x7ff86ea82704,42118468,0,0x0,8
tick,0x7ff86ea82704,42120256,0,0x0,8
tick,0x7ff86ea82704,42122473,0,0x0,8
tick,0x7ff86ea82704,42124460,0,0x0,8
tick,0x7ff86ea82704,42126430,0,0x0,8
tick,0x7ff86ea82704,42128370,0,0x0,8
tick,0x7ff86ea82704,42130294,0,0x0,8
tick,0x7ff86ea82704,42132267,0,0x0,8
tick,0x7ff86ea82704,42134355,0,0x0,8
tick,0x7ff86ea82704,42136246,0,0x0,8
tick,0x7ff86ea82704,42138331,0,0x0,8
tick,0x7ff86ea82704,42140465,0,0x0,8
tick,0x7ff86ea82704,42142326,0,0x0,8
tick,0x7ff86ea82704,42144484,0,0x0,8
tick,0x7ff86ea82704,42146269,0,0x0,8
tick,0x7ff86ea82704,42148315,0,0x0,8
tick,0x7ff86ea82704,42150266,0,0x0,8
tick,0x7ff86ea82704,42152325,0,0x0,8
tick,0x7ff86ea82704,42154256,0,0x0,8
tick,0x7ff86ea82704,42156220,0,0x0,8
tick,0x7ff86ea82704,42158254,0,0x0,8
tick,0x7ff86ea82704,42160250,0,0x0,8
tick,0x7ff86ea82704,42162304,0,0x0,8
tick,0x7ff86ea82704,42164337,0,0x0,8
tick,0x7ff86ea82704,42166311,0,0x0,8
tick,0x7ff86ea82704,42168265,0,0x0,8
tick,0x7ff86ea82704,42170256,0,0x0,8
tick,0x7ff86ea82704,42172360,0,0x0,8
tick,0x7ff86ea82704,42174211,0,0x0,8
tick,0x7ff86ea82704,42176197,0,0x0,8
tick,0x7ff86ea82704,42178186,0,0x0,8
tick,0x7ff86ea82704,42180135,0,0x0,8
tick,0x7ff86ea82704,42182313,0,0x0,8
tick,0x7ff86ea82704,42184271,0,0x0,8
tick,0x7ff86ea82704,42186233,0,0x0,8
tick,0x7ff86ea82704,42188135,0,0x0,8
tick,0x7ff86ea82704,42190234,0,0x0,8
tick,0x7ff86ea82704,42192138,0,0x0,8
tick,0x7ff86ea82704,42194211,0,0x0,8
tick,0x7ff86ea82704,42196081,0,0x0,8
tick,0x7ff86ea82704,42198281,0,0x0,8
tick,0x7ff86ea82704,42200150,0,0x0,8
tick,0x7ff86ea82704,42202178,0,0x0,8
tick,0x7ff86ea82704,42204031,0,0x0,8
tick,0x7ff86ea82704,42206155,0,0x0,8
tick,0x7ff86ea82704,42208031,0,0x0,8
tick,0x7ff86ea82704,42210185,0,0x0,8
tick,0x7ff86ea82704,42212015,0,0x0,8
tick,0x7ff86ea82704,42214141,0,0x0,8
tick,0x7ff86ea82704,42216251,0,0x0,8
tick,0x7ff86ea82704,42218088,0,0x0,8
tick,0x7ff86ea82704,42219978,0,0x0,8
tick,0x7ff86ea82704,42222135,0,0x0,8
tick,0x7ff86ea82704,42224050,0,0x0,8
tick,0x7ff86ea82704,42226019,0,0x0,8
tick,0x7ff86ea82704,42228134,0,0x0,8
tick,0x7ff86ea82704,42230083,0,0x0,8
tick,0x7ff86ea82704,42231993,0,0x0,8
tick,0x7ff86ea82704,42234091,0,0x0,8
tick,0x7ff86ea82704,42236017,0,0x0,8
tick,0x7ff86ea82704,42238023,0,0x0,8
tick,0x7ff86ea82704,42239979,0,0x0,8
tick,0x7ff86ea82704,42241862,0,0x0,8
tick,0x7ff86ea82704,42243931,0,0x0,8
tick,0x7ff86ea82704,42246044,0,0x0,8
tick,0x7ff86ea82704,42247916,0,0x0,8
tick,0x7ff86ea82704,42249978,0,0x0,8
tick,0x7ff86ea82704,42251938,0,0x0,8
tick,0x7ff86ea82704,42253908,0,0x0,8
tick,0x7ff86ea82704,42255982,0,0x0,8
tick,0x7ff86ea82704,42257944,0,0x0,8
tick,0x7ff86ea82704,42260050,0,0x0,8
tick,0x7ff86ea82704,42261943,0,0x0,8
tick,0x7ff86ea82704,42263952,0,0x0,8
tick,0x7ff86ea82704,42266009,0,0x0,8
tick,0x7ff86ea82704,42267896,0,0x0,8
tick,0x7ff86ea82704,42269928,0,0x0,8
tick,0x7ff86ea82704,42272120,0,0x0,8
tick,0x7ff86ea82704,42273882,0,0x0,8
tick,0x7ff86ea82704,42276068,0,0x0,8
tick,0x7ff86ea82704,42277842,0,0x0,8
tick,0x7ff86ea82704,42279870,0,0x0,8
tick,0x7ff86ea82704,42281785,0,0x0,8
tick,0x7ff86ea82704,42283879,0,0x0,8
tick,0x7ff86ea82704,42285774,0,0x0,8
tick,0x7ff86ea82704,42287920,0,0x0,8
tick,0x7ff86ea82704,42289813,0,0x0,8
tick,0x7ff86ea82704,42291922,0,0x0,8
tick,0x7ff86ea82704,42293817,0,0x0,8
tick,0x7ff86ea82704,42295897,0,0x0,8
tick,0x7ff86ea82704,42297860,0,0x0,8
tick,0x7ff86ea82704,42299852,0,0x0,8
tick,0x7ff86ea82704,42301963,0,0x0,8
tick,0x7ff86ea82704,42303758,0,0x0,8
tick,0x7ff86ea82704,42305874,0,0x0,8
tick,0x7ff86ea82704,42307795,0,0x0,8
tick,0x7ff86ea82704,42309947,0,0x0,8
tick,0x7ff86ea82704,42311723,0,0x0,8
tick,0x7ff86ea82704,42313819,0,0x0,8
tick,0x7ff86ea82704,42315797,0,0x0,8
tick,0x7ff86ea82704,42317801,0,0x0,8
tick,0x7ff86ea82704,42319747,0,0x0,8
tick,0x7ff86ea82704,42321783,0,0x0,8
tick,0x7ff86ea82704,42323784,0,0x0,8
tick,0x7ff86ea82704,42325825,0,0x0,8
tick,0x7ff86ea82704,42327764,0,0x0,8
tick,0x7ff86ea82704,42329709,0,0x0,8
tick,0x7ff86ea82704,42331830,0,0x0,8
tick,0x7ff86ea82704,42333851,0,0x0,8
tick,0x7ff86ea82704,42335794,0,0x0,8
tick,0x7ff86ea82704,42337660,0,0x0,8
tick,0x7ff86ea82704,42339825,0,0x0,8
tick,0x7ff86ea82704,42341683,0,0x0,8
tick,0x7ff86ea82704,42343765,0,0x0,8
tick,0x7ff86ea82704,42345659,0,0x0,8
tick,0x7ff86ea82704,42348090,0,0x0,8
tick,0x7ff86ea82704,42349617,0,0x0,8
tick,0x7ff86ea82704,42351813,0,0x0,8
tick,0x7ff86ea82704,42353663,0,0x0,8
tick,0x7ff86ea82704,42355684,0,0x0,8
tick,0x7ff86ea82704,42357783,0,0x0,8
tick,0x7ff86ea82704,42359672,0,0x0,8
tick,0x7ff86ea82704,42361622,0,0x0,8
tick,0x7ff86ea82704,42363745,0,0x0,8
tick,0x7ff86ea82704,42365695,0,0x0,8
tick,0x7ff86ea82704,42367665,0,0x0,8
tick,0x7ff86ea82704,42369547,0,0x0,8
tick,0x7ff86ea82704,42371674,0,0x0,8
tick,0x7ff86ea82704,42373796,0,0x0,8
tick,0x7ff86ea82704,42375673,0,0x0,8
tick,0x7ff86ea82704,42377759,0,0x0,8
tick,0x7ff86ea82704,42379618,0,0x0,8
tick,0x7ff86ea82704,42381658,0,0x0,8
tick,0x7ff86ea82704,42383578,0,0x0,8
tick,0x7ff86ea82704,42385562,0,0x0,8
tick,0x7ff86ea82704,42387539,0,0x0,8
tick,0x7ff86ea82704,42389639,0,0x0,8
tick,0x7ff86ea82704,42391619,0,0x0,8
tick,0x7ff86ea82704,42393700,0,0x0,8
tick,0x7ff86ea82704,42395563,0,0x0,8
tick,0x7ff86ea82704,42397693,0,0x0,8
tick,0x7ff86ea82704,42399483,0,0x0,8
tick,0x7ff86ea82704,42401705,0,0x0,8
tick,0x7ff86ea82704,42403465,0,0x0,8
tick,0x7ff86ea82704,42405671,0,0x0,8
tick,0x7ff86ea82704,42407442,0,0x0,8
tick,0x7ff86ea82704,42409587,0,0x0,8
tick,0x7ff86ea82704,42411537,0,0x0,8
tick,0x7ff86ea82704,42413602,0,0x0,8
tick,0x7ff86ea82704,42415486,0,0x0,8
tick,0x7ff86ea82704,42417554,0,0x0,8
tick,0x7ff86ea82704,42419555,0,0x0,8
tick,0x7ff86ea82704,42421558,0,0x0,8
tick,0x7ff86ea82704,42423678,0,0x0,8
tick,0x7ff86ea82704,42425417,0,0x0,8
tick,0x7ff86ea82704,42427537,0,0x0,8
tick,0x7ff86ea82704,42429543,0,0x0,8
tick,0x7ff86ea82704,42431540,0,0x0,8
tick,0x7ff86ea82704,42433534,0,0x0,8
tick,0x7ff86ea82704,42435414,0,0x0,8
tick,0x7ff86ea82704,42437431,0,0x0,8
tick,0x7ff86ea82704,42439570,0,0x0,8
tick,0x7ff86ea82704,42441436,0,0x0,8
tick,0x7ff86ea82704,42443438,0,0x0,8
tick,0x7ff86ea82704,42445506,0,0x0,8
tick,0x7ff86ea82704,42447418,0,0x0,8
tick,0x7ff86ea82704,42449497,0,0x0,8
tick,0x7ff86ea82704,42451386,0,0x0,8
tick,0x7ff86ea82704,42453434,0,0x0,8
tick,0x7ff86ea82704,42455483,0,0x0,8
tick,0x7ff86ea82704,42457429,0,0x0,8
tick,0x7ff86ea82704,42459432,0,0x0,8
tick,0x7ff86ea82704,42461360,0,0x0,8
tick,0x7ff86ea82704,42463358,0,0x0,8
tick,0x7ff86ea82704,42465319,0,0x0,8
tick,0x7ff86ea82704,42467365,0,0x0,8
tick,0x7ff86ea82704,42469338,0,0x0,8
tick,0x7ff86ea82704,42471582,0,0x0,8
tick,0x7ff86ea82704,42473408,0,0x0,8
tick,0x7ff86ea82704,42475388,0,0x0,8
tick,0x7ff86ea82704,42477277,0,0x0,8
tick,0x7ff86ea82704,42479361,0,0x0,8
tick,0x7ff86ea82704,42481230,0,0x0,8
tick,0x7ff86ea82704,42483405,0,0x0,8
tick,0x7ff86ea82704,42485400,0,0x0,8
tick,0x7ff86ea82704,42487422,0,0x0,8
tick,0x7ff86ea82704,42489378,0,0x0,8
tick,0x7ff86ea82704,42491400,0,0x0,8
tick,0x7ff86ea82704,42493335,0,0x0,8
tick,0x7ff86ea82704,42495302,0,0x0,8
tick,0x7ff86ea82704,42497486,0,0x0,8
tick,0x7ff86ea82704,42499220,0,0x0,8
tick,0x7ff86ea82704,42501464,0,0x0,8
tick,0x7ff86ea82704,42503204,0,0x0,8
tick,0x7ff86ea82704,42505528,0,0x0,8
tick,0x7ff86ea82704,42507397,0,0x0,8
tick,0x7ff86ea82704,42509312,0,0x0,8
tick,0x7ff86ea82704,42511312,0,0x0,8
tick,0x7ff86ea82704,42513234,0,0x0,8
tick,0x7ff86ea82704,42515342,0,0x0,8
tick,0x7ff86ea82704,42517621,0,0x0,8
tick,0x7ff86ea82704,42519215,0,0x0,8
tick,0x7ff86ea82704,42521213,0,0x0,8
tick,0x7ff86ea82704,42523328,0,0x0,8
tick,0x7ff86ea82704,42525313,0,0x0,8
tick,0x7ff86ea82704,42527160,0,0x0,8
tick,0x7ff86ea82704,42529397,0,0x0,8
tick,0x7ff86ea82704,42531284,0,0x0,8
tick,0x7ff86ea82704,42533223,0,0x0,8
tick,0x7ff86ea82704,42535209,0,0x0,8
tick,0x7ff86ea82704,42537279,0,0x0,8
tick,0x7ff86ea82704,42539226,0,0x0,8
tick,0x7ff86ea82704,42541093,0,0x0,8
tick,0x7ff86ea82704,42545560,0,0x0,8
tick,0x7ff86ea82704,42547410,0,0x0,8
tick,0x7ff86ea82704,42549432,0,0x0,8
tick,0x7ff86ea82704,42551347,0,0x0,8
tick,0x7ff86ea82704,42553430,0,0x0,8
tick,0x7ff86ea82704,42555316,0,0x0,8
tick,0x7ff86ea82704,42557305,0,0x0,8
tick,0x7ff86ea82704,42559213,0,0x0,8
tick,0x7ff86ea82704,42561443,0,0x0,8
tick,0x7ff86ea82704,42563242,0,0x0,8
tick,0x7ff86ea82704,42565301,0,0x0,8
tick,0x7ff86ea82704,42567371,0,0x0,8
tick,0x7ff86ea82704,42569403,0,0x0,8
tick,0x7ff86ea82704,42571233,0,0x0,8
tick,0x7ff86ea82704,42573493,0,0x0,8
tick,0x7ff86ea82704,42575370,0,0x0,8
tick,0x7ff86ea82704,42577368,0,0x0,8
tick,0x7ff86ea82704,42579282,0,0x0,8
tick,0x7ff86ea82704,42581194,0,0x0,8
tick,0x7ff86ea82704,42583542,0,0x0,8
tick,0x7ff86ea82704,42585454,0,0x0,8
tick,0x7ff86ea82704,42587500,0,0x0,8
tick,0x7ff86ea82704,42589267,0,0x0,8
tick,0x7ff86ea82704,42591334,0,0x0,8
tick,0x7ff86ea82704,42593189,0,0x0,8
tick,0x7ff86ea82704,42595274,0,0x0,8
tick,0x7ff86ea82704,42597216,0,0x0,8
tick,0x7ff86ea82704,42599305,0,0x0,8
tick,0x7ff86ea82704,42601219,0,0x0,8
tick,0x7ff86ea82704,42603157,0,0x0,8
tick,0x7ff86ea82704,42605421,0,0x0,8
tick,0x7ff86ea82704,42607279,0,0x0,8
tick,0x7ff86ea82704,42609180,0,0x0,8
tick,0x7ff86ea82704,42611462,0,0x0,8
tick,0x7ff86ea82704,42613200,0,0x0,8
tick,0x7ff86ea82704,42615332,0,0x0,8
tick,0x7ff86ea82704,42617121,0,0x0,8
tick,0x7ff86ea82704,42619091,0,0x0,8
tick,0x7ff86ea82704,42621255,0,0x0,8
tick,0x7ff86ea82704,42623110,0,0x0,8
tick,0x7ff86ea82704,42625092,0,0x0,8
tick,0x7ff86ea82704,42627188,0,0x0,8
tick,0x7ff86ea82704,42629179,0,0x0,8
tick,0x7ff86ea82704,42631075,0,0x0,8
tick,0x7ff86ea82704,42633084,0,0x0,8
tick,0x7ff86ea82704,42635122,0,0x0,8
tick,0x7ff86ea82704,42636956,0,0x0,8
tick,0x7ff86ea82704,42639151,0,0x0,8
tick,0x7ff86ea82704,42641006,0,0x0,8
tick,0x7ff86ea82704,42643226,0,0x0,8
tick,0x7ff86ea82704,42645087,0,0x0,8
tick,0x7ff86ea82704,42647165,0,0x0,8
tick,0x7ff86ea82704,42648999,0,0x0,8
tick,0x7ff86ea82704,42651035,0,0x0,8
tick,0x7ff86ea82704,42653053,0,0x0,8
tick,0x7ff86ea82704,42655048,0,0x0,8
tick,0x7ff86ea82704,42657080,0,0x0,8
tick,0x7ff86ea82704,42659088,0,0x0,8
tick,0x7ff86ea82704,42661135,0,0x0,8
tick,0x7ff86ea82704,42663173,0,0x0,8
tick,0x7ff86ea82704,42665140,0,0x0,8
tick,0x7ff86ea82704,42667056,0,0x0,8
tick,0x7ff86ea82704,42669058,0,0x0,8
tick,0x7ff86ea82704,42670948,0,0x0,8
tick,0x7ff86ea82704,42673295,0,0x0,8
tick,0x7ff86ea82704,42675094,0,0x0,8
tick,0x7ff86ea82704,42676950,0,0x0,8
tick,0x7ff86ea82704,42678986,0,0x0,8
tick,0x7ff86ea82704,42681010,0,0x0,8
tick,0x7ff86ea82704,42682917,0,0x0,8
tick,0x7ff86ea82704,42684878,0,0x0,8
tick,0x7ff86ea82704,42687027,0,0x0,8
tick,0x7ff86ea82704,42688770,0,0x0,8
tick,0x7ff86ea82704,42690703,0,0x0,8
tick,0x7ff86ea82704,42692855,0,0x0,8
tick,0x7ff86ea82704,42694906,0,0x0,8
tick,0x7ff86ea82704,42696857,0,0x0,8
tick,0x7ff86ea82704,42698851,0,0x0,8
tick,0x7ff86ea82704,42700906,0,0x0,8
tick,0x7ff86ea82704,42702874,0,0x0,8
tick,0x7ff86ea82704,42704986,0,0x0,8
tick,0x7ff86ea82704,42706730,0,0x0,8
tick,0x7ff86ea82704,42708858,0,0x0,8
tick,0x7ff86ea82704,42710874,0,0x0,8
tick,0x7ff86ea82704,42712880,0,0x0,8
tick,0x7ff86ea82704,42714899,0,0x0,8
tick,0x7ff86ea82704,42716750,0,0x0,8
tick,0x7ff86ea82704,42718885,0,0x0,8
tick,0x7ff86ea82704,42720826,0,0x0,8
tick,0x7ff86ea82704,42722775,0,0x0,8
tick,0x7ff86ea82704,42724769,0,0x0,8
tick,0x7ff86ea82704,42726699,0,0x0,8
tick,0x7ff86ea82704,42728769,0,0x0,8
tick,0x7ff86ea82704,42730808,0,0x0,8
tick,0x7ff86ea82704,42732872,0,0x0,8
tick,0x7ff86ea82704,42734678,0,0x0,8
tick,0x7ff86ea82704,42736787,0,0x0,8
tick,0x7ff86ea82704,42738855,0,0x0,8
tick,0x7ff86ea82704,42740791,0,0x0,8
tick,0x7ff86ea82704,42742749,0,0x0,8
tick,0x7ff86ea82704,42744815,0,0x0,8
tick,0x7ff86ea82704,42746824,0,0x0,8
tick,0x7ff86ea82704,42748741,0,0x0,8
tick,0x7ff86ea82704,42750769,0,0x0,8
tick,0x7ff86ea82704,42752753,0,0x0,8
tick,0x7ff86ea82704,42754741,0,0x0,8
tick,0x7ff86ea82704,42756646,0,0x0,8
tick,0x7ff86ea82704,42758849,0,0x0,8
tick,0x7ff86ea82704,42760652,0,0x0,8
tick,0x7ff86ea82704,42762683,0,0x0,8
tick,0x7ff86ea82704,42764798,0,0x0,8
tick,0x7ff86ea82704,42766652,0,0x0,8
tick,0x7ff86ea82704,42768709,0,0x0,8
tick,0x7ff86ea82704,42770715,0,0x0,8
tick,0x7ff86ea82704,42772697,0,0x0,8
tick,0x7ff86ea82704,42774697,0,0x0,8
tick,0x7ff86ea82704,42776717,0,0x0,8
tick,0x7ff86ea82704,42778617,0,0x0,8
tick,0x7ff86ea82704,42780831,0,0x0,8
tick,0x7ff86ea82704,42782787,0,0x0,8
tick,0x7ff86ea82704,42784626,0,0x0,8
tick,0x7ff86ea82704,42786709,0,0x0,8
tick,0x7ff86ea82704,42788602,0,0x0,8
tick,0x7ff86ea82704,42790587,0,0x0,8
tick,0x7ff86ea82704,42792572,0,0x0,8
tick,0x7ff86ea82704,42794511,0,0x0,8
tick,0x7ff86ea82704,42796606,0,0x0,8
tick,0x7ff86ea82704,42798552,0,0x0,8
tick,0x7ff86ea82704,42800524,0,0x0,8
tick,0x7ff86ea82704,42802655,0,0x0,8
tick,0x7ff86ea82704,42804566,0,0x0,8
tick,0x7ff86ea82704,42806570,0,0x0,8
tick,0x7ff86ea82704,42808665,0,0x0,8
tick,0x7ff86ea82704,42810547,0,0x0,8
tick,0x7ff86ea82704,42812636,0,0x0,8
tick,0x7ff86ea82704,42814608,0,0x0,8
tick,0x7ff86ea82704,42816686,0,0x0,8
tick,0x7ff86ea82704,42818635,0,0x0,8
tick,0x7ff86ea82704,42820557,0,0x0,8
tick,0x7ff86ea82704,42822547,0,0x0,8
tick,0x7ff86ea82704,42824520,0,0x0,8
tick,0x7ff86ea82704,42826651,0,0x0,8
tick,0x7ff86ea82704,42828547,0,0x0,8
tick,0x7ff86ea82704,42830516,0,0x0,8
tick,0x7ff86ea82704,42832424,0,0x0,8
tick,0x7ff86ea82704,42834480,0,0x0,8
tick,0x7ff86ea82704,42836495,0,0x0,8
tick,0x7ff86ea82704,42838584,0,0x0,8
tick,0x7ff86ea82704,42840419,0,0x0,8
tick,0x7ff86ea82704,42842596,0,0x0,8
tick,0x7ff86ea82704,42844396,0,0x0,8
tick,0x7ff86ea82704,42846529,0,0x0,8
tick,0x7ff86ea82704,42848577,0,0x0,8
tick,0x7ff86ea82704,42850457,0,0x0,8
tick,0x7ff86ea82704,42852516,0,0x0,8
tick,0x7ff86ea82704,42854452,0,0x0,8
tick,0x7ff86ea82704,42856443,0,0x0,8
tick,0x7ff86ea82704,42858456,0,0x0,8
tick,0x7ff86ea82704,42860525,0,0x0,8
tick,0x7ff86ea82704,42862364,0,0x0,8
tick,0x7ff86ea82704,42864389,0,0x0,8
tick,0x7ff86ea82704,42866404,0,0x0,8
tick,0x7ff86ea82704,42868389,0,0x0,8
tick,0x7ff86ea82704,42870465,0,0x0,8
tick,0x7ff86ea82704,42872453,0,0x0,8
tick,0x7ff86ea82704,42874431,0,0x0,8
tick,0x7ff86ea82704,42876391,0,0x0,8
tick,0x7ff86ea82704,42878457,0,0x0,8
tick,0x7ff86ea82704,42880347,0,0x0,8
tick,0x7ff86ea82704,42882479,0,0x0,8
tick,0x7ff86ea82704,42884493,0,0x0,8
tick,0x7ff86ea82704,42886445,0,0x0,8
tick,0x7ff86ea82704,42888432,0,0x0,8
tick,0x7ff86ea82704,42890506,0,0x0,8
tick,0x7ff86ea82704,42892305,0,0x0,8
tick,0x7ff86ea82704,42894404,0,0x0,8
tick,0x7ff86ea82704,42896299,0,0x0,8
tick,0x7ff86ea82704,42898443,0,0x0,8
tick,0x7ff86ea82704,42900339,0,0x0,8
tick,0x7ff86ea82704,42902425,0,0x0,8
tick,0x7ff86ea82704,42904333,0,0x0,8
tick,0x7ff86ea82704,42906335,0,0x0,8
tick,0x7ff86ea82704,42908396,0,0x0,8
tick,0x7ff86ea82704,42910399,0,0x0,8
tick,0x7ff86ea82704,42912263,0,0x0,8
tick,0x7ff86ea82704,42914417,0,0x0,8
tick,0x7ff86ea82704,42916183,0,0x0,8
tick,0x7ff86ea82704,42918254,0,0x0,8
tick,0x7ff86ea82704,42920332,0,0x0,8
tick,0x7ff86ea82704,42922239,0,0x0,8
tick,0x7ff86ea82704,42924275,0,0x0,8
tick,0x7ff86ea82704,42926219,0,0x0,8
tick,0x7ff86ea82704,42928317,0,0x0,8
tick,0x7ff86ea82704,42930230,0,0x0,8
tick,0x7ff86ea82704,42932265,0,0x0,8
tick,0x7ff86ea82704,42934219,0,0x0,8
tick,0x7ff86ea82704,42936421,0,0x0,8
tick,0x7ff86ea82704,42938101,0,0x0,8
tick,0x7ff86ea82704,42940267,0,0x0,8
tick,0x7ff86ea82704,42942210,0,0x0,8
tick,0x7ff86ea82704,42944327,0,0x0,8
tick,0x7ff86ea82704,42946169,0,0x0,8
tick,0x7ff86ea82704,42948291,0,0x0,8
tick,0x7ff86ea82704,42950175,0,0x0,8
tick,0x7ff86ea82704,42952319,0,0x0,8
tick,0x7ff86ea82704,42954158,0,0x0,8
tick,0x7ff86ea82704,42956153,0,0x0,8
tick,0x7ff86ea82704,42958092,0,0x0,8
tick,0x7ff86ea82704,42960210,0,0x0,8
tick,0x7ff86ea82704,42962149,0,0x0,8
tick,0x7ff86ea82704,42964266,0,0x0,8
tick,0x7ff86ea82704,42966193,0,0x0,8
tick,0x7ff86ea82704,42968222,0,0x0,8
tick,0x7ff86ea82704,42970152,0,0x0,8
tick,0x7ff86ea82704,42972120,0,0x0,8
tick,0x7ff86ea82704,42974121,0,0x0,8
tick,0x7ff86ea82704,42976230,0,0x0,8
tick,0x7ff86ea82704,42978064,0,0x0,8
tick,0x7ff86ea82704,42980096,0,0x0,8
tick,0x7ff86ea82704,42982125,0,0x0,8
tick,0x7ff86ea82704,42984199,0,0x0,8
tick,0x7ff86ea82704,42986079,0,0x0,8
tick,0x7ff86ea82704,42988158,0,0x0,8
tick,0x7ff86ea82704,42990168,0,0x0,8
tick,0x7ff86ea82704,42992128,0,0x0,8
tick,0x7ff86ea82704,42994029,0,0x0,8
tick,0x7ff86ea82704,42996121,0,0x0,8
tick,0x7ff86ea82704,42998079,0,0x0,8
tick,0x7ff86ea82704,43000136,0,0x0,8
tick,0x7ff86ea82704,43002227,0,0x0,8
tick,0x7ff86ea82704,43004009,0,0x0,8
tick,0x7ff86ea82704,43006347,0,0x0,8
tick,0x7ff86ea82704,43007995,0,0x0,8
tick,0x7ff86ea82704,43010129,0,0x0,8
tick,0x7ff86ea82704,43011980,0,0x0,8
tick,0x7ff86ea82704,43014175,0,0x0,8
tick,0x7ff86ea82704,43015983,0,0x0,8
tick,0x7ff86ea82704,43017965,0,0x0,8
tick,0x7ff86ea82704,43019966,0,0x0,8
tick,0x7ff86ea82704,43022042,0,0x0,8
tick,0x7ff86ea82704,43024052,0,0x0,8
tick,0x7ff86ea82704,43025966,0,0x0,8
tick,0x7ff86ea82704,43027967,0,0x0,8
tick,0x7ff86ea82704,43029954,0,0x0,8
tick,0x7ff86ea82704,43032003,0,0x0,8
tick,0x7ff86ea82704,43033966,0,0x0,8
tick,0x7ff86ea82704,43035845,0,0x0,8
tick,0x7ff86ea82704,43037947,0,0x0,8
tick,0x7ff86ea82704,43039922,0,0x0,8
tick,0x7ff86ea82704,43042019,0,0x0,8
tick,0x7ff86ea82704,43043888,0,0x0,8
tick,0x7ff86ea82704,43045953,0,0x0,8
tick,0x7ff86ea82704,43047994,0,0x0,8
tick,0x7ff86ea82704,43049940,0,0x0,8
tick,0x7ff86ea82704,43051934,0,0x0,8
tick,0x7ff86ea82704,43053946,0,0x0,8
tick,0x7ff86ea82704,43055885,0,0x0,8
tick,0x7ff86ea82704,43057947,0,0x0,8
tick,0x7ff86ea82704,43059946,0,0x0,8
tick,0x7ff86ea82704,43061936,0,0x0,8
tick,0x7ff86ea82704,43063954,0,0x0,8
tick,0x7ff86ea82704,43065967,0,0x0,8
tick,0x7ff86ea82704,43068047,0,0x0,8
tick,0x7ff86ea82704,43069947,0,0x0,8
tick,0x7ff86ea82704,43072030,0,0x0,8
tick,0x7ff86ea82704,43073867,0,0x0,8
tick,0x7ff86ea82704,43075855,0,0x0,8
tick,0x7ff86ea82704,43077901,0,0x0,8
tick,0x7ff86ea82704,43079946,0,0x0,8
tick,0x7ff86ea82704,43081893,0,0x0,8
tick,0x7ff86ea82704,43083846,0,0x0,8
tick,0x7ff86ea82704,43085788,0,0x0,8
tick,0x7ff86ea82704,43087910,0,0x0,8
tick,0x7ff86ea82704,43089845,0,0x0,8
tick,0x7ff86ea82704,43091709,0,0x0,8
tick,0x7ff86ea82704,43093636,0,0x0,8
tick,0x7ff86ea82704,43095872,0,0x0,8
tick,0x7ff86ea82704,43097745,0,0x0,8
tick,0x7ff86ea82704,43099858,0,0x0,8
tick,0x7ff86ea82704,43101742,0,0x0,8
tick,0x7ff86ea82704,43103815,0,0x0,8
tick,0x7ff86ea82704,43105847,0,0x0,8
tick,0x7ff86ea82704,43107934,0,0x0,8
tick,0x7ff86ea82704,43109726,0,0x0,8
tick,0x7ff86ea82704,43111712,0,0x0,8
tick,0x7ff86ea82704,43113678,0,0x0,8
tick,0x7ff86ea82704,43115775,0,0x0,8
tick,0x7ff86ea82704,43117651,0,0x0,8
tick,0x7ff86ea82704,43119775,0,0x0,8
tick,0x7ff86ea82704,43121769,0,0x0,8
tick,0x7ff86ea82704,43123685,0,0x0,8
tick,0x7ff86ea82704,43125785,0,0x0,8
tick,0x7ff86ea82704,43127706,0,0x0,8
tick,0x7ff86ea82704,43129763,0,0x0,8
tick,0x7ff86ea82704,43131694,0,0x0,8
tick,0x7ff86ea82704,43133682,0,0x0,8
tick,0x7ff86ea82704,43135705,0,0x0,8
tick,0x7ff86ea82704,43137757,0,0x0,8
tick,0x7ff86ea82704,43139628,0,0x0,8
tick,0x7ff86ea82704,43141691,0,0x0,8
tick,0x7ff86ea82704,43143689,0,0x0,8
tick,0x7ff86ea82704,43145840,0,0x0,8
tick,0x7ff86ea82704,43147608,0,0x0,8
tick,0x7ff86ea82704,43149817,0,0x0,8
tick,0x7ff86ea82704,43151619,0,0x0,8
tick,0x7ff86ea82704,43153744,0,0x0,8
tick,0x7ff86ea82704,43155720,0,0x0,8
tick,0x7ff86ea82704,43157616,0,0x0,8
tick,0x7ff86ea82704,43159617,0,0x0,8
tick,0x7ff86ea82704,43161665,0,0x0,8
tick,0x7ff86ea82704,43163622,0,0x0,8
tick,0x7ff86ea82704,43165682,0,0x0,8
tick,0x7ff86ea82704,43167637,0,0x0,8
tick,0x7ff86ea82704,43169676,0,0x0,8
tick,0x7ff86ea82704,43171693,0,0x0,8
tick,0x7ff86ea82704,43173729,0,0x0,8
tick,0x7ff86ea82704,43175584,0,0x0,8
tick,0x7ff86ea82704,43177580,0,0x0,8
tick,0x7ff86ea82704,43179697,0,0x0,8
tick,0x7ff86ea82704,43181645,0,0x0,8
tick,0x7ff86ea82704,43183590,0,0x0,8
tick,0x7ff86ea82704,43185610,0,0x0,8
tick,0x7ff86ea82704,43187668,0,0x0,8
tick,0x7ff86ea82704,43189489,0,0x0,8
tick,0x7ff86ea82704,43191560,0,0x0,8
tick,0x7ff86ea82704,43193494,0,0x0,8
tick,0x7ff86ea82704,43195705,0,0x0,8
tick,0x7ff86ea82704,43197629,0,0x0,8
tick,0x7ff86ea82704,43199575,0,0x0,8
tick,0x7ff86ea82704,43201503,0,0x0,8
tick,0x7ff86ea82704,43203472,0,0x0,8
tick,0x7ff86ea82704,43205540,0,0x0,8
tick,0x7ff86ea82704,43207780,0,0x0,8
tick,0x7ff86ea82704,43209689,0,0x0,8
tick,0x7ff86ea82704,43211444,0,0x0,8
tick,0x7ff86ea82704,43213406,0,0x0,8
tick,0x7ff86ea82704,43215560,0,0x0,8
tick,0x7ff86ea82704,43217496,0,0x0,8
tick,0x7ff86ea82704,43219505,0,0x0,8
tick,0x7ff86ea82704,43221473,0,0x0,8
tick,0x7ff86ea82704,43223479,0,0x0,8
tick,0x7ff86ea82704,43225433,0,0x0,8
tick,0x7ff86ea82704,43227469,0,0x0,8
tick,0x7ff86ea82704,43229410,0,0x0,8
tick,0x7ff86ea82704,43231464,0,0x0,8
tick,0x7ff86ea82704,43233426,0,0x0,8
tick,0x7ff86ea82704,43235400,0,0x0,8
tick,0x7ff86ea82704,43237397,0,0x0,8
tick,0x7ff86ea82704,43239379,0,0x0,8
tick,0x7ff86ea82704,43241380,0,0x0,8
tick,0x7ff86ea82704,43243349,0,0x0,8
tick,0x7ff86ea82704,43245477,0,0x0,8
tick,0x7ff86ea82704,43247391,0,0x0,8
tick,0x7ff86ea82704,43249396,0,0x0,8
tick,0x7ff86ea82704,43251376,0,0x0,8
tick,0x7ff86ea82704,43253399,0,0x0,8
tick,0x7ff86ea82704,43255374,0,0x0,8
tick,0x7ff86ea82704,43257346,0,0x0,8
tick,0x7ff86ea82704,43259573,0,0x0,8
tick,0x7ff86ea82704,43261511,0,0x0,8
tick,0x7ff86ea82704,43263497,0,0x0,8
tick,0x7ff86ea82704,43265545,0,0x0,8
tick,0x7ff86ea82704,43267457,0,0x0,8
tick,0x7ff86ea82704,43269329,0,0x0,8
tick,0x7ff86ea82704,43271747,0,0x0,8
tick,0x7ff86ea82704,43273718,0,0x0,8
tick,0x7ff86ea82704,43275356,0,0x0,8
tick,0x7ff86ea82704,43277622,0,0x0,8
tick,0x7ff86ea82704,43279410,0,0x0,8
tick,0x7ff86ea82704,43281284,0,0x0,8
tick,0x7ff86ea82704,43283471,0,0x0,8
tick,0x7ff86ea82704,43285429,0,0x0,8
tick,0x7ff86ea82704,43287628,0,0x0,8
tick,0x7ff86ea82704,43289250,0,0x0,8
tick,0x7ff86ea82704,43291449,0,0x0,8
tick,0x7ff86ea82704,43293970,0,0x0,8
tick,0x7ff86ea82704,43296915,0,0x0,8
tick,0x7ff86ea82704,43297256,0,0x0,8
tick,0x7ff86ea82704,43299414,0,0x0,8
tick,0x7ff86ea82704,43301337,0,0x0,8
tick,0x7ff86ea82704,43303500,0,0x0,8
tick,0x7ff86ea82704,43305278,0,0x0,8
tick,0x7ff86ea82704,43307269,0,0x0,8
tick,0x7ff86ea82704,43310860,0,0x0,8
tick,0x7ff86ea82704,43312315,0,0x0,8
tick,0x7ff86ea82704,43314350,0,0x0,8
tick,0x7ff86ea82704,43316280,0,0x0,8
tick,0x7ff86ea82704,43318360,0,0x0,8
tick,0x7ff86ea82704,43320514,0,0x0,8
tick,0x7ff86ea82704,43322326,0,0x0,8
tick,0x7ff86ea82704,43324385,0,0x0,8
tick,0x7ff86ea82704,43327995,0,0x0,8
tick,0x7ff86ea82704,43328704,0,0x0,8
tick,0x7ff86ea82704,43330183,0,0x0,8
tick,0x7ff86ea82704,43332230,0,0x0,8
tick,0x7ff86ea82704,43334233,0,0x0,8
tick,0x7ff86ea82704,43336092,0,0x0,8
tick,0x7ff86ea82704,43338215,0,0x0,8
tick,0x7ff86ea82704,43340111,0,0x0,8
tick,0x7ff86ea82704,43344050,0,0x0,8
tick,0x7ff86ea82704,43344920,0,0x0,8
tick,0x7ff86ea82704,43346022,0,0x0,8
tick,0x7ff86ea82704,43348050,0,0x0,8
tick,0x7ff86ea82704,43350091,0,0x0,8
tick,0x7ff86ea82704,43351925,0,0x0,8
tick,0x7ff86ea82704,43354079,0,0x0,8
tick,0x7ff86ea82704,43356100,0,0x0,8
tick,0x7ff86ea82704,43358226,0,0x0,8
tick,0x7ff86ea82704,43360732,0,0x0,8
tick,0x7ff86ea82704,43361966,0,0x0,8
tick,0x7ff86ea82704,43363898,0,0x0,8
tick,0x7ff86ea82704,43365872,0,0x0,8
tick,0x7ff86ea82704,43367964,0,0x0,8
tick,0x7ff86ea82704,43369822,0,0x0,8
tick,0x7ff86ea82704,43371862,0,0x0,8
tick,0x7ff86ea82704,43373849,0,0x0,8
tick,0x7ff86ea82704,43377530,0,0x0,8
tick,0x7ff86ea82704,43378931,0,0x0,8
tick,0x7ff86ea82704,43381168,0,0x0,8
tick,0x7ff86ea82704,43382903,0,0x0,8
tick,0x7ff86ea82704,43384841,0,0x0,8
tick,0x7ff86ea82704,43386816,0,0x0,8
tick,0x7ff86ea82704,43388876,0,0x0,8
tick,0x7ff86ea82704,43390799,0,0x0,8
tick,0x7ff86ea82704,43393881,0,0x0,8
tick,0x7ff86ea82704,43395918,0,0x0,8
tick,0x7ff86ea82704,43397972,0,0x0,8
tick,0x7ff86ea82704,43399832,0,0x0,8
tick,0x7ff86ea82704,43402006,0,0x0,8
tick,0x7ff86ea82704,43403831,0,0x0,8
tick,0x7ff86ea82704,43405924,0,0x0,8
tick,0x7ff86ea82704,43408839,0,0x0,8
tick,0x7ff86ea82704,43410608,0,0x0,8
tick,0x7ff86ea82704,43411756,0,0x0,8
tick,0x7ff86ea82704,43413854,0,0x0,8
tick,0x7ff86ea82704,43415787,0,0x0,8
tick,0x7ff86ea82704,43417783,0,0x0,8
tick,0x7ff86ea82704,43419819,0,0x0,8
tick,0x7ff86ea82704,43421740,0,0x0,8
tick,0x7ff86ea82704,43423807,0,0x0,8
tick,0x7ff86ea82704,43426368,0,0x0,8
tick,0x7ff86ea82704,43427936,0,0x0,8
tick,0x7ff86ea82704,43429941,0,0x0,8
tick,0x7ff86ea82704,43432307,0,0x0,8
tick,0x7ff86ea82704,43433709,0,0x0,8
tick,0x7ff86ea82704,43435829,0,0x0,8
tick,0x7ff86ea82704,43437772,0,0x0,8
tick,0x7ff86ea82704,43439773,0,0x0,8
tick,0x7ff86ea82704,43442184,0,0x0,8
tick,0x7ff86ea82704,43443729,0,0x0,8
tick,0x7ff86ea82704,43445737,0,0x0,8
tick,0x7ff86ea82704,43447909,0,0x0,8
tick,0x7ff86ea82704,43449723,0,0x0,8
tick,0x7ff86ea82704,43451696,0,0x0,8
tick,0x7ff86ea82704,43453710,0,0x0,8
tick,0x7ff86ea82704,43455704,0,0x0,8
tick,0x7ff86ea82704,43457799,0,0x0,8
tick,0x7ff86ea82704,43460180,0,0x0,8
tick,0x7ff86ea82704,43461657,0,0x0,8
tick,0x7ff86ea82704,43463813,0,0x0,8
tick,0x7ff86ea82704,43465798,0,0x0,8
tick,0x7ff86ea82704,43467880,0,0x0,8
tick,0x7ff86ea82704,43469741,0,0x0,8
tick,0x7ff86ea82704,43471759,0,0x0,8
tick,0x7ff86ea82704,43473721,0,0x0,8
tick,0x7ff86ea82704,43476524,0,0x0,8
tick,0x7ff86ea82704,43478895,0,0x0,8
tick,0x7ff86ea82704,43480699,0,0x0,8
tick,0x7ff86ea82704,43483000,0,0x0,8
tick,0x7ff86ea82704,43484663,0,0x0,8
tick,0x7ff86ea82704,43486933,0,0x0,8
tick,0x7ff86ea82704,43488744,0,0x0,8
tick,0x7ff86ea82704,43490898,0,0x0,8
tick,0x7ff86ea82704,43493339,0,0x0,8
tick,0x7ff86ea82704,43494728,0,0x0,8
tick,0x7ff86ea82704,43496583,0,0x0,8
tick,0x7ff86ea82704,43498639,0,0x0,8
tick,0x7ff86ea82704,43500599,0,0x0,8
tick,0x7ff86ea82704,43502691,0,0x0,8
tick,0x7ff86ea82704,43504752,0,0x0,8
tick,0x7ff86ea82704,43506597,0,0x0,8
tick,0x7ff86ea82704,43508924,0,0x0,8
tick,0x7ff86ea82704,43510685,0,0x0,8
tick,0x7ff86ea82704,43512610,0,0x0,8
tick,0x7ff86ea82704,43514534,0,0x0,8
tick,0x7ff86ea82704,43516571,0,0x0,8
tick,0x7ff86ea82704,43518588,0,0x0,8
tick,0x7ff86ea82704,43520573,0,0x0,8
tick,0x7ff86ea82704,43522574,0,0x0,8
tick,0x7ff86ea82704,43526968,0,0x0,8
tick,0x7ff86ea82704,43526995,0,0x0,8
tick,0x7ff86ea82704,43528616,0,0x0,8
tick,0x7ff86ea82704,43530659,0,0x0,8
tick,0x7ff86ea82704,43532818,0,0x0,8
tick,0x7ff86ea82704,43535013,0,0x0,8
tick,0x7ff86ea82704,43536448,0,0x0,8
tick,0x7ff86ea82704,43538722,0,0x0,8
tick,0x7ff86ea82704,43540512,0,0x0,8
tick,0x7ff86ea82704,43543081,0,0x0,8
tick,0x7ff86ea82704,43544540,0,0x0,8
tick,0x7ff86ea82704,43546447,0,0x0,8
tick,0x7ff86ea82704,43548617,0,0x0,8
tick,0x7ff86ea82704,43550460,0,0x0,8
tick,0x7ff86ea82704,43552436,0,0x0,8
tick,0x7ff86ea82704,43554549,0,0x0,8
tick,0x7ff86ea82704,43556632,0,0x0,8
tick,0x7ff86ea82704,43558743,0,0x0,8
tick,0x7ff86ea82704,43560454,0,0x0,8
tick,0x7ff86ea82704,43562494,0,0x0,8
tick,0x7ff86ea82704,43564550,0,0x0,8
tick,0x7ff86ea82704,43566453,0,0x0,8
tick,0x7ff86ea82704,43568528,0,0x0,8
tick,0x7ff86ea82704,43570410,0,0x0,8
tick,0x7ff86ea82704,43572377,0,0x0,8
tick,0x7ff86ea82704,43574768,0,0x0,8
tick,0x7ff86ea82704,43576845,0,0x0,8
tick,0x7ff86ea82704,43578411,0,0x0,8
tick,0x7ff86ea82704,43580450,0,0x0,8
tick,0x7ff86ea82704,43582462,0,0x0,8
tick,0x7ff86ea82704,43584401,0,0x0,8
tick,0x7ff86ea82704,43586380,0,0x0,8
tick,0x7ff86ea82704,43588371,0,0x0,8
tick,0x7ff86ea82704,43590462,0,0x0,8
tick,0x7ff86ea82704,43593377,0,0x0,8
tick,0x7ff86ea82704,43594351,0,0x0,8
tick,0x7ff86ea82704,43596451,0,0x0,8
tick,0x7ff86ea82704,43598284,0,0x0,8
tick,0x7ff86ea82704,43600470,0,0x0,8
tick,0x7ff86ea82704,43602416,0,0x0,8
tick,0x7ff86ea82704,43604369,0,0x0,8
tick,0x7ff86ea82704,43606286,0,0x0,8
tick,0x7ff86ea82704,43608608,0,0x0,8
tick,0x7ff86ea82704,43610365,0,0x0,8
tick,0x7ff86ea82704,43612442,0,0x0,8
tick,0x7ff86ea82704,43614585,0,0x0,8
tick,0x7ff86ea82704,43616325,0,0x0,8
tick,0x7ff86ea82704,43618289,0,0x0,8
tick,0x7ff86ea82704,43620252,0,0x0,8
tick,0x7ff86ea82704,43622313,0,0x0,8
tick,0x7ff86ea82704,43624233,0,0x0,8
tick,0x7ff86ea82704,43626694,0,0x0,8
tick,0x7ff86ea82704,43628223,0,0x0,8
tick,0x7ff86ea82704,43630237,0,0x0,8
tick,0x7ff86ea82704,43632201,0,0x0,8
tick,0x7ff86ea82704,43634299,0,0x0,8
tick,0x7ff86ea82704,43636227,0,0x0,8
tick,0x7ff86ea82704,43638371,0,0x0,8
tick,0x7ff86ea82704,43640215,0,0x0,8
tick,0x7ff86ea82704,43643564,0,0x0,8
tick,0x7ff86ea82704,43645437,0,0x0,8
tick,0x7ff86ea82704,43647434,0,0x0,8
tick,0x7ff86ea82704,43649536,0,0x0,8
tick,0x7ff86ea82704,43651267,0,0x0,8
tick,0x7ff86ea82704,43653361,0,0x0,8
tick,0x7ff86ea82704,43655401,0,0x0,8
tick,0x7ff86ea82704,43657403,0,0x0,8
tick,0x7ff86ea82704,43659797,0,0x0,8
tick,0x7ff86ea82704,43661420,0,0x0,8
tick,0x7ff86ea82704,43663397,0,0x0,8
tick,0x7ff86ea82704,43665509,0,0x0,8
tick,0x7ff86ea82704,43667268,0,0x0,8
tick,0x7ff86ea82704,43669424,0,0x0,8
tick,0x7ff86ea82704,43671271,0,0x0,8
tick,0x7ff86ea82704,43673320,0,0x0,8
tick,0x7ff86ea82704,43675799,0,0x0,8
tick,0x7ff86ea82704,43677176,0,0x0,8
tick,0x7ff86ea82704,43679185,0,0x0,8
tick,0x7ff86ea82704,43681276,0,0x0,8
tick,0x7ff86ea82704,43683210,0,0x0,8
tick,0x7ff86ea82704,43685215,0,0x0,8
tick,0x7ff86ea82704,43687172,0,0x0,8
tick,0x7ff86ea82704,43689202,0,0x0,8
tick,0x7ff86ea82704,43691586,0,0x0,8
tick,0x7ff86ea82704,43693518,0,0x0,8
tick,0x7ff86ea82704,43695291,0,0x0,8
tick,0x7ff86ea82704,43697139,0,0x0,8
tick,0x7ff86ea82704,43699308,0,0x0,8
tick,0x7ff86ea82704,43701148,0,0x0,8
tick,0x7ff86ea82704,43703204,0,0x0,8
tick,0x7ff86ea82704,43705015,0,0x0,8
tick,0x7ff86ea82704,43707229,0,0x0,8
tick,0x7ff86ea82704,43710283,0,0x0,8
tick,0x7ff86ea82704,43712164,0,0x0,8
tick,0x7ff86ea82704,43714034,0,0x0,8
tick,0x7ff86ea82704,43716237,0,0x0,8
tick,0x7ff86ea82704,43718029,0,0x0,8
tick,0x7ff86ea82704,43720161,0,0x0,8
tick,0x7ff86ea82704,43722037,0,0x0,8
tick,0x7ff86ea82704,43724066,0,0x0,8
tick,0x7ff86ea82704,43726261,0,0x0,8
tick,0x7ff86ea82704,43728204,0,0x0,8
tick,0x7ff86ea82704,43729969,0,0x0,8
tick,0x7ff86ea82704,43732111,0,0x0,8
tick,0x7ff86ea82704,43733981,0,0x0,8
tick,0x7ff86ea82704,43736037,0,0x0,8
tick,0x7ff86ea82704,43738000,0,0x0,8
tick,0x7ff86ea82704,43740115,0,0x0,8
tick,0x7ff86ea82704,43742604,0,0x0,8
tick,0x7ff86ea82704,43744091,0,0x0,8
tick,0x7ff86ea82704,43745978,0,0x0,8
tick,0x7ff86ea82704,43748042,0,0x0,8
tick,0x7ff86ea82704,43749904,0,0x0,8
tick,0x7ff86ea82704,43752053,0,0x0,8
tick,0x7ff86ea82704,43753900,0,0x0,8
tick,0x7ff86ea82704,43756114,0,0x0,8
tick,0x7ff86ea82704,43758109,0,0x0,8
tick,0x7ff86ea82704,43760340,0,0x0,8
tick,0x7ff86ea82704,43761935,0,0x0,8
tick,0x7ff86ea82704,43763974,0,0x0,8
tick,0x7ff86ea82704,43765965,0,0x0,8
tick,0x7ff86ea82704,43768001,0,0x0,8
tick,0x7ff86ea82704,43770057,0,0x0,8
tick,0x7ff86ea82704,43771947,0,0x0,8
tick,0x7ff86ea82704,43773934,0,0x0,8
tick,0x7ff86ea82704,43776440,0,0x0,8
tick,0x7ff86ea82704,43777943,0,0x0,8
tick,0x7ff86ea82704,43779955,0,0x0,8
tick,0x7ff86ea82704,43781935,0,0x0,8
tick,0x7ff86ea82704,43783949,0,0x0,8
tick,0x7ff86ea82704,43786065,0,0x0,8
tick,0x7ff86ea82704,43788006,0,0x0,8
tick,0x7ff86ea82704,43789878,0,0x0,8
tick,0x7ff86ea82704,43793061,0,0x0,8
tick,0x7ff86ea82704,43794053,0,0x0,8
tick,0x7ff86ea82704,43796022,0,0x0,8
tick,0x7ff86ea82704,43798074,0,0x0,8
tick,0x7ff86ea82704,43799913,0,0x0,8
tick,0x7ff86ea82704,43801837,0,0x0,8
tick,0x7ff86ea82704,43803846,0,0x0,8
tick,0x7ff86ea82704,43805930,0,0x0,8
tick,0x7ff86ea82704,43808032,0,0x0,8
tick,0x7ff86ea82704,43809904,0,0x0,8
tick,0x7ff86ea82704,43811988,0,0x0,8
tick,0x7ff86ea82704,43813930,0,0x0,8
tick,0x7ff86ea82704,43815872,0,0x0,8
tick,0x7ff86ea82704,43817835,0,0x0,8
tick,0x7ff86ea82704,43819811,0,0x0,8
tick,0x7ff86ea82704,43821805,0,0x0,8
tick,0x7ff86ea82704,43823874,0,0x0,8
tick,0x7ff86ea82704,43825925,0,0x0,8
tick,0x7ff86ea82704,43827915,0,0x0,8
tick,0x7ff86ea82704,43829943,0,0x0,8
tick,0x7ff86ea82704,43831731,0,0x0,8
tick,0x7ff86ea82704,43833767,0,0x0,8
tick,0x7ff86ea82704,43835662,0,0x0,8
tick,0x7ff86ea82704,43837794,0,0x0,8
tick,0x7ff86ea82704,43839690,0,0x0,8
tick,0x7ff86ea82704,43842576,0,0x0,8
tick,0x7ff86ea82704,43843709,0,0x0,8
tick,0x7ff86ea82704,43845895,0,0x0,8
tick,0x7ff86ea82704,43847695,0,0x0,8
tick,0x7ff86ea82704,43849763,0,0x0,8
tick,0x7ff86ea82704,43851673,0,0x0,8
tick,0x7ff86ea82704,43853952,0,0x0,8
tick,0x7ff86ea82704,43855581,0,0x0,8
tick,0x7ff86ea82704,43857779,0,0x0,8
tick,0x7ff86ea82704,43860076,0,0x0,8
tick,0x7ff86ea82704,43861653,0,0x0,8
tick,0x7ff86ea82704,43863739,0,0x0,8
tick,0x7ff86ea82704,43865712,0,0x0,8
tick,0x7ff86ea82704,43867634,0,0x0,8
tick,0x7ff86ea82704,43869597,0,0x0,8
tick,0x7ff86ea82704,43871625,0,0x0,8
tick,0x7ff86ea82704,43873656,0,0x0,8
tick,0x7ff86ea82704,43875900,0,0x0,8
tick,0x7ff86ea82704,43877569,0,0x0,8
tick,0x7ff86ea82704,43879691,0,0x0,8
tick,0x7ff86ea82704,43881606,0,0x0,8
tick,0x7ff86ea82704,43883695,0,0x0,8
tick,0x7ff86ea82704,43885648,0,0x0,8
tick,0x7ff86ea82704,43887599,0,0x0,8
tick,0x7ff86ea82704,43889601,0,0x0,8
tick,0x7ff86ea82704,43892144,0,0x0,8
tick,0x7ff86ea82704,43893756,0,0x0,8
tick,0x7ff86ea82704,43895681,0,0x0,8
tick,0x7ff86ea82704,43897535,0,0x0,8
tick,0x7ff86ea82704,43899686,0,0x0,8
tick,0x7ff86ea82704,43901518,0,0x0,8
tick,0x7ff86ea82704,43903647,0,0x0,8
tick,0x7ff86ea82704,43905514,0,0x0,8
tick,0x7ff86ea82704,43907610,0,0x0,8
tick,0x7ff86ea82704,43909964,0,0x0,8
tick,0x7ff86ea82704,43911762,0,0x0,8
tick,0x7ff86ea82704,43913720,0,0x0,8
tick,0x7ff86ea82704,43915683,0,0x0,8
tick,0x7ff86ea82704,43917627,0,0x0,8
tick,0x7ff86ea82704,43919597,0,0x0,8
tick,0x7ff86ea82704,43921555,0,0x0,8
tick,0x7ff86ea82704,43923713,0,0x0,8
tick,0x7ff86ea82704,43925805,0,0x0,8
tick,0x7ff86ea82704,43927523,0,0x0,8
tick,0x7ff86ea82704,43929719,0,0x0,8
tick,0x7ff86ea82704,43931550,0,0x0,8
tick,0x7ff86ea82704,43933617,0,0x0,8
tick,0x7ff86ea82704,43935453,0,0x0,8
tick,0x7ff86ea82704,43937632,0,0x0,8
tick,0x7ff86ea82704,43939658,0,0x0,8
tick,0x7ff86ea82704,43942233,0,0x0,8
tick,0x7ff86ea82704,43943483,0,0x0,8
tick,0x7ff86ea82704,43945607,0,0x0,8
tick,0x7ff86ea82704,43947552,0,0x0,8
tick,0x7ff86ea82704,43949799,0,0x0,8
tick,0x7ff86ea82704,43951421,0,0x0,8
tick,0x7ff86ea82704,43953626,0,0x0,8
tick,0x7ff86ea82704,43955574,0,0x0,8
tick,0x7ff86ea82704,43957512,0,0x0,8
tick,0x7ff86ea82704,43959882,0,0x0,8
tick,0x7ff86ea82704,43961525,0,0x0,8
tick,0x7ff86ea82704,43963706,0,0x0,8
tick,0x7ff86ea82704,43965469,0,0x0,8
tick,0x7ff86ea82704,43967591,0,0x0,8
tick,0x7ff86ea82704,43969424,0,0x0,8
tick,0x7ff86ea82704,43971529,0,0x0,8
tick,0x7ff86ea82704,43973558,0,0x0,8
tick,0x7ff86ea82704,43975797,0,0x0,8
tick,0x7ff86ea82704,43977442,0,0x0,8
tick,0x7ff86ea82704,43979667,0,0x0,8
tick,0x7ff86ea82704,43981573,0,0x0,8
tick,0x7ff86ea82704,43983407,0,0x0,8
tick,0x7ff86ea82704,43985469,0,0x0,8
tick,0x7ff86ea82704,43987394,0,0x0,8
tick,0x7ff86ea82704,43989462,0,0x0,8
tick,0x7ff86ea82704,43991681,0,0x0,8
tick,0x7ff86ea82704,43993570,0,0x0,8
tick,0x7ff86ea82704,43995655,0,0x0,8
tick,0x7ff86ea82704,43997555,0,0x0,8
tick,0x7ff86ea82704,43999405,0,0x0,8
tick,0x7ff86ea82704,44001532,0,0x0,8
tick,0x7ff86ea82704,44003263,0,0x0,8
tick,0x7ff86ea82704,44005453,0,0x0,8
tick,0x7ff86ea82704,44007374,0,0x0,8
tick,0x7ff86ea82704,44010096,0,0x0,8
tick,0x7ff86ea82704,44011483,0,0x0,8
tick,0x7ff86ea82704,44013525,0,0x0,8
tick,0x7ff86ea82704,44015505,0,0x0,8
tick,0x7ff86ea82704,44017541,0,0x0,8
tick,0x7ff86ea82704,44019395,0,0x0,8
tick,0x7ff86ea82704,44021375,0,0x0,8
tick,0x7ff86ea82704,44023480,0,0x0,8
tick,0x7ff86ea82704,44026099,0,0x0,8
tick,0x7ff86ea82704,44027581,0,0x0,8
tick,0x7ff86ea82704,44029350,0,0x0,8
tick,0x7ff86ea82704,44031419,0,0x0,8
tick,0x7ff86ea82704,44033369,0,0x0,8
tick,0x7ff86ea82704,44035299,0,0x0,8
tick,0x7ff86ea82704,44037363,0,0x0,8
tick,0x7ff86ea82704,44039353,0,0x0,8
tick,0x7ff86ea82704,44042469,0,0x0,8
tick,0x7ff86ea82704,44043424,0,0x0,8
tick,0x7ff86ea82704,44045554,0,0x0,8
tick,0x7ff86ea82704,44047392,0,0x0,8
tick,0x7ff86ea82704,44049465,0,0x0,8
tick,0x7ff86ea82704,44051456,0,0x0,8
tick,0x7ff86ea82704,44053395,0,0x0,8
tick,0x7ff86ea82704,44055432,0,0x0,8
tick,0x7ff86ea82704,44057457,0,0x0,8
tick,0x7ff86ea82704,44059850,0,0x0,8
tick,0x7ff86ea82704,44061297,0,0x0,8
tick,0x7ff86ea82704,44063546,0,0x0,8
tick,0x7ff86ea82704,44065623,0,0x0,8
tick,0x7ff86ea82704,44067342,0,0x0,8
tick,0x7ff86ea82704,44069189,0,0x0,8
tick,0x7ff86ea82704,44071206,0,0x0,8
tick,0x7ff86ea82704,44073433,0,0x0,8
tick,0x7ff86ea82704,44075859,0,0x0,8
tick,0x7ff86ea82704,44077261,0,0x0,8
tick,0x7ff86ea82704,44079156,0,0x0,8
tick,0x7ff86ea82704,44081089,0,0x0,8
tick,0x7ff86ea82704,44083132,0,0x0,8
tick,0x7ff86ea82704,44084993,0,0x0,8
tick,0x7ff86ea82704,44087089,0,0x0,8
tick,0x7ff86ea82704,44089310,0,0x0,8
tick,0x7ff86ea82704,44091273,0,0x0,8
tick,0x7ff86ea82704,44093390,0,0x0,8
tick,0x7ff86ea82704,44095201,0,0x0,8
tick,0x7ff86ea82704,44097109,0,0x0,8
tick,0x7ff86ea82704,44099011,0,0x0,8
tick,0x7ff86ea82704,44100959,0,0x0,8
tick,0x7ff86ea82704,44103327,0,0x0,8
tick,0x7ff86ea82704,44105066,0,0x0,8
tick,0x7ff86ea82704,44107162,0,0x0,8
tick,0x7ff86ea82704,44109097,0,0x0,8
tick,0x7ff86ea82704,44111009,0,0x0,8
tick,0x7ff86ea82704,44113219,0,0x0,8
tick,0x7ff86ea82704,44114973,0,0x0,8
tick,0x7ff86ea82704,44117061,0,0x0,8
tick,0x7ff86ea82704,44119207,0,0x0,8
tick,0x7ff86ea82704,44121036,0,0x0,8
tick,0x7ff86ea82704,44123024,0,0x0,8
tick,0x7ff86ea82704,44125101,0,0x0,8
tick,0x7ff86ea82704,44126966,0,0x0,8
tick,0x7ff86ea82704,44129004,0,0x0,8
tick,0x7ff86ea82704,44130991,0,0x0,8
tick,0x7ff86ea82704,44132855,0,0x0,8
tick,0x7ff86ea82704,44134996,0,0x0,8
tick,0x7ff86ea82704,44136896,0,0x0,8
tick,0x7ff86ea82704,44138959,0,0x0,8
tick,0x7ff86ea82704,44141011,0,0x0,8
tick,0x7ff86ea82704,44142950,0,0x0,8
tick,0x7ff86ea82704,44145065,0,0x0,8
tick,0x7ff86ea82704,44146890,0,0x0,8
tick,0x7ff86ea82704,44149034,0,0x0,8
tick,0x7ff86ea82704,44150893,0,0x0,8
tick,0x7ff86ea82704,44153113,0,0x0,8
tick,0x7ff86ea82704,44154921,0,0x0,8
tick,0x7ff86ea82704,44157050,0,0x0,8
tick,0x7ff86ea82704,44159019,0,0x0,8
tick,0x7ff86ea82704,44161165,0,0x0,8
tick,0x7ff86ea82704,44162833,0,0x0,8
tick,0x7ff86ea82704,44165017,0,0x0,8
tick,0x7ff86ea82704,44167145,0,0x0,8
tick,0x7ff86ea82704,44169208,0,0x0,8
tick,0x7ff86ea82704,44171182,0,0x0,8
tick,0x7ff86ea82704,44173084,0,0x0,8
tick,0x7ff86ea82704,44175115,0,0x0,8
tick,0x7ff86ea82704,44176983,0,0x0,8
tick,0x7ff86ea82704,44179096,0,0x0,8
tick,0x7ff86ea82704,44181255,0,0x0,8
tick,0x7ff86ea82704,44182920,0,0x0,8
tick,0x7ff86ea82704,44184929,0,0x0,8
tick,0x7ff86ea82704,44186971,0,0x0,8
tick,0x7ff86ea82704,44188882,0,0x0,8
tick,0x7ff86ea82704,44191028,0,0x0,8
tick,0x7ff86ea82704,44192992,0,0x0,8
tick,0x7ff86ea82704,44194810,0,0x0,8
tick,0x7ff86ea82704,44196999,0,0x0,8
tick,0x7ff86ea82704,44198801,0,0x0,8
tick,0x7ff86ea82704,44201152,0,0x0,8
tick,0x7ff86ea82704,44202985,0,0x0,8
tick,0x7ff86ea82704,44204977,0,0x0,8
tick,0x7ff86ea82704,44206777,0,0x0,8
tick,0x7ff86ea82704,44208827,0,0x0,8
tick,0x7ff86ea82704,44210733,0,0x0,8
tick,0x7ff86ea82704,44212866,0,0x0,8
tick,0x7ff86ea82704,44214796,0,0x0,8
tick,0x7ff86ea82704,44216869,0,0x0,8
tick,0x7ff86ea82704,44218735,0,0x0,8
tick,0x7ff86ea82704,44220776,0,0x0,8
tick,0x7ff86ea82704,44222895,0,0x0,8
tick,0x7ff86ea82704,44224823,0,0x0,8
tick,0x7ff86ea82704,44226875,0,0x0,8
tick,0x7ff86ea82704,44228804,0,0x0,8
tick,0x7ff86ea82704,44230742,0,0x0,8
tick,0x7ff86ea82704,44232814,0,0x0,8
tick,0x7ff86ea82704,44234729,0,0x0,8
tick,0x7ff86ea82704,44236742,0,0x0,8
tick,0x7ff86ea82704,44238711,0,0x0,8
tick,0x7ff86ea82704,44240815,0,0x0,8
tick,0x7ff86ea82704,44242682,0,0x0,8
tick,0x7ff86ea82704,44244747,0,0x0,8
tick,0x7ff86ea82704,44246808,0,0x0,8
tick,0x7ff86ea82704,44248639,0,0x0,8
tick,0x7ff86ea82704,44250796,0,0x0,8
tick,0x7ff86ea82704,44252629,0,0x0,8
tick,0x7ff86ea82704,44254818,0,0x0,8
tick,0x7ff86ea82704,44256745,0,0x0,8
tick,0x7ff86ea82704,44258776,0,0x0,8
tick,0x7ff86ea82704,44260872,0,0x0,8
tick,0x7ff86ea82704,44262695,0,0x0,8
tick,0x7ff86ea82704,44264886,0,0x0,8
tick,0x7ff86ea82704,44266626,0,0x0,8
tick,0x7ff86ea82704,44268661,0,0x0,8
tick,0x7ff86ea82704,44270824,0,0x0,8
tick,0x7ff86ea82704,44272714,0,0x0,8
tick,0x7ff86ea82704,44275943,0,0x0,8
tick,0x7ff86ea82704,44277714,0,0x0,8
tick,0x7ff86ea82704,44279702,0,0x0,8
tick,0x7ff86ea82704,44281622,0,0x0,8
tick,0x7ff86ea82704,44283647,0,0x0,8
tick,0x7ff86ea82704,44285808,0,0x0,8
tick,0x7ff86ea82704,44287744,0,0x0,8
tick,0x7ff86ea82704,44289703,0,0x0,8
tick,0x7ff86ea82704,44291580,0,0x0,8
tick,0x7ff86ea82704,44293602,0,0x0,8
tick,0x7ff86ea82704,44295594,0,0x0,8
tick,0x7ff86ea82704,44297623,0,0x0,8
tick,0x7ff86ea82704,44299499,0,0x0,8
tick,0x7ff86ea82704,44301573,0,0x0,8
tick,0x7ff86ea82704,44303557,0,0x0,8
tick,0x7ff86ea82704,44305901,0,0x0,8
tick,0x7ff86ea82704,44307466,0,0x0,8
tick,0x7ff86ea82704,44309557,0,0x0,8
tick,0x7ff86ea82704,44311471,0,0x0,8
tick,0x7ff86ea82704,44313540,0,0x0,8
tick,0x7ff86ea82704,44315467,0,0x0,8
tick,0x7ff86ea82704,44317509,0,0x0,8
tick,0x7ff86ea82704,44319418,0,0x0,8
tick,0x7ff86ea82704,44321425,0,0x0,8
tick,0x7ff86ea82704,44323529,0,0x0,8
tick,0x7ff86ea82704,44325480,0,0x0,8
tick,0x7ff86ea82704,44327530,0,0x0,8
tick,0x7ff86ea82704,44329477,0,0x0,8
tick,0x7ff86ea82704,44331443,0,0x0,8
tick,0x7ff86ea82704,44333517,0,0x0,8
tick,0x7ff86ea82704,44335479,0,0x0,8
tick,0x7ff86ea82704,44337430,0,0x0,8
tick,0x7ff86ea82704,44339492,0,0x0,8
tick,0x7ff86ea82704,44341497,0,0x0,8
tick,0x7ff86ea82704,44343497,0,0x0,8
tick,0x7ff86ea82704,44345512,0,0x0,8
tick,0x7ff86ea82704,44347531,0,0x0,8
tick,0x7ff86ea82704,44349435,0,0x0,8
tick,0x7ff86ea82704,44351413,0,0x0,8
tick,0x7ff86ea82704,44353466,0,0x0,8
tick,0x7ff86ea82704,44355413,0,0x0,8
tick,0x7ff86ea82704,44357441,0,0x0,8
tick,0x7ff86ea82704,44359378,0,0x0,8
tick,0x7ff86ea82704,44361371,0,0x0,8
tick,0x7ff86ea82704,44363649,0,0x0,8
tick,0x7ff86ea82704,44365320,0,0x0,8
tick,0x7ff86ea82704,44367329,0,0x0,8
tick,0x7ff86ea82704,44369361,0,0x0,8
tick,0x7ff86ea82704,44371428,0,0x0,8
tick,0x7ff86ea82704,44373307,0,0x0,8
tick,0x7ff86ea82704,44375393,0,0x0,8
tick,0x7ff86ea82704,44377274,0,0x0,8
tick,0x7ff86ea82704,44379381,0,0x0,8
tick,0x7ff86ea82704,44381332,0,0x0,8
tick,0x7ff86ea82704,44383447,0,0x0,8
tick,0x7ff86ea82704,44385447,0,0x0,8
tick,0x7ff86ea82704,44388277,0,0x0,8
tick,0x7ff86ea82704,44389758,0,0x0,8
tick,0x7ff86ea82704,44391680,0,0x0,8
tick,0x7ff86ea82704,44393511,0,0x0,8
tick,0x7ff86ea82704,44395694,0,0x0,8
tick,0x7ff86ea82704,44398329,0,0x0,8
tick,0x7ff86ea82704,44400531,0,0x0,8
tick,0x7ff86ea82704,44402973,0,0x0,8
tick,0x7ff86ea82704,44404470,0,0x0,8
tick,0x7ff86ea82704,44406411,0,0x0,8
tick,0x7ff86ea82704,44408753,0,0x0,8
tick,0x7ff86ea82704,44411503,0,0x0,8
tick,0x7ff86ea82704,44412413,0,0x0,8
tick,0x7ff86ea82704,44414200,0,0x0,8
tick,0x7ff86ea82704,44416346,0,0x0,8
tick,0x7ff86ea82704,44418266,0,0x0,8
tick,0x7ff86ea82704,44420282,0,0x0,8
tick,0x7ff86ea82704,44422392,0,0x0,8
tick,0x7ff86ea82704,44424192,0,0x0,8
tick,0x7ff86ea82704,44426909,0,0x0,8
tick,0x7ff86ea82704,44429304,0,0x0,8
tick,0x7ff86ea82704,44431156,0,0x0,8
tick,0x7ff86ea82704,44433380,0,0x0,8
tick,0x7ff86ea82704,44435159,0,0x0,8
tick,0x7ff86ea82704,44437433,0,0x0,8
tick,0x7ff86ea82704,44439036,0,0x0,8
tick,0x7ff86ea82704,44441515,0,0x0,8
tick,0x7ff86ea82704,44443145,0,0x0,8
tick,0x7ff86ea82704,44445211,0,0x0,8
tick,0x7ff86ea82704,44447072,0,0x0,8
tick,0x7ff86ea82704,44449175,0,0x0,8
tick,0x7ff86ea82704,44451176,0,0x0,8
tick,0x7ff86ea82704,44453049,0,0x0,8
tick,0x7ff86ea82704,44455203,0,0x0,8
tick,0x7ff86ea82704,44457265,0,0x0,8
tick,0x7ff86ea82704,44459177,0,0x0,8
tick,0x7ff86ea82704,44461170,0,0x0,8
tick,0x7ff86ea82704,44463114,0,0x0,8
tick,0x7ff86ea82704,44465248,0,0x0,8
tick,0x7ff86ea82704,44467180,0,0x0,8
tick,0x7ff86ea82704,44469143,0,0x0,8
tick,0x7ff86ea82704,44471160,0,0x0,8
tick,0x7ff86ea82704,44473131,0,0x0,8
tick,0x7ff86ea82704,44475435,0,0x0,8
tick,0x7ff86ea82704,44477016,0,0x0,8
tick,0x7ff86ea82704,44479068,0,0x0,8
tick,0x7ff86ea82704,44481016,0,0x0,8
tick,0x7ff86ea82704,44483155,0,0x0,8
tick,0x7ff86ea82704,44485115,0,0x0,8
tick,0x7ff86ea82704,44487031,0,0x0,8
tick,0x7ff86ea82704,44489564,0,0x0,8
tick,0x7ff86ea82704,44491418,0,0x0,8
tick,0x7ff86ea82704,44492977,0,0x0,8
tick,0x7ff86ea82704,44495282,0,0x0,8
tick,0x7ff86ea82704,44497294,0,0x0,8
tick,0x7ff86ea82704,44498997,0,0x0,8
tick,0x7ff86ea82704,44500985,0,0x0,8
tick,0x7ff86ea82704,44502941,0,0x0,8
tick,0x7ff86ea82704,44505182,0,0x0,8
tick,0x7ff86ea82704,44506917,0,0x0,8
tick,0x7ff86ea82704,44509311,0,0x0,8
tick,0x7ff86ea82704,44511304,0,0x0,8
tick,0x7ff86ea82704,44513533,0,0x0,8
tick,0x7ff86ea82704,44514945,0,0x0,8
tick,0x7ff86ea82704,44516994,0,0x0,8
tick,0x7ff86ea82704,44519025,0,0x0,8
tick,0x7ff86ea82704,44520990,0,0x0,8
tick,0x7ff86ea82704,44522962,0,0x0,8
tick,0x7ff86ea82704,44525380,0,0x0,8
tick,0x7ff86ea82704,44527490,0,0x0,8
tick,0x7ff86ea82704,44529361,0,0x0,8
tick,0x7ff86ea82704,44530919,0,0x0,8
tick,0x7ff86ea82704,44532900,0,0x0,8
tick,0x7ff86ea82704,44534891,0,0x0,8
tick,0x7ff86ea82704,44536948,0,0x0,8
tick,0x7ff86ea82704,44538851,0,0x0,8
tick,0x7ff86ea82704,44540896,0,0x0,8
tick,0x7ff86ea82704,44542939,0,0x0,8
tick,0x7ff86ea82704,44544851,0,0x0,8
tick,0x7ff86ea82704,44546840,0,0x0,8
tick,0x7ff86ea82704,44550254,0,0x0,8
tick,0x7ff86ea82704,44552049,0,0x0,8
tick,0x7ff86ea82704,44555970,0,0x0,8
tick,0x7ff86ea82704,44558221,0,0x0,8
tick,0x7ff86ea82704,44560308,0,0x0,8
tick,0x7ff86ea82704,44562191,0,0x0,8
tick,0x7ff86ea82704,44564785,0,0x0,8
tick,0x7ff86ea82704,44566100,0,0x0,8
tick,0x7ff86ea82704,44567919,0,0x0,8
tick,0x7ff86ea82704,44569767,0,0x0,8
tick,0x7ff86ea82704,44571973,0,0x0,8
tick,0x7ff86ea82704,44573817,0,0x0,8
tick,0x7ff86ea82704,44576374,0,0x0,8
tick,0x7ff86ea82704,44577807,0,0x0,8
tick,0x7ff86ea82704,44579979,0,0x0,8
tick,0x7ff86ea82704,44581885,0,0x0,8
tick,0x7ff86ea82704,44584011,0,0x0,8
tick,0x7ff86ea82704,44585991,0,0x0,8
tick,0x7ff86ea82704,44587942,0,0x0,8
tick,0x7ff86ea82704,44589907,0,0x0,8
tick,0x7ff86ea82704,44592070,0,0x0,8
tick,0x7ff86ea82704,44594038,0,0x0,8
tick,0x7ff86ea82704,44597402,0,0x0,8
tick,0x7ff86ea82704,44598559,0,0x0,8
tick,0x7ff86ea82704,44600450,0,0x0,8
tick,0x7ff86ea82704,44601666,0,0x0,8
tick,0x7ff86ea82704,44604139,0,0x0,8
tick,0x7ff86ea82704,44605711,0,0x0,8
tick,0x7ff86ea82704,44608147,0,0x0,8
tick,0x7ff86ea82704,44610540,0,0x0,8
tick,0x7ff86ea82704,44611706,0,0x0,8
tick,0x7ff86ea82704,44614202,0,0x0,8
tick,0x7ff86ea82704,44615908,0,0x0,8
tick,0x7ff86ea82704,44618198,0,0x0,8
tick,0x7ff86ea82704,44619645,0,0x0,8
tick,0x7ff86ea82704,44621731,0,0x0,8
tick,0x7ff86ea82704,44624315,0,0x0,8
tick,0x7ff86ea82704,44626042,0,0x0,8
tick,0x7ff86ea82704,44630354,0,0x0,8
tick,0x7ff86ea82704,44630397,0,0x0,8
tick,0x7ff86ea82704,44631620,0,0x0,8
tick,0x7ff86ea82704,44633857,0,0x0,8
tick,0x7ff86ea82704,44635655,0,0x0,8
tick,0x7ff86ea82704,44637705,0,0x0,8
tick,0x7ff86ea82704,44639562,0,0x0,8
tick,0x7ff86ea82704,44641674,0,0x0,8
tick,0x7ff86ea82704,44643689,0,0x0,8
tick,0x7ff86ea82704,44645531,0,0x0,8
tick,0x7ff86ea82704,44647528,0,0x0,8
tick,0x7ff86ea82704,44649513,0,0x0,8
tick,0x7ff86ea82704,44651590,0,0x0,8
tick,0x7ff86ea82704,44653590,0,0x0,8
tick,0x7ff86ea82704,44657186,0,0x0,8
tick,0x7ff86ea82704,44657867,0,0x0,8
tick,0x7ff86ea82704,44660002,0,0x0,8
tick,0x7ff86ea82704,44661661,0,0x0,8
tick,0x7ff86ea82704,44663496,0,0x0,8
tick,0x7ff86ea82704,44665535,0,0x0,8
tick,0x7ff86ea82704,44667642,0,0x0,8
tick,0x7ff86ea82704,44669665,0,0x0,8
tick,0x7ff86ea82704,44671590,0,0x0,8
tick,0x7ff86ea82704,44673569,0,0x0,8
tick,0x7ff86ea82704,44675887,0,0x0,8
tick,0x7ff86ea82704,44677606,0,0x0,8
tick,0x7ff86ea82704,44679564,0,0x0,8
tick,0x7ff86ea82704,44681584,0,0x0,8
tick,0x7ff86ea82704,44683489,0,0x0,8
tick,0x7ff86ea82704,44685513,0,0x0,8
tick,0x7ff86ea82704,44687522,0,0x0,8
tick,0x7ff86ea82704,44689570,0,0x0,8
tick,0x7ff86ea82704,44691626,0,0x0,8
tick,0x7ff86ea82704,44693549,0,0x0,8
tick,0x7ff86ea82704,44695630,0,0x0,8
tick,0x7ff86ea82704,44697626,0,0x0,8
tick,0x7ff86ea82704,44699712,0,0x0,8
tick,0x7ff86ea82704,44701425,0,0x0,8
tick,0x7ff86ea82704,44703601,0,0x0,8
tick,0x7ff86ea82704,44705488,0,0x0,8
tick,0x7ff86ea82704,44707753,0,0x0,8
tick,0x7ff86ea82704,44710184,0,0x0,8
tick,0x7ff86ea82704,44712833,0,0x0,8
tick,0x7ff86ea82704,44714453,0,0x0,8
tick,0x7ff86ea82704,44716560,0,0x0,8
tick,0x7ff86ea82704,44718440,0,0x0,8
tick,0x7ff86ea82704,44720486,0,0x0,8
tick,0x7ff86ea82704,44722320,0,0x0,8
tick,0x7ff86ea82704,44724578,0,0x0,8
tick,0x7ff86ea82704,44726642,0,0x0,8
tick,0x7ff86ea82704,44728423,0,0x0,8
tick,0x7ff86ea82704,44730391,0,0x0,8
tick,0x7ff86ea82704,44732375,0,0x0,8
tick,0x7ff86ea82704,44734334,0,0x0,8
tick,0x7ff86ea82704,44736352,0,0x0,8
tick,0x7ff86ea82704,44738381,0,0x0,8
tick,0x7ff86ea82704,44740383,0,0x0,8
tick,0x7ff86ea82704,44742508,0,0x0,8
tick,0x7ff86ea82704,44744331,0,0x0,8
tick,0x7ff86ea82704,44746470,0,0x0,8
tick,0x7ff86ea82704,44748269,0,0x0,8
tick,0x7ff86ea82704,44750286,0,0x0,8
tick,0x7ff86ea82704,44752324,0,0x0,8
tick,0x7ff86ea82704,44754426,0,0x0,8
tick,0x7ff86ea82704,44756339,0,0x0,8
tick,0x7ff86ea82704,44758364,0,0x0,8
tick,0x7ff86ea82704,44760261,0,0x0,8
tick,0x7ff86ea82704,44762323,0,0x0,8
tick,0x7ff86ea82704,44764467,0,0x0,8
tick,0x7ff86ea82704,44766412,0,0x0,8
tick,0x7ff86ea82704,44768219,0,0x0,8
tick,0x7ff86ea82704,44770426,0,0x0,8
tick,0x7ff86ea82704,44772160,0,0x0,8
tick,0x7ff86ea82704,44774292,0,0x0,8
tick,0x7ff86ea82704,44776217,0,0x0,8
tick,0x7ff86ea82704,44778472,0,0x0,8
tick,0x7ff86ea82704,44780310,0,0x0,8
tick,0x7ff86ea82704,44782285,0,0x0,8
tick,0x7ff86ea82704,44784281,0,0x0,8
tick,0x7ff86ea82704,44786790,0,0x0,8
tick,0x7ff86ea82704,44788200,0,0x0,8
tick,0x7ff86ea82704,44790207,0,0x0,8
tick,0x7ff86ea82704,44792183,0,0x0,8
tick,0x7ff86ea82704,44794099,0,0x0,8
tick,0x7ff86ea82704,44796282,0,0x0,8
tick,0x7ff86ea82704,44798220,0,0x0,8
tick,0x7ff86ea82704,44800162,0,0x0,8
tick,0x7ff86ea82704,44802179,0,0x0,8
tick,0x7ff86ea82704,44804210,0,0x0,8
tick,0x7ff86ea82704,44806249,0,0x0,8
tick,0x7ff86ea82704,44808225,0,0x0,8
tick,0x7ff86ea82704,44810230,0,0x0,8
tick,0x7ff86ea82704,44812090,0,0x0,8
tick,0x7ff86ea82704,44814152,0,0x0,8
tick,0x7ff86ea82704,44816025,0,0x0,8
tick,0x7ff86ea82704,44818245,0,0x0,8
tick,0x7ff86ea82704,44820101,0,0x0,8
tick,0x7ff86ea82704,44822158,0,0x0,8
tick,0x7ff86ea82704,44824090,0,0x0,8
tick,0x7ff86ea82704,44826108,0,0x0,8
tick,0x7ff86ea82704,44828146,0,0x0,8
tick,0x7ff86ea82704,44830174,0,0x0,8
tick,0x7ff86ea82704,44832074,0,0x0,8
tick,0x7ff86ea82704,44834100,0,0x0,8
tick,0x7ff86ea82704,44836159,0,0x0,8
tick,0x7ff86ea82704,44838282,0,0x0,8
tick,0x7ff86ea82704,44840165,0,0x0,8
tick,0x7ff86ea82704,44842008,0,0x0,8
tick,0x7ff86ea82704,44844007,0,0x0,8
tick,0x7ff86ea82704,44846042,0,0x0,8
tick,0x7ff86ea82704,44848032,0,0x0,8
tick,0x7ff86ea82704,44850122,0,0x0,8
tick,0x7ff86ea82704,44851993,0,0x0,8
tick,0x7ff86ea82704,44854097,0,0x0,8
tick,0x7ff86ea82704,44856079,0,0x0,8
tick,0x7ff86ea82704,44858136,0,0x0,8
tick,0x7ff86ea82704,44859997,0,0x0,8
tick,0x7ff86ea82704,44862066,0,0x0,8
tick,0x7ff86ea82704,44864036,0,0x0,8
tick,0x7ff86ea82704,44866044,0,0x0,8
tick,0x7ff86ea82704,44868018,0,0x0,8
tick,0x7ff86ea82704,44870043,0,0x0,8
tick,0x7ff86ea82704,44871912,0,0x0,8
tick,0x7ff86ea82704,44873938,0,0x0,8
tick,0x7ff86ea82704,44876105,0,0x0,8
tick,0x7ff86ea82704,44878059,0,0x0,8
tick,0x7ff86ea82704,44879913,0,0x0,8
tick,0x7ff86ea82704,44881956,0,0x0,8
tick,0x7ff86ea82704,44883912,0,0x0,8
tick,0x7ff86ea82704,44885913,0,0x0,8
tick,0x7ff86ea82704,44887967,0,0x0,8
tick,0x7ff86ea82704,44889840,0,0x0,8
tick,0x7ff86ea82704,44891885,0,0x0,8
tick,0x7ff86ea82704,44893864,0,0x0,8
tick,0x7ff86ea82704,44895957,0,0x0,8
tick,0x7ff86ea82704,44897926,0,0x0,8
tick,0x7ff86ea82704,44899935,0,0x0,8
tick,0x7ff86ea82704,44901874,0,0x0,8
tick,0x7ff86ea82704,44903854,0,0x0,8
tick,0x7ff86ea82704,44905809,0,0x0,8
tick,0x7ff86ea82704,44908028,0,0x0,8
tick,0x7ff86ea82704,44909925,0,0x0,8
tick,0x7ff86ea82704,44911952,0,0x0,8
tick,0x7ff86ea82704,44913870,0,0x0,8
tick,0x7ff86ea82704,44915807,0,0x0,8
tick,0x7ff86ea82704,44917841,0,0x0,8
tick,0x7ff86ea82704,44919808,0,0x0,8
tick,0x7ff86ea82704,44921903,0,0x0,8
tick,0x7ff86ea82704,44923908,0,0x0,8
tick,0x7ff86ea82704,44925904,0,0x0,8
tick,0x7ff86ea82704,44927940,0,0x0,8
tick,0x7ff86ea82704,44929842,0,0x0,8
tick,0x7ff86ea82704,44931736,0,0x0,8
tick,0x7ff86ea82704,44933805,0,0x0,8
tick,0x7ff86ea82704,44935847,0,0x0,8
tick,0x7ff86ea82704,44937760,0,0x0,8
tick,0x7ff86ea82704,44939778,0,0x0,8
tick,0x7ff86ea82704,44941871,0,0x0,8
tick,0x7ff86ea82704,44943785,0,0x0,8
tick,0x7ff86ea82704,44945746,0,0x0,8
tick,0x7ff86ea82704,44947812,0,0x0,8
tick,0x7ff86ea82704,44949787,0,0x0,8
tick,0x7ff86ea82704,44951750,0,0x0,8
tick,0x7ff86ea82704,44953830,0,0x0,8
tick,0x7ff86ea82704,44955672,0,0x0,8
tick,0x7ff86ea82704,44957767,0,0x0,8
tick,0x7ff86ea82704,44959715,0,0x0,8
tick,0x7ff86ea82704,44961816,0,0x0,8
tick,0x7ff86ea82704,44963651,0,0x0,8
tick,0x7ff86ea82704,44965708,0,0x0,8
tick,0x7ff86ea82704,44967677,0,0x0,8
tick,0x7ff86ea82704,44969667,0,0x0,8
tick,0x7ff86ea82704,44971706,0,0x0,8
tick,0x7ff86ea82704,44973695,0,0x0,8
tick,0x7ff86ea82704,44975808,0,0x0,8
tick,0x7ff86ea82704,44977705,0,0x0,8
tick,0x7ff86ea82704,44979645,0,0x0,8
tick,0x7ff86ea82704,44981762,0,0x0,8
tick,0x7ff86ea82704,44983614,0,0x0,8
tick,0x7ff86ea82704,44985677,0,0x0,8
tick,0x7ff86ea82704,44987663,0,0x0,8
tick,0x7ff86ea82704,44989720,0,0x0,8
tick,0x7ff86ea82704,44991635,0,0x0,8
tick,0x7ff86ea82704,44993633,0,0x0,8
tick,0x7ff86ea82704,44995609,0,0x0,8
tick,0x7ff86ea82704,44997668,0,0x0,8
tick,0x7ff86ea82704,44999656,0,0x0,8
tick,0x7ff86ea82704,45001597,0,0x0,8
tick,0x7ff86ea82704,45003641,0,0x0,8
tick,0x7ff86ea82704,45005555,0,0x0,8
tick,0x7ff86ea82704,45007691,0,0x0,8
tick,0x7ff86ea82704,45009539,0,0x0,8
tick,0x7ff86ea82704,45011628,0,0x0,8
tick,0x7ff86ea82704,45013607,0,0x0,8
tick,0x7ff86ea82704,45015600,0,0x0,8
tick,0x7ff86ea82704,45017528,0,0x0,8
tick,0x7ff86ea82704,45019579,0,0x0,8
tick,0x7ff86ea82704,45021539,0,0x0,8
tick,0x7ff86ea82704,45023608,0,0x0,8
tick,0x7ff86ea82704,45025487,0,0x0,8
tick,0x7ff86ea82704,45027552,0,0x0,8
tick,0x7ff86ea82704,45029556,0,0x0,8
tick,0x7ff86ea82704,45031542,0,0x0,8
tick,0x7ff86ea82704,45033497,0,0x0,8
tick,0x7ff86ea82704,45035564,0,0x0,8
tick,0x7ff86ea82704,45037515,0,0x0,8
tick,0x7ff86ea82704,45039518,0,0x0,8
tick,0x7ff86ea82704,45041534,0,0x0,8
tick,0x7ff86ea82704,45043504,0,0x0,8
tick,0x7ff86ea82704,45045625,0,0x0,8
tick,0x7ff86ea82704,45047611,0,0x0,8
tick,0x7ff86ea82704,45049481,0,0x0,8
tick,0x7ff86ea82704,45051586,0,0x0,8
tick,0x7ff86ea82704,45053497,0,0x0,8
tick,0x7ff86ea82704,45055844,0,0x0,8
tick,0x7ff86ea82704,45058026,0,0x0,8
tick,0x7ff86ea82704,45059506,0,0x0,8
tick,0x7ff86ea82704,45061720,0,0x0,8
tick,0x7ff86ea82704,45063770,0,0x0,8
tick,0x7ff86ea82704,45065450,0,0x0,8
tick,0x7ff86ea82704,45067630,0,0x0,8
tick,0x7ff86ea82704,45069452,0,0x0,8
tick,0x7ff86ea82704,45071562,0,0x0,8
tick,0x7ff86ea82704,45074010,0,0x0,8
tick,0x7ff86ea82704,45075536,0,0x0,8
tick,0x7ff86ea82704,45078373,0,0x0,8
tick,0x7ff86ea82704,45080488,0,0x0,8
tick,0x7ff86ea82704,45082440,0,0x0,8
tick,0x7ff86ea82704,45084514,0,0x0,8
tick,0x7ff86ea82704,45086477,0,0x0,8
tick,0x7ff86ea82704,45088397,0,0x0,8
tick,0x7ff86ea82704,45090525,0,0x0,8
tick,0x7ff86ea82704,45092679,0,0x0,8
tick,0x7ff86ea82704,45094873,0,0x0,8
tick,0x7ff86ea82704,45096676,0,0x0,8
tick,0x7ff86ea82704,45098719,0,0x0,8
tick,0x7ff86ea82704,45100962,0,0x0,8
tick,0x7ff86ea82704,45102586,0,0x0,8
tick,0x7ff86ea82704,45104430,0,0x0,8
tick,0x7ff86ea82704,45106468,0,0x0,8
tick,0x7ff86ea82704,45108483,0,0x0,8
tick,0x7ff86ea82704,45110402,0,0x0,8
tick,0x7ff86ea82704,45112279,0,0x0,8
tick,0x7ff86ea82704,45114445,0,0x0,8
tick,0x7ff86ea82704,45116449,0,0x0,8
tick,0x7ff86ea82704,45118536,0,0x0,8
tick,0x7ff86ea82704,45120606,0,0x0,8
tick,0x7ff86ea82704,45123535,0,0x0,8
tick,0x7ff86ea82704,45125774,0,0x0,8
tick,0x7ff86ea82704,45127489,0,0x0,8
tick,0x7ff86ea82704,45129387,0,0x0,8
tick,0x7ff86ea82704,45131490,0,0x0,8
tick,0x7ff86ea82704,45133307,0,0x0,8
tick,0x7ff86ea82704,45135440,0,0x0,8
tick,0x7ff86ea82704,45137287,0,0x0,8
tick,0x7ff86ea82704,45139389,0,0x0,8
tick,0x7ff86ea82704,45142639,0,0x0,8
tick,0x7ff86ea82704,45143848,0,0x0,8
tick,0x7ff86ea82704,45145431,0,0x0,8
tick,0x7ff86ea82704,45147471,0,0x0,8
tick,0x7ff86ea82704,45149260,0,0x0,8
tick,0x7ff86ea82704,45151436,0,0x0,8
tick,0x7ff86ea82704,45153219,0,0x0,8
tick,0x7ff86ea82704,45155538,0,0x0,8
tick,0x7ff86ea82704,45157160,0,0x0,8
tick,0x7ff86ea82704,45159782,0,0x0,8
tick,0x7ff86ea82704,45161211,0,0x0,8
tick,0x7ff86ea82704,45163451,0,0x0,8
tick,0x7ff86ea82704,45165323,0,0x0,8
tick,0x7ff86ea82704,45167316,0,0x0,8
tick,0x7ff86ea82704,45169349,0,0x0,8
tick,0x7ff86ea82704,45171373,0,0x0,8
tick,0x7ff86ea82704,45173304,0,0x0,8
tick,0x7ff86ea82704,45175263,0,0x0,8
tick,0x7ff86ea82704,45177246,0,0x0,8
tick,0x7ff86ea82704,45179320,0,0x0,8
tick,0x7ff86ea82704,45181282,0,0x0,8
tick,0x7ff86ea82704,45183379,0,0x0,8
tick,0x7ff86ea82704,45185223,0,0x0,8
tick,0x7ff86ea82704,45187271,0,0x0,8
tick,0x7ff86ea82704,45189274,0,0x0,8
tick,0x7ff86ea82704,45191266,0,0x0,8
tick,0x7ff86ea82704,45193162,0,0x0,8
tick,0x7ff86ea82704,45195301,0,0x0,8
tick,0x7ff86ea82704,45197213,0,0x0,8
tick,0x7ff86ea82704,45199212,0,0x0,8
tick,0x7ff86ea82704,45201230,0,0x0,8
tick,0x7ff86ea82704,45203231,0,0x0,8
tick,0x7ff86ea82704,45205408,0,0x0,8
tick,0x7ff86ea82704,45207097,0,0x0,8
tick,0x7ff86ea82704,45209264,0,0x0,8
tick,0x7ff86ea82704,45211268,0,0x0,8
tick,0x7ff86ea82704,45213275,0,0x0,8
tick,0x7ff86ea82704,45215124,0,0x0,8
tick,0x7ff86ea82704,45217130,0,0x0,8
tick,0x7ff86ea82704,45219293,0,0x0,8
tick,0x7ff86ea82704,45221254,0,0x0,8
tick,0x7ff86ea82704,45223344,0,0x0,8
tick,0x7ff86ea82704,45225094,0,0x0,8
tick,0x7ff86ea82704,45227262,0,0x0,8
tick,0x7ff86ea82704,45229413,0,0x0,8
tick,0x7ff86ea82704,45231283,0,0x0,8
tick,0x7ff86ea82704,45233293,0,0x0,8
tick,0x7ff86ea82704,45235696,0,0x0,8
tick,0x7ff86ea82704,45237089,0,0x0,8
tick,0x7ff86ea82704,45238934,0,0x0,8
tick,0x7ff86ea82704,45241252,0,0x0,8
tick,0x7ff86ea82704,45243169,0,0x0,8
tick,0x7ff86ea82704,45245108,0,0x0,8
tick,0x7ff86ea82704,45246982,0,0x0,8
tick,0x7ff86ea82704,45249103,0,0x0,8
tick,0x7ff86ea82704,45250934,0,0x0,8
tick,0x7ff86ea82704,45253058,0,0x0,8
tick,0x7ff86ea82704,45254935,0,0x0,8
tick,0x7ff86ea82704,45257024,0,0x0,8
tick,0x7ff86ea82704,45259184,0,0x0,8
tick,0x7ff86ea82704,45261079,0,0x0,8
tick,0x7ff86ea82704,45263051,0,0x0,8
tick,0x7ff86ea82704,45264993,0,0x0,8
tick,0x7ff86ea82704,45267131,0,0x0,8
tick,0x7ff86ea82704,45269053,0,0x0,8
tick,0x7ff86ea82704,45271165,0,0x0,8
tick,0x7ff86ea82704,45272967,0,0x0,8
tick,0x7ff86ea82704,45275175,0,0x0,8
tick,0x7ff86ea82704,45276939,0,0x0,8
tick,0x7ff86ea82704,45278999,0,0x0,8
tick,0x7ff86ea82704,45281008,0,0x0,8
tick,0x7ff86ea82704,45283465,0,0x0,8
tick,0x7ff86ea82704,45284938,0,0x0,8
tick,0x7ff86ea82704,45287092,0,0x0,8
tick,0x7ff86ea82704,45289050,0,0x0,8
tick,0x7ff86ea82704,45291005,0,0x0,8
tick,0x7ff86ea82704,45292845,0,0x0,8
tick,0x7ff86ea82704,45294967,0,0x0,8
tick,0x7ff86ea82704,45296891,0,0x0,8
tick,0x7ff86ea82704,45298972,0,0x0,8
tick,0x7ff86ea82704,45301053,0,0x0,8
tick,0x7ff86ea82704,45302929,0,0x0,8
tick,0x7ff86ea82704,45305005,0,0x0,8
tick,0x7ff86ea82704,45306929,0,0x0,8
tick,0x7ff86ea82704,45308920,0,0x0,8
tick,0x7ff86ea82704,45310950,0,0x0,8
tick,0x7ff86ea82704,45312930,0,0x0,8
tick,0x7ff86ea82704,45315185,0,0x0,8
tick,0x7ff86ea82704,45316890,0,0x0,8
tick,0x7ff86ea82704,45318979,0,0x0,8
tick,0x7ff86ea82704,45323675,0,0x0,8
tick,0x7ff86ea82704,45325953,0,0x0,8
tick,0x7ff86ea82704,45327910,0,0x0,8
tick,0x7ff86ea82704,45329857,0,0x0,8
tick,0x7ff86ea82704,45331842,0,0x0,8
tick,0x7ff86ea82704,45333954,0,0x0,8
tick,0x7ff86ea82704,45335958,0,0x0,8
tick,0x7ff86ea82704,45337873,0,0x0,8
tick,0x7ff86ea82704,45339876,0,0x0,8
tick,0x7ff86ea82704,45341791,0,0x0,8
tick,0x7ff86ea82704,45343746,0,0x0,8
tick,0x7ff86ea82704,45345865,0,0x0,8
tick,0x7ff86ea82704,45347962,0,0x0,8
tick,0x7ff86ea82704,45349829,0,0x0,8
tick,0x7ff86ea82704,45351790,0,0x0,8
tick,0x7ff86ea82704,45353702,0,0x0,8
tick,0x7ff86ea82704,45355867,0,0x0,8
tick,0x7ff86ea82704,45357799,0,0x0,8
tick,0x7ff86ea82704,45359774,0,0x0,8
tick,0x7ff86ea82704,45361662,0,0x0,8
tick,0x7ff86ea82704,45363727,0,0x0,8
tick,0x7ff86ea82704,45365741,0,0x0,8
tick,0x7ff86ea82704,45367729,0,0x0,8
tick,0x7ff86ea82704,45369661,0,0x0,8
tick,0x7ff86ea82704,45371770,0,0x0,8
tick,0x7ff86ea82704,45373775,0,0x0,8
tick,0x7ff86ea82704,45375719,0,0x0,8
tick,0x7ff86ea82704,45377694,0,0x0,8
tick,0x7ff86ea82704,45379807,0,0x0,8
tick,0x7ff86ea82704,45381672,0,0x0,8
tick,0x7ff86ea82704,45383678,0,0x0,8
tick,0x7ff86ea82704,45385683,0,0x0,8
tick,0x7ff86ea82704,45387629,0,0x0,8
tick,0x7ff86ea82704,45389819,0,0x0,8
tick,0x7ff86ea82704,45391661,0,0x0,8
tick,0x7ff86ea82704,45394091,0,0x0,8
tick,0x7ff86ea82704,45395677,0,0x0,8
tick,0x7ff86ea82704,45397565,0,0x0,8
tick,0x7ff86ea82704,45399628,0,0x0,8
tick,0x7ff86ea82704,45401521,0,0x0,8
tick,0x7ff86ea82704,45403678,0,0x0,8
tick,0x7ff86ea82704,45405551,0,0x0,8
tick,0x7ff86ea82704,45407545,0,0x0,8
tick,0x7ff86ea82704,45409550,0,0x0,8
tick,0x7ff86ea82704,45411668,0,0x0,8
tick,0x7ff86ea82704,45413590,0,0x0,8
tick,0x7ff86ea82704,45415816,0,0x0,8
tick,0x7ff86ea82704,45417641,0,0x0,8
tick,0x7ff86ea82704,45419924,0,0x0,8
tick,0x7ff86ea82704,45421577,0,0x0,8
tick,0x7ff86ea82704,45423681,0,0x0,8
tick,0x7ff86ea82704,45425613,0,0x0,8
tick,0x7ff86ea82704,45427611,0,0x0,8
tick,0x7ff86ea82704,45429503,0,0x0,8
tick,0x7ff86ea82704,45431617,0,0x0,8
tick,0x7ff86ea82704,45433816,0,0x0,8
tick,0x7ff86ea82704,45435469,0,0x0,8
tick,0x7ff86ea82704,45437524,0,0x0,8
tick,0x7ff86ea82704,45439609,0,0x0,8
tick,0x7ff86ea82704,45441711,0,0x0,8
tick,0x7ff86ea82704,45443494,0,0x0,8
tick,0x7ff86ea82704,45445599,0,0x0,8
tick,0x7ff86ea82704,45447474,0,0x0,8
tick,0x7ff86ea82704,45449433,0,0x0,8
tick,0x7ff86ea82704,45451567,0,0x0,8
tick,0x7ff86ea82704,45453540,0,0x0,8
tick,0x7ff86ea82704,45455487,0,0x0,8
tick,0x7ff86ea82704,45457540,0,0x0,8
tick,0x7ff86ea82704,45459467,0,0x0,8
tick,0x7ff86ea82704,45461508,0,0x0,8
tick,0x7ff86ea82704,45463388,0,0x0,8
tick,0x7ff86ea82704,45465370,0,0x0,8
tick,0x7ff86ea82704,45467523,0,0x0,8
tick,0x7ff86ea82704,45469520,0,0x0,8
tick,0x7ff86ea82704,45471456,0,0x0,8
tick,0x7ff86ea82704,45473438,0,0x0,8
tick,0x7ff86ea82704,45475424,0,0x0,8
tick,0x7ff86ea82704,45477417,0,0x0,8
tick,0x7ff86ea82704,45479385,0,0x0,8
tick,0x7ff86ea82704,45481406,0,0x0,8
tick,0x7ff86ea82704,45483557,0,0x0,8
tick,0x7ff86ea82704,45485541,0,0x0,8
tick,0x7ff86ea82704,45487407,0,0x0,8
tick,0x7ff86ea82704,45489376,0,0x0,8
tick,0x7ff86ea82704,45491438,0,0x0,8
tick,0x7ff86ea82704,45493358,0,0x0,8
tick,0x7ff86ea82704,45495317,0,0x0,8
tick,0x7ff86ea82704,45497585,0,0x0,8
tick,0x7ff86ea82704,45499439,0,0x0,8
tick,0x7ff86ea82704,45501344,0,0x0,8
tick,0x7ff86ea82704,45503361,0,0x0,8
tick,0x7ff86ea82704,45505344,0,0x0,8
tick,0x7ff86ea82704,45507237,0,0x0,8
tick,0x7ff86ea82704,45509263,0,0x0,8
tick,0x7ff86ea82704,45511135,0,0x0,8
tick,0x7ff86ea82704,45513240,0,0x0,8
tick,0x7ff86ea82704,45515492,0,0x0,8
tick,0x7ff86ea82704,45517208,0,0x0,8
tick,0x7ff86ea82704,45519312,0,0x0,8
tick,0x7ff86ea82704,45521214,0,0x0,8
tick,0x7ff86ea82704,45523318,0,0x0,8
tick,0x7ff86ea82704,45525196,0,0x0,8
tick,0x7ff86ea82704,45527362,0,0x0,8
tick,0x7ff86ea82704,45529127,0,0x0,8
tick,0x7ff86ea82704,45531209,0,0x0,8
tick,0x7ff86ea82704,45533144,0,0x0,8
tick,0x7ff86ea82704,45535368,0,0x0,8
tick,0x7ff86ea82704,45537227,0,0x0,8
tick,0x7ff86ea82704,45539270,0,0x0,8
tick,0x7ff86ea82704,45541313,0,0x0,8
tick,0x7ff86ea82704,45543146,0,0x0,8
tick,0x7ff86ea82704,45545150,0,0x0,8
tick,0x7ff86ea82704,45547312,0,0x0,8
tick,0x7ff86ea82704,45549143,0,0x0,8
tick,0x7ff86ea82704,45551475,0,0x0,8
tick,0x7ff86ea82704,45553201,0,0x0,8
tick,0x7ff86ea82704,45555114,0,0x0,8
tick,0x7ff86ea82704,45557214,0,0x0,8
tick,0x7ff86ea82704,45559364,0,0x0,8
tick,0x7ff86ea82704,45561081,0,0x0,8
tick,0x7ff86ea82704,45563266,0,0x0,8
tick,0x7ff86ea82704,45565114,0,0x0,8
tick,0x7ff86ea82704,45567102,0,0x0,8
tick,0x7ff86ea82704,45569296,0,0x0,8
tick,0x7ff86ea82704,45571113,0,0x0,8
tick,0x7ff86ea82704,45573123,0,0x0,8
tick,0x7ff86ea82704,45575177,0,0x0,8
tick,0x7ff86ea82704,45577088,0,0x0,8
tick,0x7ff86ea82704,45579125,0,0x0,8
tick,0x7ff86ea82704,45581037,0,0x0,8
tick,0x7ff86ea82704,45583083,0,0x0,8
tick,0x7ff86ea82704,45585069,0,0x0,8
tick,0x7ff86ea82704,45587037,0,0x0,8
tick,0x7ff86ea82704,45589086,0,0x0,8
tick,0x7ff86ea82704,45591007,0,0x0,8
tick,0x7ff86ea82704,45593091,0,0x0,8
tick,0x7ff86ea82704,45594983,0,0x0,8
tick,0x7ff86ea82704,45597200,0,0x0,8
tick,0x7ff86ea82704,45599041,0,0x0,8
tick,0x7ff86ea82704,45601105,0,0x0,8
tick,0x7ff86ea82704,45603160,0,0x0,8
tick,0x7ff86ea82704,45605100,0,0x0,8
tick,0x7ff86ea82704,45607059,0,0x0,8
tick,0x7ff86ea82704,45609144,0,0x0,8
tick,0x7ff86ea82704,45611177,0,0x0,8
tick,0x7ff86ea82704,45613042,0,0x0,8
tick,0x7ff86ea82704,45615054,0,0x0,8
tick,0x7ff86ea82704,45616920,0,0x0,8
tick,0x7ff86ea82704,45619098,0,0x0,8
tick,0x7ff86ea82704,45620936,0,0x0,8
tick,0x7ff86ea82704,45622992,0,0x0,8
tick,0x7ff86ea82704,45624967,0,0x0,8
tick,0x7ff86ea82704,45626943,0,0x0,8
tick,0x7ff86ea82704,45629035,0,0x0,8
tick,0x7ff86ea82704,45630980,0,0x0,8
tick,0x7ff86ea82704,45632971,0,0x0,8
tick,0x7ff86ea82704,45635004,0,0x0,8
tick,0x7ff86ea82704,45637015,0,0x0,8
tick,0x7ff86ea82704,45639009,0,0x0,8
tick,0x7ff86ea82704,45640888,0,0x0,8
tick,0x7ff86ea82704,45642977,0,0x0,8
tick,0x7ff86ea82704,45644919,0,0x0,8
tick,0x7ff86ea82704,45646964,0,0x0,8
tick,0x7ff86ea82704,45649000,0,0x0,8
tick,0x7ff86ea82704,45650954,0,0x0,8
tick,0x7ff86ea82704,45652844,0,0x0,8
tick,0x7ff86ea82704,45654980,0,0x0,8
tick,0x7ff86ea82704,45656932,0,0x0,8
tick,0x7ff86ea82704,45659118,0,0x0,8
tick,0x7ff86ea82704,45660979,0,0x0,8
tick,0x7ff86ea82704,45663014,0,0x0,8
tick,0x7ff86ea82704,45664879,0,0x0,8
tick,0x7ff86ea82704,45666901,0,0x0,8
tick,0x7ff86ea82704,45668827,0,0x0,8
tick,0x7ff86ea82704,45670813,0,0x0,8
tick,0x7ff86ea82704,45672843,0,0x0,8
tick,0x7ff86ea82704,45674843,0,0x0,8
tick,0x7ff86ea82704,45676813,0,0x0,8
tick,0x7ff86ea82704,45678880,0,0x0,8
tick,0x7ff86ea82704,45680865,0,0x0,8
tick,0x7ff86ea82704,45682840,0,0x0,8
tick,0x7ff86ea82704,45684970,0,0x0,8
tick,0x7ff86ea82704,45686826,0,0x0,8
tick,0x7ff86ea82704,45688843,0,0x0,8
tick,0x7ff86ea82704,45690721,0,0x0,8
tick,0x7ff86ea82704,45692789,0,0x0,8
tick,0x7ff86ea82704,45694742,0,0x0,8
tick,0x7ff86ea82704,45696742,0,0x0,8
tick,0x7ff86ea82704,45698748,0,0x0,8
tick,0x7ff86ea82704,45700759,0,0x0,8
tick,0x7ff86ea82704,45702767,0,0x0,8
tick,0x7ff86ea82704,45704737,0,0x0,8
tick,0x7ff86ea82704,45706785,0,0x0,8
tick,0x7ff86ea82704,45708772,0,0x0,8
tick,0x7ff86ea82704,45710685,0,0x0,8
tick,0x7ff86ea82704,45712839,0,0x0,8
tick,0x7ff86ea82704,45714775,0,0x0,8
tick,0x7ff86ea82704,45716810,0,0x0,8
tick,0x7ff86ea82704,45718672,0,0x0,8
tick,0x7ff86ea82704,45720688,0,0x0,8
tick,0x7ff86ea82704,45722757,0,0x0,8
tick,0x7ff86ea82704,45724941,0,0x0,8
tick,0x7ff86ea82704,45726708,0,0x0,8
tick,0x7ff86ea82704,45728766,0,0x0,8
tick,0x7ff86ea82704,45730655,0,0x0,8
tick,0x7ff86ea82704,45732706,0,0x0,8
tick,0x7ff86ea82704,45734698,0,0x0,8
tick,0x7ff86ea82704,45736727,0,0x0,8
tick,0x7ff86ea82704,45738569,0,0x0,8
tick,0x7ff86ea82704,45740746,0,0x0,8
tick,0x7ff86ea82704,45742701,0,0x0,8
tick,0x7ff86ea82704,45744707,0,0x0,8
tick,0x7ff86ea82704,45746701,0,0x0,8
tick,0x7ff86ea82704,45748569,0,0x0,8
tick,0x7ff86ea82704,45750667,0,0x0,8
tick,0x7ff86ea82704,45752643,0,0x0,8
tick,0x7ff86ea82704,45754661,0,0x0,8
tick,0x7ff86ea82704,45756482,0,0x0,8
tick,0x7ff86ea82704,45758695,0,0x0,8
tick,0x7ff86ea82704,45760542,0,0x0,8
tick,0x7ff86ea82704,45762589,0,0x0,8
tick,0x7ff86ea82704,45764447,0,0x0,8
tick,0x7ff86ea82704,45766641,0,0x0,8
tick,0x7ff86ea82704,45768516,0,0x0,8
tick,0x7ff86ea82704,45770687,0,0x0,8
tick,0x7ff86ea82704,45772601,0,0x0,8
tick,0x7ff86ea82704,45774610,0,0x0,8
tick,0x7ff86ea82704,45776535,0,0x0,8
tick,0x7ff86ea82704,45778581,0,0x0,8
tick,0x7ff86ea82704,45780536,0,0x0,8
tick,0x7ff86ea82704,45782594,0,0x0,8
tick,0x7ff86ea82704,45784578,0,0x0,8
tick,0x7ff86ea82704,45786633,0,0x0,8
tick,0x7ff86ea82704,45788594,0,0x0,8
tick,0x7ff86ea82704,45790493,0,0x0,8
tick,0x7ff86ea82704,45792559,0,0x0,8
tick,0x7ff86ea82704,45794513,0,0x0,8
tick,0x7ff86ea82704,45796536,0,0x0,8
tick,0x7ff86ea82704,45798548,0,0x0,8
tick,0x7ff86ea82704,45800486,0,0x0,8
tick,0x7ff86ea82704,45802564,0,0x0,8
tick,0x7ff86ea82704,45804454,0,0x0,8
tick,0x7ff86ea82704,45806608,0,0x0,8
tick,0x7ff86ea82704,45808503,0,0x0,8
tick,0x7ff86ea82704,45810591,0,0x0,8
tick,0x7ff86ea82704,45812521,0,0x0,8
tick,0x7ff86ea82704,45814649,0,0x0,8
tick,0x7ff86ea82704,45816516,0,0x0,8
tick,0x7ff86ea82704,45818526,0,0x0,8
tick,0x7ff86ea82704,45820561,0,0x0,8
tick,0x7ff86ea82704,45822430,0,0x0,8
tick,0x7ff86ea82704,45824500,0,0x0,8
tick,0x7ff86ea82704,45826458,0,0x0,8
tick,0x7ff86ea82704,45828476,0,0x0,8
tick,0x7ff86ea82704,45830433,0,0x0,8
tick,0x7ff86ea82704,45832403,0,0x0,8
tick,0x7ff86ea82704,45834325,0,0x0,8
tick,0x7ff86ea82704,45836497,0,0x0,8
tick,0x7ff86ea82704,45838385,0,0x0,8
tick,0x7ff86ea82704,45840592,0,0x0,8
tick,0x7ff86ea82704,45842357,0,0x0,8
tick,0x7ff86ea82704,45844411,0,0x0,8
tick,0x7ff86ea82704,45846313,0,0x0,8
tick,0x7ff86ea82704,45848424,0,0x0,8
tick,0x7ff86ea82704,45850320,0,0x0,8
tick,0x7ff86ea82704,45852348,0,0x0,8
tick,0x7ff86ea82704,45854446,0,0x0,8
tick,0x7ff86ea82704,45856338,0,0x0,8
tick,0x7ff86ea82704,45858403,0,0x0,8
tick,0x7ff86ea82704,45860342,0,0x0,8
tick,0x7ff86ea82704,45865076,0,0x0,8
tick,0x7ff86ea82704,45866341,0,0x0,8
tick,0x7ff86ea82704,45868455,0,0x0,8
tick,0x7ff86ea82704,45870361,0,0x0,8
tick,0x7ff86ea82704,45872472,0,0x0,8
tick,0x7ff86ea82704,45874426,0,0x0,8
tick,0x7ff86ea82704,45876796,0,0x0,8
tick,0x7ff86ea82704,45878618,0,0x0,8
tick,0x7ff86ea82704,45880665,0,0x0,8
tick,0x7ff86ea82704,45882986,0,0x0,8
tick,0x7ff86ea82704,45884761,0,0x0,8
tick,0x7ff86ea82704,45886856,0,0x0,8
tick,0x7ff86ea82704,45888712,0,0x0,8
tick,0x7ff86ea82704,45890790,0,0x0,8
tick,0x7ff86ea82704,45892779,0,0x0,8
tick,0x7ff86ea82704,45895374,0,0x0,8
tick,0x7ff86ea82704,45897079,0,0x0,8
tick,0x7ff86ea82704,45898291,0,0x0,8
tick,0x7ff86ea82704,45900265,0,0x0,8
tick,0x7ff86ea82704,45902637,0,0x0,8
tick,0x7ff86ea82704,45904294,0,0x0,8
tick,0x7ff86ea82704,45906314,0,0x0,8
tick,0x7ff86ea82704,45908923,0,0x0,8
tick,0x7ff86ea82704,45910584,0,0x0,8
tick,0x7ff86ea82704,45912422,0,0x0,8
tick,0x7ff86ea82704,45914399,0,0x0,8
tick,0x7ff86ea82704,45916505,0,0x0,8
tick,0x7ff86ea82704,45918282,0,0x0,8
tick,0x7ff86ea82704,45920347,0,0x0,8
tick,0x7ff86ea82704,45922237,0,0x0,8
tick,0x7ff86ea82704,45924319,0,0x0,8
tick,0x7ff86ea82704,45926315,0,0x0,8
tick,0x7ff86ea82704,45928347,0,0x0,8
tick,0x7ff86ea82704,45930755,0,0x0,8
tick,0x7ff86ea82704,45932163,0,0x0,8
tick,0x7ff86ea82704,45934479,0,0x0,8
tick,0x7ff86ea82704,45936050,0,0x0,8
tick,0x7ff86ea82704,45938067,0,0x0,8
tick,0x7ff86ea82704,45940036,0,0x0,8
tick,0x7ff86ea82704,45942313,0,0x0,8
tick,0x7ff86ea82704,45944119,0,0x0,8
tick,0x7ff86ea82704,45946150,0,0x0,8
tick,0x7ff86ea82704,45948083,0,0x0,8
tick,0x7ff86ea82704,45950227,0,0x0,8
tick,0x7ff86ea82704,45952079,0,0x0,8
tick,0x7ff86ea82704,45954078,0,0x0,8
tick,0x7ff86ea82704,45956166,0,0x0,8
tick,0x7ff86ea82704,45958424,0,0x0,8
tick,0x7ff86ea82704,45960513,0,0x0,8
tick,0x7ff86ea82704,45962048,0,0x0,8
tick,0x7ff86ea82704,45964113,0,0x0,8
tick,0x7ff86ea82704,45966027,0,0x0,8
tick,0x7ff86ea82704,45968124,0,0x0,8
tick,0x7ff86ea82704,45969934,0,0x0,8
tick,0x7ff86ea82704,45972016,0,0x0,8
tick,0x7ff86ea82704,45973882,0,0x0,8
tick,0x7ff86ea82704,45976401,0,0x0,8
tick,0x7ff86ea82704,45977898,0,0x0,8
tick,0x7ff86ea82704,45980111,0,0x0,8
tick,0x7ff86ea82704,45982051,0,0x0,8
tick,0x7ff86ea82704,45984061,0,0x0,8
tick,0x7ff86ea82704,45985998,0,0x0,8
tick,0x7ff86ea82704,45987994,0,0x0,8
tick,0x7ff86ea82704,45989896,0,0x0,8
tick,0x7ff86ea82704,45992101,0,0x0,8
tick,0x7ff86ea82704,45993976,0,0x0,8
tick,0x7ff86ea82704,45995989,0,0x0,8
tick,0x7ff86ea82704,45997902,0,0x0,8
tick,0x7ff86ea82704,46000090,0,0x0,8
tick,0x7ff86ea82704,46002060,0,0x0,8
tick,0x7ff86ea82704,46004020,0,0x0,8
tick,0x7ff86ea82704,46006387,0,0x0,8
tick,0x7ff86ea82704,46008155,0,0x0,8
tick,0x7ff86ea82704,46009986,0,0x0,8
tick,0x7ff86ea82704,46011845,0,0x0,8
tick,0x7ff86ea82704,46013919,0,0x0,8
tick,0x7ff86ea82704,46015941,0,0x0,8
tick,0x7ff86ea82704,46017896,0,0x0,8
tick,0x7ff86ea82704,46019854,0,0x0,8
tick,0x7ff86ea82704,46022025,0,0x0,8
tick,0x7ff86ea82704,46023962,0,0x0,8
tick,0x7ff86ea82704,46026012,0,0x0,8
tick,0x7ff86ea82704,46027887,0,0x0,8
tick,0x7ff86ea82704,46029910,0,0x0,8
tick,0x7ff86ea82704,46032060,0,0x0,8
tick,0x7ff86ea82704,46033812,0,0x0,8
tick,0x7ff86ea82704,46035955,0,0x0,8
tick,0x7ff86ea82704,46038183,0,0x0,8
tick,0x7ff86ea82704,46039985,0,0x0,8
tick,0x7ff86ea82704,46042042,0,0x0,8
tick,0x7ff86ea82704,46043945,0,0x0,8
tick,0x7ff86ea82704,46045790,0,0x0,8
tick,0x7ff86ea82704,46047824,0,0x0,8
tick,0x7ff86ea82704,46049939,0,0x0,8
tick,0x7ff86ea82704,46051792,0,0x0,8
tick,0x7ff86ea82704,46053858,0,0x0,8
tick,0x7ff86ea82704,46055822,0,0x0,8
tick,0x7ff86ea82704,46057998,0,0x0,8
tick,0x7ff86ea82704,46059970,0,0x0,8
tick,0x7ff86ea82704,46061863,0,0x0,8
tick,0x7ff86ea82704,46063791,0,0x0,8
tick,0x7ff86ea82704,46065839,0,0x0,8
tick,0x7ff86ea82704,46067711,0,0x0,8
tick,0x7ff86ea82704,46069802,0,0x0,8
tick,0x7ff86ea82704,46071695,0,0x0,8
tick,0x7ff86ea82704,46073742,0,0x0,8
tick,0x7ff86ea82704,46075714,0,0x0,8
tick,0x7ff86ea82704,46077939,0,0x0,8
tick,0x7ff86ea82704,46079799,0,0x0,8
tick,0x7ff86ea82704,46081832,0,0x0,8
tick,0x7ff86ea82704,46083887,0,0x0,8
tick,0x7ff86ea82704,46085847,0,0x0,8
tick,0x7ff86ea82704,46087932,0,0x0,8
tick,0x7ff86ea82704,46089706,0,0x0,8
tick,0x7ff86ea82704,46091722,0,0x0,8
tick,0x7ff86ea82704,46093718,0,0x0,8
tick,0x7ff86ea82704,46095831,0,0x0,8
tick,0x7ff86ea82704,46097700,0,0x0,8
tick,0x7ff86ea82704,46099744,0,0x0,8
tick,0x7ff86ea82704,46101675,0,0x0,8
tick,0x7ff86ea82704,46103699,0,0x0,8
tick,0x7ff86ea82704,46105741,0,0x0,8
tick,0x7ff86ea82704,46107737,0,0x0,8
tick,0x7ff86ea82704,46109696,0,0x0,8
tick,0x7ff86ea82704,46111707,0,0x0,8
tick,0x7ff86ea82704,46113736,0,0x0,8
tick,0x7ff86ea82704,46115852,0,0x0,8
tick,0x7ff86ea82704,46117740,0,0x0,8
tick,0x7ff86ea82704,46119808,0,0x0,8
tick,0x7ff86ea82704,46121767,0,0x0,8
tick,0x7ff86ea82704,46123593,0,0x0,8
tick,0x7ff86ea82704,46125707,0,0x0,8
tick,0x7ff86ea82704,46127622,0,0x0,8
tick,0x7ff86ea82704,46129738,0,0x0,8
tick,0x7ff86ea82704,46131701,0,0x0,8
tick,0x7ff86ea82704,46133748,0,0x0,8
tick,0x7ff86ea82704,46135658,0,0x0,8
tick,0x7ff86ea82704,46137664,0,0x0,8
tick,0x7ff86ea82704,46139660,0,0x0,8
tick,0x7ff86ea82704,46141687,0,0x0,8
tick,0x7ff86ea82704,46143656,0,0x0,8
tick,0x7ff86ea82704,46145598,0,0x0,8
tick,0x7ff86ea82704,46147614,0,0x0,8
tick,0x7ff86ea82704,46149550,0,0x0,8
tick,0x7ff86ea82704,46151694,0,0x0,8
tick,0x7ff86ea82704,46153649,0,0x0,8
tick,0x7ff86ea82704,46155635,0,0x0,8
tick,0x7ff86ea82704,46157616,0,0x0,8
tick,0x7ff86ea82704,46159595,0,0x0,8
tick,0x7ff86ea82704,46161633,0,0x0,8
tick,0x7ff86ea82704,46163627,0,0x0,8
tick,0x7ff86ea82704,46165647,0,0x0,8
tick,0x7ff86ea82704,46167616,0,0x0,8
tick,0x7ff86ea82704,46169587,0,0x0,8
tick,0x7ff86ea82704,46171510,0,0x0,8
tick,0x7ff86ea82704,46173582,0,0x0,8
tick,0x7ff86ea82704,46175560,0,0x0,8
tick,0x7ff86ea82704,46177636,0,0x0,8
tick,0x7ff86ea82704,46179398,0,0x0,8
tick,0x7ff86ea82704,46181493,0,0x0,8
tick,0x7ff86ea82704,46183418,0,0x0,8
tick,0x7ff86ea82704,46185820,0,0x0,8
tick,0x7ff86ea82704,46187477,0,0x0,8
tick,0x7ff86ea82704,46189640,0,0x0,8
tick,0x7ff86ea82704,46191584,0,0x0,8
tick,0x7ff86ea82704,46193551,0,0x0,8
tick,0x7ff86ea82704,46195407,0,0x0,8
tick,0x7ff86ea82704,46197526,0,0x0,8
tick,0x7ff86ea82704,46199559,0,0x0,8
tick,0x7ff86ea82704,46201599,0,0x0,8
tick,0x7ff86ea82704,46203516,0,0x0,8
tick,0x7ff86ea82704,46205427,0,0x0,8
tick,0x7ff86ea82704,46207348,0,0x0,8
tick,0x7ff86ea82704,46209449,0,0x0,8
tick,0x7ff86ea82704,46211419,0,0x0,8
tick,0x7ff86ea82704,46213314,0,0x0,8
tick,0x7ff86ea82704,46215489,0,0x0,8
tick,0x7ff86ea82704,46217343,0,0x0,8
tick,0x7ff86ea82704,46219419,0,0x0,8
tick,0x7ff86ea82704,46221287,0,0x0,8
tick,0x7ff86ea82704,46223367,0,0x0,8
tick,0x7ff86ea82704,46225341,0,0x0,8
tick,0x7ff86ea82704,46227479,0,0x0,8
tick,0x7ff86ea82704,46229341,0,0x0,8
tick,0x7ff86ea82704,46231383,0,0x0,8
tick,0x7ff86ea82704,46233417,0,0x0,8
tick,0x7ff86ea82704,46235330,0,0x0,8
tick,0x7ff86ea82704,46237331,0,0x0,8
tick,0x7ff86ea82704,46239267,0,0x0,8
tick,0x7ff86ea82704,46241490,0,0x0,8
tick,0x7ff86ea82704,46243337,0,0x0,8
tick,0x7ff86ea82704,46245265,0,0x0,8
tick,0x7ff86ea82704,46247271,0,0x0,8
tick,0x7ff86ea82704,46249301,0,0x0,8
tick,0x7ff86ea82704,46251268,0,0x0,8
tick,0x7ff86ea82704,46253200,0,0x0,8
tick,0x7ff86ea82704,46255324,0,0x0,8
tick,0x7ff86ea82704,46257197,0,0x0,8
tick,0x7ff86ea82704,46259346,0,0x0,8
tick,0x7ff86ea82704,46261221,0,0x0,8
tick,0x7ff86ea82704,46263288,0,0x0,8
tick,0x7ff86ea82704,46265278,0,0x0,8
tick,0x7ff86ea82704,46267250,0,0x0,8
tick,0x7ff86ea82704,46269235,0,0x0,8
tick,0x7ff86ea82704,46271258,0,0x0,8
tick,0x7ff86ea82704,46273347,0,0x0,8
tick,0x7ff86ea82704,46275664,0,0x0,8
tick,0x7ff86ea82704,46277277,0,0x0,8
tick,0x7ff86ea82704,46279174,0,0x0,8
tick,0x7ff86ea82704,46281309,0,0x0,8
tick,0x7ff86ea82704,46283213,0,0x0,8
tick,0x7ff86ea82704,46285169,0,0x0,8
tick,0x7ff86ea82704,46287228,0,0x0,8
tick,0x7ff86ea82704,46289210,0,0x0,8
tick,0x7ff86ea82704,46291329,0,0x0,8
tick,0x7ff86ea82704,46293230,0,0x0,8
tick,0x7ff86ea82704,46295238,0,0x0,8
tick,0x7ff86ea82704,46297420,0,0x0,8
tick,0x7ff86ea82704,46299144,0,0x0,8
tick,0x7ff86ea82704,46301154,0,0x0,8
tick,0x7ff86ea82704,46303207,0,0x0,8
tick,0x7ff86ea82704,46305154,0,0x0,8
tick,0x7ff86ea82704,46307227,0,0x0,8
tick,0x7ff86ea82704,46309111,0,0x0,8
tick,0x7ff86ea82704,46311127,0,0x0,8
tick,0x7ff86ea82704,46313103,0,0x0,8
tick,0x7ff86ea82704,46315187,0,0x0,8
tick,0x7ff86ea82704,46317151,0,0x0,8
tick,0x7ff86ea82704,46319122,0,0x0,8
tick,0x7ff86ea82704,46321331,0,0x0,8
tick,0x7ff86ea82704,46323070,0,0x0,8
tick,0x7ff86ea82704,46325148,0,0x0,8
tick,0x7ff86ea82704,46327094,0,0x0,8
tick,0x7ff86ea82704,46329201,0,0x0,8
tick,0x7ff86ea82704,46331102,0,0x0,8
tick,0x7ff86ea82704,46333053,0,0x0,8
tick,0x7ff86ea82704,46335109,0,0x0,8
tick,0x7ff86ea82704,46337045,0,0x0,8
tick,0x7ff86ea82704,46339190,0,0x0,8
tick,0x7ff86ea82704,46341108,0,0x0,8
tick,0x7ff86ea82704,46343135,0,0x0,8
tick,0x7ff86ea82704,46345135,0,0x0,8
tick,0x7ff86ea82704,46347073,0,0x0,8
tick,0x7ff86ea82704,46349092,0,0x0,8
tick,0x7ff86ea82704,46351011,0,0x0,8
tick,0x7ff86ea82704,46353076,0,0x0,8
tick,0x7ff86ea82704,46355116,0,0x0,8
tick,0x7ff86ea82704,46357120,0,0x0,8
tick,0x7ff86ea82704,46359027,0,0x0,8
tick,0x7ff86ea82704,46361108,0,0x0,8
tick,0x7ff86ea82704,46363046,0,0x0,8
tick,0x7ff86ea82704,46365048,0,0x0,8
tick,0x7ff86ea82704,46366990,0,0x0,8
tick,0x7ff86ea82704,46368955,0,0x0,8
tick,0x7ff86ea82704,46370982,0,0x0,8
tick,0x7ff86ea82704,46372953,0,0x0,8
tick,0x7ff86ea82704,46375155,0,0x0,8
tick,0x7ff86ea82704,46376988,0,0x0,8
tick,0x7ff86ea82704,46378964,0,0x0,8
tick,0x7ff86ea82704,46380935,0,0x0,8
tick,0x7ff86ea82704,46383056,0,0x0,8
tick,0x7ff86ea82704,46385028,0,0x0,8
tick,0x7ff86ea82704,46387060,0,0x0,8
tick,0x7ff86ea82704,46388962,0,0x0,8
tick,0x7ff86ea82704,46390854,0,0x0,8
tick,0x7ff86ea82704,46392939,0,0x0,8
tick,0x7ff86ea82704,46394972,0,0x0,8
tick,0x7ff86ea82704,46396986,0,0x0,8
tick,0x7ff86ea82704,46398963,0,0x0,8
tick,0x7ff86ea82704,46400927,0,0x0,8
tick,0x7ff86ea82704,46402892,0,0x0,8
tick,0x7ff86ea82704,46404949,0,0x0,8
tick,0x7ff86ea82704,46407114,0,0x0,8
tick,0x7ff86ea82704,46409010,0,0x0,8
tick,0x7ff86ea82704,46410781,0,0x0,8
tick,0x7ff86ea82704,46412790,0,0x0,8
tick,0x7ff86ea82704,46414958,0,0x0,8
tick,0x7ff86ea82704,46416870,0,0x0,8
tick,0x7ff86ea82704,46418811,0,0x0,8
tick,0x7ff86ea82704,46420855,0,0x0,8
tick,0x7ff86ea82704,46422767,0,0x0,8
tick,0x7ff86ea82704,46424830,0,0x0,8
tick,0x7ff86ea82704,46426828,0,0x0,8
tick,0x7ff86ea82704,46428797,0,0x0,8
tick,0x7ff86ea82704,46430860,0,0x0,8
tick,0x7ff86ea82704,46432859,0,0x0,8
tick,0x7ff86ea82704,46434778,0,0x0,8
tick,0x7ff86ea82704,46436885,0,0x0,8
tick,0x7ff86ea82704,46438792,0,0x0,8
tick,0x7ff86ea82704,46440955,0,0x0,8
tick,0x7ff86ea82704,46442701,0,0x0,8
tick,0x7ff86ea82704,46444804,0,0x0,8
tick,0x7ff86ea82704,46446758,0,0x0,8
tick,0x7ff86ea82704,46448812,0,0x0,8
tick,0x7ff86ea82704,46450734,0,0x0,8
tick,0x7ff86ea82704,46452832,0,0x0,8
tick,0x7ff86ea82704,46454848,0,0x0,8
tick,0x7ff86ea82704,46456793,0,0x0,8
tick,0x7ff86ea82704,46458728,0,0x0,8
tick,0x7ff86ea82704,46460694,0,0x0,8
tick,0x7ff86ea82704,46462821,0,0x0,8
tick,0x7ff86ea82704,46464670,0,0x0,8
tick,0x7ff86ea82704,46466740,0,0x0,8
tick,0x7ff86ea82704,46468739,0,0x0,8
tick,0x7ff86ea82704,46470744,0,0x0,8
tick,0x7ff86ea82704,46472729,0,0x0,8
tick,0x7ff86ea82704,46474901,0,0x0,8
tick,0x7ff86ea82704,46476714,0,0x0,8
tick,0x7ff86ea82704,46478703,0,0x0,8
tick,0x7ff86ea82704,46480750,0,0x0,8
tick,0x7ff86ea82704,46482681,0,0x0,8
tick,0x7ff86ea82704,46484758,0,0x0,8
tick,0x7ff86ea82704,46486723,0,0x0,8
tick,0x7ff86ea82704,46488772,0,0x0,8
tick,0x7ff86ea82704,46490542,0,0x0,8
tick,0x7ff86ea82704,46492708,0,0x0,8
tick,0x7ff86ea82704,46494581,0,0x0,8
tick,0x7ff86ea82704,46496738,0,0x0,8
tick,0x7ff86ea82704,46498692,0,0x0,8
tick,0x7ff86ea82704,46500652,0,0x0,8
tick,0x7ff86ea82704,46502635,0,0x0,8
tick,0x7ff86ea82704,46504581,0,0x0,8
tick,0x7ff86ea82704,46506654,0,0x0,8
tick,0x7ff86ea82704,46508629,0,0x0,8
tick,0x7ff86ea82704,46510670,0,0x0,8
tick,0x7ff86ea82704,46512749,0,0x0,8
tick,0x7ff86ea82704,46514622,0,0x0,8
tick,0x7ff86ea82704,46516696,0,0x0,8
tick,0x7ff86ea82704,46518670,0,0x0,8
tick,0x7ff86ea82704,46520432,0,0x0,8
tick,0x7ff86ea82704,46522916,0,0x0,8
tick,0x7ff86ea82704,46524850,0,0x0,8
tick,0x7ff86ea82704,46526846,0,0x0,8
tick,0x7ff86ea82704,46528549,0,0x0,8
tick,0x7ff86ea82704,46530574,0,0x0,8
tick,0x7ff86ea82704,46532541,0,0x0,8
tick,0x7ff86ea82704,46534562,0,0x0,8
tick,0x7ff86ea82704,46536469,0,0x0,8
tick,0x7ff86ea82704,46538599,0,0x0,8
tick,0x7ff86ea82704,46540591,0,0x0,8
tick,0x7ff86ea82704,46542552,0,0x0,8
tick,0x7ff86ea82704,46544487,0,0x0,8
tick,0x7ff86ea82704,46546474,0,0x0,8
tick,0x7ff86ea82704,46548491,0,0x0,8
tick,0x7ff86ea82704,46550494,0,0x0,8
tick,0x7ff86ea82704,46552492,0,0x0,8
tick,0x7ff86ea82704,46554560,0,0x0,8
tick,0x7ff86ea82704,46556530,0,0x0,8
tick,0x7ff86ea82704,46558506,0,0x0,8
tick,0x7ff86ea82704,46560326,0,0x0,8
tick,0x7ff86ea82704,46562637,0,0x0,8
tick,0x7ff86ea82704,46564598,0,0x0,8
tick,0x7ff86ea82704,46566396,0,0x0,8
tick,0x7ff86ea82704,46568529,0,0x0,8
tick,0x7ff86ea82704,46570455,0,0x0,8
tick,0x7ff86ea82704,46572479,0,0x0,8
tick,0x7ff86ea82704,46574452,0,0x0,8
tick,0x7ff86ea82704,46576508,0,0x0,8
tick,0x7ff86ea82704,46578497,0,0x0,8
tick,0x7ff86ea82704,46580368,0,0x0,8
tick,0x7ff86ea82704,46582377,0,0x0,8
tick,0x7ff86ea82704,46584456,0,0x0,8
tick,0x7ff86ea82704,46586434,0,0x0,8
tick,0x7ff86ea82704,46588498,0,0x0,8
tick,0x7ff86ea82704,46590303,0,0x0,8
tick,0x7ff86ea82704,46592447,0,0x0,8
tick,0x7ff86ea82704,46594344,0,0x0,8
tick,0x7ff86ea82704,46596432,0,0x0,8
tick,0x7ff86ea82704,46598192,0,0x0,8
tick,0x7ff86ea82704,46600362,0,0x0,8
tick,0x7ff86ea82704,46602286,0,0x0,8
tick,0x7ff86ea82704,46604369,0,0x0,8
tick,0x7ff86ea82704,46606255,0,0x0,8
tick,0x7ff86ea82704,46608346,0,0x0,8
tick,0x7ff86ea82704,46610425,0,0x0,8
tick,0x7ff86ea82704,46612432,0,0x0,8
tick,0x7ff86ea82704,46614468,0,0x0,8
tick,0x7ff86ea82704,46616379,0,0x0,8
tick,0x7ff86ea82704,46618407,0,0x0,8
tick,0x7ff86ea82704,46620418,0,0x0,8
tick,0x7ff86ea82704,46622319,0,0x0,8
tick,0x7ff86ea82704,46624375,0,0x0,8
tick,0x7ff86ea82704,46626336,0,0x0,8
tick,0x7ff86ea82704,46628361,0,0x0,8
tick,0x7ff86ea82704,46630363,0,0x0,8
tick,0x7ff86ea82704,46632315,0,0x0,8
tick,0x7ff86ea82704,46634429,0,0x0,8
tick,0x7ff86ea82704,46636393,0,0x0,8
tick,0x7ff86ea82704,46638344,0,0x0,8
tick,0x7ff86ea82704,46640275,0,0x0,8
tick,0x7ff86ea82704,46642206,0,0x0,8
tick,0x7ff86ea82704,46644249,0,0x0,8
tick,0x7ff86ea82704,46646252,0,0x0,8
tick,0x7ff86ea82704,46648447,0,0x0,8
tick,0x7ff86ea82704,46650367,0,0x0,8
tick,0x7ff86ea82704,46652300,0,0x0,8
tick,0x7ff86ea82704,46654207,0,0x0,8
tick,0x7ff86ea82704,46656361,0,0x0,8
tick,0x7ff86ea82704,46658247,0,0x0,8
tick,0x7ff86ea82704,46660369,0,0x0,8
tick,0x7ff86ea82704,46662339,0,0x0,8
tick,0x7ff86ea82704,46664293,0,0x0,8
tick,0x7ff86ea82704,46666187,0,0x0,8
tick,0x7ff86ea82704,46668402,0,0x0,8
tick,0x7ff86ea82704,46670466,0,0x0,8
tick,0x7ff86ea82704,46672185,0,0x0,8
tick,0x7ff86ea82704,46674091,0,0x0,8
tick,0x7ff86ea82704,46676644,0,0x0,8
tick,0x7ff86ea82704,46678132,0,0x0,8
tick,0x7ff86ea82704,46680160,0,0x0,8
tick,0x7ff86ea82704,46685332,0,0x0,8
tick,0x7ff86ea82704,46687417,0,0x0,8
tick,0x7ff86ea82704,46689367,0,0x0,8
tick,0x7ff86ea82704,46691602,0,0x0,8
tick,0x7ff86ea82704,46693585,0,0x0,8
tick,0x7ff86ea82704,46695410,0,0x0,8
tick,0x7ff86ea82704,46697550,0,0x0,8
tick,0x7ff86ea82704,46699372,0,0x0,8
tick,0x7ff86ea82704,46701260,0,0x0,8
tick,0x7ff86ea82704,46703171,0,0x0,8
tick,0x7ff86ea82704,46705769,0,0x0,8
tick,0x7ff86ea82704,46707338,0,0x0,8
tick,0x7ff86ea82704,46709347,0,0x0,8
tick,0x7ff86ea82704,46711293,0,0x0,8
tick,0x7ff86ea82704,46713141,0,0x0,8
tick,0x7ff86ea82704,46715276,0,0x0,8
tick,0x7ff86ea82704,46717116,0,0x0,8
tick,0x7ff86ea82704,46719243,0,0x0,8
tick,0x7ff86ea82704,46721059,0,0x0,8
tick,0x7ff86ea82704,46723161,0,0x0,8
tick,0x7ff86ea82704,46725234,0,0x0,8
tick,0x7ff86ea82704,46727149,0,0x0,8
tick,0x7ff86ea82704,46729092,0,0x0,8
tick,0x7ff86ea82704,46731075,0,0x0,8
tick,0x7ff86ea82704,46733124,0,0x0,8
tick,0x7ff86ea82704,46734978,0,0x0,8
tick,0x7ff86ea82704,46737093,0,0x0,8
tick,0x7ff86ea82704,46739022,0,0x0,8
tick,0x7ff86ea82704,46741103,0,0x0,8
tick,0x7ff86ea82704,46743113,0,0x0,8
tick,0x7ff86ea82704,46744982,0,0x0,8
tick,0x7ff86ea82704,46747106,0,0x0,8
tick,0x7ff86ea82704,46748997,0,0x0,8
tick,0x7ff86ea82704,46751198,0,0x0,8
tick,0x7ff86ea82704,46753089,0,0x0,8
tick,0x7ff86ea82704,46755179,0,0x0,8
tick,0x7ff86ea82704,46756936,0,0x0,8
tick,0x7ff86ea82704,46759139,0,0x0,8
tick,0x7ff86ea82704,46760958,0,0x0,8
tick,0x7ff86ea82704,46763062,0,0x0,8
tick,0x7ff86ea82704,46765090,0,0x0,8
tick,0x7ff86ea82704,46767030,0,0x0,8
tick,0x7ff86ea82704,46769031,0,0x0,8
tick,0x7ff86ea82704,46771049,0,0x0,8
tick,0x7ff86ea82704,46772966,0,0x0,8
tick,0x7ff86ea82704,46775082,0,0x0,8
tick,0x7ff86ea82704,46776942,0,0x0,8
tick,0x7ff86ea82704,46778983,0,0x0,8
tick,0x7ff86ea82704,46781139,0,0x0,8
tick,0x7ff86ea82704,46782948,0,0x0,8
tick,0x7ff86ea82704,46785122,0,0x0,8
tick,0x7ff86ea82704,46786940,0,0x0,8
tick,0x7ff86ea82704,46788957,0,0x0,8
tick,0x7ff86ea82704,46790921,0,0x0,8
tick,0x7ff86ea82704,46792896,0,0x0,8
tick,0x7ff86ea82704,46794913,0,0x0,8
tick,0x7ff86ea82704,46796892,0,0x0,8
tick,0x7ff86ea82704,46799068,0,0x0,8
tick,0x7ff86ea82704,46800819,0,0x0,8
tick,0x7ff86ea82704,46802892,0,0x0,8
tick,0x7ff86ea82704,46804896,0,0x0,8
tick,0x7ff86ea82704,46806940,0,0x0,8
tick,0x7ff86ea82704,46809096,0,0x0,8
tick,0x7ff86ea82704,46811082,0,0x0,8
tick,0x7ff86ea82704,46813029,0,0x0,8
tick,0x7ff86ea82704,46815107,0,0x0,8
tick,0x7ff86ea82704,46816993,0,0x0,8
tick,0x7ff86ea82704,46818844,0,0x0,8
tick,0x7ff86ea82704,46820755,0,0x0,8
tick,0x7ff86ea82704,46822929,0,0x0,8
tick,0x7ff86ea82704,46824779,0,0x0,8
tick,0x7ff86ea82704,46826939,0,0x0,8
tick,0x7ff86ea82704,46828770,0,0x0,8
tick,0x7ff86ea82704,46830889,0,0x0,8
tick,0x7ff86ea82704,46832786,0,0x0,8
tick,0x7ff86ea82704,46834873,0,0x0,8
tick,0x7ff86ea82704,46836900,0,0x0,8
tick,0x7ff86ea82704,46838760,0,0x0,8
tick,0x7ff86ea82704,46840809,0,0x0,8
tick,0x7ff86ea82704,46842759,0,0x0,8
tick,0x7ff86ea82704,46844857,0,0x0,8
tick,0x7ff86ea82704,46846789,0,0x0,8
tick,0x7ff86ea82704,46848920,0,0x0,8
tick,0x7ff86ea82704,46850707,0,0x0,8
tick,0x7ff86ea82704,46852835,0,0x0,8
tick,0x7ff86ea82704,46854825,0,0x0,8
tick,0x7ff86ea82704,46856805,0,0x0,8
tick,0x7ff86ea82704,46858742,0,0x0,8
tick,0x7ff86ea82704,46860691,0,0x0,8
tick,0x7ff86ea82704,46862722,0,0x0,8
tick,0x7ff86ea82704,46864679,0,0x0,8
tick,0x7ff86ea82704,46866622,0,0x0,8
tick,0x7ff86ea82704,46868762,0,0x0,8
tick,0x7ff86ea82704,46870750,0,0x0,8
tick,0x7ff86ea82704,46872657,0,0x0,8
tick,0x7ff86ea82704,46874741,0,0x0,8
tick,0x7ff86ea82704,46876680,0,0x0,8
tick,0x7ff86ea82704,46878662,0,0x0,8
tick,0x7ff86ea82704,46880655,0,0x0,8
tick,0x7ff86ea82704,46882722,0,0x0,8
tick,0x7ff86ea82704,46884609,0,0x0,8
tick,0x7ff86ea82704,46886656,0,0x0,8
tick,0x7ff86ea82704,46888715,0,0x0,8
tick,0x7ff86ea82704,46890657,0,0x0,8
tick,0x7ff86ea82704,46892567,0,0x0,8
tick,0x7ff86ea82704,46894659,0,0x0,8
tick,0x7ff86ea82704,46896582,0,0x0,8
tick,0x7ff86ea82704,46898710,0,0x0,8
tick,0x7ff86ea82704,46900598,0,0x0,8
tick,0x7ff86ea82704,46902749,0,0x0,8
tick,0x7ff86ea82704,46904559,0,0x0,8
tick,0x7ff86ea82704,46906655,0,0x0,8
tick,0x7ff86ea82704,46908504,0,0x0,8
tick,0x7ff86ea82704,46910699,0,0x0,8
tick,0x7ff86ea82704,46912515,0,0x0,8
tick,0x7ff86ea82704,46914589,0,0x0,8
tick,0x7ff86ea82704,46916543,0,0x0,8
tick,0x7ff86ea82704,46918574,0,0x0,8
tick,0x7ff86ea82704,46920559,0,0x0,8
tick,0x7ff86ea82704,46922664,0,0x0,8
tick,0x7ff86ea82704,46924619,0,0x0,8
tick,0x7ff86ea82704,46926672,0,0x0,8
tick,0x7ff86ea82704,46928595,0,0x0,8
tick,0x7ff86ea82704,46930546,0,0x0,8
tick,0x7ff86ea82704,46932507,0,0x0,8
tick,0x7ff86ea82704,46934573,0,0x0,8
tick,0x7ff86ea82704,46936459,0,0x0,8
tick,0x7ff86ea82704,46938501,0,0x0,8
tick,0x7ff86ea82704,46940461,0,0x0,8
tick,0x7ff86ea82704,46942444,0,0x0,8
tick,0x7ff86ea82704,46944631,0,0x0,8
tick,0x7ff86ea82704,46946440,0,0x0,8
tick,0x7ff86ea82704,46948627,0,0x0,8
tick,0x7ff86ea82704,46950413,0,0x0,8
tick,0x7ff86ea82704,46952662,0,0x0,8
tick,0x7ff86ea82704,46954394,0,0x0,8
tick,0x7ff86ea82704,46956605,0,0x0,8
tick,0x7ff86ea82704,46958441,0,0x0,8
tick,0x7ff86ea82704,46960631,0,0x0,8
tick,0x7ff86ea82704,46962468,0,0x0,8
tick,0x7ff86ea82704,46964518,0,0x0,8
tick,0x7ff86ea82704,46966344,0,0x0,8
tick,0x7ff86ea82704,46968494,0,0x0,8
tick,0x7ff86ea82704,46970384,0,0x0,8
tick,0x7ff86ea82704,46972410,0,0x0,8
tick,0x7ff86ea82704,46974401,0,0x0,8
tick,0x7ff86ea82704,46976474,0,0x0,8
tick,0x7ff86ea82704,46978360,0,0x0,8
tick,0x7ff86ea82704,46980589,0,0x0,8
tick,0x7ff86ea82704,46982435,0,0x0,8
tick,0x7ff86ea82704,46984599,0,0x0,8
tick,0x7ff86ea82704,46986406,0,0x0,8
tick,0x7ff86ea82704,46988583,0,0x0,8
tick,0x7ff86ea82704,46990283,0,0x0,8
tick,0x7ff86ea82704,46992548,0,0x0,8
tick,0x7ff86ea82704,46994544,0,0x0,8
tick,0x7ff86ea82704,46996418,0,0x0,8
tick,0x7ff86ea82704,46998344,0,0x0,8
tick,0x7ff86ea82704,47000474,0,0x0,8
tick,0x7ff86ea82704,47002367,0,0x0,8
tick,0x7ff86ea82704,47004304,0,0x0,8
tick,0x7ff86ea82704,47006433,0,0x0,8
tick,0x7ff86ea82704,47008562,0,0x0,8
tick,0x7ff86ea82704,47010361,0,0x0,8
tick,0x7ff86ea82704,47012321,0,0x0,8
tick,0x7ff86ea82704,47014296,0,0x0,8
tick,0x7ff86ea82704,47016547,0,0x0,8
tick,0x7ff86ea82704,47018419,0,0x0,8
tick,0x7ff86ea82704,47020507,0,0x0,8
tick,0x7ff86ea82704,47022294,0,0x0,8
tick,0x7ff86ea82704,47024327,0,0x0,8
tick,0x7ff86ea82704,47026270,0,0x0,8
tick,0x7ff86ea82704,47028294,0,0x0,8
tick,0x7ff86ea82704,47030268,0,0x0,8
tick,0x7ff86ea82704,47032205,0,0x0,8
tick,0x7ff86ea82704,47034395,0,0x0,8
tick,0x7ff86ea82704,47036230,0,0x0,8
tick,0x7ff86ea82704,47038253,0,0x0,8
tick,0x7ff86ea82704,47040212,0,0x0,8
tick,0x7ff86ea82704,47042136,0,0x0,8
tick,0x7ff86ea82704,47044323,0,0x0,8
tick,0x7ff86ea82704,47046148,0,0x0,8
tick,0x7ff86ea82704,47048372,0,0x0,8
tick,0x7ff86ea82704,47050140,0,0x0,8
tick,0x7ff86ea82704,47052310,0,0x0,8
tick,0x7ff86ea82704,47054115,0,0x0,8
tick,0x7ff86ea82704,47056287,0,0x0,8
tick,0x7ff86ea82704,47058097,0,0x0,8
tick,0x7ff86ea82704,47060259,0,0x0,8
tick,0x7ff86ea82704,47062113,0,0x0,8
tick,0x7ff86ea82704,47064337,0,0x0,8
tick,0x7ff86ea82704,47066250,0,0x0,8
tick,0x7ff86ea82704,47068208,0,0x0,8
tick,0x7ff86ea82704,47070248,0,0x0,8
tick,0x7ff86ea82704,47072220,0,0x0,8
tick,0x7ff86ea82704,47074092,0,0x0,8
tick,0x7ff86ea82704,47076199,0,0x0,8
tick,0x7ff86ea82704,47078152,0,0x0,8
tick,0x7ff86ea82704,47080177,0,0x0,8
tick,0x7ff86ea82704,47082107,0,0x0,8
tick,0x7ff86ea82704,47084176,0,0x0,8
tick,0x7ff86ea82704,47086196,0,0x0,8
tick,0x7ff86ea82704,47088264,0,0x0,8
tick,0x7ff86ea82704,47090178,0,0x0,8
tick,0x7ff86ea82704,47092286,0,0x0,8
tick,0x7ff86ea82704,47094078,0,0x0,8
tick,0x7ff86ea82704,47096229,0,0x0,8
tick,0x7ff86ea82704,47098046,0,0x0,8
tick,0x7ff86ea82704,47100124,0,0x0,8
tick,0x7ff86ea82704,47102153,0,0x0,8
tick,0x7ff86ea82704,47104368,0,0x0,8
tick,0x7ff86ea82704,47106166,0,0x0,8
tick,0x7ff86ea82704,47108260,0,0x0,8
tick,0x7ff86ea82704,47110096,0,0x0,8
tick,0x7ff86ea82704,47112197,0,0x0,8
tick,0x7ff86ea82704,47114178,0,0x0,8
tick,0x7ff86ea82704,47116104,0,0x0,8
tick,0x7ff86ea82704,47118195,0,0x0,8
tick,0x7ff86ea82704,47120041,0,0x0,8
tick,0x7ff86ea82704,47122201,0,0x0,8
tick,0x7ff86ea82704,47124269,0,0x0,8
tick,0x7ff86ea82704,47126040,0,0x0,8
tick,0x7ff86ea82704,47128152,0,0x0,8
tick,0x7ff86ea82704,47129869,0,0x0,8
tick,0x7ff86ea82704,47132164,0,0x0,8
tick,0x7ff86ea82704,47134050,0,0x0,8
tick,0x7ff86ea82704,47136125,0,0x0,8
tick,0x7ff86ea82704,47138059,0,0x0,8
tick,0x7ff86ea82704,47140023,0,0x0,8
tick,0x7ff86ea82704,47142087,0,0x0,8
tick,0x7ff86ea82704,47144093,0,0x0,8
tick,0x7ff86ea82704,47146042,0,0x0,8
tick,0x7ff86ea82704,47147875,0,0x0,8
tick,0x7ff86ea82704,47149995,0,0x0,8
tick,0x7ff86ea82704,47151872,0,0x0,8
tick,0x7ff86ea82704,47154020,0,0x0,8
tick,0x7ff86ea82704,47155756,0,0x0,8
tick,0x7ff86ea82704,47158042,0,0x0,8
tick,0x7ff86ea82704,47159836,0,0x0,8
tick,0x7ff86ea82704,47162016,0,0x0,8
tick,0x7ff86ea82704,47164047,0,0x0,8
tick,0x7ff86ea82704,47166123,0,0x0,8
tick,0x7ff86ea82704,47167941,0,0x0,8
tick,0x7ff86ea82704,47170102,0,0x0,8
tick,0x7ff86ea82704,47171959,0,0x0,8
tick,0x7ff86ea82704,47174014,0,0x0,8
tick,0x7ff86ea82704,47175954,0,0x0,8
tick,0x7ff86ea82704,47177980,0,0x0,8
tick,0x7ff86ea82704,47179901,0,0x0,8
tick,0x7ff86ea82704,47181950,0,0x0,8
tick,0x7ff86ea82704,47183888,0,0x0,8
tick,0x7ff86ea82704,47186286,0,0x0,8
tick,0x7ff86ea82704,47188361,0,0x0,8
tick,0x7ff86ea82704,47189919,0,0x0,8
tick,0x7ff86ea82704,47191820,0,0x0,8
tick,0x7ff86ea82704,47193932,0,0x0,8
tick,0x7ff86ea82704,47195840,0,0x0,8
tick,0x7ff86ea82704,47197889,0,0x0,8
tick,0x7ff86ea82704,47199923,0,0x0,8
tick,0x7ff86ea82704,47201892,0,0x0,8
tick,0x7ff86ea82704,47203948,0,0x0,8
tick,0x7ff86ea82704,47205727,0,0x0,8
tick,0x7ff86ea82704,47208128,0,0x0,8
tick,0x7ff86ea82704,47209751,0,0x0,8
tick,0x7ff86ea82704,47211796,0,0x0,8
tick,0x7ff86ea82704,47213810,0,0x0,8
tick,0x7ff86ea82704,47215769,0,0x0,8
tick,0x7ff86ea82704,47217794,0,0x0,8
tick,0x7ff86ea82704,47219825,0,0x0,8
tick,0x7ff86ea82704,47221745,0,0x0,8
tick,0x7ff86ea82704,47223742,0,0x0,8
tick,0x7ff86ea82704,47225590,0,0x0,8
tick,0x7ff86ea82704,47227782,0,0x0,8
tick,0x7ff86ea82704,47229801,0,0x0,8
tick,0x7ff86ea82704,47231868,0,0x0,8
tick,0x7ff86ea82704,47233685,0,0x0,8
tick,0x7ff86ea82704,47235750,0,0x0,8
tick,0x7ff86ea82704,47237652,0,0x0,8
tick,0x7ff86ea82704,47239826,0,0x0,8
tick,0x7ff86ea82704,47241631,0,0x0,8
tick,0x7ff86ea82704,47243722,0,0x0,8
tick,0x7ff86ea82704,47245596,0,0x0,8
tick,0x7ff86ea82704,47247734,0,0x0,8
tick,0x7ff86ea82704,47249572,0,0x0,8
tick,0x7ff86ea82704,47251706,0,0x0,8
tick,0x7ff86ea82704,47253596,0,0x0,8
tick,0x7ff86ea82704,47255747,0,0x0,8
tick,0x7ff86ea82704,47257588,0,0x0,8
tick,0x7ff86ea82704,47259673,0,0x0,8
tick,0x7ff86ea82704,47261593,0,0x0,8
tick,0x7ff86ea82704,47263715,0,0x0,8
tick,0x7ff86ea82704,47265637,0,0x0,8
tick,0x7ff86ea82704,47267694,0,0x0,8
tick,0x7ff86ea82704,47269637,0,0x0,8
tick,0x7ff86ea82704,47271893,0,0x0,8
tick,0x7ff86ea82704,47273501,0,0x0,8
tick,0x7ff86ea82704,47275664,0,0x0,8
tick,0x7ff86ea82704,47277639,0,0x0,8
tick,0x7ff86ea82704,47279773,0,0x0,8
tick,0x7ff86ea82704,47281615,0,0x0,8
tick,0x7ff86ea82704,47283634,0,0x0,8
tick,0x7ff86ea82704,47285468,0,0x0,8
tick,0x7ff86ea82704,47287559,0,0x0,8
tick,0x7ff86ea82704,47289527,0,0x0,8
tick,0x7ff86ea82704,47291634,0,0x0,8
tick,0x7ff86ea82704,47293488,0,0x0,8
tick,0x7ff86ea82704,47295561,0,0x0,8
tick,0x7ff86ea82704,47297541,0,0x0,8
tick,0x7ff86ea82704,47299591,0,0x0,8
tick,0x7ff86ea82704,47301605,0,0x0,8
tick,0x7ff86ea82704,47303505,0,0x0,8
tick,0x7ff86ea82704,47305610,0,0x0,8
tick,0x7ff86ea82704,47307509,0,0x0,8
tick,0x7ff86ea82704,47309567,0,0x0,8
tick,0x7ff86ea82704,47311474,0,0x0,8
tick,0x7ff86ea82704,47313585,0,0x0,8
tick,0x7ff86ea82704,47315527,0,0x0,8
tick,0x7ff86ea82704,47317538,0,0x0,8
tick,0x7ff86ea82704,47319436,0,0x0,8
tick,0x7ff86ea82704,47321457,0,0x0,8
tick,0x7ff86ea82704,47323389,0,0x0,8
tick,0x7ff86ea82704,47325508,0,0x0,8
tick,0x7ff86ea82704,47327391,0,0x0,8
tick,0x7ff86ea82704,47329543,0,0x0,8
tick,0x7ff86ea82704,47331500,0,0x0,8
tick,0x7ff86ea82704,47333542,0,0x0,8
tick,0x7ff86ea82704,47335489,0,0x0,8
tick,0x7ff86ea82704,47337438,0,0x0,8
tick,0x7ff86ea82704,47339520,0,0x0,8
tick,0x7ff86ea82704,47341532,0,0x0,8
tick,0x7ff86ea82704,47343375,0,0x0,8
tick,0x7ff86ea82704,47345477,0,0x0,8
tick,0x7ff86ea82704,47347438,0,0x0,8
tick,0x7ff86ea82704,47349340,0,0x0,8
tick,0x7ff86ea82704,47351368,0,0x0,8
tick,0x7ff86ea82704,47353420,0,0x0,8
tick,0x7ff86ea82704,47355601,0,0x0,8
tick,0x7ff86ea82704,47357518,0,0x0,8
tick,0x7ff86ea82704,47359553,0,0x0,8
tick,0x7ff86ea82704,47361476,0,0x0,8
tick,0x7ff86ea82704,47363597,0,0x0,8
tick,0x7ff86ea82704,47365314,0,0x0,8
tick,0x7ff86ea82704,47367544,0,0x0,8
tick,0x7ff86ea82704,47369475,0,0x0,8
tick,0x7ff86ea82704,47371477,0,0x0,8
tick,0x7ff86ea82704,47373359,0,0x0,8
tick,0x7ff86ea82704,47375729,0,0x0,8
tick,0x7ff86ea82704,47377305,0,0x0,8
tick,0x7ff86ea82704,47379420,0,0x0,8
tick,0x7ff86ea82704,47381327,0,0x0,8
tick,0x7ff86ea82704,47383427,0,0x0,8
tick,0x7ff86ea82704,47385277,0,0x0,8
tick,0x7ff86ea82704,47387322,0,0x0,8
tick,0x7ff86ea82704,47389312,0,0x0,8
tick,0x7ff86ea82704,47391451,0,0x0,8
tick,0x7ff86ea82704,47393494,0,0x0,8
tick,0x7ff86ea82704,47395367,0,0x0,8
tick,0x7ff86ea82704,47397245,0,0x0,8
tick,0x7ff86ea82704,47399409,0,0x0,8
tick,0x7ff86ea82704,47401344,0,0x0,8
tick,0x7ff86ea82704,47403154,0,0x0,8
tick,0x7ff86ea82704,47405322,0,0x0,8
tick,0x7ff86ea82704,47407298,0,0x0,8
tick,0x7ff86ea82704,47409385,0,0x0,8
tick,0x7ff86ea82704,47411279,0,0x0,8
tick,0x7ff86ea82704,47413194,0,0x0,8
tick,0x7ff86ea82704,47415255,0,0x0,8
tick,0x7ff86ea82704,47417315,0,0x0,8
tick,0x7ff86ea82704,47419319,0,0x0,8
tick,0x7ff86ea82704,47421224,0,0x0,8
tick,0x7ff86ea82704,47423264,0,0x0,8
tick,0x7ff86ea82704,47425432,0,0x0,8
tick,0x7ff86ea82704,47427391,0,0x0,8
tick,0x7ff86ea82704,47429396,0,0x0,8
tick,0x7ff86ea82704,47431299,0,0x0,8
tick,0x7ff86ea82704,47433638,0,0x0,8
tick,0x7ff86ea82704,47436136,0,0x0,8
tick,0x7ff86ea82704,47437291,0,0x0,8
tick,0x7ff86ea82704,47439082,0,0x0,8
tick,0x7ff86ea82704,47441202,0,0x0,8
tick,0x7ff86ea82704,47443193,0,0x0,8
tick,0x7ff86ea82704,47445149,0,0x0,8
tick,0x7ff86ea82704,47447016,0,0x0,8
tick,0x7ff86ea82704,47449059,0,0x0,8
tick,0x7ff86ea82704,47451026,0,0x0,8
tick,0x7ff86ea82704,47453544,0,0x0,8
tick,0x7ff86ea82704,47455521,0,0x0,8
tick,0x7ff86ea82704,47457014,0,0x0,8
tick,0x7ff86ea82704,47459029,0,0x0,8
tick,0x7ff86ea82704,47460970,0,0x0,8
tick,0x7ff86ea82704,47463056,0,0x0,8
tick,0x7ff86ea82704,47464949,0,0x0,8
tick,0x7ff86ea82704,47467054,0,0x0,8
tick,0x7ff86ea82704,47468941,0,0x0,8
tick,0x7ff86ea82704,47470990,0,0x0,8
tick,0x7ff86ea82704,47473036,0,0x0,8
tick,0x7ff86ea82704,47475091,0,0x0,8
tick,0x7ff86ea82704,47476976,0,0x0,8
tick,0x7ff86ea82704,47479022,0,0x0,8
tick,0x7ff86ea82704,47480891,0,0x0,8
tick,0x7ff86ea82704,47483106,0,0x0,8
tick,0x7ff86ea82704,47484975,0,0x0,8
tick,0x7ff86ea82704,47486982,0,0x0,8
tick,0x7ff86ea82704,47488822,0,0x0,8
tick,0x7ff86ea82704,47491030,0,0x0,8
tick,0x7ff86ea82704,47492836,0,0x0,8
tick,0x7ff86ea82704,47494956,0,0x0,8
tick,0x7ff86ea82704,47496842,0,0x0,8
tick,0x7ff86ea82704,47498923,0,0x0,8
tick,0x7ff86ea82704,47500834,0,0x0,8
tick,0x7ff86ea82704,47502936,0,0x0,8
tick,0x7ff86ea82704,47504844,0,0x0,8
tick,0x7ff86ea82704,47506893,0,0x0,8
tick,0x7ff86ea82704,47508900,0,0x0,8
tick,0x7ff86ea82704,47511373,0,0x0,8
tick,0x7ff86ea82704,47512874,0,0x0,8
tick,0x7ff86ea82704,47514881,0,0x0,8
tick,0x7ff86ea82704,47516928,0,0x0,8
tick,0x7ff86ea82704,47518883,0,0x0,8
tick,0x7ff86ea82704,47520794,0,0x0,8
tick,0x7ff86ea82704,47522874,0,0x0,8
tick,0x7ff86ea82704,47524967,0,0x0,8
tick,0x7ff86ea82704,47526849,0,0x0,8
tick,0x7ff86ea82704,47528910,0,0x0,8
tick,0x7ff86ea82704,47530836,0,0x0,8
tick,0x7ff86ea82704,47532847,0,0x0,8
tick,0x7ff86ea82704,47534803,0,0x0,8
tick,0x7ff86ea82704,47536835,0,0x0,8
tick,0x7ff86ea82704,47538819,0,0x0,8
tick,0x7ff86ea82704,47540802,0,0x0,8
tick,0x7ff86ea82704,47542690,0,0x0,8
tick,0x7ff86ea82704,47544824,0,0x0,8
tick,0x7ff86ea82704,47546718,0,0x0,8
tick,0x7ff86ea82704,47548720,0,0x0,8
tick,0x7ff86ea82704,47550746,0,0x0,8
tick,0x7ff86ea82704,47552846,0,0x0,8
tick,0x7ff86ea82704,47554753,0,0x0,8
tick,0x7ff86ea82704,47556732,0,0x0,8
tick,0x7ff86ea82704,47558696,0,0x0,8
tick,0x7ff86ea82704,47560807,0,0x0,8
tick,0x7ff86ea82704,47562785,0,0x0,8
tick,0x7ff86ea82704,47564846,0,0x0,8
tick,0x7ff86ea82704,47566766,0,0x0,8
tick,0x7ff86ea82704,47568759,0,0x0,8
tick,0x7ff86ea82704,47570645,0,0x0,8
tick,0x7ff86ea82704,47572716,0,0x0,8
tick,0x7ff86ea82704,47574743,0,0x0,8
tick,0x7ff86ea82704,47576810,0,0x0,8
tick,0x7ff86ea82704,47578550,0,0x0,8
tick,0x7ff86ea82704,47580766,0,0x0,8
tick,0x7ff86ea82704,47582644,0,0x0,8
tick,0x7ff86ea82704,47584695,0,0x0,8
tick,0x7ff86ea82704,47586578,0,0x0,8
tick,0x7ff86ea82704,47588681,0,0x0,8
tick,0x7ff86ea82704,47590646,0,0x0,8
tick,0x7ff86ea82704,47592658,0,0x0,8
tick,0x7ff86ea82704,47594624,0,0x0,8
tick,0x7ff86ea82704,47596687,0,0x0,8
tick,0x7ff86ea82704,47598831,0,0x0,8
tick,0x7ff86ea82704,47600676,0,0x0,8
tick,0x7ff86ea82704,47602678,0,0x0,8
tick,0x7ff86ea82704,47604614,0,0x0,8
tick,0x7ff86ea82704,47606707,0,0x0,8
tick,0x7ff86ea82704,47608737,0,0x0,8
tick,0x7ff86ea82704,47610679,0,0x0,8
tick,0x7ff86ea82704,47612561,0,0x0,8
tick,0x7ff86ea82704,47614575,0,0x0,8
tick,0x7ff86ea82704,47616580,0,0x0,8
tick,0x7ff86ea82704,47618675,0,0x0,8
tick,0x7ff86ea82704,47620558,0,0x0,8
tick,0x7ff86ea82704,47622559,0,0x0,8
tick,0x7ff86ea82704,47624539,0,0x0,8
tick,0x7ff86ea82704,47626563,0,0x0,8
tick,0x7ff86ea82704,47628528,0,0x0,8
tick,0x7ff86ea82704,47630564,0,0x0,8
tick,0x7ff86ea82704,47632561,0,0x0,8
tick,0x7ff86ea82704,47634479,0,0x0,8
tick,0x7ff86ea82704,47636530,0,0x0,8
tick,0x7ff86ea82704,47638493,0,0x0,8
tick,0x7ff86ea82704,47640497,0,0x0,8
tick,0x7ff86ea82704,47642508,0,0x0,8
tick,0x7ff86ea82704,47644466,0,0x0,8
tick,0x7ff86ea82704,47646527,0,0x0,8
tick,0x7ff86ea82704,47648615,0,0x0,8
tick,0x7ff86ea82704,47650510,0,0x0,8
tick,0x7ff86ea82704,47652477,0,0x0,8
tick,0x7ff86ea82704,47654493,0,0x0,8
tick,0x7ff86ea82704,47656509,0,0x0,8
tick,0x7ff86ea82704,47658510,0,0x0,8
tick,0x7ff86ea82704,47660495,0,0x0,8
tick,0x7ff86ea82704,47662422,0,0x0,8
tick,0x7ff86ea82704,47664517,0,0x0,8
tick,0x7ff86ea82704,47666442,0,0x0,8
tick,0x7ff86ea82704,47668441,0,0x0,8
tick,0x7ff86ea82704,47670417,0,0x0,8
tick,0x7ff86ea82704,47672420,0,0x0,8
tick,0x7ff86ea82704,47674413,0,0x0,8
tick,0x7ff86ea82704,47676550,0,0x0,8
tick,0x7ff86ea82704,47678482,0,0x0,8
tick,0x7ff86ea82704,47680392,0,0x0,8
tick,0x7ff86ea82704,47682501,0,0x0,8
tick,0x7ff86ea82704,47684496,0,0x0,8
tick,0x7ff86ea82704,47686363,0,0x0,8
tick,0x7ff86ea82704,47688593,0,0x0,8
tick,0x7ff86ea82704,47690374,0,0x0,8
tick,0x7ff86ea82704,47692322,0,0x0,8
tick,0x7ff86ea82704,47694415,0,0x0,8
tick,0x7ff86ea82704,47696333,0,0x0,8
tick,0x7ff86ea82704,47698382,0,0x0,8
tick,0x7ff86ea82704,47700316,0,0x0,8
tick,0x7ff86ea82704,47702382,0,0x0,8
tick,0x7ff86ea82704,47704328,0,0x0,8
tick,0x7ff86ea82704,47706457,0,0x0,8
tick,0x7ff86ea82704,47708313,0,0x0,8
tick,0x7ff86ea82704,47710320,0,0x0,8
tick,0x7ff86ea82704,47712369,0,0x0,8
tick,0x7ff86ea82704,47714441,0,0x0,8
tick,0x7ff86ea82704,47716281,0,0x0,8
tick,0x7ff86ea82704,47718321,0,0x0,8
tick,0x7ff86ea82704,47720268,0,0x0,8
tick,0x7ff86ea82704,47722307,0,0x0,8
tick,0x7ff86ea82704,47724252,0,0x0,8
tick,0x7ff86ea82704,47726323,0,0x0,8
tick,0x7ff86ea82704,47728337,0,0x0,8
tick,0x7ff86ea82704,47730226,0,0x0,8
tick,0x7ff86ea82704,47732291,0,0x0,8
tick,0x7ff86ea82704,47734267,0,0x0,8
tick,0x7ff86ea82704,47736322,0,0x0,8
tick,0x7ff86ea82704,47738197,0,0x0,8
tick,0x7ff86ea82704,47740308,0,0x0,8
tick,0x7ff86ea82704,47742176,0,0x0,8
tick,0x7ff86ea82704,47744287,0,0x0,8
tick,0x7ff86ea82704,47746258,0,0x0,8
tick,0x7ff86ea82704,47748256,0,0x0,8
tick,0x7ff86ea82704,47750174,0,0x0,8
tick,0x7ff86ea82704,47752250,0,0x0,8
tick,0x7ff86ea82704,47754219,0,0x0,8
tick,0x7ff86ea82704,47756261,0,0x0,8
tick,0x7ff86ea82704,47758253,0,0x0,8
tick,0x7ff86ea82704,47760253,0,0x0,8
tick,0x7ff86ea82704,47762104,0,0x0,8
tick,0x7ff86ea82704,47764306,0,0x0,8
tick,0x7ff86ea82704,47766156,0,0x0,8
tick,0x7ff86ea82704,47768254,0,0x0,8
tick,0x7ff86ea82704,47770167,0,0x0,8
tick,0x7ff86ea82704,47772269,0,0x0,8
tick,0x7ff86ea82704,47774216,0,0x0,8
tick,0x7ff86ea82704,47776275,0,0x0,8
tick,0x7ff86ea82704,47778224,0,0x0,8
tick,0x7ff86ea82704,47780159,0,0x0,8
tick,0x7ff86ea82704,47782190,0,0x0,8
tick,0x7ff86ea82704,47784236,0,0x0,8
tick,0x7ff86ea82704,47786028,0,0x0,8
tick,0x7ff86ea82704,47788667,0,0x0,8
tick,0x7ff86ea82704,47790036,0,0x0,8
tick,0x7ff86ea82704,47792192,0,0x0,8
tick,0x7ff86ea82704,47794041,0,0x0,8
tick,0x7ff86ea82704,47796159,0,0x0,8
tick,0x7ff86ea82704,47798049,0,0x0,8
tick,0x7ff86ea82704,47800072,0,0x0,8
tick,0x7ff86ea82704,47802160,0,0x0,8
tick,0x7ff86ea82704,47804140,0,0x0,8
tick,0x7ff86ea82704,47806068,0,0x0,8
tick,0x7ff86ea82704,47808056,0,0x0,8
tick,0x7ff86ea82704,47810076,0,0x0,8
tick,0x7ff86ea82704,47812114,0,0x0,8
tick,0x7ff86ea82704,47814059,0,0x0,8
tick,0x7ff86ea82704,47816032,0,0x0,8
tick,0x7ff86ea82704,47818092,0,0x0,8
tick,0x7ff86ea82704,47820090,0,0x0,8
tick,0x7ff86ea82704,47822138,0,0x0,8
tick,0x7ff86ea82704,47824045,0,0x0,8
tick,0x7ff86ea82704,47826096,0,0x0,8
tick,0x7ff86ea82704,47828110,0,0x0,8
tick,0x7ff86ea82704,47830161,0,0x0,8
tick,0x7ff86ea82704,47831976,0,0x0,8
tick,0x7ff86ea82704,47834113,0,0x0,8
tick,0x7ff86ea82704,47835941,0,0x0,8
tick,0x7ff86ea82704,47838091,0,0x0,8
tick,0x7ff86ea82704,47839952,0,0x0,8
tick,0x7ff86ea82704,47842194,0,0x0,8
tick,0x7ff86ea82704,47843923,0,0x0,8
tick,0x7ff86ea82704,47846090,0,0x0,8
tick,0x7ff86ea82704,47847938,0,0x0,8
tick,0x7ff86ea82704,47850018,0,0x0,8
tick,0x7ff86ea82704,47851937,0,0x0,8
tick,0x7ff86ea82704,47854020,0,0x0,8
tick,0x7ff86ea82704,47855927,0,0x0,8
tick,0x7ff86ea82704,47857913,0,0x0,8
tick,0x7ff86ea82704,47859949,0,0x0,8
tick,0x7ff86ea82704,47861900,0,0x0,8
tick,0x7ff86ea82704,47863928,0,0x0,8
tick,0x7ff86ea82704,47865926,0,0x0,8
tick,0x7ff86ea82704,47867929,0,0x0,8
tick,0x7ff86ea82704,47869863,0,0x0,8
tick,0x7ff86ea82704,47871954,0,0x0,8
tick,0x7ff86ea82704,47873874,0,0x0,8
tick,0x7ff86ea82704,47875896,0,0x0,8
tick,0x7ff86ea82704,47877992,0,0x0,8
tick,0x7ff86ea82704,47879799,0,0x0,8
tick,0x7ff86ea82704,47881881,0,0x0,8
tick,0x7ff86ea82704,47883877,0,0x0,8
tick,0x7ff86ea82704,47885985,0,0x0,8
tick,0x7ff86ea82704,47887844,0,0x0,8
tick,0x7ff86ea82704,47889821,0,0x0,8
tick,0x7ff86ea82704,47891836,0,0x0,8
tick,0x7ff86ea82704,47893842,0,0x0,8
tick,0x7ff86ea82704,47895884,0,0x0,8
tick,0x7ff86ea82704,47897845,0,0x0,8
tick,0x7ff86ea82704,47899775,0,0x0,8
tick,0x7ff86ea82704,47901790,0,0x0,8
tick,0x7ff86ea82704,47903827,0,0x0,8
tick,0x7ff86ea82704,47905816,0,0x0,8
tick,0x7ff86ea82704,47907808,0,0x0,8
tick,0x7ff86ea82704,47909737,0,0x0,8
tick,0x7ff86ea82704,47911772,0,0x0,8
tick,0x7ff86ea82704,47913785,0,0x0,8
tick,0x7ff86ea82704,47915724,0,0x0,8
tick,0x7ff86ea82704,47917754,0,0x0,8
tick,0x7ff86ea82704,47919763,0,0x0,8
tick,0x7ff86ea82704,47921840,0,0x0,8
tick,0x7ff86ea82704,47923836,0,0x0,8
tick,0x7ff86ea82704,47925717,0,0x0,8
tick,0x7ff86ea82704,47927888,0,0x0,8
tick,0x7ff86ea82704,47929740,0,0x0,8
tick,0x7ff86ea82704,47931795,0,0x0,8
tick,0x7ff86ea82704,47933753,0,0x0,8
tick,0x7ff86ea82704,47935732,0,0x0,8
tick,0x7ff86ea82704,47937734,0,0x0,8
tick,0x7ff86ea82704,47939686,0,0x0,8
tick,0x7ff86ea82704,47941773,0,0x0,8
tick,0x7ff86ea82704,47943830,0,0x0,8
tick,0x7ff86ea82704,47945971,0,0x0,8
tick,0x7ff86ea82704,47947699,0,0x0,8
tick,0x7ff86ea82704,47949696,0,0x0,8
tick,0x7ff86ea82704,47951671,0,0x0,8
tick,0x7ff86ea82704,47953625,0,0x0,8
tick,0x7ff86ea82704,47955727,0,0x0,8
tick,0x7ff86ea82704,47957699,0,0x0,8
tick,0x7ff86ea82704,47959619,0,0x0,8
tick,0x7ff86ea82704,47961677,0,0x0,8
tick,0x7ff86ea82704,47963677,0,0x0,8
tick,0x7ff86ea82704,47965717,0,0x0,8
tick,0x7ff86ea82704,47967577,0,0x0,8
tick,0x7ff86ea82704,47969698,0,0x0,8
tick,0x7ff86ea82704,47971632,0,0x0,8
tick,0x7ff86ea82704,47973617,0,0x0,8
tick,0x7ff86ea82704,47975590,0,0x0,8
tick,0x7ff86ea82704,47977619,0,0x0,8
tick,0x7ff86ea82704,47979518,0,0x0,8
tick,0x7ff86ea82704,47981612,0,0x0,8
tick,0x7ff86ea82704,47983699,0,0x0,8
tick,0x7ff86ea82704,47985631,0,0x0,8
tick,0x7ff86ea82704,47987509,0,0x0,8
tick,0x7ff86ea82704,47989630,0,0x0,8
tick,0x7ff86ea82704,47991572,0,0x0,8
tick,0x7ff86ea82704,47993702,0,0x0,8
tick,0x7ff86ea82704,47995717,0,0x0,8
tick,0x7ff86ea82704,47997617,0,0x0,8
tick,0x7ff86ea82704,47999533,0,0x0,8
tick,0x7ff86ea82704,48001512,0,0x0,8
tick,0x7ff86ea82704,48003503,0,0x0,8
tick,0x7ff86ea82704,48005517,0,0x0,8
tick,0x7ff86ea82704,48007575,0,0x0,8
tick,0x7ff86ea82704,48009489,0,0x0,8
tick,0x7ff86ea82704,48011511,0,0x0,8
tick,0x7ff86ea82704,48013544,0,0x0,8
tick,0x7ff86ea82704,48015524,0,0x0,8
tick,0x7ff86ea82704,48017541,0,0x0,8
tick,0x7ff86ea82704,48019526,0,0x0,8
tick,0x7ff86ea82704,48021482,0,0x0,8
tick,0x7ff86ea82704,48023565,0,0x0,8
tick,0x7ff86ea82704,48025588,0,0x0,8
tick,0x7ff86ea82704,48027530,0,0x0,8
tick,0x7ff86ea82704,48029412,0,0x0,8
tick,0x7ff86ea82704,48031481,0,0x0,8
tick,0x7ff86ea82704,48033546,0,0x0,8
tick,0x7ff86ea82704,48035464,0,0x0,8
tick,0x7ff86ea82704,48037485,0,0x0,8
tick,0x7ff86ea82704,48039402,0,0x0,8
tick,0x7ff86ea82704,48041476,0,0x0,8
tick,0x7ff86ea82704,48043456,0,0x0,8
tick,0x7ff86ea82704,48045464,0,0x0,8
tick,0x7ff86ea82704,48047404,0,0x0,8
tick,0x7ff86ea82704,48049429,0,0x0,8
tick,0x7ff86ea82704,48051443,0,0x0,8
tick,0x7ff86ea82704,48053410,0,0x0,8
tick,0x7ff86ea82704,48055429,0,0x0,8
tick,0x7ff86ea82704,48057401,0,0x0,8
tick,0x7ff86ea82704,48059465,0,0x0,8
tick,0x7ff86ea82704,48061342,0,0x0,8
tick,0x7ff86ea82704,48063457,0,0x0,8
tick,0x7ff86ea82704,48065496,0,0x0,8
tick,0x7ff86ea82704,48067408,0,0x0,8
tick,0x7ff86ea82704,48069442,0,0x0,8
tick,0x7ff86ea82704,48071439,0,0x0,8
tick,0x7ff86ea82704,48073366,0,0x0,8
tick,0x7ff86ea82704,48075470,0,0x0,8
tick,0x7ff86ea82704,48077343,0,0x0,8
tick,0x7ff86ea82704,48079412,0,0x0,8
tick,0x7ff86ea82704,48081305,0,0x0,8
tick,0x7ff86ea82704,48083389,0,0x0,8
tick,0x7ff86ea82704,48085315,0,0x0,8
tick,0x7ff86ea82704,48087318,0,0x0,8
tick,0x7ff86ea82704,48089325,0,0x0,8
tick,0x7ff86ea82704,48091309,0,0x0,8
tick,0x7ff86ea82704,48093394,0,0x0,8
tick,0x7ff86ea82704,48095284,0,0x0,8
tick,0x7ff86ea82704,48097582,0,0x0,8
tick,0x7ff86ea82704,48099220,0,0x0,8
tick,0x7ff86ea82704,48101708,0,0x0,8
tick,0x7ff86ea82704,48103356,0,0x0,8
tick,0x7ff86ea82704,48105395,0,0x0,8
tick,0x7ff86ea82704,48107282,0,0x0,8
tick,0x7ff86ea82704,48109438,0,0x0,8
tick,0x7ff86ea82704,48111402,0,0x0,8
tick,0x7ff86ea82704,48114590,0,0x0,8
tick,0x7ff86ea82704,48115602,0,0x0,8
tick,0x7ff86ea82704,48117776,0,0x0,8
tick,0x7ff86ea82704,48119767,0,0x0,8
tick,0x7ff86ea82704,48121637,0,0x0,8
tick,0x7ff86ea82704,48124072,0,0x0,8
tick,0x7ff86ea82704,48126000,0,0x0,8
tick,0x7ff86ea82704,48127446,0,0x0,8
tick,0x7ff86ea82704,48129634,0,0x0,8
tick,0x7ff86ea82704,48131291,0,0x0,8
tick,0x7ff86ea82704,48133500,0,0x0,8
tick,0x7ff86ea82704,48135667,0,0x0,8
tick,0x7ff86ea82704,48137354,0,0x0,8
tick,0x7ff86ea82704,48139345,0,0x0,8
tick,0x7ff86ea82704,48141210,0,0x0,8
tick,0x7ff86ea82704,48143672,0,0x0,8
tick,0x7ff86ea82704,48145184,0,0x0,8
tick,0x7ff86ea82704,48147329,0,0x0,8
tick,0x7ff86ea82704,48149283,0,0x0,8
tick,0x7ff86ea82704,48151187,0,0x0,8
tick,0x7ff86ea82704,48153187,0,0x0,8
tick,0x7ff86ea82704,48155445,0,0x0,8
tick,0x7ff86ea82704,48157420,0,0x0,8
tick,0x7ff86ea82704,48159219,0,0x0,8
tick,0x7ff86ea82704,48161385,0,0x0,8
tick,0x7ff86ea82704,48163353,0,0x0,8
tick,0x7ff86ea82704,48165185,0,0x0,8
tick,0x7ff86ea82704,48167275,0,0x0,8
tick,0x7ff86ea82704,48169163,0,0x0,8
tick,0x7ff86ea82704,48172053,0,0x0,8
tick,0x7ff86ea82704,48174269,0,0x0,8
tick,0x7ff86ea82704,48176178,0,0x0,8
tick,0x7ff86ea82704,48178157,0,0x0,8
tick,0x7ff86ea82704,48180057,0,0x0,8
tick,0x7ff86ea82704,48182290,0,0x0,8
tick,0x7ff86ea82704,48184140,0,0x0,8
tick,0x7ff86ea82704,48186546,0,0x0,8
tick,0x7ff86ea82704,48188341,0,0x0,8
tick,0x7ff86ea82704,48190242,0,0x0,8
tick,0x7ff86ea82704,48192200,0,0x0,8
tick,0x7ff86ea82704,48194286,0,0x0,8
tick,0x7ff86ea82704,48196183,0,0x0,8
tick,0x7ff86ea82704,48198102,0,0x0,8
tick,0x7ff86ea82704,48200412,0,0x0,8
tick,0x7ff86ea82704,48202198,0,0x0,8
tick,0x7ff86ea82704,48204521,0,0x0,8
tick,0x7ff86ea82704,48206165,0,0x0,8
tick,0x7ff86ea82704,48208084,0,0x0,8
tick,0x7ff86ea82704,48210189,0,0x0,8
tick,0x7ff86ea82704,48211989,0,0x0,8
tick,0x7ff86ea82704,48214110,0,0x0,8
tick,0x7ff86ea82704,48216047,0,0x0,8
tick,0x7ff86ea82704,48218078,0,0x0,8
tick,0x7ff86ea82704,48220047,0,0x0,8
tick,0x7ff86ea82704,48222065,0,0x0,8
tick,0x7ff86ea82704,48224085,0,0x0,8
tick,0x7ff86ea82704,48226012,0,0x0,8
tick,0x7ff86ea82704,48228007,0,0x0,8
tick,0x7ff86ea82704,48229944,0,0x0,8
tick,0x7ff86ea82704,48232012,0,0x0,8
tick,0x7ff86ea82704,48233972,0,0x0,8
tick,0x7ff86ea82704,48236205,0,0x0,8
tick,0x7ff86ea82704,48237879,0,0x0,8
tick,0x7ff86ea82704,48240028,0,0x0,8
tick,0x7ff86ea82704,48241885,0,0x0,8
tick,0x7ff86ea82704,48243997,0,0x0,8
tick,0x7ff86ea82704,48246049,0,0x0,8
tick,0x7ff86ea82704,48248075,0,0x0,8
tick,0x7ff86ea82704,48249875,0,0x0,8
tick,0x7ff86ea82704,48251965,0,0x0,8
tick,0x7ff86ea82704,48253928,0,0x0,8
tick,0x7ff86ea82704,48256037,0,0x0,8
tick,0x7ff86ea82704,48257920,0,0x0,8
tick,0x7ff86ea82704,48259962,0,0x0,8
tick,0x7ff86ea82704,48261904,0,0x0,8
tick,0x7ff86ea82704,48263838,0,0x0,8
tick,0x7ff86ea82704,48265913,0,0x0,8
tick,0x7ff86ea82704,48267850,0,0x0,8
tick,0x7ff86ea82704,48269934,0,0x0,8
tick,0x7ff86ea82704,48271911,0,0x0,8
tick,0x7ff86ea82704,48273888,0,0x0,8
tick,0x7ff86ea82704,48275874,0,0x0,8
tick,0x7ff86ea82704,48277972,0,0x0,8
tick,0x7ff86ea82704,48279788,0,0x0,8
tick,0x7ff86ea82704,48281885,0,0x0,8
tick,0x7ff86ea82704,48283815,0,0x0,8
tick,0x7ff86ea82704,48285906,0,0x0,8
tick,0x7ff86ea82704,48287710,0,0x0,8
tick,0x7ff86ea82704,48289833,0,0x0,8
tick,0x7ff86ea82704,48291891,0,0x0,8
tick,0x7ff86ea82704,48293853,0,0x0,8
tick,0x7ff86ea82704,48295788,0,0x0,8
tick,0x7ff86ea82704,48297793,0,0x0,8
tick,0x7ff86ea82704,48299823,0,0x0,8
tick,0x7ff86ea82704,48301868,0,0x0,8
tick,0x7ff86ea82704,48303748,0,0x0,8
tick,0x7ff86ea82704,48305847,0,0x0,8
tick,0x7ff86ea82704,48307713,0,0x0,8
tick,0x7ff86ea82704,48309898,0,0x0,8
tick,0x7ff86ea82704,48311777,0,0x0,8
tick,0x7ff86ea82704,48313775,0,0x0,8
tick,0x7ff86ea82704,48315704,0,0x0,8
tick,0x7ff86ea82704,48317836,0,0x0,8
tick,0x7ff86ea82704,48319751,0,0x0,8
tick,0x7ff86ea82704,48321738,0,0x0,8
tick,0x7ff86ea82704,48323691,0,0x0,8
tick,0x7ff86ea82704,48325728,0,0x0,8
tick,0x7ff86ea82704,48327780,0,0x0,8
tick,0x7ff86ea82704,48329815,0,0x0,8
tick,0x7ff86ea82704,48331703,0,0x0,8
tick,0x7ff86ea82704,48333704,0,0x0,8
tick,0x7ff86ea82704,48335742,0,0x0,8
tick,0x7ff86ea82704,48337794,0,0x0,8
tick,0x7ff86ea82704,48339752,0,0x0,8
tick,0x7ff86ea82704,48341916,0,0x0,8
tick,0x7ff86ea82704,48343735,0,0x0,8
tick,0x7ff86ea82704,48345652,0,0x0,8
tick,0x7ff86ea82704,48347685,0,0x0,8
tick,0x7ff86ea82704,48349751,0,0x0,8
tick,0x7ff86ea82704,48351581,0,0x0,8
tick,0x7ff86ea82704,48353666,0,0x0,8
tick,0x7ff86ea82704,48355571,0,0x0,8
tick,0x7ff86ea82704,48357713,0,0x0,8
tick,0x7ff86ea82704,48359671,0,0x0,8
tick,0x7ff86ea82704,48361754,0,0x0,8
tick,0x7ff86ea82704,48363547,0,0x0,8
tick,0x7ff86ea82704,48365774,0,0x0,8
tick,0x7ff86ea82704,48367644,0,0x0,8
tick,0x7ff86ea82704,48369684,0,0x0,8
tick,0x7ff86ea82704,48371590,0,0x0,8
tick,0x7ff86ea82704,48373776,0,0x0,8
tick,0x7ff86ea82704,48375587,0,0x0,8
tick,0x7ff86ea82704,48377616,0,0x0,8
tick,0x7ff86ea82704,48379566,0,0x0,8
tick,0x7ff86ea82704,48381613,0,0x0,8
tick,0x7ff86ea82704,48383579,0,0x0,8
tick,0x7ff86ea82704,48385583,0,0x0,8
tick,0x7ff86ea82704,48387505,0,0x0,8
tick,0x7ff86ea82704,48389603,0,0x0,8
tick,0x7ff86ea82704,48391501,0,0x0,8
tick,0x7ff86ea82704,48393613,0,0x0,8
tick,0x7ff86ea82704,48395441,0,0x0,8
tick,0x7ff86ea82704,48397510,0,0x0,8
tick,0x7ff86ea82704,48399503,0,0x0,8
tick,0x7ff86ea82704,48401570,0,0x0,8
tick,0x7ff86ea82704,48403456,0,0x0,8
tick,0x7ff86ea82704,48405535,0,0x0,8
tick,0x7ff86ea82704,48407388,0,0x0,8
tick,0x7ff86ea82704,48409482,0,0x0,8
tick,0x7ff86ea82704,48411490,0,0x0,8
tick,0x7ff86ea82704,48413578,0,0x0,8
tick,0x7ff86ea82704,48415472,0,0x0,8
tick,0x7ff86ea82704,48417447,0,0x0,8
tick,0x7ff86ea82704,48419549,0,0x0,8
tick,0x7ff86ea82704,48421457,0,0x0,8
tick,0x7ff86ea82704,48423490,0,0x0,8
tick,0x7ff86ea82704,48425457,0,0x0,8
tick,0x7ff86ea82704,48427591,0,0x0,8
tick,0x7ff86ea82704,48429550,0,0x0,8
tick,0x7ff86ea82704,48431403,0,0x0,8
tick,0x7ff86ea82704,48433423,0,0x0,8
tick,0x7ff86ea82704,48435464,0,0x0,8
tick,0x7ff86ea82704,48437510,0,0x0,8
tick,0x7ff86ea82704,48439435,0,0x0,8
tick,0x7ff86ea82704,48441408,0,0x0,8
tick,0x7ff86ea82704,48443372,0,0x0,8
tick,0x7ff86ea82704,48445410,0,0x0,8
tick,0x7ff86ea82704,48447363,0,0x0,8
tick,0x7ff86ea82704,48449458,0,0x0,8
tick,0x7ff86ea82704,48451282,0,0x0,8
tick,0x7ff86ea82704,48453439,0,0x0,8
tick,0x7ff86ea82704,48455328,0,0x0,8
tick,0x7ff86ea82704,48457373,0,0x0,8
tick,0x7ff86ea82704,48459361,0,0x0,8
tick,0x7ff86ea82704,48461391,0,0x0,8
tick,0x7ff86ea82704,48463326,0,0x0,8
tick,0x7ff86ea82704,48465365,0,0x0,8
tick,0x7ff86ea82704,48467296,0,0x0,8
tick,0x7ff86ea82704,48469368,0,0x0,8
tick,0x7ff86ea82704,48471338,0,0x0,8
tick,0x7ff86ea82704,48473339,0,0x0,8
tick,0x7ff86ea82704,48475271,0,0x0,8
tick,0x7ff86ea82704,48477386,0,0x0,8
tick,0x7ff86ea82704,48479273,0,0x0,8
tick,0x7ff86ea82704,48481344,0,0x0,8
tick,0x7ff86ea82704,48483279,0,0x0,8
tick,0x7ff86ea82704,48485346,0,0x0,8
tick,0x7ff86ea82704,48487258,0,0x0,8
tick,0x7ff86ea82704,48489274,0,0x0,8
tick,0x7ff86ea82704,48491263,0,0x0,8
tick,0x7ff86ea82704,48493350,0,0x0,8
tick,0x7ff86ea82704,48495199,0,0x0,8
tick,0x7ff86ea82704,48497367,0,0x0,8
tick,0x7ff86ea82704,48499248,0,0x0,8
tick,0x7ff86ea82704,48501257,0,0x0,8
tick,0x7ff86ea82704,48503237,0,0x0,8
tick,0x7ff86ea82704,48505354,0,0x0,8
tick,0x7ff86ea82704,48507130,0,0x0,8
tick,0x7ff86ea82704,48509260,0,0x0,8
tick,0x7ff86ea82704,48511140,0,0x0,8
tick,0x7ff86ea82704,48513245,0,0x0,8
tick,0x7ff86ea82704,48515138,0,0x0,8
tick,0x7ff86ea82704,48517270,0,0x0,8
tick,0x7ff86ea82704,48519173,0,0x0,8
tick,0x7ff86ea82704,48521236,0,0x0,8
tick,0x7ff86ea82704,48523183,0,0x0,8
tick,0x7ff86ea82704,48525217,0,0x0,8
tick,0x7ff86ea82704,48527103,0,0x0,8
tick,0x7ff86ea82704,48529189,0,0x0,8
tick,0x7ff86ea82704,48531125,0,0x0,8
tick,0x7ff86ea82704,48533213,0,0x0,8
tick,0x7ff86ea82704,48535208,0,0x0,8
tick,0x7ff86ea82704,48537366,0,0x0,8
tick,0x7ff86ea82704,48539201,0,0x0,8
tick,0x7ff86ea82704,48541165,0,0x0,8
tick,0x7ff86ea82704,48543173,0,0x0,8
tick,0x7ff86ea82704,48545127,0,0x0,8
tick,0x7ff86ea82704,48547114,0,0x0,8
tick,0x7ff86ea82704,48549087,0,0x0,8
tick,0x7ff86ea82704,48551179,0,0x0,8
tick,0x7ff86ea82704,48553018,0,0x0,8
tick,0x7ff86ea82704,48555186,0,0x0,8
tick,0x7ff86ea82704,48557189,0,0x0,8
tick,0x7ff86ea82704,48559171,0,0x0,8
tick,0x7ff86ea82704,48561239,0,0x0,8
tick,0x7ff86ea82704,48563052,0,0x0,8
tick,0x7ff86ea82704,48565199,0,0x0,8
tick,0x7ff86ea82704,48567118,0,0x0,8
tick,0x7ff86ea82704,48569133,0,0x0,8
tick,0x7ff86ea82704,48571114,0,0x0,8
tick,0x7ff86ea82704,48573044,0,0x0,8
tick,0x7ff86ea82704,48575331,0,0x0,8
tick,0x7ff86ea82704,48577018,0,0x0,8
tick,0x7ff86ea82704,48579181,0,0x0,8
tick,0x7ff86ea82704,48580950,0,0x0,8
tick,0x7ff86ea82704,48583109,0,0x0,8
tick,0x7ff86ea82704,48585068,0,0x0,8
tick,0x7ff86ea82704,48587204,0,0x0,8
tick,0x7ff86ea82704,48589074,0,0x0,8
tick,0x7ff86ea82704,48591052,0,0x0,8
tick,0x7ff86ea82704,48593005,0,0x0,8
tick,0x7ff86ea82704,48595059,0,0x0,8
tick,0x7ff86ea82704,48597081,0,0x0,8
tick,0x7ff86ea82704,48599098,0,0x0,8
tick,0x7ff86ea82704,48601054,0,0x0,8
tick,0x7ff86ea82704,48603312,0,0x0,8
tick,0x7ff86ea82704,48605103,0,0x0,8
tick,0x7ff86ea82704,48607051,0,0x0,8
tick,0x7ff86ea82704,48609190,0,0x0,8
tick,0x7ff86ea82704,48611148,0,0x0,8
tick,0x7ff86ea82704,48613247,0,0x0,8
tick,0x7ff86ea82704,48615156,0,0x0,8
tick,0x7ff86ea82704,48617110,0,0x0,8
tick,0x7ff86ea82704,48619177,0,0x0,8
tick,0x7ff86ea82704,48621154,0,0x0,8
tick,0x7ff86ea82704,48622964,0,0x0,8
tick,0x7ff86ea82704,48625043,0,0x0,8
tick,0x7ff86ea82704,48627059,0,0x0,8
tick,0x7ff86ea82704,48628954,0,0x0,8
tick,0x7ff86ea82704,48630923,0,0x0,8
tick,0x7ff86ea82704,48632969,0,0x0,8
tick,0x7ff86ea82704,48634921,0,0x0,8
tick,0x7ff86ea82704,48636983,0,0x0,8
tick,0x7ff86ea82704,48638876,0,0x0,8
tick,0x7ff86ea82704,48641006,0,0x0,8
tick,0x7ff86ea82704,48642911,0,0x0,8
tick,0x7ff86ea82704,48646909,0,0x0,8
tick,0x7ff86ea82704,48649198,0,0x0,8
tick,0x7ff86ea82704,48651057,0,0x0,8
tick,0x7ff86ea82704,48653230,0,0x0,8
tick,0x7ff86ea82704,48655283,0,0x0,8
tick,0x7ff86ea82704,48657056,0,0x0,8
tick,0x7ff86ea82704,48659204,0,0x0,8
tick,0x7ff86ea82704,48661040,0,0x0,8
tick,0x7ff86ea82704,48663205,0,0x0,8
tick,0x7ff86ea82704,48665098,0,0x0,8
tick,0x7ff86ea82704,48667070,0,0x0,8
tick,0x7ff86ea82704,48668967,0,0x0,8
tick,0x7ff86ea82704,48671057,0,0x0,8
tick,0x7ff86ea82704,48672962,0,0x0,8
tick,0x7ff86ea82704,48675030,0,0x0,8
tick,0x7ff86ea82704,48677098,0,0x0,8
tick,0x7ff86ea82704,48679033,0,0x0,8
tick,0x7ff86ea82704,48680982,0,0x0,8
tick,0x7ff86ea82704,48682905,0,0x0,8
tick,0x7ff86ea82704,48684933,0,0x0,8
tick,0x7ff86ea82704,48686970,0,0x0,8
tick,0x7ff86ea82704,48688967,0,0x0,8
tick,0x7ff86ea82704,48691023,0,0x0,8
tick,0x7ff86ea82704,48693010,0,0x0,8
tick,0x7ff86ea82704,48695088,0,0x0,8
tick,0x7ff86ea82704,48696878,0,0x0,8
tick,0x7ff86ea82704,48699078,0,0x0,8
tick,0x7ff86ea82704,48700839,0,0x0,8
tick,0x7ff86ea82704,48703036,0,0x0,8
tick,0x7ff86ea82704,48704909,0,0x0,8
tick,0x7ff86ea82704,48706913,0,0x0,8
tick,0x7ff86ea82704,48708934,0,0x0,8
tick,0x7ff86ea82704,48711116,0,0x0,8
tick,0x7ff86ea82704,48712788,0,0x0,8
tick,0x7ff86ea82704,48714978,0,0x0,8
tick,0x7ff86ea82704,48716894,0,0x0,8
tick,0x7ff86ea82704,48718811,0,0x0,8
tick,0x7ff86ea82704,48720970,0,0x0,8
tick,0x7ff86ea82704,48722808,0,0x0,8
tick,0x7ff86ea82704,48724894,0,0x0,8
tick,0x7ff86ea82704,48726936,0,0x0,8
tick,0x7ff86ea82704,48728899,0,0x0,8
tick,0x7ff86ea82704,48730888,0,0x0,8
tick,0x7ff86ea82704,48732772,0,0x0,8
tick,0x7ff86ea82704,48735120,0,0x0,8
tick,0x7ff86ea82704,48736772,0,0x0,8
tick,0x7ff86ea82704,48738898,0,0x0,8
tick,0x7ff86ea82704,48740747,0,0x0,8
tick,0x7ff86ea82704,48742852,0,0x0,8
tick,0x7ff86ea82704,48744741,0,0x0,8
tick,0x7ff86ea82704,48746838,0,0x0,8
tick,0x7ff86ea82704,48748738,0,0x0,8
tick,0x7ff86ea82704,48750878,0,0x0,8
tick,0x7ff86ea82704,48752677,0,0x0,8
tick,0x7ff86ea82704,48754722,0,0x0,8
tick,0x7ff86ea82704,48756815,0,0x0,8
tick,0x7ff86ea82704,48758775,0,0x0,8
tick,0x7ff86ea82704,48760674,0,0x0,8
tick,0x7ff86ea82704,48762786,0,0x0,8
tick,0x7ff86ea82704,48764734,0,0x0,8
tick,0x7ff86ea82704,48766760,0,0x0,8
tick,0x7ff86ea82704,48768723,0,0x0,8
tick,0x7ff86ea82704,48770813,0,0x0,8
tick,0x7ff86ea82704,48772864,0,0x0,8
tick,0x7ff86ea82704,48774692,0,0x0,8
tick,0x7ff86ea82704,48776719,0,0x0,8
tick,0x7ff86ea82704,48778918,0,0x0,8
tick,0x7ff86ea82704,48780689,0,0x0,8
tick,0x7ff86ea82704,48782723,0,0x0,8
tick,0x7ff86ea82704,48784769,0,0x0,8
tick,0x7ff86ea82704,48786806,0,0x0,8
tick,0x7ff86ea82704,48788694,0,0x0,8
tick,0x7ff86ea82704,48790915,0,0x0,8
tick,0x7ff86ea82704,48792605,0,0x0,8
tick,0x7ff86ea82704,48794687,0,0x0,8
tick,0x7ff86ea82704,48796721,0,0x0,8
tick,0x7ff86ea82704,48798722,0,0x0,8
tick,0x7ff86ea82704,48800804,0,0x0,8
tick,0x7ff86ea82704,48802665,0,0x0,8
tick,0x7ff86ea82704,48804651,0,0x0,8
tick,0x7ff86ea82704,48806755,0,0x0,8
tick,0x7ff86ea82704,48808658,0,0x0,8
tick,0x7ff86ea82704,48810704,0,0x0,8
tick,0x7ff86ea82704,48812544,0,0x0,8
tick,0x7ff86ea82704,48814631,0,0x0,8
tick,0x7ff86ea82704,48816740,0,0x0,8
tick,0x7ff86ea82704,48818590,0,0x0,8
tick,0x7ff86ea82704,48820566,0,0x0,8
tick,0x7ff86ea82704,48822707,0,0x0,8
tick,0x7ff86ea82704,48824759,0,0x0,8
tick,0x7ff86ea82704,48826641,0,0x0,8
tick,0x7ff86ea82704,48828634,0,0x0,8
tick,0x7ff86ea82704,48830613,0,0x0,8
tick,0x7ff86ea82704,48832892,0,0x0,8
tick,0x7ff86ea82704,48834805,0,0x0,8
tick,0x7ff86ea82704,48836582,0,0x0,8
tick,0x7ff86ea82704,48838568,0,0x0,8
tick,0x7ff86ea82704,48840718,0,0x0,8
tick,0x7ff86ea82704,48842754,0,0x0,8
tick,0x7ff86ea82704,48844714,0,0x0,8
tick,0x7ff86ea82704,48846627,0,0x0,8
tick,0x7ff86ea82704,48848637,0,0x0,8
tick,0x7ff86ea82704,48850597,0,0x0,8
tick,0x7ff86ea82704,48852605,0,0x0,8
tick,0x7ff86ea82704,48854554,0,0x0,8
tick,0x7ff86ea82704,48856470,0,0x0,8
tick,0x7ff86ea82704,48858760,0,0x0,8
tick,0x7ff86ea82704,48860534,0,0x0,8
tick,0x7ff86ea82704,48862467,0,0x0,8
tick,0x7ff86ea82704,48864543,0,0x0,8
tick,0x7ff86ea82704,48866488,0,0x0,8
tick,0x7ff86ea82704,48868583,0,0x0,8
tick,0x7ff86ea82704,48870564,0,0x0,8
tick,0x7ff86ea82704,48872608,0,0x0,8
tick,0x7ff86ea82704,48874367,0,0x0,8
tick,0x7ff86ea82704,48876586,0,0x0,8
tick,0x7ff86ea82704,48878430,0,0x0,8
tick,0x7ff86ea82704,48880449,0,0x0,8
tick,0x7ff86ea82704,48882384,0,0x0,8
tick,0x7ff86ea82704,48884622,0,0x0,8
tick,0x7ff86ea82704,48886505,0,0x0,8
tick,0x7ff86ea82704,48888529,0,0x0,8
tick,0x7ff86ea82704,48890532,0,0x0,8
tick,0x7ff86ea82704,48892575,0,0x0,8
tick,0x7ff86ea82704,48894717,0,0x0,8
tick,0x7ff86ea82704,48896540,0,0x0,8
tick,0x7ff86ea82704,48898487,0,0x0,8
tick,0x7ff86ea82704,48900370,0,0x0,8
tick,0x7ff86ea82704,48902749,0,0x0,8
tick,0x7ff86ea82704,48904441,0,0x0,8
tick,0x7ff86ea82704,48906701,0,0x0,8
tick,0x7ff86ea82704,48908563,0,0x0,8
tick,0x7ff86ea82704,48910495,0,0x0,8
tick,0x7ff86ea82704,48912448,0,0x0,8
tick,0x7ff86ea82704,48914519,0,0x0,8
tick,0x7ff86ea82704,48916603,0,0x0,8
tick,0x7ff86ea82704,48918269,0,0x0,8
tick,0x7ff86ea82704,48920311,0,0x0,8
tick,0x7ff86ea82704,48922271,0,0x0,8
tick,0x7ff86ea82704,48924290,0,0x0,8
tick,0x7ff86ea82704,48926830,0,0x0,8
tick,0x7ff86ea82704,48928369,0,0x0,8
tick,0x7ff86ea82704,48930283,0,0x0,8
tick,0x7ff86ea82704,48932271,0,0x0,8
tick,0x7ff86ea82704,48934165,0,0x0,8
tick,0x7ff86ea82704,48936150,0,0x0,8
tick,0x7ff86ea82704,48938186,0,0x0,8
tick,0x7ff86ea82704,48940255,0,0x0,8
tick,0x7ff86ea82704,48942262,0,0x0,8
tick,0x7ff86ea82704,48944242,0,0x0,8
tick,0x7ff86ea82704,48946134,0,0x0,8
tick,0x7ff86ea82704,48948249,0,0x0,8
tick,0x7ff86ea82704,48950065,0,0x0,8
tick,0x7ff86ea82704,48952181,0,0x0,8
tick,0x7ff86ea82704,48954064,0,0x0,8
tick,0x7ff86ea82704,48956151,0,0x0,8
tick,0x7ff86ea82704,48958177,0,0x0,8
tick,0x7ff86ea82704,48960244,0,0x0,8
tick,0x7ff86ea82704,48962180,0,0x0,8
tick,0x7ff86ea82704,48963995,0,0x0,8
tick,0x7ff86ea82704,48966271,0,0x0,8
tick,0x7ff86ea82704,48967984,0,0x0,8
tick,0x7ff86ea82704,48970255,0,0x0,8
tick,0x7ff86ea82704,48972028,0,0x0,8
tick,0x7ff86ea82704,48974109,0,0x0,8
tick,0x7ff86ea82704,48976010,0,0x0,8
tick,0x7ff86ea82704,48978080,0,0x0,8
tick,0x7ff86ea82704,48980185,0,0x0,8
tick,0x7ff86ea82704,48982197,0,0x0,8
tick,0x7ff86ea82704,48984042,0,0x0,8
tick,0x7ff86ea82704,48986015,0,0x0,8
tick,0x7ff86ea82704,48988061,0,0x0,8
tick,0x7ff86ea82704,48990010,0,0x0,8
tick,0x7ff86ea82704,48992014,0,0x0,8
tick,0x7ff86ea82704,48993952,0,0x0,8
tick,0x7ff86ea82704,48996107,0,0x0,8
tick,0x7ff86ea82704,48998144,0,0x0,8
tick,0x7ff86ea82704,48999983,0,0x0,8
tick,0x7ff86ea82704,49001937,0,0x0,8
tick,0x7ff86ea82704,49003964,0,0x0,8
tick,0x7ff86ea82704,49005952,0,0x0,8
tick,0x7ff86ea82704,49008023,0,0x0,8
tick,0x7ff86ea82704,49010125,0,0x0,8
tick,0x7ff86ea82704,49012008,0,0x0,8
tick,0x7ff86ea82704,49014036,0,0x0,8
tick,0x7ff86ea82704,49016126,0,0x0,8
tick,0x7ff86ea82704,49017936,0,0x0,8
tick,0x7ff86ea82704,49020068,0,0x0,8
tick,0x7ff86ea82704,49021949,0,0x0,8
tick,0x7ff86ea82704,49024017,0,0x0,8
tick,0x7ff86ea82704,49025969,0,0x0,8
tick,0x7ff86ea82704,49027898,0,0x0,8
tick,0x7ff86ea82704,49029899,0,0x0,8
tick,0x7ff86ea82704,49032018,0,0x0,8
tick,0x7ff86ea82704,49033945,0,0x0,8
tick,0x7ff86ea82704,49035759,0,0x0,8
tick,0x7ff86ea82704,49037963,0,0x0,8
tick,0x7ff86ea82704,49039761,0,0x0,8
tick,0x7ff86ea82704,49042119,0,0x0,8
tick,0x7ff86ea82704,49043890,0,0x0,8
tick,0x7ff86ea82704,49045853,0,0x0,8
tick,0x7ff86ea82704,49047836,0,0x0,8
tick,0x7ff86ea82704,49049942,0,0x0,8
tick,0x7ff86ea82704,49051777,0,0x0,8
tick,0x7ff86ea82704,49053854,0,0x0,8
tick,0x7ff86ea82704,49055720,0,0x0,8
tick,0x7ff86ea82704,49057995,0,0x0,8
tick,0x7ff86ea82704,49059861,0,0x0,8
tick,0x7ff86ea82704,49062053,0,0x0,8
tick,0x7ff86ea82704,49063795,0,0x0,8
tick,0x7ff86ea82704,49066009,0,0x0,8
tick,0x7ff86ea82704,49067712,0,0x0,8
tick,0x7ff86ea82704,49070800,0,0x0,8
tick,0x7ff86ea82704,49072623,0,0x0,8
tick,0x7ff86ea82704,49074668,0,0x0,8
tick,0x7ff86ea82704,49076678,0,0x0,8
tick,0x7ff86ea82704,49078646,0,0x0,8
tick,0x7ff86ea82704,49080649,0,0x0,8
tick,0x7ff86ea82704,49082638,0,0x0,8
tick,0x7ff86ea82704,49084638,0,0x0,8
tick,0x7ff86ea82704,49086712,0,0x0,8
tick,0x7ff86ea82704,49088732,0,0x0,8
tick,0x7ff86ea82704,49090652,0,0x0,8
tick,0x7ff86ea82704,49092679,0,0x0,8
tick,0x7ff86ea82704,49094651,0,0x0,8
tick,0x7ff86ea82704,49096645,0,0x0,8
tick,0x7ff86ea82704,49098572,0,0x0,8
tick,0x7ff86ea82704,49100609,0,0x0,8
tick,0x7ff86ea82704,49102748,0,0x0,8
tick,0x7ff86ea82704,49104699,0,0x0,8
tick,0x7ff86ea82704,49106675,0,0x0,8
tick,0x7ff86ea82704,49108607,0,0x0,8
tick,0x7ff86ea82704,49110554,0,0x0,8
tick,0x7ff86ea82704,49112617,0,0x0,8
tick,0x7ff86ea82704,49114562,0,0x0,8
tick,0x7ff86ea82704,49116573,0,0x0,8
tick,0x7ff86ea82704,49118609,0,0x0,8
tick,0x7ff86ea82704,49120576,0,0x0,8
tick,0x7ff86ea82704,49122601,0,0x0,8
tick,0x7ff86ea82704,49124588,0,0x0,8
tick,0x7ff86ea82704,49126598,0,0x0,8
tick,0x7ff86ea82704,49128626,0,0x0,8
tick,0x7ff86ea82704,49130468,0,0x0,8
tick,0x7ff86ea82704,49132663,0,0x0,8
tick,0x7ff86ea82704,49134731,0,0x0,8
tick,0x7ff86ea82704,49136632,0,0x0,8
tick,0x7ff86ea82704,49138465,0,0x0,8
tick,0x7ff86ea82704,49140592,0,0x0,8
tick,0x7ff86ea82704,49142448,0,0x0,8
tick,0x7ff86ea82704,49144565,0,0x0,8
tick,0x7ff86ea82704,49146475,0,0x0,8
tick,0x7ff86ea82704,49148426,0,0x0,8
tick,0x7ff86ea82704,49150454,0,0x0,8
tick,0x7ff86ea82704,49152417,0,0x0,8
tick,0x7ff86ea82704,49154503,0,0x0,8
tick,0x7ff86ea82704,49156381,0,0x0,8
tick,0x7ff86ea82704,49158485,0,0x0,8
tick,0x7ff86ea82704,49160424,0,0x0,8
tick,0x7ff86ea82704,49162534,0,0x0,8
tick,0x7ff86ea82704,49164399,0,0x0,8
tick,0x7ff86ea82704,49166514,0,0x0,8
tick,0x7ff86ea82704,49168362,0,0x0,8
tick,0x7ff86ea82704,49170553,0,0x0,8
tick,0x7ff86ea82704,49172423,0,0x0,8
tick,0x7ff86ea82704,49174426,0,0x0,8
tick,0x7ff86ea82704,49176420,0,0x0,8
tick,0x7ff86ea82704,49178457,0,0x0,8
tick,0x7ff86ea82704,49180430,0,0x0,8
tick,0x7ff86ea82704,49182475,0,0x0,8
tick,0x7ff86ea82704,49184410,0,0x0,8
tick,0x7ff86ea82704,49186412,0,0x0,8
tick,0x7ff86ea82704,49188395,0,0x0,8
tick,0x7ff86ea82704,49190381,0,0x0,8
tick,0x7ff86ea82704,49192315,0,0x0,8
tick,0x7ff86ea82704,49194412,0,0x0,8
tick,0x7ff86ea82704,49196469,0,0x0,8
tick,0x7ff86ea82704,49198471,0,0x0,8
tick,0x7ff86ea82704,49200357,0,0x0,8
tick,0x7ff86ea82704,49202446,0,0x0,8
tick,0x7ff86ea82704,49204458,0,0x0,8
tick,0x7ff86ea82704,49206346,0,0x0,8
tick,0x7ff86ea82704,49208419,0,0x0,8
tick,0x7ff86ea82704,49210418,0,0x0,8
tick,0x7ff86ea82704,49212254,0,0x0,8
tick,0x7ff86ea82704,49214374,0,0x0,8
tick,0x7ff86ea82704,49216210,0,0x0,8
tick,0x7ff86ea82704,49218302,0,0x0,8
tick,0x7ff86ea82704,49220334,0,0x0,8
tick,0x7ff86ea82704,49222285,0,0x0,8
tick,0x7ff86ea82704,49224198,0,0x0,8
tick,0x7ff86ea82704,49226256,0,0x0,8
tick,0x7ff86ea82704,49228300,0,0x0,8
tick,0x7ff86ea82704,49230339,0,0x0,8
tick,0x7ff86ea82704,49232196,0,0x0,8
tick,0x7ff86ea82704,49234283,0,0x0,8
tick,0x7ff86ea82704,49236221,0,0x0,8
tick,0x7ff86ea82704,49238207,0,0x0,8
tick,0x7ff86ea82704,49240320,0,0x0,8
tick,0x7ff86ea82704,49242425,0,0x0,8
tick,0x7ff86ea82704,49244261,0,0x0,8
tick,0x7ff86ea82704,49246185,0,0x0,8
tick,0x7ff86ea82704,49248248,0,0x0,8
tick,0x7ff86ea82704,49250130,0,0x0,8
tick,0x7ff86ea82704,49252213,0,0x0,8
tick,0x7ff86ea82704,49254122,0,0x0,8
tick,0x7ff86ea82704,49256199,0,0x0,8
tick,0x7ff86ea82704,49258193,0,0x0,8
tick,0x7ff86ea82704,49260219,0,0x0,8
tick,0x7ff86ea82704,49262140,0,0x0,8
tick,0x7ff86ea82704,49264268,0,0x0,8
tick,0x7ff86ea82704,49266244,0,0x0,8
tick,0x7ff86ea82704,49268319,0,0x0,8
tick,0x7ff86ea82704,49270340,0,0x0,8
tick,0x7ff86ea82704,49272239,0,0x0,8
tick,0x7ff86ea82704,49274179,0,0x0,8
tick,0x7ff86ea82704,49276216,0,0x0,8
tick,0x7ff86ea82704,49278139,0,0x0,8
tick,0x7ff86ea82704,49280126,0,0x0,8
tick,0x7ff86ea82704,49282266,0,0x0,8
tick,0x7ff86ea82704,49284108,0,0x0,8
tick,0x7ff86ea82704,49286158,0,0x0,8
tick,0x7ff86ea82704,49288089,0,0x0,8
tick,0x7ff86ea82704,49290249,0,0x0,8
tick,0x7ff86ea82704,49292229,0,0x0,8
tick,0x7ff86ea82704,49295490,0,0x0,8
tick,0x7ff86ea82704,49296164,0,0x0,8
tick,0x7ff86ea82704,49298035,0,0x0,8
tick,0x7ff86ea82704,49300073,0,0x0,8
tick,0x7ff86ea82704,49302055,0,0x0,8
tick,0x7ff86ea82704,49304121,0,0x0,8
tick,0x7ff86ea82704,49305959,0,0x0,8
tick,0x7ff86ea82704,49308019,0,0x0,8
tick,0x7ff86ea82704,49310020,0,0x0,8
tick,0x7ff86ea82704,49312049,0,0x0,8
tick,0x7ff86ea82704,49314036,0,0x0,8
tick,0x7ff86ea82704,49316060,0,0x0,8
tick,0x7ff86ea82704,49317936,0,0x0,8
tick,0x7ff86ea82704,49320068,0,0x0,8
tick,0x7ff86ea82704,49321914,0,0x0,8
tick,0x7ff86ea82704,49324047,0,0x0,8
tick,0x7ff86ea82704,49325932,0,0x0,8
tick,0x7ff86ea82704,49328028,0,0x0,8
tick,0x7ff86ea82704,49329931,0,0x0,8
tick,0x7ff86ea82704,49331956,0,0x0,8
tick,0x7ff86ea82704,49333928,0,0x0,8
tick,0x7ff86ea82704,49335950,0,0x0,8
tick,0x7ff86ea82704,49338016,0,0x0,8
tick,0x7ff86ea82704,49339962,0,0x0,8
tick,0x7ff86ea82704,49341913,0,0x0,8
tick,0x7ff86ea82704,49343999,0,0x0,8
tick,0x7ff86ea82704,49345889,0,0x0,8
tick,0x7ff86ea82704,49347923,0,0x0,8
tick,0x7ff86ea82704,49349838,0,0x0,8
tick,0x7ff86ea82704,49351969,0,0x0,8
tick,0x7ff86ea82704,49353828,0,0x0,8
tick,0x7ff86ea82704,49355938,0,0x0,8
tick,0x7ff86ea82704,49357829,0,0x0,8
tick,0x7ff86ea82704,49359953,0,0x0,8
tick,0x7ff86ea82704,49361820,0,0x0,8
tick,0x7ff86ea82704,49363931,0,0x0,8
tick,0x7ff86ea82704,49365812,0,0x0,8
tick,0x7ff86ea82704,49367917,0,0x0,8
tick,0x7ff86ea82704,49369832,0,0x0,8
tick,0x7ff86ea82704,49371794,0,0x0,8
tick,0x7ff86ea82704,49373842,0,0x0,8
tick,0x7ff86ea82704,49375901,0,0x0,8
tick,0x7ff86ea82704,49377896,0,0x0,8
tick,0x7ff86ea82704,49379874,0,0x0,8
tick,0x7ff86ea82704,49384487,0,0x0,8
tick,0x7ff86ea82704,49386008,0,0x0,8
tick,0x7ff86ea82704,49388559,0,0x0,8
tick,0x7ff86ea82704,49390138,0,0x0,8
tick,0x7ff86ea82704,49392599,0,0x0,8
tick,0x7ff86ea82704,49394048,0,0x0,8
tick,0x7ff86ea82704,49396304,0,0x0,8
tick,0x7ff86ea82704,49398058,0,0x0,8
tick,0x7ff86ea82704,49400431,0,0x0,8
tick,0x7ff86ea82704,49402176,0,0x0,8
tick,0x7ff86ea82704,49404371,0,0x0,8
tick,0x7ff86ea82704,49406255,0,0x0,8
tick,0x7ff86ea82704,49408302,0,0x0,8
tick,0x7ff86ea82704,49410125,0,0x0,8
tick,0x7ff86ea82704,49412459,0,0x0,8
tick,0x7ff86ea82704,49414228,0,0x0,8
tick,0x7ff86ea82704,49416131,0,0x0,8
tick,0x7ff86ea82704,49418187,0,0x0,8
tick,0x7ff86ea82704,49420041,0,0x0,8
tick,0x7ff86ea82704,49422087,0,0x0,8
tick,0x7ff86ea82704,49424121,0,0x0,8
tick,0x7ff86ea82704,49425980,0,0x0,8
tick,0x7ff86ea82704,49428017,0,0x0,8
tick,0x7ff86ea82704,49429917,0,0x0,8
tick,0x7ff86ea82704,49432141,0,0x0,8
tick,0x7ff86ea82704,49433949,0,0x0,8
tick,0x7ff86ea82704,49435971,0,0x0,8
tick,0x7ff86ea82704,49438717,0,0x0,8
tick,0x7ff86ea82704,49441242,0,0x0,8
tick,0x7ff86ea82704,49443921,0,0x0,8
tick,0x7ff86ea82704,49445199,0,0x0,8
tick,0x7ff86ea82704,49446958,0,0x0,8
tick,0x7ff86ea82704,49449115,0,0x0,8
tick,0x7ff86ea82704,49451995,0,0x0,8
tick,0x7ff86ea82704,49453972,0,0x0,8
tick,0x7ff86ea82704,49455807,0,0x0,8
tick,0x7ff86ea82704,49457946,0,0x0,8
tick,0x7ff86ea82704,49462364,0,0x0,8
tick,0x7ff86ea82704,49464363,0,0x0,8
tick,0x7ff86ea82704,49465704,0,0x0,8
tick,0x7ff86ea82704,49467881,0,0x0,8
tick,0x7ff86ea82704,49470301,0,0x0,8
tick,0x7ff86ea82704,49471634,0,0x0,8
tick,0x7ff86ea82704,49473849,0,0x0,8
tick,0x7ff86ea82704,49477502,0,0x0,8
tick,0x7ff86ea82704,49479194,0,0x0,8
tick,0x7ff86ea82704,49479916,0,0x0,8
tick,0x7ff86ea82704,49482096,0,0x0,8
tick,0x7ff86ea82704,49483973,0,0x0,8
tick,0x7ff86ea82704,49486042,0,0x0,8
tick,0x7ff86ea82704,49487660,0,0x0,8
tick,0x7ff86ea82704,49489800,0,0x0,8
tick,0x7ff86ea82704,49491980,0,0x0,8
tick,0x7ff86ea82704,49495516,0,0x0,8
tick,0x7ff86ea82704,49495543,0,0x0,8
tick,0x7ff86ea82704,49497706,0,0x0,8
tick,0x7ff86ea82704,49499745,0,0x0,8
tick,0x7ff86ea82704,49501823,0,0x0,8
tick,0x7ff86ea82704,49503544,0,0x0,8
tick,0x7ff86ea82704,49505837,0,0x0,8
tick,0x7ff86ea82704,49507748,0,0x0,8
tick,0x7ff86ea82704,49510791,0,0x0,8
tick,0x7ff86ea82704,49511909,0,0x0,8
tick,0x7ff86ea82704,49513587,0,0x0,8
tick,0x7ff86ea82704,49515860,0,0x0,8
tick,0x7ff86ea82704,49517548,0,0x0,8
tick,0x7ff86ea82704,49519583,0,0x0,8
tick,0x7ff86ea82704,49521666,0,0x0,8
tick,0x7ff86ea82704,49523578,0,0x0,8
tick,0x7ff86ea82704,49526319,0,0x0,8
tick,0x7ff86ea82704,49528200,0,0x0,8
tick,0x7ff86ea82704,49529590,0,0x0,8
tick,0x7ff86ea82704,49531521,0,0x0,8
tick,0x7ff86ea82704,49533818,0,0x0,8
tick,0x7ff86ea82704,49535645,0,0x0,8
tick,0x7ff86ea82704,49537505,0,0x0,8
tick,0x7ff86ea82704,49539561,0,0x0,8
tick,0x7ff86ea82704,49541518,0,0x0,8
tick,0x7ff86ea82704,49544425,0,0x0,8
tick,0x7ff86ea82704,49545487,0,0x0,8
tick,0x7ff86ea82704,49547829,0,0x0,8
tick,0x7ff86ea82704,49549883,0,0x0,8
tick,0x7ff86ea82704,49551458,0,0x0,8
tick,0x7ff86ea82704,49553602,0,0x0,8
tick,0x7ff86ea82704,49555655,0,0x0,8
tick,0x7ff86ea82704,49557436,0,0x0,8
tick,0x7ff86ea82704,49560874,0,0x0,8
tick,0x7ff86ea82704,49561956,0,0x0,8
tick,0x7ff86ea82704,49563740,0,0x0,8
tick,0x7ff86ea82704,49565581,0,0x0,8
tick,0x7ff86ea82704,49567581,0,0x0,8
tick,0x7ff86ea82704,49569544,0,0x0,8
tick,0x7ff86ea82704,49571731,0,0x0,8
tick,0x7ff86ea82704,49573653,0,0x0,8
tick,0x7ff86ea82704,49576364,0,0x0,8
tick,0x7ff86ea82704,49577869,0,0x0,8
tick,0x7ff86ea82704,49579493,0,0x0,8
tick,0x7ff86ea82704,49581498,0,0x0,8
tick,0x7ff86ea82704,49583545,0,0x0,8
tick,0x7ff86ea82704,49585360,0,0x0,8
tick,0x7ff86ea82704,49587393,0,0x0,8
tick,0x7ff86ea82704,49589300,0,0x0,8
tick,0x7ff86ea82704,49591418,0,0x0,8
tick,0x7ff86ea82704,49594559,0,0x0,8
tick,0x7ff86ea82704,49595345,0,0x0,8
tick,0x7ff86ea82704,49597214,0,0x0,8
tick,0x7ff86ea82704,49599385,0,0x0,8
tick,0x7ff86ea82704,49601280,0,0x0,8
tick,0x7ff86ea82704,49603337,0,0x0,8
tick,0x7ff86ea82704,49605203,0,0x0,8
tick,0x7ff86ea82704,49607249,0,0x0,8
tick,0x7ff86ea82704,49609867,0,0x0,8
tick,0x7ff86ea82704,49611264,0,0x0,8
tick,0x7ff86ea82704,49613179,0,0x0,8
tick,0x7ff86ea82704,49615278,0,0x0,8
tick,0x7ff86ea82704,49617184,0,0x0,8
tick,0x7ff86ea82704,49619149,0,0x0,8
tick,0x7ff86ea82704,49621379,0,0x0,8
tick,0x7ff86ea82704,49623206,0,0x0,8
tick,0x7ff86ea82704,49625682,0,0x0,8
tick,0x7ff86ea82704,49627695,0,0x0,8
tick,0x7ff86ea82704,49629266,0,0x0,8
tick,0x7ff86ea82704,49631312,0,0x0,8
tick,0x7ff86ea82704,49633463,0,0x0,8
tick,0x7ff86ea82704,49635262,0,0x0,8
tick,0x7ff86ea82704,49637548,0,0x0,8
tick,0x7ff86ea82704,49639216,0,0x0,8
tick,0x7ff86ea82704,49641164,0,0x0,8
tick,0x7ff86ea82704,49644016,0,0x0,8
tick,0x7ff86ea82704,49645433,0,0x0,8
tick,0x7ff86ea82704,49647170,0,0x0,8
tick,0x7ff86ea82704,49649413,0,0x0,8
tick,0x7ff86ea82704,49651342,0,0x0,8
tick,0x7ff86ea82704,49653287,0,0x0,8
tick,0x7ff86ea82704,49655319,0,0x0,8
tick,0x7ff86ea82704,49657192,0,0x0,8
tick,0x7ff86ea82704,49659830,0,0x0,8
tick,0x7ff86ea82704,49661143,0,0x0,8
tick,0x7ff86ea82704,49663197,0,0x0,8
tick,0x7ff86ea82704,49665220,0,0x0,8
tick,0x7ff86ea82704,49667329,0,0x0,8
tick,0x7ff86ea82704,49669162,0,0x0,8
tick,0x7ff86ea82704,49671397,0,0x0,8
tick,0x7ff86ea82704,49673084,0,0x0,8
tick,0x7ff86ea82704,49675567,0,0x0,8
tick,0x7ff86ea82704,49677424,0,0x0,8
tick,0x7ff86ea82704,49679250,0,0x0,8
tick,0x7ff86ea82704,49681155,0,0x0,8
tick,0x7ff86ea82704,49683168,0,0x0,8
tick,0x7ff86ea82704,49685104,0,0x0,8
tick,0x7ff86ea82704,49687191,0,0x0,8
tick,0x7ff86ea82704,49689104,0,0x0,8
tick,0x7ff86ea82704,49691175,0,0x0,8
tick,0x7ff86ea82704,49693821,0,0x0,8
tick,0x7ff86ea82704,49695385,0,0x0,8
tick,0x7ff86ea82704,49697330,0,0x0,8
tick,0x7ff86ea82704,49699062,0,0x0,8
tick,0x7ff86ea82704,49701194,0,0x0,8
tick,0x7ff86ea82704,49703079,0,0x0,8
tick,0x7ff86ea82704,49705159,0,0x0,8
tick,0x7ff86ea82704,49706974,0,0x0,8
tick,0x7ff86ea82704,49709865,0,0x0,8
tick,0x7ff86ea82704,49712065,0,0x0,8
tick,0x7ff86ea82704,49713925,0,0x0,8
tick,0x7ff86ea82704,49716002,0,0x0,8
tick,0x7ff86ea82704,49718036,0,0x0,8
tick,0x7ff86ea82704,49719945,0,0x0,8
tick,0x7ff86ea82704,49721952,0,0x0,8
tick,0x7ff86ea82704,49723964,0,0x0,8
tick,0x7ff86ea82704,49726521,0,0x0,8
tick,0x7ff86ea82704,49728122,0,0x0,8
tick,0x7ff86ea82704,49729961,0,0x0,8
tick,0x7ff86ea82704,49731915,0,0x0,8
tick,0x7ff86ea82704,49733907,0,0x0,8
tick,0x7ff86ea82704,49735918,0,0x0,8
tick,0x7ff86ea82704,49737934,0,0x0,8
tick,0x7ff86ea82704,49739988,0,0x0,8
tick,0x7ff86ea82704,49742229,0,0x0,8
tick,0x7ff86ea82704,49744151,0,0x0,8
tick,0x7ff86ea82704,49745933,0,0x0,8
tick,0x7ff86ea82704,49748117,0,0x0,8
tick,0x7ff86ea82704,49750011,0,0x0,8
tick,0x7ff86ea82704,49751965,0,0x0,8
tick,0x7ff86ea82704,49754063,0,0x0,8
tick,0x7ff86ea82704,49755951,0,0x0,8
tick,0x7ff86ea82704,49758121,0,0x0,8
tick,0x7ff86ea82704,49760199,0,0x0,8
tick,0x7ff86ea82704,49762008,0,0x0,8
tick,0x7ff86ea82704,49763903,0,0x0,8
tick,0x7ff86ea82704,49765910,0,0x0,8
tick,0x7ff86ea82704,49768013,0,0x0,8
tick,0x7ff86ea82704,49769980,0,0x0,8
tick,0x7ff86ea82704,49772009,0,0x0,8
tick,0x7ff86ea82704,49773945,0,0x0,8
tick,0x7ff86ea82704,49776430,0,0x0,8
tick,0x7ff86ea82704,49778132,0,0x0,8
tick,0x7ff86ea82704,49779862,0,0x0,8
tick,0x7ff86ea82704,49781923,0,0x0,8
tick,0x7ff86ea82704,49783794,0,0x0,8
tick,0x7ff86ea82704,49788614,0,0x0,8
tick,0x7ff86ea82704,49789156,0,0x0,8
tick,0x7ff86ea82704,49791032,0,0x0,8
tick,0x7ff86ea82704,49794213,0,0x0,8
tick,0x7ff86ea82704,49795832,0,0x0,8
tick,0x7ff86ea82704,49797770,0,0x0,8
tick,0x7ff86ea82704,49799678,0,0x0,8
tick,0x7ff86ea82704,49801869,0,0x0,8
tick,0x7ff86ea82704,49803726,0,0x0,8
tick,0x7ff86ea82704,49805788,0,0x0,8
tick,0x7ff86ea82704,49807715,0,0x0,8
tick,0x7ff86ea82704,49810388,0,0x0,8
tick,0x7ff86ea82704,49811709,0,0x0,8
tick,0x7ff86ea82704,49813747,0,0x0,8
tick,0x7ff86ea82704,49815668,0,0x0,8
tick,0x7ff86ea82704,49817783,0,0x0,8
tick,0x7ff86ea82704,49819732,0,0x0,8
tick,0x7ff86ea82704,49821664,0,0x0,8
tick,0x7ff86ea82704,49823650,0,0x0,8
tick,0x7ff86ea82704,49825856,0,0x0,8
tick,0x7ff86ea82704,49827793,0,0x0,8
tick,0x7ff86ea82704,49829642,0,0x0,8
tick,0x7ff86ea82704,49831653,0,0x0,8
tick,0x7ff86ea82704,49833663,0,0x0,8
tick,0x7ff86ea82704,49835627,0,0x0,8
tick,0x7ff86ea82704,49837667,0,0x0,8
tick,0x7ff86ea82704,49839657,0,0x0,8
tick,0x7ff86ea82704,49841863,0,0x0,8
tick,0x7ff86ea82704,49843956,0,0x0,8
tick,0x7ff86ea82704,49845701,0,0x0,8
tick,0x7ff86ea82704,49847598,0,0x0,8
tick,0x7ff86ea82704,49849627,0,0x0,8
tick,0x7ff86ea82704,49851596,0,0x0,8
tick,0x7ff86ea82704,49853755,0,0x0,8
tick,0x7ff86ea82704,49855547,0,0x0,8
tick,0x7ff86ea82704,49857738,0,0x0,8
tick,0x7ff86ea82704,49859662,0,0x0,8
tick,0x7ff86ea82704,49861729,0,0x0,8
tick,0x7ff86ea82704,49863797,0,0x0,8
tick,0x7ff86ea82704,49865650,0,0x0,8
tick,0x7ff86ea82704,49867598,0,0x0,8
tick,0x7ff86ea82704,49869577,0,0x0,8
tick,0x7ff86ea82704,49871509,0,0x0,8
tick,0x7ff86ea82704,49873637,0,0x0,8
tick,0x7ff86ea82704,49875806,0,0x0,8
tick,0x7ff86ea82704,49877707,0,0x0,8
tick,0x7ff86ea82704,49879555,0,0x0,8
tick,0x7ff86ea82704,49881530,0,0x0,8
tick,0x7ff86ea82704,49883657,0,0x0,8
tick,0x7ff86ea82704,49885502,0,0x0,8
tick,0x7ff86ea82704,49887481,0,0x0,8
tick,0x7ff86ea82704,49889529,0,0x0,8
tick,0x7ff86ea82704,49891989,0,0x0,8
tick,0x7ff86ea82704,49893871,0,0x0,8
tick,0x7ff86ea82704,49895626,0,0x0,8
tick,0x7ff86ea82704,49897555,0,0x0,8
tick,0x7ff86ea82704,49899635,0,0x0,8
tick,0x7ff86ea82704,49901551,0,0x0,8
tick,0x7ff86ea82704,49903507,0,0x0,8
tick,0x7ff86ea82704,49905447,0,0x0,8
tick,0x7ff86ea82704,49907433,0,0x0,8
tick,0x7ff86ea82704,49909832,0,0x0,8
tick,0x7ff86ea82704,49911494,0,0x0,8
tick,0x7ff86ea82704,49913538,0,0x0,8
tick,0x7ff86ea82704,49915383,0,0x0,8
tick,0x7ff86ea82704,49917449,0,0x0,8
tick,0x7ff86ea82704,49919335,0,0x0,8
tick,0x7ff86ea82704,49921628,0,0x0,8
tick,0x7ff86ea82704,49923417,0,0x0,8
tick,0x7ff86ea82704,49926904,0,0x0,8
tick,0x7ff86ea82704,49927633,0,0x0,8
tick,0x7ff86ea82704,49929633,0,0x0,8
tick,0x7ff86ea82704,49931902,0,0x0,8
tick,0x7ff86ea82704,49933697,0,0x0,8
tick,0x7ff86ea82704,49935639,0,0x0,8
tick,0x7ff86ea82704,49937548,0,0x0,8
tick,0x7ff86ea82704,49939501,0,0x0,8
tick,0x7ff86ea82704,49941518,0,0x0,8
tick,0x7ff86ea82704,49944062,0,0x0,8
tick,0x7ff86ea82704,49945769,0,0x0,8
tick,0x7ff86ea82704,49947689,0,0x0,8
tick,0x7ff86ea82704,49949475,0,0x0,8
tick,0x7ff86ea82704,49951461,0,0x0,8
tick,0x7ff86ea82704,49953458,0,0x0,8
tick,0x7ff86ea82704,49955526,0,0x0,8
tick,0x7ff86ea82704,49957452,0,0x0,8
tick,0x7ff86ea82704,49959794,0,0x0,8
tick,0x7ff86ea82704,49961694,0,0x0,8
tick,0x7ff86ea82704,49963541,0,0x0,8
tick,0x7ff86ea82704,49965610,0,0x0,8
tick,0x7ff86ea82704,49967440,0,0x0,8
tick,0x7ff86ea82704,49969514,0,0x0,8
tick,0x7ff86ea82704,49971612,0,0x0,8
tick,0x7ff86ea82704,49973424,0,0x0,8
tick,0x7ff86ea82704,49975987,0,0x0,8
tick,0x7ff86ea82704,49977661,0,0x0,8
tick,0x7ff86ea82704,49979776,0,0x0,8
tick,0x7ff86ea82704,49981735,0,0x0,8
tick,0x7ff86ea82704,49983516,0,0x0,8
tick,0x7ff86ea82704,49985540,0,0x0,8
tick,0x7ff86ea82704,49987521,0,0x0,8
tick,0x7ff86ea82704,49989305,0,0x0,8
tick,0x7ff86ea82704,49991509,0,0x0,8
tick,0x7ff86ea82704,49993828,0,0x0,8
tick,0x7ff86ea82704,49995333,0,0x0,8
tick,0x7ff86ea82704,49997589,0,0x0,8
tick,0x7ff86ea82704,49999502,0,0x0,8
tick,0x7ff86ea82704,50001593,0,0x0,8
tick,0x7ff86ea82704,50003224,0,0x0,8
tick,0x7ff86ea82704,50005497,0,0x0,8
tick,0x7ff86ea82704,50007168,0,0x0,8
tick,0x7ff86ea82704,50010364,0,0x0,8
tick,0x7ff86ea82704,50011155,0,0x0,8
tick,0x7ff86ea82704,50013252,0,0x0,8
tick,0x7ff86ea82704,50015276,0,0x0,8
tick,0x7ff86ea82704,50017344,0,0x0,8
tick,0x7ff86ea82704,50019140,0,0x0,8
tick,0x7ff86ea82704,50021158,0,0x0,8
tick,0x7ff86ea82704,50023212,0,0x0,8
tick,0x7ff86ea82704,50025867,0,0x0,8
tick,0x7ff86ea82704,50027498,0,0x0,8
tick,0x7ff86ea82704,50029164,0,0x0,8
tick,0x7ff86ea82704,50031321,0,0x0,8
tick,0x7ff86ea82704,50033315,0,0x0,8
tick,0x7ff86ea82704,50035174,0,0x0,8
tick,0x7ff86ea82704,50037179,0,0x0,8
tick,0x7ff86ea82704,50039119,0,0x0,8
tick,0x7ff86ea82704,50041307,0,0x0,8
tick,0x7ff86ea82704,50043683,0,0x0,8
tick,0x7ff86ea82704,50045272,0,0x0,8
tick,0x7ff86ea82704,50047080,0,0x0,8
tick,0x7ff86ea82704,50049350,0,0x0,8
tick,0x7ff86ea82704,50051060,0,0x0,8
tick,0x7ff86ea82704,50053111,0,0x0,8
tick,0x7ff86ea82704,50055125,0,0x0,8
tick,0x7ff86ea82704,50057387,0,0x0,8
tick,0x7ff86ea82704,50059542,0,0x0,8
tick,0x7ff86ea82704,50061057,0,0x0,8
tick,0x7ff86ea82704,50063042,0,0x0,8
tick,0x7ff86ea82704,50065699,0,0x0,8
tick,0x7ff86ea82704,50066959,0,0x0,8
tick,0x7ff86ea82704,50068976,0,0x0,8
tick,0x7ff86ea82704,50071030,0,0x0,8
tick,0x7ff86ea82704,50073069,0,0x0,8
tick,0x7ff86ea82704,50074989,0,0x0,8
tick,0x7ff86ea82704,50077153,0,0x0,8
tick,0x7ff86ea82704,50079035,0,0x0,8
tick,0x7ff86ea82704,50081125,0,0x0,8
tick,0x7ff86ea82704,50083017,0,0x0,8
tick,0x7ff86ea82704,50084945,0,0x0,8
tick,0x7ff86ea82704,50087108,0,0x0,8
tick,0x7ff86ea82704,50088917,0,0x0,8
tick,0x7ff86ea82704,50091021,0,0x0,8
tick,0x7ff86ea82704,50093019,0,0x0,8
tick,0x7ff86ea82704,50095128,0,0x0,8
tick,0x7ff86ea82704,50097125,0,0x0,8
tick,0x7ff86ea82704,50099059,0,0x0,8
tick,0x7ff86ea82704,50100971,0,0x0,8
tick,0x7ff86ea82704,50102999,0,0x0,8
tick,0x7ff86ea82704,50105053,0,0x0,8
tick,0x7ff86ea82704,50106924,0,0x0,8
tick,0x7ff86ea82704,50109353,0,0x0,8
tick,0x7ff86ea82704,50110928,0,0x0,8
tick,0x7ff86ea82704,50113145,0,0x0,8
tick,0x7ff86ea82704,50115019,0,0x0,8
tick,0x7ff86ea82704,50116966,0,0x0,8
tick,0x7ff86ea82704,50118989,0,0x0,8
tick,0x7ff86ea82704,50120929,0,0x0,8
tick,0x7ff86ea82704,50122956,0,0x0,8
tick,0x7ff86ea82704,50124841,0,0x0,8
tick,0x7ff86ea82704,50127504,0,0x0,8
tick,0x7ff86ea82704,50129135,0,0x0,8
tick,0x7ff86ea82704,50131054,0,0x0,8
tick,0x7ff86ea82704,50132911,0,0x0,8
tick,0x7ff86ea82704,50135383,0,0x0,8
tick,0x7ff86ea82704,50137126,0,0x0,8
tick,0x7ff86ea82704,50139134,0,0x0,8
tick,0x7ff86ea82704,50141118,0,0x0,8
tick,0x7ff86ea82704,50144088,0,0x0,8
tick,0x7ff86ea82704,50145194,0,0x0,8
tick,0x7ff86ea82704,50146951,0,0x0,8
tick,0x7ff86ea82704,50149175,0,0x0,8
tick,0x7ff86ea82704,50150913,0,0x0,8
tick,0x7ff86ea82704,50153193,0,0x0,8
tick,0x7ff86ea82704,50154927,0,0x0,8
tick,0x7ff86ea82704,50157059,0,0x0,8
tick,0x7ff86ea82704,50159734,0,0x0,8
tick,0x7ff86ea82704,50160846,0,0x0,8
tick,0x7ff86ea82704,50162954,0,0x0,8
tick,0x7ff86ea82704,50164991,0,0x0,8
tick,0x7ff86ea82704,50166995,0,0x0,8
tick,0x7ff86ea82704,50168797,0,0x0,8
tick,0x7ff86ea82704,50171031,0,0x0,8
tick,0x7ff86ea82704,50172974,0,0x0,8
tick,0x7ff86ea82704,50175785,0,0x0,8
tick,0x7ff86ea82704,50177210,0,0x0,8
tick,0x7ff86ea82704,50178981,0,0x0,8
tick,0x7ff86ea82704,50181163,0,0x0,8
tick,0x7ff86ea82704,50183668,0,0x0,8
tick,0x7ff86ea82704,50184714,0,0x0,8
tick,0x7ff86ea82704,50186769,0,0x0,8
tick,0x7ff86ea82704,50188735,0,0x0,8
tick,0x7ff86ea82704,50191106,0,0x0,8
tick,0x7ff86ea82704,50193833,0,0x0,8
tick,0x7ff86ea82704,50195226,0,0x0,8
tick,0x7ff86ea82704,50197385,0,0x0,8
tick,0x7ff86ea82704,50199265,0,0x0,8
tick,0x7ff86ea82704,50200795,0,0x0,8
tick,0x7ff86ea82704,50202990,0,0x0,8
tick,0x7ff86ea82704,50204786,0,0x0,8
tick,0x7ff86ea82704,50206870,0,0x0,8
tick,0x7ff86ea82704,50210132,0,0x0,8
tick,0x7ff86ea82704,50211866,0,0x0,8
tick,0x7ff86ea82704,50213829,0,0x0,8
tick,0x7ff86ea82704,50215679,0,0x0,8
tick,0x7ff86ea82704,50217706,0,0x0,8
tick,0x7ff86ea82704,50219598,0,0x0,8
tick,0x7ff86ea82704,50221747,0,0x0,8
tick,0x7ff86ea82704,50223624,0,0x0,8
tick,0x7ff86ea82704,50225914,0,0x0,8
tick,0x7ff86ea82704,50227743,0,0x0,8
tick,0x7ff86ea82704,50229667,0,0x0,8
tick,0x7ff86ea82704,50231638,0,0x0,8
tick,0x7ff86ea82704,50233643,0,0x0,8
tick,0x7ff86ea82704,50235653,0,0x0,8
tick,0x7ff86ea82704,50237689,0,0x0,8
tick,0x7ff86ea82704,50239626,0,0x0,8
tick,0x7ff86ea82704,50242162,0,0x0,8
tick,0x7ff86ea82704,50243754,0,0x0,8
tick,0x7ff86ea82704,50245751,0,0x0,8
tick,0x7ff86ea82704,50247650,0,0x0,8
tick,0x7ff86ea82704,50249609,0,0x0,8
tick,0x7ff86ea82704,50251522,0,0x0,8
tick,0x7ff86ea82704,50253703,0,0x0,8
tick,0x7ff86ea82704,50255561,0,0x0,8
tick,0x7ff86ea82704,50257637,0,0x0,8
tick,0x7ff86ea82704,50259777,0,0x0,8
tick,0x7ff86ea82704,50261703,0,0x0,8
tick,0x7ff86ea82704,50263666,0,0x0,8
tick,0x7ff86ea82704,50265528,0,0x0,8
tick,0x7ff86ea82704,50267577,0,0x0,8
tick,0x7ff86ea82704,50269540,0,0x0,8
tick,0x7ff86ea82704,50271521,0,0x0,8
tick,0x7ff86ea82704,50273647,0,0x0,8
tick,0x7ff86ea82704,50275612,0,0x0,8
tick,0x7ff86ea82704,50278037,0,0x0,8
tick,0x7ff86ea82704,50279645,0,0x0,8
tick,0x7ff86ea82704,50281872,0,0x0,8
tick,0x7ff86ea82704,50283544,0,0x0,8
tick,0x7ff86ea82704,50285703,0,0x0,8
tick,0x7ff86ea82704,50287589,0,0x0,8
tick,0x7ff86ea82704,50289717,0,0x0,8
tick,0x7ff86ea82704,50292923,0,0x0,8
tick,0x7ff86ea82704,50294231,0,0x0,8
tick,0x7ff86ea82704,50295754,0,0x0,8
tick,0x7ff86ea82704,50297468,0,0x0,8
tick,0x7ff86ea82704,50299558,0,0x0,8
tick,0x7ff86ea82704,50301767,0,0x0,8
tick,0x7ff86ea82704,50303577,0,0x0,8
tick,0x7ff86ea82704,50305458,0,0x0,8
tick,0x7ff86ea82704,50307760,0,0x0,8
tick,0x7ff86ea82704,50309555,0,0x0,8
tick,0x7ff86ea82704,50311780,0,0x0,8
tick,0x7ff86ea82704,50313424,0,0x0,8
tick,0x7ff86ea82704,50315470,0,0x0,8
tick,0x7ff86ea82704,50317525,0,0x0,8
tick,0x7ff86ea82704,50319424,0,0x0,8
tick,0x7ff86ea82704,50321678,0,0x0,8
tick,0x7ff86ea82704,50323749,0,0x0,8
tick,0x7ff86ea82704,50325683,0,0x0,8
tick,0x7ff86ea82704,50327481,0,0x0,8
tick,0x7ff86ea82704,50329587,0,0x0,8
tick,0x7ff86ea82704,50331395,0,0x0,8
tick,0x7ff86ea82704,50333455,0,0x0,8
tick,0x7ff86ea82704,50335386,0,0x0,8
tick,0x7ff86ea82704,50337500,0,0x0,8
tick,0x7ff86ea82704,50339457,0,0x0,8
tick,0x7ff86ea82704,50341352,0,0x0,8
tick,0x7ff86ea82704,50343613,0,0x0,8
tick,0x7ff86ea82704,50345741,0,0x0,8
tick,0x7ff86ea82704,50347657,0,0x0,8
tick,0x7ff86ea82704,50349413,0,0x0,8
tick,0x7ff86ea82704,50351315,0,0x0,8
tick,0x7ff86ea82704,50353348,0,0x0,8
tick,0x7ff86ea82704,50355532,0,0x0,8
tick,0x7ff86ea82704,50357337,0,0x0,8
tick,0x7ff86ea82704,50359459,0,0x0,8
tick,0x7ff86ea82704,50361470,0,0x0,8
tick,0x7ff86ea82704,50363548,0,0x0,8
tick,0x7ff86ea82704,50365301,0,0x0,8
tick,0x7ff86ea82704,50367253,0,0x0,8
tick,0x7ff86ea82704,50369465,0,0x0,8
tick,0x7ff86ea82704,50371504,0,0x0,8
tick,0x7ff86ea82704,50373389,0,0x0,8
tick,0x7ff86ea82704,50375286,0,0x0,8
tick,0x7ff86ea82704,50377510,0,0x0,8
tick,0x7ff86ea82704,50379317,0,0x0,8
tick,0x7ff86ea82704,50381340,0,0x0,8
tick,0x7ff86ea82704,50383327,0,0x0,8
tick,0x7ff86ea82704,50385292,0,0x0,8
tick,0x7ff86ea82704,50387187,0,0x0,8
tick,0x7ff86ea82704,50389308,0,0x0,8
tick,0x7ff86ea82704,50391127,0,0x0,8
tick,0x7ff86ea82704,50393225,0,0x0,8
tick,0x7ff86ea82704,50395444,0,0x0,8
tick,0x7ff86ea82704,50397311,0,0x0,8
tick,0x7ff86ea82704,50399225,0,0x0,8
tick,0x7ff86ea82704,50401415,0,0x0,8
tick,0x7ff86ea82704,50403219,0,0x0,8
tick,0x7ff86ea82704,50405169,0,0x0,8
tick,0x7ff86ea82704,50407181,0,0x0,8
tick,0x7ff86ea82704,50409211,0,0x0,8
tick,0x7ff86ea82704,50411127,0,0x0,8
tick,0x7ff86ea82704,50413306,0,0x0,8
tick,0x7ff86ea82704,50415160,0,0x0,8
tick,0x7ff86ea82704,50417155,0,0x0,8
tick,0x7ff86ea82704,50419198,0,0x0,8
tick,0x7ff86ea82704,50421372,0,0x0,8
tick,0x7ff86ea82704,50423237,0,0x0,8
tick,0x7ff86ea82704,50425812,0,0x0,8
tick,0x7ff86ea82704,50427225,0,0x0,8
tick,0x7ff86ea82704,50429481,0,0x0,8
tick,0x7ff86ea82704,50431435,0,0x0,8
tick,0x7ff86ea82704,50433788,0,0x0,8
tick,0x7ff86ea82704,50435179,0,0x0,8
tick,0x7ff86ea82704,50437166,0,0x0,8
tick,0x7ff86ea82704,50439055,0,0x0,8
tick,0x7ff86ea82704,50441998,0,0x0,8
tick,0x7ff86ea82704,50444454,0,0x0,8
tick,0x7ff86ea82704,50446297,0,0x0,8
tick,0x7ff86ea82704,50448076,0,0x0,8
tick,0x7ff86ea82704,50450042,0,0x0,8
tick,0x7ff86ea82704,50452066,0,0x0,8
tick,0x7ff86ea82704,50454120,0,0x0,8
tick,0x7ff86ea82704,50456095,0,0x0,8
tick,0x7ff86ea82704,50458099,0,0x0,8
tick,0x7ff86ea82704,50460379,0,0x0,8
tick,0x7ff86ea82704,50462156,0,0x0,8
tick,0x7ff86ea82704,50463964,0,0x0,8
tick,0x7ff86ea82704,50466268,0,0x0,8
tick,0x7ff86ea82704,50468053,0,0x0,8
tick,0x7ff86ea82704,50470135,0,0x0,8
tick,0x7ff86ea82704,50471889,0,0x0,8
tick,0x7ff86ea82704,50474254,0,0x0,8
tick,0x7ff86ea82704,50475935,0,0x0,8
tick,0x7ff86ea82704,50478103,0,0x0,8
tick,0x7ff86ea82704,50479970,0,0x0,8
tick,0x7ff86ea82704,50482347,0,0x0,8
tick,0x7ff86ea82704,50484014,0,0x0,8
tick,0x7ff86ea82704,50485942,0,0x0,8
tick,0x7ff86ea82704,50487872,0,0x0,8
tick,0x7ff86ea82704,50489961,0,0x0,8
tick,0x7ff86ea82704,50492166,0,0x0,8
tick,0x7ff86ea82704,50494047,0,0x0,8
tick,0x7ff86ea82704,50496123,0,0x0,8
tick,0x7ff86ea82704,50498012,0,0x0,8
tick,0x7ff86ea82704,50500610,0,0x0,8
tick,0x7ff86ea82704,50501863,0,0x0,8
tick,0x7ff86ea82704,50503944,0,0x0,8
tick,0x7ff86ea82704,50505859,0,0x0,8
tick,0x7ff86ea82704,50508172,0,0x0,8
tick,0x7ff86ea82704,50509821,0,0x0,8
tick,0x7ff86ea82704,50512000,0,0x0,8
tick,0x7ff86ea82704,50513913,0,0x0,8
tick,0x7ff86ea82704,50516075,0,0x0,8
tick,0x7ff86ea82704,50517835,0,0x0,8
tick,0x7ff86ea82704,50519914,0,0x0,8
tick,0x7ff86ea82704,50521980,0,0x0,8
tick,0x7ff86ea82704,50523921,0,0x0,8
tick,0x7ff86ea82704,50526227,0,0x0,8
tick,0x7ff86ea82704,50527840,0,0x0,8
tick,0x7ff86ea82704,50531211,0,0x0,8
tick,0x7ff86ea82704,50532954,0,0x0,8
tick,0x7ff86ea82704,50535681,0,0x0,8
tick,0x7ff86ea82704,50536889,0,0x0,8
tick,0x7ff86ea82704,50538990,0,0x0,8
tick,0x7ff86ea82704,50540966,0,0x0,8
tick,0x7ff86ea82704,50543025,0,0x0,8
tick,0x7ff86ea82704,50545233,0,0x0,8
tick,0x7ff86ea82704,50547081,0,0x0,8
tick,0x7ff86ea82704,50549379,0,0x0,8
tick,0x7ff86ea82704,50550930,0,0x0,8
tick,0x7ff86ea82704,50553544,0,0x0,8
tick,0x7ff86ea82704,50554766,0,0x0,8
tick,0x7ff86ea82704,50557156,0,0x0,8
tick,0x7ff86ea82704,50559309,0,0x0,8
tick,0x7ff86ea82704,50561131,0,0x0,8
tick,0x7ff86ea82704,50562776,0,0x0,8
tick,0x7ff86ea82704,50564908,0,0x0,8
tick,0x7ff86ea82704,50566743,0,0x0,8
tick,0x7ff86ea82704,50569027,0,0x0,8
tick,0x7ff86ea82704,50570724,0,0x0,8
tick,0x7ff86ea82704,50572816,0,0x0,8
tick,0x7ff86ea82704,50575033,0,0x0,8
tick,0x7ff86ea82704,50577195,0,0x0,8
tick,0x7ff86ea82704,50578769,0,0x0,8
tick,0x7ff86ea82704,50580705,0,0x0,8
tick,0x7ff86ea82704,50582852,0,0x0,8
tick,0x7ff86ea82704,50584808,0,0x0,8
tick,0x7ff86ea82704,50586620,0,0x0,8
tick,0x7ff86ea82704,50588837,0,0x0,8
tick,0x7ff86ea82704,50590577,0,0x0,8
tick,0x7ff86ea82704,50592925,0,0x0,8
tick,0x7ff86ea82704,50594792,0,0x0,8
tick,0x7ff86ea82704,50596816,0,0x0,8
tick,0x7ff86ea82704,50598768,0,0x0,8
tick,0x7ff86ea82704,50601240,0,0x0,8
tick,0x7ff86ea82704,50602790,0,0x0,8
tick,0x7ff86ea82704,50604706,0,0x0,8
tick,0x7ff86ea82704,50606623,0,0x0,8
tick,0x7ff86ea82704,50608864,0,0x0,8
tick,0x7ff86ea82704,50610622,0,0x0,8
tick,0x7ff86ea82704,50612713,0,0x0,8
tick,0x7ff86ea82704,50614986,0,0x0,8
tick,0x7ff86ea82704,50616723,0,0x0,8
tick,0x7ff86ea82704,50618581,0,0x0,8
tick,0x7ff86ea82704,50620782,0,0x0,8
tick,0x7ff86ea82704,50622575,0,0x0,8
tick,0x7ff86ea82704,50624690,0,0x0,8
tick,0x7ff86ea82704,50626708,0,0x0,8
tick,0x7ff86ea82704,50628626,0,0x0,8
tick,0x7ff86ea82704,50630795,0,0x0,8
tick,0x7ff86ea82704,50632610,0,0x0,8
tick,0x7ff86ea82704,50634670,0,0x0,8
tick,0x7ff86ea82704,50636625,0,0x0,8
tick,0x7ff86ea82704,50638683,0,0x0,8
tick,0x7ff86ea82704,50640515,0,0x0,8
tick,0x7ff86ea82704,50642653,0,0x0,8
tick,0x7ff86ea82704,50644837,0,0x0,8
tick,0x7ff86ea82704,50646425,0,0x0,8
tick,0x7ff86ea82704,50648512,0,0x0,8
tick,0x7ff86ea82704,50650453,0,0x0,8
tick,0x7ff86ea82704,50652801,0,0x0,8
tick,0x7ff86ea82704,50654447,0,0x0,8
tick,0x7ff86ea82704,50656644,0,0x0,8
tick,0x7ff86ea82704,50658782,0,0x0,8
tick,0x7ff86ea82704,50660479,0,0x0,8
tick,0x7ff86ea82704,50662566,0,0x0,8
tick,0x7ff86ea82704,50664501,0,0x0,8
tick,0x7ff86ea82704,50666477,0,0x0,8
tick,0x7ff86ea82704,50668543,0,0x0,8
tick,0x7ff86ea82704,50670452,0,0x0,8
tick,0x7ff86ea82704,50672560,0,0x0,8
tick,0x7ff86ea82704,50674521,0,0x0,8
tick,0x7ff86ea82704,50676547,0,0x0,8
tick,0x7ff86ea82704,50678483,0,0x0,8
tick,0x7ff86ea82704,50680374,0,0x0,8
tick,0x7ff86ea82704,50682477,0,0x0,8
tick,0x7ff86ea82704,50684700,0,0x0,8
tick,0x7ff86ea82704,50686724,0,0x0,8
tick,0x7ff86ea82704,50688781,0,0x0,8
tick,0x7ff86ea82704,50690903,0,0x0,8
tick,0x7ff86ea82704,50692407,0,0x0,8
tick,0x7ff86ea82704,50694632,0,0x0,8
tick,0x7ff86ea82704,50696606,0,0x0,8
tick,0x7ff86ea82704,50698621,0,0x0,8
tick,0x7ff86ea82704,50700440,0,0x0,8
tick,0x7ff86ea82704,50702452,0,0x0,8
tick,0x7ff86ea82704,50704414,0,0x0,8
tick,0x7ff86ea82704,50706437,0,0x0,8
tick,0x7ff86ea82704,50709524,0,0x0,8
tick,0x7ff86ea82704,50711518,0,0x0,8
tick,0x7ff86ea82704,50713492,0,0x0,8
tick,0x7ff86ea82704,50715434,0,0x0,8
tick,0x7ff86ea82704,50717379,0,0x0,8
tick,0x7ff86ea82704,50719314,0,0x0,8
tick,0x7ff86ea82704,50721383,0,0x0,8
tick,0x7ff86ea82704,50723628,0,0x0,8
tick,0x7ff86ea82704,50725511,0,0x0,8
tick,0x7ff86ea82704,50727471,0,0x0,8
tick,0x7ff86ea82704,50729457,0,0x0,8
tick,0x7ff86ea82704,50731374,0,0x0,8
tick,0x7ff86ea82704,50733351,0,0x0,8
tick,0x7ff86ea82704,50735289,0,0x0,8
tick,0x7ff86ea82704,50737315,0,0x0,8
tick,0x7ff86ea82704,50739359,0,0x0,8
tick,0x7ff86ea82704,50741295,0,0x0,8
tick,0x7ff86ea82704,50743913,0,0x0,8
tick,0x7ff86ea82704,50745388,0,0x0,8
tick,0x7ff86ea82704,50747391,0,0x0,8
tick,0x7ff86ea82704,50749279,0,0x0,8
tick,0x7ff86ea82704,50751435,0,0x0,8
tick,0x7ff86ea82704,50753173,0,0x0,8
tick,0x7ff86ea82704,50755610,0,0x0,8
tick,0x7ff86ea82704,50757262,0,0x0,8
tick,0x7ff86ea82704,50759286,0,0x0,8
tick,0x7ff86ea82704,50761418,0,0x0,8
tick,0x7ff86ea82704,50763363,0,0x0,8
tick,0x7ff86ea82704,50765333,0,0x0,8
tick,0x7ff86ea82704,50767382,0,0x0,8
tick,0x7ff86ea82704,50769735,0,0x0,8
tick,0x7ff86ea82704,50771207,0,0x0,8
tick,0x7ff86ea82704,50773340,0,0x0,8
tick,0x7ff86ea82704,50775388,0,0x0,8
tick,0x7ff86ea82704,50777171,0,0x0,8
tick,0x7ff86ea82704,50779217,0,0x0,8
tick,0x7ff86ea82704,50781249,0,0x0,8
tick,0x7ff86ea82704,50783316,0,0x0,8
tick,0x7ff86ea82704,50785299,0,0x0,8
tick,0x7ff86ea82704,50787162,0,0x0,8
tick,0x7ff86ea82704,50789179,0,0x0,8
tick,0x7ff86ea82704,50791218,0,0x0,8
tick,0x7ff86ea82704,50793295,0,0x0,8
tick,0x7ff86ea82704,50795190,0,0x0,8
tick,0x7ff86ea82704,50797150,0,0x0,8
tick,0x7ff86ea82704,50799665,0,0x0,8
tick,0x7ff86ea82704,50801137,0,0x0,8
tick,0x7ff86ea82704,50803237,0,0x0,8
tick,0x7ff86ea82704,50805121,0,0x0,8
tick,0x7ff86ea82704,50807302,0,0x0,8
tick,0x7ff86ea82704,50809175,0,0x0,8
tick,0x7ff86ea82704,50811077,0,0x0,8
tick,0x7ff86ea82704,50813251,0,0x0,8
tick,0x7ff86ea82704,50815037,0,0x0,8
tick,0x7ff86ea82704,50817103,0,0x0,8
tick,0x7ff86ea82704,50819132,0,0x0,8
tick,0x7ff86ea82704,50821092,0,0x0,8
tick,0x7ff86ea82704,50823097,0,0x0,8
tick,0x7ff86ea82704,50825240,0,0x0,8
tick,0x7ff86ea82704,50827114,0,0x0,8
tick,0x7ff86ea82704,50829019,0,0x0,8
tick,0x7ff86ea82704,50831089,0,0x0,8
tick,0x7ff86ea82704,50832995,0,0x0,8
tick,0x7ff86ea82704,50835098,0,0x0,8
tick,0x7ff86ea82704,50836961,0,0x0,8
tick,0x7ff86ea82704,50839349,0,0x0,8
tick,0x7ff86ea82704,50841103,0,0x0,8
tick,0x7ff86ea82704,50843359,0,0x0,8
tick,0x7ff86ea82704,50844992,0,0x0,8
tick,0x7ff86ea82704,50847185,0,0x0,8
tick,0x7ff86ea82704,50848995,0,0x0,8
tick,0x7ff86ea82704,50851251,0,0x0,8
tick,0x7ff86ea82704,50853035,0,0x0,8
tick,0x7ff86ea82704,50855111,0,0x0,8
tick,0x7ff86ea82704,50857146,0,0x0,8
tick,0x7ff86ea82704,50859091,0,0x0,8
tick,0x7ff86ea82704,50860882,0,0x0,8
tick,0x7ff86ea82704,50863057,0,0x0,8
tick,0x7ff86ea82704,50864915,0,0x0,8
tick,0x7ff86ea82704,50867139,0,0x0,8
tick,0x7ff86ea82704,50868955,0,0x0,8
tick,0x7ff86ea82704,50871042,0,0x0,8
tick,0x7ff86ea82704,50873009,0,0x0,8
tick,0x7ff86ea82704,50874944,0,0x0,8
tick,0x7ff86ea82704,50876936,0,0x0,8
tick,0x7ff86ea82704,50878984,0,0x0,8
tick,0x7ff86ea82704,50881015,0,0x0,8
tick,0x7ff86ea82704,50882910,0,0x0,8
tick,0x7ff86ea82704,50884911,0,0x0,8
tick,0x7ff86ea82704,50886932,0,0x0,8
tick,0x7ff86ea82704,50889007,0,0x0,8
tick,0x7ff86ea82704,50890872,0,0x0,8
tick,0x7ff86ea82704,50892967,0,0x0,8
tick,0x7ff86ea82704,50894875,0,0x0,8
tick,0x7ff86ea82704,50896892,0,0x0,8
tick,0x7ff86ea82704,50898916,0,0x0,8
tick,0x7ff86ea82704,50900920,0,0x0,8
tick,0x7ff86ea82704,50902779,0,0x0,8
tick,0x7ff86ea82704,50904979,0,0x0,8
tick,0x7ff86ea82704,50906843,0,0x0,8
tick,0x7ff86ea82704,50909071,0,0x0,8
tick,0x7ff86ea82704,50910781,0,0x0,8
tick,0x7ff86ea82704,50912916,0,0x0,8
tick,0x7ff86ea82704,50914757,0,0x0,8
tick,0x7ff86ea82704,50916991,0,0x0,8
tick,0x7ff86ea82704,50918807,0,0x0,8
tick,0x7ff86ea82704,50920831,0,0x0,8
tick,0x7ff86ea82704,50922778,0,0x0,8
tick,0x7ff86ea82704,50924883,0,0x0,8
tick,0x7ff86ea82704,50926799,0,0x0,8
tick,0x7ff86ea82704,50928775,0,0x0,8
tick,0x7ff86ea82704,50930767,0,0x0,8
tick,0x7ff86ea82704,50932817,0,0x0,8
tick,0x7ff86ea82704,50934742,0,0x0,8
tick,0x7ff86ea82704,50937151,0,0x0,8
tick,0x7ff86ea82704,50938771,0,0x0,8
tick,0x7ff86ea82704,50940819,0,0x0,8
tick,0x7ff86ea82704,50942877,0,0x0,8
tick,0x7ff86ea82704,50944813,0,0x0,8
tick,0x7ff86ea82704,50946861,0,0x0,8
tick,0x7ff86ea82704,50948695,0,0x0,8
tick,0x7ff86ea82704,50950792,0,0x0,8
tick,0x7ff86ea82704,50952671,0,0x0,8
tick,0x7ff86ea82704,50954733,0,0x0,8
tick,0x7ff86ea82704,50956907,0,0x0,8
tick,0x7ff86ea82704,50959119,0,0x0,8
tick,0x7ff86ea82704,50961010,0,0x0,8
tick,0x7ff86ea82704,50962945,0,0x0,8
tick,0x7ff86ea82704,50964677,0,0x0,8
tick,0x7ff86ea82704,50966709,0,0x0,8
tick,0x7ff86ea82704,50968686,0,0x0,8
tick,0x7ff86ea82704,50970753,0,0x0,8
tick,0x7ff86ea82704,50972688,0,0x0,8
tick,0x7ff86ea82704,50974756,0,0x0,8
tick,0x7ff86ea82704,50976634,0,0x0,8
tick,0x7ff86ea82704,50978777,0,0x0,8
tick,0x7ff86ea82704,50980618,0,0x0,8
tick,0x7ff86ea82704,50982826,0,0x0,8
tick,0x7ff86ea82704,50984644,0,0x0,8
tick,0x7ff86ea82704,50986672,0,0x0,8
tick,0x7ff86ea82704,50988586,0,0x0,8
tick,0x7ff86ea82704,50990691,0,0x0,8
tick,0x7ff86ea82704,50992637,0,0x0,8
tick,0x7ff86ea82704,50994626,0,0x0,8
tick,0x7ff86ea82704,50996579,0,0x0,8
tick,0x7ff86ea82704,50998667,0,0x0,8
tick,0x7ff86ea82704,51000596,0,0x0,8
tick,0x7ff86ea82704,51002773,0,0x0,8
tick,0x7ff86ea82704,51004548,0,0x0,8
tick,0x7ff86ea82704,51006920,0,0x0,8
tick,0x7ff86ea82704,51008538,0,0x0,8
tick,0x7ff86ea82704,51010789,0,0x0,8
tick,0x7ff86ea82704,51012522,0,0x0,8
tick,0x7ff86ea82704,51014613,0,0x0,8
tick,0x7ff86ea82704,51016626,0,0x0,8
tick,0x7ff86ea82704,51018569,0,0x0,8
tick,0x7ff86ea82704,51020529,0,0x0,8
tick,0x7ff86ea82704,51022572,0,0x0,8
tick,0x7ff86ea82704,51024543,0,0x0,8
tick,0x7ff86ea82704,51026649,0,0x0,8
tick,0x7ff86ea82704,51028512,0,0x0,8
tick,0x7ff86ea82704,51030871,0,0x0,8
tick,0x7ff86ea82704,51032596,0,0x0,8
tick,0x7ff86ea82704,51034687,0,0x0,8
tick,0x7ff86ea82704,51036396,0,0x0,8
tick,0x7ff86ea82704,51038850,0,0x0,8
tick,0x7ff86ea82704,51040488,0,0x0,8
tick,0x7ff86ea82704,51042775,0,0x0,8
tick,0x7ff86ea82704,51044436,0,0x0,8
tick,0x7ff86ea82704,51046536,0,0x0,8
tick,0x7ff86ea82704,51048407,0,0x0,8
tick,0x7ff86ea82704,51050392,0,0x0,8
tick,0x7ff86ea82704,51052460,0,0x0,8
tick,0x7ff86ea82704,51054436,0,0x0,8
tick,0x7ff86ea82704,51056555,0,0x0,8
tick,0x7ff86ea82704,51058939,0,0x0,8
tick,0x7ff86ea82704,51060519,0,0x0,8
tick,0x7ff86ea82704,51062533,0,0x0,8
tick,0x7ff86ea82704,51064887,0,0x0,8
tick,0x7ff86ea82704,51066424,0,0x0,8
tick,0x7ff86ea82704,51068472,0,0x0,8
tick,0x7ff86ea82704,51070468,0,0x0,8
tick,0x7ff86ea82704,51072608,0,0x0,8
tick,0x7ff86ea82704,51074433,0,0x0,8
tick,0x7ff86ea82704,51076530,0,0x0,8
tick,0x7ff86ea82704,51078362,0,0x0,8
tick,0x7ff86ea82704,51080397,0,0x0,8
tick,0x7ff86ea82704,51082337,0,0x0,8
tick,0x7ff86ea82704,51084406,0,0x0,8
tick,0x7ff86ea82704,51086572,0,0x0,8
tick,0x7ff86ea82704,51088610,0,0x0,8
tick,0x7ff86ea82704,51090369,0,0x0,8
tick,0x7ff86ea82704,51092501,0,0x0,8
tick,0x7ff86ea82704,51094808,0,0x0,8
tick,0x7ff86ea82704,51096348,0,0x0,8
tick,0x7ff86ea82704,51098363,0,0x0,8
tick,0x7ff86ea82704,51100381,0,0x0,8
tick,0x7ff86ea82704,51102338,0,0x0,8
tick,0x7ff86ea82704,51104552,0,0x0,8
tick,0x7ff86ea82704,51106432,0,0x0,8
tick,0x7ff86ea82704,51108570,0,0x0,8
tick,0x7ff86ea82704,51110427,0,0x0,8
tick,0x7ff86ea82704,51112384,0,0x0,8
tick,0x7ff86ea82704,51114455,0,0x0,8
tick,0x7ff86ea82704,51116266,0,0x0,8
tick,0x7ff86ea82704,51118259,0,0x0,8
tick,0x7ff86ea82704,51120361,0,0x0,8
tick,0x7ff86ea82704,51122227,0,0x0,8
tick,0x7ff86ea82704,51124917,0,0x0,8
tick,0x7ff86ea82704,51126241,0,0x0,8
tick,0x7ff86ea82704,51128474,0,0x0,8
tick,0x7ff86ea82704,51130131,0,0x0,8
tick,0x7ff86ea82704,51132223,0,0x0,8
tick,0x7ff86ea82704,51134210,0,0x0,8
tick,0x7ff86ea82704,51136217,0,0x0,8
tick,0x7ff86ea82704,51138169,0,0x0,8
tick,0x7ff86ea82704,51140137,0,0x0,8
tick,0x7ff86ea82704,51142177,0,0x0,8
tick,0x7ff86ea82704,51144099,0,0x0,8
tick,0x7ff86ea82704,51146225,0,0x0,8
tick,0x7ff86ea82704,51148332,0,0x0,8
tick,0x7ff86ea82704,51150179,0,0x0,8
tick,0x7ff86ea82704,51152104,0,0x0,8
tick,0x7ff86ea82704,51154181,0,0x0,8
tick,0x7ff86ea82704,51156157,0,0x0,8
tick,0x7ff86ea82704,51161081,0,0x0,8
tick,0x7ff86ea82704,51163472,0,0x0,8
tick,0x7ff86ea82704,51165496,0,0x0,8
tick,0x7ff86ea82704,51167371,0,0x0,8
tick,0x7ff86ea82704,51169476,0,0x0,8
tick,0x7ff86ea82704,51171715,0,0x0,8
tick,0x7ff86ea82704,51173354,0,0x0,8
tick,0x7ff86ea82704,51175359,0,0x0,8
tick,0x7ff86ea82704,51177290,0,0x0,8
tick,0x7ff86ea82704,51179351,0,0x0,8
tick,0x7ff86ea82704,51181279,0,0x0,8
tick,0x7ff86ea82704,51183365,0,0x0,8
tick,0x7ff86ea82704,51185193,0,0x0,8
tick,0x7ff86ea82704,51187287,0,0x0,8
tick,0x7ff86ea82704,51189180,0,0x0,8
tick,0x7ff86ea82704,51191424,0,0x0,8
tick,0x7ff86ea82704,51193155,0,0x0,8
tick,0x7ff86ea82704,51195301,0,0x0,8
tick,0x7ff86ea82704,51197435,0,0x0,8
tick,0x7ff86ea82704,51199094,0,0x0,8
tick,0x7ff86ea82704,51201292,0,0x0,8
tick,0x7ff86ea82704,51203123,0,0x0,8
tick,0x7ff86ea82704,51205245,0,0x0,8
tick,0x7ff86ea82704,51207149,0,0x0,8
tick,0x7ff86ea82704,51209283,0,0x0,8
tick,0x7ff86ea82704,51211143,0,0x0,8
tick,0x7ff86ea82704,51213133,0,0x0,8
tick,0x7ff86ea82704,51215151,0,0x0,8
tick,0x7ff86ea82704,51217172,0,0x0,8
tick,0x7ff86ea82704,51218978,0,0x0,8
tick,0x7ff86ea82704,51221078,0,0x0,8
tick,0x7ff86ea82704,51223029,0,0x0,8
tick,0x7ff86ea82704,51225266,0,0x0,8
tick,0x7ff86ea82704,51227065,0,0x0,8
tick,0x7ff86ea82704,51229232,0,0x0,8
tick,0x7ff86ea82704,51231055,0,0x0,8
tick,0x7ff86ea82704,51233210,0,0x0,8
tick,0x7ff86ea82704,51235223,0,0x0,8
tick,0x7ff86ea82704,51237012,0,0x0,8
tick,0x7ff86ea82704,51239097,0,0x0,8
tick,0x7ff86ea82704,51241056,0,0x0,8
tick,0x7ff86ea82704,51243165,0,0x0,8
tick,0x7ff86ea82704,51244996,0,0x0,8
tick,0x7ff86ea82704,51247149,0,0x0,8
tick,0x7ff86ea82704,51248898,0,0x0,8
tick,0x7ff86ea82704,51251064,0,0x0,8
tick,0x7ff86ea82704,51253048,0,0x0,8
tick,0x7ff86ea82704,51255615,0,0x0,8
tick,0x7ff86ea82704,51257000,0,0x0,8
tick,0x7ff86ea82704,51259050,0,0x0,8
tick,0x7ff86ea82704,51260984,0,0x0,8
tick,0x7ff86ea82704,51262950,0,0x0,8
tick,0x7ff86ea82704,51265175,0,0x0,8
tick,0x7ff86ea82704,51267216,0,0x0,8
tick,0x7ff86ea82704,51269044,0,0x0,8
tick,0x7ff86ea82704,51271057,0,0x0,8
tick,0x7ff86ea82704,51273018,0,0x0,8
tick,0x7ff86ea82704,51274921,0,0x0,8
tick,0x7ff86ea82704,51277126,0,0x0,8
tick,0x7ff86ea82704,51278974,0,0x0,8
tick,0x7ff86ea82704,51281698,0,0x0,8
tick,0x7ff86ea82704,51283793,0,0x0,8
tick,0x7ff86ea82704,51285738,0,0x0,8
tick,0x7ff86ea82704,51287672,0,0x0,8
tick,0x7ff86ea82704,51289676,0,0x0,8
tick,0x7ff86ea82704,51291708,0,0x0,8
tick,0x7ff86ea82704,51293722,0,0x0,8
tick,0x7ff86ea82704,51295846,0,0x0,8
tick,0x7ff86ea82704,51297754,0,0x0,8
tick,0x7ff86ea82704,51300110,0,0x0,8
tick,0x7ff86ea82704,51301758,0,0x0,8
tick,0x7ff86ea82704,51303765,0,0x0,8
tick,0x7ff86ea82704,51306275,0,0x0,8
tick,0x7ff86ea82704,51307694,0,0x0,8
tick,0x7ff86ea82704,51309851,0,0x0,8
tick,0x7ff86ea82704,51311644,0,0x0,8
tick,0x7ff86ea82704,51313791,0,0x0,8
tick,0x7ff86ea82704,51315733,0,0x0,8
tick,0x7ff86ea82704,51317811,0,0x0,8
tick,0x7ff86ea82704,51319990,0,0x0,8
tick,0x7ff86ea82704,51321743,0,0x0,8
tick,0x7ff86ea82704,51323759,0,0x0,8
tick,0x7ff86ea82704,51325703,0,0x0,8
tick,0x7ff86ea82704,51327688,0,0x0,8
tick,0x7ff86ea82704,51329728,0,0x0,8
tick,0x7ff86ea82704,51331694,0,0x0,8
tick,0x7ff86ea82704,51333876,0,0x0,8
tick,0x7ff86ea82704,51335606,0,0x0,8
tick,0x7ff86ea82704,51337733,0,0x0,8
tick,0x7ff86ea82704,51339738,0,0x0,8
tick,0x7ff86ea82704,51341684,0,0x0,8
tick,0x7ff86ea82704,51343619,0,0x0,8
tick,0x7ff86ea82704,51345719,0,0x0,8
tick,0x7ff86ea82704,51347800,0,0x0,8
tick,0x7ff86ea82704,51349596,0,0x0,8
tick,0x7ff86ea82704,51351558,0,0x0,8
tick,0x7ff86ea82704,51353833,0,0x0,8
tick,0x7ff86ea82704,51355679,0,0x0,8
tick,0x7ff86ea82704,51357674,0,0x0,8
tick,0x7ff86ea82704,51359680,0,0x0,8
tick,0x7ff86ea82704,51361663,0,0x0,8
tick,0x7ff86ea82704,51363582,0,0x0,8
tick,0x7ff86ea82704,51365580,0,0x0,8
tick,0x7ff86ea82704,51367538,0,0x0,8
tick,0x7ff86ea82704,51369653,0,0x0,8
tick,0x7ff86ea82704,51371534,0,0x0,8
tick,0x7ff86ea82704,51373570,0,0x0,8
tick,0x7ff86ea82704,51375500,0,0x0,8
tick,0x7ff86ea82704,51377559,0,0x0,8
tick,0x7ff86ea82704,51379555,0,0x0,8
tick,0x7ff86ea82704,51381473,0,0x0,8
tick,0x7ff86ea82704,51383448,0,0x0,8
tick,0x7ff86ea82704,51385676,0,0x0,8
tick,0x7ff86ea82704,51387463,0,0x0,8
tick,0x7ff86ea82704,51389448,0,0x0,8
tick,0x7ff86ea82704,51391458,0,0x0,8
tick,0x7ff86ea82704,51393427,0,0x0,8
tick,0x7ff86ea82704,51395468,0,0x0,8
tick,0x7ff86ea82704,51397404,0,0x0,8
tick,0x7ff86ea82704,51399489,0,0x0,8
tick,0x7ff86ea82704,51401475,0,0x0,8
tick,0x7ff86ea82704,51403449,0,0x0,8
tick,0x7ff86ea82704,51405494,0,0x0,8
tick,0x7ff86ea82704,51407486,0,0x0,8
tick,0x7ff86ea82704,51409446,0,0x0,8
tick,0x7ff86ea82704,51411421,0,0x0,8
tick,0x7ff86ea82704,51413666,0,0x0,8
tick,0x7ff86ea82704,51415375,0,0x0,8
tick,0x7ff86ea82704,51417452,0,0x0,8
tick,0x7ff86ea82704,51419401,0,0x0,8
tick,0x7ff86ea82704,51421436,0,0x0,8
tick,0x7ff86ea82704,51423338,0,0x0,8
tick,0x7ff86ea82704,51425477,0,0x0,8
tick,0x7ff86ea82704,51427347,0,0x0,8
tick,0x7ff86ea82704,51429503,0,0x0,8
tick,0x7ff86ea82704,51431338,0,0x0,8
tick,0x7ff86ea82704,51433374,0,0x0,8
tick,0x7ff86ea82704,51435406,0,0x0,8
tick,0x7ff86ea82704,51437573,0,0x0,8
tick,0x7ff86ea82704,51439400,0,0x0,8
tick,0x7ff86ea82704,51441355,0,0x0,8
tick,0x7ff86ea82704,51443456,0,0x0,8
tick,0x7ff86ea82704,51445331,0,0x0,8
tick,0x7ff86ea82704,51447686,0,0x0,8
tick,0x7ff86ea82704,51449341,0,0x0,8
tick,0x7ff86ea82704,51451584,0,0x0,8
tick,0x7ff86ea82704,51453281,0,0x0,8
tick,0x7ff86ea82704,51455333,0,0x0,8
tick,0x7ff86ea82704,51457546,0,0x0,8
tick,0x7ff86ea82704,51459446,0,0x0,8
tick,0x7ff86ea82704,51461298,0,0x0,8
tick,0x7ff86ea82704,51463415,0,0x0,8
tick,0x7ff86ea82704,51465283,0,0x0,8
tick,0x7ff86ea82704,51467326,0,0x0,8
tick,0x7ff86ea82704,51469280,0,0x0,8
tick,0x7ff86ea82704,51471270,0,0x0,8
tick,0x7ff86ea82704,51473566,0,0x0,8
tick,0x7ff86ea82704,51475475,0,0x0,8
tick,0x7ff86ea82704,51477346,0,0x0,8
tick,0x7ff86ea82704,51479333,0,0x0,8
tick,0x7ff86ea82704,51481359,0,0x0,8
tick,0x7ff86ea82704,51483307,0,0x0,8
tick,0x7ff86ea82704,51485318,0,0x0,8
tick,0x7ff86ea82704,51487221,0,0x0,8
tick,0x7ff86ea82704,51489366,0,0x0,8
tick,0x7ff86ea82704,51491188,0,0x0,8
tick,0x7ff86ea82704,51493313,0,0x0,8
tick,0x7ff86ea82704,51495244,0,0x0,8
tick,0x7ff86ea82704,51497503,0,0x0,8
tick,0x7ff86ea82704,51499232,0,0x0,8
tick,0x7ff86ea82704,51501283,0,0x0,8
tick,0x7ff86ea82704,51503197,0,0x0,8
tick,0x7ff86ea82704,51505333,0,0x0,8
tick,0x7ff86ea82704,51507225,0,0x0,8
tick,0x7ff86ea82704,51509195,0,0x0,8
tick,0x7ff86ea82704,51511219,0,0x0,8
tick,0x7ff86ea82704,51513290,0,0x0,8
tick,0x7ff86ea82704,51515090,0,0x0,8
tick,0x7ff86ea82704,51517116,0,0x0,8
tick,0x7ff86ea82704,51519153,0,0x0,8
tick,0x7ff86ea82704,51521168,0,0x0,8
tick,0x7ff86ea82704,51525348,0,0x0,8
tick,0x7ff86ea82704,51527428,0,0x0,8
tick,0x7ff86ea82704,51529468,0,0x0,8
tick,0x7ff86ea82704,51531488,0,0x0,8
tick,0x7ff86ea82704,51533459,0,0x0,8
tick,0x7ff86ea82704,51535514,0,0x0,8
tick,0x7ff86ea82704,51537424,0,0x0,8
tick,0x7ff86ea82704,51539631,0,0x0,8
tick,0x7ff86ea82704,51541301,0,0x0,8
tick,0x7ff86ea82704,51543377,0,0x0,8
tick,0x7ff86ea82704,51545338,0,0x0,8
tick,0x7ff86ea82704,51547741,0,0x0,8
tick,0x7ff86ea82704,51549374,0,0x0,8
tick,0x7ff86ea82704,51551320,0,0x0,8
tick,0x7ff86ea82704,51553149,0,0x0,8
tick,0x7ff86ea82704,51555219,0,0x0,8
tick,0x7ff86ea82704,51557192,0,0x0,8
tick,0x7ff86ea82704,51559450,0,0x0,8
tick,0x7ff86ea82704,51561285,0,0x0,8
tick,0x7ff86ea82704,51563385,0,0x0,8
tick,0x7ff86ea82704,51565272,0,0x0,8
tick,0x7ff86ea82704,51567551,0,0x0,8
tick,0x7ff86ea82704,51569386,0,0x0,8
tick,0x7ff86ea82704,51571276,0,0x0,8
tick,0x7ff86ea82704,51573456,0,0x0,8
tick,0x7ff86ea82704,51575349,0,0x0,8
tick,0x7ff86ea82704,51577089,0,0x0,8
tick,0x7ff86ea82704,51579331,0,0x0,8
tick,0x7ff86ea82704,51581178,0,0x0,8
tick,0x7ff86ea82704,51583251,0,0x0,8
tick,0x7ff86ea82704,51585197,0,0x0,8
tick,0x7ff86ea82704,51587222,0,0x0,8
tick,0x7ff86ea82704,51589068,0,0x0,8
tick,0x7ff86ea82704,51591440,0,0x0,8
tick,0x7ff86ea82704,51593429,0,0x0,8
tick,0x7ff86ea82704,51595270,0,0x0,8
tick,0x7ff86ea82704,51597166,0,0x0,8
tick,0x7ff86ea82704,51599113,0,0x0,8
tick,0x7ff86ea82704,51601252,0,0x0,8
tick,0x7ff86ea82704,51603064,0,0x0,8
tick,0x7ff86ea82704,51605490,0,0x0,8
tick,0x7ff86ea82704,51607253,0,0x0,8
tick,0x7ff86ea82704,51609152,0,0x0,8
tick,0x7ff86ea82704,51611435,0,0x0,8
tick,0x7ff86ea82704,51613075,0,0x0,8
tick,0x7ff86ea82704,51615714,0,0x0,8
tick,0x7ff86ea82704,51618038,0,0x0,8
tick,0x7ff86ea82704,51619943,0,0x0,8
tick,0x7ff86ea82704,51622233,0,0x0,8
tick,0x7ff86ea82704,51623987,0,0x0,8
tick,0x7ff86ea82704,51626008,0,0x0,8
tick,0x7ff86ea82704,51627847,0,0x0,8
tick,0x7ff86ea82704,51629912,0,0x0,8
tick,0x7ff86ea82704,51631893,0,0x0,8
tick,0x7ff86ea82704,51633835,0,0x0,8
tick,0x7ff86ea82704,51635837,0,0x0,8
tick,0x7ff86ea82704,51637824,0,0x0,8
tick,0x7ff86ea82704,51639800,0,0x0,8
tick,0x7ff86ea82704,51642007,0,0x0,8
tick,0x7ff86ea82704,51643832,0,0x0,8
tick,0x7ff86ea82704,51645868,0,0x0,8
tick,0x7ff86ea82704,51647896,0,0x0,8
tick,0x7ff86ea82704,51649828,0,0x0,8
tick,0x7ff86ea82704,51651840,0,0x0,8
tick,0x7ff86ea82704,51653826,0,0x0,8
tick,0x7ff86ea82704,51655719,0,0x0,8
tick,0x7ff86ea82704,51657919,0,0x0,8
tick,0x7ff86ea82704,51659725,0,0x0,8
tick,0x7ff86ea82704,51661817,0,0x0,8
tick,0x7ff86ea82704,51663765,0,0x0,8
tick,0x7ff86ea82704,51665767,0,0x0,8
tick,0x7ff86ea82704,51667785,0,0x0,8
tick,0x7ff86ea82704,51669903,0,0x0,8
tick,0x7ff86ea82704,51671914,0,0x0,8
tick,0x7ff86ea82704,51673766,0,0x0,8
tick,0x7ff86ea82704,51675809,0,0x0,8
tick,0x7ff86ea82704,51678199,0,0x0,8
tick,0x7ff86ea82704,51679745,0,0x0,8
tick,0x7ff86ea82704,51681790,0,0x0,8
tick,0x7ff86ea82704,51684036,0,0x0,8
tick,0x7ff86ea82704,51685947,0,0x0,8
tick,0x7ff86ea82704,51687789,0,0x0,8
tick,0x7ff86ea82704,51689937,0,0x0,8
tick,0x7ff86ea82704,51691717,0,0x0,8
tick,0x7ff86ea82704,51693922,0,0x0,8
tick,0x7ff86ea82704,51695717,0,0x0,8
tick,0x7ff86ea82704,51697768,0,0x0,8
tick,0x7ff86ea82704,51699692,0,0x0,8
tick,0x7ff86ea82704,51701759,0,0x0,8
tick,0x7ff86ea82704,51703740,0,0x0,8
tick,0x7ff86ea82704,51705765,0,0x0,8
tick,0x7ff86ea82704,51707680,0,0x0,8
tick,0x7ff86ea82704,51709737,0,0x0,8
tick,0x7ff86ea82704,51711695,0,0x0,8
tick,0x7ff86ea82704,51713711,0,0x0,8
tick,0x7ff86ea82704,51715677,0,0x0,8
tick,0x7ff86ea82704,51717661,0,0x0,8
tick,0x7ff86ea82704,51719656,0,0x0,8
tick,0x7ff86ea82704,51721744,0,0x0,8
tick,0x7ff86ea82704,51723599,0,0x0,8
tick,0x7ff86ea82704,51725670,0,0x0,8
tick,0x7ff86ea82704,51727623,0,0x0,8
tick,0x7ff86ea82704,51729589,0,0x0,8
tick,0x7ff86ea82704,51731638,0,0x0,8
tick,0x7ff86ea82704,51733722,0,0x0,8
tick,0x7ff86ea82704,51735649,0,0x0,8
tick,0x7ff86ea82704,51737670,0,0x0,8
tick,0x7ff86ea82704,51739557,0,0x0,8
tick,0x7ff86ea82704,51741609,0,0x0,8
tick,0x7ff86ea82704,51743530,0,0x0,8
tick,0x7ff86ea82704,51745573,0,0x0,8
tick,0x7ff86ea82704,51747754,0,0x0,8
tick,0x7ff86ea82704,51749610,0,0x0,8
tick,0x7ff86ea82704,51751581,0,0x0,8
tick,0x7ff86ea82704,51753682,0,0x0,8
tick,0x7ff86ea82704,51755591,0,0x0,8
tick,0x7ff86ea82704,51757562,0,0x0,8
tick,0x7ff86ea82704,51759669,0,0x0,8
tick,0x7ff86ea82704,51761508,0,0x0,8
tick,0x7ff86ea82704,51763597,0,0x0,8
tick,0x7ff86ea82704,51765471,0,0x0,8
tick,0x7ff86ea82704,51767457,0,0x0,8
tick,0x7ff86ea82704,51769613,0,0x0,8
tick,0x7ff86ea82704,51771396,0,0x0,8
tick,0x7ff86ea82704,51773523,0,0x0,8
tick,0x7ff86ea82704,51775489,0,0x0,8
tick,0x7ff86ea82704,51777532,0,0x0,8
tick,0x7ff86ea82704,51779443,0,0x0,8
tick,0x7ff86ea82704,51781427,0,0x0,8
tick,0x7ff86ea82704,51783606,0,0x0,8
tick,0x7ff86ea82704,51785401,0,0x0,8
tick,0x7ff86ea82704,51787473,0,0x0,8
tick,0x7ff86ea82704,51789459,0,0x0,8
tick,0x7ff86ea82704,51791471,0,0x0,8
tick,0x7ff86ea82704,51793444,0,0x0,8
tick,0x7ff86ea82704,51795500,0,0x0,8
tick,0x7ff86ea82704,51797373,0,0x0,8
tick,0x7ff86ea82704,51799637,0,0x0,8
tick,0x7ff86ea82704,51801474,0,0x0,8
tick,0x7ff86ea82704,51803469,0,0x0,8
tick,0x7ff86ea82704,51805418,0,0x0,8
tick,0x7ff86ea82704,51807416,0,0x0,8
tick,0x7ff86ea82704,51809658,0,0x0,8
tick,0x7ff86ea82704,51811398,0,0x0,8
tick,0x7ff86ea82704,51813390,0,0x0,8
tick,0x7ff86ea82704,51815424,0,0x0,8
tick,0x7ff86ea82704,51817366,0,0x0,8
tick,0x7ff86ea82704,51819261,0,0x0,8
tick,0x7ff86ea82704,51821340,0,0x0,8
tick,0x7ff86ea82704,51823321,0,0x0,8
tick,0x7ff86ea82704,51825433,0,0x0,8
tick,0x7ff86ea82704,51827300,0,0x0,8
tick,0x7ff86ea82704,51829260,0,0x0,8
tick,0x7ff86ea82704,51831394,0,0x0,8
tick,0x7ff86ea82704,51833314,0,0x0,8
tick,0x7ff86ea82704,51835357,0,0x0,8
tick,0x7ff86ea82704,51837268,0,0x0,8
tick,0x7ff86ea82704,51839401,0,0x0,8
tick,0x7ff86ea82704,51841306,0,0x0,8
tick,0x7ff86ea82704,51843340,0,0x0,8
tick,0x7ff86ea82704,51845243,0,0x0,8
tick,0x7ff86ea82704,51847334,0,0x0,8
tick,0x7ff86ea82704,51849192,0,0x0,8
tick,0x7ff86ea82704,51851355,0,0x0,8
tick,0x7ff86ea82704,51853341,0,0x0,8
tick,0x7ff86ea82704,51855408,0,0x0,8
tick,0x7ff86ea82704,51857227,0,0x0,8
tick,0x7ff86ea82704,51859425,0,0x0,8
tick,0x7ff86ea82704,51861450,0,0x0,8
tick,0x7ff86ea82704,51863295,0,0x0,8
tick,0x7ff86ea82704,51865533,0,0x0,8
tick,0x7ff86ea82704,51867468,0,0x0,8
tick,0x7ff86ea82704,51869916,0,0x0,8
tick,0x7ff86ea82704,51871310,0,0x0,8
tick,0x7ff86ea82704,51873722,0,0x0,8
tick,0x7ff86ea82704,51875502,0,0x0,8
tick,0x7ff86ea82704,51877261,0,0x0,8
tick,0x7ff86ea82704,51879282,0,0x0,8
tick,0x7ff86ea82704,51881311,0,0x0,8
tick,0x7ff86ea82704,51883213,0,0x0,8
tick,0x7ff86ea82704,51885234,0,0x0,8
tick,0x7ff86ea82704,51887340,0,0x0,8
tick,0x7ff86ea82704,51889496,0,0x0,8
tick,0x7ff86ea82704,51891470,0,0x0,8
tick,0x7ff86ea82704,51893529,0,0x0,8
tick,0x7ff86ea82704,51895330,0,0x0,8
tick,0x7ff86ea82704,51897246,0,0x0,8
tick,0x7ff86ea82704,51899200,0,0x0,8
tick,0x7ff86ea82704,51901265,0,0x0,8
tick,0x7ff86ea82704,51903329,0,0x0,8
tick,0x7ff86ea82704,51905158,0,0x0,8
tick,0x7ff86ea82704,51907216,0,0x0,8
tick,0x7ff86ea82704,51909229,0,0x0,8
tick,0x7ff86ea82704,51911148,0,0x0,8
tick,0x7ff86ea82704,51913192,0,0x0,8
tick,0x7ff86ea82704,51915720,0,0x0,8
tick,0x7ff86ea82704,51917276,0,0x0,8
tick,0x7ff86ea82704,51919100,0,0x0,8
tick,0x7ff86ea82704,51921124,0,0x0,8
tick,0x7ff86ea82704,51923250,0,0x0,8
tick,0x7ff86ea82704,51925224,0,0x0,8
tick,0x7ff86ea82704,51927225,0,0x0,8
tick,0x7ff86ea82704,51929193,0,0x0,8
tick,0x7ff86ea82704,51931260,0,0x0,8
tick,0x7ff86ea82704,51933210,0,0x0,8
tick,0x7ff86ea82704,51935135,0,0x0,8
tick,0x7ff86ea82704,51937107,0,0x0,8
tick,0x7ff86ea82704,51939328,0,0x0,8
tick,0x7ff86ea82704,51941109,0,0x0,8
tick,0x7ff86ea82704,51943167,0,0x0,8
tick,0x7ff86ea82704,51945135,0,0x0,8
tick,0x7ff86ea82704,51947206,0,0x0,8
tick,0x7ff86ea82704,51949128,0,0x0,8
tick,0x7ff86ea82704,51951132,0,0x0,8
tick,0x7ff86ea82704,51953093,0,0x0,8
tick,0x7ff86ea82704,51955205,0,0x0,8
tick,0x7ff86ea82704,51957076,0,0x0,8
tick,0x7ff86ea82704,51959192,0,0x0,8
tick,0x7ff86ea82704,51961063,0,0x0,8
tick,0x7ff86ea82704,51963097,0,0x0,8
tick,0x7ff86ea82704,51965109,0,0x0,8
tick,0x7ff86ea82704,51967140,0,0x0,8
tick,0x7ff86ea82704,51969069,0,0x0,8
tick,0x7ff86ea82704,51971071,0,0x0,8
tick,0x7ff86ea82704,51973111,0,0x0,8
tick,0x7ff86ea82704,51975246,0,0x0,8
tick,0x7ff86ea82704,51976956,0,0x0,8
tick,0x7ff86ea82704,51979126,0,0x0,8
tick,0x7ff86ea82704,51980995,0,0x0,8
tick,0x7ff86ea82704,51983054,0,0x0,8
tick,0x7ff86ea82704,51984966,0,0x0,8
tick,0x7ff86ea82704,51987165,0,0x0,8
tick,0x7ff86ea82704,51988941,0,0x0,8
tick,0x7ff86ea82704,51991481,0,0x0,8
tick,0x7ff86ea82704,51992993,0,0x0,8
tick,0x7ff86ea82704,51995064,0,0x0,8
tick,0x7ff86ea82704,51997065,0,0x0,8
tick,0x7ff86ea82704,51998996,0,0x0,8
tick,0x7ff86ea82704,52000935,0,0x0,8
tick,0x7ff86ea82704,52003241,0,0x0,8
tick,0x7ff86ea82704,52004917,0,0x0,8
tick,0x7ff86ea82704,52007373,0,0x0,8
tick,0x7ff86ea82704,52008891,0,0x0,8
tick,0x7ff86ea82704,52010963,0,0x0,8
tick,0x7ff86ea82704,52013191,0,0x0,8
tick,0x7ff86ea82704,52015229,0,0x0,8
tick,0x7ff86ea82704,52016950,0,0x0,8
tick,0x7ff86ea82704,52018957,0,0x0,8
tick,0x7ff86ea82704,52021231,0,0x0,8
tick,0x7ff86ea82704,52022825,0,0x0,8
tick,0x7ff86ea82704,52024997,0,0x0,8
tick,0x7ff86ea82704,52026964,0,0x0,8
tick,0x7ff86ea82704,52028960,0,0x0,8
tick,0x7ff86ea82704,52030920,0,0x0,8
tick,0x7ff86ea82704,52032906,0,0x0,8
tick,0x7ff86ea82704,52035056,0,0x0,8
tick,0x7ff86ea82704,52037151,0,0x0,8
tick,0x7ff86ea82704,52038796,0,0x0,8
tick,0x7ff86ea82704,52040841,0,0x0,8
tick,0x7ff86ea82704,52042829,0,0x0,8
tick,0x7ff86ea82704,52044913,0,0x0,8
tick,0x7ff86ea82704,52046801,0,0x0,8
tick,0x7ff86ea82704,52049012,0,0x0,8
tick,0x7ff86ea82704,52050899,0,0x0,8
tick,0x7ff86ea82704,52052867,0,0x0,8
tick,0x7ff86ea82704,52054833,0,0x0,8
tick,0x7ff86ea82704,52056810,0,0x0,8
tick,0x7ff86ea82704,52058785,0,0x0,8
tick,0x7ff86ea82704,52060822,0,0x0,8
tick,0x7ff86ea82704,52062949,0,0x0,8
tick,0x7ff86ea82704,52064807,0,0x0,8
tick,0x7ff86ea82704,52066971,0,0x0,8
tick,0x7ff86ea82704,52068724,0,0x0,8
tick,0x7ff86ea82704,52070804,0,0x0,8
tick,0x7ff86ea82704,52072791,0,0x0,8
tick,0x7ff86ea82704,52074817,0,0x0,8
tick,0x7ff86ea82704,52076714,0,0x0,8
tick,0x7ff86ea82704,52078722,0,0x0,8
tick,0x7ff86ea82704,52080853,0,0x0,8
tick,0x7ff86ea82704,52082764,0,0x0,8
tick,0x7ff86ea82704,52084764,0,0x0,8
tick,0x7ff86ea82704,52086674,0,0x0,8
tick,0x7ff86ea82704,52088629,0,0x0,8
tick,0x7ff86ea82704,52090725,0,0x0,8
tick,0x7ff86ea82704,52092665,0,0x0,8
tick,0x7ff86ea82704,52094778,0,0x0,8
tick,0x7ff86ea82704,52096770,0,0x0,8
tick,0x7ff86ea82704,52098914,0,0x0,8
tick,0x7ff86ea82704,52100807,0,0x0,8
tick,0x7ff86ea82704,52102774,0,0x0,8
tick,0x7ff86ea82704,52104879,0,0x0,8
tick,0x7ff86ea82704,52106770,0,0x0,8
tick,0x7ff86ea82704,52108736,0,0x0,8
tick,0x7ff86ea82704,52110658,0,0x0,8
tick,0x7ff86ea82704,52112805,0,0x0,8
tick,0x7ff86ea82704,52114671,0,0x0,8
tick,0x7ff86ea82704,52116682,0,0x0,8
tick,0x7ff86ea82704,52118697,0,0x0,8
tick,0x7ff86ea82704,52120951,0,0x0,8
tick,0x7ff86ea82704,52123580,0,0x0,8
tick,0x7ff86ea82704,52124594,0,0x0,8
tick,0x7ff86ea82704,52126502,0,0x0,8
tick,0x7ff86ea82704,52128523,0,0x0,8
tick,0x7ff86ea82704,52130597,0,0x0,8
tick,0x7ff86ea82704,52132492,0,0x0,8
tick,0x7ff86ea82704,52134434,0,0x0,8
tick,0x7ff86ea82704,52136488,0,0x0,8
tick,0x7ff86ea82704,52138484,0,0x0,8
tick,0x7ff86ea82704,52140618,0,0x0,8
tick,0x7ff86ea82704,52142480,0,0x0,8
tick,0x7ff86ea82704,52144604,0,0x0,8
tick,0x7ff86ea82704,52146554,0,0x0,8
tick,0x7ff86ea82704,52148514,0,0x0,8
tick,0x7ff86ea82704,52150499,0,0x0,8
tick,0x7ff86ea82704,52152440,0,0x0,8
tick,0x7ff86ea82704,52154451,0,0x0,8
tick,0x7ff86ea82704,52156763,0,0x0,8
tick,0x7ff86ea82704,52158752,0,0x0,8
tick,0x7ff86ea82704,52160748,0,0x0,8
tick,0x7ff86ea82704,52162532,0,0x0,8
tick,0x7ff86ea82704,52164591,0,0x0,8
tick,0x7ff86ea82704,52166643,0,0x0,8
tick,0x7ff86ea82704,52168798,0,0x0,8
tick,0x7ff86ea82704,52170592,0,0x0,8
tick,0x7ff86ea82704,52172507,0,0x0,8
tick,0x7ff86ea82704,52174664,0,0x0,8
tick,0x7ff86ea82704,52176517,0,0x0,8
tick,0x7ff86ea82704,52178762,0,0x0,8
tick,0x7ff86ea82704,52180413,0,0x0,8
tick,0x7ff86ea82704,52182693,0,0x0,8
tick,0x7ff86ea82704,52184483,0,0x0,8
tick,0x7ff86ea82704,52186643,0,0x0,8
tick,0x7ff86ea82704,52188394,0,0x0,8
tick,0x7ff86ea82704,52190543,0,0x0,8
tick,0x7ff86ea82704,52192315,0,0x0,8
tick,0x7ff86ea82704,52194369,0,0x0,8
tick,0x7ff86ea82704,52196393,0,0x0,8
tick,0x7ff86ea82704,52198551,0,0x0,8
tick,0x7ff86ea82704,52200725,0,0x0,8
tick,0x7ff86ea82704,52202431,0,0x0,8
tick,0x7ff86ea82704,52204468,0,0x0,8
tick,0x7ff86ea82704,52206710,0,0x0,8
tick,0x7ff86ea82704,52208538,0,0x0,8
tick,0x7ff86ea82704,52210436,0,0x0,8
tick,0x7ff86ea82704,52212302,0,0x0,8
tick,0x7ff86ea82704,52214372,0,0x0,8
tick,0x7ff86ea82704,52216306,0,0x0,8
tick,0x7ff86ea82704,52218292,0,0x0,8
tick,0x7ff86ea82704,52220249,0,0x0,8
tick,0x7ff86ea82704,52222287,0,0x0,8
tick,0x7ff86ea82704,52224318,0,0x0,8
tick,0x7ff86ea82704,52226424,0,0x0,8
tick,0x7ff86ea82704,52228515,0,0x0,8
tick,0x7ff86ea82704,52230590,0,0x0,8
tick,0x7ff86ea82704,52232304,0,0x0,8
tick,0x7ff86ea82704,52234360,0,0x0,8
tick,0x7ff86ea82704,52236239,0,0x0,8
tick,0x7ff86ea82704,52238249,0,0x0,8
tick,0x7ff86ea82704,52240336,0,0x0,8
tick,0x7ff86ea82704,52242176,0,0x0,8
tick,0x7ff86ea82704,52244351,0,0x0,8
tick,0x7ff86ea82704,52246172,0,0x0,8
tick,0x7ff86ea82704,52248244,0,0x0,8
tick,0x7ff86ea82704,52250161,0,0x0,8
tick,0x7ff86ea82704,52252289,0,0x0,8
tick,0x7ff86ea82704,52254223,0,0x0,8
tick,0x7ff86ea82704,52256281,0,0x0,8
tick,0x7ff86ea82704,52258166,0,0x0,8
tick,0x7ff86ea82704,52260156,0,0x0,8
tick,0x7ff86ea82704,52262132,0,0x0,8
tick,0x7ff86ea82704,52264196,0,0x0,8
tick,0x7ff86ea82704,52266111,0,0x0,8
tick,0x7ff86ea82704,52268363,0,0x0,8
tick,0x7ff86ea82704,52270178,0,0x0,8
tick,0x7ff86ea82704,52272190,0,0x0,8
tick,0x7ff86ea82704,52274225,0,0x0,8
tick,0x7ff86ea82704,52276228,0,0x0,8
tick,0x7ff86ea82704,52278079,0,0x0,8
tick,0x7ff86ea82704,52280152,0,0x0,8
tick,0x7ff86ea82704,52282052,0,0x0,8
tick,0x7ff86ea82704,52284136,0,0x0,8
tick,0x7ff86ea82704,52286117,0,0x0,8
tick,0x7ff86ea82704,52288101,0,0x0,8
tick,0x7ff86ea82704,52290076,0,0x0,8
tick,0x7ff86ea82704,52292329,0,0x0,8
tick,0x7ff86ea82704,52294069,0,0x0,8
tick,0x7ff86ea82704,52296224,0,0x0,8
tick,0x7ff86ea82704,52298150,0,0x0,8
tick,0x7ff86ea82704,52300113,0,0x0,8
tick,0x7ff86ea82704,52302041,0,0x0,8
tick,0x7ff86ea82704,52304110,0,0x0,8
tick,0x7ff86ea82704,52306061,0,0x0,8
tick,0x7ff86ea82704,52308198,0,0x0,8
tick,0x7ff86ea82704,52310139,0,0x0,8
tick,0x7ff86ea82704,52312057,0,0x0,8
tick,0x7ff86ea82704,52314226,0,0x0,8
tick,0x7ff86ea82704,52316115,0,0x0,8
tick,0x7ff86ea82704,52317977,0,0x0,8
tick,0x7ff86ea82704,52320246,0,0x0,8
tick,0x7ff86ea82704,52322035,0,0x0,8
tick,0x7ff86ea82704,52324073,0,0x0,8
tick,0x7ff86ea82704,52326135,0,0x0,8
tick,0x7ff86ea82704,52327998,0,0x0,8
tick,0x7ff86ea82704,52330078,0,0x0,8
tick,0x7ff86ea82704,52332025,0,0x0,8
tick,0x7ff86ea82704,52334123,0,0x0,8
tick,0x7ff86ea82704,52336142,0,0x0,8
tick,0x7ff86ea82704,52338389,0,0x0,8
tick,0x7ff86ea82704,52340256,0,0x0,8
tick,0x7ff86ea82704,52342271,0,0x0,8
tick,0x7ff86ea82704,52344497,0,0x0,8
tick,0x7ff86ea82704,52346102,0,0x0,8
tick,0x7ff86ea82704,52348563,0,0x0,8
tick,0x7ff86ea82704,52350181,0,0x0,8
tick,0x7ff86ea82704,52351981,0,0x0,8
tick,0x7ff86ea82704,52353954,0,0x0,8
tick,0x7ff86ea82704,52355888,0,0x0,8
tick,0x7ff86ea82704,52358120,0,0x0,8
tick,0x7ff86ea82704,52360008,0,0x0,8
tick,0x7ff86ea82704,52362056,0,0x0,8
tick,0x7ff86ea82704,52363822,0,0x0,8
tick,0x7ff86ea82704,52366377,0,0x0,8
tick,0x7ff86ea82704,52367851,0,0x0,8
tick,0x7ff86ea82704,52370207,0,0x0,8
tick,0x7ff86ea82704,52371847,0,0x0,8
tick,0x7ff86ea82704,52373944,0,0x0,8
tick,0x7ff86ea82704,52375827,0,0x0,8
tick,0x7ff86ea82704,52377950,0,0x0,8
tick,0x7ff86ea82704,52379819,0,0x0,8
tick,0x7ff86ea82704,52381951,0,0x0,8
tick,0x7ff86ea82704,52383769,0,0x0,8
tick,0x7ff86ea82704,52385933,0,0x0,8
tick,0x7ff86ea82704,52387772,0,0x0,8
tick,0x7ff86ea82704,52389881,0,0x0,8
tick,0x7ff86ea82704,52391807,0,0x0,8
tick,0x7ff86ea82704,52393903,0,0x0,8
tick,0x7ff86ea82704,52395946,0,0x0,8
tick,0x7ff86ea82704,52397731,0,0x0,8
tick,0x7ff86ea82704,52399995,0,0x0,8
tick,0x7ff86ea82704,52401792,0,0x0,8
tick,0x7ff86ea82704,52403951,0,0x0,8
tick,0x7ff86ea82704,52405746,0,0x0,8
tick,0x7ff86ea82704,52407943,0,0x0,8
tick,0x7ff86ea82704,52409757,0,0x0,8
tick,0x7ff86ea82704,52411818,0,0x0,8
tick,0x7ff86ea82704,52413776,0,0x0,8
tick,0x7ff86ea82704,52415960,0,0x0,8
tick,0x7ff86ea82704,52417922,0,0x0,8
tick,0x7ff86ea82704,52419742,0,0x0,8
tick,0x7ff86ea82704,52421776,0,0x0,8
tick,0x7ff86ea82704,52423744,0,0x0,8
tick,0x7ff86ea82704,52425747,0,0x0,8
tick,0x7ff86ea82704,52427688,0,0x0,8
tick,0x7ff86ea82704,52429710,0,0x0,8
tick,0x7ff86ea82704,52431683,0,0x0,8
tick,0x7ff86ea82704,52433713,0,0x0,8
tick,0x7ff86ea82704,52435717,0,0x0,8
tick,0x7ff86ea82704,52437728,0,0x0,8
tick,0x7ff86ea82704,52439644,0,0x0,8
tick,0x7ff86ea82704,52441661,0,0x0,8
tick,0x7ff86ea82704,52443649,0,0x0,8
tick,0x7ff86ea82704,52445626,0,0x0,8
tick,0x7ff86ea82704,52447730,0,0x0,8
tick,0x7ff86ea82704,52449618,0,0x0,8
tick,0x7ff86ea82704,52451810,0,0x0,8
tick,0x7ff86ea82704,52453724,0,0x0,8
tick,0x7ff86ea82704,52455672,0,0x0,8
tick,0x7ff86ea82704,52457605,0,0x0,8
tick,0x7ff86ea82704,52459660,0,0x0,8
tick,0x7ff86ea82704,52461643,0,0x0,8
tick,0x7ff86ea82704,52463598,0,0x0,8
tick,0x7ff86ea82704,52465615,0,0x0,8
tick,0x7ff86ea82704,52467569,0,0x0,8
tick,0x7ff86ea82704,52469606,0,0x0,8
tick,0x7ff86ea82704,52471577,0,0x0,8
tick,0x7ff86ea82704,52473537,0,0x0,8
tick,0x7ff86ea82704,52475661,0,0x0,8
tick,0x7ff86ea82704,52477564,0,0x0,8
tick,0x7ff86ea82704,52479568,0,0x0,8
tick,0x7ff86ea82704,52481486,0,0x0,8
tick,0x7ff86ea82704,52483607,0,0x0,8
tick,0x7ff86ea82704,52485499,0,0x0,8
tick,0x7ff86ea82704,52487558,0,0x0,8
tick,0x7ff86ea82704,52489452,0,0x0,8
tick,0x7ff86ea82704,52491649,0,0x0,8
tick,0x7ff86ea82704,52493490,0,0x0,8
tick,0x7ff86ea82704,52495543,0,0x0,8
tick,0x7ff86ea82704,52497433,0,0x0,8
tick,0x7ff86ea82704,52499551,0,0x0,8
tick,0x7ff86ea82704,52501441,0,0x0,8
tick,0x7ff86ea82704,52503476,0,0x0,8
tick,0x7ff86ea82704,52505523,0,0x0,8
tick,0x7ff86ea82704,52507513,0,0x0,8
tick,0x7ff86ea82704,52509490,0,0x0,8
tick,0x7ff86ea82704,52511548,0,0x0,8
tick,0x7ff86ea82704,52513407,0,0x0,8
tick,0x7ff86ea82704,52515470,0,0x0,8
tick,0x7ff86ea82704,52517410,0,0x0,8
tick,0x7ff86ea82704,52519537,0,0x0,8
tick,0x7ff86ea82704,52521465,0,0x0,8
tick,0x7ff86ea82704,52523407,0,0x0,8
tick,0x7ff86ea82704,52525499,0,0x0,8
tick,0x7ff86ea82704,52527386,0,0x0,8
tick,0x7ff86ea82704,52529562,0,0x0,8
tick,0x7ff86ea82704,52531434,0,0x0,8
tick,0x7ff86ea82704,52533511,0,0x0,8
tick,0x7ff86ea82704,52535372,0,0x0,8
tick,0x7ff86ea82704,52537629,0,0x0,8
tick,0x7ff86ea82704,52539390,0,0x0,8
tick,0x7ff86ea82704,52541540,0,0x0,8
tick,0x7ff86ea82704,52543400,0,0x0,8
tick,0x7ff86ea82704,52545825,0,0x0,8
tick,0x7ff86ea82704,52547459,0,0x0,8
tick,0x7ff86ea82704,52549458,0,0x0,8
tick,0x7ff86ea82704,52551309,0,0x0,8
tick,0x7ff86ea82704,52553478,0,0x0,8
tick,0x7ff86ea82704,52555351,0,0x0,8
tick,0x7ff86ea82704,52557391,0,0x0,8
tick,0x7ff86ea82704,52559375,0,0x0,8
tick,0x7ff86ea82704,52561376,0,0x0,8
tick,0x7ff86ea82704,52563354,0,0x0,8
tick,0x7ff86ea82704,52565418,0,0x0,8
tick,0x7ff86ea82704,52567283,0,0x0,8
tick,0x7ff86ea82704,52569816,0,0x0,8
tick,0x7ff86ea82704,52571276,0,0x0,8
tick,0x7ff86ea82704,52573509,0,0x0,8
tick,0x7ff86ea82704,52575770,0,0x0,8
tick,0x7ff86ea82704,52577776,0,0x0,8
tick,0x7ff86ea82704,52579375,0,0x0,8
tick,0x7ff86ea82704,52581451,0,0x0,8
tick,0x7ff86ea82704,52583776,0,0x0,8
tick,0x7ff86ea82704,52585807,0,0x0,8
tick,0x7ff86ea82704,52587402,0,0x0,8
tick,0x7ff86ea82704,52589324,0,0x0,8
tick,0x7ff86ea82704,52591272,0,0x0,8
tick,0x7ff86ea82704,52593346,0,0x0,8
tick,0x7ff86ea82704,52595304,0,0x0,8
tick,0x7ff86ea82704,52597314,0,0x0,8
tick,0x7ff86ea82704,52599514,0,0x0,8
tick,0x7ff86ea82704,52601276,0,0x0,8
tick,0x7ff86ea82704,52603935,0,0x0,8
tick,0x7ff86ea82704,52605227,0,0x0,8
tick,0x7ff86ea82704,52607223,0,0x0,8
tick,0x7ff86ea82704,52609152,0,0x0,8
tick,0x7ff86ea82704,52611638,0,0x0,8
tick,0x7ff86ea82704,52613336,0,0x0,8
tick,0x7ff86ea82704,52615178,0,0x0,8
tick,0x7ff86ea82704,52617174,0,0x0,8
tick,0x7ff86ea82704,52619132,0,0x0,8
tick,0x7ff86ea82704,52621154,0,0x0,8
tick,0x7ff86ea82704,52623204,0,0x0,8
tick,0x7ff86ea82704,52625125,0,0x0,8
tick,0x7ff86ea82704,52627156,0,0x0,8
tick,0x7ff86ea82704,52629135,0,0x0,8
tick,0x7ff86ea82704,52631147,0,0x0,8
tick,0x7ff86ea82704,52633143,0,0x0,8
tick,0x7ff86ea82704,52635181,0,0x0,8
tick,0x7ff86ea82704,52637083,0,0x0,8
tick,0x7ff86ea82704,52639174,0,0x0,8
tick,0x7ff86ea82704,52641083,0,0x0,8
tick,0x7ff86ea82704,52643150,0,0x0,8
tick,0x7ff86ea82704,52645073,0,0x0,8
tick,0x7ff86ea82704,52647169,0,0x0,8
tick,0x7ff86ea82704,52649035,0,0x0,8
tick,0x7ff86ea82704,52651059,0,0x0,8
tick,0x7ff86ea82704,52653015,0,0x0,8
tick,0x7ff86ea82704,52655147,0,0x0,8
tick,0x7ff86ea82704,52657066,0,0x0,8
tick,0x7ff86ea82704,52659167,0,0x0,8
tick,0x7ff86ea82704,52661017,0,0x0,8
tick,0x7ff86ea82704,52663090,0,0x0,8
tick,0x7ff86ea82704,52665039,0,0x0,8
tick,0x7ff86ea82704,52667066,0,0x0,8
tick,0x7ff86ea82704,52669016,0,0x0,8
tick,0x7ff86ea82704,52671065,0,0x0,8
tick,0x7ff86ea82704,52672987,0,0x0,8
tick,0x7ff86ea82704,52675050,0,0x0,8
tick,0x7ff86ea82704,52677016,0,0x0,8
tick,0x7ff86ea82704,52679055,0,0x0,8
tick,0x7ff86ea82704,52680955,0,0x0,8
tick,0x7ff86ea82704,52683048,0,0x0,8
tick,0x7ff86ea82704,52684977,0,0x0,8
tick,0x7ff86ea82704,52686938,0,0x0,8
tick,0x7ff86ea82704,52688955,0,0x0,8
tick,0x7ff86ea82704,52690942,0,0x0,8
tick,0x7ff86ea82704,52692984,0,0x0,8
tick,0x7ff86ea82704,52694916,0,0x0,8
tick,0x7ff86ea82704,52697002,0,0x0,8
tick,0x7ff86ea82704,52698939,0,0x0,8
tick,0x7ff86ea82704,52700888,0,0x0,8
tick,0x7ff86ea82704,52703021,0,0x0,8
tick,0x7ff86ea82704,52704871,0,0x0,8
tick,0x7ff86ea82704,52706903,0,0x0,8
tick,0x7ff86ea82704,52708932,0,0x0,8
tick,0x7ff86ea82704,52711002,0,0x0,8
tick,0x7ff86ea82704,52712915,0,0x0,8
tick,0x7ff86ea82704,52714925,0,0x0,8
tick,0x7ff86ea82704,52717021,0,0x0,8
tick,0x7ff86ea82704,52718971,0,0x0,8
tick,0x7ff86ea82704,52720920,0,0x0,8
tick,0x7ff86ea82704,52722887,0,0x0,8
tick,0x7ff86ea82704,52724875,0,0x0,8
tick,0x7ff86ea82704,52726964,0,0x0,8
tick,0x7ff86ea82704,52729037,0,0x0,8
tick,0x7ff86ea82704,52730887,0,0x0,8
tick,0x7ff86ea82704,52732867,0,0x0,8
tick,0x7ff86ea82704,52734836,0,0x0,8
tick,0x7ff86ea82704,52736957,0,0x0,8
tick,0x7ff86ea82704,52739202,0,0x0,8
tick,0x7ff86ea82704,52740790,0,0x0,8
tick,0x7ff86ea82704,52742912,0,0x0,8
tick,0x7ff86ea82704,52744837,0,0x0,8
tick,0x7ff86ea82704,52746870,0,0x0,8
tick,0x7ff86ea82704,52748787,0,0x0,8
tick,0x7ff86ea82704,52750921,0,0x0,8
tick,0x7ff86ea82704,52752805,0,0x0,8
tick,0x7ff86ea82704,52755002,0,0x0,8
tick,0x7ff86ea82704,52756778,0,0x0,8
tick,0x7ff86ea82704,52758933,0,0x0,8
tick,0x7ff86ea82704,52760710,0,0x0,8
tick,0x7ff86ea82704,52762917,0,0x0,8
tick,0x7ff86ea82704,52764802,0,0x0,8
tick,0x7ff86ea82704,52766826,0,0x0,8
tick,0x7ff86ea82704,52768860,0,0x0,8
tick,0x7ff86ea82704,52770812,0,0x0,8
tick,0x7ff86ea82704,52772722,0,0x0,8
tick,0x7ff86ea82704,52774783,0,0x0,8
tick,0x7ff86ea82704,52776820,0,0x0,8
tick,0x7ff86ea82704,52778765,0,0x0,8
tick,0x7ff86ea82704,52780697,0,0x0,8
tick,0x7ff86ea82704,52782832,0,0x0,8
tick,0x7ff86ea82704,52784692,0,0x0,8
tick,0x7ff86ea82704,52786969,0,0x0,8
tick,0x7ff86ea82704,52788718,0,0x0,8
tick,0x7ff86ea82704,52790748,0,0x0,8
tick,0x7ff86ea82704,52792686,0,0x0,8
tick,0x7ff86ea82704,52794907,0,0x0,8
tick,0x7ff86ea82704,52796721,0,0x0,8
tick,0x7ff86ea82704,52798798,0,0x0,8
tick,0x7ff86ea82704,52800694,0,0x0,8
tick,0x7ff86ea82704,52802803,0,0x0,8
tick,0x7ff86ea82704,52804637,0,0x0,8
tick,0x7ff86ea82704,52806708,0,0x0,8
tick,0x7ff86ea82704,52808758,0,0x0,8
tick,0x7ff86ea82704,52810666,0,0x0,8
tick,0x7ff86ea82704,52812665,0,0x0,8
tick,0x7ff86ea82704,52814785,0,0x0,8
tick,0x7ff86ea82704,52816659,0,0x0,8
tick,0x7ff86ea82704,52818793,0,0x0,8
tick,0x7ff86ea82704,52820689,0,0x0,8
tick,0x7ff86ea82704,52825561,0,0x0,8
tick,0x7ff86ea82704,52827033,0,0x0,8
tick,0x7ff86ea82704,52829076,0,0x0,8
tick,0x7ff86ea82704,52830820,0,0x0,8
tick,0x7ff86ea82704,52833095,0,0x0,8
tick,0x7ff86ea82704,52834906,0,0x0,8
tick,0x7ff86ea82704,52836908,0,0x0,8
tick,0x7ff86ea82704,52839668,0,0x0,8
tick,0x7ff86ea82704,52840925,0,0x0,8
tick,0x7ff86ea82704,52843031,0,0x0,8
tick,0x7ff86ea82704,52844931,0,0x0,8
tick,0x7ff86ea82704,52846877,0,0x0,8
tick,0x7ff86ea82704,52848853,0,0x0,8
tick,0x7ff86ea82704,52851072,0,0x0,8
tick,0x7ff86ea82704,52852864,0,0x0,8
tick,0x7ff86ea82704,52855017,0,0x0,8
tick,0x7ff86ea82704,52856764,0,0x0,8
tick,0x7ff86ea82704,52859640,0,0x0,8
tick,0x7ff86ea82704,52861587,0,0x0,8
tick,0x7ff86ea82704,52863579,0,0x0,8
tick,0x7ff86ea82704,52865478,0,0x0,8
tick,0x7ff86ea82704,52867587,0,0x0,8
tick,0x7ff86ea82704,52869580,0,0x0,8
tick,0x7ff86ea82704,52871641,0,0x0,8
tick,0x7ff86ea82704,52873526,0,0x0,8
tick,0x7ff86ea82704,52875660,0,0x0,8
tick,0x7ff86ea82704,52877507,0,0x0,8
tick,0x7ff86ea82704,52879535,0,0x0,8
tick,0x7ff86ea82704,52881517,0,0x0,8
tick,0x7ff86ea82704,52883598,0,0x0,8
tick,0x7ff86ea82704,52885697,0,0x0,8
tick,0x7ff86ea82704,52887506,0,0x0,8
tick,0x7ff86ea82704,52889492,0,0x0,8
tick,0x7ff86ea82704,52891591,0,0x0,8
tick,0x7ff86ea82704,52893635,0,0x0,8
tick,0x7ff86ea82704,52895706,0,0x0,8
tick,0x7ff86ea82704,52897497,0,0x0,8
tick,0x7ff86ea82704,52899743,0,0x0,8
tick,0x7ff86ea82704,52901383,0,0x0,8
tick,0x7ff86ea82704,52903506,0,0x0,8
tick,0x7ff86ea82704,52905422,0,0x0,8
tick,0x7ff86ea82704,52907424,0,0x0,8
tick,0x7ff86ea82704,52909377,0,0x0,8
tick,0x7ff86ea82704,52911540,0,0x0,8
tick,0x7ff86ea82704,52913390,0,0x0,8
tick,0x7ff86ea82704,52915426,0,0x0,8
tick,0x7ff86ea82704,52917368,0,0x0,8
tick,0x7ff86ea82704,52919392,0,0x0,8
tick,0x7ff86ea82704,52921372,0,0x0,8
tick,0x7ff86ea82704,52923355,0,0x0,8
tick,0x7ff86ea82704,52925508,0,0x0,8
tick,0x7ff86ea82704,52927402,0,0x0,8
tick,0x7ff86ea82704,52929323,0,0x0,8
tick,0x7ff86ea82704,52931380,0,0x0,8
tick,0x7ff86ea82704,52933331,0,0x0,8
tick,0x7ff86ea82704,52935392,0,0x0,8
tick,0x7ff86ea82704,52937383,0,0x0,8
tick,0x7ff86ea82704,52939343,0,0x0,8
tick,0x7ff86ea82704,52941426,0,0x0,8
tick,0x7ff86ea82704,52943377,0,0x0,8
tick,0x7ff86ea82704,52945339,0,0x0,8
tick,0x7ff86ea82704,52947358,0,0x0,8
tick,0x7ff86ea82704,52949353,0,0x0,8
tick,0x7ff86ea82704,52951341,0,0x0,8
tick,0x7ff86ea82704,52953286,0,0x0,8
tick,0x7ff86ea82704,52955497,0,0x0,8
tick,0x7ff86ea82704,52957271,0,0x0,8
tick,0x7ff86ea82704,52959412,0,0x0,8
tick,0x7ff86ea82704,52961289,0,0x0,8
tick,0x7ff86ea82704,52963295,0,0x0,8
tick,0x7ff86ea82704,52965327,0,0x0,8
tick,0x7ff86ea82704,52967287,0,0x0,8
tick,0x7ff86ea82704,52969415,0,0x0,8
tick,0x7ff86ea82704,52971335,0,0x0,8
tick,0x7ff86ea82704,52973246,0,0x0,8
tick,0x7ff86ea82704,52975393,0,0x0,8
tick,0x7ff86ea82704,52977281,0,0x0,8
tick,0x7ff86ea82704,52979283,0,0x0,8
tick,0x7ff86ea82704,52981194,0,0x0,8
tick,0x7ff86ea82704,52983222,0,0x0,8
tick,0x7ff86ea82704,52985189,0,0x0,8
tick,0x7ff86ea82704,52987301,0,0x0,8
tick,0x7ff86ea82704,52989279,0,0x0,8
tick,0x7ff86ea82704,52991166,0,0x0,8
tick,0x7ff86ea82704,52993278,0,0x0,8
tick,0x7ff86ea82704,52995338,0,0x0,8
tick,0x7ff86ea82704,52997211,0,0x0,8
tick,0x7ff86ea82704,52999253,0,0x0,8
tick,0x7ff86ea82704,53001196,0,0x0,8
tick,0x7ff86ea82704,53003168,0,0x0,8
tick,0x7ff86ea82704,53005361,0,0x0,8
tick,0x7ff86ea82704,53007165,0,0x0,8
tick,0x7ff86ea82704,53009243,0,0x0,8
tick,0x7ff86ea82704,53011199,0,0x0,8
tick,0x7ff86ea82704,53013170,0,0x0,8
tick,0x7ff86ea82704,53015092,0,0x0,8
tick,0x7ff86ea82704,53017108,0,0x0,8
tick,0x7ff86ea82704,53019111,0,0x0,8
tick,0x7ff86ea82704,53021195,0,0x0,8
tick,0x7ff86ea82704,53023078,0,0x0,8
tick,0x7ff86ea82704,53025284,0,0x0,8
tick,0x7ff86ea82704,53027112,0,0x0,8
tick,0x7ff86ea82704,53029129,0,0x0,8
tick,0x7ff86ea82704,53031030,0,0x0,8
tick,0x7ff86ea82704,53033246,0,0x0,8
tick,0x7ff86ea82704,53035080,0,0x0,8
tick,0x7ff86ea82704,53037162,0,0x0,8
tick,0x7ff86ea82704,53039133,0,0x0,8
tick,0x7ff86ea82704,53041070,0,0x0,8
tick,0x7ff86ea82704,53042995,0,0x0,8
tick,0x7ff86ea82704,53045093,0,0x0,8
tick,0x7ff86ea82704,53047044,0,0x0,8
tick,0x7ff86ea82704,53049058,0,0x0,8
tick,0x7ff86ea82704,53051033,0,0x0,8
tick,0x7ff86ea82704,53052978,0,0x0,8
tick,0x7ff86ea82704,53055050,0,0x0,8
tick,0x7ff86ea82704,53056996,0,0x0,8
tick,0x7ff86ea82704,53059001,0,0x0,8
tick,0x7ff86ea82704,53060945,0,0x0,8
tick,0x7ff86ea82704,53063038,0,0x0,8
tick,0x7ff86ea82704,53065023,0,0x0,8
tick,0x7ff86ea82704,53066993,0,0x0,8
tick,0x7ff86ea82704,53068931,0,0x0,8
tick,0x7ff86ea82704,53071013,0,0x0,8
tick,0x7ff86ea82704,53072978,0,0x0,8
tick,0x7ff86ea82704,53074975,0,0x0,8
tick,0x7ff86ea82704,53076916,0,0x0,8
tick,0x7ff86ea82704,53078964,0,0x0,8
tick,0x7ff86ea82704,53080941,0,0x0,8
tick,0x7ff86ea82704,53082995,0,0x0,8
tick,0x7ff86ea82704,53084893,0,0x0,8
tick,0x7ff86ea82704,53086870,0,0x0,8
tick,0x7ff86ea82704,53088906,0,0x0,8
tick,0x7ff86ea82704,53091104,0,0x0,8
tick,0x7ff86ea82704,53092876,0,0x0,8
tick,0x7ff86ea82704,53094970,0,0x0,8
tick,0x7ff86ea82704,53096885,0,0x0,8
tick,0x7ff86ea82704,53098954,0,0x0,8
tick,0x7ff86ea82704,53100855,0,0x0,8
tick,0x7ff86ea82704,53103117,0,0x0,8
tick,0x7ff86ea82704,53104865,0,0x0,8
tick,0x7ff86ea82704,53107060,0,0x0,8
tick,0x7ff86ea82704,53108989,0,0x0,8
tick,0x7ff86ea82704,53110907,0,0x0,8
tick,0x7ff86ea82704,53113063,0,0x0,8
tick,0x7ff86ea82704,53114971,0,0x0,8
tick,0x7ff86ea82704,53116999,0,0x0,8
tick,0x7ff86ea82704,53119114,0,0x0,8
tick,0x7ff86ea82704,53121049,0,0x0,8
tick,0x7ff86ea82704,53123059,0,0x0,8
tick,0x7ff86ea82704,53124823,0,0x0,8
tick,0x7ff86ea82704,53127072,0,0x0,8
tick,0x7ff86ea82704,53129060,0,0x0,8
tick,0x7ff86ea82704,53130984,0,0x0,8
tick,0x7ff86ea82704,53132978,0,0x0,8
tick,0x7ff86ea82704,53134812,0,0x0,8
tick,0x7ff86ea82704,53136825,0,0x0,8
tick,0x7ff86ea82704,53138860,0,0x0,8
tick,0x7ff86ea82704,53140876,0,0x0,8
tick,0x7ff86ea82704,53142725,0,0x0,8
tick,0x7ff86ea82704,53144790,0,0x0,8
tick,0x7ff86ea82704,53146733,0,0x0,8
tick,0x7ff86ea82704,53148774,0,0x0,8
tick,0x7ff86ea82704,53150783,0,0x0,8
tick,0x7ff86ea82704,53152741,0,0x0,8
tick,0x7ff86ea82704,53154666,0,0x0,8
tick,0x7ff86ea82704,53156723,0,0x0,8
tick,0x7ff86ea82704,53158764,0,0x0,8
tick,0x7ff86ea82704,53160861,0,0x0,8
tick,0x7ff86ea82704,53162767,0,0x0,8
tick,0x7ff86ea82704,53164844,0,0x0,8
tick,0x7ff86ea82704,53166872,0,0x0,8
tick,0x7ff86ea82704,53168815,0,0x0,8
tick,0x7ff86ea82704,53170702,0,0x0,8
tick,0x7ff86ea82704,53172758,0,0x0,8
tick,0x7ff86ea82704,53174755,0,0x0,8
tick,0x7ff86ea82704,53176768,0,0x0,8
tick,0x7ff86ea82704,53178847,0,0x0,8
tick,0x7ff86ea82704,53180804,0,0x0,8
tick,0x7ff86ea82704,53182801,0,0x0,8
tick,0x7ff86ea82704,53184764,0,0x0,8
tick,0x7ff86ea82704,53186711,0,0x0,8
tick,0x7ff86ea82704,53188706,0,0x0,8
tick,0x7ff86ea82704,53190651,0,0x0,8
tick,0x7ff86ea82704,53192845,0,0x0,8
tick,0x7ff86ea82704,53194624,0,0x0,8
tick,0x7ff86ea82704,53196665,0,0x0,8
tick,0x7ff86ea82704,53198668,0,0x0,8
tick,0x7ff86ea82704,53200696,0,0x0,8
tick,0x7ff86ea82704,53202640,0,0x0,8
tick,0x7ff86ea82704,53204657,0,0x0,8
tick,0x7ff86ea82704,53206671,0,0x0,8
tick,0x7ff86ea82704,53209608,0,0x0,8
tick,0x7ff86ea82704,53210721,0,0x0,8
tick,0x7ff86ea82704,53212628,0,0x0,8
tick,0x7ff86ea82704,53214654,0,0x0,8
tick,0x7ff86ea82704,53216731,0,0x0,8
tick,0x7ff86ea82704,53218664,0,0x0,8
tick,0x7ff86ea82704,53220814,0,0x0,8
tick,0x7ff86ea82704,53222560,0,0x0,8
tick,0x7ff86ea82704,53224687,0,0x0,8
tick,0x7ff86ea82704,53226698,0,0x0,8
tick,0x7ff86ea82704,53228619,0,0x0,8
tick,0x7ff86ea82704,53230578,0,0x0,8
tick,0x7ff86ea82704,53232601,0,0x0,8
tick,0x7ff86ea82704,53234618,0,0x0,8
tick,0x7ff86ea82704,53236573,0,0x0,8
tick,0x7ff86ea82704,53238633,0,0x0,8
tick,0x7ff86ea82704,53240574,0,0x0,8
tick,0x7ff86ea82704,53242678,0,0x0,8
tick,0x7ff86ea82704,53244546,0,0x0,8
tick,0x7ff86ea82704,53246506,0,0x0,8
tick,0x7ff86ea82704,53248625,0,0x0,8
tick,0x7ff86ea82704,53250622,0,0x0,8
tick,0x7ff86ea82704,53252500,0,0x0,8
tick,0x7ff86ea82704,53254481,0,0x0,8
tick,0x7ff86ea82704,53256495,0,0x0,8
tick,0x7ff86ea82704,53258609,0,0x0,8
tick,0x7ff86ea82704,53260527,0,0x0,8
tick,0x7ff86ea82704,53262478,0,0x0,8
tick,0x7ff86ea82704,53264512,0,0x0,8
tick,0x7ff86ea82704,53266541,0,0x0,8
tick,0x7ff86ea82704,53268437,0,0x0,8
tick,0x7ff86ea82704,53270476,0,0x0,8
tick,0x7ff86ea82704,53272515,0,0x0,8
tick,0x7ff86ea82704,53274411,0,0x0,8
tick,0x7ff86ea82704,53276440,0,0x0,8
tick,0x7ff86ea82704,53278387,0,0x0,8
tick,0x7ff86ea82704,53280477,0,0x0,8
tick,0x7ff86ea82704,53282407,0,0x0,8
tick,0x7ff86ea82704,53284509,0,0x0,8
tick,0x7ff86ea82704,53286377,0,0x0,8
tick,0x7ff86ea82704,53288547,0,0x0,8
tick,0x7ff86ea82704,53290480,0,0x0,8
tick,0x7ff86ea82704,53292630,0,0x0,8
tick,0x7ff86ea82704,53294467,0,0x0,8
tick,0x7ff86ea82704,53296614,0,0x0,8
tick,0x7ff86ea82704,53298347,0,0x0,8
tick,0x7ff86ea82704,53300467,0,0x0,8
tick,0x7ff86ea82704,53302701,0,0x0,8
tick,0x7ff86ea82704,53304407,0,0x0,8
tick,0x7ff86ea82704,53306433,0,0x0,8
tick,0x7ff86ea82704,53308417,0,0x0,8
tick,0x7ff86ea82704,53310471,0,0x0,8
tick,0x7ff86ea82704,53312354,0,0x0,8
tick,0x7ff86ea82704,53314396,0,0x0,8
tick,0x7ff86ea82704,53316329,0,0x0,8
tick,0x7ff86ea82704,53318397,0,0x0,8
tick,0x7ff86ea82704,53320325,0,0x0,8
tick,0x7ff86ea82704,53322483,0,0x0,8
tick,0x7ff86ea82704,53324395,0,0x0,8
tick,0x7ff86ea82704,53326384,0,0x0,8
tick,0x7ff86ea82704,53328347,0,0x0,8
tick,0x7ff86ea82704,53330752,0,0x0,8
tick,0x7ff86ea82704,53332358,0,0x0,8
tick,0x7ff86ea82704,53334302,0,0x0,8
tick,0x7ff86ea82704,53336300,0,0x0,8
tick,0x7ff86ea82704,53338383,0,0x0,8
tick,0x7ff86ea82704,53340328,0,0x0,8
tick,0x7ff86ea82704,53342547,0,0x0,8
tick,0x7ff86ea82704,53344414,0,0x0,8
tick,0x7ff86ea82704,53347309,0,0x0,8
tick,0x7ff86ea82704,53349448,0,0x0,8
tick,0x7ff86ea82704,53351422,0,0x0,8
tick,0x7ff86ea82704,53353414,0,0x0,8
tick,0x7ff86ea82704,53355428,0,0x0,8
tick,0x7ff86ea82704,53357394,0,0x0,8
tick,0x7ff86ea82704,53359333,0,0x0,8
tick,0x7ff86ea82704,53361479,0,0x0,8
tick,0x7ff86ea82704,53363361,0,0x0,8
tick,0x7ff86ea82704,53365426,0,0x0,8
tick,0x7ff86ea82704,53367307,0,0x0,8
tick,0x7ff86ea82704,53369369,0,0x0,8
tick,0x7ff86ea82704,53371264,0,0x0,8
tick,0x7ff86ea82704,53373413,0,0x0,8
tick,0x7ff86ea82704,53375540,0,0x0,8
tick,0x7ff86ea82704,53377447,0,0x0,8
tick,0x7ff86ea82704,53379291,0,0x0,8
tick,0x7ff86ea82704,53381352,0,0x0,8
tick,0x7ff86ea82704,53383238,0,0x0,8
tick,0x7ff86ea82704,53385387,0,0x0,8
tick,0x7ff86ea82704,53387199,0,0x0,8
tick,0x7ff86ea82704,53389440,0,0x0,8
tick,0x7ff86ea82704,53391227,0,0x0,8
tick,0x7ff86ea82704,53393284,0,0x0,8
tick,0x7ff86ea82704,53395240,0,0x0,8
tick,0x7ff86ea82704,53397261,0,0x0,8
tick,0x7ff86ea82704,53399329,0,0x0,8
tick,0x7ff86ea82704,53401463,0,0x0,8
tick,0x7ff86ea82704,53403181,0,0x0,8
tick,0x7ff86ea82704,53405226,0,0x0,8
tick,0x7ff86ea82704,53407165,0,0x0,8
tick,0x7ff86ea82704,53409235,0,0x0,8
tick,0x7ff86ea82704,53411183,0,0x0,8
tick,0x7ff86ea82704,53413264,0,0x0,8
tick,0x7ff86ea82704,53415206,0,0x0,8
tick,0x7ff86ea82704,53417289,0,0x0,8
tick,0x7ff86ea82704,53419347,0,0x0,8
tick,0x7ff86ea82704,53421166,0,0x0,8
tick,0x7ff86ea82704,53423144,0,0x0,8
tick,0x7ff86ea82704,53425112,0,0x0,8
tick,0x7ff86ea82704,53427403,0,0x0,8
tick,0x7ff86ea82704,53429207,0,0x0,8
tick,0x7ff86ea82704,53431226,0,0x0,8
tick,0x7ff86ea82704,53433180,0,0x0,8
tick,0x7ff86ea82704,53435349,0,0x0,8
tick,0x7ff86ea82704,53437167,0,0x0,8
tick,0x7ff86ea82704,53439247,0,0x0,8
tick,0x7ff86ea82704,53441230,0,0x0,8
tick,0x7ff86ea82704,53443192,0,0x0,8
tick,0x7ff86ea82704,53445213,0,0x0,8
tick,0x7ff86ea82704,53447322,0,0x0,8
tick,0x7ff86ea82704,53449109,0,0x0,8
tick,0x7ff86ea82704,53451224,0,0x0,8
tick,0x7ff86ea82704,53453094,0,0x0,8
tick,0x7ff86ea82704,53455180,0,0x0,8
tick,0x7ff86ea82704,53457271,0,0x0,8
tick,0x7ff86ea82704,53459058,0,0x0,8
tick,0x7ff86ea82704,53461100,0,0x0,8
tick,0x7ff86ea82704,53463105,0,0x0,8
tick,0x7ff86ea82704,53465101,0,0x0,8
tick,0x7ff86ea82704,53467004,0,0x0,8
tick,0x7ff86ea82704,53469026,0,0x0,8
tick,0x7ff86ea82704,53471026,0,0x0,8
tick,0x7ff86ea82704,53473073,0,0x0,8
tick,0x7ff86ea82704,53475110,0,0x0,8
tick,0x7ff86ea82704,53477149,0,0x0,8
tick,0x7ff86ea82704,53479154,0,0x0,8
tick,0x7ff86ea82704,53481059,0,0x0,8
tick,0x7ff86ea82704,53483063,0,0x0,8
tick,0x7ff86ea82704,53485006,0,0x0,8
tick,0x7ff86ea82704,53487123,0,0x0,8
tick,0x7ff86ea82704,53489054,0,0x0,8
tick,0x7ff86ea82704,53491005,0,0x0,8
tick,0x7ff86ea82704,53493143,0,0x0,8
tick,0x7ff86ea82704,53495021,0,0x0,8
tick,0x7ff86ea82704,53497103,0,0x0,8
tick,0x7ff86ea82704,53498993,0,0x0,8
tick,0x7ff86ea82704,53501118,0,0x0,8
tick,0x7ff86ea82704,53503127,0,0x0,8
tick,0x7ff86ea82704,53505122,0,0x0,8
tick,0x7ff86ea82704,53506958,0,0x0,8
tick,0x7ff86ea82704,53509311,0,0x0,8
tick,0x7ff86ea82704,53510995,0,0x0,8
tick,0x7ff86ea82704,53512999,0,0x0,8
tick,0x7ff86ea82704,53515313,0,0x0,8
tick,0x7ff86ea82704,53516930,0,0x0,8
tick,0x7ff86ea82704,53518959,0,0x0,8
tick,0x7ff86ea82704,53520858,0,0x0,8
tick,0x7ff86ea82704,53522885,0,0x0,8
tick,0x7ff86ea82704,53524849,0,0x0,8
tick,0x7ff86ea82704,53526975,0,0x0,8
tick,0x7ff86ea82704,53529096,0,0x0,8
tick,0x7ff86ea82704,53530993,0,0x0,8
tick,0x7ff86ea82704,53532879,0,0x0,8
tick,0x7ff86ea82704,53534883,0,0x0,8
tick,0x7ff86ea82704,53536868,0,0x0,8
tick,0x7ff86ea82704,53539105,0,0x0,8
tick,0x7ff86ea82704,53540765,0,0x0,8
tick,0x7ff86ea82704,53542813,0,0x0,8
tick,0x7ff86ea82704,53544946,0,0x0,8
tick,0x7ff86ea82704,53546873,0,0x0,8
tick,0x7ff86ea82704,53549097,0,0x0,8
tick,0x7ff86ea82704,53551066,0,0x0,8
tick,0x7ff86ea82704,53553035,0,0x0,8
tick,0x7ff86ea82704,53555182,0,0x0,8
tick,0x7ff86ea82704,53556761,0,0x0,8
tick,0x7ff86ea82704,53558840,0,0x0,8
tick,0x7ff86ea82704,53560891,0,0x0,8
tick,0x7ff86ea82704,53562826,0,0x0,8
tick,0x7ff86ea82704,53564884,0,0x0,8
tick,0x7ff86ea82704,53567037,0,0x0,8
tick,0x7ff86ea82704,53568944,0,0x0,8
tick,0x7ff86ea82704,53571140,0,0x0,8
tick,0x7ff86ea82704,53572832,0,0x0,8
tick,0x7ff86ea82704,53575138,0,0x0,8
tick,0x7ff86ea82704,53576972,0,0x0,8
tick,0x7ff86ea82704,53578971,0,0x0,8
tick,0x7ff86ea82704,53580738,0,0x0,8
tick,0x7ff86ea82704,53583068,0,0x0,8
tick,0x7ff86ea82704,53584985,0,0x0,8
tick,0x7ff86ea82704,53587038,0,0x0,8
tick,0x7ff86ea82704,53589000,0,0x0,8
tick,0x7ff86ea82704,53590871,0,0x0,8
tick,0x7ff86ea82704,53592708,0,0x0,8
tick,0x7ff86ea82704,53594816,0,0x0,8
tick,0x7ff86ea82704,53596662,0,0x0,8
tick,0x7ff86ea82704,53599476,0,0x0,8
tick,0x7ff86ea82704,53600598,0,0x0,8
tick,0x7ff86ea82704,53602620,0,0x0,8
tick,0x7ff86ea82704,53604746,0,0x0,8
tick,0x7ff86ea82704,53606591,0,0x0,8
tick,0x7ff86ea82704,53608538,0,0x0,8
tick,0x7ff86ea82704,53610947,0,0x0,8
tick,0x7ff86ea82704,53612678,0,0x0,8
tick,0x7ff86ea82704,53614706,0,0x0,8
tick,0x7ff86ea82704,53616602,0,0x0,8
tick,0x7ff86ea82704,53618508,0,0x0,8
tick,0x7ff86ea82704,53620554,0,0x0,8
tick,0x7ff86ea82704,53622547,0,0x0,8
tick,0x7ff86ea82704,53624656,0,0x0,8
tick,0x7ff86ea82704,53626498,0,0x0,8
tick,0x7ff86ea82704,53628515,0,0x0,8
tick,0x7ff86ea82704,53630438,0,0x0,8
tick,0x7ff86ea82704,53632502,0,0x0,8
tick,0x7ff86ea82704,53634398,0,0x0,8
tick,0x7ff86ea82704,53636778,0,0x0,8
tick,0x7ff86ea82704,53638537,0,0x0,8
tick,0x7ff86ea82704,53640587,0,0x0,8
tick,0x7ff86ea82704,53642440,0,0x0,8
tick,0x7ff86ea82704,53644512,0,0x0,8
tick,0x7ff86ea82704,53646500,0,0x0,8
tick,0x7ff86ea82704,53648476,0,0x0,8
tick,0x7ff86ea82704,53650522,0,0x0,8
tick,0x7ff86ea82704,53652477,0,0x0,8
tick,0x7ff86ea82704,53654465,0,0x0,8
tick,0x7ff86ea82704,53656463,0,0x0,8
tick,0x7ff86ea82704,53658409,0,0x0,8
tick,0x7ff86ea82704,53660456,0,0x0,8
tick,0x7ff86ea82704,53662386,0,0x0,8
tick,0x7ff86ea82704,53664465,0,0x0,8
tick,0x7ff86ea82704,53666381,0,0x0,8
tick,0x7ff86ea82704,53668445,0,0x0,8
tick,0x7ff86ea82704,53670399,0,0x0,8
tick,0x7ff86ea82704,53672397,0,0x0,8
tick,0x7ff86ea82704,53674419,0,0x0,8
tick,0x7ff86ea82704,53676614,0,0x0,8
tick,0x7ff86ea82704,53678429,0,0x0,8
tick,0x7ff86ea82704,53680427,0,0x0,8
tick,0x7ff86ea82704,53682350,0,0x0,8
tick,0x7ff86ea82704,53684408,0,0x0,8
tick,0x7ff86ea82704,53686426,0,0x0,8
tick,0x7ff86ea82704,53688392,0,0x0,8
tick,0x7ff86ea82704,53690421,0,0x0,8
tick,0x7ff86ea82704,53692465,0,0x0,8
tick,0x7ff86ea82704,53694367,0,0x0,8
tick,0x7ff86ea82704,53696366,0,0x0,8
tick,0x7ff86ea82704,53698370,0,0x0,8
tick,0x7ff86ea82704,53700327,0,0x0,8
tick,0x7ff86ea82704,53702403,0,0x0,8
tick,0x7ff86ea82704,53704357,0,0x0,8
tick,0x7ff86ea82704,53706412,0,0x0,8
tick,0x7ff86ea82704,53708260,0,0x0,8
tick,0x7ff86ea82704,53710337,0,0x0,8
tick,0x7ff86ea82704,53712229,0,0x0,8
tick,0x7ff86ea82704,53714250,0,0x0,8
tick,0x7ff86ea82704,53716299,0,0x0,8
tick,0x7ff86ea82704,53718247,0,0x0,8
tick,0x7ff86ea82704,53720255,0,0x0,8
tick,0x7ff86ea82704,53722169,0,0x0,8
tick,0x7ff86ea82704,53724315,0,0x0,8
tick,0x7ff86ea82704,53726175,0,0x0,8
tick,0x7ff86ea82704,53728267,0,0x0,8
tick,0x7ff86ea82704,53730160,0,0x0,8
tick,0x7ff86ea82704,53732348,0,0x0,8
tick,0x7ff86ea82704,53734170,0,0x0,8
tick,0x7ff86ea82704,53736234,0,0x0,8
tick,0x7ff86ea82704,53738176,0,0x0,8
tick,0x7ff86ea82704,53740282,0,0x0,8
tick,0x7ff86ea82704,53742323,0,0x0,8
tick,0x7ff86ea82704,53744275,0,0x0,8
tick,0x7ff86ea82704,53746084,0,0x0,8
tick,0x7ff86ea82704,53748189,0,0x0,8
tick,0x7ff86ea82704,53750105,0,0x0,8
tick,0x7ff86ea82704,53752209,0,0x0,8
tick,0x7ff86ea82704,53754109,0,0x0,8
tick,0x7ff86ea82704,53756178,0,0x0,8
tick,0x7ff86ea82704,53758181,0,0x0,8
tick,0x7ff86ea82704,53760248,0,0x0,8
tick,0x7ff86ea82704,53762120,0,0x0,8
tick,0x7ff86ea82704,53764136,0,0x0,8
tick,0x7ff86ea82704,53766119,0,0x0,8
tick,0x7ff86ea82704,53768117,0,0x0,8
tick,0x7ff86ea82704,53770050,0,0x0,8
tick,0x7ff86ea82704,53772299,0,0x0,8
tick,0x7ff86ea82704,53774065,0,0x0,8
tick,0x7ff86ea82704,53776061,0,0x0,8
tick,0x7ff86ea82704,53778066,0,0x0,8
tick,0x7ff86ea82704,53780259,0,0x0,8
tick,0x7ff86ea82704,53782023,0,0x0,8
tick,0x7ff86ea82704,53784182,0,0x0,8
tick,0x7ff86ea82704,53788080,0,0x0,8
tick,0x7ff86ea82704,53788962,0,0x0,8
tick,0x7ff86ea82704,53791019,0,0x0,8
tick,0x7ff86ea82704,53793010,0,0x0,8
tick,0x7ff86ea82704,53795029,0,0x0,8
tick,0x7ff86ea82704,53796946,0,0x0,8
tick,0x7ff86ea82704,53798976,0,0x0,8
tick,0x7ff86ea82704,53800918,0,0x0,8
tick,0x7ff86ea82704,53802942,0,0x0,8
tick,0x7ff86ea82704,53804954,0,0x0,8
tick,0x7ff86ea82704,53807118,0,0x0,8
tick,0x7ff86ea82704,53808894,0,0x0,8
tick,0x7ff86ea82704,53810937,0,0x0,8
tick,0x7ff86ea82704,53812949,0,0x0,8
tick,0x7ff86ea82704,53814911,0,0x0,8
tick,0x7ff86ea82704,53817315,0,0x0,8
tick,0x7ff86ea82704,53818956,0,0x0,8
tick,0x7ff86ea82704,53820874,0,0x0,8
tick,0x7ff86ea82704,53822912,0,0x0,8
tick,0x7ff86ea82704,53824895,0,0x0,8
tick,0x7ff86ea82704,53826951,0,0x0,8
tick,0x7ff86ea82704,53828871,0,0x0,8
tick,0x7ff86ea82704,53830865,0,0x0,8
tick,0x7ff86ea82704,53832863,0,0x0,8
tick,0x7ff86ea82704,53834893,0,0x0,8
tick,0x7ff86ea82704,53836827,0,0x0,8
tick,0x7ff86ea82704,53839006,0,0x0,8
tick,0x7ff86ea82704,53840913,0,0x0,8
tick,0x7ff86ea82704,53842893,0,0x0,8
tick,0x7ff86ea82704,53844933,0,0x0,8
tick,0x7ff86ea82704,53846808,0,0x0,8
tick,0x7ff86ea82704,53848854,0,0x0,8
tick,0x7ff86ea82704,53850794,0,0x0,8
tick,0x7ff86ea82704,53852845,0,0x0,8
tick,0x7ff86ea82704,53854851,0,0x0,8
tick,0x7ff86ea82704,53856906,0,0x0,8
tick,0x7ff86ea82704,53858883,0,0x0,8
tick,0x7ff86ea82704,53860865,0,0x0,8
tick,0x7ff86ea82704,53862776,0,0x0,8
tick,0x7ff86ea82704,53864826,0,0x0,8
tick,0x7ff86ea82704,53866759,0,0x0,8
tick,0x7ff86ea82704,53868938,0,0x0,8
tick,0x7ff86ea82704,53870794,0,0x0,8
tick,0x7ff86ea82704,53872728,0,0x0,8
tick,0x7ff86ea82704,53874840,0,0x0,8
tick,0x7ff86ea82704,53876795,0,0x0,8
tick,0x7ff86ea82704,53878764,0,0x0,8
tick,0x7ff86ea82704,53880747,0,0x0,8
tick,0x7ff86ea82704,53882758,0,0x0,8
tick,0x7ff86ea82704,53884719,0,0x0,8
tick,0x7ff86ea82704,53886699,0,0x0,8
tick,0x7ff86ea82704,53888710,0,0x0,8
tick,0x7ff86ea82704,53890720,0,0x0,8
tick,0x7ff86ea82704,53892726,0,0x0,8
tick,0x7ff86ea82704,53894685,0,0x0,8
tick,0x7ff86ea82704,53896714,0,0x0,8
tick,0x7ff86ea82704,53898774,0,0x0,8
tick,0x7ff86ea82704,53900768,0,0x0,8
tick,0x7ff86ea82704,53902784,0,0x0,8
tick,0x7ff86ea82704,53904759,0,0x0,8
tick,0x7ff86ea82704,53906651,0,0x0,8
tick,0x7ff86ea82704,53908813,0,0x0,8
tick,0x7ff86ea82704,53910641,0,0x0,8
tick,0x7ff86ea82704,53912674,0,0x0,8
tick,0x7ff86ea82704,53914591,0,0x0,8
tick,0x7ff86ea82704,53916719,0,0x0,8
tick,0x7ff86ea82704,53918665,0,0x0,8
tick,0x7ff86ea82704,53920841,0,0x0,8
tick,0x7ff86ea82704,53922625,0,0x0,8
tick,0x7ff86ea82704,53924725,0,0x0,8
tick,0x7ff86ea82704,53926614,0,0x0,8
tick,0x7ff86ea82704,53928613,0,0x0,8
tick,0x7ff86ea82704,53930613,0,0x0,8
tick,0x7ff86ea82704,53932661,0,0x0,8
tick,0x7ff86ea82704,53934584,0,0x0,8
tick,0x7ff86ea82704,53936583,0,0x0,8
tick,0x7ff86ea82704,53938618,0,0x0,8
tick,0x7ff86ea82704,53940607,0,0x0,8
tick,0x7ff86ea82704,53942566,0,0x0,8
tick,0x7ff86ea82704,53944603,0,0x0,8
tick,0x7ff86ea82704,53946549,0,0x0,8
tick,0x7ff86ea82704,53948557,0,0x0,8
tick,0x7ff86ea82704,53950519,0,0x0,8
tick,0x7ff86ea82704,53952585,0,0x0,8
tick,0x7ff86ea82704,53954639,0,0x0,8
tick,0x7ff86ea82704,53956533,0,0x0,8
tick,0x7ff86ea82704,53958589,0,0x0,8
tick,0x7ff86ea82704,53960543,0,0x0,8
tick,0x7ff86ea82704,53962531,0,0x0,8
tick,0x7ff86ea82704,53964549,0,0x0,8
tick,0x7ff86ea82704,53966589,0,0x0,8
tick,0x7ff86ea82704,53968469,0,0x0,8
tick,0x7ff86ea82704,53970513,0,0x0,8
tick,0x7ff86ea82704,53972475,0,0x0,8
tick,0x7ff86ea82704,53974499,0,0x0,8
tick,0x7ff86ea82704,53976538,0,0x0,8
tick,0x7ff86ea82704,53978469,0,0x0,8
tick,0x7ff86ea82704,53980462,0,0x0,8
tick,0x7ff86ea82704,53982577,0,0x0,8
tick,0x7ff86ea82704,53984472,0,0x0,8
tick,0x7ff86ea82704,53986592,0,0x0,8
tick,0x7ff86ea82704,53988490,0,0x0,8
tick,0x7ff86ea82704,53990445,0,0x0,8
tick,0x7ff86ea82704,53992483,0,0x0,8
tick,0x7ff86ea82704,53994433,0,0x0,8
tick,0x7ff86ea82704,53996451,0,0x0,8
tick,0x7ff86ea82704,53998517,0,0x0,8
tick,0x7ff86ea82704,54000424,0,0x0,8
tick,0x7ff86ea82704,54002418,0,0x0,8
tick,0x7ff86ea82704,54004398,0,0x0,8
tick,0x7ff86ea82704,54006632,0,0x0,8
tick,0x7ff86ea82704,54008404,0,0x0,8
tick,0x7ff86ea82704,54010391,0,0x0,8
tick,0x7ff86ea82704,54012384,0,0x0,8
tick,0x7ff86ea82704,54014417,0,0x0,8
tick,0x7ff86ea82704,54016445,0,0x0,8
tick,0x7ff86ea82704,54018447,0,0x0,8
tick,0x7ff86ea82704,54020385,0,0x0,8
tick,0x7ff86ea82704,54022423,0,0x0,8
tick,0x7ff86ea82704,54024375,0,0x0,8
tick,0x7ff86ea82704,54026385,0,0x0,8
tick,0x7ff86ea82704,54028308,0,0x0,8
tick,0x7ff86ea82704,54030447,0,0x0,8
tick,0x7ff86ea82704,54032481,0,0x0,8
tick,0x7ff86ea82704,54034338,0,0x0,8
tick,0x7ff86ea82704,54036317,0,0x0,8
tick,0x7ff86ea82704,54038361,0,0x0,8
tick,0x7ff86ea82704,54040267,0,0x0,8
tick,0x7ff86ea82704,54042392,0,0x0,8
tick,0x7ff86ea82704,54044278,0,0x0,8
tick,0x7ff86ea82704,54046320,0,0x0,8
tick,0x7ff86ea82704,54048256,0,0x0,8
tick,0x7ff86ea82704,54050308,0,0x0,8
tick,0x7ff86ea82704,54052253,0,0x0,8
tick,0x7ff86ea82704,54054304,0,0x0,8
tick,0x7ff86ea82704,54056303,0,0x0,8
tick,0x7ff86ea82704,54058254,0,0x0,8
tick,0x7ff86ea82704,54060337,0,0x0,8
tick,0x7ff86ea82704,54062283,0,0x0,8
tick,0x7ff86ea82704,54064247,0,0x0,8
tick,0x7ff86ea82704,54066395,0,0x0,8
tick,0x7ff86ea82704,54068265,0,0x0,8
tick,0x7ff86ea82704,54070510,0,0x0,8
tick,0x7ff86ea82704,54072250,0,0x0,8
tick,0x7ff86ea82704,54074275,0,0x0,8
tick,0x7ff86ea82704,54076199,0,0x0,8
tick,0x7ff86ea82704,54078242,0,0x0,8
tick,0x7ff86ea82704,54080452,0,0x0,8
tick,0x7ff86ea82704,54082182,0,0x0,8
tick,0x7ff86ea82704,54084244,0,0x0,8
tick,0x7ff86ea82704,54086188,0,0x0,8
tick,0x7ff86ea82704,54088194,0,0x0,8
tick,0x7ff86ea82704,54090191,0,0x0,8
tick,0x7ff86ea82704,54092154,0,0x0,8
tick,0x7ff86ea82704,54094230,0,0x0,8
tick,0x7ff86ea82704,54096164,0,0x0,8
tick,0x7ff86ea82704,54098161,0,0x0,8
tick,0x7ff86ea82704,54100195,0,0x0,8
tick,0x7ff86ea82704,54102177,0,0x0,8
tick,0x7ff86ea82704,54104274,0,0x0,8
tick,0x7ff86ea82704,54106128,0,0x0,8
tick,0x7ff86ea82704,54108117,0,0x0,8
tick,0x7ff86ea82704,54110143,0,0x0,8
tick,0x7ff86ea82704,54112207,0,0x0,8
tick,0x7ff86ea82704,54114181,0,0x0,8
tick,0x7ff86ea82704,54116231,0,0x0,8
tick,0x7ff86ea82704,54118105,0,0x0,8
tick,0x7ff86ea82704,54120129,0,0x0,8
tick,0x7ff86ea82704,54122193,0,0x0,8
tick,0x7ff86ea82704,54124103,0,0x0,8
tick,0x7ff86ea82704,54126086,0,0x0,8
tick,0x7ff86ea82704,54128113,0,0x0,8
tick,0x7ff86ea82704,54130104,0,0x0,8
tick,0x7ff86ea82704,54132027,0,0x0,8
tick,0x7ff86ea82704,54134183,0,0x0,8
tick,0x7ff86ea82704,54136014,0,0x0,8
tick,0x7ff86ea82704,54138069,0,0x0,8
tick,0x7ff86ea82704,54140061,0,0x0,8
tick,0x7ff86ea82704,54142063,0,0x0,8
tick,0x7ff86ea82704,54144027,0,0x0,8
tick,0x7ff86ea82704,54146037,0,0x0,8
tick,0x7ff86ea82704,54147996,0,0x0,8
tick,0x7ff86ea82704,54149997,0,0x0,8
tick,0x7ff86ea82704,54151992,0,0x0,8
tick,0x7ff86ea82704,54154020,0,0x0,8
tick,0x7ff86ea82704,54156043,0,0x0,8
tick,0x7ff86ea82704,54158086,0,0x0,8
tick,0x7ff86ea82704,54160104,0,0x0,8
tick,0x7ff86ea82704,54162202,0,0x0,8
tick,0x7ff86ea82704,54165415,0,0x0,8
tick,0x7ff86ea82704,54167275,0,0x0,8
tick,0x7ff86ea82704,54169132,0,0x0,8
tick,0x7ff86ea82704,54171431,0,0x0,8
tick,0x7ff86ea82704,54173252,0,0x0,8
tick,0x7ff86ea82704,54175217,0,0x0,8
tick,0x7ff86ea82704,54177112,0,0x0,8
tick,0x7ff86ea82704,54179081,0,0x0,8
tick,0x7ff86ea82704,54181031,0,0x0,8
tick,0x7ff86ea82704,54183324,0,0x0,8
tick,0x7ff86ea82704,54185041,0,0x0,8
tick,0x7ff86ea82704,54187272,0,0x0,8
tick,0x7ff86ea82704,54189241,0,0x0,8
tick,0x7ff86ea82704,54191271,0,0x0,8
tick,0x7ff86ea82704,54193286,0,0x0,8
tick,0x7ff86ea82704,54195516,0,0x0,8
tick,0x7ff86ea82704,54197710,0,0x0,8
tick,0x7ff86ea82704,54199127,0,0x0,8
tick,0x7ff86ea82704,54201132,0,0x0,8
tick,0x7ff86ea82704,54203019,0,0x0,8
tick,0x7ff86ea82704,54205139,0,0x0,8
tick,0x7ff86ea82704,54206972,0,0x0,8
tick,0x7ff86ea82704,54209213,0,0x0,8
tick,0x7ff86ea82704,54210993,0,0x0,8
tick,0x7ff86ea82704,54213018,0,0x0,8
tick,0x7ff86ea82704,54214973,0,0x0,8
tick,0x7ff86ea82704,54217134,0,0x0,8
tick,0x7ff86ea82704,54218880,0,0x0,8
tick,0x7ff86ea82704,54220998,0,0x0,8
tick,0x7ff86ea82704,54222938,0,0x0,8
tick,0x7ff86ea82704,54225034,0,0x0,8
tick,0x7ff86ea82704,54226997,0,0x0,8
tick,0x7ff86ea82704,54228993,0,0x0,8
tick,0x7ff86ea82704,54230949,0,0x0,8
tick,0x7ff86ea82704,54232963,0,0x0,8
tick,0x7ff86ea82704,54234948,0,0x0,8
tick,0x7ff86ea82704,54236980,0,0x0,8
tick,0x7ff86ea82704,54238941,0,0x0,8
tick,0x7ff86ea82704,54240986,0,0x0,8
tick,0x7ff86ea82704,54242898,0,0x0,8
tick,0x7ff86ea82704,54244973,0,0x0,8
tick,0x7ff86ea82704,54246816,0,0x0,8
tick,0x7ff86ea82704,54248896,0,0x0,8
tick,0x7ff86ea82704,54250818,0,0x0,8
tick,0x7ff86ea82704,54252955,0,0x0,8
tick,0x7ff86ea82704,54254800,0,0x0,8
tick,0x7ff86ea82704,54257001,0,0x0,8
tick,0x7ff86ea82704,54258854,0,0x0,8
tick,0x7ff86ea82704,54261168,0,0x0,8
tick,0x7ff86ea82704,54262966,0,0x0,8
tick,0x7ff86ea82704,54264943,0,0x0,8
tick,0x7ff86ea82704,54266785,0,0x0,8
tick,0x7ff86ea82704,54268909,0,0x0,8
tick,0x7ff86ea82704,54270893,0,0x0,8
tick,0x7ff86ea82704,54272882,0,0x0,8
tick,0x7ff86ea82704,54274815,0,0x0,8
tick,0x7ff86ea82704,54276889,0,0x0,8
tick,0x7ff86ea82704,54278804,0,0x0,8
tick,0x7ff86ea82704,54280753,0,0x0,8
tick,0x7ff86ea82704,54282817,0,0x0,8
tick,0x7ff86ea82704,54284728,0,0x0,8
tick,0x7ff86ea82704,54286798,0,0x0,8
tick,0x7ff86ea82704,54288826,0,0x0,8
tick,0x7ff86ea82704,54290724,0,0x0,8
tick,0x7ff86ea82704,54292739,0,0x0,8
tick,0x7ff86ea82704,54294805,0,0x0,8
tick,0x7ff86ea82704,54296783,0,0x0,8
tick,0x7ff86ea82704,54298726,0,0x0,8
tick,0x7ff86ea82704,54300760,0,0x0,8
tick,0x7ff86ea82704,54302723,0,0x0,8
tick,0x7ff86ea82704,54304757,0,0x0,8
tick,0x7ff86ea82704,54306844,0,0x0,8
tick,0x7ff86ea82704,54308763,0,0x0,8
tick,0x7ff86ea82704,54310755,0,0x0,8
tick,0x7ff86ea82704,54312725,0,0x0,8
tick,0x7ff86ea82704,54314802,0,0x0,8
tick,0x7ff86ea82704,54316704,0,0x0,8
tick,0x7ff86ea82704,54318818,0,0x0,8
tick,0x7ff86ea82704,54320709,0,0x0,8
tick,0x7ff86ea82704,54322693,0,0x0,8
tick,0x7ff86ea82704,54324622,0,0x0,8
tick,0x7ff86ea82704,54326646,0,0x0,8
tick,0x7ff86ea82704,54328850,0,0x0,8
tick,0x7ff86ea82704,54330759,0,0x0,8
tick,0x7ff86ea82704,54332695,0,0x0,8
tick,0x7ff86ea82704,54334703,0,0x0,8
tick,0x7ff86ea82704,54336752,0,0x0,8
tick,0x7ff86ea82704,54338545,0,0x0,8
tick,0x7ff86ea82704,54340750,0,0x0,8
tick,0x7ff86ea82704,54342792,0,0x0,8
tick,0x7ff86ea82704,54344704,0,0x0,8
tick,0x7ff86ea82704,54346735,0,0x0,8
tick,0x7ff86ea82704,54348750,0,0x0,8
tick,0x7ff86ea82704,54350644,0,0x0,8
tick,0x7ff86ea82704,54352682,0,0x0,8
tick,0x7ff86ea82704,54354597,0,0x0,8
tick,0x7ff86ea82704,54356885,0,0x0,8
tick,0x7ff86ea82704,54358690,0,0x0,8
tick,0x7ff86ea82704,54360611,0,0x0,8
tick,0x7ff86ea82704,54362632,0,0x0,8
tick,0x7ff86ea82704,54364672,0,0x0,8
tick,0x7ff86ea82704,54366528,0,0x0,8
tick,0x7ff86ea82704,54368624,0,0x0,8
tick,0x7ff86ea82704,54370539,0,0x0,8
tick,0x7ff86ea82704,54372557,0,0x0,8
tick,0x7ff86ea82704,54374618,0,0x0,8
tick,0x7ff86ea82704,54376520,0,0x0,8
tick,0x7ff86ea82704,54378611,0,0x0,8
tick,0x7ff86ea82704,54380538,0,0x0,8
tick,0x7ff86ea82704,54382501,0,0x0,8
tick,0x7ff86ea82704,54384654,0,0x0,8
tick,0x7ff86ea82704,54386493,0,0x0,8
tick,0x7ff86ea82704,54388589,0,0x0,8
tick,0x7ff86ea82704,54390596,0,0x0,8
tick,0x7ff86ea82704,54392579,0,0x0,8
tick,0x7ff86ea82704,54394459,0,0x0,8
tick,0x7ff86ea82704,54396486,0,0x0,8
tick,0x7ff86ea82704,54398481,0,0x0,8
tick,0x7ff86ea82704,54400559,0,0x0,8
tick,0x7ff86ea82704,54402429,0,0x0,8
tick,0x7ff86ea82704,54404723,0,0x0,8
tick,0x7ff86ea82704,54406466,0,0x0,8
tick,0x7ff86ea82704,54408602,0,0x0,8
tick,0x7ff86ea82704,54410479,0,0x0,8
tick,0x7ff86ea82704,54412655,0,0x0,8
tick,0x7ff86ea82704,54414399,0,0x0,8
tick,0x7ff86ea82704,54416527,0,0x0,8
tick,0x7ff86ea82704,54418497,0,0x0,8
tick,0x7ff86ea82704,54420493,0,0x0,8
tick,0x7ff86ea82704,54422369,0,0x0,8
tick,0x7ff86ea82704,54424425,0,0x0,8
tick,0x7ff86ea82704,54426456,0,0x0,8
tick,0x7ff86ea82704,54428417,0,0x0,8
tick,0x7ff86ea82704,54430516,0,0x0,8
tick,0x7ff86ea82704,54432510,0,0x0,8
tick,0x7ff86ea82704,54434389,0,0x0,8
tick,0x7ff86ea82704,54436405,0,0x0,8
tick,0x7ff86ea82704,54438289,0,0x0,8
tick,0x7ff86ea82704,54440324,0,0x0,8
tick,0x7ff86ea82704,54442643,0,0x0,8
tick,0x7ff86ea82704,54444407,0,0x0,8
tick,0x7ff86ea82704,54446341,0,0x0,8
tick,0x7ff86ea82704,54448378,0,0x0,8
tick,0x7ff86ea82704,54450372,0,0x0,8
tick,0x7ff86ea82704,54452367,0,0x0,8
tick,0x7ff86ea82704,54454371,0,0x0,8
tick,0x7ff86ea82704,54456358,0,0x0,8
tick,0x7ff86ea82704,54458477,0,0x0,8
tick,0x7ff86ea82704,54460370,0,0x0,8
tick,0x7ff86ea82704,54462408,0,0x0,8
tick,0x7ff86ea82704,54464305,0,0x0,8
tick,0x7ff86ea82704,54466486,0,0x0,8
tick,0x7ff86ea82704,54468288,0,0x0,8
tick,0x7ff86ea82704,54470367,0,0x0,8
tick,0x7ff86ea82704,54472306,0,0x0,8
tick,0x7ff86ea82704,54474329,0,0x0,8
tick,0x7ff86ea82704,54476349,0,0x0,8
tick,0x7ff86ea82704,54478261,0,0x0,8
tick,0x7ff86ea82704,54480448,0,0x0,8
tick,0x7ff86ea82704,54482279,0,0x0,8
tick,0x7ff86ea82704,54484356,0,0x0,8
tick,0x7ff86ea82704,54486267,0,0x0,8
tick,0x7ff86ea82704,54488248,0,0x0,8
tick,0x7ff86ea82704,54490298,0,0x0,8
tick,0x7ff86ea82704,54492373,0,0x0,8
tick,0x7ff86ea82704,54494332,0,0x0,8
tick,0x7ff86ea82704,54496338,0,0x0,8
tick,0x7ff86ea82704,54498188,0,0x0,8
tick,0x7ff86ea82704,54500374,0,0x0,8
tick,0x7ff86ea82704,54502219,0,0x0,8
tick,0x7ff86ea82704,54504319,0,0x0,8
tick,0x7ff86ea82704,54506325,0,0x0,8
tick,0x7ff86ea82704,54508268,0,0x0,8
tick,0x7ff86ea82704,54510145,0,0x0,8
tick,0x7ff86ea82704,54512338,0,0x0,8
tick,0x7ff86ea82704,54514143,0,0x0,8
tick,0x7ff86ea82704,54516301,0,0x0,8
tick,0x7ff86ea82704,54518155,0,0x0,8
tick,0x7ff86ea82704,54520335,0,0x0,8
tick,0x7ff86ea82704,54522196,0,0x0,8
tick,0x7ff86ea82704,54524276,0,0x0,8
tick,0x7ff86ea82704,54526213,0,0x0,8
tick,0x7ff86ea82704,54528130,0,0x0,8
tick,0x7ff86ea82704,54530226,0,0x0,8
tick,0x7ff86ea82704,54532226,0,0x0,8
tick,0x7ff86ea82704,54534078,0,0x0,8
tick,0x7ff86ea82704,54536271,0,0x0,8
tick,0x7ff86ea82704,54538007,0,0x0,8
tick,0x7ff86ea82704,54540361,0,0x0,8
tick,0x7ff86ea82704,54542298,0,0x0,8
tick,0x7ff86ea82704,54544180,0,0x0,8
tick,0x7ff86ea82704,54546078,0,0x0,8
tick,0x7ff86ea82704,54548185,0,0x0,8
tick,0x7ff86ea82704,54550029,0,0x0,8
tick,0x7ff86ea82704,54552181,0,0x0,8
tick,0x7ff86ea82704,54554046,0,0x0,8
tick,0x7ff86ea82704,54556097,0,0x0,8
tick,0x7ff86ea82704,54558146,0,0x0,8
tick,0x7ff86ea82704,54559984,0,0x0,8
tick,0x7ff86ea82704,54562327,0,0x0,8
tick,0x7ff86ea82704,54565890,0,0x0,8
tick,0x7ff86ea82704,54566936,0,0x0,8
tick,0x7ff86ea82704,54568948,0,0x0,8
tick,0x7ff86ea82704,54570936,0,0x0,8
tick,0x7ff86ea82704,54572944,0,0x0,8
tick,0x7ff86ea82704,54574912,0,0x0,8
tick,0x7ff86ea82704,54576883,0,0x0,8
tick,0x7ff86ea82704,54578812,0,0x0,8
tick,0x7ff86ea82704,54580935,0,0x0,8
tick,0x7ff86ea82704,54582871,0,0x0,8
tick,0x7ff86ea82704,54584902,0,0x0,8
tick,0x7ff86ea82704,54586884,0,0x0,8
tick,0x7ff86ea82704,54588909,0,0x0,8
tick,0x7ff86ea82704,54590845,0,0x0,8
tick,0x7ff86ea82704,54592839,0,0x0,8
tick,0x7ff86ea82704,54594794,0,0x0,8
tick,0x7ff86ea82704,54596915,0,0x0,8
tick,0x7ff86ea82704,54598845,0,0x0,8
tick,0x7ff86ea82704,54600831,0,0x0,8
tick,0x7ff86ea82704,54602792,0,0x0,8
tick,0x7ff86ea82704,54604896,0,0x0,8
tick,0x7ff86ea82704,54606877,0,0x0,8
tick,0x7ff86ea82704,54608917,0,0x0,8
tick,0x7ff86ea82704,54610826,0,0x0,8
tick,0x7ff86ea82704,54612849,0,0x0,8
tick,0x7ff86ea82704,54614810,0,0x0,8
tick,0x7ff86ea82704,54616829,0,0x0,8
tick,0x7ff86ea82704,54618723,0,0x0,8
tick,0x7ff86ea82704,54620811,0,0x0,8
tick,0x7ff86ea82704,54622762,0,0x0,8
tick,0x7ff86ea82704,54624872,0,0x0,8
tick,0x7ff86ea82704,54626734,0,0x0,8
tick,0x7ff86ea82704,54628867,0,0x0,8
tick,0x7ff86ea82704,54630777,0,0x0,8
tick,0x7ff86ea82704,54632787,0,0x0,8
tick,0x7ff86ea82704,54634747,0,0x0,8
tick,0x7ff86ea82704,54636810,0,0x0,8
tick,0x7ff86ea82704,54638714,0,0x0,8
tick,0x7ff86ea82704,54640759,0,0x0,8
tick,0x7ff86ea82704,54642695,0,0x0,8
tick,0x7ff86ea82704,54644960,0,0x0,8
tick,0x7ff86ea82704,54646662,0,0x0,8
tick,0x7ff86ea82704,54648764,0,0x0,8
tick,0x7ff86ea82704,54650715,0,0x0,8
tick,0x7ff86ea82704,54652875,0,0x0,8
tick,0x7ff86ea82704,54654703,0,0x0,8
tick,0x7ff86ea82704,54656795,0,0x0,8
tick,0x7ff86ea82704,54658661,0,0x0,8
tick,0x7ff86ea82704,54660868,0,0x0,8
tick,0x7ff86ea82704,54662665,0,0x0,8
tick,0x7ff86ea82704,54664681,0,0x0,8
tick,0x7ff86ea82704,54666679,0,0x0,8
tick,0x7ff86ea82704,54668632,0,0x0,8
tick,0x7ff86ea82704,54670717,0,0x0,8
tick,0x7ff86ea82704,54672672,0,0x0,8
tick,0x7ff86ea82704,54674675,0,0x0,8
tick,0x7ff86ea82704,54676641,0,0x0,8
tick,0x7ff86ea82704,54678718,0,0x0,8
tick,0x7ff86ea82704,54680644,0,0x0,8
tick,0x7ff86ea82704,54682582,0,0x0,8
tick,0x7ff86ea82704,54684629,0,0x0,8
tick,0x7ff86ea82704,54686584,0,0x0,8
tick,0x7ff86ea82704,54688687,0,0x0,8
tick,0x7ff86ea82704,54690590,0,0x0,8
tick,0x7ff86ea82704,54692630,0,0x0,8
tick,0x7ff86ea82704,54694617,0,0x0,8
tick,0x7ff86ea82704,54696609,0,0x0,8
tick,0x7ff86ea82704,54698585,0,0x0,8
tick,0x7ff86ea82704,54700599,0,0x0,8
tick,0x7ff86ea82704,54702629,0,0x0,8
tick,0x7ff86ea82704,54704608,0,0x0,8
tick,0x7ff86ea82704,54706608,0,0x0,8
tick,0x7ff86ea82704,54708578,0,0x0,8
tick,0x7ff86ea82704,54710529,0,0x0,8
tick,0x7ff86ea82704,54712498,0,0x0,8
tick,0x7ff86ea82704,54714603,0,0x0,8
tick,0x7ff86ea82704,54716499,0,0x0,8
tick,0x7ff86ea82704,54718536,0,0x0,8
tick,0x7ff86ea82704,54720513,0,0x0,8
tick,0x7ff86ea82704,54722570,0,0x0,8
tick,0x7ff86ea82704,54724496,0,0x0,8
tick,0x7ff86ea82704,54726538,0,0x0,8
tick,0x7ff86ea82704,54728491,0,0x0,8
tick,0x7ff86ea82704,54730523,0,0x0,8
tick,0x7ff86ea82704,54732468,0,0x0,8
tick,0x7ff86ea82704,54734544,0,0x0,8
tick,0x7ff86ea82704,54736456,0,0x0,8
tick,0x7ff86ea82704,54738469,0,0x0,8
tick,0x7ff86ea82704,54740474,0,0x0,8
tick,0x7ff86ea82704,54742515,0,0x0,8
tick,0x7ff86ea82704,54744438,0,0x0,8
tick,0x7ff86ea82704,54746486,0,0x0,8
tick,0x7ff86ea82704,54748426,0,0x0,8
tick,0x7ff86ea82704,54750470,0,0x0,8
tick,0x7ff86ea82704,54752503,0,0x0,8
tick,0x7ff86ea82704,54754480,0,0x0,8
tick,0x7ff86ea82704,54756406,0,0x0,8
tick,0x7ff86ea82704,54758454,0,0x0,8
tick,0x7ff86ea82704,54760390,0,0x0,8
tick,0x7ff86ea82704,54762461,0,0x0,8
tick,0x7ff86ea82704,54764369,0,0x0,8
tick,0x7ff86ea82704,54766454,0,0x0,8
tick,0x7ff86ea82704,54768374,0,0x0,8
tick,0x7ff86ea82704,54770393,0,0x0,8
tick,0x7ff86ea82704,54772340,0,0x0,8
tick,0x7ff86ea82704,54774370,0,0x0,8
tick,0x7ff86ea82704,54776392,0,0x0,8
tick,0x7ff86ea82704,54778433,0,0x0,8
tick,0x7ff86ea82704,54780384,0,0x0,8
tick,0x7ff86ea82704,54782361,0,0x0,8
tick,0x7ff86ea82704,54784341,0,0x0,8
tick,0x7ff86ea82704,54786431,0,0x0,8
tick,0x7ff86ea82704,54788314,0,0x0,8
tick,0x7ff86ea82704,54790364,0,0x0,8
tick,0x7ff86ea82704,54792411,0,0x0,8
tick,0x7ff86ea82704,54794273,0,0x0,8
tick,0x7ff86ea82704,54796344,0,0x0,8
tick,0x7ff86ea82704,54798345,0,0x0,8
tick,0x7ff86ea82704,54800545,0,0x0,8
tick,0x7ff86ea82704,54802272,0,0x0,8
tick,0x7ff86ea82704,54804296,0,0x0,8
tick,0x7ff86ea82704,54806309,0,0x0,8
tick,0x7ff86ea82704,54808348,0,0x0,8
tick,0x7ff86ea82704,54810245,0,0x0,8
tick,0x7ff86ea82704,54812356,0,0x0,8
tick,0x7ff86ea82704,54814220,0,0x0,8
tick,0x7ff86ea82704,54816336,0,0x0,8
tick,0x7ff86ea82704,54818269,0,0x0,8
tick,0x7ff86ea82704,54820310,0,0x0,8
tick,0x7ff86ea82704,54822309,0,0x0,8
tick,0x7ff86ea82704,54824390,0,0x0,8
tick,0x7ff86ea82704,54826195,0,0x0,8
tick,0x7ff86ea82704,54828293,0,0x0,8
tick,0x7ff86ea82704,54830192,0,0x0,8
tick,0x7ff86ea82704,54832282,0,0x0,8
tick,0x7ff86ea82704,54834201,0,0x0,8
tick,0x7ff86ea82704,54836252,0,0x0,8
tick,0x7ff86ea82704,54838187,0,0x0,8
tick,0x7ff86ea82704,54840304,0,0x0,8
tick,0x7ff86ea82704,54842270,0,0x0,8
tick,0x7ff86ea82704,54844232,0,0x0,8
tick,0x7ff86ea82704,54846197,0,0x0,8
tick,0x7ff86ea82704,54848226,0,0x0,8
tick,0x7ff86ea82704,54850170,0,0x0,8
tick,0x7ff86ea82704,54852170,0,0x0,8
tick,0x7ff86ea82704,54854246,0,0x0,8
tick,0x7ff86ea82704,54856165,0,0x0,8
tick,0x7ff86ea82704,54858164,0,0x0,8
tick,0x7ff86ea82704,54860184,0,0x0,8
tick,0x7ff86ea82704,54862224,0,0x0,8
tick,0x7ff86ea82704,54864198,0,0x0,8
tick,0x7ff86ea82704,54866176,0,0x0,8
tick,0x7ff86ea82704,54868148,0,0x0,8
tick,0x7ff86ea82704,54870171,0,0x0,8
tick,0x7ff86ea82704,54872142,0,0x0,8
tick,0x7ff86ea82704,54874155,0,0x0,8
tick,0x7ff86ea82704,54876127,0,0x0,8
tick,0x7ff86ea82704,54878201,0,0x0,8
tick,0x7ff86ea82704,54880093,0,0x0,8
tick,0x7ff86ea82704,54882080,0,0x0,8
tick,0x7ff86ea82704,54884093,0,0x0,8
tick,0x7ff86ea82704,54886095,0,0x0,8
tick,0x7ff86ea82704,54888114,0,0x0,8
tick,0x7ff86ea82704,54890063,0,0x0,8
tick,0x7ff86ea82704,54892152,0,0x0,8
tick,0x7ff86ea82704,54894093,0,0x0,8
tick,0x7ff86ea82704,54896129,0,0x0,8
tick,0x7ff86ea82704,54898058,0,0x0,8
tick,0x7ff86ea82704,54900044,0,0x0,8
tick,0x7ff86ea82704,54902046,0,0x0,8
tick,0x7ff86ea82704,54904059,0,0x0,8
tick,0x7ff86ea82704,54906009,0,0x0,8
tick,0x7ff86ea82704,54908031,0,0x0,8
tick,0x7ff86ea82704,54910024,0,0x0,8
tick,0x7ff86ea82704,54912095,0,0x0,8
tick,0x7ff86ea82704,54914117,0,0x0,8
tick,0x7ff86ea82704,54916103,0,0x0,8
tick,0x7ff86ea82704,54917981,0,0x0,8
tick,0x7ff86ea82704,54920146,0,0x0,8
tick,0x7ff86ea82704,54922069,0,0x0,8
tick,0x7ff86ea82704,54924137,0,0x0,8
tick,0x7ff86ea82704,54926116,0,0x0,8
tick,0x7ff86ea82704,54928041,0,0x0,8
tick,0x7ff86ea82704,54929963,0,0x0,8
tick,0x7ff86ea82704,54932005,0,0x0,8
tick,0x7ff86ea82704,54933969,0,0x0,8
tick,0x7ff86ea82704,54936037,0,0x0,8
tick,0x7ff86ea82704,54937975,0,0x0,8
tick,0x7ff86ea82704,54940013,0,0x0,8
tick,0x7ff86ea82704,54941977,0,0x0,8
tick,0x7ff86ea82704,54944017,0,0x0,8
tick,0x7ff86ea82704,54946015,0,0x0,8
tick,0x7ff86ea82704,54947973,0,0x0,8
tick,0x7ff86ea82704,54949990,0,0x0,8
tick,0x7ff86ea82704,54951868,0,0x0,8
tick,0x7ff86ea82704,54953992,0,0x0,8
tick,0x7ff86ea82704,54955845,0,0x0,8
tick,0x7ff86ea82704,54957995,0,0x0,8
tick,0x7ff86ea82704,54959871,0,0x0,8
tick,0x7ff86ea82704,54961917,0,0x0,8
tick,0x7ff86ea82704,54963828,0,0x0,8
tick,0x7ff86ea82704,54965942,0,0x0,8
tick,0x7ff86ea82704,54967877,0,0x0,8
tick,0x7ff86ea82704,54969956,0,0x0,8
tick,0x7ff86ea82704,54971834,0,0x0,8
tick,0x7ff86ea82704,54973940,0,0x0,8
tick,0x7ff86ea82704,54975911,0,0x0,8
tick,0x7ff86ea82704,54977878,0,0x0,8
tick,0x7ff86ea82704,54979913,0,0x0,8
tick,0x7ff86ea82704,54981855,0,0x0,8
tick,0x7ff86ea82704,54983822,0,0x0,8
tick,0x7ff86ea82704,54985883,0,0x0,8
tick,0x7ff86ea82704,54987850,0,0x0,8
tick,0x7ff86ea82704,54989856,0,0x0,8
tick,0x7ff86ea82704,54991860,0,0x0,8
tick,0x7ff86ea82704,54993804,0,0x0,8
tick,0x7ff86ea82704,54995735,0,0x0,8
tick,0x7ff86ea82704,54997848,0,0x0,8
tick,0x7ff86ea82704,54999784,0,0x0,8
tick,0x7ff86ea82704,55001863,0,0x0,8
tick,0x7ff86ea82704,55003774,0,0x0,8
tick,0x7ff86ea82704,55005845,0,0x0,8
tick,0x7ff86ea82704,55007749,0,0x0,8
tick,0x7ff86ea82704,55009819,0,0x0,8
tick,0x7ff86ea82704,55011734,0,0x0,8
tick,0x7ff86ea82704,55013792,0,0x0,8
tick,0x7ff86ea82704,55015664,0,0x0,8
tick,0x7ff86ea82704,55017818,0,0x0,8
tick,0x7ff86ea82704,55019699,0,0x0,8
tick,0x7ff86ea82704,55021722,0,0x0,8
tick,0x7ff86ea82704,55023768,0,0x0,8
tick,0x7ff86ea82704,55025752,0,0x0,8
tick,0x7ff86ea82704,55027684,0,0x0,8
tick,0x7ff86ea82704,55029753,0,0x0,8
tick,0x7ff86ea82704,55031698,0,0x0,8
tick,0x7ff86ea82704,55033771,0,0x0,8
tick,0x7ff86ea82704,55035708,0,0x0,8
tick,0x7ff86ea82704,55037746,0,0x0,8
tick,0x7ff86ea82704,55039681,0,0x0,8
tick,0x7ff86ea82704,55041748,0,0x0,8
tick,0x7ff86ea82704,55043613,0,0x0,8
tick,0x7ff86ea82704,55045746,0,0x0,8
tick,0x7ff86ea82704,55047622,0,0x0,8
tick,0x7ff86ea82704,55049725,0,0x0,8
tick,0x7ff86ea82704,55051648,0,0x0,8
tick,0x7ff86ea82704,55053683,0,0x0,8
tick,0x7ff86ea82704,55055628,0,0x0,8
tick,0x7ff86ea82704,55057683,0,0x0,8
tick,0x7ff86ea82704,55059633,0,0x0,8
tick,0x7ff86ea82704,55061620,0,0x0,8
tick,0x7ff86ea82704,55063567,0,0x0,8
tick,0x7ff86ea82704,55065673,0,0x0,8
tick,0x7ff86ea82704,55067954,0,0x0,8
tick,0x7ff86ea82704,55069752,0,0x0,8
tick,0x7ff86ea82704,55071740,0,0x0,8
tick,0x7ff86ea82704,55073779,0,0x0,8
tick,0x7ff86ea82704,55075684,0,0x0,8
tick,0x7ff86ea82704,55077648,0,0x0,8
tick,0x7ff86ea82704,55079544,0,0x0,8
tick,0x7ff86ea82704,55081648,0,0x0,8
tick,0x7ff86ea82704,55083597,0,0x0,8
tick,0x7ff86ea82704,55085673,0,0x0,8
tick,0x7ff86ea82704,55087634,0,0x0,8
tick,0x7ff86ea82704,55089662,0,0x0,8
tick,0x7ff86ea82704,55091580,0,0x0,8
tick,0x7ff86ea82704,55093590,0,0x0,8
tick,0x7ff86ea82704,55095553,0,0x0,8
tick,0x7ff86ea82704,55097528,0,0x0,8
tick,0x7ff86ea82704,55099726,0,0x0,8
tick,0x7ff86ea82704,55101550,0,0x0,8
tick,0x7ff86ea82704,55103666,0,0x0,8
tick,0x7ff86ea82704,55105515,0,0x0,8
tick,0x7ff86ea82704,55107690,0,0x0,8
tick,0x7ff86ea82704,55109577,0,0x0,8
tick,0x7ff86ea82704,55111791,0,0x0,8
tick,0x7ff86ea82704,55113493,0,0x0,8
tick,0x7ff86ea82704,55115579,0,0x0,8
tick,0x7ff86ea82704,55117491,0,0x0,8
tick,0x7ff86ea82704,55119481,0,0x0,8
tick,0x7ff86ea82704,55121574,0,0x0,8
tick,0x7ff86ea82704,55123473,0,0x0,8
tick,0x7ff86ea82704,55125522,0,0x0,8
tick,0x7ff86ea82704,55127428,0,0x0,8
tick,0x7ff86ea82704,55129446,0,0x0,8
tick,0x7ff86ea82704,55131509,0,0x0,8
tick,0x7ff86ea82704,55133377,0,0x0,8
tick,0x7ff86ea82704,55135506,0,0x0,8
tick,0x7ff86ea82704,55137418,0,0x0,8
tick,0x7ff86ea82704,55139547,0,0x0,8
tick,0x7ff86ea82704,55141428,0,0x0,8
tick,0x7ff86ea82704,55143443,0,0x0,8
tick,0x7ff86ea82704,55145387,0,0x0,8
tick,0x7ff86ea82704,55147481,0,0x0,8
tick,0x7ff86ea82704,55149437,0,0x0,8
tick,0x7ff86ea82704,55151408,0,0x0,8
tick,0x7ff86ea82704,55153387,0,0x0,8
tick,0x7ff86ea82704,55155448,0,0x0,8
tick,0x7ff86ea82704,55157447,0,0x0,8
tick,0x7ff86ea82704,55159398,0,0x0,8
tick,0x7ff86ea82704,55161561,0,0x0,8
tick,0x7ff86ea82704,55163615,0,0x0,8
tick,0x7ff86ea82704,55165362,0,0x0,8
tick,0x7ff86ea82704,55167445,0,0x0,8
tick,0x7ff86ea82704,55169366,0,0x0,8
tick,0x7ff86ea82704,55171595,0,0x0,8
tick,0x7ff86ea82704,55173339,0,0x0,8
tick,0x7ff86ea82704,55175432,0,0x0,8
tick,0x7ff86ea82704,55177462,0,0x0,8
tick,0x7ff86ea82704,55179401,0,0x0,8
tick,0x7ff86ea82704,55181313,0,0x0,8
tick,0x7ff86ea82704,55183372,0,0x0,8
tick,0x7ff86ea82704,55185364,0,0x0,8
tick,0x7ff86ea82704,55187419,0,0x0,8
tick,0x7ff86ea82704,55189367,0,0x0,8
tick,0x7ff86ea82704,55191372,0,0x0,8
tick,0x7ff86ea82704,55193402,0,0x0,8
tick,0x7ff86ea82704,55195349,0,0x0,8
tick,0x7ff86ea82704,55197278,0,0x0,8
tick,0x7ff86ea82704,55199348,0,0x0,8
tick,0x7ff86ea82704,55201227,0,0x0,8
tick,0x7ff86ea82704,55203369,0,0x0,8
tick,0x7ff86ea82704,55205348,0,0x0,8
tick,0x7ff86ea82704,55207446,0,0x0,8
tick,0x7ff86ea82704,55209189,0,0x0,8
tick,0x7ff86ea82704,55211299,0,0x0,8
tick,0x7ff86ea82704,55213202,0,0x0,8
tick,0x7ff86ea82704,55215287,0,0x0,8
tick,0x7ff86ea82704,55217199,0,0x0,8
tick,0x7ff86ea82704,55219267,0,0x0,8
tick,0x7ff86ea82704,55221180,0,0x0,8
tick,0x7ff86ea82704,55223263,0,0x0,8
tick,0x7ff86ea82704,55225132,0,0x0,8
tick,0x7ff86ea82704,55227210,0,0x0,8
tick,0x7ff86ea82704,55229172,0,0x0,8
tick,0x7ff86ea82704,55231167,0,0x0,8
tick,0x7ff86ea82704,55233316,0,0x0,8
tick,0x7ff86ea82704,55235186,0,0x0,8
tick,0x7ff86ea82704,55237125,0,0x0,8
tick,0x7ff86ea82704,55239221,0,0x0,8
tick,0x7ff86ea82704,55241257,0,0x0,8
tick,0x7ff86ea82704,55243180,0,0x0,8
tick,0x7ff86ea82704,55245194,0,0x0,8
tick,0x7ff86ea82704,55247095,0,0x0,8
tick,0x7ff86ea82704,55249155,0,0x0,8
tick,0x7ff86ea82704,55251147,0,0x0,8
tick,0x7ff86ea82704,55253183,0,0x0,8
tick,0x7ff86ea82704,55255135,0,0x0,8
tick,0x7ff86ea82704,55257133,0,0x0,8
tick,0x7ff86ea82704,55259102,0,0x0,8
tick,0x7ff86ea82704,55261107,0,0x0,8
tick,0x7ff86ea82704,55263074,0,0x0,8
tick,0x7ff86ea82704,55265148,0,0x0,8
tick,0x7ff86ea82704,55267073,0,0x0,8
tick,0x7ff86ea82704,55269137,0,0x0,8
tick,0x7ff86ea82704,55271091,0,0x0,8
tick,0x7ff86ea82704,55273120,0,0x0,8
tick,0x7ff86ea82704,55275114,0,0x0,8
tick,0x7ff86ea82704,55277054,0,0x0,8
tick,0x7ff86ea82704,55279183,0,0x0,8
tick,0x7ff86ea82704,55281064,0,0x0,8
tick,0x7ff86ea82704,55283115,0,0x0,8
tick,0x7ff86ea82704,55285107,0,0x0,8
tick,0x7ff86ea82704,55287053,0,0x0,8
tick,0x7ff86ea82704,55289002,0,0x0,8
tick,0x7ff86ea82704,55291103,0,0x0,8
tick,0x7ff86ea82704,55293012,0,0x0,8
tick,0x7ff86ea82704,55295043,0,0x0,8
tick,0x7ff86ea82704,55296955,0,0x0,8
tick,0x7ff86ea82704,55299130,0,0x0,8
tick,0x7ff86ea82704,55301002,0,0x0,8
tick,0x7ff86ea82704,55303096,0,0x0,8
tick,0x7ff86ea82704,55304969,0,0x0,8
tick,0x7ff86ea82704,55307022,0,0x0,8
tick,0x7ff86ea82704,55309094,0,0x0,8
tick,0x7ff86ea82704,55311102,0,0x0,8
tick,0x7ff86ea82704,55313019,0,0x0,8
tick,0x7ff86ea82704,55314987,0,0x0,8
tick,0x7ff86ea82704,55316982,0,0x0,8
tick,0x7ff86ea82704,55318984,0,0x0,8
tick,0x7ff86ea82704,55320965,0,0x0,8
tick,0x7ff86ea82704,55323006,0,0x0,8
tick,0x7ff86ea82704,55325009,0,0x0,8
tick,0x7ff86ea82704,55327114,0,0x0,8
tick,0x7ff86ea82704,55329008,0,0x0,8
tick,0x7ff86ea82704,55330957,0,0x0,8
tick,0x7ff86ea82704,55332919,0,0x0,8
tick,0x7ff86ea82704,55334988,0,0x0,8
tick,0x7ff86ea82704,55336956,0,0x0,8
tick,0x7ff86ea82704,55339403,0,0x0,8
tick,0x7ff86ea82704,55340969,0,0x0,8
tick,0x7ff86ea82704,55342872,0,0x0,8
tick,0x7ff86ea82704,55344896,0,0x0,8
tick,0x7ff86ea82704,55346886,0,0x0,8
tick,0x7ff86ea82704,55348994,0,0x0,8
tick,0x7ff86ea82704,55350778,0,0x0,8
tick,0x7ff86ea82704,55353009,0,0x0,8
tick,0x7ff86ea82704,55355216,0,0x0,8
tick,0x7ff86ea82704,55356889,0,0x0,8
tick,0x7ff86ea82704,55359025,0,0x0,8
tick,0x7ff86ea82704,55360868,0,0x0,8
tick,0x7ff86ea82704,55362824,0,0x0,8
tick,0x7ff86ea82704,55364929,0,0x0,8
tick,0x7ff86ea82704,55366854,0,0x0,8
tick,0x7ff86ea82704,55368919,0,0x0,8
tick,0x7ff86ea82704,55370820,0,0x0,8
tick,0x7ff86ea82704,55372920,0,0x0,8
tick,0x7ff86ea82704,55374811,0,0x0,8
tick,0x7ff86ea82704,55376837,0,0x0,8
tick,0x7ff86ea82704,55378902,0,0x0,8
tick,0x7ff86ea82704,55380916,0,0x0,8
tick,0x7ff86ea82704,55382852,0,0x0,8
tick,0x7ff86ea82704,55384852,0,0x0,8
tick,0x7ff86ea82704,55386806,0,0x0,8
tick,0x7ff86ea82704,55388752,0,0x0,8
tick,0x7ff86ea82704,55390803,0,0x0,8
tick,0x7ff86ea82704,55392801,0,0x0,8
tick,0x7ff86ea82704,55394709,0,0x0,8
tick,0x7ff86ea82704,55396908,0,0x0,8
tick,0x7ff86ea82704,55398812,0,0x0,8
tick,0x7ff86ea82704,55400868,0,0x0,8
tick,0x7ff86ea82704,55402796,0,0x0,8
tick,0x7ff86ea82704,55404983,0,0x0,8
tick,0x7ff86ea82704,55406691,0,0x0,8
tick,0x7ff86ea82704,55408999,0,0x0,8
tick,0x7ff86ea82704,55410714,0,0x0,8
tick,0x7ff86ea82704,55412872,0,0x0,8
tick,0x7ff86ea82704,55414838,0,0x0,8
tick,0x7ff86ea82704,55416696,0,0x0,8
tick,0x7ff86ea82704,55418672,0,0x0,8
tick,0x7ff86ea82704,55420662,0,0x0,8
tick,0x7ff86ea82704,55422770,0,0x0,8
tick,0x7ff86ea82704,55424677,0,0x0,8
tick,0x7ff86ea82704,55426749,0,0x0,8
tick,0x7ff86ea82704,55428698,0,0x0,8
tick,0x7ff86ea82704,55430807,0,0x0,8
tick,0x7ff86ea82704,55432776,0,0x0,8
tick,0x7ff86ea82704,55434820,0,0x0,8
tick,0x7ff86ea82704,55436674,0,0x0,8
tick,0x7ff86ea82704,55438679,0,0x0,8
tick,0x7ff86ea82704,55440683,0,0x0,8
tick,0x7ff86ea82704,55442693,0,0x0,8
tick,0x7ff86ea82704,55444941,0,0x0,8
tick,0x7ff86ea82704,55446769,0,0x0,8
tick,0x7ff86ea82704,55448668,0,0x0,8
tick,0x7ff86ea82704,55450669,0,0x0,8
tick,0x7ff86ea82704,55452776,0,0x0,8
tick,0x7ff86ea82704,55454729,0,0x0,8
tick,0x7ff86ea82704,55456648,0,0x0,8
tick,0x7ff86ea82704,55458663,0,0x0,8
tick,0x7ff86ea82704,55460682,0,0x0,8
tick,0x7ff86ea82704,55462589,0,0x0,8
tick,0x7ff86ea82704,55464707,0,0x0,8
tick,0x7ff86ea82704,55466681,0,0x0,8
tick,0x7ff86ea82704,55468574,0,0x0,8
tick,0x7ff86ea82704,55470588,0,0x0,8
tick,0x7ff86ea82704,55472534,0,0x0,8
tick,0x7ff86ea82704,55474679,0,0x0,8
tick,0x7ff86ea82704,55476495,0,0x0,8
tick,0x7ff86ea82704,55478600,0,0x0,8
tick,0x7ff86ea82704,55480516,0,0x0,8
tick,0x7ff86ea82704,55482736,0,0x0,8
tick,0x7ff86ea82704,55484707,0,0x0,8
tick,0x7ff86ea82704,55486633,0,0x0,8
tick,0x7ff86ea82704,55488670,0,0x0,8
tick,0x7ff86ea82704,55490544,0,0x0,8
tick,0x7ff86ea82704,55492804,0,0x0,8
tick,0x7ff86ea82704,55494613,0,0x0,8
tick,0x7ff86ea82704,55496587,0,0x0,8
tick,0x7ff86ea82704,55498417,0,0x0,8
tick,0x7ff86ea82704,55500584,0,0x0,8
tick,0x7ff86ea82704,55502593,0,0x0,8
tick,0x7ff86ea82704,55504692,0,0x0,8
tick,0x7ff86ea82704,55506560,0,0x0,8
tick,0x7ff86ea82704,55508482,0,0x0,8
tick,0x7ff86ea82704,55510610,0,0x0,8
tick,0x7ff86ea82704,55512443,0,0x0,8
tick,0x7ff86ea82704,55514774,0,0x0,8
tick,0x7ff86ea82704,55516519,0,0x0,8
tick,0x7ff86ea82704,55518601,0,0x0,8
tick,0x7ff86ea82704,55520631,0,0x0,8
tick,0x7ff86ea82704,55522605,0,0x0,8
tick,0x7ff86ea82704,55524616,0,0x0,8
tick,0x7ff86ea82704,55526601,0,0x0,8
tick,0x7ff86ea82704,55528709,0,0x0,8
tick,0x7ff86ea82704,55530890,0,0x0,8
tick,0x7ff86ea82704,55532450,0,0x0,8
tick,0x7ff86ea82704,55534747,0,0x0,8
tick,0x7ff86ea82704,55536453,0,0x0,8
tick,0x7ff86ea82704,55538610,0,0x0,8
tick,0x7ff86ea82704,55540500,0,0x0,8
tick,0x7ff86ea82704,55542807,0,0x0,8
tick,0x7ff86ea82704,55544490,0,0x0,8
tick,0x7ff86ea82704,55546496,0,0x0,8
tick,0x7ff86ea82704,55548452,0,0x0,8
tick,0x7ff86ea82704,55550312,0,0x0,8
tick,0x7ff86ea82704,55552576,0,0x0,8
tick,0x7ff86ea82704,55554299,0,0x0,8
tick,0x7ff86ea82704,55556499,0,0x0,8
tick,0x7ff86ea82704,55558261,0,0x0,8
tick,0x7ff86ea82704,55560459,0,0x0,8
tick,0x7ff86ea82704,55562414,0,0x0,8
tick,0x7ff86ea82704,55564308,0,0x0,8
tick,0x7ff86ea82704,55566339,0,0x0,8
tick,0x7ff86ea82704,55568256,0,0x0,8
tick,0x7ff86ea82704,55570348,0,0x0,8
tick,0x7ff86ea82704,55572317,0,0x0,8
tick,0x7ff86ea82704,55574281,0,0x0,8
tick,0x7ff86ea82704,55576449,0,0x0,8
tick,0x7ff86ea82704,55578389,0,0x0,8
tick,0x7ff86ea82704,55580299,0,0x0,8
tick,0x7ff86ea82704,55582346,0,0x0,8
tick,0x7ff86ea82704,55584240,0,0x0,8
tick,0x7ff86ea82704,55586272,0,0x0,8
tick,0x7ff86ea82704,55588232,0,0x0,8
tick,0x7ff86ea82704,55590424,0,0x0,8
tick,0x7ff86ea82704,55592282,0,0x0,8
tick,0x7ff86ea82704,55594385,0,0x0,8
tick,0x7ff86ea82704,55596409,0,0x0,8
tick,0x7ff86ea82704,55598429,0,0x0,8
tick,0x7ff86ea82704,55600330,0,0x0,8
tick,0x7ff86ea82704,55602311,0,0x0,8
tick,0x7ff86ea82704,55604477,0,0x0,8
tick,0x7ff86ea82704,55606204,0,0x0,8
tick,0x7ff86ea82704,55608316,0,0x0,8
tick,0x7ff86ea82704,55610644,0,0x0,8
tick,0x7ff86ea82704,55615491,0,0x0,8
tick,0x7ff86ea82704,55617867,0,0x0,8
tick,0x7ff86ea82704,55619812,0,0x0,8
tick,0x7ff86ea82704,55621661,0,0x0,8
tick,0x7ff86ea82704,55623396,0,0x0,8
tick,0x7ff86ea82704,55625482,0,0x0,8
tick,0x7ff86ea82704,55627564,0,0x0,8
tick,0x7ff86ea82704,55629647,0,0x0,8
tick,0x7ff86ea82704,55631427,0,0x0,8
tick,0x7ff86ea82704,55633362,0,0x0,8
tick,0x7ff86ea82704,55635453,0,0x0,8
tick,0x7ff86ea82704,55637282,0,0x0,8
tick,0x7ff86ea82704,55639330,0,0x0,8
tick,0x7ff86ea82704,55641490,0,0x0,8
tick,0x7ff86ea82704,55643335,0,0x0,8
tick,0x7ff86ea82704,55645394,0,0x0,8
tick,0x7ff86ea82704,55647202,0,0x0,8
tick,0x7ff86ea82704,55649403,0,0x0,8
tick,0x7ff86ea82704,55651266,0,0x0,8
tick,0x7ff86ea82704,55653336,0,0x0,8
tick,0x7ff86ea82704,55655303,0,0x0,8
tick,0x7ff86ea82704,55657575,0,0x0,8
tick,0x7ff86ea82704,55659302,0,0x0,8
tick,0x7ff86ea82704,55661420,0,0x0,8
tick,0x7ff86ea82704,55663200,0,0x0,8
tick,0x7ff86ea82704,55665435,0,0x0,8
tick,0x7ff86ea82704,55667158,0,0x0,8
tick,0x7ff86ea82704,55669339,0,0x0,8
tick,0x7ff86ea82704,55671251,0,0x0,8
tick,0x7ff86ea82704,55673525,0,0x0,8
tick,0x7ff86ea82704,55675184,0,0x0,8
tick,0x7ff86ea82704,55677293,0,0x0,8
tick,0x7ff86ea82704,55679203,0,0x0,8
tick,0x7ff86ea82704,55681478,0,0x0,8
tick,0x7ff86ea82704,55683118,0,0x0,8
tick,0x7ff86ea82704,55685140,0,0x0,8
tick,0x7ff86ea82704,55687379,0,0x0,8
tick,0x7ff86ea82704,55689026,0,0x0,8
tick,0x7ff86ea82704,55691315,0,0x0,8
tick,0x7ff86ea82704,55693163,0,0x0,8
tick,0x7ff86ea82704,55695409,0,0x0,8
tick,0x7ff86ea82704,55697115,0,0x0,8
tick,0x7ff86ea82704,55699269,0,0x0,8
tick,0x7ff86ea82704,55701336,0,0x0,8
tick,0x7ff86ea82704,55703297,0,0x0,8
tick,0x7ff86ea82704,55705092,0,0x0,8
tick,0x7ff86ea82704,55707258,0,0x0,8
tick,0x7ff86ea82704,55709301,0,0x0,8
tick,0x7ff86ea82704,55711124,0,0x0,8
tick,0x7ff86ea82704,55713220,0,0x0,8
tick,0x7ff86ea82704,55715071,0,0x0,8
tick,0x7ff86ea82704,55717126,0,0x0,8
tick,0x7ff86ea82704,55718987,0,0x0,8
tick,0x7ff86ea82704,55721291,0,0x0,8
tick,0x7ff86ea82704,55723097,0,0x0,8
tick,0x7ff86ea82704,55725225,0,0x0,8
tick,0x7ff86ea82704,55727201,0,0x0,8
tick,0x7ff86ea82704,55729023,0,0x0,8
tick,0x7ff86ea82704,55731299,0,0x0,8
tick,0x7ff86ea82704,55733216,0,0x0,8
tick,0x7ff86ea82704,55735020,0,0x0,8
tick,0x7ff86ea82704,55737260,0,0x0,8
tick,0x7ff86ea82704,55739297,0,0x0,8
tick,0x7ff86ea82704,55741178,0,0x0,8
tick,0x7ff86ea82704,55743230,0,0x0,8
tick,0x7ff86ea82704,55745171,0,0x0,8
tick,0x7ff86ea82704,55747234,0,0x0,8
tick,0x7ff86ea82704,55749218,0,0x0,8
tick,0x7ff86ea82704,55751179,0,0x0,8
tick,0x7ff86ea82704,55753213,0,0x0,8
tick,0x7ff86ea82704,55755076,0,0x0,8
tick,0x7ff86ea82704,55757083,0,0x0,8
tick,0x7ff86ea82704,55758933,0,0x0,8
tick,0x7ff86ea82704,55761118,0,0x0,8
tick,0x7ff86ea82704,55762908,0,0x0,8
tick,0x7ff86ea82704,55765066,0,0x0,8
tick,0x7ff86ea82704,55767015,0,0x0,8
tick,0x7ff86ea82704,55769165,0,0x0,8
tick,0x7ff86ea82704,55771121,0,0x0,8
tick,0x7ff86ea82704,55773061,0,0x0,8
tick,0x7ff86ea82704,55774878,0,0x0,8
tick,0x7ff86ea82704,55777033,0,0x0,8
tick,0x7ff86ea82704,55778845,0,0x0,8
tick,0x7ff86ea82704,55781159,0,0x0,8
tick,0x7ff86ea82704,55782943,0,0x0,8
tick,0x7ff86ea82704,55784960,0,0x0,8
tick,0x7ff86ea82704,55786936,0,0x0,8
tick,0x7ff86ea82704,55789049,0,0x0,8
tick,0x7ff86ea82704,55790908,0,0x0,8
tick,0x7ff86ea82704,55792882,0,0x0,8
tick,0x7ff86ea82704,55794927,0,0x0,8
tick,0x7ff86ea82704,55796819,0,0x0,8
tick,0x7ff86ea82704,55798987,0,0x0,8
tick,0x7ff86ea82704,55800878,0,0x0,8
tick,0x7ff86ea82704,55803040,0,0x0,8
tick,0x7ff86ea82704,55804904,0,0x0,8
tick,0x7ff86ea82704,55806992,0,0x0,8
tick,0x7ff86ea82704,55808985,0,0x0,8
tick,0x7ff86ea82704,55811022,0,0x0,8
tick,0x7ff86ea82704,55812733,0,0x0,8
tick,0x7ff86ea82704,55814931,0,0x0,8
tick,0x7ff86ea82704,55816919,0,0x0,8
tick,0x7ff86ea82704,55818908,0,0x0,8
tick,0x7ff86ea82704,55820903,0,0x0,8
tick,0x7ff86ea82704,55822833,0,0x0,8
tick,0x7ff86ea82704,55824948,0,0x0,8
tick,0x7ff86ea82704,55826779,0,0x0,8
tick,0x7ff86ea82704,55828967,0,0x0,8
tick,0x7ff86ea82704,55830996,0,0x0,8
tick,0x7ff86ea82704,55832677,0,0x0,8
tick,0x7ff86ea82704,55834937,0,0x0,8
tick,0x7ff86ea82704,55836794,0,0x0,8
tick,0x7ff86ea82704,55838989,0,0x0,8
tick,0x7ff86ea82704,55840748,0,0x0,8
tick,0x7ff86ea82704,55842971,0,0x0,8
tick,0x7ff86ea82704,55844835,0,0x0,8
tick,0x7ff86ea82704,55846757,0,0x0,8
tick,0x7ff86ea82704,55848953,0,0x0,8
tick,0x7ff86ea82704,55850621,0,0x0,8
tick,0x7ff86ea82704,55852908,0,0x0,8
tick,0x7ff86ea82704,55854746,0,0x0,8
tick,0x7ff86ea82704,55856925,0,0x0,8
tick,0x7ff86ea82704,55858681,0,0x0,8
tick,0x7ff86ea82704,55860850,0,0x0,8
tick,0x7ff86ea82704,55862900,0,0x0,8
tick,0x7ff86ea82704,55864823,0,0x0,8
tick,0x7ff86ea82704,55866816,0,0x0,8
tick,0x7ff86ea82704,55868925,0,0x0,8
tick,0x7ff86ea82704,55870880,0,0x0,8
tick,0x7ff86ea82704,55872810,0,0x0,8
tick,0x7ff86ea82704,55874768,0,0x0,8
tick,0x7ff86ea82704,55876622,0,0x0,8
tick,0x7ff86ea82704,55878963,0,0x0,8
tick,0x7ff86ea82704,55880613,0,0x0,8
tick,0x7ff86ea82704,55882902,0,0x0,8
tick,0x7ff86ea82704,55884721,0,0x0,8
tick,0x7ff86ea82704,55886775,0,0x0,8
tick,0x7ff86ea82704,55888642,0,0x0,8
tick,0x7ff86ea82704,55890810,0,0x0,8
tick,0x7ff86ea82704,55892553,0,0x0,8
tick,0x7ff86ea82704,55894825,0,0x0,8
tick,0x7ff86ea82704,55896814,0,0x0,8
tick,0x7ff86ea82704,55898728,0,0x0,8
tick,0x7ff86ea82704,55900579,0,0x0,8
tick,0x7ff86ea82704,55902746,0,0x0,8
tick,0x7ff86ea82704,55905523,0,0x0,8
tick,0x7ff86ea82704,55906750,0,0x0,8
tick,0x7ff86ea82704,55908672,0,0x0,8
tick,0x7ff86ea82704,55910696,0,0x0,8
tick,0x7ff86ea82704,55912540,0,0x0,8
tick,0x7ff86ea82704,55914948,0,0x0,8
tick,0x7ff86ea82704,55916572,0,0x0,8
tick,0x7ff86ea82704,55918723,0,0x0,8
tick,0x7ff86ea82704,55920829,0,0x0,8
tick,0x7ff86ea82704,55922564,0,0x0,8
tick,0x7ff86ea82704,55924660,0,0x0,8
tick,0x7ff86ea82704,55926935,0,0x0,8
tick,0x7ff86ea82704,55928797,0,0x0,8
tick,0x7ff86ea82704,55930784,0,0x0,8
tick,0x7ff86ea82704,55932748,0,0x0,8
tick,0x7ff86ea82704,55934676,0,0x0,8
tick,0x7ff86ea82704,55936853,0,0x0,8
tick,0x7ff86ea82704,55938759,0,0x0,8
tick,0x7ff86ea82704,55940685,0,0x0,8
tick,0x7ff86ea82704,55942776,0,0x0,8
tick,0x7ff86ea82704,55944466,0,0x0,8
tick,0x7ff86ea82704,55946523,0,0x0,8
tick,0x7ff86ea82704,55948575,0,0x0,8
tick,0x7ff86ea82704,55950545,0,0x0,8
tick,0x7ff86ea82704,55952480,0,0x0,8
tick,0x7ff86ea82704,55954547,0,0x0,8
tick,0x7ff86ea82704,55956467,0,0x0,8
tick,0x7ff86ea82704,55958679,0,0x0,8
tick,0x7ff86ea82704,55960283,0,0x0,8
tick,0x7ff86ea82704,55962566,0,0x0,8
tick,0x7ff86ea82704,55964286,0,0x0,8
tick,0x7ff86ea82704,55966689,0,0x0,8
tick,0x7ff86ea82704,55968345,0,0x0,8
tick,0x7ff86ea82704,55970496,0,0x0,8
tick,0x7ff86ea82704,55972424,0,0x0,8
tick,0x7ff86ea82704,55974502,0,0x0,8
tick,0x7ff86ea82704,55976420,0,0x0,8
tick,0x7ff86ea82704,55978490,0,0x0,8
tick,0x7ff86ea82704,55980524,0,0x0,8
tick,0x7ff86ea82704,55982314,0,0x0,8
tick,0x7ff86ea82704,55984442,0,0x0,8
tick,0x7ff86ea82704,55986308,0,0x0,8
tick,0x7ff86ea82704,55988513,0,0x0,8
tick,0x7ff86ea82704,55990236,0,0x0,8
tick,0x7ff86ea82704,55992395,0,0x0,8
tick,0x7ff86ea82704,55994292,0,0x0,8
tick,0x7ff86ea82704,55996356,0,0x0,8
tick,0x7ff86ea82704,55998232,0,0x0,8
tick,0x7ff86ea82704,56000335,0,0x0,8
tick,0x7ff86ea82704,56002257,0,0x0,8
tick,0x7ff86ea82704,56004486,0,0x0,8
tick,0x7ff86ea82704,56006248,0,0x0,8
tick,0x7ff86ea82704,56008411,0,0x0,8
tick,0x7ff86ea82704,56010323,0,0x0,8
tick,0x7ff86ea82704,56012405,0,0x0,8
tick,0x7ff86ea82704,56014181,0,0x0,8
tick,0x7ff86ea82704,56016334,0,0x0,8
tick,0x7ff86ea82704,56018322,0,0x0,8
tick,0x7ff86ea82704,56020428,0,0x0,8
tick,0x7ff86ea82704,56022234,0,0x0,8
tick,0x7ff86ea82704,56024430,0,0x0,8
tick,0x7ff86ea82704,56026412,0,0x0,8
tick,0x7ff86ea82704,56028222,0,0x0,8
tick,0x7ff86ea82704,56030299,0,0x0,8
tick,0x7ff86ea82704,56032247,0,0x0,8
tick,0x7ff86ea82704,56034415,0,0x0,8
tick,0x7ff86ea82704,56036202,0,0x0,8
tick,0x7ff86ea82704,56038313,0,0x0,8
tick,0x7ff86ea82704,56040185,0,0x0,8
tick,0x7ff86ea82704,56042462,0,0x0,8
tick,0x7ff86ea82704,56044147,0,0x0,8
tick,0x7ff86ea82704,56046361,0,0x0,8
tick,0x7ff86ea82704,56048239,0,0x0,8
tick,0x7ff86ea82704,56050372,0,0x0,8
tick,0x7ff86ea82704,56052160,0,0x0,8
tick,0x7ff86ea82704,56054443,0,0x0,8
tick,0x7ff86ea82704,56056362,0,0x0,8
tick,0x7ff86ea82704,56058091,0,0x0,8
tick,0x7ff86ea82704,56060263,0,0x0,8
tick,0x7ff86ea82704,56062050,0,0x0,8
tick,0x7ff86ea82704,56064201,0,0x0,8
tick,0x7ff86ea82704,56066108,0,0x0,8
tick,0x7ff86ea82704,56068370,0,0x0,8
tick,0x7ff86ea82704,56070137,0,0x0,8
tick,0x7ff86ea82704,56072442,0,0x0,8
tick,0x7ff86ea82704,56074141,0,0x0,8
tick,0x7ff86ea82704,56076241,0,0x0,8
tick,0x7ff86ea82704,56078107,0,0x0,8
tick,0x7ff86ea82704,56080142,0,0x0,8
tick,0x7ff86ea82704,56082166,0,0x0,8
tick,0x7ff86ea82704,56084140,0,0x0,8
tick,0x7ff86ea82704,56086380,0,0x0,8
tick,0x7ff86ea82704,56088300,0,0x0,8
tick,0x7ff86ea82704,56090036,0,0x0,8
tick,0x7ff86ea82704,56092299,0,0x0,8
tick,0x7ff86ea82704,56094089,0,0x0,8
tick,0x7ff86ea82704,56096161,0,0x0,8
tick,0x7ff86ea82704,56098129,0,0x0,8
tick,0x7ff86ea82704,56100039,0,0x0,8
tick,0x7ff86ea82704,56102246,0,0x0,8
tick,0x7ff86ea82704,56104053,0,0x0,8
tick,0x7ff86ea82704,56106350,0,0x0,8
tick,0x7ff86ea82704,56108052,0,0x0,8
tick,0x7ff86ea82704,56110227,0,0x0,8
tick,0x7ff86ea82704,56112098,0,0x0,8
tick,0x7ff86ea82704,56114230,0,0x0,8
tick,0x7ff86ea82704,56116052,0,0x0,8
tick,0x7ff86ea82704,56118082,0,0x0,8
tick,0x7ff86ea82704,56119999,0,0x0,8
tick,0x7ff86ea82704,56122197,0,0x0,8
tick,0x7ff86ea82704,56123944,0,0x0,8
tick,0x7ff86ea82704,56126218,0,0x0,8
tick,0x7ff86ea82704,56128108,0,0x0,8
tick,0x7ff86ea82704,56130257,0,0x0,8
tick,0x7ff86ea82704,56131944,0,0x0,8
tick,0x7ff86ea82704,56134330,0,0x0,8
tick,0x7ff86ea82704,56135903,0,0x0,8
tick,0x7ff86ea82704,56138147,0,0x0,8
tick,0x7ff86ea82704,56139833,0,0x0,8
tick,0x7ff86ea82704,56142018,0,0x0,8
tick,0x7ff86ea82704,56144006,0,0x0,8
tick,0x7ff86ea82704,56146169,0,0x0,8
tick,0x7ff86ea82704,56147850,0,0x0,8
tick,0x7ff86ea82704,56150067,0,0x0,8
tick,0x7ff86ea82704,56151843,0,0x0,8
tick,0x7ff86ea82704,56153994,0,0x0,8
tick,0x7ff86ea82704,56155905,0,0x0,8
tick,0x7ff86ea82704,56158049,0,0x0,8
tick,0x7ff86ea82704,56160035,0,0x0,8
tick,0x7ff86ea82704,56161833,0,0x0,8
tick,0x7ff86ea82704,56163972,0,0x0,8
tick,0x7ff86ea82704,56166028,0,0x0,8
tick,0x7ff86ea82704,56167866,0,0x0,8
tick,0x7ff86ea82704,56170054,0,0x0,8
tick,0x7ff86ea82704,56172022,0,0x0,8
tick,0x7ff86ea82704,56173794,0,0x0,8
tick,0x7ff86ea82704,56176207,0,0x0,8
tick,0x7ff86ea82704,56178069,0,0x0,8
tick,0x7ff86ea82704,56180034,0,0x0,8
tick,0x7ff86ea82704,56182012,0,0x0,8
tick,0x7ff86ea82704,56184121,0,0x0,8
tick,0x7ff86ea82704,56185752,0,0x0,8
tick,0x7ff86ea82704,56187940,0,0x0,8
tick,0x7ff86ea82704,56189913,0,0x0,8
tick,0x7ff86ea82704,56192035,0,0x0,8
tick,0x7ff86ea82704,56194145,0,0x0,8
tick,0x7ff86ea82704,56195796,0,0x0,8
tick,0x7ff86ea82704,56197712,0,0x0,8
tick,0x7ff86ea82704,56199831,0,0x0,8
tick,0x7ff86ea82704,56201803,0,0x0,8
tick,0x7ff86ea82704,56203785,0,0x0,8
tick,0x7ff86ea82704,56205681,0,0x0,8
tick,0x7ff86ea82704,56207794,0,0x0,8
tick,0x7ff86ea82704,56209620,0,0x0,8
tick,0x7ff86ea82704,56211689,0,0x0,8
tick,0x7ff86ea82704,56213676,0,0x0,8
tick,0x7ff86ea82704,56215648,0,0x0,8
tick,0x7ff86ea82704,56217656,0,0x0,8
tick,0x7ff86ea82704,56219743,0,0x0,8
tick,0x7ff86ea82704,56221781,0,0x0,8
tick,0x7ff86ea82704,56223689,0,0x0,8
tick,0x7ff86ea82704,56225603,0,0x0,8
tick,0x7ff86ea82704,56227653,0,0x0,8
tick,0x7ff86ea82704,56229739,0,0x0,8
tick,0x7ff86ea82704,56231642,0,0x0,8
tick,0x7ff86ea82704,56233717,0,0x0,8
tick,0x7ff86ea82704,56235626,0,0x0,8
tick,0x7ff86ea82704,56237691,0,0x0,8
tick,0x7ff86ea82704,56239633,0,0x0,8
tick,0x7ff86ea82704,56241737,0,0x0,8
tick,0x7ff86ea82704,56243668,0,0x0,8
tick,0x7ff86ea82704,56245593,0,0x0,8
tick,0x7ff86ea82704,56247799,0,0x0,8
tick,0x7ff86ea82704,56249612,0,0x0,8
tick,0x7ff86ea82704,56251586,0,0x0,8
tick,0x7ff86ea82704,56253702,0,0x0,8
tick,0x7ff86ea82704,56255588,0,0x0,8
tick,0x7ff86ea82704,56257733,0,0x0,8
tick,0x7ff86ea82704,56259677,0,0x0,8
tick,0x7ff86ea82704,56261718,0,0x0,8
tick,0x7ff86ea82704,56263569,0,0x0,8
tick,0x7ff86ea82704,56265528,0,0x0,8
tick,0x7ff86ea82704,56267686,0,0x0,8
tick,0x7ff86ea82704,56269709,0,0x0,8
tick,0x7ff86ea82704,56271664,0,0x0,8
tick,0x7ff86ea82704,56273655,0,0x0,8
tick,0x7ff86ea82704,56275584,0,0x0,8
tick,0x7ff86ea82704,56277691,0,0x0,8
tick,0x7ff86ea82704,56279507,0,0x0,8
tick,0x7ff86ea82704,56281548,0,0x0,8
tick,0x7ff86ea82704,56283468,0,0x0,8
tick,0x7ff86ea82704,56285528,0,0x0,8
tick,0x7ff86ea82704,56287441,0,0x0,8
tick,0x7ff86ea82704,56289618,0,0x0,8
tick,0x7ff86ea82704,56291558,0,0x0,8
tick,0x7ff86ea82704,56293687,0,0x0,8
tick,0x7ff86ea82704,56295542,0,0x0,8
tick,0x7ff86ea82704,56297508,0,0x0,8
tick,0x7ff86ea82704,56299445,0,0x0,8
tick,0x7ff86ea82704,56301426,0,0x0,8
tick,0x7ff86ea82704,56303744,0,0x0,8
tick,0x7ff86ea82704,56305470,0,0x0,8
tick,0x7ff86ea82704,56307577,0,0x0,8
tick,0x7ff86ea82704,56309492,0,0x0,8
tick,0x7ff86ea82704,56311530,0,0x0,8
tick,0x7ff86ea82704,56313462,0,0x0,8
tick,0x7ff86ea82704,56315572,0,0x0,8
tick,0x7ff86ea82704,56317639,0,0x0,8
tick,0x7ff86ea82704,56319455,0,0x0,8
tick,0x7ff86ea82704,56321400,0,0x0,8
tick,0x7ff86ea82704,56323426,0,0x0,8
tick,0x7ff86ea82704,56325483,0,0x0,8
tick,0x7ff86ea82704,56327349,0,0x0,8
tick,0x7ff86ea82704,56329583,0,0x0,8
tick,0x7ff86ea82704,56331318,0,0x0,8
tick,0x7ff86ea82704,56333421,0,0x0,8
tick,0x7ff86ea82704,56335441,0,0x0,8
tick,0x7ff86ea82704,56337298,0,0x0,8
tick,0x7ff86ea82704,56339711,0,0x0,8
tick,0x7ff86ea82704,56341421,0,0x0,8
tick,0x7ff86ea82704,56343349,0,0x0,8
tick,0x7ff86ea82704,56345345,0,0x0,8
tick,0x7ff86ea82704,56347375,0,0x0,8
tick,0x7ff86ea82704,56349395,0,0x0,8
tick,0x7ff86ea82704,56351445,0,0x0,8
tick,0x7ff86ea82704,56353233,0,0x0,8
tick,0x7ff86ea82704,56355255,0,0x0,8
tick,0x7ff86ea82704,56357354,0,0x0,8
tick,0x7ff86ea82704,56359329,0,0x0,8
tick,0x7ff86ea82704,56361477,0,0x0,8
tick,0x7ff86ea82704,56363404,0,0x0,8
tick,0x7ff86ea82704,56365285,0,0x0,8
tick,0x7ff86ea82704,56367376,0,0x0,8
tick,0x7ff86ea82704,56369385,0,0x0,8
tick,0x7ff86ea82704,56371363,0,0x0,8
tick,0x7ff86ea82704,56373356,0,0x0,8
tick,0x7ff86ea82704,56375265,0,0x0,8
tick,0x7ff86ea82704,56377361,0,0x0,8
tick,0x7ff86ea82704,56379343,0,0x0,8
tick,0x7ff86ea82704,56381254,0,0x0,8
tick,0x7ff86ea82704,56383312,0,0x0,8
tick,0x7ff86ea82704,56385265,0,0x0,8
tick,0x7ff86ea82704,56387307,0,0x0,8
tick,0x7ff86ea82704,56389258,0,0x0,8
tick,0x7ff86ea82704,56391250,0,0x0,8
tick,0x7ff86ea82704,56393206,0,0x0,8
tick,0x7ff86ea82704,56395183,0,0x0,8
tick,0x7ff86ea82704,56397179,0,0x0,8
tick,0x7ff86ea82704,56399331,0,0x0,8
tick,0x7ff86ea82704,56401313,0,0x0,8
tick,0x7ff86ea82704,56403143,0,0x0,8
tick,0x7ff86ea82704,56405275,0,0x0,8
tick,0x7ff86ea82704,56407155,0,0x0,8
tick,0x7ff86ea82704,56409298,0,0x0,8
tick,0x7ff86ea82704,56411175,0,0x0,8
tick,0x7ff86ea82704,56413309,0,0x0,8
tick,0x7ff86ea82704,56415121,0,0x0,8
tick,0x7ff86ea82704,56417189,0,0x0,8
tick,0x7ff86ea82704,56419261,0,0x0,8
tick,0x7ff86ea82704,56421245,0,0x0,8
tick,0x7ff86ea82704,56423190,0,0x0,8
tick,0x7ff86ea82704,56425156,0,0x0,8
tick,0x7ff86ea82704,56427155,0,0x0,8
tick,0x7ff86ea82704,56429195,0,0x0,8
tick,0x7ff86ea82704,56431131,0,0x0,8
tick,0x7ff86ea82704,56433200,0,0x0,8
tick,0x7ff86ea82704,56435176,0,0x0,8
tick,0x7ff86ea82704,56437206,0,0x0,8
tick,0x7ff86ea82704,56439124,0,0x0,8
tick,0x7ff86ea82704,56441046,0,0x0,8
tick,0x7ff86ea82704,56443183,0,0x0,8
tick,0x7ff86ea82704,56445210,0,0x0,8
tick,0x7ff86ea82704,56447067,0,0x0,8
tick,0x7ff86ea82704,56449139,0,0x0,8
tick,0x7ff86ea82704,56451131,0,0x0,8
tick,0x7ff86ea82704,56453285,0,0x0,8
tick,0x7ff86ea82704,56455287,0,0x0,8
tick,0x7ff86ea82704,56457129,0,0x0,8
tick,0x7ff86ea82704,56459369,0,0x0,8
tick,0x7ff86ea82704,56461101,0,0x0,8
tick,0x7ff86ea82704,56463126,0,0x0,8
tick,0x7ff86ea82704,56465183,0,0x0,8
tick,0x7ff86ea82704,56467057,0,0x0,8
tick,0x7ff86ea82704,56469080,0,0x0,8
tick,0x7ff86ea82704,56471010,0,0x0,8
tick,0x7ff86ea82704,56473081,0,0x0,8
tick,0x7ff86ea82704,56475130,0,0x0,8
tick,0x7ff86ea82704,56477056,0,0x0,8
tick,0x7ff86ea82704,56479014,0,0x0,8
tick,0x7ff86ea82704,56481190,0,0x0,8
tick,0x7ff86ea82704,56483069,0,0x0,8
tick,0x7ff86ea82704,56485034,0,0x0,8
tick,0x7ff86ea82704,56487088,0,0x0,8
tick,0x7ff86ea82704,56489062,0,0x0,8
tick,0x7ff86ea82704,56491019,0,0x0,8
tick,0x7ff86ea82704,56492939,0,0x0,8
tick,0x7ff86ea82704,56495039,0,0x0,8
tick,0x7ff86ea82704,56497034,0,0x0,8
tick,0x7ff86ea82704,56499013,0,0x0,8
tick,0x7ff86ea82704,56500948,0,0x0,8
tick,0x7ff86ea82704,56503070,0,0x0,8
tick,0x7ff86ea82704,56505025,0,0x0,8
tick,0x7ff86ea82704,56506881,0,0x0,8
tick,0x7ff86ea82704,56508905,0,0x0,8
tick,0x7ff86ea82704,56510938,0,0x0,8
tick,0x7ff86ea82704,56513005,0,0x0,8
tick,0x7ff86ea82704,56514873,0,0x0,8
tick,0x7ff86ea82704,56516964,0,0x0,8
tick,0x7ff86ea82704,56519003,0,0x0,8
tick,0x7ff86ea82704,56520931,0,0x0,8
tick,0x7ff86ea82704,56522848,0,0x0,8
tick,0x7ff86ea82704,56525147,0,0x0,8
tick,0x7ff86ea82704,56526825,0,0x0,8
tick,0x7ff86ea82704,56528908,0,0x0,8
tick,0x7ff86ea82704,56530855,0,0x0,8
tick,0x7ff86ea82704,56532803,0,0x0,8
tick,0x7ff86ea82704,56534986,0,0x0,8
tick,0x7ff86ea82704,56536843,0,0x0,8
tick,0x7ff86ea82704,56538882,0,0x0,8
tick,0x7ff86ea82704,56540846,0,0x0,8
tick,0x7ff86ea82704,56542811,0,0x0,8
tick,0x7ff86ea82704,56544912,0,0x0,8
tick,0x7ff86ea82704,56546863,0,0x0,8
tick,0x7ff86ea82704,56548808,0,0x0,8
tick,0x7ff86ea82704,56550897,0,0x0,8
tick,0x7ff86ea82704,56552815,0,0x0,8
tick,0x7ff86ea82704,56554798,0,0x0,8
tick,0x7ff86ea82704,56556699,0,0x0,8
tick,0x7ff86ea82704,56558834,0,0x0,8
tick,0x7ff86ea82704,56560665,0,0x0,8
tick,0x7ff86ea82704,56562737,0,0x0,8
tick,0x7ff86ea82704,56564691,0,0x0,8
tick,0x7ff86ea82704,56566705,0,0x0,8
tick,0x7ff86ea82704,56568664,0,0x0,8
tick,0x7ff86ea82704,56570748,0,0x0,8
tick,0x7ff86ea82704,56572699,0,0x0,8
tick,0x7ff86ea82704,56574720,0,0x0,8
tick,0x7ff86ea82704,56576755,0,0x0,8
tick,0x7ff86ea82704,56578653,0,0x0,8
tick,0x7ff86ea82704,56580661,0,0x0,8
tick,0x7ff86ea82704,56582668,0,0x0,8
tick,0x7ff86ea82704,56584663,0,0x0,8
tick,0x7ff86ea82704,56586673,0,0x0,8
tick,0x7ff86ea82704,56588736,0,0x0,8
tick,0x7ff86ea82704,56590657,0,0x0,8
tick,0x7ff86ea82704,56592708,0,0x0,8
tick,0x7ff86ea82704,56594728,0,0x0,8
tick,0x7ff86ea82704,56596619,0,0x0,8
tick,0x7ff86ea82704,56598817,0,0x0,8
tick,0x7ff86ea82704,56600824,0,0x0,8
tick,0x7ff86ea82704,56602747,0,0x0,8
tick,0x7ff86ea82704,56604838,0,0x0,8
tick,0x7ff86ea82704,56606718,0,0x0,8
tick,0x7ff86ea82704,56608772,0,0x0,8
tick,0x7ff86ea82704,56610703,0,0x0,8
tick,0x7ff86ea82704,56613430,0,0x0,8
tick,0x7ff86ea82704,56614526,0,0x0,8
tick,0x7ff86ea82704,56616596,0,0x0,8
tick,0x7ff86ea82704,56618488,0,0x0,8
tick,0x7ff86ea82704,56620583,0,0x0,8
tick,0x7ff86ea82704,56622508,0,0x0,8
tick,0x7ff86ea82704,56624564,0,0x0,8
tick,0x7ff86ea82704,56626458,0,0x0,8
tick,0x7ff86ea82704,56628395,0,0x0,8
tick,0x7ff86ea82704,56630415,0,0x0,8
tick,0x7ff86ea82704,56632471,0,0x0,8
tick,0x7ff86ea82704,56634440,0,0x0,8
tick,0x7ff86ea82704,56636607,0,0x0,8
tick,0x7ff86ea82704,56638433,0,0x0,8
tick,0x7ff86ea82704,56640659,0,0x0,8
tick,0x7ff86ea82704,56642443,0,0x0,8
tick,0x7ff86ea82704,56644590,0,0x0,8
tick,0x7ff86ea82704,56646619,0,0x0,8
tick,0x7ff86ea82704,56648401,0,0x0,8
tick,0x7ff86ea82704,56650479,0,0x0,8
tick,0x7ff86ea82704,56652358,0,0x0,8
tick,0x7ff86ea82704,56654446,0,0x0,8
tick,0x7ff86ea82704,56656430,0,0x0,8
tick,0x7ff86ea82704,56658444,0,0x0,8
tick,0x7ff86ea82704,56660545,0,0x0,8
tick,0x7ff86ea82704,56662403,0,0x0,8
tick,0x7ff86ea82704,56664420,0,0x0,8
tick,0x7ff86ea82704,56666316,0,0x0,8
tick,0x7ff86ea82704,56668388,0,0x0,8
tick,0x7ff86ea82704,56670350,0,0x0,8
tick,0x7ff86ea82704,56672321,0,0x0,8
tick,0x7ff86ea82704,56674261,0,0x0,8
tick,0x7ff86ea82704,56676366,0,0x0,8
tick,0x7ff86ea82704,56678374,0,0x0,8
tick,0x7ff86ea82704,56680461,0,0x0,8
tick,0x7ff86ea82704,56682412,0,0x0,8
tick,0x7ff86ea82704,56684266,0,0x0,8
tick,0x7ff86ea82704,56686390,0,0x0,8
tick,0x7ff86ea82704,56688359,0,0x0,8
tick,0x7ff86ea82704,56690360,0,0x0,8
tick,0x7ff86ea82704,56692455,0,0x0,8
tick,0x7ff86ea82704,56694341,0,0x0,8
tick,0x7ff86ea82704,56696297,0,0x0,8
tick,0x7ff86ea82704,56698335,0,0x0,8
tick,0x7ff86ea82704,56700274,0,0x0,8
tick,0x7ff86ea82704,56702340,0,0x0,8
tick,0x7ff86ea82704,56704275,0,0x0,8
tick,0x7ff86ea82704,56706215,0,0x0,8
tick,0x7ff86ea82704,56708285,0,0x0,8
tick,0x7ff86ea82704,56710305,0,0x0,8
tick,0x7ff86ea82704,56712219,0,0x0,8
tick,0x7ff86ea82704,56714217,0,0x0,8
tick,0x7ff86ea82704,56716211,0,0x0,8
tick,0x7ff86ea82704,56718218,0,0x0,8
tick,0x7ff86ea82704,56720269,0,0x0,8
tick,0x7ff86ea82704,56722245,0,0x0,8
tick,0x7ff86ea82704,56724212,0,0x0,8
tick,0x7ff86ea82704,56726214,0,0x0,8
tick,0x7ff86ea82704,56728278,0,0x0,8
tick,0x7ff86ea82704,56730208,0,0x0,8
tick,0x7ff86ea82704,56732370,0,0x0,8
tick,0x7ff86ea82704,56734223,0,0x0,8
tick,0x7ff86ea82704,56736254,0,0x0,8
tick,0x7ff86ea82704,56738246,0,0x0,8
tick,0x7ff86ea82704,56740267,0,0x0,8
tick,0x7ff86ea82704,56742211,0,0x0,8
tick,0x7ff86ea82704,56744259,0,0x0,8
tick,0x7ff86ea82704,56746115,0,0x0,8
tick,0x7ff86ea82704,56748230,0,0x0,8
tick,0x7ff86ea82704,56750235,0,0x0,8
tick,0x7ff86ea82704,56752136,0,0x0,8
tick,0x7ff86ea82704,56754090,0,0x0,8
tick,0x7ff86ea82704,56756116,0,0x0,8
tick,0x7ff86ea82704,56758198,0,0x0,8
tick,0x7ff86ea82704,56760195,0,0x0,8
tick,0x7ff86ea82704,56762179,0,0x0,8
tick,0x7ff86ea82704,56764180,0,0x0,8
tick,0x7ff86ea82704,56766126,0,0x0,8
tick,0x7ff86ea82704,56768068,0,0x0,8
tick,0x7ff86ea82704,56770244,0,0x0,8
tick,0x7ff86ea82704,56772393,0,0x0,8
tick,0x7ff86ea82704,56774370,0,0x0,8
tick,0x7ff86ea82704,56776159,0,0x0,8
tick,0x7ff86ea82704,56778190,0,0x0,8
tick,0x7ff86ea82704,56780075,0,0x0,8
tick,0x7ff86ea82704,56782114,0,0x0,8
tick,0x7ff86ea82704,56784096,0,0x0,8
tick,0x7ff86ea82704,56786068,0,0x0,8
tick,0x7ff86ea82704,56788050,0,0x0,8
tick,0x7ff86ea82704,56790090,0,0x0,8
tick,0x7ff86ea82704,56792090,0,0x0,8
tick,0x7ff86ea82704,56794049,0,0x0,8
tick,0x7ff86ea82704,56796144,0,0x0,8
tick,0x7ff86ea82704,56798067,0,0x0,8
tick,0x7ff86ea82704,56800123,0,0x0,8
tick,0x7ff86ea82704,56802047,0,0x0,8
tick,0x7ff86ea82704,56803982,0,0x0,8
tick,0x7ff86ea82704,56805940,0,0x0,8
tick,0x7ff86ea82704,56808018,0,0x0,8
tick,0x7ff86ea82704,56810101,0,0x0,8
tick,0x7ff86ea82704,56812151,0,0x0,8
tick,0x7ff86ea82704,56814077,0,0x0,8
tick,0x7ff86ea82704,56815947,0,0x0,8
tick,0x7ff86ea82704,56818068,0,0x0,8
tick,0x7ff86ea82704,56819955,0,0x0,8
tick,0x7ff86ea82704,56821941,0,0x0,8
tick,0x7ff86ea82704,56823958,0,0x0,8
tick,0x7ff86ea82704,56826186,0,0x0,8
tick,0x7ff86ea82704,56827937,0,0x0,8
tick,0x7ff86ea82704,56829966,0,0x0,8
tick,0x7ff86ea82704,56831966,0,0x0,8
tick,0x7ff86ea82704,56833935,0,0x0,8
tick,0x7ff86ea82704,56835977,0,0x0,8
tick,0x7ff86ea82704,56837947,0,0x0,8
tick,0x7ff86ea82704,56839901,0,0x0,8
tick,0x7ff86ea82704,56841895,0,0x0,8
tick,0x7ff86ea82704,56844028,0,0x0,8
tick,0x7ff86ea82704,56846132,0,0x0,8
tick,0x7ff86ea82704,56847892,0,0x0,8
tick,0x7ff86ea82704,56850018,0,0x0,8
tick,0x7ff86ea82704,56851897,0,0x0,8
tick,0x7ff86ea82704,56854066,0,0x0,8
tick,0x7ff86ea82704,56855945,0,0x0,8
tick,0x7ff86ea82704,56857886,0,0x0,8
tick,0x7ff86ea82704,56859976,0,0x0,8
tick,0x7ff86ea82704,56861851,0,0x0,8
tick,0x7ff86ea82704,56863961,0,0x0,8
tick,0x7ff86ea82704,56866025,0,0x0,8
tick,0x7ff86ea82704,56868033,0,0x0,8
tick,0x7ff86ea82704,56869870,0,0x0,8
tick,0x7ff86ea82704,56871855,0,0x0,8
tick,0x7ff86ea82704,56873885,0,0x0,8
tick,0x7ff86ea82704,56875950,0,0x0,8
tick,0x7ff86ea82704,56879602,0,0x0,8
tick,0x7ff86ea82704,56881197,0,0x0,8
tick,0x7ff86ea82704,56882950,0,0x0,8
tick,0x7ff86ea82704,56885208,0,0x0,8
tick,0x7ff86ea82704,56886867,0,0x0,8
tick,0x7ff86ea82704,56889007,0,0x0,8
tick,0x7ff86ea82704,56890779,0,0x0,8
tick,0x7ff86ea82704,56893029,0,0x0,8
tick,0x7ff86ea82704,56894806,0,0x0,8
tick,0x7ff86ea82704,56897084,0,0x0,8
tick,0x7ff86ea82704,56898845,0,0x0,8
tick,0x7ff86ea82704,56901095,0,0x0,8
tick,0x7ff86ea82704,56902929,0,0x0,8
tick,0x7ff86ea82704,56904852,0,0x0,8
tick,0x7ff86ea82704,56907008,0,0x0,8
tick,0x7ff86ea82704,56908719,0,0x0,8
tick,0x7ff86ea82704,56910984,0,0x0,8
tick,0x7ff86ea82704,56912783,0,0x0,8
tick,0x7ff86ea82704,56914921,0,0x0,8
tick,0x7ff86ea82704,56916831,0,0x0,8
tick,0x7ff86ea82704,56918715,0,0x0,8
tick,0x7ff86ea82704,56920848,0,0x0,8
tick,0x7ff86ea82704,56922857,0,0x0,8
tick,0x7ff86ea82704,56924766,0,0x0,8
tick,0x7ff86ea82704,56926750,0,0x0,8
tick,0x7ff86ea82704,56928825,0,0x0,8
tick,0x7ff86ea82704,56930730,0,0x0,8
tick,0x7ff86ea82704,56932704,0,0x0,8
tick,0x7ff86ea82704,56934832,0,0x0,8
tick,0x7ff86ea82704,56936999,0,0x0,8
tick,0x7ff86ea82704,56938861,0,0x0,8
tick,0x7ff86ea82704,56940846,0,0x0,8
tick,0x7ff86ea82704,56942851,0,0x0,8
tick,0x7ff86ea82704,56944903,0,0x0,8
tick,0x7ff86ea82704,56946653,0,0x0,8
tick,0x7ff86ea82704,56948819,0,0x0,8
tick,0x7ff86ea82704,56950698,0,0x0,8
tick,0x7ff86ea82704,56952888,0,0x0,8
tick,0x7ff86ea82704,56954590,0,0x0,8
tick,0x7ff86ea82704,56956700,0,0x0,8
tick,0x7ff86ea82704,56958682,0,0x0,8
tick,0x7ff86ea82704,56960598,0,0x0,8
tick,0x7ff86ea82704,56962737,0,0x0,8
tick,0x7ff86ea82704,56964632,0,0x0,8
tick,0x7ff86ea82704,56966758,0,0x0,8
tick,0x7ff86ea82704,56968654,0,0x0,8
tick,0x7ff86ea82704,56970688,0,0x0,8
tick,0x7ff86ea82704,56972688,0,0x0,8
tick,0x7ff86ea82704,56974723,0,0x0,8
tick,0x7ff86ea82704,56976881,0,0x0,8
tick,0x7ff86ea82704,56978682,0,0x0,8
tick,0x7ff86ea82704,56980743,0,0x0,8
tick,0x7ff86ea82704,56982854,0,0x0,8
tick,0x7ff86ea82704,56984684,0,0x0,8
tick,0x7ff86ea82704,56986649,0,0x0,8
tick,0x7ff86ea82704,56988565,0,0x0,8
tick,0x7ff86ea82704,56990632,0,0x0,8
tick,0x7ff86ea82704,56993054,0,0x0,8
tick,0x7ff86ea82704,56994546,0,0x0,8
tick,0x7ff86ea82704,56996624,0,0x0,8
tick,0x7ff86ea82704,56998631,0,0x0,8
tick,0x7ff86ea82704,57000507,0,0x0,8
tick,0x7ff86ea82704,57002604,0,0x0,8
tick,0x7ff86ea82704,57004584,0,0x0,8
tick,0x7ff86ea82704,57006604,0,0x0,8
tick,0x7ff86ea82704,57008684,0,0x0,8
tick,0x7ff86ea82704,57010595,0,0x0,8
tick,0x7ff86ea82704,57012481,0,0x0,8
tick,0x7ff86ea82704,57014799,0,0x0,8
tick,0x7ff86ea82704,57016515,0,0x0,8
tick,0x7ff86ea82704,57018812,0,0x0,8
tick,0x7ff86ea82704,57020874,0,0x0,8
tick,0x7ff86ea82704,57022785,0,0x0,8
tick,0x7ff86ea82704,57024491,0,0x0,8
tick,0x7ff86ea82704,57026663,0,0x0,8
tick,0x7ff86ea82704,57028510,0,0x0,8
tick,0x7ff86ea82704,57030636,0,0x0,8
tick,0x7ff86ea82704,57032539,0,0x0,8
tick,0x7ff86ea82704,57034602,0,0x0,8
tick,0x7ff86ea82704,57036464,0,0x0,8
tick,0x7ff86ea82704,57038542,0,0x0,8
tick,0x7ff86ea82704,57040368,0,0x0,8
tick,0x7ff86ea82704,57042662,0,0x0,8
tick,0x7ff86ea82704,57044564,0,0x0,8
tick,0x7ff86ea82704,57046431,0,0x0,8
tick,0x7ff86ea82704,57048548,0,0x0,8
tick,0x7ff86ea82704,57050507,0,0x0,8
tick,0x7ff86ea82704,57052689,0,0x0,8
tick,0x7ff86ea82704,57054532,0,0x0,8
tick,0x7ff86ea82704,57056436,0,0x0,8
tick,0x7ff86ea82704,57058522,0,0x0,8
tick,0x7ff86ea82704,57060706,0,0x0,8
tick,0x7ff86ea82704,57062476,0,0x0,8
tick,0x7ff86ea82704,57064450,0,0x0,8
tick,0x7ff86ea82704,57066426,0,0x0,8
tick,0x7ff86ea82704,57068425,0,0x0,8
tick,0x7ff86ea82704,57070487,0,0x0,8
tick,0x7ff86ea82704,57072391,0,0x0,8
tick,0x7ff86ea82704,57074406,0,0x0,8
tick,0x7ff86ea82704,57076489,0,0x0,8
tick,0x7ff86ea82704,57078384,0,0x0,8
tick,0x7ff86ea82704,57080365,0,0x0,8
tick,0x7ff86ea82704,57082395,0,0x0,8
tick,0x7ff86ea82704,57084498,0,0x0,8
tick,0x7ff86ea82704,57086414,0,0x0,8
tick,0x7ff86ea82704,57088408,0,0x0,8
tick,0x7ff86ea82704,57090362,0,0x0,8
tick,0x7ff86ea82704,57092679,0,0x0,8
tick,0x7ff86ea82704,57094300,0,0x0,8
tick,0x7ff86ea82704,57096385,0,0x0,8
tick,0x7ff86ea82704,57098412,0,0x0,8
tick,0x7ff86ea82704,57100330,0,0x0,8
tick,0x7ff86ea82704,57102340,0,0x0,8
tick,0x7ff86ea82704,57104480,0,0x0,8
tick,0x7ff86ea82704,57106314,0,0x0,8
tick,0x7ff86ea82704,57108603,0,0x0,8
tick,0x7ff86ea82704,57110353,0,0x0,8
tick,0x7ff86ea82704,57112380,0,0x0,8
tick,0x7ff86ea82704,57114351,0,0x0,8
tick,0x7ff86ea82704,57116277,0,0x0,8
tick,0x7ff86ea82704,57118474,0,0x0,8
tick,0x7ff86ea82704,57120262,0,0x0,8
tick,0x7ff86ea82704,57122220,0,0x0,8
tick,0x7ff86ea82704,57124441,0,0x0,8
tick,0x7ff86ea82704,57126325,0,0x0,8
tick,0x7ff86ea82704,57128262,0,0x0,8
tick,0x7ff86ea82704,57130230,0,0x0,8
tick,0x7ff86ea82704,57132390,0,0x0,8
tick,0x7ff86ea82704,57134185,0,0x0,8
tick,0x7ff86ea82704,57136291,0,0x0,8
tick,0x7ff86ea82704,57138126,0,0x0,8
tick,0x7ff86ea82704,57140326,0,0x0,8
tick,0x7ff86ea82704,57142248,0,0x0,8
tick,0x7ff86ea82704,57144282,0,0x0,8
tick,0x7ff86ea82704,57146265,0,0x0,8
tick,0x7ff86ea82704,57148184,0,0x0,8
tick,0x7ff86ea82704,57150263,0,0x0,8
tick,0x7ff86ea82704,57152325,0,0x0,8
tick,0x7ff86ea82704,57154334,0,0x0,8
tick,0x7ff86ea82704,57156189,0,0x0,8
tick,0x7ff86ea82704,57158317,0,0x0,8
tick,0x7ff86ea82704,57160134,0,0x0,8
tick,0x7ff86ea82704,57162498,0,0x0,8
tick,0x7ff86ea82704,57164265,0,0x0,8
tick,0x7ff86ea82704,57166556,0,0x0,8
tick,0x7ff86ea82704,57168194,0,0x0,8
tick,0x7ff86ea82704,57170324,0,0x0,8
tick,0x7ff86ea82704,57172262,0,0x0,8
tick,0x7ff86ea82704,57174154,0,0x0,8
tick,0x7ff86ea82704,57176141,0,0x0,8
tick,0x7ff86ea82704,57178314,0,0x0,8
tick,0x7ff86ea82704,57180169,0,0x0,8
tick,0x7ff86ea82704,57182122,0,0x0,8
tick,0x7ff86ea82704,57184154,0,0x0,8
tick,0x7ff86ea82704,57186156,0,0x0,8
tick,0x7ff86ea82704,57188081,0,0x0,8
tick,0x7ff86ea82704,57190152,0,0x0,8
tick,0x7ff86ea82704,57192184,0,0x0,8
tick,0x7ff86ea82704,57194254,0,0x0,8
tick,0x7ff86ea82704,57196116,0,0x0,8
tick,0x7ff86ea82704,57198120,0,0x0,8
tick,0x7ff86ea82704,57200166,0,0x0,8
tick,0x7ff86ea82704,57202205,0,0x0,8
tick,0x7ff86ea82704,57204063,0,0x0,8
tick,0x7ff86ea82704,57206114,0,0x0,8
tick,0x7ff86ea82704,57208296,0,0x0,8
tick,0x7ff86ea82704,57210152,0,0x0,8
tick,0x7ff86ea82704,57212037,0,0x0,8
tick,0x7ff86ea82704,57214083,0,0x0,8
tick,0x7ff86ea82704,57215997,0,0x0,8
tick,0x7ff86ea82704,57218048,0,0x0,8
tick,0x7ff86ea82704,57220043,0,0x0,8
tick,0x7ff86ea82704,57222024,0,0x0,8
tick,0x7ff86ea82704,57223984,0,0x0,8
tick,0x7ff86ea82704,57226144,0,0x0,8
tick,0x7ff86ea82704,57228069,0,0x0,8
tick,0x7ff86ea82704,57230031,0,0x0,8
tick,0x7ff86ea82704,57232028,0,0x0,8
tick,0x7ff86ea82704,57234099,0,0x0,8
tick,0x7ff86ea82704,57235992,0,0x0,8
tick,0x7ff86ea82704,57237997,0,0x0,8
tick,0x7ff86ea82704,57240132,0,0x0,8
tick,0x7ff86ea82704,57241977,0,0x0,8
tick,0x7ff86ea82704,57244100,0,0x0,8
tick,0x7ff86ea82704,57245856,0,0x0,8
tick,0x7ff86ea82704,57248013,0,0x0,8
tick,0x7ff86ea82704,57249975,0,0x0,8
tick,0x7ff86ea82704,57251952,0,0x0,8
tick,0x7ff86ea82704,57254041,0,0x0,8
tick,0x7ff86ea82704,57256005,0,0x0,8
tick,0x7ff86ea82704,57258410,0,0x0,8
tick,0x7ff86ea82704,57259962,0,0x0,8
tick,0x7ff86ea82704,57262154,0,0x0,8
tick,0x7ff86ea82704,57263943,0,0x0,8
tick,0x7ff86ea82704,57265971,0,0x0,8
tick,0x7ff86ea82704,57267884,0,0x0,8
tick,0x7ff86ea82704,57269881,0,0x0,8
tick,0x7ff86ea82704,57271845,0,0x0,8
tick,0x7ff86ea82704,57273831,0,0x0,8
tick,0x7ff86ea82704,57276244,0,0x0,8
tick,0x7ff86ea82704,57277809,0,0x0,8
tick,0x7ff86ea82704,57279834,0,0x0,8
tick,0x7ff86ea82704,57281751,0,0x0,8
tick,0x7ff86ea82704,57283909,0,0x0,8
tick,0x7ff86ea82704,57285869,0,0x0,8
tick,0x7ff86ea82704,57287878,0,0x0,8
tick,0x7ff86ea82704,57289790,0,0x0,8
tick,0x7ff86ea82704,57291854,0,0x0,8
tick,0x7ff86ea82704,57293771,0,0x0,8
tick,0x7ff86ea82704,57295847,0,0x0,8
tick,0x7ff86ea82704,57298106,0,0x0,8
tick,0x7ff86ea82704,57299822,0,0x0,8
tick,0x7ff86ea82704,57301761,0,0x0,8
tick,0x7ff86ea82704,57303806,0,0x0,8
tick,0x7ff86ea82704,57305815,0,0x0,8
tick,0x7ff86ea82704,57307685,0,0x0,8
tick,0x7ff86ea82704,57309732,0,0x0,8
tick,0x7ff86ea82704,57311758,0,0x0,8
tick,0x7ff86ea82704,57313778,0,0x0,8
tick,0x7ff86ea82704,57315914,0,0x0,8
tick,0x7ff86ea82704,57317803,0,0x0,8
tick,0x7ff86ea82704,57319758,0,0x0,8
tick,0x7ff86ea82704,57321877,0,0x0,8
tick,0x7ff86ea82704,57323872,0,0x0,8
tick,0x7ff86ea82704,57327093,0,0x0,8
tick,0x7ff86ea82704,57329591,0,0x0,8
tick,0x7ff86ea82704,57330513,0,0x0,8
tick,0x7ff86ea82704,57332520,0,0x0,8
tick,0x7ff86ea82704,57334566,0,0x0,8
tick,0x7ff86ea82704,57337060,0,0x0,8
tick,0x7ff86ea82704,57338591,0,0x0,8
tick,0x7ff86ea82704,57340574,0,0x0,8
tick,0x7ff86ea82704,57342994,0,0x0,8
tick,0x7ff86ea82704,57345336,0,0x0,8
tick,0x7ff86ea82704,57346595,0,0x0,8
tick,0x7ff86ea82704,57348598,0,0x0,8
tick,0x7ff86ea82704,57350576,0,0x0,8
tick,0x7ff86ea82704,57352577,0,0x0,8
tick,0x7ff86ea82704,57354659,0,0x0,8
tick,0x7ff86ea82704,57356625,0,0x0,8
tick,0x7ff86ea82704,57358630,0,0x0,8
tick,0x7ff86ea82704,57360624,0,0x0,8
tick,0x7ff86ea82704,57362617,0,0x0,8
tick,0x7ff86ea82704,57364474,0,0x0,8
tick,0x7ff86ea82704,57366556,0,0x0,8
tick,0x7ff86ea82704,57368560,0,0x0,8
tick,0x7ff86ea82704,57371146,0,0x0,8
tick,0x7ff86ea82704,57372515,0,0x0,8
tick,0x7ff86ea82704,57374631,0,0x0,8
tick,0x7ff86ea82704,57376983,0,0x0,8
tick,0x7ff86ea82704,57378653,0,0x0,8
tick,0x7ff86ea82704,57380490,0,0x0,8
tick,0x7ff86ea82704,57382585,0,0x0,8
tick,0x7ff86ea82704,57384558,0,0x0,8
tick,0x7ff86ea82704,57386559,0,0x0,8
tick,0x7ff86ea82704,57388472,0,0x0,8
tick,0x7ff86ea82704,57390598,0,0x0,8
tick,0x7ff86ea82704,57392663,0,0x0,8
tick,0x7ff86ea82704,57395747,0,0x0,8
tick,0x7ff86ea82704,57397860,0,0x0,8
tick,0x7ff86ea82704,57399695,0,0x0,8
tick,0x7ff86ea82704,57401488,0,0x0,8
tick,0x7ff86ea82704,57403570,0,0x0,8
tick,0x7ff86ea82704,57405531,0,0x0,8
tick,0x7ff86ea82704,57407705,0,0x0,8
tick,0x7ff86ea82704,57409783,0,0x0,8
tick,0x7ff86ea82704,57411928,0,0x0,8
tick,0x7ff86ea82704,57413847,0,0x0,8
tick,0x7ff86ea82704,57415697,0,0x0,8
tick,0x7ff86ea82704,57417690,0,0x0,8
tick,0x7ff86ea82704,57419588,0,0x0,8
tick,0x7ff86ea82704,57421537,0,0x0,8
tick,0x7ff86ea82704,57423495,0,0x0,8
tick,0x7ff86ea82704,57425534,0,0x0,8
tick,0x7ff86ea82704,57427719,0,0x0,8
tick,0x7ff86ea82704,57429573,0,0x0,8
tick,0x7ff86ea82704,57431499,0,0x0,8
tick,0x7ff86ea82704,57433930,0,0x0,8
tick,0x7ff86ea82704,57437010,0,0x0,8
tick,0x7ff86ea82704,57437888,0,0x0,8
tick,0x7ff86ea82704,57439494,0,0x0,8
tick,0x7ff86ea82704,57441911,0,0x0,8
tick,0x7ff86ea82704,57444900,0,0x0,8
tick,0x7ff86ea82704,57446105,0,0x0,8
tick,0x7ff86ea82704,57447536,0,0x0,8
tick,0x7ff86ea82704,57449608,0,0x0,8
tick,0x7ff86ea82704,57451374,0,0x0,8
tick,0x7ff86ea82704,57453603,0,0x0,8
tick,0x7ff86ea82704,57456052,0,0x0,8
tick,0x7ff86ea82704,57457455,0,0x0,8
tick,0x7ff86ea82704,57459908,0,0x0,8
tick,0x7ff86ea82704,57461847,0,0x0,8
tick,0x7ff86ea82704,57463702,0,0x0,8
tick,0x7ff86ea82704,57465380,0,0x0,8
tick,0x7ff86ea82704,57467414,0,0x0,8
tick,0x7ff86ea82704,57469520,0,0x0,8
tick,0x7ff86ea82704,57471411,0,0x0,8
tick,0x7ff86ea82704,57473400,0,0x0,8
tick,0x7ff86ea82704,57475613,0,0x0,8
tick,0x7ff86ea82704,57477660,0,0x0,8
tick,0x7ff86ea82704,57480129,0,0x0,8
tick,0x7ff86ea82704,57481232,0,0x0,8
tick,0x7ff86ea82704,57483528,0,0x0,8
tick,0x7ff86ea82704,57485355,0,0x0,8
tick,0x7ff86ea82704,57487406,0,0x0,8
tick,0x7ff86ea82704,57489271,0,0x0,8
tick,0x7ff86ea82704,57491292,0,0x0,8
tick,0x7ff86ea82704,57493820,0,0x0,8
tick,0x7ff86ea82704,57495773,0,0x0,8
tick,0x7ff86ea82704,57497231,0,0x0,8
tick,0x7ff86ea82704,57499260,0,0x0,8
tick,0x7ff86ea82704,57501167,0,0x0,8
tick,0x7ff86ea82704,57503253,0,0x0,8
tick,0x7ff86ea82704,57505176,0,0x0,8
tick,0x7ff86ea82704,57507182,0,0x0,8
tick,0x7ff86ea82704,57509371,0,0x0,8
tick,0x7ff86ea82704,57511474,0,0x0,8
tick,0x7ff86ea82704,57513291,0,0x0,8
tick,0x7ff86ea82704,57515347,0,0x0,8
tick,0x7ff86ea82704,57517396,0,0x0,8
tick,0x7ff86ea82704,57519319,0,0x0,8
tick,0x7ff86ea82704,57521363,0,0x0,8
tick,0x7ff86ea82704,57523252,0,0x0,8
tick,0x7ff86ea82704,57525611,0,0x0,8
tick,0x7ff86ea82704,57527561,0,0x0,8
tick,0x7ff86ea82704,57529195,0,0x0,8
tick,0x7ff86ea82704,57531232,0,0x0,8
tick,0x7ff86ea82704,57533197,0,0x0,8
tick,0x7ff86ea82704,57535076,0,0x0,8
tick,0x7ff86ea82704,57537075,0,0x0,8
tick,0x7ff86ea82704,57539073,0,0x0,8
tick,0x7ff86ea82704,57541107,0,0x0,8
tick,0x7ff86ea82704,57543282,0,0x0,8
tick,0x7ff86ea82704,57545126,0,0x0,8
tick,0x7ff86ea82704,57547454,0,0x0,8
tick,0x7ff86ea82704,57549786,0,0x0,8
tick,0x7ff86ea82704,57551183,0,0x0,8
tick,0x7ff86ea82704,57555352,0,0x0,8
tick,0x7ff86ea82704,57557429,0,0x0,8
tick,0x7ff86ea82704,57559387,0,0x0,8
tick,0x7ff86ea82704,57561812,0,0x0,8
tick,0x7ff86ea82704,57564372,0,0x0,8
tick,0x7ff86ea82704,57566191,0,0x0,8
tick,0x7ff86ea82704,57568173,0,0x0,8
tick,0x7ff86ea82704,57570042,0,0x0,8
tick,0x7ff86ea82704,57572355,0,0x0,8
tick,0x7ff86ea82704,57574448,0,0x0,8
tick,0x7ff86ea82704,57578340,0,0x0,8
tick,0x7ff86ea82704,57581772,0,0x0,8
tick,0x7ff86ea82704,57583089,0,0x0,8
tick,0x7ff86ea82704,57585329,0,0x0,8
tick,0x7ff86ea82704,57587055,0,0x0,8
tick,0x7ff86ea82704,57589140,0,0x0,8
tick,0x7ff86ea82704,57591215,0,0x0,8
tick,0x7ff86ea82704,57593191,0,0x0,8
tick,0x7ff86ea82704,57595786,0,0x0,8
tick,0x7ff86ea82704,57597419,0,0x0,8
tick,0x7ff86ea82704,57598928,0,0x0,8
tick,0x7ff86ea82704,57601046,0,0x0,8
tick,0x7ff86ea82704,57603041,0,0x0,8
tick,0x7ff86ea82704,57604845,0,0x0,8
tick,0x7ff86ea82704,57606909,0,0x0,8
tick,0x7ff86ea82704,57609070,0,0x0,8
tick,0x7ff86ea82704,57612891,0,0x0,8
tick,0x7ff86ea82704,57612936,0,0x0,8
tick,0x7ff86ea82704,57614971,0,0x0,8
tick,0x7ff86ea82704,57617271,0,0x0,8
tick,0x7ff86ea82704,57618889,0,0x0,8
tick,0x7ff86ea82704,57621148,0,0x0,8
tick,0x7ff86ea82704,57623310,0,0x0,8
tick,0x7ff86ea82704,57624905,0,0x0,8
tick,0x7ff86ea82704,57627165,0,0x0,8
tick,0x7ff86ea82704,57629258,0,0x0,8
tick,0x7ff86ea82704,57631171,0,0x0,8
tick,0x7ff86ea82704,57632828,0,0x0,8
tick,0x7ff86ea82704,57634785,0,0x0,8
tick,0x7ff86ea82704,57636810,0,0x0,8
tick,0x7ff86ea82704,57638918,0,0x0,8
tick,0x7ff86ea82704,57640848,0,0x0,8
tick,0x7ff86ea82704,57643245,0,0x0,8
tick,0x7ff86ea82704,57644734,0,0x0,8
tick,0x7ff86ea82704,57646802,0,0x0,8
tick,0x7ff86ea82704,57648753,0,0x0,8
tick,0x7ff86ea82704,57650864,0,0x0,8
tick,0x7ff86ea82704,57652888,0,0x0,8
tick,0x7ff86ea82704,57654897,0,0x0,8
tick,0x7ff86ea82704,57657075,0,0x0,8
tick,0x7ff86ea82704,57658903,0,0x0,8
tick,0x7ff86ea82704,57660929,0,0x0,8
tick,0x7ff86ea82704,57663274,0,0x0,8
tick,0x7ff86ea82704,57665164,0,0x0,8
tick,0x7ff86ea82704,57666717,0,0x0,8
tick,0x7ff86ea82704,57668762,0,0x0,8
tick,0x7ff86ea82704,57670883,0,0x0,8
tick,0x7ff86ea82704,57672782,0,0x0,8
tick,0x7ff86ea82704,57674768,0,0x0,8
tick,0x7ff86ea82704,57676952,0,0x0,8
tick,0x7ff86ea82704,57678732,0,0x0,8
tick,0x7ff86ea82704,57681024,0,0x0,8
tick,0x7ff86ea82704,57682948,0,0x0,8
tick,0x7ff86ea82704,57684979,0,0x0,8
tick,0x7ff86ea82704,57687176,0,0x0,8
tick,0x7ff86ea82704,57688866,0,0x0,8
tick,0x7ff86ea82704,57690651,0,0x0,8
tick,0x7ff86ea82704,57692781,0,0x0,8
tick,0x7ff86ea82704,57694794,0,0x0,8
tick,0x7ff86ea82704,57696851,0,0x0,8
tick,0x7ff86ea82704,57698930,0,0x0,8
tick,0x7ff86ea82704,57700709,0,0x0,8
tick,0x7ff86ea82704,57702722,0,0x0,8
tick,0x7ff86ea82704,57704765,0,0x0,8
tick,0x7ff86ea82704,57706614,0,0x0,8
tick,0x7ff86ea82704,57708631,0,0x0,8
tick,0x7ff86ea82704,57710665,0,0x0,8
tick,0x7ff86ea82704,57712807,0,0x0,8
tick,0x7ff86ea82704,57714681,0,0x0,8
tick,0x7ff86ea82704,57716696,0,0x0,8
tick,0x7ff86ea82704,57718620,0,0x0,8
tick,0x7ff86ea82704,57720698,0,0x0,8
tick,0x7ff86ea82704,57722545,0,0x0,8
tick,0x7ff86ea82704,57724636,0,0x0,8
tick,0x7ff86ea82704,57726658,0,0x0,8
tick,0x7ff86ea82704,57728679,0,0x0,8
tick,0x7ff86ea82704,57730605,0,0x0,8
tick,0x7ff86ea82704,57732560,0,0x0,8
tick,0x7ff86ea82704,57734563,0,0x0,8
tick,0x7ff86ea82704,57736528,0,0x0,8
tick,0x7ff86ea82704,57738477,0,0x0,8
tick,0x7ff86ea82704,57740589,0,0x0,8
tick,0x7ff86ea82704,57742780,0,0x0,8
tick,0x7ff86ea82704,57744583,0,0x0,8
tick,0x7ff86ea82704,57746806,0,0x0,8
tick,0x7ff86ea82704,57748650,0,0x0,8
tick,0x7ff86ea82704,57750467,0,0x0,8
tick,0x7ff86ea82704,57752551,0,0x0,8
tick,0x7ff86ea82704,57754500,0,0x0,8
tick,0x7ff86ea82704,57756618,0,0x0,8
tick,0x7ff86ea82704,57758456,0,0x0,8
tick,0x7ff86ea82704,57760571,0,0x0,8
tick,0x7ff86ea82704,57762437,0,0x0,8
tick,0x7ff86ea82704,57764596,0,0x0,8
tick,0x7ff86ea82704,57766492,0,0x0,8
tick,0x7ff86ea82704,57768514,0,0x0,8
tick,0x7ff86ea82704,57770679,0,0x0,8
tick,0x7ff86ea82704,57772503,0,0x0,8
tick,0x7ff86ea82704,57774561,0,0x0,8
tick,0x7ff86ea82704,57776599,0,0x0,8
tick,0x7ff86ea82704,57778478,0,0x0,8
tick,0x7ff86ea82704,57780492,0,0x0,8
tick,0x7ff86ea82704,57782433,0,0x0,8
tick,0x7ff86ea82704,57784469,0,0x0,8
tick,0x7ff86ea82704,57786375,0,0x0,8
tick,0x7ff86ea82704,57788401,0,0x0,8
tick,0x7ff86ea82704,57790393,0,0x0,8
tick,0x7ff86ea82704,57792508,0,0x0,8
tick,0x7ff86ea82704,57794396,0,0x0,8
tick,0x7ff86ea82704,57796376,0,0x0,8
tick,0x7ff86ea82704,57798423,0,0x0,8
tick,0x7ff86ea82704,57800269,0,0x0,8
tick,0x7ff86ea82704,57802413,0,0x0,8
tick,0x7ff86ea82704,57804367,0,0x0,8
tick,0x7ff86ea82704,57806454,0,0x0,8
tick,0x7ff86ea82704,57808398,0,0x0,8
tick,0x7ff86ea82704,57810450,0,0x0,8
tick,0x7ff86ea82704,57812437,0,0x0,8
tick,0x7ff86ea82704,57814411,0,0x0,8
tick,0x7ff86ea82704,57816396,0,0x0,8
tick,0x7ff86ea82704,57818350,0,0x0,8
tick,0x7ff86ea82704,57820291,0,0x0,8
tick,0x7ff86ea82704,57822427,0,0x0,8
tick,0x7ff86ea82704,57824383,0,0x0,8
tick,0x7ff86ea82704,57826518,0,0x0,8
tick,0x7ff86ea82704,57828326,0,0x0,8
tick,0x7ff86ea82704,57830273,0,0x0,8
tick,0x7ff86ea82704,57832315,0,0x0,8
tick,0x7ff86ea82704,57834383,0,0x0,8
tick,0x7ff86ea82704,57836266,0,0x0,8
tick,0x7ff86ea82704,57838380,0,0x0,8
tick,0x7ff86ea82704,57840321,0,0x0,8
tick,0x7ff86ea82704,57842224,0,0x0,8
tick,0x7ff86ea82704,57844283,0,0x0,8
tick,0x7ff86ea82704,57846272,0,0x0,8
tick,0x7ff86ea82704,57848295,0,0x0,8
tick,0x7ff86ea82704,57850501,0,0x0,8
tick,0x7ff86ea82704,57855243,0,0x0,8
tick,0x7ff86ea82704,57856098,0,0x0,8
tick,0x7ff86ea82704,57858162,0,0x0,8
tick,0x7ff86ea82704,57860121,0,0x0,8
tick,0x7ff86ea82704,57862211,0,0x0,8
tick,0x7ff86ea82704,57864105,0,0x0,8
tick,0x7ff86ea82704,57866119,0,0x0,8
tick,0x7ff86ea82704,57868105,0,0x0,8
tick,0x7ff86ea82704,57870241,0,0x0,8
tick,0x7ff86ea82704,57872151,0,0x0,8
tick,0x7ff86ea82704,57874079,0,0x0,8
tick,0x7ff86ea82704,57876115,0,0x0,8
tick,0x7ff86ea82704,57878036,0,0x0,8
tick,0x7ff86ea82704,57880092,0,0x0,8
tick,0x7ff86ea82704,57882055,0,0x0,8
tick,0x7ff86ea82704,57884120,0,0x0,8
tick,0x7ff86ea82704,57886089,0,0x0,8
tick,0x7ff86ea82704,57888101,0,0x0,8
tick,0x7ff86ea82704,57890035,0,0x0,8
tick,0x7ff86ea82704,57892056,0,0x0,8
tick,0x7ff86ea82704,57894035,0,0x0,8
tick,0x7ff86ea82704,57896051,0,0x0,8
tick,0x7ff86ea82704,57898059,0,0x0,8
tick,0x7ff86ea82704,57900001,0,0x0,8
tick,0x7ff86ea82704,57902087,0,0x0,8
tick,0x7ff86ea82704,57904082,0,0x0,8
tick,0x7ff86ea82704,57906005,0,0x0,8
tick,0x7ff86ea82704,57908018,0,0x0,8
tick,0x7ff86ea82704,57909966,0,0x0,8
tick,0x7ff86ea82704,57912021,0,0x0,8
tick,0x7ff86ea82704,57914000,0,0x0,8
tick,0x7ff86ea82704,57916049,0,0x0,8
tick,0x7ff86ea82704,57917955,0,0x0,8
tick,0x7ff86ea82704,57919987,0,0x0,8
tick,0x7ff86ea82704,57921900,0,0x0,8
tick,0x7ff86ea82704,57923993,0,0x0,8
tick,0x7ff86ea82704,57925945,0,0x0,8
tick,0x7ff86ea82704,57928013,0,0x0,8
tick,0x7ff86ea82704,57929942,0,0x0,8
tick,0x7ff86ea82704,57932116,0,0x0,8
tick,0x7ff86ea82704,57933989,0,0x0,8
tick,0x7ff86ea82704,57936015,0,0x0,8
tick,0x7ff86ea82704,57937927,0,0x0,8
tick,0x7ff86ea82704,57939965,0,0x0,8
tick,0x7ff86ea82704,57941868,0,0x0,8
tick,0x7ff86ea82704,57943932,0,0x0,8
tick,0x7ff86ea82704,57945896,0,0x0,8
tick,0x7ff86ea82704,57948033,0,0x0,8
tick,0x7ff86ea82704,57950003,0,0x0,8
tick,0x7ff86ea82704,57951950,0,0x0,8
tick,0x7ff86ea82704,57953885,0,0x0,8
tick,0x7ff86ea82704,57956047,0,0x0,8
tick,0x7ff86ea82704,57957860,0,0x0,8
tick,0x7ff86ea82704,57959979,0,0x0,8
tick,0x7ff86ea82704,57961879,0,0x0,8
tick,0x7ff86ea82704,57963853,0,0x0,8
tick,0x7ff86ea82704,57965866,0,0x0,8
tick,0x7ff86ea82704,57967869,0,0x0,8
tick,0x7ff86ea82704,57969942,0,0x0,8
tick,0x7ff86ea82704,57971864,0,0x0,8
tick,0x7ff86ea82704,57973876,0,0x0,8
tick,0x7ff86ea82704,57975802,0,0x0,8
tick,0x7ff86ea82704,57977952,0,0x0,8
tick,0x7ff86ea82704,57979796,0,0x0,8
tick,0x7ff86ea82704,57981848,0,0x0,8
tick,0x7ff86ea82704,57983759,0,0x0,8
tick,0x7ff86ea82704,57985812,0,0x0,8
tick,0x7ff86ea82704,57987761,0,0x0,8
tick,0x7ff86ea82704,57989875,0,0x0,8
tick,0x7ff86ea82704,57991763,0,0x0,8
tick,0x7ff86ea82704,57993778,0,0x0,8
tick,0x7ff86ea82704,57995743,0,0x0,8
tick,0x7ff86ea82704,57997809,0,0x0,8
tick,0x7ff86ea82704,57999812,0,0x0,8
tick,0x7ff86ea82704,58001759,0,0x0,8
tick,0x7ff86ea82704,58003775,0,0x0,8
tick,0x7ff86ea82704,58005728,0,0x0,8
tick,0x7ff86ea82704,58007789,0,0x0,8
tick,0x7ff86ea82704,58009738,0,0x0,8
tick,0x7ff86ea82704,58011762,0,0x0,8
tick,0x7ff86ea82704,58013742,0,0x0,8
tick,0x7ff86ea82704,58015678,0,0x0,8
tick,0x7ff86ea82704,58017761,0,0x0,8
tick,0x7ff86ea82704,58019723,0,0x0,8
tick,0x7ff86ea82704,58021698,0,0x0,8
tick,0x7ff86ea82704,58023635,0,0x0,8
tick,0x7ff86ea82704,58025719,0,0x0,8
tick,0x7ff86ea82704,58027671,0,0x0,8
tick,0x7ff86ea82704,58029722,0,0x0,8
tick,0x7ff86ea82704,58031705,0,0x0,8
tick,0x7ff86ea82704,58033704,0,0x0,8
tick,0x7ff86ea82704,58035675,0,0x0,8
tick,0x7ff86ea82704,58037659,0,0x0,8
tick,0x7ff86ea82704,58039692,0,0x0,8
tick,0x7ff86ea82704,58041733,0,0x0,8
tick,0x7ff86ea82704,58043653,0,0x0,8
tick,0x7ff86ea82704,58045647,0,0x0,8
tick,0x7ff86ea82704,58047664,0,0x0,8
tick,0x7ff86ea82704,58049626,0,0x0,8
tick,0x7ff86ea82704,58051607,0,0x0,8
tick,0x7ff86ea82704,58053646,0,0x0,8
tick,0x7ff86ea82704,58055601,0,0x0,8
tick,0x7ff86ea82704,58057662,0,0x0,8
tick,0x7ff86ea82704,58059566,0,0x0,8
tick,0x7ff86ea82704,58061621,0,0x0,8
tick,0x7ff86ea82704,58063608,0,0x0,8
tick,0x7ff86ea82704,58065583,0,0x0,8
tick,0x7ff86ea82704,58067555,0,0x0,8
tick,0x7ff86ea82704,58069599,0,0x0,8
tick,0x7ff86ea82704,58071582,0,0x0,8
tick,0x7ff86ea82704,58073696,0,0x0,8
tick,0x7ff86ea82704,58075606,0,0x0,8
tick,0x7ff86ea82704,58077640,0,0x0,8
tick,0x7ff86ea82704,58079631,0,0x0,8
tick,0x7ff86ea82704,58081572,0,0x0,8
tick,0x7ff86ea82704,58083536,0,0x0,8
tick,0x7ff86ea82704,58085608,0,0x0,8
tick,0x7ff86ea82704,58087473,0,0x0,8
tick,0x7ff86ea82704,58089623,0,0x0,8
tick,0x7ff86ea82704,58091461,0,0x0,8
tick,0x7ff86ea82704,58093535,0,0x0,8
tick,0x7ff86ea82704,58095459,0,0x0,8
tick,0x7ff86ea82704,58097551,0,0x0,8
tick,0x7ff86ea82704,58099447,0,0x0,8
tick,0x7ff86ea82704,58101646,0,0x0,8
tick,0x7ff86ea82704,58103445,0,0x0,8
tick,0x7ff86ea82704,58105525,0,0x0,8
tick,0x7ff86ea82704,58107562,0,0x0,8
tick,0x7ff86ea82704,58109661,0,0x0,8
tick,0x7ff86ea82704,58111482,0,0x0,8
tick,0x7ff86ea82704,58113438,0,0x0,8
tick,0x7ff86ea82704,58115514,0,0x0,8
tick,0x7ff86ea82704,58117374,0,0x0,8
tick,0x7ff86ea82704,58119552,0,0x0,8
tick,0x7ff86ea82704,58121385,0,0x0,8
tick,0x7ff86ea82704,58123446,0,0x0,8
tick,0x7ff86ea82704,58125565,0,0x0,8
tick,0x7ff86ea82704,58127516,0,0x0,8
tick,0x7ff86ea82704,58129465,0,0x0,8
tick,0x7ff86ea82704,58131464,0,0x0,8
tick,0x7ff86ea82704,58133431,0,0x0,8
tick,0x7ff86ea82704,58135382,0,0x0,8
tick,0x7ff86ea82704,58137399,0,0x0,8
tick,0x7ff86ea82704,58139403,0,0x0,8
tick,0x7ff86ea82704,58141475,0,0x0,8
tick,0x7ff86ea82704,58143345,0,0x0,8
tick,0x7ff86ea82704,58145431,0,0x0,8
tick,0x7ff86ea82704,58147363,0,0x0,8
tick,0x7ff86ea82704,58149344,0,0x0,8
tick,0x7ff86ea82704,58151324,0,0x0,8
tick,0x7ff86ea82704,58153360,0,0x0,8
tick,0x7ff86ea82704,58155445,0,0x0,8
tick,0x7ff86ea82704,58157406,0,0x0,8
tick,0x7ff86ea82704,58159414,0,0x0,8
tick,0x7ff86ea82704,58161383,0,0x0,8
tick,0x7ff86ea82704,58163492,0,0x0,8
tick,0x7ff86ea82704,58165380,0,0x0,8
tick,0x7ff86ea82704,58167390,0,0x0,8
tick,0x7ff86ea82704,58169376,0,0x0,8
tick,0x7ff86ea82704,58171356,0,0x0,8
tick,0x7ff86ea82704,58173266,0,0x0,8
tick,0x7ff86ea82704,58175446,0,0x0,8
tick,0x7ff86ea82704,58177243,0,0x0,8
tick,0x7ff86ea82704,58179359,0,0x0,8
tick,0x7ff86ea82704,58181292,0,0x0,8
tick,0x7ff86ea82704,58183400,0,0x0,8
tick,0x7ff86ea82704,58185305,0,0x0,8
tick,0x7ff86ea82704,58187271,0,0x0,8
tick,0x7ff86ea82704,58189307,0,0x0,8
tick,0x7ff86ea82704,58191361,0,0x0,8
tick,0x7ff86ea82704,58193243,0,0x0,8
tick,0x7ff86ea82704,58195331,0,0x0,8
tick,0x7ff86ea82704,58197275,0,0x0,8
tick,0x7ff86ea82704,58199358,0,0x0,8
tick,0x7ff86ea82704,58201370,0,0x0,8
tick,0x7ff86ea82704,58203325,0,0x0,8
tick,0x7ff86ea82704,58205210,0,0x0,8
tick,0x7ff86ea82704,58207336,0,0x0,8
tick,0x7ff86ea82704,58209262,0,0x0,8
tick,0x7ff86ea82704,58211239,0,0x0,8
tick,0x7ff86ea82704,58213148,0,0x0,8
tick,0x7ff86ea82704,58215187,0,0x0,8
tick,0x7ff86ea82704,58217157,0,0x0,8
tick,0x7ff86ea82704,58219223,0,0x0,8
tick,0x7ff86ea82704,58221127,0,0x0,8
tick,0x7ff86ea82704,58223236,0,0x0,8
tick,0x7ff86ea82704,58225149,0,0x0,8
tick,0x7ff86ea82704,58227128,0,0x0,8
tick,0x7ff86ea82704,58229147,0,0x0,8
tick,0x7ff86ea82704,58231182,0,0x0,8
tick,0x7ff86ea82704,58233119,0,0x0,8
tick,0x7ff86ea82704,58235215,0,0x0,8
tick,0x7ff86ea82704,58237166,0,0x0,8
tick,0x7ff86ea82704,58239117,0,0x0,8
tick,0x7ff86ea82704,58241158,0,0x0,8
tick,0x7ff86ea82704,58243101,0,0x0,8
tick,0x7ff86ea82704,58245096,0,0x0,8
tick,0x7ff86ea82704,58247073,0,0x0,8
tick,0x7ff86ea82704,58249132,0,0x0,8
tick,0x7ff86ea82704,58251069,0,0x0,8
tick,0x7ff86ea82704,58253067,0,0x0,8
tick,0x7ff86ea82704,58255060,0,0x0,8
tick,0x7ff86ea82704,58257101,0,0x0,8
tick,0x7ff86ea82704,58259046,0,0x0,8
tick,0x7ff86ea82704,58261157,0,0x0,8
tick,0x7ff86ea82704,58263004,0,0x0,8
tick,0x7ff86ea82704,58265098,0,0x0,8
tick,0x7ff86ea82704,58267002,0,0x0,8
tick,0x7ff86ea82704,58269129,0,0x0,8
tick,0x7ff86ea82704,58271008,0,0x0,8
tick,0x7ff86ea82704,58273119,0,0x0,8
tick,0x7ff86ea82704,58275006,0,0x0,8
tick,0x7ff86ea82704,58277178,0,0x0,8
tick,0x7ff86ea82704,58278971,0,0x0,8
tick,0x7ff86ea82704,58281068,0,0x0,8
tick,0x7ff86ea82704,58282980,0,0x0,8
tick,0x7ff86ea82704,58285042,0,0x0,8
tick,0x7ff86ea82704,58286984,0,0x0,8
tick,0x7ff86ea82704,58289044,0,0x0,8
tick,0x7ff86ea82704,58290970,0,0x0,8
tick,0x7ff86ea82704,58293054,0,0x0,8
tick,0x7ff86ea82704,58294965,0,0x0,8
tick,0x7ff86ea82704,58297055,0,0x0,8
tick,0x7ff86ea82704,58298916,0,0x0,8
tick,0x7ff86ea82704,58301009,0,0x0,8
tick,0x7ff86ea82704,58302984,0,0x0,8
tick,0x7ff86ea82704,58304956,0,0x0,8
tick,0x7ff86ea82704,58306987,0,0x0,8
tick,0x7ff86ea82704,58308951,0,0x0,8
tick,0x7ff86ea82704,58310963,0,0x0,8
tick,0x7ff86ea82704,58312935,0,0x0,8
tick,0x7ff86ea82704,58314909,0,0x0,8
tick,0x7ff86ea82704,58316976,0,0x0,8
tick,0x7ff86ea82704,58318897,0,0x0,8
tick,0x7ff86ea82704,58320922,0,0x0,8
tick,0x7ff86ea82704,58322928,0,0x0,8
tick,0x7ff86ea82704,58324915,0,0x0,8
tick,0x7ff86ea82704,58326884,0,0x0,8
tick,0x7ff86ea82704,58328926,0,0x0,8
tick,0x7ff86ea82704,58330924,0,0x0,8
tick,0x7ff86ea82704,58332885,0,0x0,8
tick,0x7ff86ea82704,58334805,0,0x0,8
tick,0x7ff86ea82704,58336849,0,0x0,8
tick,0x7ff86ea82704,58338906,0,0x0,8
tick,0x7ff86ea82704,58341052,0,0x0,8
tick,0x7ff86ea82704,58342939,0,0x0,8
tick,0x7ff86ea82704,58344824,0,0x0,8
tick,0x7ff86ea82704,58346821,0,0x0,8
tick,0x7ff86ea82704,58348803,0,0x0,8
tick,0x7ff86ea82704,58350883,0,0x0,8
tick,0x7ff86ea82704,58352903,0,0x0,8
tick,0x7ff86ea82704,58354852,0,0x0,8
tick,0x7ff86ea82704,58356756,0,0x0,8
tick,0x7ff86ea82704,58358803,0,0x0,8
tick,0x7ff86ea82704,58360877,0,0x0,8
tick,0x7ff86ea82704,58362844,0,0x0,8
tick,0x7ff86ea82704,58364787,0,0x0,8
tick,0x7ff86ea82704,58366797,0,0x0,8
tick,0x7ff86ea82704,58368735,0,0x0,8
tick,0x7ff86ea82704,58370779,0,0x0,8
tick,0x7ff86ea82704,58372712,0,0x0,8
tick,0x7ff86ea82704,58374747,0,0x0,8
tick,0x7ff86ea82704,58376763,0,0x0,8
tick,0x7ff86ea82704,58378771,0,0x0,8
tick,0x7ff86ea82704,58380784,0,0x0,8
tick,0x7ff86ea82704,58382738,0,0x0,8
tick,0x7ff86ea82704,58384724,0,0x0,8
tick,0x7ff86ea82704,58386736,0,0x0,8
tick,0x7ff86ea82704,58388754,0,0x0,8
tick,0x7ff86ea82704,58390688,0,0x0,8
tick,0x7ff86ea82704,58392681,0,0x0,8
tick,0x7ff86ea82704,58394755,0,0x0,8
tick,0x7ff86ea82704,58396739,0,0x0,8
tick,0x7ff86ea82704,58398720,0,0x0,8
tick,0x7ff86ea82704,58400733,0,0x0,8
tick,0x7ff86ea82704,58402735,0,0x0,8
tick,0x7ff86ea82704,58404761,0,0x0,8
tick,0x7ff86ea82704,58406765,0,0x0,8
tick,0x7ff86ea82704,58408644,0,0x0,8
tick,0x7ff86ea82704,58410756,0,0x0,8
tick,0x7ff86ea82704,58412579,0,0x0,8
tick,0x7ff86ea82704,58414724,0,0x0,8
tick,0x7ff86ea82704,58416687,0,0x0,8
tick,0x7ff86ea82704,58418647,0,0x0,8
tick,0x7ff86ea82704,58420678,0,0x0,8
tick,0x7ff86ea82704,58422656,0,0x0,8
tick,0x7ff86ea82704,58424679,0,0x0,8
tick,0x7ff86ea82704,58426619,0,0x0,8
tick,0x7ff86ea82704,58428781,0,0x0,8
tick,0x7ff86ea82704,58430597,0,0x0,8
tick,0x7ff86ea82704,58432609,0,0x0,8
tick,0x7ff86ea82704,58434680,0,0x0,8
tick,0x7ff86ea82704,58436772,0,0x0,8
tick,0x7ff86ea82704,58438635,0,0x0,8
tick,0x7ff86ea82704,58440683,0,0x0,8
tick,0x7ff86ea82704,58442668,0,0x0,8
tick,0x7ff86ea82704,58444553,0,0x0,8
tick,0x7ff86ea82704,58446606,0,0x0,8
tick,0x7ff86ea82704,58448541,0,0x0,8
tick,0x7ff86ea82704,58450553,0,0x0,8
tick,0x7ff86ea82704,58452827,0,0x0,8
tick,0x7ff86ea82704,58454659,0,0x0,8
tick,0x7ff86ea82704,58456578,0,0x0,8
tick,0x7ff86ea82704,58458666,0,0x0,8
tick,0x7ff86ea82704,58460538,0,0x0,8
tick,0x7ff86ea82704,58462623,0,0x0,8
tick,0x7ff86ea82704,58464495,0,0x0,8
tick,0x7ff86ea82704,58466546,0,0x0,8
tick,0x7ff86ea82704,58468530,0,0x0,8
tick,0x7ff86ea82704,58470663,0,0x0,8
tick,0x7ff86ea82704,58472501,0,0x0,8
tick,0x7ff86ea82704,58474605,0,0x0,8
tick,0x7ff86ea82704,58476530,0,0x0,8
tick,0x7ff86ea82704,58478646,0,0x0,8
tick,0x7ff86ea82704,58480487,0,0x0,8
tick,0x7ff86ea82704,58482626,0,0x0,8
tick,0x7ff86ea82704,58484482,0,0x0,8
tick,0x7ff86ea82704,58486510,0,0x0,8
tick,0x7ff86ea82704,58488514,0,0x0,8
tick,0x7ff86ea82704,58490883,0,0x0,8
tick,0x7ff86ea82704,58492779,0,0x0,8
tick,0x7ff86ea82704,58494740,0,0x0,8
tick,0x7ff86ea82704,58496923,0,0x0,8
tick,0x7ff86ea82704,58498666,0,0x0,8
tick,0x7ff86ea82704,58500866,0,0x0,8
tick,0x7ff86ea82704,58502749,0,0x0,8
tick,0x7ff86ea82704,58504700,0,0x0,8
tick,0x7ff86ea82704,58506569,0,0x0,8
tick,0x7ff86ea82704,58508666,0,0x0,8
tick,0x7ff86ea82704,58510685,0,0x0,8
tick,0x7ff86ea82704,58512651,0,0x0,8
tick,0x7ff86ea82704,58514634,0,0x0,8
tick,0x7ff86ea82704,58516717,0,0x0,8
tick,0x7ff86ea82704,58518756,0,0x0,8
tick,0x7ff86ea82704,58520804,0,0x0,8
tick,0x7ff86ea82704,58522659,0,0x0,8
tick,0x7ff86ea82704,58524671,0,0x0,8
tick,0x7ff86ea82704,58526636,0,0x0,8
tick,0x7ff86ea82704,58528680,0,0x0,8
tick,0x7ff86ea82704,58530699,0,0x0,8
tick,0x7ff86ea82704,58532627,0,0x0,8
tick,0x7ff86ea82704,58534604,0,0x0,8
tick,0x7ff86ea82704,58536623,0,0x0,8
tick,0x7ff86ea82704,58538697,0,0x0,8
tick,0x7ff86ea82704,58540527,0,0x0,8
tick,0x7ff86ea82704,58542561,0,0x0,8
tick,0x7ff86ea82704,58544411,0,0x0,8
tick,0x7ff86ea82704,58546547,0,0x0,8
tick,0x7ff86ea82704,58548440,0,0x0,8
tick,0x7ff86ea82704,58550577,0,0x0,8
tick,0x7ff86ea82704,58552456,0,0x0,8
tick,0x7ff86ea82704,58554608,0,0x0,8
tick,0x7ff86ea82704,58556419,0,0x0,8
tick,0x7ff86ea82704,58558603,0,0x0,8
tick,0x7ff86ea82704,58560540,0,0x0,8
tick,0x7ff86ea82704,58562805,0,0x0,8
tick,0x7ff86ea82704,58564365,0,0x0,8
tick,0x7ff86ea82704,58566558,0,0x0,8
tick,0x7ff86ea82704,58568296,0,0x0,8
tick,0x7ff86ea82704,58570460,0,0x0,8
tick,0x7ff86ea82704,58572529,0,0x0,8
tick,0x7ff86ea82704,58574351,0,0x0,8
tick,0x7ff86ea82704,58576522,0,0x0,8
tick,0x7ff86ea82704,58578550,0,0x0,8
tick,0x7ff86ea82704,58580430,0,0x0,8
tick,0x7ff86ea82704,58582346,0,0x0,8
tick,0x7ff86ea82704,58584506,0,0x0,8
tick,0x7ff86ea82704,58586370,0,0x0,8
tick,0x7ff86ea82704,58588436,0,0x0,8
tick,0x7ff86ea82704,58590373,0,0x0,8
tick,0x7ff86ea82704,58592330,0,0x0,8
tick,0x7ff86ea82704,58594338,0,0x0,8
tick,0x7ff86ea82704,58596361,0,0x0,8
tick,0x7ff86ea82704,58598303,0,0x0,8
tick,0x7ff86ea82704,58600391,0,0x0,8
tick,0x7ff86ea82704,58602450,0,0x0,8
tick,0x7ff86ea82704,58604648,0,0x0,8
tick,0x7ff86ea82704,58606491,0,0x0,8
tick,0x7ff86ea82704,58608465,0,0x0,8
tick,0x7ff86ea82704,58610428,0,0x0,8
tick,0x7ff86ea82704,58612559,0,0x0,8
tick,0x7ff86ea82704,58614363,0,0x0,8
tick,0x7ff86ea82704,58617400,0,0x0,8
tick,0x7ff86ea82704,58618123,0,0x0,8
tick,0x7ff86ea82704,58620461,0,0x0,8
tick,0x7ff86ea82704,58622267,0,0x0,8
tick,0x7ff86ea82704,58624280,0,0x0,8
tick,0x7ff86ea82704,58626503,0,0x0,8
tick,0x7ff86ea82704,58628515,0,0x0,8
tick,0x7ff86ea82704,58630275,0,0x0,8
tick,0x7ff86ea82704,58632295,0,0x0,8
tick,0x7ff86ea82704,58634243,0,0x0,8
tick,0x7ff86ea82704,58636222,0,0x0,8
tick,0x7ff86ea82704,58638163,0,0x0,8
tick,0x7ff86ea82704,58640317,0,0x0,8
tick,0x7ff86ea82704,58642133,0,0x0,8
tick,0x7ff86ea82704,58644289,0,0x0,8
tick,0x7ff86ea82704,58646155,0,0x0,8
tick,0x7ff86ea82704,58648197,0,0x0,8
tick,0x7ff86ea82704,58650269,0,0x0,8
tick,0x7ff86ea82704,58652245,0,0x0,8
tick,0x7ff86ea82704,58654124,0,0x0,8
tick,0x7ff86ea82704,58656291,0,0x0,8
tick,0x7ff86ea82704,58658164,0,0x0,8
tick,0x7ff86ea82704,58660234,0,0x0,8
tick,0x7ff86ea82704,58662980,0,0x0,8
tick,0x7ff86ea82704,58664074,0,0x0,8
tick,0x7ff86ea82704,58666031,0,0x0,8
tick,0x7ff86ea82704,58668528,0,0x0,8
tick,0x7ff86ea82704,58670641,0,0x0,8
tick,0x7ff86ea82704,58672271,0,0x0,8
tick,0x7ff86ea82704,58674213,0,0x0,8
tick,0x7ff86ea82704,58676582,0,0x0,8
tick,0x7ff86ea82704,58678588,0,0x0,8
tick,0x7ff86ea82704,58680045,0,0x0,8
tick,0x7ff86ea82704,58682243,0,0x0,8
tick,0x7ff86ea82704,58684270,0,0x0,8
tick,0x7ff86ea82704,58686020,0,0x0,8
tick,0x7ff86ea82704,58687966,0,0x0,8
tick,0x7ff86ea82704,58689923,0,0x0,8
tick,0x7ff86ea82704,58692033,0,0x0,8
tick,0x7ff86ea82704,58694350,0,0x0,8
tick,0x7ff86ea82704,58696179,0,0x0,8
tick,0x7ff86ea82704,58698071,0,0x0,8
tick,0x7ff86ea82704,58700283,0,0x0,8
tick,0x7ff86ea82704,58702101,0,0x0,8
tick,0x7ff86ea82704,58704200,0,0x0,8
tick,0x7ff86ea82704,58706081,0,0x0,8
tick,0x7ff86ea82704,58708252,0,0x0,8
tick,0x7ff86ea82704,58710755,0,0x0,8
tick,0x7ff86ea82704,58712643,0,0x0,8
tick,0x7ff86ea82704,58714000,0,0x0,8
tick,0x7ff86ea82704,58715936,0,0x0,8
tick,0x7ff86ea82704,58717870,0,0x0,8
tick,0x7ff86ea82704,58719825,0,0x0,8
tick,0x7ff86ea82704,58721896,0,0x0,8
tick,0x7ff86ea82704,58723941,0,0x0,8
tick,0x7ff86ea82704,58726141,0,0x0,8
tick,0x7ff86ea82704,58729251,0,0x0,8
tick,0x7ff86ea82704,58730829,0,0x0,8
tick,0x7ff86ea82704,58733157,0,0x0,8
tick,0x7ff86ea82704,58735058,0,0x0,8
tick,0x7ff86ea82704,58736960,0,0x0,8
tick,0x7ff86ea82704,58738828,0,0x0,8
tick,0x7ff86ea82704,58741158,0,0x0,8
tick,0x7ff86ea82704,58744029,0,0x0,8
tick,0x7ff86ea82704,58747062,0,0x0,8
tick,0x7ff86ea82704,58749045,0,0x0,8
tick,0x7ff86ea82704,58751188,0,0x0,8
tick,0x7ff86ea82704,58752967,0,0x0,8
tick,0x7ff86ea82704,58755012,0,0x0,8
tick,0x7ff86ea82704,58756983,0,0x0,8
tick,0x7ff86ea82704,58759627,0,0x0,8
tick,0x7ff86ea82704,58761392,0,0x0,8
tick,0x7ff86ea82704,58763146,0,0x0,8
tick,0x7ff86ea82704,58765053,0,0x0,8
tick,0x7ff86ea82704,58766893,0,0x0,8
tick,0x7ff86ea82704,58768842,0,0x0,8
tick,0x7ff86ea82704,58770877,0,0x0,8
tick,0x7ff86ea82704,58772999,0,0x0,8
tick,0x7ff86ea82704,58774923,0,0x0,8
tick,0x7ff86ea82704,58778284,0,0x0,8
tick,0x7ff86ea82704,58779858,0,0x0,8
tick,0x7ff86ea82704,58782029,0,0x0,8
tick,0x7ff86ea82704,58783822,0,0x0,8
tick,0x7ff86ea82704,58786137,0,0x0,8
tick,0x7ff86ea82704,58787779,0,0x0,8
tick,0x7ff86ea82704,58789892,0,0x0,8
tick,0x7ff86ea82704,58791903,0,0x0,8
tick,0x7ff86ea82704,58795869,0,0x0,8
tick,0x7ff86ea82704,58796778,0,0x0,8
tick,0x7ff86ea82704,58797892,0,0x0,8
tick,0x7ff86ea82704,58800571,0,0x0,8
tick,0x7ff86ea82704,58802857,0,0x0,8
tick,0x7ff86ea82704,58805015,0,0x0,8
tick,0x7ff86ea82704,58806930,0,0x0,8
tick,0x7ff86ea82704,58808833,0,0x0,8
tick,0x7ff86ea82704,58811823,0,0x0,8
tick,0x7ff86ea82704,58814078,0,0x0,8
tick,0x7ff86ea82704,58815678,0,0x0,8
tick,0x7ff86ea82704,58817876,0,0x0,8
tick,0x7ff86ea82704,58819755,0,0x0,8
tick,0x7ff86ea82704,58821908,0,0x0,8
tick,0x7ff86ea82704,58823975,0,0x0,8
tick,0x7ff86ea82704,58827583,0,0x0,8
tick,0x7ff86ea82704,58829232,0,0x0,8
tick,0x7ff86ea82704,58830806,0,0x0,8
tick,0x7ff86ea82704,58832940,0,0x0,8
tick,0x7ff86ea82704,58835034,0,0x0,8
tick,0x7ff86ea82704,58837089,0,0x0,8
tick,0x7ff86ea82704,58838930,0,0x0,8
tick,0x7ff86ea82704,58840865,0,0x0,8
tick,0x7ff86ea82704,58843196,0,0x0,8
tick,0x7ff86ea82704,58845922,0,0x0,8
tick,0x7ff86ea82704,58846961,0,0x0,8
tick,0x7ff86ea82704,58848694,0,0x0,8
tick,0x7ff86ea82704,58850837,0,0x0,8
tick,0x7ff86ea82704,58852718,0,0x0,8
tick,0x7ff86ea82704,58854571,0,0x0,8
tick,0x7ff86ea82704,58856888,0,0x0,8
tick,0x7ff86ea82704,58858742,0,0x0,8
tick,0x7ff86ea82704,58861932,0,0x0,8
tick,0x7ff86ea82704,58862998,0,0x0,8
tick,0x7ff86ea82704,58865177,0,0x0,8
tick,0x7ff86ea82704,58866881,0,0x0,8
tick,0x7ff86ea82704,58868730,0,0x0,8
tick,0x7ff86ea82704,58870544,0,0x0,8
tick,0x7ff86ea82704,58872740,0,0x0,8
tick,0x7ff86ea82704,58874760,0,0x0,8
tick,0x7ff86ea82704,58877599,0,0x0,8
tick,0x7ff86ea82704,58878600,0,0x0,8
tick,0x7ff86ea82704,58880587,0,0x0,8
tick,0x7ff86ea82704,58882752,0,0x0,8
tick,0x7ff86ea82704,58884796,0,0x0,8
tick,0x7ff86ea82704,58886531,0,0x0,8
tick,0x7ff86ea82704,58888473,0,0x0,8
tick,0x7ff86ea82704,58891001,0,0x0,8
tick,0x7ff86ea82704,58893053,0,0x0,8
tick,0x7ff86ea82704,58895078,0,0x0,8
tick,0x7ff86ea82704,58896537,0,0x0,8
tick,0x7ff86ea82704,58898425,0,0x0,8
tick,0x7ff86ea82704,58900440,0,0x0,8
tick,0x7ff86ea82704,58902395,0,0x0,8
tick,0x7ff86ea82704,58904328,0,0x0,8
tick,0x7ff86ea82704,58906430,0,0x0,8
tick,0x7ff86ea82704,58908371,0,0x0,8
tick,0x7ff86ea82704,58913054,0,0x0,8
tick,0x7ff86ea82704,58914557,0,0x0,8
tick,0x7ff86ea82704,58916803,0,0x0,8
tick,0x7ff86ea82704,58918724,0,0x0,8
tick,0x7ff86ea82704,58920515,0,0x0,8
tick,0x7ff86ea82704,58923067,0,0x0,8
tick,0x7ff86ea82704,58924361,0,0x0,8
tick,0x7ff86ea82704,58926718,0,0x0,8
tick,0x7ff86ea82704,58928623,0,0x0,8
tick,0x7ff86ea82704,58930401,0,0x0,8
tick,0x7ff86ea82704,58932374,0,0x0,8
tick,0x7ff86ea82704,58934370,0,0x0,8
tick,0x7ff86ea82704,58936353,0,0x0,8
tick,0x7ff86ea82704,58938393,0,0x0,8
tick,0x7ff86ea82704,58940480,0,0x0,8
tick,0x7ff86ea82704,58942376,0,0x0,8
tick,0x7ff86ea82704,58945718,0,0x0,8
tick,0x7ff86ea82704,58946491,0,0x0,8
tick,0x7ff86ea82704,58948348,0,0x0,8
tick,0x7ff86ea82704,58950800,0,0x0,8
tick,0x7ff86ea82704,58952325,0,0x0,8
tick,0x7ff86ea82704,58954255,0,0x0,8
tick,0x7ff86ea82704,58956319,0,0x0,8
tick,0x7ff86ea82704,58958400,0,0x0,8
tick,0x7ff86ea82704,58962405,0,0x0,8
tick,0x7ff86ea82704,58962440,0,0x0,8
tick,0x7ff86ea82704,58964360,0,0x0,8
tick,0x7ff86ea82704,58966557,0,0x0,8
tick,0x7ff86ea82704,58968351,0,0x0,8
tick,0x7ff86ea82704,58970277,0,0x0,8
tick,0x7ff86ea82704,58972352,0,0x0,8
tick,0x7ff86ea82704,58974310,0,0x0,8
tick,0x7ff86ea82704,58977523,0,0x0,8
tick,0x7ff86ea82704,58979020,0,0x0,8
tick,0x7ff86ea82704,58980139,0,0x0,8
tick,0x7ff86ea82704,58982110,0,0x0,8
tick,0x7ff86ea82704,58984251,0,0x0,8
tick,0x7ff86ea82704,58986216,0,0x0,8
tick,0x7ff86ea82704,58988076,0,0x0,8
tick,0x7ff86ea82704,58990164,0,0x0,8
tick,0x7ff86ea82704,58992130,0,0x0,8
tick,0x7ff86ea82704,58995585,0,0x0,8
tick,0x7ff86ea82704,58996335,0,0x0,8
tick,0x7ff86ea82704,58998188,0,0x0,8
tick,0x7ff86ea82704,59000695,0,0x0,8
tick,0x7ff86ea82704,59002136,0,0x0,8
tick,0x7ff86ea82704,59004200,0,0x0,8
tick,0x7ff86ea82704,59006819,0,0x0,8
tick,0x7ff86ea82704,59008281,0,0x0,8
tick,0x7ff86ea82704,59011563,0,0x0,8
tick,0x7ff86ea82704,59012357,0,0x0,8
tick,0x7ff86ea82704,59014341,0,0x0,8
tick,0x7ff86ea82704,59016319,0,0x0,8
tick,0x7ff86ea82704,59018345,0,0x0,8
tick,0x7ff86ea82704,59020533,0,0x0,8
tick,0x7ff86ea82704,59022343,0,0x0,8
tick,0x7ff86ea82704,59024208,0,0x0,8
tick,0x7ff86ea82704,59027654,0,0x0,8
tick,0x7ff86ea82704,59028643,0,0x0,8
tick,0x7ff86ea82704,59030513,0,0x0,8
tick,0x7ff86ea82704,59032493,0,0x0,8
tick,0x7ff86ea82704,59034128,0,0x0,8
tick,0x7ff86ea82704,59036220,0,0x0,8
tick,0x7ff86ea82704,59038124,0,0x0,8
tick,0x7ff86ea82704,59040169,0,0x0,8
tick,0x7ff86ea82704,59042150,0,0x0,8
tick,0x7ff86ea82704,59044387,0,0x0,8
tick,0x7ff86ea82704,59046102,0,0x0,8
tick,0x7ff86ea82704,59048148,0,0x0,8
tick,0x7ff86ea82704,59050144,0,0x0,8
tick,0x7ff86ea82704,59052352,0,0x0,8
tick,0x7ff86ea82704,59054073,0,0x0,8
tick,0x7ff86ea82704,59056086,0,0x0,8
tick,0x7ff86ea82704,59058431,0,0x0,8
tick,0x7ff86ea82704,59060991,0,0x0,8
tick,0x7ff86ea82704,59062422,0,0x0,8
tick,0x7ff86ea82704,59063995,0,0x0,8
tick,0x7ff86ea82704,59066019,0,0x0,8
tick,0x7ff86ea82704,59068066,0,0x0,8
tick,0x7ff86ea82704,59069991,0,0x0,8
tick,0x7ff86ea82704,59072026,0,0x0,8
tick,0x7ff86ea82704,59073988,0,0x0,8
tick,0x7ff86ea82704,59076029,0,0x0,8
tick,0x7ff86ea82704,59078583,0,0x0,8
tick,0x7ff86ea82704,59080165,0,0x0,8
tick,0x7ff86ea82704,59082117,0,0x0,8
tick,0x7ff86ea82704,59084149,0,0x0,8
tick,0x7ff86ea82704,59086139,0,0x0,8
tick,0x7ff86ea82704,59088132,0,0x0,8
tick,0x7ff86ea82704,59090128,0,0x0,8
tick,0x7ff86ea82704,59092160,0,0x0,8
tick,0x7ff86ea82704,59094490,0,0x0,8
tick,0x7ff86ea82704,59096038,0,0x0,8
tick,0x7ff86ea82704,59097906,0,0x0,8
tick,0x7ff86ea82704,59100143,0,0x0,8
tick,0x7ff86ea82704,59102030,0,0x0,8
tick,0x7ff86ea82704,59104010,0,0x0,8
tick,0x7ff86ea82704,59106039,0,0x0,8
tick,0x7ff86ea82704,59107947,0,0x0,8
tick,0x7ff86ea82704,59111408,0,0x0,8
tick,0x7ff86ea82704,59112035,0,0x0,8
tick,0x7ff86ea82704,59114049,0,0x0,8
tick,0x7ff86ea82704,59115964,0,0x0,8
tick,0x7ff86ea82704,59117900,0,0x0,8
tick,0x7ff86ea82704,59120028,0,0x0,8
tick,0x7ff86ea82704,59121918,0,0x0,8
tick,0x7ff86ea82704,59123902,0,0x0,8
tick,0x7ff86ea82704,59126131,0,0x0,8
tick,0x7ff86ea82704,59129591,0,0x0,8
tick,0x7ff86ea82704,59131912,0,0x0,8
tick,0x7ff86ea82704,59133806,0,0x0,8
tick,0x7ff86ea82704,59135809,0,0x0,8
tick,0x7ff86ea82704,59137872,0,0x0,8
tick,0x7ff86ea82704,59139951,0,0x0,8
tick,0x7ff86ea82704,59141799,0,0x0,8
tick,0x7ff86ea82704,59144166,0,0x0,8
tick,0x7ff86ea82704,59145840,0,0x0,8
tick,0x7ff86ea82704,59147888,0,0x0,8
tick,0x7ff86ea82704,59149827,0,0x0,8
tick,0x7ff86ea82704,59151700,0,0x0,8
tick,0x7ff86ea82704,59154083,0,0x0,8
tick,0x7ff86ea82704,59155744,0,0x0,8
tick,0x7ff86ea82704,59157886,0,0x0,8
tick,0x7ff86ea82704,59161222,0,0x0,8
tick,0x7ff86ea82704,59164259,0,0x0,8
tick,0x7ff86ea82704,59165910,0,0x0,8
tick,0x7ff86ea82704,59168036,0,0x0,8
tick,0x7ff86ea82704,59169878,0,0x0,8
tick,0x7ff86ea82704,59171815,0,0x0,8
tick,0x7ff86ea82704,59173723,0,0x0,8
tick,0x7ff86ea82704,59175851,0,0x0,8
tick,0x7ff86ea82704,59179727,0,0x0,8
tick,0x7ff86ea82704,59179764,0,0x0,8
tick,0x7ff86ea82704,59182493,0,0x0,8
tick,0x7ff86ea82704,59183782,0,0x0,8
tick,0x7ff86ea82704,59185599,0,0x0,8
tick,0x7ff86ea82704,59187613,0,0x0,8
tick,0x7ff86ea82704,59189577,0,0x0,8
tick,0x7ff86ea82704,59191542,0,0x0,8
tick,0x7ff86ea82704,59194429,0,0x0,8
tick,0x7ff86ea82704,59195936,0,0x0,8
tick,0x7ff86ea82704,59197573,0,0x0,8
tick,0x7ff86ea82704,59199672,0,0x0,8
tick,0x7ff86ea82704,59201598,0,0x0,8
tick,0x7ff86ea82704,59203628,0,0x0,8
tick,0x7ff86ea82704,59205561,0,0x0,8
tick,0x7ff86ea82704,59207724,0,0x0,8
tick,0x7ff86ea82704,59210541,0,0x0,8
tick,0x7ff86ea82704,59211971,0,0x0,8
tick,0x7ff86ea82704,59213576,0,0x0,8
tick,0x7ff86ea82704,59215570,0,0x0,8
tick,0x7ff86ea82704,59217854,0,0x0,8
tick,0x7ff86ea82704,59219664,0,0x0,8
tick,0x7ff86ea82704,59221832,0,0x0,8
tick,0x7ff86ea82704,59223541,0,0x0,8
tick,0x7ff86ea82704,59225735,0,0x0,8
tick,0x7ff86ea82704,59228515,0,0x0,8
tick,0x7ff86ea82704,59229811,0,0x0,8
tick,0x7ff86ea82704,59232154,0,0x0,8
tick,0x7ff86ea82704,59233644,0,0x0,8
tick,0x7ff86ea82704,59235536,0,0x0,8
tick,0x7ff86ea82704,59237570,0,0x0,8
tick,0x7ff86ea82704,59239882,0,0x0,8
tick,0x7ff86ea82704,59241536,0,0x0,8
tick,0x7ff86ea82704,59243812,0,0x0,8
tick,0x7ff86ea82704,59246047,0,0x0,8
tick,0x7ff86ea82704,59247613,0,0x0,8
tick,0x7ff86ea82704,59250242,0,0x0,8
tick,0x7ff86ea82704,59251589,0,0x0,8
tick,0x7ff86ea82704,59253705,0,0x0,8
tick,0x7ff86ea82704,59255724,0,0x0,8
tick,0x7ff86ea82704,59257539,0,0x0,8
tick,0x7ff86ea82704,59260137,0,0x0,8
tick,0x7ff86ea82704,59261972,0,0x0,8
tick,0x7ff86ea82704,59263499,0,0x0,8
tick,0x7ff86ea82704,59265546,0,0x0,8
tick,0x7ff86ea82704,59267757,0,0x0,8
tick,0x7ff86ea82704,59269549,0,0x0,8
tick,0x7ff86ea82704,59271751,0,0x0,8
tick,0x7ff86ea82704,59273500,0,0x0,8
tick,0x7ff86ea82704,59275954,0,0x0,8
tick,0x7ff86ea82704,59278898,0,0x0,8
tick,0x7ff86ea82704,59280045,0,0x0,8
tick,0x7ff86ea82704,59281414,0,0x0,8
tick,0x7ff86ea82704,59283590,0,0x0,8
tick,0x7ff86ea82704,59285518,0,0x0,8
tick,0x7ff86ea82704,59287513,0,0x0,8
tick,0x7ff86ea82704,59289511,0,0x0,8
tick,0x7ff86ea82704,59291549,0,0x0,8
tick,0x7ff86ea82704,59294008,0,0x0,8
tick,0x7ff86ea82704,59295914,0,0x0,8
tick,0x7ff86ea82704,59297411,0,0x0,8
tick,0x7ff86ea82704,59299540,0,0x0,8
tick,0x7ff86ea82704,59301624,0,0x0,8
tick,0x7ff86ea82704,59303448,0,0x0,8
tick,0x7ff86ea82704,59305628,0,0x0,8
tick,0x7ff86ea82704,59307631,0,0x0,8
tick,0x7ff86ea82704,59309610,0,0x0,8
tick,0x7ff86ea82704,59311864,0,0x0,8
tick,0x7ff86ea82704,59313333,0,0x0,8
tick,0x7ff86ea82704,59315466,0,0x0,8
tick,0x7ff86ea82704,59317479,0,0x0,8
tick,0x7ff86ea82704,59319459,0,0x0,8
tick,0x7ff86ea82704,59321338,0,0x0,8
tick,0x7ff86ea82704,59323467,0,0x0,8
tick,0x7ff86ea82704,59325427,0,0x0,8
tick,0x7ff86ea82704,59328927,0,0x0,8
tick,0x7ff86ea82704,59329759,0,0x0,8
tick,0x7ff86ea82704,59331613,0,0x0,8
tick,0x7ff86ea82704,59333489,0,0x0,8
tick,0x7ff86ea82704,59335379,0,0x0,8
tick,0x7ff86ea82704,59337661,0,0x0,8
tick,0x7ff86ea82704,59339641,0,0x0,8
tick,0x7ff86ea82704,59341517,0,0x0,8
tick,0x7ff86ea82704,59345808,0,0x0,8
tick,0x7ff86ea82704,59345838,0,0x0,8
tick,0x7ff86ea82704,59347920,0,0x0,8
tick,0x7ff86ea82704,59349281,0,0x0,8
tick,0x7ff86ea82704,59351602,0,0x0,8
tick,0x7ff86ea82704,59353134,0,0x0,8
tick,0x7ff86ea82704,59355427,0,0x0,8
tick,0x7ff86ea82704,59357218,0,0x0,8
tick,0x7ff86ea82704,59359794,0,0x0,8
tick,0x7ff86ea82704,59362199,0,0x0,8
tick,0x7ff86ea82704,59363138,0,0x0,8
tick,0x7ff86ea82704,59365160,0,0x0,8
tick,0x7ff86ea82704,59367144,0,0x0,8
tick,0x7ff86ea82704,59369284,0,0x0,8
tick,0x7ff86ea82704,59371330,0,0x0,8
tick,0x7ff86ea82704,59373200,0,0x0,8
tick,0x7ff86ea82704,59375347,0,0x0,8
tick,0x7ff86ea82704,59377982,0,0x0,8
tick,0x7ff86ea82704,59379190,0,0x0,8
tick,0x7ff86ea82704,59381184,0,0x0,8
tick,0x7ff86ea82704,59383306,0,0x0,8
tick,0x7ff86ea82704,59385049,0,0x0,8
tick,0x7ff86ea82704,59387024,0,0x0,8
tick,0x7ff86ea82704,59389059,0,0x0,8
tick,0x7ff86ea82704,59391110,0,0x0,8
tick,0x7ff86ea82704,59395166,0,0x0,8
tick,0x7ff86ea82704,59395222,0,0x0,8
tick,0x7ff86ea82704,59397136,0,0x0,8
tick,0x7ff86ea82704,59399063,0,0x0,8
tick,0x7ff86ea82704,59401157,0,0x0,8
tick,0x7ff86ea82704,59403116,0,0x0,8
tick,0x7ff86ea82704,59405014,0,0x0,8
tick,0x7ff86ea82704,59407113,0,0x0,8
tick,0x7ff86ea82704,59409536,0,0x0,8
tick,0x7ff86ea82704,59411612,0,0x0,8
tick,0x7ff86ea82704,59412963,0,0x0,8
tick,0x7ff86ea82704,59414934,0,0x0,8
tick,0x7ff86ea82704,59417003,0,0x0,8
tick,0x7ff86ea82704,59418957,0,0x0,8
tick,0x7ff86ea82704,59421004,0,0x0,8
tick,0x7ff86ea82704,59422969,0,0x0,8
tick,0x7ff86ea82704,59425066,0,0x0,8
tick,0x7ff86ea82704,59429025,0,0x0,8
tick,0x7ff86ea82704,59429067,0,0x0,8
tick,0x7ff86ea82704,59431272,0,0x0,8
tick,0x7ff86ea82704,59433586,0,0x0,8
tick,0x7ff86ea82704,59434970,0,0x0,8
tick,0x7ff86ea82704,59437368,0,0x0,8
tick,0x7ff86ea82704,59439274,0,0x0,8
tick,0x7ff86ea82704,59441135,0,0x0,8
tick,0x7ff86ea82704,59444353,0,0x0,8
tick,0x7ff86ea82704,59445867,0,0x0,8
tick,0x7ff86ea82704,59446995,0,0x0,8
tick,0x7ff86ea82704,59449005,0,0x0,8
tick,0x7ff86ea82704,59451123,0,0x0,8
tick,0x7ff86ea82704,59453061,0,0x0,8
tick,0x7ff86ea82704,59455076,0,0x0,8
tick,0x7ff86ea82704,59457092,0,0x0,8
tick,0x7ff86ea82704,59459047,0,0x0,8
tick,0x7ff86ea82704,59461860,0,0x0,8
tick,0x7ff86ea82704,59463846,0,0x0,8
tick,0x7ff86ea82704,59465283,0,0x0,8
tick,0x7ff86ea82704,59466796,0,0x0,8
tick,0x7ff86ea82704,59468854,0,0x0,8
tick,0x7ff86ea82704,59470796,0,0x0,8
tick,0x7ff86ea82704,59472864,0,0x0,8
tick,0x7ff86ea82704,59474937,0,0x0,8
tick,0x7ff86ea82704,59478009,0,0x0,8
tick,0x7ff86ea82704,59479618,0,0x0,8
tick,0x7ff86ea82704,59481051,0,0x0,8
tick,0x7ff86ea82704,59482957,0,0x0,8
tick,0x7ff86ea82704,59485167,0,0x0,8
tick,0x7ff86ea82704,59488162,0,0x0,8
tick,0x7ff86ea82704,59492451,0,0x0,8
tick,0x7ff86ea82704,59492490,0,0x0,8
tick,0x7ff86ea82704,59494676,0,0x0,8
tick,0x7ff86ea82704,59496022,0,0x0,8
tick,0x7ff86ea82704,59498136,0,0x0,8
tick,0x7ff86ea82704,59500163,0,0x0,8
tick,0x7ff86ea82704,59502086,0,0x0,8
tick,0x7ff86ea82704,59503926,0,0x0,8
tick,0x7ff86ea82704,59506209,0,0x0,8
tick,0x7ff86ea82704,59507924,0,0x0,8
tick,0x7ff86ea82704,59511628,0,0x0,8
tick,0x7ff86ea82704,59512368,0,0x0,8
tick,0x7ff86ea82704,59513968,0,0x0,8
tick,0x7ff86ea82704,59515963,0,0x0,8
tick,0x7ff86ea82704,59518043,0,0x0,8
tick,0x7ff86ea82704,59520181,0,0x0,8
tick,0x7ff86ea82704,59522028,0,0x0,8
tick,0x7ff86ea82704,59524015,0,0x0,8
tick,0x7ff86ea82704,59525873,0,0x0,8
tick,0x7ff86ea82704,59528483,0,0x0,8
tick,0x7ff86ea82704,59530419,0,0x0,8
tick,0x7ff86ea82704,59532256,0,0x0,8
tick,0x7ff86ea82704,59533912,0,0x0,8
tick,0x7ff86ea82704,59535788,0,0x0,8
tick,0x7ff86ea82704,59537974,0,0x0,8
tick,0x7ff86ea82704,59540191,0,0x0,8
tick,0x7ff86ea82704,59541775,0,0x0,8
tick,0x7ff86ea82704,59546078,0,0x0,8
tick,0x7ff86ea82704,59546108,0,0x0,8
tick,0x7ff86ea82704,59548227,0,0x0,8
tick,0x7ff86ea82704,59549821,0,0x0,8
tick,0x7ff86ea82704,59551825,0,0x0,8
tick,0x7ff86ea82704,59554107,0,0x0,8
tick,0x7ff86ea82704,59555941,0,0x0,8
tick,0x7ff86ea82704,59557897,0,0x0,8
tick,0x7ff86ea82704,59562235,0,0x0,8
tick,0x7ff86ea82704,59564089,0,0x0,8
tick,0x7ff86ea82704,59565754,0,0x0,8
tick,0x7ff86ea82704,59567739,0,0x0,8
tick,0x7ff86ea82704,59569836,0,0x0,8
tick,0x7ff86ea82704,59571740,0,0x0,8
tick,0x7ff86ea82704,59574101,0,0x0,8
tick,0x7ff86ea82704,59575800,0,0x0,8
tick,0x7ff86ea82704,59579405,0,0x0,8
tick,0x7ff86ea82704,59580338,0,0x0,8
tick,0x7ff86ea82704,59582911,0,0x0,8
tick,0x7ff86ea82704,59584875,0,0x0,8
tick,0x7ff86ea82704,59586655,0,0x0,8
tick,0x7ff86ea82704,59588772,0,0x0,8
tick,0x7ff86ea82704,59590503,0,0x0,8
tick,0x7ff86ea82704,59595080,0,0x0,8
tick,0x7ff86ea82704,59597152,0,0x0,8
tick,0x7ff86ea82704,59598741,0,0x0,8
tick,0x7ff86ea82704,59600644,0,0x0,8
tick,0x7ff86ea82704,59602618,0,0x0,8
tick,0x7ff86ea82704,59605045,0,0x0,8
tick,0x7ff86ea82704,59606766,0,0x0,8
tick,0x7ff86ea82704,59608679,0,0x0,8
tick,0x7ff86ea82704,59613052,0,0x0,8
tick,0x7ff86ea82704,59613092,0,0x0,8
tick,0x7ff86ea82704,59614703,0,0x0,8
tick,0x7ff86ea82704,59616905,0,0x0,8
tick,0x7ff86ea82704,59618805,0,0x0,8
tick,0x7ff86ea82704,59620536,0,0x0,8
tick,0x7ff86ea82704,59622663,0,0x0,8
tick,0x7ff86ea82704,59624532,0,0x0,8
tick,0x7ff86ea82704,59630429,0,0x0,8
tick,0x7ff86ea82704,59630460,0,0x0,8
tick,0x7ff86ea82704,59630490,0,0x0,8
tick,0x7ff86ea82704,59632595,0,0x0,8
tick,0x7ff86ea82704,59634559,0,0x0,8
tick,0x7ff86ea82704,59636884,0,0x0,8
tick,0x7ff86ea82704,59638617,0,0x0,8
tick,0x7ff86ea82704,59640563,0,0x0,8
tick,0x7ff86ea82704,59642802,0,0x0,8
tick,0x7ff86ea82704,59645787,0,0x0,8
tick,0x7ff86ea82704,59647710,0,0x0,8
tick,0x7ff86ea82704,59649612,0,0x0,8
tick,0x7ff86ea82704,59651407,0,0x0,8
tick,0x7ff86ea82704,59653579,0,0x0,8
tick,0x7ff86ea82704,59655456,0,0x0,8
tick,0x7ff86ea82704,59657628,0,0x0,8
tick,0x7ff86ea82704,59660085,0,0x0,8
tick,0x7ff86ea82704,59662970,0,0x0,8
tick,0x7ff86ea82704,59664708,0,0x0,8
tick,0x7ff86ea82704,59666355,0,0x0,8
tick,0x7ff86ea82704,59668396,0,0x0,8
tick,0x7ff86ea82704,59670572,0,0x0,8
tick,0x7ff86ea82704,59672366,0,0x0,8
tick,0x7ff86ea82704,59674437,0,0x0,8
tick,0x7ff86ea82704,59677734,0,0x0,8
tick,0x7ff86ea82704,59679285,0,0x0,8
tick,0x7ff86ea82704,59680330,0,0x0,8
tick,0x7ff86ea82704,59682412,0,0x0,8
tick,0x7ff86ea82704,59685028,0,0x0,8
tick,0x7ff86ea82704,59686389,0,0x0,8
tick,0x7ff86ea82704,59688630,0,0x0,8
tick,0x7ff86ea82704,59690934,0,0x0,8
tick,0x7ff86ea82704,59692564,0,0x0,8
tick,0x7ff86ea82704,59695063,0,0x0,8
tick,0x7ff86ea82704,59696358,0,0x0,8
tick,0x7ff86ea82704,59698404,0,0x0,8
tick,0x7ff86ea82704,59700354,0,0x0,8
tick,0x7ff86ea82704,59704345,0,0x0,8
tick,0x7ff86ea82704,59706820,0,0x0,8
tick,0x7ff86ea82704,59708441,0,0x0,8
tick,0x7ff86ea82704,59712087,0,0x0,8
tick,0x7ff86ea82704,59713031,0,0x0,8
tick,0x7ff86ea82704,59715477,0,0x0,8
tick,0x7ff86ea82704,59717396,0,0x0,8
tick,0x7ff86ea82704,59719356,0,0x0,8
tick,0x7ff86ea82704,59721342,0,0x0,8
tick,0x7ff86ea82704,59723353,0,0x0,8
tick,0x7ff86ea82704,59725369,0,0x0,8
tick,0x7ff86ea82704,59728237,0,0x0,8
tick,0x7ff86ea82704,59729522,0,0x0,8
tick,0x7ff86ea82704,59731308,0,0x0,8
tick,0x7ff86ea82704,59733162,0,0x0,8
tick,0x7ff86ea82704,59735135,0,0x0,8
tick,0x7ff86ea82704,59737382,0,0x0,8
tick,0x7ff86ea82704,59739407,0,0x0,8
tick,0x7ff86ea82704,59741119,0,0x0,8
tick,0x7ff86ea82704,59745633,0,0x0,8
tick,0x7ff86ea82704,59745662,0,0x0,8
tick,0x7ff86ea82704,59747937,0,0x0,8
tick,0x7ff86ea82704,59749544,0,0x0,8
tick,0x7ff86ea82704,59751225,0,0x0,8
tick,0x7ff86ea82704,59753319,0,0x0,8
tick,0x7ff86ea82704,59755352,0,0x0,8
tick,0x7ff86ea82704,59757547,0,0x0,8
tick,0x7ff86ea82704,59759654,0,0x0,8
tick,0x7ff86ea82704,59763139,0,0x0,8
tick,0x7ff86ea82704,59763738,0,0x0,8
tick,0x7ff86ea82704,59765178,0,0x0,8
tick,0x7ff86ea82704,59767336,0,0x0,8
tick,0x7ff86ea82704,59769555,0,0x0,8
tick,0x7ff86ea82704,59771806,0,0x0,8
tick,0x7ff86ea82704,59773421,0,0x0,8
tick,0x7ff86ea82704,59775523,0,0x0,8
tick,0x7ff86ea82704,59779836,0,0x0,8
tick,0x7ff86ea82704,59779866,0,0x0,8
tick,0x7ff86ea82704,59781429,0,0x0,8
tick,0x7ff86ea82704,59783033,0,0x0,8
tick,0x7ff86ea82704,59786439,0,0x0,8
tick,0x7ff86ea82704,59788569,0,0x0,8
tick,0x7ff86ea82704,59790433,0,0x0,8
tick,0x7ff86ea82704,59792300,0,0x0,8
tick,0x7ff86ea82704,59797211,0,0x0,8
tick,0x7ff86ea82704,59799358,0,0x0,8
tick,0x7ff86ea82704,59801087,0,0x0,8
tick,0x7ff86ea82704,59803185,0,0x0,8
tick,0x7ff86ea82704,59805257,0,0x0,8
tick,0x7ff86ea82704,59807198,0,0x0,8
tick,0x7ff86ea82704,59809469,0,0x0,8
tick,0x7ff86ea82704,59811840,0,0x0,8
tick,0x7ff86ea82704,59813019,0,0x0,8
tick,0x7ff86ea82704,59815008,0,0x0,8
tick,0x7ff86ea82704,59816939,0,0x0,8
tick,0x7ff86ea82704,59818999,0,0x0,8
tick,0x7ff86ea82704,59821122,0,0x0,8
tick,0x7ff86ea82704,59822963,0,0x0,8
tick,0x7ff86ea82704,59824879,0,0x0,8
tick,0x7ff86ea82704,59828457,0,0x0,8
tick,0x7ff86ea82704,59829288,0,0x0,8
tick,0x7ff86ea82704,59831124,0,0x0,8
tick,0x7ff86ea82704,59833290,0,0x0,8
tick,0x7ff86ea82704,59835331,0,0x0,8
tick,0x7ff86ea82704,59837108,0,0x0,8
tick,0x7ff86ea82704,59839002,0,0x0,8
tick,0x7ff86ea82704,59841074,0,0x0,8
tick,0x7ff86ea82704,59845404,0,0x0,8
tick,0x7ff86ea82704,59845431,0,0x0,8
tick,0x7ff86ea82704,59847141,0,0x0,8
tick,0x7ff86ea82704,59849052,0,0x0,8
tick,0x7ff86ea82704,59850947,0,0x0,8
tick,0x7ff86ea82704,59853013,0,0x0,8
tick,0x7ff86ea82704,59855003,0,0x0,8
tick,0x7ff86ea82704,59857044,0,0x0,8
tick,0x7ff86ea82704,59860721,0,0x0,8
tick,0x7ff86ea82704,59862112,0,0x0,8
tick,0x7ff86ea82704,59862841,0,0x0,8
tick,0x7ff86ea82704,59865121,0,0x0,8
tick,0x7ff86ea82704,59866738,0,0x0,8
tick,0x7ff86ea82704,59868751,0,0x0,8
tick,0x7ff86ea82704,59870786,0,0x0,8
tick,0x7ff86ea82704,59872940,0,0x0,8
tick,0x7ff86ea82704,59874719,0,0x0,8
tick,0x7ff86ea82704,59878358,0,0x0,8
tick,0x7ff86ea82704,59878968,0,0x0,8
tick,0x7ff86ea82704,59880952,0,0x0,8
tick,0x7ff86ea82704,59882987,0,0x0,8
tick,0x7ff86ea82704,59885177,0,0x0,8
tick,0x7ff86ea82704,59887095,0,0x0,8
tick,0x7ff86ea82704,59889039,0,0x0,8
tick,0x7ff86ea82704,59891096,0,0x0,8
tick,0x7ff86ea82704,59893422,0,0x0,8
tick,0x7ff86ea82704,59895411,0,0x0,8
tick,0x7ff86ea82704,59896944,0,0x0,8
tick,0x7ff86ea82704,59898758,0,0x0,8
tick,0x7ff86ea82704,59900767,0,0x0,8
tick,0x7ff86ea82704,59902804,0,0x0,8
tick,0x7ff86ea82704,59904766,0,0x0,8
tick,0x7ff86ea82704,59906869,0,0x0,8
tick,0x7ff86ea82704,59908789,0,0x0,8
tick,0x7ff86ea82704,59911843,0,0x0,8
tick,0x7ff86ea82704,59912669,0,0x0,8
tick,0x7ff86ea82704,59914767,0,0x0,8
tick,0x7ff86ea82704,59916678,0,0x0,8
tick,0x7ff86ea82704,59918661,0,0x0,8
tick,0x7ff86ea82704,59920700,0,0x0,8
tick,0x7ff86ea82704,59922645,0,0x0,8
tick,0x7ff86ea82704,59924585,0,0x0,8
tick,0x7ff86ea82704,59927307,0,0x0,8
tick,0x7ff86ea82704,59928819,0,0x0,8
tick,0x7ff86ea82704,59930667,0,0x0,8
tick,0x7ff86ea82704,59932605,0,0x0,8
tick,0x7ff86ea82704,59934652,0,0x0,8
tick,0x7ff86ea82704,59936610,0,0x0,8
tick,0x7ff86ea82704,59938783,0,0x0,8
tick,0x7ff86ea82704,59940635,0,0x0,8
tick,0x7ff86ea82704,59943077,0,0x0,8
tick,0x7ff86ea82704,59945163,0,0x0,8
tick,0x7ff86ea82704,59946662,0,0x0,8
tick,0x7ff86ea82704,59948666,0,0x0,8
tick,0x7ff86ea82704,59950787,0,0x0,8
tick,0x7ff86ea82704,59952791,0,0x0,8
tick,0x7ff86ea82704,59954803,0,0x0,8
tick,0x7ff86ea82704,59956663,0,0x0,8
tick,0x7ff86ea82704,59958814,0,0x0,8
tick,0x7ff86ea82704,59961237,0,0x0,8
tick,0x7ff86ea82704,59962591,0,0x0,8
tick,0x7ff86ea82704,59964619,0,0x0,8
tick,0x7ff86ea82704,59966645,0,0x0,8
tick,0x7ff86ea82704,59968561,0,0x0,8
tick,0x7ff86ea82704,59971193,0,0x0,8
tick,0x7ff86ea82704,59972832,0,0x0,8
tick,0x7ff86ea82704,59974717,0,0x0,8
tick,0x7ff86ea82704,59978176,0,0x0,8
tick,0x7ff86ea82704,59979510,0,0x0,8
tick,0x7ff86ea82704,59981602,0,0x0,8
tick,0x7ff86ea82704,59983496,0,0x0,8
tick,0x7ff86ea82704,59985566,0,0x0,8
tick,0x7ff86ea82704,59987603,0,0x0,8
tick,0x7ff86ea82704,59989676,0,0x0,8
tick,0x7ff86ea82704,59991463,0,0x0,8
tick,0x7ff86ea82704,59994003,0,0x0,8
tick,0x7ff86ea82704,59995661,0,0x0,8
tick,0x7ff86ea82704,59997682,0,0x0,8
tick,0x7ff86ea82704,59999710,0,0x0,8
tick,0x7ff86ea82704,60001529,0,0x0,8
tick,0x7ff86ea82704,60003604,0,0x0,8
tick,0x7ff86ea82704,60005660,0,0x0,8
tick,0x7ff86ea82704,60007796,0,0x0,8
tick,0x7ff86ea82704,60011312,0,0x0,8
tick,0x7ff86ea82704,60011369,0,0x0,8
tick,0x7ff86ea82704,60013669,0,0x0,8
tick,0x7ff86ea82704,60015435,0,0x0,8
tick,0x7ff86ea82704,60017580,0,0x0,8
tick,0x7ff86ea82704,60019389,0,0x0,8
tick,0x7ff86ea82704,60021428,0,0x0,8
tick,0x7ff86ea82704,60023356,0,0x0,8
tick,0x7ff86ea82704,60025439,0,0x0,8
tick,0x7ff86ea82704,60028047,0,0x0,8
tick,0x7ff86ea82704,60029357,0,0x0,8
tick,0x7ff86ea82704,60031429,0,0x0,8
tick,0x7ff86ea82704,60033395,0,0x0,8
tick,0x7ff86ea82704,60035340,0,0x0,8
tick,0x7ff86ea82704,60037520,0,0x0,8
tick,0x7ff86ea82704,60039429,0,0x0,8
tick,0x7ff86ea82704,60041265,0,0x0,8
tick,0x7ff86ea82704,60043843,0,0x0,8
tick,0x7ff86ea82704,60045737,0,0x0,8
tick,0x7ff86ea82704,60047388,0,0x0,8
tick,0x7ff86ea82704,60049271,0,0x0,8
tick,0x7ff86ea82704,60051514,0,0x0,8
tick,0x7ff86ea82704,60053367,0,0x0,8
tick,0x7ff86ea82704,60055478,0,0x0,8
tick,0x7ff86ea82704,60057313,0,0x0,8
tick,0x7ff86ea82704,60059669,0,0x0,8
tick,0x7ff86ea82704,60061650,0,0x0,8
tick,0x7ff86ea82704,60063420,0,0x0,8
tick,0x7ff86ea82704,60065459,0,0x0,8
tick,0x7ff86ea82704,60067430,0,0x0,8
tick,0x7ff86ea82704,60069512,0,0x0,8
tick,0x7ff86ea82704,60071587,0,0x0,8
tick,0x7ff86ea82704,60073402,0,0x0,8
tick,0x7ff86ea82704,60075422,0,0x0,8
tick,0x7ff86ea82704,60077809,0,0x0,8
tick,0x7ff86ea82704,60079321,0,0x0,8
tick,0x7ff86ea82704,60081305,0,0x0,8
tick,0x7ff86ea82704,60083274,0,0x0,8
tick,0x7ff86ea82704,60085262,0,0x0,8
tick,0x7ff86ea82704,60087356,0,0x0,8
tick,0x7ff86ea82704,60089315,0,0x0,8
tick,0x7ff86ea82704,60091206,0,0x0,8
tick,0x7ff86ea82704,60094014,0,0x0,8
tick,0x7ff86ea82704,60095595,0,0x0,8
tick,0x7ff86ea82704,60097666,0,0x0,8
tick,0x7ff86ea82704,60099922,0,0x0,8
tick,0x7ff86ea82704,60101589,0,0x0,8
tick,0x7ff86ea82704,60103280,0,0x0,8
tick,0x7ff86ea82704,60107219,0,0x0,8
tick,0x7ff86ea82704,60108292,0,0x0,8
tick,0x7ff86ea82704,60111045,0,0x0,8
tick,0x7ff86ea82704,60114050,0,0x0,8
tick,0x7ff86ea82704,60117413,0,0x0,8
tick,0x7ff86ea82704,60120226,0,0x0,8
tick,0x7ff86ea82704,60123754,0,0x0,8
tick,0x7ff86ea82704,60125402,0,0x0,8
tick,0x7ff86ea82704,60130785,0,0x0,8
tick,0x7ff86ea82704,60130824,0,0x0,8
tick,0x7ff86ea82704,60132364,0,0x0,8
tick,0x7ff86ea82704,60134164,0,0x0,8
tick,0x7ff86ea82704,60136312,0,0x0,8
tick,0x7ff86ea82704,60138092,0,0x0,8
tick,0x7ff86ea82704,60140212,0,0x0,8
tick,0x7ff86ea82704,60142271,0,0x0,8
tick,0x7ff86ea82704,60145383,0,0x0,8
tick,0x7ff86ea82704,60148053,0,0x0,8
tick,0x7ff86ea82704,60148093,0,0x0,8
tick,0x7ff86ea82704,60150220,0,0x0,8
tick,0x7ff86ea82704,60152234,0,0x0,8
tick,0x7ff86ea82704,60154098,0,0x0,8
tick,0x7ff86ea82704,60156312,0,0x0,8
tick,0x7ff86ea82704,60158112,0,0x0,8
tick,0x7ff86ea82704,60160839,0,0x0,8
tick,0x7ff86ea82704,60163229,0,0x0,8
tick,0x7ff86ea82704,60164423,0,0x0,8
tick,0x7ff86ea82704,60166349,0,0x0,8
tick,0x7ff86ea82704,60168180,0,0x0,8
tick,0x7ff86ea82704,60170348,0,0x0,8
tick,0x7ff86ea82704,60172307,0,0x0,8
tick,0x7ff86ea82704,60174205,0,0x0,8
tick,0x7ff86ea82704,60177836,0,0x0,8
tick,0x7ff86ea82704,60180515,0,0x0,8
tick,0x7ff86ea82704,60181097,0,0x0,8
tick,0x7ff86ea82704,60183071,0,0x0,8
tick,0x7ff86ea82704,60185111,0,0x0,8
tick,0x7ff86ea82704,60187110,0,0x0,8
tick,0x7ff86ea82704,60189645,0,0x0,8
tick,0x7ff86ea82704,60191323,0,0x0,8
tick,0x7ff86ea82704,60193890,0,0x0,8
tick,0x7ff86ea82704,60196589,0,0x0,8
tick,0x7ff86ea82704,60198569,0,0x0,8
tick,0x7ff86ea82704,60200019,0,0x0,8
tick,0x7ff86ea82704,60202043,0,0x0,8
tick,0x7ff86ea82704,60204187,0,0x0,8
tick,0x7ff86ea82704,60206218,0,0x0,8
tick,0x7ff86ea82704,60207980,0,0x0,8
tick,0x7ff86ea82704,60211979,0,0x0,8
tick,0x7ff86ea82704,60214844,0,0x0,8
tick,0x7ff86ea82704,60217193,0,0x0,8
tick,0x7ff86ea82704,60218967,0,0x0,8
tick,0x7ff86ea82704,60220938,0,0x0,8
tick,0x7ff86ea82704,60222916,0,0x0,8
tick,0x7ff86ea82704,60225098,0,0x0,8
tick,0x7ff86ea82704,60227458,0,0x0,8
tick,0x7ff86ea82704,60230230,0,0x0,8
tick,0x7ff86ea82704,60232188,0,0x0,8
tick,0x7ff86ea82704,60233853,0,0x0,8
tick,0x7ff86ea82704,60236229,0,0x0,8
tick,0x7ff86ea82704,60238061,0,0x0,8
tick,0x7ff86ea82704,60239981,0,0x0,8
tick,0x7ff86ea82704,60242421,0,0x0,8
tick,0x7ff86ea82704,60245513,0,0x0,8
tick,0x7ff86ea82704,60246225,0,0x0,8
tick,0x7ff86ea82704,60248040,0,0x0,8
tick,0x7ff86ea82704,60250258,0,0x0,8
tick,0x7ff86ea82704,60252073,0,0x0,8
tick,0x7ff86ea82704,60253891,0,0x0,8
tick,0x7ff86ea82704,60256036,0,0x0,8
tick,0x7ff86ea82704,60257988,0,0x0,8
tick,0x7ff86ea82704,60261928,0,0x0,8
tick,0x7ff86ea82704,60263352,0,0x0,8
tick,0x7ff86ea82704,60264788,0,0x0,8
tick,0x7ff86ea82704,60265896,0,0x0,8
tick,0x7ff86ea82704,60268003,0,0x0,8
tick,0x7ff86ea82704,60270007,0,0x0,8
tick,0x7ff86ea82704,60271973,0,0x0,8
tick,0x7ff86ea82704,60274447,0,0x0,8
tick,0x7ff86ea82704,60276612,0,0x0,8
tick,0x7ff86ea82704,60279193,0,0x0,8
tick,0x7ff86ea82704,60281329,0,0x0,8
tick,0x7ff86ea82704,60283020,0,0x0,8
tick,0x7ff86ea82704,60284848,0,0x0,8
tick,0x7ff86ea82704,60286734,0,0x0,8
tick,0x7ff86ea82704,60288909,0,0x0,8
tick,0x7ff86ea82704,60290823,0,0x0,8
tick,0x7ff86ea82704,60292953,0,0x0,8
tick,0x7ff86ea82704,60296077,0,0x0,8
tick,0x7ff86ea82704,60297849,0,0x0,8
tick,0x7ff86ea82704,60299826,0,0x0,8
tick,0x7ff86ea82704,60301920,0,0x0,8
tick,0x7ff86ea82704,60304282,0,0x0,8
tick,0x7ff86ea82704,60305781,0,0x0,8
tick,0x7ff86ea82704,60307750,0,0x0,8
tick,0x7ff86ea82704,60310317,0,0x0,8
tick,0x7ff86ea82704,60313072,0,0x0,8
tick,0x7ff86ea82704,60314630,0,0x0,8
tick,0x7ff86ea82704,60316574,0,0x0,8
tick,0x7ff86ea82704,60319045,0,0x0,8
tick,0x7ff86ea82704,60320625,0,0x0,8
tick,0x7ff86ea82704,60322612,0,0x0,8
tick,0x7ff86ea82704,60324752,0,0x0,8
tick,0x7ff86ea82704,60327564,0,0x0,8
tick,0x7ff86ea82704,60330087,0,0x0,8
tick,0x7ff86ea82704,60331651,0,0x0,8
tick,0x7ff86ea82704,60333597,0,0x0,8
tick,0x7ff86ea82704,60335730,0,0x0,8
tick,0x7ff86ea82704,60337592,0,0x0,8
tick,0x7ff86ea82704,60339643,0,0x0,8
tick,0x7ff86ea82704,60341494,0,0x0,8
tick,0x7ff86ea82704,60345257,0,0x0,8
tick,0x7ff86ea82704,60346935,0,0x0,8
tick,0x7ff86ea82704,60347600,0,0x0,8
tick,0x7ff86ea82704,60349706,0,0x0,8
tick,0x7ff86ea82704,60351553,0,0x0,8
tick,0x7ff86ea82704,60353641,0,0x0,8
tick,0x7ff86ea82704,60356120,0,0x0,8
tick,0x7ff86ea82704,60357413,0,0x0,8
tick,0x7ff86ea82704,60359779,0,0x0,8
tick,0x7ff86ea82704,60362173,0,0x0,8
tick,0x7ff86ea82704,60363629,0,0x0,8
tick,0x7ff86ea82704,60365418,0,0x0,8
tick,0x7ff86ea82704,60367453,0,0x0,8
tick,0x7ff86ea82704,60369502,0,0x0,8
tick,0x7ff86ea82704,60371412,0,0x0,8
tick,0x7ff86ea82704,60373433,0,0x0,8
tick,0x7ff86ea82704,60375561,0,0x0,8
tick,0x7ff86ea82704,60378919,0,0x0,8
tick,0x7ff86ea82704,60379577,0,0x0,8
tick,0x7ff86ea82704,60381485,0,0x0,8
tick,0x7ff86ea82704,60384169,0,0x0,8
tick,0x7ff86ea82704,60385435,0,0x0,8
tick,0x7ff86ea82704,60387497,0,0x0,8
tick,0x7ff86ea82704,60389592,0,0x0,8
tick,0x7ff86ea82704,60391754,0,0x0,8
tick,0x7ff86ea82704,60395693,0,0x0,8
tick,0x7ff86ea82704,60398338,0,0x0,8
tick,0x7ff86ea82704,60398432,0,0x0,8
tick,0x7ff86ea82704,60400541,0,0x0,8
tick,0x7ff86ea82704,60402688,0,0x0,8
tick,0x7ff86ea82704,60404926,0,0x0,8
tick,0x7ff86ea82704,60406410,0,0x0,8
tick,0x7ff86ea82704,60408373,0,0x0,8
tick,0x7ff86ea82704,60411154,0,0x0,8
tick,0x7ff86ea82704,60413321,0,0x0,8
tick,0x7ff86ea82704,60414548,0,0x0,8
tick,0x7ff86ea82704,60416414,0,0x0,8
tick,0x7ff86ea82704,60418350,0,0x0,8
tick,0x7ff86ea82704,60420369,0,0x0,8
tick,0x7ff86ea82704,60422448,0,0x0,8
tick,0x7ff86ea82704,60424351,0,0x0,8
tick,0x7ff86ea82704,60426855,0,0x0,8
tick,0x7ff86ea82704,60429054,0,0x0,8
tick,0x7ff86ea82704,60430448,0,0x0,8
tick,0x7ff86ea82704,60432432,0,0x0,8
tick,0x7ff86ea82704,60434552,0,0x0,8
tick,0x7ff86ea82704,60436359,0,0x0,8
tick,0x7ff86ea82704,60438454,0,0x0,8
tick,0x7ff86ea82704,60440279,0,0x0,8
tick,0x7ff86ea82704,60442321,0,0x0,8
tick,0x7ff86ea82704,60445944,0,0x0,8
tick,0x7ff86ea82704,60447407,0,0x0,8
tick,0x7ff86ea82704,60449226,0,0x0,8
tick,0x7ff86ea82704,60451309,0,0x0,8
tick,0x7ff86ea82704,60453225,0,0x0,8
tick,0x7ff86ea82704,60455389,0,0x0,8
tick,0x7ff86ea82704,60457470,0,0x0,8
tick,0x7ff86ea82704,60459373,0,0x0,8
tick,0x7ff86ea82704,60461529,0,0x0,8
tick,0x7ff86ea82704,60463234,0,0x0,8
tick,0x7ff86ea82704,60465297,0,0x0,8
tick,0x7ff86ea82704,60467292,0,0x0,8
tick,0x7ff86ea82704,60469307,0,0x0,8
tick,0x7ff86ea82704,60471234,0,0x0,8
tick,0x7ff86ea82704,60473311,0,0x0,8
tick,0x7ff86ea82704,60475126,0,0x0,8
tick,0x7ff86ea82704,60477645,0,0x0,8
tick,0x7ff86ea82704,60479289,0,0x0,8
tick,0x7ff86ea82704,60481669,0,0x0,8
tick,0x7ff86ea82704,60483255,0,0x0,8
tick,0x7ff86ea82704,60485276,0,0x0,8
tick,0x7ff86ea82704,60487305,0,0x0,8
tick,0x7ff86ea82704,60489380,0,0x0,8
tick,0x7ff86ea82704,60491231,0,0x0,8
tick,0x7ff86ea82704,60493319,0,0x0,8
tick,0x7ff86ea82704,60495123,0,0x0,8
tick,0x7ff86ea82704,60497176,0,0x0,8
tick,0x7ff86ea82704,60499132,0,0x0,8
tick,0x7ff86ea82704,60501259,0,0x0,8
tick,0x7ff86ea82704,60503163,0,0x0,8
tick,0x7ff86ea82704,60505255,0,0x0,8
tick,0x7ff86ea82704,60507290,0,0x0,8
tick,0x7ff86ea82704,60509477,0,0x0,8
tick,0x7ff86ea82704,60511432,0,0x0,8
tick,0x7ff86ea82704,60513273,0,0x0,8
tick,0x7ff86ea82704,60515226,0,0x0,8
tick,0x7ff86ea82704,60517264,0,0x0,8
tick,0x7ff86ea82704,60519304,0,0x0,8
tick,0x7ff86ea82704,60521192,0,0x0,8
tick,0x7ff86ea82704,60523648,0,0x0,8
tick,0x7ff86ea82704,60525178,0,0x0,8
tick,0x7ff86ea82704,60527134,0,0x0,8
tick,0x7ff86ea82704,60529245,0,0x0,8
tick,0x7ff86ea82704,60531061,0,0x0,8
tick,0x7ff86ea82704,60533229,0,0x0,8
tick,0x7ff86ea82704,60535114,0,0x0,8
tick,0x7ff86ea82704,60537292,0,0x0,8
tick,0x7ff86ea82704,60539081,0,0x0,8
tick,0x7ff86ea82704,60541140,0,0x0,8
tick,0x7ff86ea82704,60543077,0,0x0,8
tick,0x7ff86ea82704,60545054,0,0x0,8
tick,0x7ff86ea82704,60547106,0,0x0,8
tick,0x7ff86ea82704,60549016,0,0x0,8
tick,0x7ff86ea82704,60551040,0,0x0,8
tick,0x7ff86ea82704,60553001,0,0x0,8
tick,0x7ff86ea82704,60555169,0,0x0,8
tick,0x7ff86ea82704,60557175,0,0x0,8
tick,0x7ff86ea82704,60559012,0,0x0,8
tick,0x7ff86ea82704,60561120,0,0x0,8
tick,0x7ff86ea82704,60563082,0,0x0,8
tick,0x7ff86ea82704,60565086,0,0x0,8
tick,0x7ff86ea82704,60567136,0,0x0,8
tick,0x7ff86ea82704,60569093,0,0x0,8
tick,0x7ff86ea82704,60571169,0,0x0,8
tick,0x7ff86ea82704,60573051,0,0x0,8
tick,0x7ff86ea82704,60574990,0,0x0,8
tick,0x7ff86ea82704,60577089,0,0x0,8
tick,0x7ff86ea82704,60579204,0,0x0,8
tick,0x7ff86ea82704,60580872,0,0x0,8
tick,0x7ff86ea82704,60583077,0,0x0,8
tick,0x7ff86ea82704,60585036,0,0x0,8
tick,0x7ff86ea82704,60587061,0,0x0,8
tick,0x7ff86ea82704,60588933,0,0x0,8
tick,0x7ff86ea82704,60591009,0,0x0,8
tick,0x7ff86ea82704,60593144,0,0x0,8
tick,0x7ff86ea82704,60595007,0,0x0,8
tick,0x7ff86ea82704,60597070,0,0x0,8
tick,0x7ff86ea82704,60598998,0,0x0,8
tick,0x7ff86ea82704,60601455,0,0x0,8
tick,0x7ff86ea82704,60603076,0,0x0,8
tick,0x7ff86ea82704,60605135,0,0x0,8
tick,0x7ff86ea82704,60606977,0,0x0,8
tick,0x7ff86ea82704,60609144,0,0x0,8
tick,0x7ff86ea82704,60611023,0,0x0,8
tick,0x7ff86ea82704,60612978,0,0x0,8
tick,0x7ff86ea82704,60614961,0,0x0,8
tick,0x7ff86ea82704,60617046,0,0x0,8
tick,0x7ff86ea82704,60618867,0,0x0,8
tick,0x7ff86ea82704,60621046,0,0x0,8
tick,0x7ff86ea82704,60622921,0,0x0,8
tick,0x7ff86ea82704,60624978,0,0x0,8
tick,0x7ff86ea82704,60627029,0,0x0,8
tick,0x7ff86ea82704,60629263,0,0x0,8
tick,0x7ff86ea82704,60631293,0,0x0,8
tick,0x7ff86ea82704,60632888,0,0x0,8
tick,0x7ff86ea82704,60635167,0,0x0,8
tick,0x7ff86ea82704,60636857,0,0x0,8
tick,0x7ff86ea82704,60638814,0,0x0,8
tick,0x7ff86ea82704,60641197,0,0x0,8
tick,0x7ff86ea82704,60642906,0,0x0,8
tick,0x7ff86ea82704,60644996,0,0x0,8
tick,0x7ff86ea82704,60646981,0,0x0,8
tick,0x7ff86ea82704,60649045,0,0x0,8
tick,0x7ff86ea82704,60650859,0,0x0,8
tick,0x7ff86ea82704,60653056,0,0x0,8
tick,0x7ff86ea82704,60654766,0,0x0,8
tick,0x7ff86ea82704,60656915,0,0x0,8
tick,0x7ff86ea82704,60658925,0,0x0,8
tick,0x7ff86ea82704,60660834,0,0x0,8
tick,0x7ff86ea82704,60662691,0,0x0,8
tick,0x7ff86ea82704,60665093,0,0x0,8
tick,0x7ff86ea82704,60667054,0,0x0,8
tick,0x7ff86ea82704,60668792,0,0x0,8
tick,0x7ff86ea82704,60670861,0,0x0,8
tick,0x7ff86ea82704,60672731,0,0x0,8
tick,0x7ff86ea82704,60674968,0,0x0,8
tick,0x7ff86ea82704,60676773,0,0x0,8
tick,0x7ff86ea82704,60678714,0,0x0,8
tick,0x7ff86ea82704,60680729,0,0x0,8
tick,0x7ff86ea82704,60682712,0,0x0,8
tick,0x7ff86ea82704,60684681,0,0x0,8
tick,0x7ff86ea82704,60686721,0,0x0,8
tick,0x7ff86ea82704,60688695,0,0x0,8
tick,0x7ff86ea82704,60690649,0,0x0,8
tick,0x7ff86ea82704,60692777,0,0x0,8
tick,0x7ff86ea82704,60696907,0,0x0,8
tick,0x7ff86ea82704,60698858,0,0x0,8
tick,0x7ff86ea82704,60700502,0,0x0,8
tick,0x7ff86ea82704,60702580,0,0x0,8
tick,0x7ff86ea82704,60704548,0,0x0,8
tick,0x7ff86ea82704,60706554,0,0x0,8
tick,0x7ff86ea82704,60708576,0,0x0,8
tick,0x7ff86ea82704,60710562,0,0x0,8
tick,0x7ff86ea82704,60712520,0,0x0,8
tick,0x7ff86ea82704,60714560,0,0x0,8
tick,0x7ff86ea82704,60716519,0,0x0,8
tick,0x7ff86ea82704,60718653,0,0x0,8
tick,0x7ff86ea82704,60720472,0,0x0,8
tick,0x7ff86ea82704,60722507,0,0x0,8
tick,0x7ff86ea82704,60724552,0,0x0,8
tick,0x7ff86ea82704,60726816,0,0x0,8
tick,0x7ff86ea82704,60728470,0,0x0,8
tick,0x7ff86ea82704,60730486,0,0x0,8
tick,0x7ff86ea82704,60732474,0,0x0,8
tick,0x7ff86ea82704,60734494,0,0x0,8
tick,0x7ff86ea82704,60736519,0,0x0,8
tick,0x7ff86ea82704,60738434,0,0x0,8
tick,0x7ff86ea82704,60740438,0,0x0,8
tick,0x7ff86ea82704,60742456,0,0x0,8
tick,0x7ff86ea82704,60744453,0,0x0,8
tick,0x7ff86ea82704,60746499,0,0x0,8
tick,0x7ff86ea82704,60748404,0,0x0,8
tick,0x7ff86ea82704,60750439,0,0x0,8
tick,0x7ff86ea82704,60752502,0,0x0,8
tick,0x7ff86ea82704,60754494,0,0x0,8
tick,0x7ff86ea82704,60756585,0,0x0,8
tick,0x7ff86ea82704,60758448,0,0x0,8
tick,0x7ff86ea82704,60760506,0,0x0,8
tick,0x7ff86ea82704,60762397,0,0x0,8
tick,0x7ff86ea82704,60764393,0,0x0,8
tick,0x7ff86ea82704,60766402,0,0x0,8
tick,0x7ff86ea82704,60768403,0,0x0,8
tick,0x7ff86ea82704,60770404,0,0x0,8
tick,0x7ff86ea82704,60772366,0,0x0,8
tick,0x7ff86ea82704,60774367,0,0x0,8
tick,0x7ff86ea82704,60776409,0,0x0,8
tick,0x7ff86ea82704,60778347,0,0x0,8
tick,0x7ff86ea82704,60780321,0,0x0,8
tick,0x7ff86ea82704,60782369,0,0x0,8
tick,0x7ff86ea82704,60784369,0,0x0,8
tick,0x7ff86ea82704,60786336,0,0x0,8
tick,0x7ff86ea82704,60788405,0,0x0,8
tick,0x7ff86ea82704,60790400,0,0x0,8
tick,0x7ff86ea82704,60792368,0,0x0,8
tick,0x7ff86ea82704,60794426,0,0x0,8
tick,0x7ff86ea82704,60796297,0,0x0,8
tick,0x7ff86ea82704,60798259,0,0x0,8
tick,0x7ff86ea82704,60800359,0,0x0,8
tick,0x7ff86ea82704,60802423,0,0x0,8
tick,0x7ff86ea82704,60804393,0,0x0,8
tick,0x7ff86ea82704,60806295,0,0x0,8
tick,0x7ff86ea82704,60808274,0,0x0,8
tick,0x7ff86ea82704,60810272,0,0x0,8
tick,0x7ff86ea82704,60812288,0,0x0,8
tick,0x7ff86ea82704,60814338,0,0x0,8
tick,0x7ff86ea82704,60816335,0,0x0,8
tick,0x7ff86ea82704,60818263,0,0x0,8
tick,0x7ff86ea82704,60820406,0,0x0,8
tick,0x7ff86ea82704,60822401,0,0x0,8
tick,0x7ff86ea82704,60824281,0,0x0,8
tick,0x7ff86ea82704,60826337,0,0x0,8
tick,0x7ff86ea82704,60828280,0,0x0,8
tick,0x7ff86ea82704,60830268,0,0x0,8
tick,0x7ff86ea82704,60832415,0,0x0,8
tick,0x7ff86ea82704,60834255,0,0x0,8
tick,0x7ff86ea82704,60836379,0,0x0,8
tick,0x7ff86ea82704,60838276,0,0x0,8
tick,0x7ff86ea82704,60840222,0,0x0,8
tick,0x7ff86ea82704,60842290,0,0x0,8
tick,0x7ff86ea82704,60844163,0,0x0,8
tick,0x7ff86ea82704,60846235,0,0x0,8
tick,0x7ff86ea82704,60848201,0,0x0,8
tick,0x7ff86ea82704,60850339,0,0x0,8
tick,0x7ff86ea82704,60852227,0,0x0,8
tick,0x7ff86ea82704,60854160,0,0x0,8
tick,0x7ff86ea82704,60856224,0,0x0,8
tick,0x7ff86ea82704,60858118,0,0x0,8
tick,0x7ff86ea82704,60860145,0,0x0,8
tick,0x7ff86ea82704,60862212,0,0x0,8
tick,0x7ff86ea82704,60864207,0,0x0,8
tick,0x7ff86ea82704,60866147,0,0x0,8
tick,0x7ff86ea82704,60868462,0,0x0,8
tick,0x7ff86ea82704,60870291,0,0x0,8
tick,0x7ff86ea82704,60872217,0,0x0,8
tick,0x7ff86ea82704,60874356,0,0x0,8
tick,0x7ff86ea82704,60876227,0,0x0,8
tick,0x7ff86ea82704,60878326,0,0x0,8
tick,0x7ff86ea82704,60880191,0,0x0,8
tick,0x7ff86ea82704,60882167,0,0x0,8
tick,0x7ff86ea82704,60884493,0,0x0,8
tick,0x7ff86ea82704,60886120,0,0x0,8
tick,0x7ff86ea82704,60888238,0,0x0,8
tick,0x7ff86ea82704,60890401,0,0x0,8
tick,0x7ff86ea82704,60892165,0,0x0,8
tick,0x7ff86ea82704,60894059,0,0x0,8
tick,0x7ff86ea82704,60896639,0,0x0,8
tick,0x7ff86ea82704,60898229,0,0x0,8
tick,0x7ff86ea82704,60900328,0,0x0,8
tick,0x7ff86ea82704,60902050,0,0x0,8
tick,0x7ff86ea82704,60904238,0,0x0,8
tick,0x7ff86ea82704,60906132,0,0x0,8
tick,0x7ff86ea82704,60908096,0,0x0,8
tick,0x7ff86ea82704,60910940,0,0x0,8
tick,0x7ff86ea82704,60912771,0,0x0,8
tick,0x7ff86ea82704,60914323,0,0x0,8
tick,0x7ff86ea82704,60916151,0,0x0,8
tick,0x7ff86ea82704,60918056,0,0x0,8
tick,0x7ff86ea82704,60920312,0,0x0,8
tick,0x7ff86ea82704,60922093,0,0x0,8
tick,0x7ff86ea82704,60924204,0,0x0,8
tick,0x7ff86ea82704,60926394,0,0x0,8
tick,0x7ff86ea82704,60929508,0,0x0,8
tick,0x7ff86ea82704,60930960,0,0x0,8
tick,0x7ff86ea82704,60932087,0,0x0,8
tick,0x7ff86ea82704,60934166,0,0x0,8
tick,0x7ff86ea82704,60936301,0,0x0,8
tick,0x7ff86ea82704,60938081,0,0x0,8
tick,0x7ff86ea82704,60940059,0,0x0,8
tick,0x7ff86ea82704,60942062,0,0x0,8
tick,0x7ff86ea82704,60945154,0,0x0,8
tick,0x7ff86ea82704,60947181,0,0x0,8
tick,0x7ff86ea82704,60949108,0,0x0,8
tick,0x7ff86ea82704,60950966,0,0x0,8
tick,0x7ff86ea82704,60953034,0,0x0,8
tick,0x7ff86ea82704,60955470,0,0x0,8
tick,0x7ff86ea82704,60957496,0,0x0,8
tick,0x7ff86ea82704,60959000,0,0x0,8
tick,0x7ff86ea82704,60962320,0,0x0,8
tick,0x7ff86ea82704,60963918,0,0x0,8
tick,0x7ff86ea82704,60965935,0,0x0,8
tick,0x7ff86ea82704,60968060,0,0x0,8
tick,0x7ff86ea82704,60970094,0,0x0,8
tick,0x7ff86ea82704,60972234,0,0x0,8
tick,0x7ff86ea82704,60973868,0,0x0,8
tick,0x7ff86ea82704,60976534,0,0x0,8
tick,0x7ff86ea82704,60978275,0,0x0,8
tick,0x7ff86ea82704,60980124,0,0x0,8
tick,0x7ff86ea82704,60982000,0,0x0,8
tick,0x7ff86ea82704,60984460,0,0x0,8
tick,0x7ff86ea82704,60986012,0,0x0,8
tick,0x7ff86ea82704,60988096,0,0x0,8
tick,0x7ff86ea82704,60990196,0,0x0,8
tick,0x7ff86ea82704,60991943,0,0x0,8
tick,0x7ff86ea82704,60994784,0,0x0,8
tick,0x7ff86ea82704,60997686,0,0x0,8
tick,0x7ff86ea82704,60998895,0,0x0,8
tick,0x7ff86ea82704,61001260,0,0x0,8
tick,0x7ff86ea82704,61002711,0,0x0,8
tick,0x7ff86ea82704,61004745,0,0x0,8
tick,0x7ff86ea82704,61006817,0,0x0,8
tick,0x7ff86ea82704,61008720,0,0x0,8
tick,0x7ff86ea82704,61010723,0,0x0,8
tick,0x7ff86ea82704,61012649,0,0x0,8
tick,0x7ff86ea82704,61014748,0,0x0,8
tick,0x7ff86ea82704,61016753,0,0x0,8
tick,0x7ff86ea82704,61018700,0,0x0,8
tick,0x7ff86ea82704,61020757,0,0x0,8
tick,0x7ff86ea82704,61022694,0,0x0,8
tick,0x7ff86ea82704,61025425,0,0x0,8
tick,0x7ff86ea82704,61027429,0,0x0,8
tick,0x7ff86ea82704,61028836,0,0x0,8
tick,0x7ff86ea82704,61030747,0,0x0,8
tick,0x7ff86ea82704,61032796,0,0x0,8
tick,0x7ff86ea82704,61034823,0,0x0,8
tick,0x7ff86ea82704,61036803,0,0x0,8
tick,0x7ff86ea82704,61038811,0,0x0,8
tick,0x7ff86ea82704,61040848,0,0x0,8
tick,0x7ff86ea82704,61042632,0,0x0,8
tick,0x7ff86ea82704,61044863,0,0x0,8
tick,0x7ff86ea82704,61046674,0,0x0,8
tick,0x7ff86ea82704,61049268,0,0x0,8
tick,0x7ff86ea82704,61050812,0,0x0,8
tick,0x7ff86ea82704,61052767,0,0x0,8
tick,0x7ff86ea82704,61055045,0,0x0,8
tick,0x7ff86ea82704,61056851,0,0x0,8
tick,0x7ff86ea82704,61058776,0,0x0,8
tick,0x7ff86ea82704,61061113,0,0x0,8
tick,0x7ff86ea82704,61063555,0,0x0,8
tick,0x7ff86ea82704,61065710,0,0x0,8
tick,0x7ff86ea82704,61066842,0,0x0,8
tick,0x7ff86ea82704,61069038,0,0x0,8
tick,0x7ff86ea82704,61070832,0,0x0,8
tick,0x7ff86ea82704,61072994,0,0x0,8
tick,0x7ff86ea82704,61075012,0,0x0,8
tick,0x7ff86ea82704,61077120,0,0x0,8
tick,0x7ff86ea82704,61078740,0,0x0,8
tick,0x7ff86ea82704,61080759,0,0x0,8
tick,0x7ff86ea82704,61082797,0,0x0,8
tick,0x7ff86ea82704,61084674,0,0x0,8
tick,0x7ff86ea82704,61086710,0,0x0,8
tick,0x7ff86ea82704,61088671,0,0x0,8
tick,0x7ff86ea82704,61090921,0,0x0,8
tick,0x7ff86ea82704,61092515,0,0x0,8
tick,0x7ff86ea82704,61094836,0,0x0,8
tick,0x7ff86ea82704,61096668,0,0x0,8
tick,0x7ff86ea82704,61098924,0,0x0,8
tick,0x7ff86ea82704,61100568,0,0x0,8
tick,0x7ff86ea82704,61102600,0,0x0,8
tick,0x7ff86ea82704,61104801,0,0x0,8
tick,0x7ff86ea82704,61106765,0,0x0,8
tick,0x7ff86ea82704,61108629,0,0x0,8
tick,0x7ff86ea82704,61110754,0,0x0,8
tick,0x7ff86ea82704,61112633,0,0x0,8
tick,0x7ff86ea82704,61114757,0,0x0,8
tick,0x7ff86ea82704,61116560,0,0x0,8
tick,0x7ff86ea82704,61118761,0,0x0,8
tick,0x7ff86ea82704,61120616,0,0x0,8
tick,0x7ff86ea82704,61122745,0,0x0,8
tick,0x7ff86ea82704,61124789,0,0x0,8
tick,0x7ff86ea82704,61126473,0,0x0,8
tick,0x7ff86ea82704,61128615,0,0x0,8
tick,0x7ff86ea82704,61130411,0,0x0,8
tick,0x7ff86ea82704,61132655,0,0x0,8
tick,0x7ff86ea82704,61134642,0,0x0,8
tick,0x7ff86ea82704,61136646,0,0x0,8
tick,0x7ff86ea82704,61138730,0,0x0,8
tick,0x7ff86ea82704,61140542,0,0x0,8
tick,0x7ff86ea82704,61142498,0,0x0,8
tick,0x7ff86ea82704,61144663,0,0x0,8
tick,0x7ff86ea82704,61146592,0,0x0,8
tick,0x7ff86ea82704,61148640,0,0x0,8
tick,0x7ff86ea82704,61150640,0,0x0,8
tick,0x7ff86ea82704,61152555,0,0x0,8
tick,0x7ff86ea82704,61154894,0,0x0,8
tick,0x7ff86ea82704,61156395,0,0x0,8
tick,0x7ff86ea82704,61159493,0,0x0,8
tick,0x7ff86ea82704,61161926,0,0x0,8
tick,0x7ff86ea82704,61163805,0,0x0,8
tick,0x7ff86ea82704,61166215,0,0x0,8
tick,0x7ff86ea82704,61168304,0,0x0,8
tick,0x7ff86ea82704,61169592,0,0x0,8
tick,0x7ff86ea82704,61171474,0,0x0,8
tick,0x7ff86ea82704,61173508,0,0x0,8
tick,0x7ff86ea82704,61175568,0,0x0,8
tick,0x7ff86ea82704,61177429,0,0x0,8
tick,0x7ff86ea82704,61179760,0,0x0,8
tick,0x7ff86ea82704,61181266,0,0x0,8
tick,0x7ff86ea82704,61183711,0,0x0,8
tick,0x7ff86ea82704,61185541,0,0x0,8
tick,0x7ff86ea82704,61187411,0,0x0,8
tick,0x7ff86ea82704,61189413,0,0x0,8
tick,0x7ff86ea82704,61191284,0,0x0,8
tick,0x7ff86ea82704,61193365,0,0x0,8
tick,0x7ff86ea82704,61195459,0,0x0,8
tick,0x7ff86ea82704,61197348,0,0x0,8
tick,0x7ff86ea82704,61199285,0,0x0,8
tick,0x7ff86ea82704,61201250,0,0x0,8
tick,0x7ff86ea82704,61203372,0,0x0,8
tick,0x7ff86ea82704,61205462,0,0x0,8
tick,0x7ff86ea82704,61207447,0,0x0,8
tick,0x7ff86ea82704,61209827,0,0x0,8
tick,0x7ff86ea82704,61211241,0,0x0,8
tick,0x7ff86ea82704,61213255,0,0x0,8
tick,0x7ff86ea82704,61215177,0,0x0,8
tick,0x7ff86ea82704,61217411,0,0x0,8
tick,0x7ff86ea82704,61219244,0,0x0,8
tick,0x7ff86ea82704,61221135,0,0x0,8
tick,0x7ff86ea82704,61223180,0,0x0,8
tick,0x7ff86ea82704,61225162,0,0x0,8
tick,0x7ff86ea82704,61227258,0,0x0,8
tick,0x7ff86ea82704,61229224,0,0x0,8
tick,0x7ff86ea82704,61231127,0,0x0,8
tick,0x7ff86ea82704,61233121,0,0x0,8
tick,0x7ff86ea82704,61235160,0,0x0,8
tick,0x7ff86ea82704,61237255,0,0x0,8
tick,0x7ff86ea82704,61239237,0,0x0,8
tick,0x7ff86ea82704,61241177,0,0x0,8
tick,0x7ff86ea82704,61243241,0,0x0,8
tick,0x7ff86ea82704,61245186,0,0x0,8
tick,0x7ff86ea82704,61247133,0,0x0,8
tick,0x7ff86ea82704,61249136,0,0x0,8
tick,0x7ff86ea82704,61251307,0,0x0,8
tick,0x7ff86ea82704,61253212,0,0x0,8
tick,0x7ff86ea82704,61255217,0,0x0,8
tick,0x7ff86ea82704,61257317,0,0x0,8
tick,0x7ff86ea82704,61259343,0,0x0,8
tick,0x7ff86ea82704,61261249,0,0x0,8
tick,0x7ff86ea82704,61263224,0,0x0,8
tick,0x7ff86ea82704,61265473,0,0x0,8
tick,0x7ff86ea82704,61267135,0,0x0,8
tick,0x7ff86ea82704,61269370,0,0x0,8
tick,0x7ff86ea82704,61271176,0,0x0,8
tick,0x7ff86ea82704,61273062,0,0x0,8
tick,0x7ff86ea82704,61275361,0,0x0,8
tick,0x7ff86ea82704,61277079,0,0x0,8
tick,0x7ff86ea82704,61279023,0,0x0,8
tick,0x7ff86ea82704,61281068,0,0x0,8
tick,0x7ff86ea82704,61283056,0,0x0,8
tick,0x7ff86ea82704,61285365,0,0x0,8
tick,0x7ff86ea82704,61287390,0,0x0,8
tick,0x7ff86ea82704,61289286,0,0x0,8
tick,0x7ff86ea82704,61291263,0,0x0,8
tick,0x7ff86ea82704,61293367,0,0x0,8
tick,0x7ff86ea82704,61295201,0,0x0,8
tick,0x7ff86ea82704,61297053,0,0x0,8
tick,0x7ff86ea82704,61299319,0,0x0,8
tick,0x7ff86ea82704,61301165,0,0x0,8
tick,0x7ff86ea82704,61303294,0,0x0,8
tick,0x7ff86ea82704,61305071,0,0x0,8
tick,0x7ff86ea82704,61307464,0,0x0,8
tick,0x7ff86ea82704,61309181,0,0x0,8
tick,0x7ff86ea82704,61311172,0,0x0,8
tick,0x7ff86ea82704,61313249,0,0x0,8
tick,0x7ff86ea82704,61315144,0,0x0,8
tick,0x7ff86ea82704,61317204,0,0x0,8
tick,0x7ff86ea82704,61319034,0,0x0,8
tick,0x7ff86ea82704,61321159,0,0x0,8
tick,0x7ff86ea82704,61322969,0,0x0,8
tick,0x7ff86ea82704,61325197,0,0x0,8
tick,0x7ff86ea82704,61327147,0,0x0,8
tick,0x7ff86ea82704,61329026,0,0x0,8
tick,0x7ff86ea82704,61331046,0,0x0,8
tick,0x7ff86ea82704,61333138,0,0x0,8
tick,0x7ff86ea82704,61335010,0,0x0,8
tick,0x7ff86ea82704,61337189,0,0x0,8
tick,0x7ff86ea82704,61339168,0,0x0,8
tick,0x7ff86ea82704,61341154,0,0x0,8
tick,0x7ff86ea82704,61343184,0,0x0,8
tick,0x7ff86ea82704,61345121,0,0x0,8
tick,0x7ff86ea82704,61347040,0,0x0,8
tick,0x7ff86ea82704,61349123,0,0x0,8
tick,0x7ff86ea82704,61351033,0,0x0,8
tick,0x7ff86ea82704,61353038,0,0x0,8
tick,0x7ff86ea82704,61354955,0,0x0,8
tick,0x7ff86ea82704,61357007,0,0x0,8
tick,0x7ff86ea82704,61358901,0,0x0,8
tick,0x7ff86ea82704,61361123,0,0x0,8
tick,0x7ff86ea82704,61363016,0,0x0,8
tick,0x7ff86ea82704,61365067,0,0x0,8
tick,0x7ff86ea82704,61366866,0,0x0,8
tick,0x7ff86ea82704,61369105,0,0x0,8
tick,0x7ff86ea82704,61370991,0,0x0,8
tick,0x7ff86ea82704,61372869,0,0x0,8
tick,0x7ff86ea82704,61374990,0,0x0,8
tick,0x7ff86ea82704,61377034,0,0x0,8
tick,0x7ff86ea82704,61379144,0,0x0,8
tick,0x7ff86ea82704,61381169,0,0x0,8
tick,0x7ff86ea82704,61383076,0,0x0,8
tick,0x7ff86ea82704,61385115,0,0x0,8
tick,0x7ff86ea82704,61387128,0,0x0,8
tick,0x7ff86ea82704,61388997,0,0x0,8
tick,0x7ff86ea82704,61391121,0,0x0,8
tick,0x7ff86ea82704,61393085,0,0x0,8
tick,0x7ff86ea82704,61394843,0,0x0,8
tick,0x7ff86ea82704,61396927,0,0x0,8
tick,0x7ff86ea82704,61398802,0,0x0,8
tick,0x7ff86ea82704,61400916,0,0x0,8
tick,0x7ff86ea82704,61402851,0,0x0,8
tick,0x7ff86ea82704,61404933,0,0x0,8
tick,0x7ff86ea82704,61406784,0,0x0,8
tick,0x7ff86ea82704,61408942,0,0x0,8
tick,0x7ff86ea82704,61411975,0,0x0,8
tick,0x7ff86ea82704,61414272,0,0x0,8
tick,0x7ff86ea82704,61415953,0,0x0,8
tick,0x7ff86ea82704,61418324,0,0x0,8
tick,0x7ff86ea82704,61419950,0,0x0,8
tick,0x7ff86ea82704,61422083,0,0x0,8
tick,0x7ff86ea82704,61424174,0,0x0,8
tick,0x7ff86ea82704,61425736,0,0x0,8
tick,0x7ff86ea82704,61427949,0,0x0,8
tick,0x7ff86ea82704,61430044,0,0x0,8
tick,0x7ff86ea82704,61432193,0,0x0,8
tick,0x7ff86ea82704,61433858,0,0x0,8
tick,0x7ff86ea82704,61435843,0,0x0,8
tick,0x7ff86ea82704,61437770,0,0x0,8
tick,0x7ff86ea82704,61440042,0,0x0,8
tick,0x7ff86ea82704,61441670,0,0x0,8
tick,0x7ff86ea82704,61444159,0,0x0,8
tick,0x7ff86ea82704,61445811,0,0x0,8
tick,0x7ff86ea82704,61448294,0,0x0,8
tick,0x7ff86ea82704,61450157,0,0x0,8
tick,0x7ff86ea82704,61451894,0,0x0,8
tick,0x7ff86ea82704,61453648,0,0x0,8
tick,0x7ff86ea82704,61456020,0,0x0,8
tick,0x7ff86ea82704,61457945,0,0x0,8
tick,0x7ff86ea82704,61460177,0,0x0,8
tick,0x7ff86ea82704,61462064,0,0x0,8
tick,0x7ff86ea82704,61463933,0,0x0,8
tick,0x7ff86ea82704,61466088,0,0x0,8
tick,0x7ff86ea82704,61467696,0,0x0,8
tick,0x7ff86ea82704,61469906,0,0x0,8
tick,0x7ff86ea82704,61471642,0,0x0,8
tick,0x7ff86ea82704,61473915,0,0x0,8
tick,0x7ff86ea82704,61475879,0,0x0,8
tick,0x7ff86ea82704,61478583,0,0x0,8
tick,0x7ff86ea82704,61480041,0,0x0,8
tick,0x7ff86ea82704,61482167,0,0x0,8
tick,0x7ff86ea82704,61483432,0,0x0,8
tick,0x7ff86ea82704,61485484,0,0x0,8
tick,0x7ff86ea82704,61487515,0,0x0,8
tick,0x7ff86ea82704,61489448,0,0x0,8
tick,0x7ff86ea82704,61491489,0,0x0,8
tick,0x7ff86ea82704,61493563,0,0x0,8
tick,0x7ff86ea82704,61495386,0,0x0,8
tick,0x7ff86ea82704,61497676,0,0x0,8
tick,0x7ff86ea82704,61499678,0,0x0,8
tick,0x7ff86ea82704,61501542,0,0x0,8
tick,0x7ff86ea82704,61503439,0,0x0,8
tick,0x7ff86ea82704,61505517,0,0x0,8
tick,0x7ff86ea82704,61507604,0,0x0,8
tick,0x7ff86ea82704,61509733,0,0x0,8
tick,0x7ff86ea82704,61511665,0,0x0,8
tick,0x7ff86ea82704,61513596,0,0x0,8
tick,0x7ff86ea82704,61515803,0,0x0,8
tick,0x7ff86ea82704,61517595,0,0x0,8
tick,0x7ff86ea82704,61519652,0,0x0,8
tick,0x7ff86ea82704,61521673,0,0x0,8
tick,0x7ff86ea82704,61523781,0,0x0,8
tick,0x7ff86ea82704,61525697,0,0x0,8
tick,0x7ff86ea82704,61528143,0,0x0,8
tick,0x7ff86ea82704,61530099,0,0x0,8
tick,0x7ff86ea82704,61532161,0,0x0,8
tick,0x7ff86ea82704,61533521,0,0x0,8
tick,0x7ff86ea82704,61535495,0,0x0,8
tick,0x7ff86ea82704,61538184,0,0x0,8
tick,0x7ff86ea82704,61540030,0,0x0,8
tick,0x7ff86ea82704,61541817,0,0x0,8
tick,0x7ff86ea82704,61545709,0,0x0,8
tick,0x7ff86ea82704,61547442,0,0x0,8
tick,0x7ff86ea82704,61549582,0,0x0,8
tick,0x7ff86ea82704,61551606,0,0x0,8
tick,0x7ff86ea82704,61553448,0,0x0,8
tick,0x7ff86ea82704,61555914,0,0x0,8
tick,0x7ff86ea82704,61557461,0,0x0,8
tick,0x7ff86ea82704,61560285,0,0x0,8
tick,0x7ff86ea82704,61562047,0,0x0,8
tick,0x7ff86ea82704,61563770,0,0x0,8
tick,0x7ff86ea82704,61565631,0,0x0,8
tick,0x7ff86ea82704,61567563,0,0x0,8
tick,0x7ff86ea82704,61569749,0,0x0,8
tick,0x7ff86ea82704,61571540,0,0x0,8
tick,0x7ff86ea82704,61573550,0,0x0,8
tick,0x7ff86ea82704,61575427,0,0x0,8
tick,0x7ff86ea82704,61578010,0,0x0,8
tick,0x7ff86ea82704,61579725,0,0x0,8
tick,0x7ff86ea82704,61581853,0,0x0,8
tick,0x7ff86ea82704,61583431,0,0x0,8
tick,0x7ff86ea82704,61585428,0,0x0,8
tick,0x7ff86ea82704,61587337,0,0x0,8
tick,0x7ff86ea82704,61589472,0,0x0,8
tick,0x7ff86ea82704,61591300,0,0x0,8
tick,0x7ff86ea82704,61593996,0,0x0,8
tick,0x7ff86ea82704,61595546,0,0x0,8
tick,0x7ff86ea82704,61597450,0,0x0,8
tick,0x7ff86ea82704,61599668,0,0x0,8
tick,0x7ff86ea82704,61601324,0,0x0,8
tick,0x7ff86ea82704,61603385,0,0x0,8
tick,0x7ff86ea82704,61605350,0,0x0,8
tick,0x7ff86ea82704,61607526,0,0x0,8
tick,0x7ff86ea82704,61609335,0,0x0,8
tick,0x7ff86ea82704,61611746,0,0x0,8
tick,0x7ff86ea82704,61613575,0,0x0,8
tick,0x7ff86ea82704,61615919,0,0x0,8
tick,0x7ff86ea82704,61617508,0,0x0,8
tick,0x7ff86ea82704,61619459,0,0x0,8
tick,0x7ff86ea82704,61621523,0,0x0,8
tick,0x7ff86ea82704,61623372,0,0x0,8
tick,0x7ff86ea82704,61625362,0,0x0,8
tick,0x7ff86ea82704,61627974,0,0x0,8
tick,0x7ff86ea82704,61629096,0,0x0,8
tick,0x7ff86ea82704,61631159,0,0x0,8
tick,0x7ff86ea82704,61633730,0,0x0,8
tick,0x7ff86ea82704,61635392,0,0x0,8
tick,0x7ff86ea82704,61637329,0,0x0,8
tick,0x7ff86ea82704,61639306,0,0x0,8
tick,0x7ff86ea82704,61641319,0,0x0,8
tick,0x7ff86ea82704,61644457,0,0x0,8
tick,0x7ff86ea82704,61645406,0,0x0,8
tick,0x7ff86ea82704,61647224,0,0x0,8
tick,0x7ff86ea82704,61649117,0,0x0,8
tick,0x7ff86ea82704,61651420,0,0x0,8
tick,0x7ff86ea82704,61653398,0,0x0,8
tick,0x7ff86ea82704,61655692,0,0x0,8
tick,0x7ff86ea82704,61657287,0,0x0,8
tick,0x7ff86ea82704,61659005,0,0x0,8
tick,0x7ff86ea82704,61662017,0,0x0,8
tick,0x7ff86ea82704,61663437,0,0x0,8
tick,0x7ff86ea82704,61664962,0,0x0,8
tick,0x7ff86ea82704,61667148,0,0x0,8
tick,0x7ff86ea82704,61668928,0,0x0,8
tick,0x7ff86ea82704,61671243,0,0x0,8
tick,0x7ff86ea82704,61673243,0,0x0,8
tick,0x7ff86ea82704,61675263,0,0x0,8
tick,0x7ff86ea82704,61677318,0,0x0,8
tick,0x7ff86ea82704,61679489,0,0x0,8
tick,0x7ff86ea82704,61681667,0,0x0,8
tick,0x7ff86ea82704,61683133,0,0x0,8
tick,0x7ff86ea82704,61685376,0,0x0,8
tick,0x7ff86ea82704,61687286,0,0x0,8
tick,0x7ff86ea82704,61689051,0,0x0,8
tick,0x7ff86ea82704,61691447,0,0x0,8
tick,0x7ff86ea82704,61693526,0,0x0,8
tick,0x7ff86ea82704,61695255,0,0x0,8
tick,0x7ff86ea82704,61697221,0,0x0,8
tick,0x7ff86ea82704,61699325,0,0x0,8
tick,0x7ff86ea82704,61701282,0,0x0,8
tick,0x7ff86ea82704,61703322,0,0x0,8
tick,0x7ff86ea82704,61705295,0,0x0,8
tick,0x7ff86ea82704,61707373,0,0x0,8
tick,0x7ff86ea82704,61709689,0,0x0,8
tick,0x7ff86ea82704,61711090,0,0x0,8
tick,0x7ff86ea82704,61713041,0,0x0,8
tick,0x7ff86ea82704,61714974,0,0x0,8
tick,0x7ff86ea82704,61717126,0,0x0,8
tick,0x7ff86ea82704,61719318,0,0x0,8
tick,0x7ff86ea82704,61720990,0,0x0,8
tick,0x7ff86ea82704,61723244,0,0x0,8
tick,0x7ff86ea82704,61724875,0,0x0,8
tick,0x7ff86ea82704,61727933,0,0x0,8
tick,0x7ff86ea82704,61729737,0,0x0,8
tick,0x7ff86ea82704,61731870,0,0x0,8
tick,0x7ff86ea82704,61733813,0,0x0,8
tick,0x7ff86ea82704,61735870,0,0x0,8
tick,0x7ff86ea82704,61737848,0,0x0,8
tick,0x7ff86ea82704,61740109,0,0x0,8
tick,0x7ff86ea82704,61741728,0,0x0,8
tick,0x7ff86ea82704,61744045,0,0x0,8
tick,0x7ff86ea82704,61745712,0,0x0,8
tick,0x7ff86ea82704,61747779,0,0x0,8
tick,0x7ff86ea82704,61749740,0,0x0,8
tick,0x7ff86ea82704,61751832,0,0x0,8
tick,0x7ff86ea82704,61753858,0,0x0,8
tick,0x7ff86ea82704,61755758,0,0x0,8
tick,0x7ff86ea82704,61757791,0,0x0,8
tick,0x7ff86ea82704,61760253,0,0x0,8
tick,0x7ff86ea82704,61761758,0,0x0,8
tick,0x7ff86ea82704,61763778,0,0x0,8
tick,0x7ff86ea82704,61765741,0,0x0,8
tick,0x7ff86ea82704,61767651,0,0x0,8
tick,0x7ff86ea82704,61769955,0,0x0,8
tick,0x7ff86ea82704,61771984,0,0x0,8
tick,0x7ff86ea82704,61773765,0,0x0,8
tick,0x7ff86ea82704,61775660,0,0x0,8
tick,0x7ff86ea82704,61778518,0,0x0,8
tick,0x7ff86ea82704,61779774,0,0x0,8
tick,0x7ff86ea82704,61781865,0,0x0,8
tick,0x7ff86ea82704,61783694,0,0x0,8
tick,0x7ff86ea82704,61785872,0,0x0,8
tick,0x7ff86ea82704,61788044,0,0x0,8
tick,0x7ff86ea82704,61789945,0,0x0,8
tick,0x7ff86ea82704,61791802,0,0x0,8
tick,0x7ff86ea82704,61794322,0,0x0,8
tick,0x7ff86ea82704,61795869,0,0x0,8
tick,0x7ff86ea82704,61798011,0,0x0,8
tick,0x7ff86ea82704,61799726,0,0x0,8
tick,0x7ff86ea82704,61801681,0,0x0,8
tick,0x7ff86ea82704,61803633,0,0x0,8
tick,0x7ff86ea82704,61805706,0,0x0,8
tick,0x7ff86ea82704,61807919,0,0x0,8
tick,0x7ff86ea82704,61810398,0,0x0,8
tick,0x7ff86ea82704,61812599,0,0x0,8
tick,0x7ff86ea82704,61813644,0,0x0,8
tick,0x7ff86ea82704,61815663,0,0x0,8
tick,0x7ff86ea82704,61817704,0,0x0,8
tick,0x7ff86ea82704,61819741,0,0x0,8
tick,0x7ff86ea82704,61821715,0,0x0,8
tick,0x7ff86ea82704,61823723,0,0x0,8
tick,0x7ff86ea82704,61825597,0,0x0,8
tick,0x7ff86ea82704,61828609,0,0x0,8
tick,0x7ff86ea82704,61830693,0,0x0,8
tick,0x7ff86ea82704,61832814,0,0x0,8
tick,0x7ff86ea82704,61835082,0,0x0,8
tick,0x7ff86ea82704,61836768,0,0x0,8
tick,0x7ff86ea82704,61838682,0,0x0,8
tick,0x7ff86ea82704,61840725,0,0x0,8
tick,0x7ff86ea82704,61842667,0,0x0,8
tick,0x7ff86ea82704,61845707,0,0x0,8
tick,0x7ff86ea82704,61847657,0,0x0,8
tick,0x7ff86ea82704,61849564,0,0x0,8
tick,0x7ff86ea82704,61851617,0,0x0,8
tick,0x7ff86ea82704,61853659,0,0x0,8
tick,0x7ff86ea82704,61855566,0,0x0,8
tick,0x7ff86ea82704,61857731,0,0x0,8
tick,0x7ff86ea82704,61859698,0,0x0,8
tick,0x7ff86ea82704,61862679,0,0x0,8
tick,0x7ff86ea82704,61864655,0,0x0,8
tick,0x7ff86ea82704,61866924,0,0x0,8
tick,0x7ff86ea82704,61868508,0,0x0,8
tick,0x7ff86ea82704,61870715,0,0x0,8
tick,0x7ff86ea82704,61872987,0,0x0,8
tick,0x7ff86ea82704,61874727,0,0x0,8
tick,0x7ff86ea82704,61877084,0,0x0,8
tick,0x7ff86ea82704,61879160,0,0x0,8
tick,0x7ff86ea82704,61880899,0,0x0,8
tick,0x7ff86ea82704,61882876,0,0x0,8
tick,0x7ff86ea82704,61884548,0,0x0,8
tick,0x7ff86ea82704,61886794,0,0x0,8
tick,0x7ff86ea82704,61889321,0,0x0,8
tick,0x7ff86ea82704,61890801,0,0x0,8
tick,0x7ff86ea82704,61892517,0,0x0,8
tick,0x7ff86ea82704,61895022,0,0x0,8
tick,0x7ff86ea82704,61897025,0,0x0,8
tick,0x7ff86ea82704,61898903,0,0x0,8
tick,0x7ff86ea82704,61900760,0,0x0,8
tick,0x7ff86ea82704,61902550,0,0x0,8
tick,0x7ff86ea82704,61904682,0,0x0,8
tick,0x7ff86ea82704,61906497,0,0x0,8
tick,0x7ff86ea82704,61908563,0,0x0,8
tick,0x7ff86ea82704,61911026,0,0x0,8
tick,0x7ff86ea82704,61912398,0,0x0,8
tick,0x7ff86ea82704,61914427,0,0x0,8
tick,0x7ff86ea82704,61916545,0,0x0,8
tick,0x7ff86ea82704,61918503,0,0x0,8
tick,0x7ff86ea82704,61920480,0,0x0,8
tick,0x7ff86ea82704,61922413,0,0x0,8
tick,0x7ff86ea82704,61924529,0,0x0,8
tick,0x7ff86ea82704,61926679,0,0x0,8
tick,0x7ff86ea82704,61928656,0,0x0,8
tick,0x7ff86ea82704,61930562,0,0x0,8
tick,0x7ff86ea82704,61932560,0,0x0,8
tick,0x7ff86ea82704,61934672,0,0x0,8
tick,0x7ff86ea82704,61936708,0,0x0,8
tick,0x7ff86ea82704,61938429,0,0x0,8
tick,0x7ff86ea82704,61940439,0,0x0,8
tick,0x7ff86ea82704,61942370,0,0x0,8
tick,0x7ff86ea82704,61944775,0,0x0,8
tick,0x7ff86ea82704,61946402,0,0x0,8
tick,0x7ff86ea82704,61948530,0,0x0,8
tick,0x7ff86ea82704,61950394,0,0x0,8
tick,0x7ff86ea82704,61952425,0,0x0,8
tick,0x7ff86ea82704,61954304,0,0x0,8
tick,0x7ff86ea82704,61956429,0,0x0,8
tick,0x7ff86ea82704,61958305,0,0x0,8
tick,0x7ff86ea82704,61961020,0,0x0,8
tick,0x7ff86ea82704,61963509,0,0x0,8
tick,0x7ff86ea82704,61965333,0,0x0,8
tick,0x7ff86ea82704,61967458,0,0x0,8
tick,0x7ff86ea82704,61969287,0,0x0,8
tick,0x7ff86ea82704,61971378,0,0x0,8
tick,0x7ff86ea82704,61973213,0,0x0,8
tick,0x7ff86ea82704,61975259,0,0x0,8
tick,0x7ff86ea82704,61977356,0,0x0,8
tick,0x7ff86ea82704,61979553,0,0x0,8
tick,0x7ff86ea82704,61981572,0,0x0,8
tick,0x7ff86ea82704,61983357,0,0x0,8
tick,0x7ff86ea82704,61985268,0,0x0,8
tick,0x7ff86ea82704,61987500,0,0x0,8
tick,0x7ff86ea82704,61989157,0,0x0,8
tick,0x7ff86ea82704,61991471,0,0x0,8
tick,0x7ff86ea82704,61994848,0,0x0,8
tick,0x7ff86ea82704,61996705,0,0x0,8
tick,0x7ff86ea82704,61998275,0,0x0,8
tick,0x7ff86ea82704,62000148,0,0x0,8
tick,0x7ff86ea82704,62002178,0,0x0,8
tick,0x7ff86ea82704,62004225,0,0x0,8
tick,0x7ff86ea82704,62006197,0,0x0,8
tick,0x7ff86ea82704,62008141,0,0x0,8
tick,0x7ff86ea82704,62010227,0,0x0,8
tick,0x7ff86ea82704,62012129,0,0x0,8
tick,0x7ff86ea82704,62014134,0,0x0,8
tick,0x7ff86ea82704,62016270,0,0x0,8
tick,0x7ff86ea82704,62018163,0,0x0,8
tick,0x7ff86ea82704,62020130,0,0x0,8
tick,0x7ff86ea82704,62022057,0,0x0,8
tick,0x7ff86ea82704,62024128,0,0x0,8
tick,0x7ff86ea82704,62026051,0,0x0,8
tick,0x7ff86ea82704,62028051,0,0x0,8
tick,0x7ff86ea82704,62030019,0,0x0,8
tick,0x7ff86ea82704,62032108,0,0x0,8
tick,0x7ff86ea82704,62034115,0,0x0,8
tick,0x7ff86ea82704,62036077,0,0x0,8
tick,0x7ff86ea82704,62038037,0,0x0,8
tick,0x7ff86ea82704,62040061,0,0x0,8
tick,0x7ff86ea82704,62042054,0,0x0,8
tick,0x7ff86ea82704,62044104,0,0x0,8
tick,0x7ff86ea82704,62045985,0,0x0,8
tick,0x7ff86ea82704,62048034,0,0x0,8
tick,0x7ff86ea82704,62049942,0,0x0,8
tick,0x7ff86ea82704,62052065,0,0x0,8
tick,0x7ff86ea82704,62054028,0,0x0,8
tick,0x7ff86ea82704,62056043,0,0x0,8
tick,0x7ff86ea82704,62058036,0,0x0,8
tick,0x7ff86ea82704,62060076,0,0x0,8
tick,0x7ff86ea82704,62061872,0,0x0,8
tick,0x7ff86ea82704,62063930,0,0x0,8
tick,0x7ff86ea82704,62065874,0,0x0,8
tick,0x7ff86ea82704,62067960,0,0x0,8
tick,0x7ff86ea82704,62070015,0,0x0,8
tick,0x7ff86ea82704,62072048,0,0x0,8
tick,0x7ff86ea82704,62073974,0,0x0,8
tick,0x7ff86ea82704,62075852,0,0x0,8
tick,0x7ff86ea82704,62077928,0,0x0,8
tick,0x7ff86ea82704,62079909,0,0x0,8
tick,0x7ff86ea82704,62081980,0,0x0,8
tick,0x7ff86ea82704,62083955,0,0x0,8
tick,0x7ff86ea82704,62085909,0,0x0,8
tick,0x7ff86ea82704,62087883,0,0x0,8
tick,0x7ff86ea82704,62089767,0,0x0,8
tick,0x7ff86ea82704,62091965,0,0x0,8
tick,0x7ff86ea82704,62093859,0,0x0,8
tick,0x7ff86ea82704,62095879,0,0x0,8
tick,0x7ff86ea82704,62097930,0,0x0,8
tick,0x7ff86ea82704,62099932,0,0x0,8
tick,0x7ff86ea82704,62101876,0,0x0,8
tick,0x7ff86ea82704,62103941,0,0x0,8
tick,0x7ff86ea82704,62105888,0,0x0,8
tick,0x7ff86ea82704,62107808,0,0x0,8
tick,0x7ff86ea82704,62109829,0,0x0,8
tick,0x7ff86ea82704,62111874,0,0x0,8
tick,0x7ff86ea82704,62113993,0,0x0,8
tick,0x7ff86ea82704,62115974,0,0x0,8
tick,0x7ff86ea82704,62117870,0,0x0,8
tick,0x7ff86ea82704,62119815,0,0x0,8
tick,0x7ff86ea82704,62121802,0,0x0,8
tick,0x7ff86ea82704,62123875,0,0x0,8
tick,0x7ff86ea82704,62125844,0,0x0,8
tick,0x7ff86ea82704,62127825,0,0x0,8
tick,0x7ff86ea82704,62129863,0,0x0,8
tick,0x7ff86ea82704,62131868,0,0x0,8
tick,0x7ff86ea82704,62134111,0,0x0,8
tick,0x7ff86ea82704,62136011,0,0x0,8
tick,0x7ff86ea82704,62137904,0,0x0,8
tick,0x7ff86ea82704,62140000,0,0x0,8
tick,0x7ff86ea82704,62141933,0,0x0,8
tick,0x7ff86ea82704,62144548,0,0x0,8
tick,0x7ff86ea82704,62146973,0,0x0,8
tick,0x7ff86ea82704,62148987,0,0x0,8
tick,0x7ff86ea82704,62151258,0,0x0,8
tick,0x7ff86ea82704,62153004,0,0x0,8
tick,0x7ff86ea82704,62154814,0,0x0,8
tick,0x7ff86ea82704,62156859,0,0x0,8
tick,0x7ff86ea82704,62158875,0,0x0,8
tick,0x7ff86ea82704,62160885,0,0x0,8
tick,0x7ff86ea82704,62162977,0,0x0,8
tick,0x7ff86ea82704,62164870,0,0x0,8
tick,0x7ff86ea82704,62166968,0,0x0,8
tick,0x7ff86ea82704,62168731,0,0x0,8
tick,0x7ff86ea82704,62170746,0,0x0,8
tick,0x7ff86ea82704,62172714,0,0x0,8
tick,0x7ff86ea82704,62174847,0,0x0,8
tick,0x7ff86ea82704,62176888,0,0x0,8
tick,0x7ff86ea82704,62178808,0,0x0,8
tick,0x7ff86ea82704,62180886,0,0x0,8
tick,0x7ff86ea82704,62182920,0,0x0,8
tick,0x7ff86ea82704,62184741,0,0x0,8
tick,0x7ff86ea82704,62186887,0,0x0,8
tick,0x7ff86ea82704,62188861,0,0x0,8
tick,0x7ff86ea82704,62190751,0,0x0,8
tick,0x7ff86ea82704,62192761,0,0x0,8
tick,0x7ff86ea82704,62194729,0,0x0,8
tick,0x7ff86ea82704,62196796,0,0x0,8
tick,0x7ff86ea82704,62198840,0,0x0,8
tick,0x7ff86ea82704,62200814,0,0x0,8
tick,0x7ff86ea82704,62203086,0,0x0,8
tick,0x7ff86ea82704,62204757,0,0x0,8
tick,0x7ff86ea82704,62206704,0,0x0,8
tick,0x7ff86ea82704,62208682,0,0x0,8
tick,0x7ff86ea82704,62210799,0,0x0,8
tick,0x7ff86ea82704,62212627,0,0x0,8
tick,0x7ff86ea82704,62214609,0,0x0,8
tick,0x7ff86ea82704,62216679,0,0x0,8
tick,0x7ff86ea82704,62218662,0,0x0,8
tick,0x7ff86ea82704,62220657,0,0x0,8
tick,0x7ff86ea82704,62222715,0,0x0,8
tick,0x7ff86ea82704,62224594,0,0x0,8
tick,0x7ff86ea82704,62226821,0,0x0,8
tick,0x7ff86ea82704,62228722,0,0x0,8
tick,0x7ff86ea82704,62230714,0,0x0,8
tick,0x7ff86ea82704,62232564,0,0x0,8
tick,0x7ff86ea82704,62234946,0,0x0,8
tick,0x7ff86ea82704,62236700,0,0x0,8
tick,0x7ff86ea82704,62238481,0,0x0,8
tick,0x7ff86ea82704,62240640,0,0x0,8
tick,0x7ff86ea82704,62242693,0,0x0,8
tick,0x7ff86ea82704,62244543,0,0x0,8
tick,0x7ff86ea82704,62246634,0,0x0,8
tick,0x7ff86ea82704,62248487,0,0x0,8
tick,0x7ff86ea82704,62250548,0,0x0,8
tick,0x7ff86ea82704,62254574,0,0x0,8
tick,0x7ff86ea82704,62256653,0,0x0,8
tick,0x7ff86ea82704,62258730,0,0x0,8
tick,0x7ff86ea82704,62260780,0,0x0,8
tick,0x7ff86ea82704,62262481,0,0x0,8
tick,0x7ff86ea82704,62264547,0,0x0,8
tick,0x7ff86ea82704,62266497,0,0x0,8
tick,0x7ff86ea82704,62268685,0,0x0,8
tick,0x7ff86ea82704,62270451,0,0x0,8
tick,0x7ff86ea82704,62272693,0,0x0,8
tick,0x7ff86ea82704,62274484,0,0x0,8
tick,0x7ff86ea82704,62277072,0,0x0,8
tick,0x7ff86ea82704,62278736,0,0x0,8
tick,0x7ff86ea82704,62280470,0,0x0,8
tick,0x7ff86ea82704,62282650,0,0x0,8
tick,0x7ff86ea82704,62284569,0,0x0,8
tick,0x7ff86ea82704,62286529,0,0x0,8
tick,0x7ff86ea82704,62288515,0,0x0,8
tick,0x7ff86ea82704,62290549,0,0x0,8
tick,0x7ff86ea82704,62292535,0,0x0,8
tick,0x7ff86ea82704,62294944,0,0x0,8
tick,0x7ff86ea82704,62296794,0,0x0,8
tick,0x7ff86ea82704,62298717,0,0x0,8
tick,0x7ff86ea82704,62300638,0,0x0,8
tick,0x7ff86ea82704,62302363,0,0x0,8
tick,0x7ff86ea82704,62304413,0,0x0,8
tick,0x7ff86ea82704,62306417,0,0x0,8
tick,0x7ff86ea82704,62308385,0,0x0,8
tick,0x7ff86ea82704,62310627,0,0x0,8
tick,0x7ff86ea82704,62312285,0,0x0,8
tick,0x7ff86ea82704,62314387,0,0x0,8
tick,0x7ff86ea82704,62316392,0,0x0,8
tick,0x7ff86ea82704,62318400,0,0x0,8
tick,0x7ff86ea82704,62320280,0,0x0,8
tick,0x7ff86ea82704,62322526,0,0x0,8
tick,0x7ff86ea82704,62324320,0,0x0,8
tick,0x7ff86ea82704,62326568,0,0x0,8
tick,0x7ff86ea82704,62328564,0,0x0,8
tick,0x7ff86ea82704,62330486,0,0x0,8
tick,0x7ff86ea82704,62332366,0,0x0,8
tick,0x7ff86ea82704,62334441,0,0x0,8
tick,0x7ff86ea82704,62336487,0,0x0,8
tick,0x7ff86ea82704,62338324,0,0x0,8
tick,0x7ff86ea82704,62340361,0,0x0,8
tick,0x7ff86ea82704,62342335,0,0x0,8
tick,0x7ff86ea82704,62344775,0,0x0,8
tick,0x7ff86ea82704,62346347,0,0x0,8
tick,0x7ff86ea82704,62348371,0,0x0,8
tick,0x7ff86ea82704,62350206,0,0x0,8
tick,0x7ff86ea82704,62352181,0,0x0,8
tick,0x7ff86ea82704,62354335,0,0x0,8
tick,0x7ff86ea82704,62356238,0,0x0,8
tick,0x7ff86ea82704,62358226,0,0x0,8
tick,0x7ff86ea82704,62360543,0,0x0,8
tick,0x7ff86ea82704,62362474,0,0x0,8
tick,0x7ff86ea82704,62364309,0,0x0,8
tick,0x7ff86ea82704,62366385,0,0x0,8
tick,0x7ff86ea82704,62368398,0,0x0,8
tick,0x7ff86ea82704,62370282,0,0x0,8
tick,0x7ff86ea82704,62372237,0,0x0,8
tick,0x7ff86ea82704,62374266,0,0x0,8
tick,0x7ff86ea82704,62376265,0,0x0,8
tick,0x7ff86ea82704,62378594,0,0x0,8
tick,0x7ff86ea82704,62380353,0,0x0,8
tick,0x7ff86ea82704,62382242,0,0x0,8
tick,0x7ff86ea82704,62384480,0,0x0,8
tick,0x7ff86ea82704,62386332,0,0x0,8
tick,0x7ff86ea82704,62389030,0,0x0,8
tick,0x7ff86ea82704,62390403,0,0x0,8
tick,0x7ff86ea82704,62394105,0,0x0,8
tick,0x7ff86ea82704,62395200,0,0x0,8
tick,0x7ff86ea82704,62397169,0,0x0,8
tick,0x7ff86ea82704,62399050,0,0x0,8
tick,0x7ff86ea82704,62401016,0,0x0,8
tick,0x7ff86ea82704,62403026,0,0x0,8
tick,0x7ff86ea82704,62404950,0,0x0,8
tick,0x7ff86ea82704,62407084,0,0x0,8
tick,0x7ff86ea82704,62409183,0,0x0,8
tick,0x7ff86ea82704,62414766,0,0x0,8
tick,0x7ff86ea82704,62416087,0,0x0,8
tick,0x7ff86ea82704,62418079,0,0x0,8
tick,0x7ff86ea82704,62420055,0,0x0,8
tick,0x7ff86ea82704,62422044,0,0x0,8
tick,0x7ff86ea82704,62424064,0,0x0,8
tick,0x7ff86ea82704,62426015,0,0x0,8
tick,0x7ff86ea82704,62429510,0,0x0,8
tick,0x7ff86ea82704,62430565,0,0x0,8
tick,0x7ff86ea82704,62432015,0,0x0,8
tick,0x7ff86ea82704,62434049,0,0x0,8
tick,0x7ff86ea82704,62436002,0,0x0,8
tick,0x7ff86ea82704,62438141,0,0x0,8
tick,0x7ff86ea82704,62439988,0,0x0,8
tick,0x7ff86ea82704,62441949,0,0x0,8
tick,0x7ff86ea82704,62445626,0,0x0,8
tick,0x7ff86ea82704,62447356,0,0x0,8
tick,0x7ff86ea82704,62449062,0,0x0,8
tick,0x7ff86ea82704,62450991,0,0x0,8
tick,0x7ff86ea82704,62453067,0,0x0,8
tick,0x7ff86ea82704,62455638,0,0x0,8
tick,0x7ff86ea82704,62457154,0,0x0,8
tick,0x7ff86ea82704,62459020,0,0x0,8
tick,0x7ff86ea82704,62461650,0,0x0,8
tick,0x7ff86ea82704,62463671,0,0x0,8
tick,0x7ff86ea82704,62465119,0,0x0,8
tick,0x7ff86ea82704,62467132,0,0x0,8
tick,0x7ff86ea82704,62469047,0,0x0,8
tick,0x7ff86ea82704,62471053,0,0x0,8
tick,0x7ff86ea82704,62473130,0,0x0,8
tick,0x7ff86ea82704,62474976,0,0x0,8
tick,0x7ff86ea82704,62477591,0,0x0,8
tick,0x7ff86ea82704,62479395,0,0x0,8
tick,0x7ff86ea82704,62481193,0,0x0,8
tick,0x7ff86ea82704,62483345,0,0x0,8
tick,0x7ff86ea82704,62485059,0,0x0,8
tick,0x7ff86ea82704,62486849,0,0x0,8
tick,0x7ff86ea82704,62488984,0,0x0,8
tick,0x7ff86ea82704,62490898,0,0x0,8
tick,0x7ff86ea82704,62493249,0,0x0,8
tick,0x7ff86ea82704,62495840,0,0x0,8
tick,0x7ff86ea82704,62496987,0,0x0,8
tick,0x7ff86ea82704,62498994,0,0x0,8
tick,0x7ff86ea82704,62500856,0,0x0,8
tick,0x7ff86ea82704,62502878,0,0x0,8
tick,0x7ff86ea82704,62504803,0,0x0,8
tick,0x7ff86ea82704,62506862,0,0x0,8
tick,0x7ff86ea82704,62508906,0,0x0,8
tick,0x7ff86ea82704,62511393,0,0x0,8
tick,0x7ff86ea82704,62512905,0,0x0,8
tick,0x7ff86ea82704,62514977,0,0x0,8
tick,0x7ff86ea82704,62516736,0,0x0,8
tick,0x7ff86ea82704,62518856,0,0x0,8
tick,0x7ff86ea82704,62520856,0,0x0,8
tick,0x7ff86ea82704,62522953,0,0x0,8
tick,0x7ff86ea82704,62524775,0,0x0,8
tick,0x7ff86ea82704,62528353,0,0x0,8
tick,0x7ff86ea82704,62529734,0,0x0,8
tick,0x7ff86ea82704,62531812,0,0x0,8
tick,0x7ff86ea82704,62533650,0,0x0,8
tick,0x7ff86ea82704,62535695,0,0x0,8
tick,0x7ff86ea82704,62537668,0,0x0,8
tick,0x7ff86ea82704,62539692,0,0x0,8
tick,0x7ff86ea82704,62541668,0,0x0,8
tick,0x7ff86ea82704,62544294,0,0x0,8
tick,0x7ff86ea82704,62546239,0,0x0,8
tick,0x7ff86ea82704,62547822,0,0x0,8
tick,0x7ff86ea82704,62549940,0,0x0,8
tick,0x7ff86ea82704,62551834,0,0x0,8
tick,0x7ff86ea82704,62553706,0,0x0,8
tick,0x7ff86ea82704,62555862,0,0x0,8
tick,0x7ff86ea82704,62557929,0,0x0,8
tick,0x7ff86ea82704,62560661,0,0x0,8
tick,0x7ff86ea82704,62562158,0,0x0,8
tick,0x7ff86ea82704,62563753,0,0x0,8
tick,0x7ff86ea82704,62565969,0,0x0,8
tick,0x7ff86ea82704,62567752,0,0x0,8
tick,0x7ff86ea82704,62569754,0,0x0,8
tick,0x7ff86ea82704,62571638,0,0x0,8
tick,0x7ff86ea82704,62573622,0,0x0,8
tick,0x7ff86ea82704,62575745,0,0x0,8
tick,0x7ff86ea82704,62578247,0,0x0,8
tick,0x7ff86ea82704,62580764,0,0x0,8
tick,0x7ff86ea82704,62582663,0,0x0,8
tick,0x7ff86ea82704,62584606,0,0x0,8
tick,0x7ff86ea82704,62586610,0,0x0,8
tick,0x7ff86ea82704,62588574,0,0x0,8
tick,0x7ff86ea82704,62590591,0,0x0,8
tick,0x7ff86ea82704,62592755,0,0x0,8
tick,0x7ff86ea82704,62595277,0,0x0,8
tick,0x7ff86ea82704,62596684,0,0x0,8
tick,0x7ff86ea82704,62598563,0,0x0,8
tick,0x7ff86ea82704,62600561,0,0x0,8
tick,0x7ff86ea82704,62602517,0,0x0,8
tick,0x7ff86ea82704,62604788,0,0x0,8
tick,0x7ff86ea82704,62606519,0,0x0,8
tick,0x7ff86ea82704,62608564,0,0x0,8
tick,0x7ff86ea82704,62611032,0,0x0,8
tick,0x7ff86ea82704,62612760,0,0x0,8
tick,0x7ff86ea82704,62614584,0,0x0,8
tick,0x7ff86ea82704,62616628,0,0x0,8
tick,0x7ff86ea82704,62618551,0,0x0,8
tick,0x7ff86ea82704,62620486,0,0x0,8
tick,0x7ff86ea82704,62622542,0,0x0,8
tick,0x7ff86ea82704,62624745,0,0x0,8
tick,0x7ff86ea82704,62627034,0,0x0,8
tick,0x7ff86ea82704,62628781,0,0x0,8
tick,0x7ff86ea82704,62630807,0,0x0,8
tick,0x7ff86ea82704,62632607,0,0x0,8
tick,0x7ff86ea82704,62635200,0,0x0,8
tick,0x7ff86ea82704,62637534,0,0x0,8
tick,0x7ff86ea82704,62639826,0,0x0,8
tick,0x7ff86ea82704,62641412,0,0x0,8
tick,0x7ff86ea82704,62644354,0,0x0,8
tick,0x7ff86ea82704,62645588,0,0x0,8
tick,0x7ff86ea82704,62647456,0,0x0,8
tick,0x7ff86ea82704,62650042,0,0x0,8
tick,0x7ff86ea82704,62651544,0,0x0,8
tick,0x7ff86ea82704,62653551,0,0x0,8
tick,0x7ff86ea82704,62655492,0,0x0,8
tick,0x7ff86ea82704,62657374,0,0x0,8
tick,0x7ff86ea82704,62659402,0,0x0,8
tick,0x7ff86ea82704,62661524,0,0x0,8
tick,0x7ff86ea82704,62663576,0,0x0,8
tick,0x7ff86ea82704,62665465,0,0x0,8
tick,0x7ff86ea82704,62667464,0,0x0,8
tick,0x7ff86ea82704,62669403,0,0x0,8
tick,0x7ff86ea82704,62671449,0,0x0,8
tick,0x7ff86ea82704,62673282,0,0x0,8
tick,0x7ff86ea82704,62675529,0,0x0,8
tick,0x7ff86ea82704,62677873,0,0x0,8
tick,0x7ff86ea82704,62679740,0,0x0,8
tick,0x7ff86ea82704,62681523,0,0x0,8
tick,0x7ff86ea82704,62683517,0,0x0,8
tick,0x7ff86ea82704,62685282,0,0x0,8
tick,0x7ff86ea82704,62687362,0,0x0,8
tick,0x7ff86ea82704,62689355,0,0x0,8
tick,0x7ff86ea82704,62691747,0,0x0,8
tick,0x7ff86ea82704,62693822,0,0x0,8
tick,0x7ff86ea82704,62695660,0,0x0,8
tick,0x7ff86ea82704,62697425,0,0x0,8
tick,0x7ff86ea82704,62699445,0,0x0,8
tick,0x7ff86ea82704,62701275,0,0x0,8
tick,0x7ff86ea82704,62703277,0,0x0,8
tick,0x7ff86ea82704,62705248,0,0x0,8
tick,0x7ff86ea82704,62707409,0,0x0,8
tick,0x7ff86ea82704,62709403,0,0x0,8
tick,0x7ff86ea82704,62711845,0,0x0,8
tick,0x7ff86ea82704,62713343,0,0x0,8
tick,0x7ff86ea82704,62715377,0,0x0,8
tick,0x7ff86ea82704,62717242,0,0x0,8
tick,0x7ff86ea82704,62719282,0,0x0,8
tick,0x7ff86ea82704,62721319,0,0x0,8
tick,0x7ff86ea82704,62723409,0,0x0,8
tick,0x7ff86ea82704,62725365,0,0x0,8
tick,0x7ff86ea82704,62727671,0,0x0,8
tick,0x7ff86ea82704,62729548,0,0x0,8
tick,0x7ff86ea82704,62731347,0,0x0,8
tick,0x7ff86ea82704,62733385,0,0x0,8
tick,0x7ff86ea82704,62735210,0,0x0,8
tick,0x7ff86ea82704,62737230,0,0x0,8
tick,0x7ff86ea82704,62739391,0,0x0,8
tick,0x7ff86ea82704,62741300,0,0x0,8
tick,0x7ff86ea82704,62743493,0,0x0,8
tick,0x7ff86ea82704,62745420,0,0x0,8
tick,0x7ff86ea82704,62747215,0,0x0,8
tick,0x7ff86ea82704,62749322,0,0x0,8
tick,0x7ff86ea82704,62751263,0,0x0,8
tick,0x7ff86ea82704,62753405,0,0x0,8
tick,0x7ff86ea82704,62755252,0,0x0,8
tick,0x7ff86ea82704,62757172,0,0x0,8
tick,0x7ff86ea82704,62759257,0,0x0,8
tick,0x7ff86ea82704,62761731,0,0x0,8
tick,0x7ff86ea82704,62763144,0,0x0,8
tick,0x7ff86ea82704,62765265,0,0x0,8
tick,0x7ff86ea82704,62767176,0,0x0,8
tick,0x7ff86ea82704,62769201,0,0x0,8
tick,0x7ff86ea82704,62771111,0,0x0,8
tick,0x7ff86ea82704,62773122,0,0x0,8
tick,0x7ff86ea82704,62775038,0,0x0,8
tick,0x7ff86ea82704,62777444,0,0x0,8
tick,0x7ff86ea82704,62779257,0,0x0,8
tick,0x7ff86ea82704,62781136,0,0x0,8
tick,0x7ff86ea82704,62783243,0,0x0,8
tick,0x7ff86ea82704,62785255,0,0x0,8
tick,0x7ff86ea82704,62787095,0,0x0,8
tick,0x7ff86ea82704,62789090,0,0x0,8
tick,0x7ff86ea82704,62791108,0,0x0,8
tick,0x7ff86ea82704,62793595,0,0x0,8
tick,0x7ff86ea82704,62795192,0,0x0,8
tick,0x7ff86ea82704,62797253,0,0x0,8
tick,0x7ff86ea82704,62799445,0,0x0,8
tick,0x7ff86ea82704,62801468,0,0x0,8
tick,0x7ff86ea82704,62803052,0,0x0,8
tick,0x7ff86ea82704,62805101,0,0x0,8
tick,0x7ff86ea82704,62807104,0,0x0,8
tick,0x7ff86ea82704,62809338,0,0x0,8
tick,0x7ff86ea82704,62811308,0,0x0,8
tick,0x7ff86ea82704,62813009,0,0x0,8
tick,0x7ff86ea82704,62815198,0,0x0,8
tick,0x7ff86ea82704,62817074,0,0x0,8
tick,0x7ff86ea82704,62819129,0,0x0,8
tick,0x7ff86ea82704,62820977,0,0x0,8
tick,0x7ff86ea82704,62823006,0,0x0,8
tick,0x7ff86ea82704,62825067,0,0x0,8
tick,0x7ff86ea82704,62828340,0,0x0,8
tick,0x7ff86ea82704,62830189,0,0x0,8
tick,0x7ff86ea82704,62831974,0,0x0,8
tick,0x7ff86ea82704,62833995,0,0x0,8
tick,0x7ff86ea82704,62835931,0,0x0,8
tick,0x7ff86ea82704,62838070,0,0x0,8
tick,0x7ff86ea82704,62839917,0,0x0,8
tick,0x7ff86ea82704,62842050,0,0x0,8
tick,0x7ff86ea82704,62844452,0,0x0,8
tick,0x7ff86ea82704,62846055,0,0x0,8
tick,0x7ff86ea82704,62847992,0,0x0,8
tick,0x7ff86ea82704,62850116,0,0x0,8
tick,0x7ff86ea82704,62851848,0,0x0,8
tick,0x7ff86ea82704,62853999,0,0x0,8
tick,0x7ff86ea82704,62855840,0,0x0,8
tick,0x7ff86ea82704,62857945,0,0x0,8
tick,0x7ff86ea82704,62860171,0,0x0,8
tick,0x7ff86ea82704,62862642,0,0x0,8
tick,0x7ff86ea82704,62863727,0,0x0,8
tick,0x7ff86ea82704,62865869,0,0x0,8
tick,0x7ff86ea82704,62867752,0,0x0,8
tick,0x7ff86ea82704,62869854,0,0x0,8
tick,0x7ff86ea82704,62871723,0,0x0,8
tick,0x7ff86ea82704,62873847,0,0x0,8
tick,0x7ff86ea82704,62875726,0,0x0,8
tick,0x7ff86ea82704,62878431,0,0x0,8
tick,0x7ff86ea82704,62879719,0,0x0,8
tick,0x7ff86ea82704,62881759,0,0x0,8
tick,0x7ff86ea82704,62883746,0,0x0,8
tick,0x7ff86ea82704,62885733,0,0x0,8
tick,0x7ff86ea82704,62887674,0,0x0,8
tick,0x7ff86ea82704,62889718,0,0x0,8
tick,0x7ff86ea82704,62891711,0,0x0,8
tick,0x7ff86ea82704,62894751,0,0x0,8
tick,0x7ff86ea82704,62895864,0,0x0,8
tick,0x7ff86ea82704,62897736,0,0x0,8
tick,0x7ff86ea82704,62899699,0,0x0,8
tick,0x7ff86ea82704,62901600,0,0x0,8
tick,0x7ff86ea82704,62903718,0,0x0,8
tick,0x7ff86ea82704,62905595,0,0x0,8
tick,0x7ff86ea82704,62907646,0,0x0,8
tick,0x7ff86ea82704,62909834,0,0x0,8
tick,0x7ff86ea82704,62911924,0,0x0,8
tick,0x7ff86ea82704,62913681,0,0x0,8
tick,0x7ff86ea82704,62915657,0,0x0,8
tick,0x7ff86ea82704,62917635,0,0x0,8
tick,0x7ff86ea82704,62919580,0,0x0,8
tick,0x7ff86ea82704,62921757,0,0x0,8
tick,0x7ff86ea82704,62923635,0,0x0,8
tick,0x7ff86ea82704,62925704,0,0x0,8
tick,0x7ff86ea82704,62927926,0,0x0,8
tick,0x7ff86ea82704,62929633,0,0x0,8
tick,0x7ff86ea82704,62931650,0,0x0,8
tick,0x7ff86ea82704,62933726,0,0x0,8
tick,0x7ff86ea82704,62935576,0,0x0,8
tick,0x7ff86ea82704,62937606,0,0x0,8
tick,0x7ff86ea82704,62939608,0,0x0,8
tick,0x7ff86ea82704,62941606,0,0x0,8
tick,0x7ff86ea82704,62943666,0,0x0,8
tick,0x7ff86ea82704,62945771,0,0x0,8
tick,0x7ff86ea82704,62947565,0,0x0,8
tick,0x7ff86ea82704,62949545,0,0x0,8
tick,0x7ff86ea82704,62951505,0,0x0,8
tick,0x7ff86ea82704,62953586,0,0x0,8
tick,0x7ff86ea82704,62955488,0,0x0,8
tick,0x7ff86ea82704,62957538,0,0x0,8
tick,0x7ff86ea82704,62959489,0,0x0,8
tick,0x7ff86ea82704,62962226,0,0x0,8
tick,0x7ff86ea82704,62963564,0,0x0,8
tick,0x7ff86ea82704,62965601,0,0x0,8
tick,0x7ff86ea82704,62967538,0,0x0,8
tick,0x7ff86ea82704,62969629,0,0x0,8
tick,0x7ff86ea82704,62971502,0,0x0,8
tick,0x7ff86ea82704,62973667,0,0x0,8
tick,0x7ff86ea82704,62975486,0,0x0,8
tick,0x7ff86ea82704,62978911,0,0x0,8
tick,0x7ff86ea82704,62980920,0,0x0,8
tick,0x7ff86ea82704,62982592,0,0x0,8
tick,0x7ff86ea82704,62984536,0,0x0,8
tick,0x7ff86ea82704,62986619,0,0x0,8
tick,0x7ff86ea82704,62988568,0,0x0,8
tick,0x7ff86ea82704,62990521,0,0x0,8
tick,0x7ff86ea82704,62992570,0,0x0,8
tick,0x7ff86ea82704,62994726,0,0x0,8
tick,0x7ff86ea82704,62996825,0,0x0,8
tick,0x7ff86ea82704,62998599,0,0x0,8
tick,0x7ff86ea82704,63000524,0,0x0,8
tick,0x7ff86ea82704,63002403,0,0x0,8
tick,0x7ff86ea82704,63004522,0,0x0,8
tick,0x7ff86ea82704,63006647,0,0x0,8
tick,0x7ff86ea82704,63008536,0,0x0,8
tick,0x7ff86ea82704,63011165,0,0x0,8
tick,0x7ff86ea82704,63012719,0,0x0,8
tick,0x7ff86ea82704,63014592,0,0x0,8
tick,0x7ff86ea82704,63016606,0,0x0,8
tick,0x7ff86ea82704,63018513,0,0x0,8
tick,0x7ff86ea82704,63020511,0,0x0,8
tick,0x7ff86ea82704,63022371,0,0x0,8
tick,0x7ff86ea82704,63024434,0,0x0,8
tick,0x7ff86ea82704,63026671,0,0x0,8
tick,0x7ff86ea82704,63028859,0,0x0,8
tick,0x7ff86ea82704,63030555,0,0x0,8
tick,0x7ff86ea82704,63032485,0,0x0,8
tick,0x7ff86ea82704,63034355,0,0x0,8
tick,0x7ff86ea82704,63036422,0,0x0,8
tick,0x7ff86ea82704,63038409,0,0x0,8
tick,0x7ff86ea82704,63040253,0,0x0,8
tick,0x7ff86ea82704,63042383,0,0x0,8
tick,0x7ff86ea82704,63044863,0,0x0,8
tick,0x7ff86ea82704,63046421,0,0x0,8
tick,0x7ff86ea82704,63048447,0,0x0,8
tick,0x7ff86ea82704,63050305,0,0x0,8
tick,0x7ff86ea82704,63052316,0,0x0,8
tick,0x7ff86ea82704,63054237,0,0x0,8
tick,0x7ff86ea82704,63056314,0,0x0,8
tick,0x7ff86ea82704,63058248,0,0x0,8
tick,0x7ff86ea82704,63060858,0,0x0,8
tick,0x7ff86ea82704,63062395,0,0x0,8
tick,0x7ff86ea82704,63064428,0,0x0,8
tick,0x7ff86ea82704,63066312,0,0x0,8
tick,0x7ff86ea82704,63068259,0,0x0,8
tick,0x7ff86ea82704,63070230,0,0x0,8
tick,0x7ff86ea82704,63072388,0,0x0,8
tick,0x7ff86ea82704,63074229,0,0x0,8
tick,0x7ff86ea82704,63076180,0,0x0,8
tick,0x7ff86ea82704,63078773,0,0x0,8
tick,0x7ff86ea82704,63080231,0,0x0,8
tick,0x7ff86ea82704,63082291,0,0x0,8
tick,0x7ff86ea82704,63084272,0,0x0,8
tick,0x7ff86ea82704,63086226,0,0x0,8
tick,0x7ff86ea82704,63088186,0,0x0,8
tick,0x7ff86ea82704,63090274,0,0x0,8
tick,0x7ff86ea82704,63092289,0,0x0,8
tick,0x7ff86ea82704,63094948,0,0x0,8
tick,0x7ff86ea82704,63096131,0,0x0,8
tick,0x7ff86ea82704,63098257,0,0x0,8
tick,0x7ff86ea82704,63100104,0,0x0,8
tick,0x7ff86ea82704,63102141,0,0x0,8
tick,0x7ff86ea82704,63104106,0,0x0,8
tick,0x7ff86ea82704,63106117,0,0x0,8
tick,0x7ff86ea82704,63108098,0,0x0,8
tick,0x7ff86ea82704,63110239,0,0x0,8
tick,0x7ff86ea82704,63112242,0,0x0,8
tick,0x7ff86ea82704,63114159,0,0x0,8
tick,0x7ff86ea82704,63116155,0,0x0,8
tick,0x7ff86ea82704,63118293,0,0x0,8
tick,0x7ff86ea82704,63120209,0,0x0,8
tick,0x7ff86ea82704,63122179,0,0x0,8
tick,0x7ff86ea82704,63124058,0,0x0,8
tick,0x7ff86ea82704,63126156,0,0x0,8
tick,0x7ff86ea82704,63128559,0,0x0,8
tick,0x7ff86ea82704,63130379,0,0x0,8
tick,0x7ff86ea82704,63132250,0,0x0,8
tick,0x7ff86ea82704,63134286,0,0x0,8
tick,0x7ff86ea82704,63136136,0,0x0,8
tick,0x7ff86ea82704,63138385,0,0x0,8
tick,0x7ff86ea82704,63140443,0,0x0,8
tick,0x7ff86ea82704,63142316,0,0x0,8
tick,0x7ff86ea82704,63144477,0,0x0,8
tick,0x7ff86ea82704,63146220,0,0x0,8
tick,0x7ff86ea82704,63148431,0,0x0,8
tick,0x7ff86ea82704,63150087,0,0x0,8
tick,0x7ff86ea82704,63152053,0,0x0,8
tick,0x7ff86ea82704,63154083,0,0x0,8
tick,0x7ff86ea82704,63156092,0,0x0,8
tick,0x7ff86ea82704,63158106,0,0x0,8
tick,0x7ff86ea82704,63160703,0,0x0,8
tick,0x7ff86ea82704,63162165,0,0x0,8
tick,0x7ff86ea82704,63164272,0,0x0,8
tick,0x7ff86ea82704,63166028,0,0x0,8
tick,0x7ff86ea82704,63168223,0,0x0,8
tick,0x7ff86ea82704,63170093,0,0x0,8
tick,0x7ff86ea82704,63172142,0,0x0,8
tick,0x7ff86ea82704,63174105,0,0x0,8
tick,0x7ff86ea82704,63176107,0,0x0,8
tick,0x7ff86ea82704,63178164,0,0x0,8
tick,0x7ff86ea82704,63182535,0,0x0,8
tick,0x7ff86ea82704,63184118,0,0x0,8
tick,0x7ff86ea82704,63186297,0,0x0,8
tick,0x7ff86ea82704,63188166,0,0x0,8
tick,0x7ff86ea82704,63190797,0,0x0,8
tick,0x7ff86ea82704,63192832,0,0x0,8
tick,0x7ff86ea82704,63195115,0,0x0,8
tick,0x7ff86ea82704,63196843,0,0x0,8
tick,0x7ff86ea82704,63198925,0,0x0,8
tick,0x7ff86ea82704,63200901,0,0x0,8
tick,0x7ff86ea82704,63202848,0,0x0,8
tick,0x7ff86ea82704,63204854,0,0x0,8
tick,0x7ff86ea82704,63206857,0,0x0,8
tick,0x7ff86ea82704,63208817,0,0x0,8
tick,0x7ff86ea82704,63212169,0,0x0,8
tick,0x7ff86ea82704,63214145,0,0x0,8
tick,0x7ff86ea82704,63216041,0,0x0,8
tick,0x7ff86ea82704,63218103,0,0x0,8
tick,0x7ff86ea82704,63220024,0,0x0,8
tick,0x7ff86ea82704,63222021,0,0x0,8
tick,0x7ff86ea82704,63224017,0,0x0,8
tick,0x7ff86ea82704,63226066,0,0x0,8
tick,0x7ff86ea82704,63227965,0,0x0,8
tick,0x7ff86ea82704,63230059,0,0x0,8
tick,0x7ff86ea82704,63232001,0,0x0,8
tick,0x7ff86ea82704,63233980,0,0x0,8
tick,0x7ff86ea82704,63235882,0,0x0,8
tick,0x7ff86ea82704,63237898,0,0x0,8
tick,0x7ff86ea82704,63239912,0,0x0,8
tick,0x7ff86ea82704,63241979,0,0x0,8
tick,0x7ff86ea82704,63243936,0,0x0,8
tick,0x7ff86ea82704,63245917,0,0x0,8
tick,0x7ff86ea82704,63247863,0,0x0,8
tick,0x7ff86ea82704,63249936,0,0x0,8
tick,0x7ff86ea82704,63251993,0,0x0,8
tick,0x7ff86ea82704,63253888,0,0x0,8
tick,0x7ff86ea82704,63255879,0,0x0,8
tick,0x7ff86ea82704,63257931,0,0x0,8
tick,0x7ff86ea82704,63259891,0,0x0,8
tick,0x7ff86ea82704,63261969,0,0x0,8
tick,0x7ff86ea82704,63263926,0,0x0,8
tick,0x7ff86ea82704,63265830,0,0x0,8
tick,0x7ff86ea82704,63267938,0,0x0,8
tick,0x7ff86ea82704,63269956,0,0x0,8
tick,0x7ff86ea82704,63271832,0,0x0,8
tick,0x7ff86ea82704,63274057,0,0x0,8
tick,0x7ff86ea82704,63275914,0,0x0,8
tick,0x7ff86ea82704,63278010,0,0x0,8
tick,0x7ff86ea82704,63279827,0,0x0,8
tick,0x7ff86ea82704,63281734,0,0x0,8
tick,0x7ff86ea82704,63283865,0,0x0,8
tick,0x7ff86ea82704,63285793,0,0x0,8
tick,0x7ff86ea82704,63287958,0,0x0,8
tick,0x7ff86ea82704,63289826,0,0x0,8
tick,0x7ff86ea82704,63291840,0,0x0,8
tick,0x7ff86ea82704,63293810,0,0x0,8
tick,0x7ff86ea82704,63295868,0,0x0,8
tick,0x7ff86ea82704,63297735,0,0x0,8
tick,0x7ff86ea82704,63300009,0,0x0,8
tick,0x7ff86ea82704,63301750,0,0x0,8
tick,0x7ff86ea82704,63303866,0,0x0,8
tick,0x7ff86ea82704,63305787,0,0x0,8
tick,0x7ff86ea82704,63307871,0,0x0,8
tick,0x7ff86ea82704,63309781,0,0x0,8
tick,0x7ff86ea82704,63311923,0,0x0,8
tick,0x7ff86ea82704,63313857,0,0x0,8
tick,0x7ff86ea82704,63315965,0,0x0,8
tick,0x7ff86ea82704,63317661,0,0x0,8
tick,0x7ff86ea82704,63319897,0,0x0,8
tick,0x7ff86ea82704,63321620,0,0x0,8
tick,0x7ff86ea82704,63323819,0,0x0,8
tick,0x7ff86ea82704,63325665,0,0x0,8
tick,0x7ff86ea82704,63327721,0,0x0,8
tick,0x7ff86ea82704,63329657,0,0x0,8
tick,0x7ff86ea82704,63331620,0,0x0,8
tick,0x7ff86ea82704,63333710,0,0x0,8
tick,0x7ff86ea82704,63335759,0,0x0,8
tick,0x7ff86ea82704,63337729,0,0x0,8
tick,0x7ff86ea82704,63339702,0,0x0,8
tick,0x7ff86ea82704,63341660,0,0x0,8
tick,0x7ff86ea82704,63343648,0,0x0,8
tick,0x7ff86ea82704,63345589,0,0x0,8
tick,0x7ff86ea82704,63347780,0,0x0,8
tick,0x7ff86ea82704,63349585,0,0x0,8
tick,0x7ff86ea82704,63351590,0,0x0,8
tick,0x7ff86ea82704,63353610,0,0x0,8
tick,0x7ff86ea82704,63355611,0,0x0,8
tick,0x7ff86ea82704,63357607,0,0x0,8
tick,0x7ff86ea82704,63359747,0,0x0,8
tick,0x7ff86ea82704,63361583,0,0x0,8
tick,0x7ff86ea82704,63363687,0,0x0,8
tick,0x7ff86ea82704,63365455,0,0x0,8
tick,0x7ff86ea82704,63367763,0,0x0,8
tick,0x7ff86ea82704,63369530,0,0x0,8
tick,0x7ff86ea82704,63371726,0,0x0,8
tick,0x7ff86ea82704,63373563,0,0x0,8
tick,0x7ff86ea82704,63375643,0,0x0,8
tick,0x7ff86ea82704,63377548,0,0x0,8
tick,0x7ff86ea82704,63379557,0,0x0,8
tick,0x7ff86ea82704,63381645,0,0x0,8
tick,0x7ff86ea82704,63383709,0,0x0,8
tick,0x7ff86ea82704,63385876,0,0x0,8
tick,0x7ff86ea82704,63387513,0,0x0,8
tick,0x7ff86ea82704,63389771,0,0x0,8
tick,0x7ff86ea82704,63391562,0,0x0,8
tick,0x7ff86ea82704,63394554,0,0x0,8
tick,0x7ff86ea82704,63395496,0,0x0,8
tick,0x7ff86ea82704,63397462,0,0x0,8
tick,0x7ff86ea82704,63399276,0,0x0,8
tick,0x7ff86ea82704,63401408,0,0x0,8
tick,0x7ff86ea82704,63403377,0,0x0,8
tick,0x7ff86ea82704,63405399,0,0x0,8
tick,0x7ff86ea82704,63407373,0,0x0,8
tick,0x7ff86ea82704,63409402,0,0x0,8
tick,0x7ff86ea82704,63411926,0,0x0,8
tick,0x7ff86ea82704,63413538,0,0x0,8
tick,0x7ff86ea82704,63415597,0,0x0,8
tick,0x7ff86ea82704,63417357,0,0x0,8
tick,0x7ff86ea82704,63419649,0,0x0,8
tick,0x7ff86ea82704,63421839,0,0x0,8
tick,0x7ff86ea82704,63423342,0,0x0,8
tick,0x7ff86ea82704,63425400,0,0x0,8
tick,0x7ff86ea82704,63427543,0,0x0,8
tick,0x7ff86ea82704,63429571,0,0x0,8
tick,0x7ff86ea82704,63431309,0,0x0,8
tick,0x7ff86ea82704,63433469,0,0x0,8
tick,0x7ff86ea82704,63435215,0,0x0,8
tick,0x7ff86ea82704,63437329,0,0x0,8
tick,0x7ff86ea82704,63439314,0,0x0,8
tick,0x7ff86ea82704,63441142,0,0x0,8
tick,0x7ff86ea82704,63443723,0,0x0,8
tick,0x7ff86ea82704,63445311,0,0x0,8
tick,0x7ff86ea82704,63447429,0,0x0,8
tick,0x7ff86ea82704,63449252,0,0x0,8
tick,0x7ff86ea82704,63451507,0,0x0,8
tick,0x7ff86ea82704,63453436,0,0x0,8
tick,0x7ff86ea82704,63455357,0,0x0,8
tick,0x7ff86ea82704,63457288,0,0x0,8
tick,0x7ff86ea82704,63459360,0,0x0,8
tick,0x7ff86ea82704,63461559,0,0x0,8
tick,0x7ff86ea82704,63463277,0,0x0,8
tick,0x7ff86ea82704,63465247,0,0x0,8
tick,0x7ff86ea82704,63467250,0,0x0,8
tick,0x7ff86ea82704,63469326,0,0x0,8
tick,0x7ff86ea82704,63471212,0,0x0,8
tick,0x7ff86ea82704,63473309,0,0x0,8
tick,0x7ff86ea82704,63475481,0,0x0,8
tick,0x7ff86ea82704,63477607,0,0x0,8
tick,0x7ff86ea82704,63479349,0,0x0,8
tick,0x7ff86ea82704,63481513,0,0x0,8
tick,0x7ff86ea82704,63483671,0,0x0,8
tick,0x7ff86ea82704,63485399,0,0x0,8
tick,0x7ff86ea82704,63487561,0,0x0,8
tick,0x7ff86ea82704,63489671,0,0x0,8
tick,0x7ff86ea82704,63491325,0,0x0,8
tick,0x7ff86ea82704,63494270,0,0x0,8
tick,0x7ff86ea82704,63495899,0,0x0,8
tick,0x7ff86ea82704,63498299,0,0x0,8
tick,0x7ff86ea82704,63500203,0,0x0,8
tick,0x7ff86ea82704,63502252,0,0x0,8
tick,0x7ff86ea82704,63504242,0,0x0,8
tick,0x7ff86ea82704,63506239,0,0x0,8
tick,0x7ff86ea82704,63508431,0,0x0,8
tick,0x7ff86ea82704,63510561,0,0x0,8
tick,0x7ff86ea82704,63512395,0,0x0,8
tick,0x7ff86ea82704,63514085,0,0x0,8
tick,0x7ff86ea82704,63516167,0,0x0,8
tick,0x7ff86ea82704,63518060,0,0x0,8
tick,0x7ff86ea82704,63520173,0,0x0,8
tick,0x7ff86ea82704,63522125,0,0x0,8
tick,0x7ff86ea82704,63524349,0,0x0,8
tick,0x7ff86ea82704,63526598,0,0x0,8
tick,0x7ff86ea82704,63528743,0,0x0,8
tick,0x7ff86ea82704,63529941,0,0x0,8
tick,0x7ff86ea82704,63532073,0,0x0,8
tick,0x7ff86ea82704,63534107,0,0x0,8
tick,0x7ff86ea82704,63536004,0,0x0,8
tick,0x7ff86ea82704,63538077,0,0x0,8
tick,0x7ff86ea82704,63540053,0,0x0,8
tick,0x7ff86ea82704,63542108,0,0x0,8
tick,0x7ff86ea82704,63543962,0,0x0,8
tick,0x7ff86ea82704,63546119,0,0x0,8
tick,0x7ff86ea82704,63547972,0,0x0,8
tick,0x7ff86ea82704,63550008,0,0x0,8
tick,0x7ff86ea82704,63552007,0,0x0,8
tick,0x7ff86ea82704,63554110,0,0x0,8
tick,0x7ff86ea82704,63555958,0,0x0,8
tick,0x7ff86ea82704,63557993,0,0x0,8
tick,0x7ff86ea82704,63560254,0,0x0,8
tick,0x7ff86ea82704,63561904,0,0x0,8
tick,0x7ff86ea82704,63564047,0,0x0,8
tick,0x7ff86ea82704,63565956,0,0x0,8
tick,0x7ff86ea82704,63567903,0,0x0,8
tick,0x7ff86ea82704,63569931,0,0x0,8
tick,0x7ff86ea82704,63571908,0,0x0,8
tick,0x7ff86ea82704,63574021,0,0x0,8
tick,0x7ff86ea82704,63575881,0,0x0,8
tick,0x7ff86ea82704,63577963,0,0x0,8
tick,0x7ff86ea82704,63579868,0,0x0,8
tick,0x7ff86ea82704,63581852,0,0x0,8
tick,0x7ff86ea82704,63583883,0,0x0,8
tick,0x7ff86ea82704,63585897,0,0x0,8
tick,0x7ff86ea82704,63587815,0,0x0,8
tick,0x7ff86ea82704,63589839,0,0x0,8
tick,0x7ff86ea82704,63591953,0,0x0,8
tick,0x7ff86ea82704,63593825,0,0x0,8
tick,0x7ff86ea82704,63595908,0,0x0,8
tick,0x7ff86ea82704,63597768,0,0x0,8
tick,0x7ff86ea82704,63599874,0,0x0,8
tick,0x7ff86ea82704,63601759,0,0x0,8
tick,0x7ff86ea82704,63603734,0,0x0,8
tick,0x7ff86ea82704,63605841,0,0x0,8
tick,0x7ff86ea82704,63607758,0,0x0,8
tick,0x7ff86ea82704,63609912,0,0x0,8
tick,0x7ff86ea82704,63611860,0,0x0,8
tick,0x7ff86ea82704,63613821,0,0x0,8
tick,0x7ff86ea82704,63615784,0,0x0,8
tick,0x7ff86ea82704,63617849,0,0x0,8
tick,0x7ff86ea82704,63619815,0,0x0,8
tick,0x7ff86ea82704,63621826,0,0x0,8
tick,0x7ff86ea82704,63623741,0,0x0,8
tick,0x7ff86ea82704,63625883,0,0x0,8
tick,0x7ff86ea82704,63630617,0,0x0,8
tick,0x7ff86ea82704,63631792,0,0x0,8
tick,0x7ff86ea82704,63633814,0,0x0,8
tick,0x7ff86ea82704,63635807,0,0x0,8
tick,0x7ff86ea82704,63637842,0,0x0,8
tick,0x7ff86ea82704,63639811,0,0x0,8
tick,0x7ff86ea82704,63641917,0,0x0,8
tick,0x7ff86ea82704,63643766,0,0x0,8
tick,0x7ff86ea82704,63645778,0,0x0,8
tick,0x7ff86ea82704,63647787,0,0x0,8
tick,0x7ff86ea82704,63649785,0,0x0,8
tick,0x7ff86ea82704,63651872,0,0x0,8
tick,0x7ff86ea82704,63653708,0,0x0,8
tick,0x7ff86ea82704,63655682,0,0x0,8
tick,0x7ff86ea82704,63657831,0,0x0,8
tick,0x7ff86ea82704,63659634,0,0x0,8
tick,0x7ff86ea82704,63661735,0,0x0,8
tick,0x7ff86ea82704,63663683,0,0x0,8
tick,0x7ff86ea82704,63665717,0,0x0,8
tick,0x7ff86ea82704,63667694,0,0x0,8
tick,0x7ff86ea82704,63669667,0,0x0,8
tick,0x7ff86ea82704,63671679,0,0x0,8
tick,0x7ff86ea82704,63673789,0,0x0,8
tick,0x7ff86ea82704,63675640,0,0x0,8
tick,0x7ff86ea82704,63677744,0,0x0,8
tick,0x7ff86ea82704,63679645,0,0x0,8
tick,0x7ff86ea82704,63681698,0,0x0,8
tick,0x7ff86ea82704,63683700,0,0x0,8
tick,0x7ff86ea82704,63685713,0,0x0,8
tick,0x7ff86ea82704,63687720,0,0x0,8
tick,0x7ff86ea82704,63689593,0,0x0,8
tick,0x7ff86ea82704,63691671,0,0x0,8
tick,0x7ff86ea82704,63693605,0,0x0,8
tick,0x7ff86ea82704,63695597,0,0x0,8
tick,0x7ff86ea82704,63697612,0,0x0,8
tick,0x7ff86ea82704,63699654,0,0x0,8
tick,0x7ff86ea82704,63701595,0,0x0,8
tick,0x7ff86ea82704,63703536,0,0x0,8
tick,0x7ff86ea82704,63705687,0,0x0,8
tick,0x7ff86ea82704,63707567,0,0x0,8
tick,0x7ff86ea82704,63709602,0,0x0,8
tick,0x7ff86ea82704,63711575,0,0x0,8
tick,0x7ff86ea82704,63713632,0,0x0,8
tick,0x7ff86ea82704,63715623,0,0x0,8
tick,0x7ff86ea82704,63717500,0,0x0,8
tick,0x7ff86ea82704,63719552,0,0x0,8
tick,0x7ff86ea82704,63721476,0,0x0,8
tick,0x7ff86ea82704,63723601,0,0x0,8
tick,0x7ff86ea82704,63725516,0,0x0,8
tick,0x7ff86ea82704,63727602,0,0x0,8
tick,0x7ff86ea82704,63729466,0,0x0,8
tick,0x7ff86ea82704,63731597,0,0x0,8
tick,0x7ff86ea82704,63733483,0,0x0,8
tick,0x7ff86ea82704,63735533,0,0x0,8
tick,0x7ff86ea82704,63737579,0,0x0,8
tick,0x7ff86ea82704,63739533,0,0x0,8
tick,0x7ff86ea82704,63741472,0,0x0,8
tick,0x7ff86ea82704,63743488,0,0x0,8
tick,0x7ff86ea82704,63745463,0,0x0,8
tick,0x7ff86ea82704,63747575,0,0x0,8
tick,0x7ff86ea82704,63749483,0,0x0,8
tick,0x7ff86ea82704,63751594,0,0x0,8
tick,0x7ff86ea82704,63753450,0,0x0,8
tick,0x7ff86ea82704,63755453,0,0x0,8
tick,0x7ff86ea82704,63757578,0,0x0,8
tick,0x7ff86ea82704,63759549,0,0x0,8
tick,0x7ff86ea82704,63761486,0,0x0,8
tick,0x7ff86ea82704,63763453,0,0x0,8
tick,0x7ff86ea82704,63765436,0,0x0,8
tick,0x7ff86ea82704,63767503,0,0x0,8
tick,0x7ff86ea82704,63769414,0,0x0,8
tick,0x7ff86ea82704,63771446,0,0x0,8
tick,0x7ff86ea82704,63773484,0,0x0,8
tick,0x7ff86ea82704,63775546,0,0x0,8
tick,0x7ff86ea82704,63777521,0,0x0,8
tick,0x7ff86ea82704,63779472,0,0x0,8
tick,0x7ff86ea82704,63781394,0,0x0,8
tick,0x7ff86ea82704,63783531,0,0x0,8
tick,0x7ff86ea82704,63785394,0,0x0,8
tick,0x7ff86ea82704,63787408,0,0x0,8
tick,0x7ff86ea82704,63789283,0,0x0,8
tick,0x7ff86ea82704,63791445,0,0x0,8
tick,0x7ff86ea82704,63793407,0,0x0,8
tick,0x7ff86ea82704,63795416,0,0x0,8
tick,0x7ff86ea82704,63797369,0,0x0,8
tick,0x7ff86ea82704,63799336,0,0x0,8
tick,0x7ff86ea82704,63801362,0,0x0,8
tick,0x7ff86ea82704,63803292,0,0x0,8
tick,0x7ff86ea82704,63805425,0,0x0,8
tick,0x7ff86ea82704,63807337,0,0x0,8
tick,0x7ff86ea82704,63809322,0,0x0,8
tick,0x7ff86ea82704,63811353,0,0x0,8
tick,0x7ff86ea82704,63813364,0,0x0,8
tick,0x7ff86ea82704,63815246,0,0x0,8
tick,0x7ff86ea82704,63817356,0,0x0,8
tick,0x7ff86ea82704,63819287,0,0x0,8
tick,0x7ff86ea82704,63821390,0,0x0,8
tick,0x7ff86ea82704,63823266,0,0x0,8
tick,0x7ff86ea82704,63825415,0,0x0,8
tick,0x7ff86ea82704,63827274,0,0x0,8
tick,0x7ff86ea82704,63829251,0,0x0,8
tick,0x7ff86ea82704,63831250,0,0x0,8
tick,0x7ff86ea82704,63833284,0,0x0,8
tick,0x7ff86ea82704,63835279,0,0x0,8
tick,0x7ff86ea82704,63837211,0,0x0,8
tick,0x7ff86ea82704,63839442,0,0x0,8
tick,0x7ff86ea82704,63841228,0,0x0,8
tick,0x7ff86ea82704,63843500,0,0x0,8
tick,0x7ff86ea82704,63845212,0,0x0,8
tick,0x7ff86ea82704,63847186,0,0x0,8
tick,0x7ff86ea82704,63849231,0,0x0,8
tick,0x7ff86ea82704,63851125,0,0x0,8
tick,0x7ff86ea82704,63853271,0,0x0,8
tick,0x7ff86ea82704,63855167,0,0x0,8
tick,0x7ff86ea82704,63857217,0,0x0,8
tick,0x7ff86ea82704,63859153,0,0x0,8
tick,0x7ff86ea82704,63861279,0,0x0,8
tick,0x7ff86ea82704,63863147,0,0x0,8
tick,0x7ff86ea82704,63865197,0,0x0,8
tick,0x7ff86ea82704,63867211,0,0x0,8
tick,0x7ff86ea82704,63869161,0,0x0,8
tick,0x7ff86ea82704,63871159,0,0x0,8
tick,0x7ff86ea82704,63873189,0,0x0,8
tick,0x7ff86ea82704,63875133,0,0x0,8
tick,0x7ff86ea82704,63877186,0,0x0,8
tick,0x7ff86ea82704,63879188,0,0x0,8
tick,0x7ff86ea82704,63881228,0,0x0,8
tick,0x7ff86ea82704,63883072,0,0x0,8
tick,0x7ff86ea82704,63885222,0,0x0,8
tick,0x7ff86ea82704,63887119,0,0x0,8
tick,0x7ff86ea82704,63889184,0,0x0,8
tick,0x7ff86ea82704,63891140,0,0x0,8
tick,0x7ff86ea82704,63893147,0,0x0,8
tick,0x7ff86ea82704,63895057,0,0x0,8
tick,0x7ff86ea82704,63897036,0,0x0,8
tick,0x7ff86ea82704,63899077,0,0x0,8
tick,0x7ff86ea82704,63900980,0,0x0,8
tick,0x7ff86ea82704,63903157,0,0x0,8
tick,0x7ff86ea82704,63905131,0,0x0,8
tick,0x7ff86ea82704,63907113,0,0x0,8
tick,0x7ff86ea82704,63909066,0,0x0,8
tick,0x7ff86ea82704,63911117,0,0x0,8
tick,0x7ff86ea82704,63913026,0,0x0,8
tick,0x7ff86ea82704,63915039,0,0x0,8
tick,0x7ff86ea82704,63916888,0,0x0,8
tick,0x7ff86ea82704,63919096,0,0x0,8
tick,0x7ff86ea82704,63920938,0,0x0,8
tick,0x7ff86ea82704,63923105,0,0x0,8
tick,0x7ff86ea82704,63924967,0,0x0,8
tick,0x7ff86ea82704,63927070,0,0x0,8
tick,0x7ff86ea82704,63928967,0,0x0,8
tick,0x7ff86ea82704,63931053,0,0x0,8
tick,0x7ff86ea82704,63932881,0,0x0,8
tick,0x7ff86ea82704,63935008,0,0x0,8
tick,0x7ff86ea82704,63936889,0,0x0,8
tick,0x7ff86ea82704,63938995,0,0x0,8
tick,0x7ff86ea82704,63940997,0,0x0,8
tick,0x7ff86ea82704,63942909,0,0x0,8
tick,0x7ff86ea82704,63944924,0,0x0,8
tick,0x7ff86ea82704,63946903,0,0x0,8
tick,0x7ff86ea82704,63948957,0,0x0,8
tick,0x7ff86ea82704,63950896,0,0x0,8
tick,0x7ff86ea82704,63952921,0,0x0,8
tick,0x7ff86ea82704,63954871,0,0x0,8
tick,0x7ff86ea82704,63956952,0,0x0,8
tick,0x7ff86ea82704,63958932,0,0x0,8
tick,0x7ff86ea82704,63960939,0,0x0,8
tick,0x7ff86ea82704,63962874,0,0x0,8
tick,0x7ff86ea82704,63964925,0,0x0,8
tick,0x7ff86ea82704,63966809,0,0x0,8
tick,0x7ff86ea82704,63968916,0,0x0,8
tick,0x7ff86ea82704,63970846,0,0x0,8
tick,0x7ff86ea82704,63972895,0,0x0,8
tick,0x7ff86ea82704,63974888,0,0x0,8
tick,0x7ff86ea82704,63976844,0,0x0,8
tick,0x7ff86ea82704,63978799,0,0x0,8
tick,0x7ff86ea82704,63980912,0,0x0,8
tick,0x7ff86ea82704,63982813,0,0x0,8
tick,0x7ff86ea82704,63984873,0,0x0,8
tick,0x7ff86ea82704,63986808,0,0x0,8
tick,0x7ff86ea82704,63988825,0,0x0,8
tick,0x7ff86ea82704,63990850,0,0x0,8
tick,0x7ff86ea82704,63992889,0,0x0,8
tick,0x7ff86ea82704,63994770,0,0x0,8
tick,0x7ff86ea82704,63996841,0,0x0,8
tick,0x7ff86ea82704,63999189,0,0x0,8
tick,0x7ff86ea82704,64000786,0,0x0,8
tick,0x7ff86ea82704,64002778,0,0x0,8
tick,0x7ff86ea82704,64004927,0,0x0,8
tick,0x7ff86ea82704,64006793,0,0x0,8
tick,0x7ff86ea82704,64008798,0,0x0,8
tick,0x7ff86ea82704,64010865,0,0x0,8
tick,0x7ff86ea82704,64012813,0,0x0,8
tick,0x7ff86ea82704,64014786,0,0x0,8
tick,0x7ff86ea82704,64016742,0,0x0,8
tick,0x7ff86ea82704,64018817,0,0x0,8
tick,0x7ff86ea82704,64020880,0,0x0,8
tick,0x7ff86ea82704,64022810,0,0x0,8
tick,0x7ff86ea82704,64024922,0,0x0,8
tick,0x7ff86ea82704,64026793,0,0x0,8
tick,0x7ff86ea82704,64028714,0,0x0,8
tick,0x7ff86ea82704,64030774,0,0x0,8
tick,0x7ff86ea82704,64032765,0,0x0,8
tick,0x7ff86ea82704,64034765,0,0x0,8
tick,0x7ff86ea82704,64036691,0,0x0,8
tick,0x7ff86ea82704,64038726,0,0x0,8
tick,0x7ff86ea82704,64040682,0,0x0,8
tick,0x7ff86ea82704,64042727,0,0x0,8
tick,0x7ff86ea82704,64044703,0,0x0,8
tick,0x7ff86ea82704,64046677,0,0x0,8
tick,0x7ff86ea82704,64048687,0,0x0,8
tick,0x7ff86ea82704,64050624,0,0x0,8
tick,0x7ff86ea82704,64052703,0,0x0,8
tick,0x7ff86ea82704,64054599,0,0x0,8
tick,0x7ff86ea82704,64056658,0,0x0,8
tick,0x7ff86ea82704,64058645,0,0x0,8
tick,0x7ff86ea82704,64060700,0,0x0,8
tick,0x7ff86ea82704,64062543,0,0x0,8
tick,0x7ff86ea82704,64064637,0,0x0,8
tick,0x7ff86ea82704,64066569,0,0x0,8
tick,0x7ff86ea82704,64068809,0,0x0,8
tick,0x7ff86ea82704,64070739,0,0x0,8
tick,0x7ff86ea82704,64072696,0,0x0,8
tick,0x7ff86ea82704,64074517,0,0x0,8
tick,0x7ff86ea82704,64076662,0,0x0,8
tick,0x7ff86ea82704,64078527,0,0x0,8
tick,0x7ff86ea82704,64080520,0,0x0,8
tick,0x7ff86ea82704,64082469,0,0x0,8
tick,0x7ff86ea82704,64084554,0,0x0,8
tick,0x7ff86ea82704,64086680,0,0x0,8
tick,0x7ff86ea82704,64088710,0,0x0,8
tick,0x7ff86ea82704,64090779,0,0x0,8
tick,0x7ff86ea82704,64092636,0,0x0,8
tick,0x7ff86ea82704,64094541,0,0x0,8
tick,0x7ff86ea82704,64096493,0,0x0,8
tick,0x7ff86ea82704,64098624,0,0x0,8
tick,0x7ff86ea82704,64100473,0,0x0,8
tick,0x7ff86ea82704,64102537,0,0x0,8
tick,0x7ff86ea82704,64104532,0,0x0,8
tick,0x7ff86ea82704,64106444,0,0x0,8
tick,0x7ff86ea82704,64108493,0,0x0,8
tick,0x7ff86ea82704,64110455,0,0x0,8
tick,0x7ff86ea82704,64112541,0,0x0,8
tick,0x7ff86ea82704,64114395,0,0x0,8
tick,0x7ff86ea82704,64116508,0,0x0,8
tick,0x7ff86ea82704,64118377,0,0x0,8
tick,0x7ff86ea82704,64120599,0,0x0,8
tick,0x7ff86ea82704,64122385,0,0x0,8
tick,0x7ff86ea82704,64124503,0,0x0,8
tick,0x7ff86ea82704,64126504,0,0x0,8
tick,0x7ff86ea82704,64128404,0,0x0,8
tick,0x7ff86ea82704,64130555,0,0x0,8
tick,0x7ff86ea82704,64132456,0,0x0,8
tick,0x7ff86ea82704,64134472,0,0x0,8
tick,0x7ff86ea82704,64136405,0,0x0,8
tick,0x7ff86ea82704,64138546,0,0x0,8
tick,0x7ff86ea82704,64140477,0,0x0,8
tick,0x7ff86ea82704,64142711,0,0x0,8
tick,0x7ff86ea82704,64144494,0,0x0,8
tick,0x7ff86ea82704,64146369,0,0x0,8
tick,0x7ff86ea82704,64148456,0,0x0,8
tick,0x7ff86ea82704,64150395,0,0x0,8
tick,0x7ff86ea82704,64152509,0,0x0,8
tick,0x7ff86ea82704,64154419,0,0x0,8
tick,0x7ff86ea82704,64156497,0,0x0,8
tick,0x7ff86ea82704,64158620,0,0x0,8
tick,0x7ff86ea82704,64160761,0,0x0,8
tick,0x7ff86ea82704,64162449,0,0x0,8
tick,0x7ff86ea82704,64164483,0,0x0,8
tick,0x7ff86ea82704,64166399,0,0x0,8
tick,0x7ff86ea82704,64168361,0,0x0,8
tick,0x7ff86ea82704,64170397,0,0x0,8
tick,0x7ff86ea82704,64172433,0,0x0,8
tick,0x7ff86ea82704,64174407,0,0x0,8
tick,0x7ff86ea82704,64176413,0,0x0,8
tick,0x7ff86ea82704,64178444,0,0x0,8
tick,0x7ff86ea82704,64180548,0,0x0,8
tick,0x7ff86ea82704,64182402,0,0x0,8
tick,0x7ff86ea82704,64184428,0,0x0,8
tick,0x7ff86ea82704,64186286,0,0x0,8
tick,0x7ff86ea82704,64188332,0,0x0,8
tick,0x7ff86ea82704,64190324,0,0x0,8
tick,0x7ff86ea82704,64192233,0,0x0,8
tick,0x7ff86ea82704,64194429,0,0x0,8
tick,0x7ff86ea82704,64196241,0,0x0,8
tick,0x7ff86ea82704,64198260,0,0x0,8
tick,0x7ff86ea82704,64200419,0,0x0,8
tick,0x7ff86ea82704,64202352,0,0x0,8
tick,0x7ff86ea82704,64204640,0,0x0,8
tick,0x7ff86ea82704,64206178,0,0x0,8
tick,0x7ff86ea82704,64208337,0,0x0,8
tick,0x7ff86ea82704,64210266,0,0x0,8
tick,0x7ff86ea82704,64212282,0,0x0,8
tick,0x7ff86ea82704,64214320,0,0x0,8
tick,0x7ff86ea82704,64216234,0,0x0,8
tick,0x7ff86ea82704,64218253,0,0x0,8
tick,0x7ff86ea82704,64220216,0,0x0,8
tick,0x7ff86ea82704,64222230,0,0x0,8
tick,0x7ff86ea82704,64224133,0,0x0,8
tick,0x7ff86ea82704,64226139,0,0x0,8
tick,0x7ff86ea82704,64228325,0,0x0,8
tick,0x7ff86ea82704,64230127,0,0x0,8
tick,0x7ff86ea82704,64232180,0,0x0,8
tick,0x7ff86ea82704,64234132,0,0x0,8
tick,0x7ff86ea82704,64236136,0,0x0,8
tick,0x7ff86ea82704,64238128,0,0x0,8
tick,0x7ff86ea82704,64240171,0,0x0,8
tick,0x7ff86ea82704,64242149,0,0x0,8
tick,0x7ff86ea82704,64244263,0,0x0,8
tick,0x7ff86ea82704,64246128,0,0x0,8
tick,0x7ff86ea82704,64248116,0,0x0,8
tick,0x7ff86ea82704,64250170,0,0x0,8
tick,0x7ff86ea82704,64252135,0,0x0,8
tick,0x7ff86ea82704,64254137,0,0x0,8
tick,0x7ff86ea82704,64256082,0,0x0,8
tick,0x7ff86ea82704,64258183,0,0x0,8
tick,0x7ff86ea82704,64260114,0,0x0,8
tick,0x7ff86ea82704,64262163,0,0x0,8
tick,0x7ff86ea82704,64264187,0,0x0,8
tick,0x7ff86ea82704,64266139,0,0x0,8
tick,0x7ff86ea82704,64268170,0,0x0,8
tick,0x7ff86ea82704,64270044,0,0x0,8
tick,0x7ff86ea82704,64272174,0,0x0,8
tick,0x7ff86ea82704,64274080,0,0x0,8
tick,0x7ff86ea82704,64276193,0,0x0,8
tick,0x7ff86ea82704,64278033,0,0x0,8
tick,0x7ff86ea82704,64280073,0,0x0,8
tick,0x7ff86ea82704,64281973,0,0x0,8
tick,0x7ff86ea82704,64284108,0,0x0,8
tick,0x7ff86ea82704,64286082,0,0x0,8
tick,0x7ff86ea82704,64288053,0,0x0,8
tick,0x7ff86ea82704,64289994,0,0x0,8
tick,0x7ff86ea82704,64292061,0,0x0,8
tick,0x7ff86ea82704,64294000,0,0x0,8
tick,0x7ff86ea82704,64295929,0,0x0,8
tick,0x7ff86ea82704,64298069,0,0x0,8
tick,0x7ff86ea82704,64299967,0,0x0,8
tick,0x7ff86ea82704,64302121,0,0x0,8
tick,0x7ff86ea82704,64303948,0,0x0,8
tick,0x7ff86ea82704,64306102,0,0x0,8
tick,0x7ff86ea82704,64307932,0,0x0,8
tick,0x7ff86ea82704,64310071,0,0x0,8
tick,0x7ff86ea82704,64311938,0,0x0,8
tick,0x7ff86ea82704,64314091,0,0x0,8
tick,0x7ff86ea82704,64315967,0,0x0,8
tick,0x7ff86ea82704,64318070,0,0x0,8
tick,0x7ff86ea82704,64319970,0,0x0,8
tick,0x7ff86ea82704,64321908,0,0x0,8
tick,0x7ff86ea82704,64323942,0,0x0,8
tick,0x7ff86ea82704,64326066,0,0x0,8
tick,0x7ff86ea82704,64327858,0,0x0,8
tick,0x7ff86ea82704,64329967,0,0x0,8
tick,0x7ff86ea82704,64331983,0,0x0,8
tick,0x7ff86ea82704,64333976,0,0x0,8
tick,0x7ff86ea82704,64335948,0,0x0,8
tick,0x7ff86ea82704,64338084,0,0x0,8
tick,0x7ff86ea82704,64339943,0,0x0,8
tick,0x7ff86ea82704,64341998,0,0x0,8
tick,0x7ff86ea82704,64344095,0,0x0,8
tick,0x7ff86ea82704,64345987,0,0x0,8
tick,0x7ff86ea82704,64347915,0,0x0,8
tick,0x7ff86ea82704,64349810,0,0x0,8
tick,0x7ff86ea82704,64352046,0,0x0,8
tick,0x7ff86ea82704,64353783,0,0x0,8
tick,0x7ff86ea82704,64355839,0,0x0,8
tick,0x7ff86ea82704,64357850,0,0x0,8
tick,0x7ff86ea82704,64359844,0,0x0,8
tick,0x7ff86ea82704,64361848,0,0x0,8
tick,0x7ff86ea82704,64363846,0,0x0,8
tick,0x7ff86ea82704,64366056,0,0x0,8
tick,0x7ff86ea82704,64368000,0,0x0,8
tick,0x7ff86ea82704,64369802,0,0x0,8
tick,0x7ff86ea82704,64371951,0,0x0,8
tick,0x7ff86ea82704,64373778,0,0x0,8
tick,0x7ff86ea82704,64375992,0,0x0,8
tick,0x7ff86ea82704,64377849,0,0x0,8
tick,0x7ff86ea82704,64379806,0,0x0,8
tick,0x7ff86ea82704,64381901,0,0x0,8
tick,0x7ff86ea82704,64383763,0,0x0,8
tick,0x7ff86ea82704,64385733,0,0x0,8
tick,0x7ff86ea82704,64387746,0,0x0,8
tick,0x7ff86ea82704,64389803,0,0x0,8
tick,0x7ff86ea82704,64391679,0,0x0,8
tick,0x7ff86ea82704,64393956,0,0x0,8
tick,0x7ff86ea82704,64395793,0,0x0,8
tick,0x7ff86ea82704,64397872,0,0x0,8
tick,0x7ff86ea82704,64399653,0,0x0,8
tick,0x7ff86ea82704,64401791,0,0x0,8
tick,0x7ff86ea82704,64403713,0,0x0,8
tick,0x7ff86ea82704,64405854,0,0x0,8
tick,0x7ff86ea82704,64407657,0,0x0,8
tick,0x7ff86ea82704,64409755,0,0x0,8
tick,0x7ff86ea82704,64411699,0,0x0,8
tick,0x7ff86ea82704,64413799,0,0x0,8
tick,0x7ff86ea82704,64415704,0,0x0,8
tick,0x7ff86ea82704,64417679,0,0x0,8
tick,0x7ff86ea82704,64419687,0,0x0,8
tick,0x7ff86ea82704,64421785,0,0x0,8
tick,0x7ff86ea82704,64423682,0,0x0,8
tick,0x7ff86ea82704,64425747,0,0x0,8
tick,0x7ff86ea82704,64427636,0,0x0,8
tick,0x7ff86ea82704,64429825,0,0x0,8
tick,0x7ff86ea82704,64431646,0,0x0,8
tick,0x7ff86ea82704,64433739,0,0x0,8
tick,0x7ff86ea82704,64435608,0,0x0,8
tick,0x7ff86ea82704,64437705,0,0x0,8
tick,0x7ff86ea82704,64439691,0,0x0,8
tick,0x7ff86ea82704,64441629,0,0x0,8
tick,0x7ff86ea82704,64443559,0,0x0,8
tick,0x7ff86ea82704,64445663,0,0x0,8
tick,0x7ff86ea82704,64447641,0,0x0,8
tick,0x7ff86ea82704,64449599,0,0x0,8
tick,0x7ff86ea82704,64451618,0,0x0,8
tick,0x7ff86ea82704,64453634,0,0x0,8
tick,0x7ff86ea82704,64455530,0,0x0,8
tick,0x7ff86ea82704,64457664,0,0x0,8
tick,0x7ff86ea82704,64459518,0,0x0,8
tick,0x7ff86ea82704,64461592,0,0x0,8
tick,0x7ff86ea82704,64463483,0,0x0,8
tick,0x7ff86ea82704,64465673,0,0x0,8
tick,0x7ff86ea82704,64467658,0,0x0,8
tick,0x7ff86ea82704,64469610,0,0x0,8
tick,0x7ff86ea82704,64471571,0,0x0,8
tick,0x7ff86ea82704,64473523,0,0x0,8
tick,0x7ff86ea82704,64475640,0,0x0,8
tick,0x7ff86ea82704,64477602,0,0x0,8
tick,0x7ff86ea82704,64479543,0,0x0,8
tick,0x7ff86ea82704,64481503,0,0x0,8
tick,0x7ff86ea82704,64483598,0,0x0,8
tick,0x7ff86ea82704,64485491,0,0x0,8
tick,0x7ff86ea82704,64487467,0,0x0,8
tick,0x7ff86ea82704,64489545,0,0x0,8
tick,0x7ff86ea82704,64491520,0,0x0,8
tick,0x7ff86ea82704,64493514,0,0x0,8
tick,0x7ff86ea82704,64495461,0,0x0,8
tick,0x7ff86ea82704,64497589,0,0x0,8
tick,0x7ff86ea82704,64499468,0,0x0,8
tick,0x7ff86ea82704,64501506,0,0x0,8
tick,0x7ff86ea82704,64503472,0,0x0,8
tick,0x7ff86ea82704,64505510,0,0x0,8
tick,0x7ff86ea82704,64507566,0,0x0,8
tick,0x7ff86ea82704,64509494,0,0x0,8
tick,0x7ff86ea82704,64511483,0,0x0,8
tick,0x7ff86ea82704,64513440,0,0x0,8
tick,0x7ff86ea82704,64515479,0,0x0,8
tick,0x7ff86ea82704,64517448,0,0x0,8
tick,0x7ff86ea82704,64519486,0,0x0,8
tick,0x7ff86ea82704,64521480,0,0x0,8
tick,0x7ff86ea82704,64523500,0,0x0,8
tick,0x7ff86ea82704,64525362,0,0x0,8
tick,0x7ff86ea82704,64527354,0,0x0,8
tick,0x7ff86ea82704,64529381,0,0x0,8
tick,0x7ff86ea82704,64531339,0,0x0,8
tick,0x7ff86ea82704,64533452,0,0x0,8
tick,0x7ff86ea82704,64535319,0,0x0,8
tick,0x7ff86ea82704,64537303,0,0x0,8
tick,0x7ff86ea82704,64539400,0,0x0,8
tick,0x7ff86ea82704,64541310,0,0x0,8
tick,0x7ff86ea82704,64543405,0,0x0,8
tick,0x7ff86ea82704,64545289,0,0x0,8
tick,0x7ff86ea82704,64547329,0,0x0,8
tick,0x7ff86ea82704,64549321,0,0x0,8
tick,0x7ff86ea82704,64551237,0,0x0,8
tick,0x7ff86ea82704,64553301,0,0x0,8
tick,0x7ff86ea82704,64555377,0,0x0,8
tick,0x7ff86ea82704,64557345,0,0x0,8
tick,0x7ff86ea82704,64559333,0,0x0,8
tick,0x7ff86ea82704,64561306,0,0x0,8
tick,0x7ff86ea82704,64563348,0,0x0,8
tick,0x7ff86ea82704,64565164,0,0x0,8
tick,0x7ff86ea82704,64567318,0,0x0,8
tick,0x7ff86ea82704,64569192,0,0x0,8
tick,0x7ff86ea82704,64571318,0,0x0,8
tick,0x7ff86ea82704,64573230,0,0x0,8
tick,0x7ff86ea82704,64575293,0,0x0,8
tick,0x7ff86ea82704,64577291,0,0x0,8
tick,0x7ff86ea82704,64579287,0,0x0,8
tick,0x7ff86ea82704,64581240,0,0x0,8
tick,0x7ff86ea82704,64583268,0,0x0,8
tick,0x7ff86ea82704,64585241,0,0x0,8
tick,0x7ff86ea82704,64587235,0,0x0,8
tick,0x7ff86ea82704,64589163,0,0x0,8
tick,0x7ff86ea82704,64591296,0,0x0,8
tick,0x7ff86ea82704,64593250,0,0x0,8
tick,0x7ff86ea82704,64595283,0,0x0,8
tick,0x7ff86ea82704,64597105,0,0x0,8
tick,0x7ff86ea82704,64599248,0,0x0,8
tick,0x7ff86ea82704,64601159,0,0x0,8
tick,0x7ff86ea82704,64603107,0,0x0,8
tick,0x7ff86ea82704,64605159,0,0x0,8
tick,0x7ff86ea82704,64607185,0,0x0,8
tick,0x7ff86ea82704,64609166,0,0x0,8
tick,0x7ff86ea82704,64611101,0,0x0,8
tick,0x7ff86ea82704,64613248,0,0x0,8
tick,0x7ff86ea82704,64615149,0,0x0,8
tick,0x7ff86ea82704,64617234,0,0x0,8
tick,0x7ff86ea82704,64619159,0,0x0,8
tick,0x7ff86ea82704,64621211,0,0x0,8
tick,0x7ff86ea82704,64623179,0,0x0,8
tick,0x7ff86ea82704,64625213,0,0x0,8
tick,0x7ff86ea82704,64627203,0,0x0,8
tick,0x7ff86ea82704,64629447,0,0x0,8
tick,0x7ff86ea82704,64631198,0,0x0,8
tick,0x7ff86ea82704,64633270,0,0x0,8
tick,0x7ff86ea82704,64635073,0,0x0,8
tick,0x7ff86ea82704,64637177,0,0x0,8
tick,0x7ff86ea82704,64639044,0,0x0,8
tick,0x7ff86ea82704,64641310,0,0x0,8
tick,0x7ff86ea82704,64643127,0,0x0,8
tick,0x7ff86ea82704,64645256,0,0x0,8
tick,0x7ff86ea82704,64647128,0,0x0,8
tick,0x7ff86ea82704,64649112,0,0x0,8
tick,0x7ff86ea82704,64651243,0,0x0,8
tick,0x7ff86ea82704,64653100,0,0x0,8
tick,0x7ff86ea82704,64655263,0,0x0,8
tick,0x7ff86ea82704,64657184,0,0x0,8
tick,0x7ff86ea82704,64659124,0,0x0,8
tick,0x7ff86ea82704,64661026,0,0x0,8
tick,0x7ff86ea82704,64662974,0,0x0,8
tick,0x7ff86ea82704,64666920,0,0x0,8
tick,0x7ff86ea82704,64669574,0,0x0,8
tick,0x7ff86ea82704,64671587,0,0x0,8
tick,0x7ff86ea82704,64673042,0,0x0,8
tick,0x7ff86ea82704,64675323,0,0x0,8
tick,0x7ff86ea82704,64677152,0,0x0,8
tick,0x7ff86ea82704,64679210,0,0x0,8
tick,0x7ff86ea82704,64681132,0,0x0,8
tick,0x7ff86ea82704,64683322,0,0x0,8
tick,0x7ff86ea82704,64685168,0,0x0,8
tick,0x7ff86ea82704,64687148,0,0x0,8
tick,0x7ff86ea82704,64689079,0,0x0,8
tick,0x7ff86ea82704,64691347,0,0x0,8
tick,0x7ff86ea82704,64693152,0,0x0,8
tick,0x7ff86ea82704,64695101,0,0x0,8
tick,0x7ff86ea82704,64697095,0,0x0,8
tick,0x7ff86ea82704,64699034,0,0x0,8
tick,0x7ff86ea82704,64701173,0,0x0,8
tick,0x7ff86ea82704,64703102,0,0x0,8
tick,0x7ff86ea82704,64705190,0,0x0,8
tick,0x7ff86ea82704,64707126,0,0x0,8
tick,0x7ff86ea82704,64708987,0,0x0,8
tick,0x7ff86ea82704,64711041,0,0x0,8
tick,0x7ff86ea82704,64712959,0,0x0,8
tick,0x7ff86ea82704,64715103,0,0x0,8
tick,0x7ff86ea82704,64716927,0,0x0,8
tick,0x7ff86ea82704,64719024,0,0x0,8
tick,0x7ff86ea82704,64721044,0,0x0,8
tick,0x7ff86ea82704,64723116,0,0x0,8
tick,0x7ff86ea82704,64725024,0,0x0,8
tick,0x7ff86ea82704,64727069,0,0x0,8
tick,0x7ff86ea82704,64728993,0,0x0,8
tick,0x7ff86ea82704,64731015,0,0x0,8
tick,0x7ff86ea82704,64732974,0,0x0,8
tick,0x7ff86ea82704,64735042,0,0x0,8
tick,0x7ff86ea82704,64736982,0,0x0,8
tick,0x7ff86ea82704,64738969,0,0x0,8
tick,0x7ff86ea82704,64740972,0,0x0,8
tick,0x7ff86ea82704,64742933,0,0x0,8
tick,0x7ff86ea82704,64745029,0,0x0,8
tick,0x7ff86ea82704,64747103,0,0x0,8
tick,0x7ff86ea82704,64749018,0,0x0,8
tick,0x7ff86ea82704,64751030,0,0x0,8
tick,0x7ff86ea82704,64753039,0,0x0,8
tick,0x7ff86ea82704,64754920,0,0x0,8
tick,0x7ff86ea82704,64756965,0,0x0,8
tick,0x7ff86ea82704,64758916,0,0x0,8
tick,0x7ff86ea82704,64761269,0,0x0,8
tick,0x7ff86ea82704,64762981,0,0x0,8
tick,0x7ff86ea82704,64764998,0,0x0,8
tick,0x7ff86ea82704,64766899,0,0x0,8
tick,0x7ff86ea82704,64768766,0,0x0,8
tick,0x7ff86ea82704,64770945,0,0x0,8
tick,0x7ff86ea82704,64772837,0,0x0,8
tick,0x7ff86ea82704,64775118,0,0x0,8
tick,0x7ff86ea82704,64776786,0,0x0,8
tick,0x7ff86ea82704,64778952,0,0x0,8
tick,0x7ff86ea82704,64780834,0,0x0,8
tick,0x7ff86ea82704,64783038,0,0x0,8
tick,0x7ff86ea82704,64784841,0,0x0,8
tick,0x7ff86ea82704,64786873,0,0x0,8
tick,0x7ff86ea82704,64788959,0,0x0,8
tick,0x7ff86ea82704,64790850,0,0x0,8
tick,0x7ff86ea82704,64792917,0,0x0,8
tick,0x7ff86ea82704,64794778,0,0x0,8
tick,0x7ff86ea82704,64796863,0,0x0,8
tick,0x7ff86ea82704,64798847,0,0x0,8
tick,0x7ff86ea82704,64800908,0,0x0,8
tick,0x7ff86ea82704,64802783,0,0x0,8
tick,0x7ff86ea82704,64804831,0,0x0,8
tick,0x7ff86ea82704,64806853,0,0x0,8
tick,0x7ff86ea82704,64808829,0,0x0,8
tick,0x7ff86ea82704,64810815,0,0x0,8
tick,0x7ff86ea82704,64812899,0,0x0,8
tick,0x7ff86ea82704,64814711,0,0x0,8
tick,0x7ff86ea82704,64816817,0,0x0,8
tick,0x7ff86ea82704,64818824,0,0x0,8
tick,0x7ff86ea82704,64821082,0,0x0,8
tick,0x7ff86ea82704,64822818,0,0x0,8
tick,0x7ff86ea82704,64824933,0,0x0,8
tick,0x7ff86ea82704,64827139,0,0x0,8
tick,0x7ff86ea82704,64828992,0,0x0,8
tick,0x7ff86ea82704,64830836,0,0x0,8
tick,0x7ff86ea82704,64832900,0,0x0,8
tick,0x7ff86ea82704,64834928,0,0x0,8
tick,0x7ff86ea82704,64837004,0,0x0,8
tick,0x7ff86ea82704,64838686,0,0x0,8
tick,0x7ff86ea82704,64840616,0,0x0,8
tick,0x7ff86ea82704,64842648,0,0x0,8
tick,0x7ff86ea82704,64845230,0,0x0,8
tick,0x7ff86ea82704,64847044,0,0x0,8
tick,0x7ff86ea82704,64848898,0,0x0,8
tick,0x7ff86ea82704,64850579,0,0x0,8
tick,0x7ff86ea82704,64852675,0,0x0,8
tick,0x7ff86ea82704,64854519,0,0x0,8
tick,0x7ff86ea82704,64856660,0,0x0,8
tick,0x7ff86ea82704,64858543,0,0x0,8
tick,0x7ff86ea82704,64860828,0,0x0,8
tick,0x7ff86ea82704,64864226,0,0x0,8
tick,0x7ff86ea82704,64865410,0,0x0,8
tick,0x7ff86ea82704,64867437,0,0x0,8
tick,0x7ff86ea82704,64869363,0,0x0,8
tick,0x7ff86ea82704,64871480,0,0x0,8
tick,0x7ff86ea82704,64873329,0,0x0,8
tick,0x7ff86ea82704,64875401,0,0x0,8
tick,0x7ff86ea82704,64877722,0,0x0,8
tick,0x7ff86ea82704,64879488,0,0x0,8
tick,0x7ff86ea82704,64881757,0,0x0,8
tick,0x7ff86ea82704,64883509,0,0x0,8
tick,0x7ff86ea82704,64885657,0,0x0,8
tick,0x7ff86ea82704,64887722,0,0x0,8
tick,0x7ff86ea82704,64889810,0,0x0,8
tick,0x7ff86ea82704,64891522,0,0x0,8
tick,0x7ff86ea82704,64893606,0,0x0,8
tick,0x7ff86ea82704,64895973,0,0x0,8
tick,0x7ff86ea82704,64898094,0,0x0,8
tick,0x7ff86ea82704,64899572,0,0x0,8
tick,0x7ff86ea82704,64901471,0,0x0,8
tick,0x7ff86ea82704,64903518,0,0x0,8
tick,0x7ff86ea82704,64905665,0,0x0,8
tick,0x7ff86ea82704,64907771,0,0x0,8
tick,0x7ff86ea82704,64909389,0,0x0,8
tick,0x7ff86ea82704,64914232,0,0x0,8
tick,0x7ff86ea82704,64916274,0,0x0,8
tick,0x7ff86ea82704,64918395,0,0x0,8
tick,0x7ff86ea82704,64920263,0,0x0,8
tick,0x7ff86ea82704,64922272,0,0x0,8
tick,0x7ff86ea82704,64924280,0,0x0,8
tick,0x7ff86ea82704,64926244,0,0x0,8
tick,0x7ff86ea82704,64928764,0,0x0,8
tick,0x7ff86ea82704,64930931,0,0x0,8
tick,0x7ff86ea82704,64932216,0,0x0,8
tick,0x7ff86ea82704,64934232,0,0x0,8
tick,0x7ff86ea82704,64936304,0,0x0,8
tick,0x7ff86ea82704,64938313,0,0x0,8
tick,0x7ff86ea82704,64940182,0,0x0,8
tick,0x7ff86ea82704,64942177,0,0x0,8
tick,0x7ff86ea82704,64944519,0,0x0,8
tick,0x7ff86ea82704,64946464,0,0x0,8
tick,0x7ff86ea82704,64948213,0,0x0,8
tick,0x7ff86ea82704,64950340,0,0x0,8
tick,0x7ff86ea82704,64952284,0,0x0,8
tick,0x7ff86ea82704,64954157,0,0x0,8
tick,0x7ff86ea82704,64956290,0,0x0,8
tick,0x7ff86ea82704,64958178,0,0x0,8
tick,0x7ff86ea82704,64960315,0,0x0,8
tick,0x7ff86ea82704,64962479,0,0x0,8
tick,0x7ff86ea82704,64964514,0,0x0,8
tick,0x7ff86ea82704,64966207,0,0x0,8
tick,0x7ff86ea82704,64968140,0,0x0,8
tick,0x7ff86ea82704,64970161,0,0x0,8
tick,0x7ff86ea82704,64972261,0,0x0,8
tick,0x7ff86ea82704,64974202,0,0x0,8
tick,0x7ff86ea82704,64976158,0,0x0,8
tick,0x7ff86ea82704,64978635,0,0x0,8
tick,0x7ff86ea82704,64980667,0,0x0,8
tick,0x7ff86ea82704,64982209,0,0x0,8
tick,0x7ff86ea82704,64984188,0,0x0,8
tick,0x7ff86ea82704,64986128,0,0x0,8
tick,0x7ff86ea82704,64988237,0,0x0,8
tick,0x7ff86ea82704,64990166,0,0x0,8
tick,0x7ff86ea82704,64992144,0,0x0,8
tick,0x7ff86ea82704,64995659,0,0x0,8
tick,0x7ff86ea82704,64997631,0,0x0,8
tick,0x7ff86ea82704,64999333,0,0x0,8
tick,0x7ff86ea82704,65001268,0,0x0,8
tick,0x7ff86ea82704,65003306,0,0x0,8
tick,0x7ff86ea82704,65005194,0,0x0,8
tick,0x7ff86ea82704,65007337,0,0x0,8
tick,0x7ff86ea82704,65009281,0,0x0,8
tick,0x7ff86ea82704,65012934,0,0x0,8
tick,0x7ff86ea82704,65014611,0,0x0,8
tick,0x7ff86ea82704,65016022,0,0x0,8
tick,0x7ff86ea82704,65018209,0,0x0,8
tick,0x7ff86ea82704,65020245,0,0x0,8
tick,0x7ff86ea82704,65022055,0,0x0,8
tick,0x7ff86ea82704,65024039,0,0x0,8
tick,0x7ff86ea82704,65026090,0,0x0,8
tick,0x7ff86ea82704,65028387,0,0x0,8
tick,0x7ff86ea82704,65030725,0,0x0,8
tick,0x7ff86ea82704,65032104,0,0x0,8
tick,0x7ff86ea82704,65034035,0,0x0,8
tick,0x7ff86ea82704,65036097,0,0x0,8
tick,0x7ff86ea82704,65038021,0,0x0,8
tick,0x7ff86ea82704,65040077,0,0x0,8
tick,0x7ff86ea82704,65042102,0,0x0,8
tick,0x7ff86ea82704,65046647,0,0x0,8
tick,0x7ff86ea82704,65048238,0,0x0,8
tick,0x7ff86ea82704,65050117,0,0x0,8
tick,0x7ff86ea82704,65052299,0,0x0,8
tick,0x7ff86ea82704,65054112,0,0x0,8
tick,0x7ff86ea82704,65056117,0,0x0,8
tick,0x7ff86ea82704,65058200,0,0x0,8
tick,0x7ff86ea82704,65060333,0,0x0,8
tick,0x7ff86ea82704,65063039,0,0x0,8
tick,0x7ff86ea82704,65065019,0,0x0,8
tick,0x7ff86ea82704,65066870,0,0x0,8
tick,0x7ff86ea82704,65069116,0,0x0,8
tick,0x7ff86ea82704,65071135,0,0x0,8
tick,0x7ff86ea82704,65072925,0,0x0,8
tick,0x7ff86ea82704,65074952,0,0x0,8
tick,0x7ff86ea82704,65077250,0,0x0,8
tick,0x7ff86ea82704,65079020,0,0x0,8
tick,0x7ff86ea82704,65081111,0,0x0,8
tick,0x7ff86ea82704,65082905,0,0x0,8
tick,0x7ff86ea82704,65085182,0,0x0,8
tick,0x7ff86ea82704,65086900,0,0x0,8
tick,0x7ff86ea82704,65088933,0,0x0,8
tick,0x7ff86ea82704,65090862,0,0x0,8
tick,0x7ff86ea82704,65092955,0,0x0,8
tick,0x7ff86ea82704,65095528,0,0x0,8
tick,0x7ff86ea82704,65097240,0,0x0,8
tick,0x7ff86ea82704,65098819,0,0x0,8
tick,0x7ff86ea82704,65101056,0,0x0,8
tick,0x7ff86ea82704,65102808,0,0x0,8
tick,0x7ff86ea82704,65104894,0,0x0,8
tick,0x7ff86ea82704,65106728,0,0x0,8
tick,0x7ff86ea82704,65108960,0,0x0,8
tick,0x7ff86ea82704,65111092,0,0x0,8
tick,0x7ff86ea82704,65112996,0,0x0,8
tick,0x7ff86ea82704,65114813,0,0x0,8
tick,0x7ff86ea82704,65117014,0,0x0,8
tick,0x7ff86ea82704,65119074,0,0x0,8
tick,0x7ff86ea82704,65120829,0,0x0,8
tick,0x7ff86ea82704,65122932,0,0x0,8
tick,0x7ff86ea82704,65124858,0,0x0,8
tick,0x7ff86ea82704,65127500,0,0x0,8
tick,0x7ff86ea82704,65130278,0,0x0,8
tick,0x7ff86ea82704,65131772,0,0x0,8
tick,0x7ff86ea82704,65133749,0,0x0,8
tick,0x7ff86ea82704,65135789,0,0x0,8
tick,0x7ff86ea82704,65137676,0,0x0,8
tick,0x7ff86ea82704,65139673,0,0x0,8
tick,0x7ff86ea82704,65141792,0,0x0,8
tick,0x7ff86ea82704,65143992,0,0x0,8
tick,0x7ff86ea82704,65146422,0,0x0,8
tick,0x7ff86ea82704,65147959,0,0x0,8
tick,0x7ff86ea82704,65150127,0,0x0,8
tick,0x7ff86ea82704,65151891,0,0x0,8
tick,0x7ff86ea82704,65154186,0,0x0,8
tick,0x7ff86ea82704,65155728,0,0x0,8
tick,0x7ff86ea82704,65157899,0,0x0,8
tick,0x7ff86ea82704,65159760,0,0x0,8
tick,0x7ff86ea82704,65163446,0,0x0,8
tick,0x7ff86ea82704,65164809,0,0x0,8
tick,0x7ff86ea82704,65167029,0,0x0,8
tick,0x7ff86ea82704,65168684,0,0x0,8
tick,0x7ff86ea82704,65171103,0,0x0,8
tick,0x7ff86ea82704,65172702,0,0x0,8
tick,0x7ff86ea82704,65175074,0,0x0,8
tick,0x7ff86ea82704,65176837,0,0x0,8
tick,0x7ff86ea82704,65179649,0,0x0,8
tick,0x7ff86ea82704,65180838,0,0x0,8
tick,0x7ff86ea82704,65182582,0,0x0,8
tick,0x7ff86ea82704,65184645,0,0x0,8
tick,0x7ff86ea82704,65186567,0,0x0,8
tick,0x7ff86ea82704,65188582,0,0x0,8
tick,0x7ff86ea82704,65190629,0,0x0,8
tick,0x7ff86ea82704,65192747,0,0x0,8
tick,0x7ff86ea82704,65196749,0,0x0,8
tick,0x7ff86ea82704,65197966,0,0x0,8
tick,0x7ff86ea82704,65199908,0,0x0,8
tick,0x7ff86ea82704,65201864,0,0x0,8
tick,0x7ff86ea82704,65203760,0,0x0,8
tick,0x7ff86ea82704,65205740,0,0x0,8
tick,0x7ff86ea82704,65207675,0,0x0,8
tick,0x7ff86ea82704,65209666,0,0x0,8
tick,0x7ff86ea82704,65212287,0,0x0,8
tick,0x7ff86ea82704,65214005,0,0x0,8
tick,0x7ff86ea82704,65215639,0,0x0,8
tick,0x7ff86ea82704,65217589,0,0x0,8
tick,0x7ff86ea82704,65219630,0,0x0,8
tick,0x7ff86ea82704,65221593,0,0x0,8
tick,0x7ff86ea82704,65223607,0,0x0,8
tick,0x7ff86ea82704,65225581,0,0x0,8
tick,0x7ff86ea82704,65228393,0,0x0,8
tick,0x7ff86ea82704,65230992,0,0x0,8
tick,0x7ff86ea82704,65232335,0,0x0,8
tick,0x7ff86ea82704,65234338,0,0x0,8
tick,0x7ff86ea82704,65236348,0,0x0,8
tick,0x7ff86ea82704,65238471,0,0x0,8
tick,0x7ff86ea82704,65240335,0,0x0,8
tick,0x7ff86ea82704,65242308,0,0x0,8
tick,0x7ff86ea82704,65244622,0,0x0,8
tick,0x7ff86ea82704,65246445,0,0x0,8
tick,0x7ff86ea82704,65248442,0,0x0,8
tick,0x7ff86ea82704,65250320,0,0x0,8
tick,0x7ff86ea82704,65252378,0,0x0,8
tick,0x7ff86ea82704,65254332,0,0x0,8
tick,0x7ff86ea82704,65256340,0,0x0,8
tick,0x7ff86ea82704,65258285,0,0x0,8
tick,0x7ff86ea82704,65260439,0,0x0,8
tick,0x7ff86ea82704,65262274,0,0x0,8
tick,0x7ff86ea82704,65264322,0,0x0,8
tick,0x7ff86ea82704,65266275,0,0x0,8
tick,0x7ff86ea82704,65268259,0,0x0,8
tick,0x7ff86ea82704,65270275,0,0x0,8
tick,0x7ff86ea82704,65272281,0,0x0,8
tick,0x7ff86ea82704,65274241,0,0x0,8
tick,0x7ff86ea82704,65276249,0,0x0,8
tick,0x7ff86ea82704,65278225,0,0x0,8
tick,0x7ff86ea82704,65280264,0,0x0,8
tick,0x7ff86ea82704,65282216,0,0x0,8
tick,0x7ff86ea82704,65284201,0,0x0,8
tick,0x7ff86ea82704,65286355,0,0x0,8
tick,0x7ff86ea82704,65288238,0,0x0,8
tick,0x7ff86ea82704,65290177,0,0x0,8
tick,0x7ff86ea82704,65292402,0,0x0,8
tick,0x7ff86ea82704,65294220,0,0x0,8
tick,0x7ff86ea82704,65296212,0,0x0,8
tick,0x7ff86ea82704,65298207,0,0x0,8
tick,0x7ff86ea82704,65300259,0,0x0,8
tick,0x7ff86ea82704,65302273,0,0x0,8
tick,0x7ff86ea82704,65304217,0,0x0,8
tick,0x7ff86ea82704,65306159,0,0x0,8
tick,0x7ff86ea82704,65308223,0,0x0,8
tick,0x7ff86ea82704,65310118,0,0x0,8
tick,0x7ff86ea82704,65312142,0,0x0,8
tick,0x7ff86ea82704,65314157,0,0x0,8
tick,0x7ff86ea82704,65316106,0,0x0,8
tick,0x7ff86ea82704,65318185,0,0x0,8
tick,0x7ff86ea82704,65320118,0,0x0,8
tick,0x7ff86ea82704,65322126,0,0x0,8
tick,0x7ff86ea82704,65324145,0,0x0,8
tick,0x7ff86ea82704,65326103,0,0x0,8
tick,0x7ff86ea82704,65328149,0,0x0,8
tick,0x7ff86ea82704,65330079,0,0x0,8
tick,0x7ff86ea82704,65332130,0,0x0,8
tick,0x7ff86ea82704,65334080,0,0x0,8
tick,0x7ff86ea82704,65336202,0,0x0,8
tick,0x7ff86ea82704,65338123,0,0x0,8
tick,0x7ff86ea82704,65340194,0,0x0,8
tick,0x7ff86ea82704,65342069,0,0x0,8
tick,0x7ff86ea82704,65344074,0,0x0,8
tick,0x7ff86ea82704,65346072,0,0x0,8
tick,0x7ff86ea82704,65348111,0,0x0,8
tick,0x7ff86ea82704,65350025,0,0x0,8
tick,0x7ff86ea82704,65352090,0,0x0,8
tick,0x7ff86ea82704,65354123,0,0x0,8
tick,0x7ff86ea82704,65356166,0,0x0,8
tick,0x7ff86ea82704,65358143,0,0x0,8
tick,0x7ff86ea82704,65360041,0,0x0,8
tick,0x7ff86ea82704,65362127,0,0x0,8
tick,0x7ff86ea82704,65364217,0,0x0,8
tick,0x7ff86ea82704,65366805,0,0x0,8
tick,0x7ff86ea82704,65368086,0,0x0,8
tick,0x7ff86ea82704,65370516,0,0x0,8
tick,0x7ff86ea82704,65372397,0,0x0,8
tick,0x7ff86ea82704,65374474,0,0x0,8
tick,0x7ff86ea82704,65376287,0,0x0,8
tick,0x7ff86ea82704,65379531,0,0x0,8
tick,0x7ff86ea82704,65381367,0,0x0,8
tick,0x7ff86ea82704,65383400,0,0x0,8
tick,0x7ff86ea82704,65385304,0,0x0,8
tick,0x7ff86ea82704,65387570,0,0x0,8
tick,0x7ff86ea82704,65389116,0,0x0,8
tick,0x7ff86ea82704,65391194,0,0x0,8
tick,0x7ff86ea82704,65393063,0,0x0,8
tick,0x7ff86ea82704,65395678,0,0x0,8
tick,0x7ff86ea82704,65397364,0,0x0,8
tick,0x7ff86ea82704,65399343,0,0x0,8
tick,0x7ff86ea82704,65401269,0,0x0,8
tick,0x7ff86ea82704,65403273,0,0x0,8
tick,0x7ff86ea82704,65405341,0,0x0,8
tick,0x7ff86ea82704,65407293,0,0x0,8
tick,0x7ff86ea82704,65409516,0,0x0,8
tick,0x7ff86ea82704,65411541,0,0x0,8
tick,0x7ff86ea82704,65413301,0,0x0,8
tick,0x7ff86ea82704,65415447,0,0x0,8
tick,0x7ff86ea82704,65417066,0,0x0,8
tick,0x7ff86ea82704,65419172,0,0x0,8
tick,0x7ff86ea82704,65421018,0,0x0,8
tick,0x7ff86ea82704,65423294,0,0x0,8
tick,0x7ff86ea82704,65425107,0,0x0,8
tick,0x7ff86ea82704,65427743,0,0x0,8
tick,0x7ff86ea82704,65429112,0,0x0,8
tick,0x7ff86ea82704,65431719,0,0x0,8
tick,0x7ff86ea82704,65433028,0,0x0,8
tick,0x7ff86ea82704,65435167,0,0x0,8
tick,0x7ff86ea82704,65437183,0,0x0,8
tick,0x7ff86ea82704,65438965,0,0x0,8
tick,0x7ff86ea82704,65440989,0,0x0,8
tick,0x7ff86ea82704,65443099,0,0x0,8
tick,0x7ff86ea82704,65445415,0,0x0,8
tick,0x7ff86ea82704,65447149,0,0x0,8
tick,0x7ff86ea82704,65448955,0,0x0,8
tick,0x7ff86ea82704,65450990,0,0x0,8
tick,0x7ff86ea82704,65452888,0,0x0,8
tick,0x7ff86ea82704,65455021,0,0x0,8
tick,0x7ff86ea82704,65456916,0,0x0,8
tick,0x7ff86ea82704,65459037,0,0x0,8
tick,0x7ff86ea82704,65461378,0,0x0,8
tick,0x7ff86ea82704,65463209,0,0x0,8
tick,0x7ff86ea82704,65464989,0,0x0,8
tick,0x7ff86ea82704,65466950,0,0x0,8
tick,0x7ff86ea82704,65468915,0,0x0,8
tick,0x7ff86ea82704,65471151,0,0x0,8
tick,0x7ff86ea82704,65472856,0,0x0,8
tick,0x7ff86ea82704,65474938,0,0x0,8
tick,0x7ff86ea82704,65477315,0,0x0,8
tick,0x7ff86ea82704,65479124,0,0x0,8
tick,0x7ff86ea82704,65480937,0,0x0,8
tick,0x7ff86ea82704,65483020,0,0x0,8
tick,0x7ff86ea82704,65485015,0,0x0,8
tick,0x7ff86ea82704,65486982,0,0x0,8
tick,0x7ff86ea82704,65488931,0,0x0,8
tick,0x7ff86ea82704,65491005,0,0x0,8
tick,0x7ff86ea82704,65493036,0,0x0,8
tick,0x7ff86ea82704,65495486,0,0x0,8
tick,0x7ff86ea82704,65496800,0,0x0,8
tick,0x7ff86ea82704,65498916,0,0x0,8
tick,0x7ff86ea82704,65500995,0,0x0,8
tick,0x7ff86ea82704,65502831,0,0x0,8
tick,0x7ff86ea82704,65504922,0,0x0,8
tick,0x7ff86ea82704,65507089,0,0x0,8
tick,0x7ff86ea82704,65509052,0,0x0,8
tick,0x7ff86ea82704,65510907,0,0x0,8
tick,0x7ff86ea82704,65512815,0,0x0,8
tick,0x7ff86ea82704,65514674,0,0x0,8
tick,0x7ff86ea82704,65517040,0,0x0,8
tick,0x7ff86ea82704,65518993,0,0x0,8
tick,0x7ff86ea82704,65520702,0,0x0,8
tick,0x7ff86ea82704,65522655,0,0x0,8
tick,0x7ff86ea82704,65524947,0,0x0,8
tick,0x7ff86ea82704,65527157,0,0x0,8
tick,0x7ff86ea82704,65529230,0,0x0,8
tick,0x7ff86ea82704,65530826,0,0x0,8
tick,0x7ff86ea82704,65533153,0,0x0,8
tick,0x7ff86ea82704,65535204,0,0x0,8
tick,0x7ff86ea82704,65537035,0,0x0,8
tick,0x7ff86ea82704,65538997,0,0x0,8
tick,0x7ff86ea82704,65540747,0,0x0,8
tick,0x7ff86ea82704,65542836,0,0x0,8
tick,0x7ff86ea82704,65545721,0,0x0,8
tick,0x7ff86ea82704,65546799,0,0x0,8
tick,0x7ff86ea82704,65548739,0,0x0,8
tick,0x7ff86ea82704,65550770,0,0x0,8
tick,0x7ff86ea82704,65552603,0,0x0,8
tick,0x7ff86ea82704,65554900,0,0x0,8
tick,0x7ff86ea82704,65557030,0,0x0,8
tick,0x7ff86ea82704,65558771,0,0x0,8
tick,0x7ff86ea82704,65562030,0,0x0,8
tick,0x7ff86ea82704,65563096,0,0x0,8
tick,0x7ff86ea82704,65565757,0,0x0,8
tick,0x7ff86ea82704,65566845,0,0x0,8
tick,0x7ff86ea82704,65568698,0,0x0,8
tick,0x7ff86ea82704,65570667,0,0x0,8
tick,0x7ff86ea82704,65572736,0,0x0,8
tick,0x7ff86ea82704,65574637,0,0x0,8
tick,0x7ff86ea82704,65576743,0,0x0,8
tick,0x7ff86ea82704,65579074,0,0x0,8
tick,0x7ff86ea82704,65580527,0,0x0,8
tick,0x7ff86ea82704,65582661,0,0x0,8
tick,0x7ff86ea82704,65584644,0,0x0,8
tick,0x7ff86ea82704,65586694,0,0x0,8
tick,0x7ff86ea82704,65588501,0,0x0,8
tick,0x7ff86ea82704,65590583,0,0x0,8
tick,0x7ff86ea82704,65592597,0,0x0,8
tick,0x7ff86ea82704,65594642,0,0x0,8
tick,0x7ff86ea82704,65596640,0,0x0,8
tick,0x7ff86ea82704,65598624,0,0x0,8
tick,0x7ff86ea82704,65600567,0,0x0,8
tick,0x7ff86ea82704,65602606,0,0x0,8
tick,0x7ff86ea82704,65604576,0,0x0,8
tick,0x7ff86ea82704,65606562,0,0x0,8
tick,0x7ff86ea82704,65608560,0,0x0,8
tick,0x7ff86ea82704,65610571,0,0x0,8
tick,0x7ff86ea82704,65612618,0,0x0,8
tick,0x7ff86ea82704,65614431,0,0x0,8
tick,0x7ff86ea82704,65616620,0,0x0,8
tick,0x7ff86ea82704,65618506,0,0x0,8
tick,0x7ff86ea82704,65620642,0,0x0,8
tick,0x7ff86ea82704,65622513,0,0x0,8
tick,0x7ff86ea82704,65624409,0,0x0,8
tick,0x7ff86ea82704,65626558,0,0x0,8
tick,0x7ff86ea82704,65628689,0,0x0,8
tick,0x7ff86ea82704,65630579,0,0x0,8
tick,0x7ff86ea82704,65632646,0,0x0,8
tick,0x7ff86ea82704,65634508,0,0x0,8
tick,0x7ff86ea82704,65636559,0,0x0,8
tick,0x7ff86ea82704,65638458,0,0x0,8
tick,0x7ff86ea82704,65640579,0,0x0,8
tick,0x7ff86ea82704,65642592,0,0x0,8
tick,0x7ff86ea82704,65644625,0,0x0,8
tick,0x7ff86ea82704,65646439,0,0x0,8
tick,0x7ff86ea82704,65648535,0,0x0,8
tick,0x7ff86ea82704,65650424,0,0x0,8
tick,0x7ff86ea82704,65652519,0,0x0,8
tick,0x7ff86ea82704,65654467,0,0x0,8
tick,0x7ff86ea82704,65656450,0,0x0,8
tick,0x7ff86ea82704,65658558,0,0x0,8
tick,0x7ff86ea82704,65660375,0,0x0,8
tick,0x7ff86ea82704,65662385,0,0x0,8
tick,0x7ff86ea82704,65664423,0,0x0,8
tick,0x7ff86ea82704,65666455,0,0x0,8
tick,0x7ff86ea82704,65668561,0,0x0,8
tick,0x7ff86ea82704,65670374,0,0x0,8
tick,0x7ff86ea82704,65672434,0,0x0,8
tick,0x7ff86ea82704,65674295,0,0x0,8
tick,0x7ff86ea82704,65676359,0,0x0,8
tick,0x7ff86ea82704,65678362,0,0x0,8
tick,0x7ff86ea82704,65680354,0,0x0,8
tick,0x7ff86ea82704,65682359,0,0x0,8
tick,0x7ff86ea82704,65684350,0,0x0,8
tick,0x7ff86ea82704,65686419,0,0x0,8
tick,0x7ff86ea82704,65688395,0,0x0,8
tick,0x7ff86ea82704,65690441,0,0x0,8
tick,0x7ff86ea82704,65692314,0,0x0,8
tick,0x7ff86ea82704,65696361,0,0x0,8
tick,0x7ff86ea82704,65698536,0,0x0,8
tick,0x7ff86ea82704,65700306,0,0x0,8
tick,0x7ff86ea82704,65702618,0,0x0,8
tick,0x7ff86ea82704,65704361,0,0x0,8
tick,0x7ff86ea82704,65706454,0,0x0,8
tick,0x7ff86ea82704,65708405,0,0x0,8
tick,0x7ff86ea82704,65710823,0,0x0,8
tick,0x7ff86ea82704,65712380,0,0x0,8
tick,0x7ff86ea82704,65714504,0,0x0,8
tick,0x7ff86ea82704,65716351,0,0x0,8
tick,0x7ff86ea82704,65718440,0,0x0,8
tick,0x7ff86ea82704,65720420,0,0x0,8
tick,0x7ff86ea82704,65722370,0,0x0,8
tick,0x7ff86ea82704,65724416,0,0x0,8
tick,0x7ff86ea82704,65726478,0,0x0,8
tick,0x7ff86ea82704,65728346,0,0x0,8
tick,0x7ff86ea82704,65730455,0,0x0,8
tick,0x7ff86ea82704,65732261,0,0x0,8
tick,0x7ff86ea82704,65734438,0,0x0,8
tick,0x7ff86ea82704,65736281,0,0x0,8
tick,0x7ff86ea82704,65738441,0,0x0,8
tick,0x7ff86ea82704,65740260,0,0x0,8
tick,0x7ff86ea82704,65742511,0,0x0,8
tick,0x7ff86ea82704,65744418,0,0x0,8
tick,0x7ff86ea82704,65746422,0,0x0,8
tick,0x7ff86ea82704,65748337,0,0x0,8
tick,0x7ff86ea82704,65750360,0,0x0,8
tick,0x7ff86ea82704,65752255,0,0x0,8
tick,0x7ff86ea82704,65754318,0,0x0,8
tick,0x7ff86ea82704,65756189,0,0x0,8
tick,0x7ff86ea82704,65758222,0,0x0,8
tick,0x7ff86ea82704,65760339,0,0x0,8
tick,0x7ff86ea82704,65762217,0,0x0,8
tick,0x7ff86ea82704,65764347,0,0x0,8
tick,0x7ff86ea82704,65766171,0,0x0,8
tick,0x7ff86ea82704,65768357,0,0x0,8
tick,0x7ff86ea82704,65770336,0,0x0,8
tick,0x7ff86ea82704,65772304,0,0x0,8
tick,0x7ff86ea82704,65774160,0,0x0,8
tick,0x7ff86ea82704,65776365,0,0x0,8
tick,0x7ff86ea82704,65778413,0,0x0,8
tick,0x7ff86ea82704,65780283,0,0x0,8
tick,0x7ff86ea82704,65782210,0,0x0,8
tick,0x7ff86ea82704,65784253,0,0x0,8
tick,0x7ff86ea82704,65786187,0,0x0,8
tick,0x7ff86ea82704,65788236,0,0x0,8
tick,0x7ff86ea82704,65790178,0,0x0,8
tick,0x7ff86ea82704,65792099,0,0x0,8
tick,0x7ff86ea82704,65794144,0,0x0,8
tick,0x7ff86ea82704,65796110,0,0x0,8
tick,0x7ff86ea82704,65798124,0,0x0,8
tick,0x7ff86ea82704,65800636,0,0x0,8
tick,0x7ff86ea82704,65802334,0,0x0,8
tick,0x7ff86ea82704,65804190,0,0x0,8
tick,0x7ff86ea82704,65806109,0,0x0,8
tick,0x7ff86ea82704,65808185,0,0x0,8
tick,0x7ff86ea82704,65810188,0,0x0,8
tick,0x7ff86ea82704,65812239,0,0x0,8
tick,0x7ff86ea82704,65814086,0,0x0,8
tick,0x7ff86ea82704,65816234,0,0x0,8
tick,0x7ff86ea82704,65818040,0,0x0,8
tick,0x7ff86ea82704,65820210,0,0x0,8
tick,0x7ff86ea82704,65822106,0,0x0,8
tick,0x7ff86ea82704,65824185,0,0x0,8
tick,0x7ff86ea82704,65825985,0,0x0,8
tick,0x7ff86ea82704,65828224,0,0x0,8
tick,0x7ff86ea82704,65830021,0,0x0,8
tick,0x7ff86ea82704,65832020,0,0x0,8
tick,0x7ff86ea82704,65834034,0,0x0,8
tick,0x7ff86ea82704,65836057,0,0x0,8
tick,0x7ff86ea82704,65838001,0,0x0,8
tick,0x7ff86ea82704,65840235,0,0x0,8
tick,0x7ff86ea82704,65842000,0,0x0,8
tick,0x7ff86ea82704,65844115,0,0x0,8
tick,0x7ff86ea82704,65846072,0,0x0,8
tick,0x7ff86ea82704,65848073,0,0x0,8
tick,0x7ff86ea82704,65850203,0,0x0,8
tick,0x7ff86ea82704,65852182,0,0x0,8
tick,0x7ff86ea82704,65854065,0,0x0,8
tick,0x7ff86ea82704,65855959,0,0x0,8
tick,0x7ff86ea82704,65857969,0,0x0,8
tick,0x7ff86ea82704,65859998,0,0x0,8
tick,0x7ff86ea82704,65862034,0,0x0,8
tick,0x7ff86ea82704,65863950,0,0x0,8
tick,0x7ff86ea82704,65866138,0,0x0,8
tick,0x7ff86ea82704,65867960,0,0x0,8
tick,0x7ff86ea82704,65870010,0,0x0,8
tick,0x7ff86ea82704,65871864,0,0x0,8
tick,0x7ff86ea82704,65873937,0,0x0,8
tick,0x7ff86ea82704,65875893,0,0x0,8
tick,0x7ff86ea82704,65878058,0,0x0,8
tick,0x7ff86ea82704,65879908,0,0x0,8
tick,0x7ff86ea82704,65882105,0,0x0,8
tick,0x7ff86ea82704,65883879,0,0x0,8
tick,0x7ff86ea82704,65885977,0,0x0,8
tick,0x7ff86ea82704,65887887,0,0x0,8
tick,0x7ff86ea82704,65889964,0,0x0,8
tick,0x7ff86ea82704,65891891,0,0x0,8
tick,0x7ff86ea82704,65893849,0,0x0,8
tick,0x7ff86ea82704,65895796,0,0x0,8
tick,0x7ff86ea82704,65897938,0,0x0,8
tick,0x7ff86ea82704,65899830,0,0x0,8
tick,0x7ff86ea82704,65901975,0,0x0,8
tick,0x7ff86ea82704,65903870,0,0x0,8
tick,0x7ff86ea82704,65905842,0,0x0,8
tick,0x7ff86ea82704,65907858,0,0x0,8
tick,0x7ff86ea82704,65909750,0,0x0,8
tick,0x7ff86ea82704,65911952,0,0x0,8
tick,0x7ff86ea82704,65913850,0,0x0,8
tick,0x7ff86ea82704,65916015,0,0x0,8
tick,0x7ff86ea82704,65917843,0,0x0,8
tick,0x7ff86ea82704,65919960,0,0x0,8
tick,0x7ff86ea82704,65921758,0,0x0,8
tick,0x7ff86ea82704,65923854,0,0x0,8
tick,0x7ff86ea82704,65925718,0,0x0,8
tick,0x7ff86ea82704,65927905,0,0x0,8
tick,0x7ff86ea82704,65929798,0,0x0,8
tick,0x7ff86ea82704,65931883,0,0x0,8
tick,0x7ff86ea82704,65933794,0,0x0,8
tick,0x7ff86ea82704,65935949,0,0x0,8
tick,0x7ff86ea82704,65937911,0,0x0,8
tick,0x7ff86ea82704,65939840,0,0x0,8
tick,0x7ff86ea82704,65941726,0,0x0,8
tick,0x7ff86ea82704,65943799,0,0x0,8
tick,0x7ff86ea82704,65945765,0,0x0,8
tick,0x7ff86ea82704,65947806,0,0x0,8
tick,0x7ff86ea82704,65949790,0,0x0,8
tick,0x7ff86ea82704,65951744,0,0x0,8
tick,0x7ff86ea82704,65953719,0,0x0,8
tick,0x7ff86ea82704,65955654,0,0x0,8
tick,0x7ff86ea82704,65957678,0,0x0,8
tick,0x7ff86ea82704,65959679,0,0x0,8
tick,0x7ff86ea82704,65961792,0,0x0,8
tick,0x7ff86ea82704,65963716,0,0x0,8
tick,0x7ff86ea82704,65965722,0,0x0,8
tick,0x7ff86ea82704,65967734,0,0x0,8
tick,0x7ff86ea82704,65969696,0,0x0,8
tick,0x7ff86ea82704,65971668,0,0x0,8
tick,0x7ff86ea82704,65973690,0,0x0,8
tick,0x7ff86ea82704,65975593,0,0x0,8
tick,0x7ff86ea82704,65977739,0,0x0,8
tick,0x7ff86ea82704,65979625,0,0x0,8
tick,0x7ff86ea82704,65981662,0,0x0,8
tick,0x7ff86ea82704,65983538,0,0x0,8
tick,0x7ff86ea82704,65985671,0,0x0,8
tick,0x7ff86ea82704,65987636,0,0x0,8
tick,0x7ff86ea82704,65989654,0,0x0,8
tick,0x7ff86ea82704,65991581,0,0x0,8
tick,0x7ff86ea82704,65993698,0,0x0,8
tick,0x7ff86ea82704,65995548,0,0x0,8
tick,0x7ff86ea82704,65997576,0,0x0,8
tick,0x7ff86ea82704,65999618,0,0x0,8
tick,0x7ff86ea82704,66001688,0,0x0,8
tick,0x7ff86ea82704,66003587,0,0x0,8
tick,0x7ff86ea82704,66005614,0,0x0,8
tick,0x7ff86ea82704,66007564,0,0x0,8
tick,0x7ff86ea82704,66009511,0,0x0,8
tick,0x7ff86ea82704,66011591,0,0x0,8
tick,0x7ff86ea82704,66013592,0,0x0,8
tick,0x7ff86ea82704,66015625,0,0x0,8
tick,0x7ff86ea82704,66017552,0,0x0,8
tick,0x7ff86ea82704,66019684,0,0x0,8
tick,0x7ff86ea82704,66021523,0,0x0,8
tick,0x7ff86ea82704,66023655,0,0x0,8
tick,0x7ff86ea82704,66025503,0,0x0,8
tick,0x7ff86ea82704,66027510,0,0x0,8
tick,0x7ff86ea82704,66029608,0,0x0,8
tick,0x7ff86ea82704,66031544,0,0x0,8
tick,0x7ff86ea82704,66033540,0,0x0,8
tick,0x7ff86ea82704,66035406,0,0x0,8
tick,0x7ff86ea82704,66037520,0,0x0,8
tick,0x7ff86ea82704,66039485,0,0x0,8
tick,0x7ff86ea82704,66041579,0,0x0,8
tick,0x7ff86ea82704,66043492,0,0x0,8
tick,0x7ff86ea82704,66045477,0,0x0,8
tick,0x7ff86ea82704,66047532,0,0x0,8
tick,0x7ff86ea82704,66049434,0,0x0,8
tick,0x7ff86ea82704,66051427,0,0x0,8
tick,0x7ff86ea82704,66053555,0,0x0,8
tick,0x7ff86ea82704,66055395,0,0x0,8
tick,0x7ff86ea82704,66057487,0,0x0,8
tick,0x7ff86ea82704,66059716,0,0x0,8
tick,0x7ff86ea82704,66061857,0,0x0,8
tick,0x7ff86ea82704,66063800,0,0x0,8
tick,0x7ff86ea82704,66065463,0,0x0,8
tick,0x7ff86ea82704,66067649,0,0x0,8
tick,0x7ff86ea82704,66069535,0,0x0,8
tick,0x7ff86ea82704,66071609,0,0x0,8
tick,0x7ff86ea82704,66073413,0,0x0,8
tick,0x7ff86ea82704,66075408,0,0x0,8
tick,0x7ff86ea82704,66077361,0,0x0,8
tick,0x7ff86ea82704,66079339,0,0x0,8
tick,0x7ff86ea82704,66081400,0,0x0,8
tick,0x7ff86ea82704,66083359,0,0x0,8
tick,0x7ff86ea82704,66085486,0,0x0,8
tick,0x7ff86ea82704,66087406,0,0x0,8
tick,0x7ff86ea82704,66089407,0,0x0,8
tick,0x7ff86ea82704,66091228,0,0x0,8
tick,0x7ff86ea82704,66093426,0,0x0,8
tick,0x7ff86ea82704,66095387,0,0x0,8
tick,0x7ff86ea82704,66097515,0,0x0,8
tick,0x7ff86ea82704,66099388,0,0x0,8
tick,0x7ff86ea82704,66101335,0,0x0,8
tick,0x7ff86ea82704,66103482,0,0x0,8
tick,0x7ff86ea82704,66105540,0,0x0,8
tick,0x7ff86ea82704,66107436,0,0x0,8
tick,0x7ff86ea82704,66109514,0,0x0,8
tick,0x7ff86ea82704,66111369,0,0x0,8
tick,0x7ff86ea82704,66113526,0,0x0,8
tick,0x7ff86ea82704,66115374,0,0x0,8
tick,0x7ff86ea82704,66117405,0,0x0,8
tick,0x7ff86ea82704,66119522,0,0x0,8
tick,0x7ff86ea82704,66121522,0,0x0,8
tick,0x7ff86ea82704,66123270,0,0x0,8
tick,0x7ff86ea82704,66125539,0,0x0,8
tick,0x7ff86ea82704,66127312,0,0x0,8
tick,0x7ff86ea82704,66129607,0,0x0,8
tick,0x7ff86ea82704,66131463,0,0x0,8
tick,0x7ff86ea82704,66133272,0,0x0,8
tick,0x7ff86ea82704,66135395,0,0x0,8
tick,0x7ff86ea82704,66137285,0,0x0,8
tick,0x7ff86ea82704,66139666,0,0x0,8
tick,0x7ff86ea82704,66141239,0,0x0,8
tick,0x7ff86ea82704,66143397,0,0x0,8
tick,0x7ff86ea82704,66147111,0,0x0,8
tick,0x7ff86ea82704,66147139,0,0x0,8
tick,0x7ff86ea82704,66149189,0,0x0,8
tick,0x7ff86ea82704,66151096,0,0x0,8
tick,0x7ff86ea82704,66153240,0,0x0,8
tick,0x7ff86ea82704,66154967,0,0x0,8
tick,0x7ff86ea82704,66157181,0,0x0,8
tick,0x7ff86ea82704,66158970,0,0x0,8
tick,0x7ff86ea82704,66161202,0,0x0,8
tick,0x7ff86ea82704,66163103,0,0x0,8
tick,0x7ff86ea82704,66165269,0,0x0,8
tick,0x7ff86ea82704,66167413,0,0x0,8
tick,0x7ff86ea82704,66169216,0,0x0,8
tick,0x7ff86ea82704,66171349,0,0x0,8
tick,0x7ff86ea82704,66173150,0,0x0,8
tick,0x7ff86ea82704,66175033,0,0x0,8
tick,0x7ff86ea82704,66176917,0,0x0,8
tick,0x7ff86ea82704,66179040,0,0x0,8
tick,0x7ff86ea82704,66181020,0,0x0,8
tick,0x7ff86ea82704,66183050,0,0x0,8
tick,0x7ff86ea82704,66184929,0,0x0,8
tick,0x7ff86ea82704,66186984,0,0x0,8
tick,0x7ff86ea82704,66189053,0,0x0,8
tick,0x7ff86ea82704,66190990,0,0x0,8
tick,0x7ff86ea82704,66193126,0,0x0,8
tick,0x7ff86ea82704,66194831,0,0x0,8
tick,0x7ff86ea82704,66196971,0,0x0,8
tick,0x7ff86ea82704,66198919,0,0x0,8
tick,0x7ff86ea82704,66200985,0,0x0,8
tick,0x7ff86ea82704,66202898,0,0x0,8
tick,0x7ff86ea82704,66204942,0,0x0,8
tick,0x7ff86ea82704,66206929,0,0x0,8
tick,0x7ff86ea82704,66208752,0,0x0,8
tick,0x7ff86ea82704,66210932,0,0x0,8
tick,0x7ff86ea82704,66212785,0,0x0,8
tick,0x7ff86ea82704,66214867,0,0x0,8
tick,0x7ff86ea82704,66216851,0,0x0,8
tick,0x7ff86ea82704,66218891,0,0x0,8
tick,0x7ff86ea82704,66220819,0,0x0,8
tick,0x7ff86ea82704,66222877,0,0x0,8
tick,0x7ff86ea82704,66224805,0,0x0,8
tick,0x7ff86ea82704,66226852,0,0x0,8
tick,0x7ff86ea82704,66228746,0,0x0,8
tick,0x7ff86ea82704,66230878,0,0x0,8
tick,0x7ff86ea82704,66232876,0,0x0,8
tick,0x7ff86ea82704,66234849,0,0x0,8
tick,0x7ff86ea82704,66236797,0,0x0,8
tick,0x7ff86ea82704,66238787,0,0x0,8
tick,0x7ff86ea82704,66240942,0,0x0,8
tick,0x7ff86ea82704,66242756,0,0x0,8
tick,0x7ff86ea82704,66244740,0,0x0,8
tick,0x7ff86ea82704,66246796,0,0x0,8
tick,0x7ff86ea82704,66248716,0,0x0,8
tick,0x7ff86ea82704,66250807,0,0x0,8
tick,0x7ff86ea82704,66252825,0,0x0,8
tick,0x7ff86ea82704,66254851,0,0x0,8
tick,0x7ff86ea82704,66256744,0,0x0,8
tick,0x7ff86ea82704,66258792,0,0x0,8
tick,0x7ff86ea82704,66260838,0,0x0,8
tick,0x7ff86ea82704,66262726,0,0x0,8
tick,0x7ff86ea82704,66264648,0,0x0,8
tick,0x7ff86ea82704,66266832,0,0x0,8
tick,0x7ff86ea82704,66268654,0,0x0,8
tick,0x7ff86ea82704,66270783,0,0x0,8
tick,0x7ff86ea82704,66272671,0,0x0,8
tick,0x7ff86ea82704,66274746,0,0x0,8
tick,0x7ff86ea82704,66276882,0,0x0,8
tick,0x7ff86ea82704,66278697,0,0x0,8
tick,0x7ff86ea82704,66280692,0,0x0,8
tick,0x7ff86ea82704,66282704,0,0x0,8
tick,0x7ff86ea82704,66284744,0,0x0,8
tick,0x7ff86ea82704,66286746,0,0x0,8
tick,0x7ff86ea82704,66288867,0,0x0,8
tick,0x7ff86ea82704,66290644,0,0x0,8
tick,0x7ff86ea82704,66292707,0,0x0,8
tick,0x7ff86ea82704,66294676,0,0x0,8
tick,0x7ff86ea82704,66296735,0,0x0,8
tick,0x7ff86ea82704,66299009,0,0x0,8
tick,0x7ff86ea82704,66300638,0,0x0,8
tick,0x7ff86ea82704,66302701,0,0x0,8
tick,0x7ff86ea82704,66304772,0,0x0,8
tick,0x7ff86ea82704,66306679,0,0x0,8
tick,0x7ff86ea82704,66308764,0,0x0,8
tick,0x7ff86ea82704,66310651,0,0x0,8
tick,0x7ff86ea82704,66312725,0,0x0,8
tick,0x7ff86ea82704,66314566,0,0x0,8
tick,0x7ff86ea82704,66316560,0,0x0,8
tick,0x7ff86ea82704,66318616,0,0x0,8
tick,0x7ff86ea82704,66320744,0,0x0,8
tick,0x7ff86ea82704,66322565,0,0x0,8
tick,0x7ff86ea82704,66324550,0,0x0,8
tick,0x7ff86ea82704,66326747,0,0x0,8
tick,0x7ff86ea82704,66328583,0,0x0,8
tick,0x7ff86ea82704,66330509,0,0x0,8
tick,0x7ff86ea82704,66332691,0,0x0,8
tick,0x7ff86ea82704,66334662,0,0x0,8
tick,0x7ff86ea82704,66336661,0,0x0,8
tick,0x7ff86ea82704,66338571,0,0x0,8
tick,0x7ff86ea82704,66340570,0,0x0,8
tick,0x7ff86ea82704,66342440,0,0x0,8
tick,0x7ff86ea82704,66344563,0,0x0,8
tick,0x7ff86ea82704,66346462,0,0x0,8
tick,0x7ff86ea82704,66348736,0,0x0,8
tick,0x7ff86ea82704,66350569,0,0x0,8
tick,0x7ff86ea82704,66352466,0,0x0,8
tick,0x7ff86ea82704,66354452,0,0x0,8
tick,0x7ff86ea82704,66356540,0,0x0,8
tick,0x7ff86ea82704,66358462,0,0x0,8
tick,0x7ff86ea82704,66360560,0,0x0,8
tick,0x7ff86ea82704,66362605,0,0x0,8
tick,0x7ff86ea82704,66364521,0,0x0,8
tick,0x7ff86ea82704,66366586,0,0x0,8
tick,0x7ff86ea82704,66368404,0,0x0,8
tick,0x7ff86ea82704,66370470,0,0x0,8
tick,0x7ff86ea82704,66372668,0,0x0,8
tick,0x7ff86ea82704,66374331,0,0x0,8
tick,0x7ff86ea82704,66376463,0,0x0,8
tick,0x7ff86ea82704,66378402,0,0x0,8
tick,0x7ff86ea82704,66380548,0,0x0,8
tick,0x7ff86ea82704,66382381,0,0x0,8
tick,0x7ff86ea82704,66384442,0,0x0,8
tick,0x7ff86ea82704,66386413,0,0x0,8
tick,0x7ff86ea82704,66388578,0,0x0,8
tick,0x7ff86ea82704,66390298,0,0x0,8
tick,0x7ff86ea82704,66392438,0,0x0,8
tick,0x7ff86ea82704,66394396,0,0x0,8
tick,0x7ff86ea82704,66396438,0,0x0,8
tick,0x7ff86ea82704,66398372,0,0x0,8
tick,0x7ff86ea82704,66400337,0,0x0,8
tick,0x7ff86ea82704,66402468,0,0x0,8
tick,0x7ff86ea82704,66404420,0,0x0,8
tick,0x7ff86ea82704,66406305,0,0x0,8
tick,0x7ff86ea82704,66408371,0,0x0,8
tick,0x7ff86ea82704,66410416,0,0x0,8
tick,0x7ff86ea82704,66412437,0,0x0,8
tick,0x7ff86ea82704,66414415,0,0x0,8
tick,0x7ff86ea82704,66416320,0,0x0,8
tick,0x7ff86ea82704,66418437,0,0x0,8
tick,0x7ff86ea82704,66420402,0,0x0,8
tick,0x7ff86ea82704,66422323,0,0x0,8
tick,0x7ff86ea82704,66424371,0,0x0,8
tick,0x7ff86ea82704,66426317,0,0x0,8
tick,0x7ff86ea82704,66428354,0,0x0,8
tick,0x7ff86ea82704,66430505,0,0x0,8
tick,0x7ff86ea82704,66432675,0,0x0,8
tick,0x7ff86ea82704,66435219,0,0x0,8
tick,0x7ff86ea82704,66437354,0,0x0,8
tick,0x7ff86ea82704,66439239,0,0x0,8
tick,0x7ff86ea82704,66441339,0,0x0,8
tick,0x7ff86ea82704,66443238,0,0x0,8
tick,0x7ff86ea82704,66445388,0,0x0,8
tick,0x7ff86ea82704,66447206,0,0x0,8
tick,0x7ff86ea82704,66449273,0,0x0,8
tick,0x7ff86ea82704,66451330,0,0x0,8
tick,0x7ff86ea82704,66453293,0,0x0,8
tick,0x7ff86ea82704,66455371,0,0x0,8
tick,0x7ff86ea82704,66457295,0,0x0,8
tick,0x7ff86ea82704,66459154,0,0x0,8
tick,0x7ff86ea82704,66461235,0,0x0,8
tick,0x7ff86ea82704,66463243,0,0x0,8
tick,0x7ff86ea82704,66465423,0,0x0,8
tick,0x7ff86ea82704,66467094,0,0x0,8
tick,0x7ff86ea82704,66469307,0,0x0,8
tick,0x7ff86ea82704,66471315,0,0x0,8
tick,0x7ff86ea82704,66473280,0,0x0,8
tick,0x7ff86ea82704,66475259,0,0x0,8
tick,0x7ff86ea82704,66477324,0,0x0,8
tick,0x7ff86ea82704,66479279,0,0x0,8
tick,0x7ff86ea82704,66481269,0,0x0,8
tick,0x7ff86ea82704,66483085,0,0x0,8
tick,0x7ff86ea82704,66485312,0,0x0,8
tick,0x7ff86ea82704,66487130,0,0x0,8
tick,0x7ff86ea82704,66489237,0,0x0,8
tick,0x7ff86ea82704,66491080,0,0x0,8
tick,0x7ff86ea82704,66493261,0,0x0,8
tick,0x7ff86ea82704,66495182,0,0x0,8
tick,0x7ff86ea82704,66497175,0,0x0,8
tick,0x7ff86ea82704,66499131,0,0x0,8
tick,0x7ff86ea82704,66501212,0,0x0,8
tick,0x7ff86ea82704,66503143,0,0x0,8
tick,0x7ff86ea82704,66505043,0,0x0,8
tick,0x7ff86ea82704,66507186,0,0x0,8
tick,0x7ff86ea82704,66509092,0,0x0,8
tick,0x7ff86ea82704,66511136,0,0x0,8
tick,0x7ff86ea82704,66513184,0,0x0,8
tick,0x7ff86ea82704,66514989,0,0x0,8
tick,0x7ff86ea82704,66517280,0,0x0,8
tick,0x7ff86ea82704,66519239,0,0x0,8
tick,0x7ff86ea82704,66521240,0,0x0,8
tick,0x7ff86ea82704,66523034,0,0x0,8
tick,0x7ff86ea82704,66525023,0,0x0,8
tick,0x7ff86ea82704,66527268,0,0x0,8
tick,0x7ff86ea82704,66529064,0,0x0,8
tick,0x7ff86ea82704,66530986,0,0x0,8
tick,0x7ff86ea82704,66533105,0,0x0,8
tick,0x7ff86ea82704,66534945,0,0x0,8
tick,0x7ff86ea82704,66537093,0,0x0,8
tick,0x7ff86ea82704,66539139,0,0x0,8
tick,0x7ff86ea82704,66541080,0,0x0,8
tick,0x7ff86ea82704,66542958,0,0x0,8
tick,0x7ff86ea82704,66545106,0,0x0,8
tick,0x7ff86ea82704,66547004,0,0x0,8
tick,0x7ff86ea82704,66549012,0,0x0,8
tick,0x7ff86ea82704,66550933,0,0x0,8
tick,0x7ff86ea82704,66553222,0,0x0,8
tick,0x7ff86ea82704,66555132,0,0x0,8
tick,0x7ff86ea82704,66557111,0,0x0,8
tick,0x7ff86ea82704,66559290,0,0x0,8
tick,0x7ff86ea82704,66561216,0,0x0,8
tick,0x7ff86ea82704,66563052,0,0x0,8
tick,0x7ff86ea82704,66565064,0,0x0,8
tick,0x7ff86ea82704,66567036,0,0x0,8
tick,0x7ff86ea82704,66569193,0,0x0,8
tick,0x7ff86ea82704,66571023,0,0x0,8
tick,0x7ff86ea82704,66573230,0,0x0,8
tick,0x7ff86ea82704,66575287,0,0x0,8
tick,0x7ff86ea82704,66577306,0,0x0,8
tick,0x7ff86ea82704,66579098,0,0x0,8
tick,0x7ff86ea82704,66581158,0,0x0,8
tick,0x7ff86ea82704,66583041,0,0x0,8
tick,0x7ff86ea82704,66585196,0,0x0,8
tick,0x7ff86ea82704,66587026,0,0x0,8
tick,0x7ff86ea82704,66588965,0,0x0,8
tick,0x7ff86ea82704,66591031,0,0x0,8
tick,0x7ff86ea82704,66593106,0,0x0,8
tick,0x7ff86ea82704,66595024,0,0x0,8
tick,0x7ff86ea82704,66596975,0,0x0,8
tick,0x7ff86ea82704,66598961,0,0x0,8
tick,0x7ff86ea82704,66601063,0,0x0,8
tick,0x7ff86ea82704,66603003,0,0x0,8
tick,0x7ff86ea82704,66604895,0,0x0,8
tick,0x7ff86ea82704,66607121,0,0x0,8
tick,0x7ff86ea82704,66608842,0,0x0,8
tick,0x7ff86ea82704,66610929,0,0x0,8
tick,0x7ff86ea82704,66612921,0,0x0,8
tick,0x7ff86ea82704,66615128,0,0x0,8
tick,0x7ff86ea82704,66617053,0,0x0,8
tick,0x7ff86ea82704,66619073,0,0x0,8
tick,0x7ff86ea82704,66620960,0,0x0,8
tick,0x7ff86ea82704,66623017,0,0x0,8
tick,0x7ff86ea82704,66624873,0,0x0,8
tick,0x7ff86ea82704,66627002,0,0x0,8
tick,0x7ff86ea82704,66629000,0,0x0,8
tick,0x7ff86ea82704,66631456,0,0x0,8
tick,0x7ff86ea82704,66633032,0,0x0,8
tick,0x7ff86ea82704,66634944,0,0x0,8
tick,0x7ff86ea82704,66636946,0,0x0,8
tick,0x7ff86ea82704,66639036,0,0x0,8
tick,0x7ff86ea82704,66640848,0,0x0,8
tick,0x7ff86ea82704,66642993,0,0x0,8
tick,0x7ff86ea82704,66644885,0,0x0,8
tick,0x7ff86ea82704,66646947,0,0x0,8
tick,0x7ff86ea82704,66648927,0,0x0,8
tick,0x7ff86ea82704,66651067,0,0x0,8
tick,0x7ff86ea82704,66652982,0,0x0,8
tick,0x7ff86ea82704,66654862,0,0x0,8
tick,0x7ff86ea82704,66656816,0,0x0,8
tick,0x7ff86ea82704,66658764,0,0x0,8
tick,0x7ff86ea82704,66660900,0,0x0,8
tick,0x7ff86ea82704,66662712,0,0x0,8
tick,0x7ff86ea82704,66664902,0,0x0,8
tick,0x7ff86ea82704,66666876,0,0x0,8
tick,0x7ff86ea82704,66668715,0,0x0,8
tick,0x7ff86ea82704,66670765,0,0x0,8
tick,0x7ff86ea82704,66672790,0,0x0,8
tick,0x7ff86ea82704,66674821,0,0x0,8
tick,0x7ff86ea82704,66676864,0,0x0,8
tick,0x7ff86ea82704,66678652,0,0x0,8
tick,0x7ff86ea82704,66680822,0,0x0,8
tick,0x7ff86ea82704,66682789,0,0x0,8
tick,0x7ff86ea82704,66684840,0,0x0,8
tick,0x7ff86ea82704,66686811,0,0x0,8
tick,0x7ff86ea82704,66688760,0,0x0,8
tick,0x7ff86ea82704,66690741,0,0x0,8
tick,0x7ff86ea82704,66692791,0,0x0,8
tick,0x7ff86ea82704,66694852,0,0x0,8
tick,0x7ff86ea82704,66696663,0,0x0,8
tick,0x7ff86ea82704,66698852,0,0x0,8
tick,0x7ff86ea82704,66700705,0,0x0,8
tick,0x7ff86ea82704,66702816,0,0x0,8
tick,0x7ff86ea82704,66704621,0,0x0,8
tick,0x7ff86ea82704,66706578,0,0x0,8
tick,0x7ff86ea82704,66708652,0,0x0,8
tick,0x7ff86ea82704,66710684,0,0x0,8
tick,0x7ff86ea82704,66712693,0,0x0,8
tick,0x7ff86ea82704,66714713,0,0x0,8
tick,0x7ff86ea82704,66716669,0,0x0,8
tick,0x7ff86ea82704,66718476,0,0x0,8
tick,0x7ff86ea82704,66720620,0,0x0,8
tick,0x7ff86ea82704,66722600,0,0x0,8
tick,0x7ff86ea82704,66724903,0,0x0,8
tick,0x7ff86ea82704,66726624,0,0x0,8
tick,0x7ff86ea82704,66728769,0,0x0,8
tick,0x7ff86ea82704,66730738,0,0x0,8
tick,0x7ff86ea82704,66732564,0,0x0,8
tick,0x7ff86ea82704,66734583,0,0x0,8
tick,0x7ff86ea82704,66736625,0,0x0,8
tick,0x7ff86ea82704,66738687,0,0x0,8
tick,0x7ff86ea82704,66740516,0,0x0,8
tick,0x7ff86ea82704,66742616,0,0x0,8
tick,0x7ff86ea82704,66744550,0,0x0,8
tick,0x7ff86ea82704,66746398,0,0x0,8
tick,0x7ff86ea82704,66748623,0,0x0,8
tick,0x7ff86ea82704,66750508,0,0x0,8
tick,0x7ff86ea82704,66752596,0,0x0,8
tick,0x7ff86ea82704,66754502,0,0x0,8
tick,0x7ff86ea82704,66756474,0,0x0,8
tick,0x7ff86ea82704,66758500,0,0x0,8
tick,0x7ff86ea82704,66760648,0,0x0,8
tick,0x7ff86ea82704,66762514,0,0x0,8
tick,0x7ff86ea82704,66764703,0,0x0,8
tick,0x7ff86ea82704,66766623,0,0x0,8
tick,0x7ff86ea82704,66768511,0,0x0,8
tick,0x7ff86ea82704,66770448,0,0x0,8
tick,0x7ff86ea82704,66772401,0,0x0,8
tick,0x7ff86ea82704,66774644,0,0x0,8
tick,0x7ff86ea82704,66776495,0,0x0,8
tick,0x7ff86ea82704,66778606,0,0x0,8
tick,0x7ff86ea82704,66780673,0,0x0,8
tick,0x7ff86ea82704,66782423,0,0x0,8
tick,0x7ff86ea82704,66784411,0,0x0,8
tick,0x7ff86ea82704,66786555,0,0x0,8
tick,0x7ff86ea82704,66788452,0,0x0,8
tick,0x7ff86ea82704,66790437,0,0x0,8
tick,0x7ff86ea82704,66792425,0,0x0,8
tick,0x7ff86ea82704,66794521,0,0x0,8
tick,0x7ff86ea82704,66796389,0,0x0,8
tick,0x7ff86ea82704,66798487,0,0x0,8
tick,0x7ff86ea82704,66800358,0,0x0,8
tick,0x7ff86ea82704,66802531,0,0x0,8
tick,0x7ff86ea82704,66804302,0,0x0,8
tick,0x7ff86ea82704,66806550,0,0x0,8
tick,0x7ff86ea82704,66808323,0,0x0,8
tick,0x7ff86ea82704,66810389,0,0x0,8
tick,0x7ff86ea82704,66812375,0,0x0,8
tick,0x7ff86ea82704,66814522,0,0x0,8
tick,0x7ff86ea82704,66816262,0,0x0,8
tick,0x7ff86ea82704,66818427,0,0x0,8
tick,0x7ff86ea82704,66820380,0,0x0,8
tick,0x7ff86ea82704,66822429,0,0x0,8
tick,0x7ff86ea82704,66824301,0,0x0,8
tick,0x7ff86ea82704,66826457,0,0x0,8
tick,0x7ff86ea82704,66828281,0,0x0,8
tick,0x7ff86ea82704,66830339,0,0x0,8
tick,0x7ff86ea82704,66832402,0,0x0,8
tick,0x7ff86ea82704,66834355,0,0x0,8
tick,0x7ff86ea82704,66836277,0,0x0,8
tick,0x7ff86ea82704,66838385,0,0x0,8
tick,0x7ff86ea82704,66840332,0,0x0,8
tick,0x7ff86ea82704,66842349,0,0x0,8
tick,0x7ff86ea82704,66844292,0,0x0,8
tick,0x7ff86ea82704,66846246,0,0x0,8
tick,0x7ff86ea82704,66848316,0,0x0,8
tick,0x7ff86ea82704,66850303,0,0x0,8
tick,0x7ff86ea82704,66852349,0,0x0,8
tick,0x7ff86ea82704,66854263,0,0x0,8
tick,0x7ff86ea82704,66856238,0,0x0,8
tick,0x7ff86ea82704,66858234,0,0x0,8
tick,0x7ff86ea82704,66860600,0,0x0,8
tick,0x7ff86ea82704,66862349,0,0x0,8
tick,0x7ff86ea82704,66864372,0,0x0,8
tick,0x7ff86ea82704,66866246,0,0x0,8
tick,0x7ff86ea82704,66868257,0,0x0,8
tick,0x7ff86ea82704,66870239,0,0x0,8
tick,0x7ff86ea82704,66872269,0,0x0,8
tick,0x7ff86ea82704,66874254,0,0x0,8
tick,0x7ff86ea82704,66876221,0,0x0,8
tick,0x7ff86ea82704,66878333,0,0x0,8
tick,0x7ff86ea82704,66880186,0,0x0,8
tick,0x7ff86ea82704,66882207,0,0x0,8
tick,0x7ff86ea82704,66884192,0,0x0,8
tick,0x7ff86ea82704,66886262,0,0x0,8
tick,0x7ff86ea82704,66888188,0,0x0,8
tick,0x7ff86ea82704,66890285,0,0x0,8
tick,0x7ff86ea82704,66892210,0,0x0,8
tick,0x7ff86ea82704,66894172,0,0x0,8
tick,0x7ff86ea82704,66896257,0,0x0,8
tick,0x7ff86ea82704,66898154,0,0x0,8
tick,0x7ff86ea82704,66900150,0,0x0,8
tick,0x7ff86ea82704,66902266,0,0x0,8
tick,0x7ff86ea82704,66904226,0,0x0,8
tick,0x7ff86ea82704,66906214,0,0x0,8
tick,0x7ff86ea82704,66908091,0,0x0,8
tick,0x7ff86ea82704,66910115,0,0x0,8
tick,0x7ff86ea82704,66912070,0,0x0,8
tick,0x7ff86ea82704,66914276,0,0x0,8
tick,0x7ff86ea82704,66916041,0,0x0,8
tick,0x7ff86ea82704,66918299,0,0x0,8
tick,0x7ff86ea82704,66920197,0,0x0,8
tick,0x7ff86ea82704,66922150,0,0x0,8
tick,0x7ff86ea82704,66924189,0,0x0,8
tick,0x7ff86ea82704,66926486,0,0x0,8
tick,0x7ff86ea82704,66928257,0,0x0,8
tick,0x7ff86ea82704,66930138,0,0x0,8
tick,0x7ff86ea82704,66932071,0,0x0,8
tick,0x7ff86ea82704,66934119,0,0x0,8
tick,0x7ff86ea82704,66936050,0,0x0,8
tick,0x7ff86ea82704,66938103,0,0x0,8
tick,0x7ff86ea82704,66940026,0,0x0,8
tick,0x7ff86ea82704,66942185,0,0x0,8
tick,0x7ff86ea82704,66943957,0,0x0,8
tick,0x7ff86ea82704,66946117,0,0x0,8
tick,0x7ff86ea82704,66947986,0,0x0,8
tick,0x7ff86ea82704,66950000,0,0x0,8
tick,0x7ff86ea82704,66952010,0,0x0,8
tick,0x7ff86ea82704,66954085,0,0x0,8
tick,0x7ff86ea82704,66955928,0,0x0,8
tick,0x7ff86ea82704,66957972,0,0x0,8
tick,0x7ff86ea82704,66959978,0,0x0,8
tick,0x7ff86ea82704,66961894,0,0x0,8
tick,0x7ff86ea82704,66963955,0,0x0,8
tick,0x7ff86ea82704,66965870,0,0x0,8
tick,0x7ff86ea82704,66968073,0,0x0,8
tick,0x7ff86ea82704,66969860,0,0x0,8
tick,0x7ff86ea82704,66971867,0,0x0,8
tick,0x7ff86ea82704,66973865,0,0x0,8
tick,0x7ff86ea82704,66975983,0,0x0,8
tick,0x7ff86ea82704,66977872,0,0x0,8
tick,0x7ff86ea82704,66979873,0,0x0,8
tick,0x7ff86ea82704,66981935,0,0x0,8
tick,0x7ff86ea82704,66983803,0,0x0,8
tick,0x7ff86ea82704,66985902,0,0x0,8
tick,0x7ff86ea82704,66987809,0,0x0,8
tick,0x7ff86ea82704,66989922,0,0x0,8
tick,0x7ff86ea82704,66991948,0,0x0,8
tick,0x7ff86ea82704,66993892,0,0x0,8
tick,0x7ff86ea82704,66995843,0,0x0,8
tick,0x7ff86ea82704,66997813,0,0x0,8
tick,0x7ff86ea82704,66999802,0,0x0,8
tick,0x7ff86ea82704,67001783,0,0x0,8
tick,0x7ff86ea82704,67003935,0,0x0,8
tick,0x7ff86ea82704,67005795,0,0x0,8
tick,0x7ff86ea82704,67007853,0,0x0,8
tick,0x7ff86ea82704,67009792,0,0x0,8
tick,0x7ff86ea82704,67011942,0,0x0,8
tick,0x7ff86ea82704,67013733,0,0x0,8
tick,0x7ff86ea82704,67015975,0,0x0,8
tick,0x7ff86ea82704,67017820,0,0x0,8
tick,0x7ff86ea82704,67019810,0,0x0,8
tick,0x7ff86ea82704,67021729,0,0x0,8
tick,0x7ff86ea82704,67023789,0,0x0,8
tick,0x7ff86ea82704,67025771,0,0x0,8
tick,0x7ff86ea82704,67027811,0,0x0,8
tick,0x7ff86ea82704,67029717,0,0x0,8
tick,0x7ff86ea82704,67031836,0,0x0,8
tick,0x7ff86ea82704,67033751,0,0x0,8
tick,0x7ff86ea82704,67035808,0,0x0,8
tick,0x7ff86ea82704,67037791,0,0x0,8
tick,0x7ff86ea82704,67039796,0,0x0,8
tick,0x7ff86ea82704,67041759,0,0x0,8
tick,0x7ff86ea82704,67043829,0,0x0,8
tick,0x7ff86ea82704,67045748,0,0x0,8
tick,0x7ff86ea82704,67047700,0,0x0,8
tick,0x7ff86ea82704,67049676,0,0x0,8
tick,0x7ff86ea82704,67051698,0,0x0,8
tick,0x7ff86ea82704,67053811,0,0x0,8
tick,0x7ff86ea82704,67055764,0,0x0,8
tick,0x7ff86ea82704,67057715,0,0x0,8
tick,0x7ff86ea82704,67059710,0,0x0,8
tick,0x7ff86ea82704,67061658,0,0x0,8
tick,0x7ff86ea82704,67063786,0,0x0,8
tick,0x7ff86ea82704,67065716,0,0x0,8
tick,0x7ff86ea82704,67068248,0,0x0,8
tick,0x7ff86ea82704,67069600,0,0x0,8
tick,0x7ff86ea82704,67071829,0,0x0,8
tick,0x7ff86ea82704,67073759,0,0x0,8
tick,0x7ff86ea82704,67076116,0,0x0,8
tick,0x7ff86ea82704,67077806,0,0x0,8
tick,0x7ff86ea82704,67080021,0,0x0,8
tick,0x7ff86ea82704,67081678,0,0x0,8
tick,0x7ff86ea82704,67083753,0,0x0,8
tick,0x7ff86ea82704,67085778,0,0x0,8
tick,0x7ff86ea82704,67087657,0,0x0,8
tick,0x7ff86ea82704,67089584,0,0x0,8
tick,0x7ff86ea82704,67091558,0,0x0,8
tick,0x7ff86ea82704,67093751,0,0x0,8
tick,0x7ff86ea82704,67095724,0,0x0,8
tick,0x7ff86ea82704,67097784,0,0x0,8
tick,0x7ff86ea82704,67099596,0,0x0,8
tick,0x7ff86ea82704,67101680,0,0x0,8
tick,0x7ff86ea82704,67103637,0,0x0,8
tick,0x7ff86ea82704,67105579,0,0x0,8
tick,0x7ff86ea82704,67107601,0,0x0,8
tick,0x7ff86ea82704,67109494,0,0x0,8
tick,0x7ff86ea82704,67111566,0,0x0,8
tick,0x7ff86ea82704,67113553,0,0x0,8
tick,0x7ff86ea82704,67115673,0,0x0,8
tick,0x7ff86ea82704,67117411,0,0x0,8
tick,0x7ff86ea82704,67119502,0,0x0,8
tick,0x7ff86ea82704,67121480,0,0x0,8
tick,0x7ff86ea82704,67123680,0,0x0,8
tick,0x7ff86ea82704,67125494,0,0x0,8
tick,0x7ff86ea82704,67127567,0,0x0,8
tick,0x7ff86ea82704,67129526,0,0x0,8
tick,0x7ff86ea82704,67131568,0,0x0,8
tick,0x7ff86ea82704,67133549,0,0x0,8
tick,0x7ff86ea82704,67135489,0,0x0,8
tick,0x7ff86ea82704,67137555,0,0x0,8
tick,0x7ff86ea82704,67139428,0,0x0,8
tick,0x7ff86ea82704,67141448,0,0x0,8
tick,0x7ff86ea82704,67143492,0,0x0,8
tick,0x7ff86ea82704,67145489,0,0x0,8
tick,0x7ff86ea82704,67147505,0,0x0,8
tick,0x7ff86ea82704,67149379,0,0x0,8
tick,0x7ff86ea82704,67151468,0,0x0,8
tick,0x7ff86ea82704,67153432,0,0x0,8
tick,0x7ff86ea82704,67155444,0,0x0,8
tick,0x7ff86ea82704,67157466,0,0x0,8
tick,0x7ff86ea82704,67159420,0,0x0,8
tick,0x7ff86ea82704,67161532,0,0x0,8
tick,0x7ff86ea82704,67163415,0,0x0,8
tick,0x7ff86ea82704,67165458,0,0x0,8
tick,0x7ff86ea82704,67167501,0,0x0,8
tick,0x7ff86ea82704,67169767,0,0x0,8
tick,0x7ff86ea82704,67171531,0,0x0,8
tick,0x7ff86ea82704,67173477,0,0x0,8
tick,0x7ff86ea82704,67175443,0,0x0,8
tick,0x7ff86ea82704,67177740,0,0x0,8
tick,0x7ff86ea82704,67179650,0,0x0,8
tick,0x7ff86ea82704,67181797,0,0x0,8
tick,0x7ff86ea82704,67183611,0,0x0,8
tick,0x7ff86ea82704,67185488,0,0x0,8
tick,0x7ff86ea82704,67187386,0,0x0,8
tick,0x7ff86ea82704,67189414,0,0x0,8
tick,0x7ff86ea82704,67191502,0,0x0,8
tick,0x7ff86ea82704,67193383,0,0x0,8
tick,0x7ff86ea82704,67195464,0,0x0,8
tick,0x7ff86ea82704,67197469,0,0x0,8
tick,0x7ff86ea82704,67199427,0,0x0,8
tick,0x7ff86ea82704,67201372,0,0x0,8
tick,0x7ff86ea82704,67203375,0,0x0,8
tick,0x7ff86ea82704,67205351,0,0x0,8
tick,0x7ff86ea82704,67207290,0,0x0,8
tick,0x7ff86ea82704,67209300,0,0x0,8
tick,0x7ff86ea82704,67211262,0,0x0,8
tick,0x7ff86ea82704,67213406,0,0x0,8
tick,0x7ff86ea82704,67215262,0,0x0,8
tick,0x7ff86ea82704,67217434,0,0x0,8
tick,0x7ff86ea82704,67219249,0,0x0,8
tick,0x7ff86ea82704,67221225,0,0x0,8
tick,0x7ff86ea82704,67223242,0,0x0,8
tick,0x7ff86ea82704,67225257,0,0x0,8
tick,0x7ff86ea82704,67227219,0,0x0,8
tick,0x7ff86ea82704,67229256,0,0x0,8
tick,0x7ff86ea82704,67231243,0,0x0,8
tick,0x7ff86ea82704,67233253,0,0x0,8
tick,0x7ff86ea82704,67235163,0,0x0,8
tick,0x7ff86ea82704,67237358,0,0x0,8
tick,0x7ff86ea82704,67239432,0,0x0,8
tick,0x7ff86ea82704,67241314,0,0x0,8
tick,0x7ff86ea82704,67243227,0,0x0,8
tick,0x7ff86ea82704,67245199,0,0x0,8
tick,0x7ff86ea82704,67247152,0,0x0,8
tick,0x7ff86ea82704,67249290,0,0x0,8
tick,0x7ff86ea82704,67251249,0,0x0,8
tick,0x7ff86ea82704,67253229,0,0x0,8
tick,0x7ff86ea82704,67255229,0,0x0,8
tick,0x7ff86ea82704,67257274,0,0x0,8
tick,0x7ff86ea82704,67259413,0,0x0,8
tick,0x7ff86ea82704,67261286,0,0x0,8
tick,0x7ff86ea82704,67263200,0,0x0,8
tick,0x7ff86ea82704,67265270,0,0x0,8
tick,0x7ff86ea82704,67267357,0,0x0,8
tick,0x7ff86ea82704,67269202,0,0x0,8
tick,0x7ff86ea82704,67271245,0,0x0,8
tick,0x7ff86ea82704,67273208,0,0x0,8
tick,0x7ff86ea82704,67275133,0,0x0,8
tick,0x7ff86ea82704,67277077,0,0x0,8
tick,0x7ff86ea82704,67279180,0,0x0,8
tick,0x7ff86ea82704,67281091,0,0x0,8
tick,0x7ff86ea82704,67283086,0,0x0,8
tick,0x7ff86ea82704,67285023,0,0x0,8
tick,0x7ff86ea82704,67287141,0,0x0,8
tick,0x7ff86ea82704,67289114,0,0x0,8
tick,0x7ff86ea82704,67291160,0,0x0,8
tick,0x7ff86ea82704,67293018,0,0x0,8
tick,0x7ff86ea82704,67295134,0,0x0,8
tick,0x7ff86ea82704,67297179,0,0x0,8
tick,0x7ff86ea82704,67299152,0,0x0,8
tick,0x7ff86ea82704,67301145,0,0x0,8
tick,0x7ff86ea82704,67303100,0,0x0,8
tick,0x7ff86ea82704,67305036,0,0x0,8
tick,0x7ff86ea82704,67307030,0,0x0,8
tick,0x7ff86ea82704,67309020,0,0x0,8
tick,0x7ff86ea82704,67311086,0,0x0,8
tick,0x7ff86ea82704,67313087,0,0x0,8
tick,0x7ff86ea82704,67314910,0,0x0,8
tick,0x7ff86ea82704,67317085,0,0x0,8
tick,0x7ff86ea82704,67318961,0,0x0,8
tick,0x7ff86ea82704,67320977,0,0x0,8
tick,0x7ff86ea82704,67323034,0,0x0,8
tick,0x7ff86ea82704,67324921,0,0x0,8
tick,0x7ff86ea82704,67326980,0,0x0,8
tick,0x7ff86ea82704,67328990,0,0x0,8
tick,0x7ff86ea82704,67331120,0,0x0,8
tick,0x7ff86ea82704,67332950,0,0x0,8
tick,0x7ff86ea82704,67335023,0,0x0,8
tick,0x7ff86ea82704,67336944,0,0x0,8
tick,0x7ff86ea82704,67339067,0,0x0,8
tick,0x7ff86ea82704,67341029,0,0x0,8
tick,0x7ff86ea82704,67342894,0,0x0,8
tick,0x7ff86ea82704,67345036,0,0x0,8
tick,0x7ff86ea82704,67347156,0,0x0,8
tick,0x7ff86ea82704,67348970,0,0x0,8
tick,0x7ff86ea82704,67350845,0,0x0,8
tick,0x7ff86ea82704,67352854,0,0x0,8
tick,0x7ff86ea82704,67354805,0,0x0,8
tick,0x7ff86ea82704,67357051,0,0x0,8
tick,0x7ff86ea82704,67359064,0,0x0,8
tick,0x7ff86ea82704,67360973,0,0x0,8
tick,0x7ff86ea82704,67363051,0,0x0,8
tick,0x7ff86ea82704,67365112,0,0x0,8
tick,0x7ff86ea82704,67367110,0,0x0,8
tick,0x7ff86ea82704,67368904,0,0x0,8
tick,0x7ff86ea82704,67371061,0,0x0,8
tick,0x7ff86ea82704,67372970,0,0x0,8
tick,0x7ff86ea82704,67374825,0,0x0,8
tick,0x7ff86ea82704,67376887,0,0x0,8
tick,0x7ff86ea82704,67378875,0,0x0,8
tick,0x7ff86ea82704,67380846,0,0x0,8
tick,0x7ff86ea82704,67382950,0,0x0,8
tick,0x7ff86ea82704,67384849,0,0x0,8
tick,0x7ff86ea82704,67386854,0,0x0,8
tick,0x7ff86ea82704,67388764,0,0x0,8
tick,0x7ff86ea82704,67390812,0,0x0,8
tick,0x7ff86ea82704,67392918,0,0x0,8
tick,0x7ff86ea82704,67394890,0,0x0,8
tick,0x7ff86ea82704,67396849,0,0x0,8
tick,0x7ff86ea82704,67398802,0,0x0,8
tick,0x7ff86ea82704,67400852,0,0x0,8
tick,0x7ff86ea82704,67402878,0,0x0,8
tick,0x7ff86ea82704,67404790,0,0x0,8
tick,0x7ff86ea82704,67406724,0,0x0,8
tick,0x7ff86ea82704,67408743,0,0x0,8
tick,0x7ff86ea82704,67410801,0,0x0,8
tick,0x7ff86ea82704,67412739,0,0x0,8
tick,0x7ff86ea82704,67414717,0,0x0,8
tick,0x7ff86ea82704,67416793,0,0x0,8
tick,0x7ff86ea82704,67418724,0,0x0,8
tick,0x7ff86ea82704,67420679,0,0x0,8
tick,0x7ff86ea82704,67422841,0,0x0,8
tick,0x7ff86ea82704,67424876,0,0x0,8
tick,0x7ff86ea82704,67426682,0,0x0,8
tick,0x7ff86ea82704,67428716,0,0x0,8
tick,0x7ff86ea82704,67430732,0,0x0,8
tick,0x7ff86ea82704,67432744,0,0x0,8
tick,0x7ff86ea82704,67434781,0,0x0,8
tick,0x7ff86ea82704,67436793,0,0x0,8
tick,0x7ff86ea82704,67438695,0,0x0,8
tick,0x7ff86ea82704,67440679,0,0x0,8
tick,0x7ff86ea82704,67442741,0,0x0,8
tick,0x7ff86ea82704,67444694,0,0x0,8
tick,0x7ff86ea82704,67446669,0,0x0,8
tick,0x7ff86ea82704,67448763,0,0x0,8
tick,0x7ff86ea82704,67450745,0,0x0,8
tick,0x7ff86ea82704,67452638,0,0x0,8
tick,0x7ff86ea82704,67454713,0,0x0,8
tick,0x7ff86ea82704,67456710,0,0x0,8
tick,0x7ff86ea82704,67458600,0,0x0,8
tick,0x7ff86ea82704,67460642,0,0x0,8
tick,0x7ff86ea82704,67462665,0,0x0,8
tick,0x7ff86ea82704,67464606,0,0x0,8
tick,0x7ff86ea82704,67466655,0,0x0,8
tick,0x7ff86ea82704,67468740,0,0x0,8
tick,0x7ff86ea82704,67470605,0,0x0,8
tick,0x7ff86ea82704,67472631,0,0x0,8
tick,0x7ff86ea82704,67474693,0,0x0,8
tick,0x7ff86ea82704,67476630,0,0x0,8
tick,0x7ff86ea82704,67478652,0,0x0,8
tick,0x7ff86ea82704,67480517,0,0x0,8
tick,0x7ff86ea82704,67482522,0,0x0,8
tick,0x7ff86ea82704,67484564,0,0x0,8
tick,0x7ff86ea82704,67486572,0,0x0,8
tick,0x7ff86ea82704,67488651,0,0x0,8
tick,0x7ff86ea82704,67490604,0,0x0,8
tick,0x7ff86ea82704,67492465,0,0x0,8
tick,0x7ff86ea82704,67494584,0,0x0,8
tick,0x7ff86ea82704,67496644,0,0x0,8
tick,0x7ff86ea82704,67498651,0,0x0,8
tick,0x7ff86ea82704,67500610,0,0x0,8
tick,0x7ff86ea82704,67502658,0,0x0,8
tick,0x7ff86ea82704,67504622,0,0x0,8
tick,0x7ff86ea82704,67506659,0,0x0,8
tick,0x7ff86ea82704,67508617,0,0x0,8
tick,0x7ff86ea82704,67510483,0,0x0,8
tick,0x7ff86ea82704,67512645,0,0x0,8
tick,0x7ff86ea82704,67514455,0,0x0,8
tick,0x7ff86ea82704,67516513,0,0x0,8
tick,0x7ff86ea82704,67518511,0,0x0,8
tick,0x7ff86ea82704,67520534,0,0x0,8
tick,0x7ff86ea82704,67522601,0,0x0,8
tick,0x7ff86ea82704,67524400,0,0x0,8
tick,0x7ff86ea82704,67526505,0,0x0,8
tick,0x7ff86ea82704,67528407,0,0x0,8
tick,0x7ff86ea82704,67530624,0,0x0,8
tick,0x7ff86ea82704,67532635,0,0x0,8
tick,0x7ff86ea82704,67534505,0,0x0,8
tick,0x7ff86ea82704,67536743,0,0x0,8
tick,0x7ff86ea82704,67538727,0,0x0,8
tick,0x7ff86ea82704,67540614,0,0x0,8
tick,0x7ff86ea82704,67542493,0,0x0,8
tick,0x7ff86ea82704,67544549,0,0x0,8
tick,0x7ff86ea82704,67546602,0,0x0,8
tick,0x7ff86ea82704,67548504,0,0x0,8
tick,0x7ff86ea82704,67550429,0,0x0,8
tick,0x7ff86ea82704,67552451,0,0x0,8
tick,0x7ff86ea82704,67554374,0,0x0,8
tick,0x7ff86ea82704,67556341,0,0x0,8
tick,0x7ff86ea82704,67558306,0,0x0,8
tick,0x7ff86ea82704,67560411,0,0x0,8
tick,0x7ff86ea82704,67562473,0,0x0,8
tick,0x7ff86ea82704,67564323,0,0x0,8
tick,0x7ff86ea82704,67566433,0,0x0,8
tick,0x7ff86ea82704,67568404,0,0x0,8
tick,0x7ff86ea82704,67570461,0,0x0,8
tick,0x7ff86ea82704,67572351,0,0x0,8
tick,0x7ff86ea82704,67574323,0,0x0,8
tick,0x7ff86ea82704,67576355,0,0x0,8
tick,0x7ff86ea82704,67578282,0,0x0,8
tick,0x7ff86ea82704,67580361,0,0x0,8
tick,0x7ff86ea82704,67582320,0,0x0,8
tick,0x7ff86ea82704,67584361,0,0x0,8
tick,0x7ff86ea82704,67586318,0,0x0,8
tick,0x7ff86ea82704,67588277,0,0x0,8
tick,0x7ff86ea82704,67590338,0,0x0,8
tick,0x7ff86ea82704,67592281,0,0x0,8
tick,0x7ff86ea82704,67594390,0,0x0,8
tick,0x7ff86ea82704,67596326,0,0x0,8
tick,0x7ff86ea82704,67598315,0,0x0,8
tick,0x7ff86ea82704,67600256,0,0x0,8
tick,0x7ff86ea82704,67602284,0,0x0,8
tick,0x7ff86ea82704,67604220,0,0x0,8
tick,0x7ff86ea82704,67606281,0,0x0,8
tick,0x7ff86ea82704,67608245,0,0x0,8
tick,0x7ff86ea82704,67610276,0,0x0,8
tick,0x7ff86ea82704,67612170,0,0x0,8
tick,0x7ff86ea82704,67614290,0,0x0,8
tick,0x7ff86ea82704,67616213,0,0x0,8
tick,0x7ff86ea82704,67618137,0,0x0,8
tick,0x7ff86ea82704,67620180,0,0x0,8
tick,0x7ff86ea82704,67622244,0,0x0,8
tick,0x7ff86ea82704,67624156,0,0x0,8
tick,0x7ff86ea82704,67626248,0,0x0,8
tick,0x7ff86ea82704,67628254,0,0x0,8
tick,0x7ff86ea82704,67630196,0,0x0,8
tick,0x7ff86ea82704,67632174,0,0x0,8
tick,0x7ff86ea82704,67634334,0,0x0,8
tick,0x7ff86ea82704,67636292,0,0x0,8
tick,0x7ff86ea82704,67638334,0,0x0,8
tick,0x7ff86ea82704,67640316,0,0x0,8
tick,0x7ff86ea82704,67642185,0,0x0,8
tick,0x7ff86ea82704,67644264,0,0x0,8
tick,0x7ff86ea82704,67646306,0,0x0,8
tick,0x7ff86ea82704,67648388,0,0x0,8
tick,0x7ff86ea82704,67650296,0,0x0,8
tick,0x7ff86ea82704,67652249,0,0x0,8
tick,0x7ff86ea82704,67654238,0,0x0,8
tick,0x7ff86ea82704,67656288,0,0x0,8
tick,0x7ff86ea82704,67658245,0,0x0,8
tick,0x7ff86ea82704,67660279,0,0x0,8
tick,0x7ff86ea82704,67662162,0,0x0,8
tick,0x7ff86ea82704,67664207,0,0x0,8
tick,0x7ff86ea82704,67666056,0,0x0,8
tick,0x7ff86ea82704,67668185,0,0x0,8
tick,0x7ff86ea82704,67670337,0,0x0,8
tick,0x7ff86ea82704,67672116,0,0x0,8
tick,0x7ff86ea82704,67674129,0,0x0,8
tick,0x7ff86ea82704,67676103,0,0x0,8
tick,0x7ff86ea82704,67678064,0,0x0,8
tick,0x7ff86ea82704,67680519,0,0x0,8
tick,0x7ff86ea82704,67682040,0,0x0,8
tick,0x7ff86ea82704,67684220,0,0x0,8
tick,0x7ff86ea82704,67686354,0,0x0,8
tick,0x7ff86ea82704,67688235,0,0x0,8
tick,0x7ff86ea82704,67690160,0,0x0,8
tick,0x7ff86ea82704,67691966,0,0x0,8
tick,0x7ff86ea82704,67694102,0,0x0,8
tick,0x7ff86ea82704,67696104,0,0x0,8
tick,0x7ff86ea82704,67698070,0,0x0,8
tick,0x7ff86ea82704,67700043,0,0x0,8
tick,0x7ff86ea82704,67701996,0,0x0,8
tick,0x7ff86ea82704,67703963,0,0x0,8
tick,0x7ff86ea82704,67706100,0,0x0,8
tick,0x7ff86ea82704,67708023,0,0x0,8
tick,0x7ff86ea82704,67710140,0,0x0,8
tick,0x7ff86ea82704,67711983,0,0x0,8
tick,0x7ff86ea82704,67713992,0,0x0,8
tick,0x7ff86ea82704,67715996,0,0x0,8
tick,0x7ff86ea82704,67718106,0,0x0,8
tick,0x7ff86ea82704,67719991,0,0x0,8
tick,0x7ff86ea82704,67722050,0,0x0,8
tick,0x7ff86ea82704,67724092,0,0x0,8
tick,0x7ff86ea82704,67728088,0,0x0,8
tick,0x7ff86ea82704,67730247,0,0x0,8
tick,0x7ff86ea82704,67732215,0,0x0,8
tick,0x7ff86ea82704,67734357,0,0x0,8
tick,0x7ff86ea82704,67736097,0,0x0,8
tick,0x7ff86ea82704,67738159,0,0x0,8
tick,0x7ff86ea82704,67740177,0,0x0,8
tick,0x7ff86ea82704,67742087,0,0x0,8
tick,0x7ff86ea82704,67744130,0,0x0,8
tick,0x7ff86ea82704,67746125,0,0x0,8
tick,0x7ff86ea82704,67748184,0,0x0,8
tick,0x7ff86ea82704,67750032,0,0x0,8
tick,0x7ff86ea82704,67752022,0,0x0,8
tick,0x7ff86ea82704,67753987,0,0x0,8
tick,0x7ff86ea82704,67756090,0,0x0,8
tick,0x7ff86ea82704,67757946,0,0x0,8
tick,0x7ff86ea82704,67760341,0,0x0,8
tick,0x7ff86ea82704,67762000,0,0x0,8
tick,0x7ff86ea82704,67764100,0,0x0,8
tick,0x7ff86ea82704,67765954,0,0x0,8
tick,0x7ff86ea82704,67768129,0,0x0,8
tick,0x7ff86ea82704,67770230,0,0x0,8
tick,0x7ff86ea82704,67772395,0,0x0,8
tick,0x7ff86ea82704,67773882,0,0x0,8
tick,0x7ff86ea82704,67776061,0,0x0,8
tick,0x7ff86ea82704,67777795,0,0x0,8
tick,0x7ff86ea82704,67780000,0,0x0,8
tick,0x7ff86ea82704,67781984,0,0x0,8
tick,0x7ff86ea82704,67784096,0,0x0,8
tick,0x7ff86ea82704,67786126,0,0x0,8
tick,0x7ff86ea82704,67787922,0,0x0,8
tick,0x7ff86ea82704,67790037,0,0x0,8
tick,0x7ff86ea82704,67791988,0,0x0,8
tick,0x7ff86ea82704,67793847,0,0x0,8
tick,0x7ff86ea82704,67795841,0,0x0,8
tick,0x7ff86ea82704,67797858,0,0x0,8
tick,0x7ff86ea82704,67799838,0,0x0,8
tick,0x7ff86ea82704,67801842,0,0x0,8
tick,0x7ff86ea82704,67803975,0,0x0,8
tick,0x7ff86ea82704,67805861,0,0x0,8
tick,0x7ff86ea82704,67807886,0,0x0,8
tick,0x7ff86ea82704,67810000,0,0x0,8
tick,0x7ff86ea82704,67811893,0,0x0,8
tick,0x7ff86ea82704,67813864,0,0x0,8
tick,0x7ff86ea82704,67815902,0,0x0,8
tick,0x7ff86ea82704,67817997,0,0x0,8
tick,0x7ff86ea82704,67819988,0,0x0,8
tick,0x7ff86ea82704,67821830,0,0x0,8
tick,0x7ff86ea82704,67823864,0,0x0,8
tick,0x7ff86ea82704,67826129,0,0x0,8
tick,0x7ff86ea82704,67827881,0,0x0,8
tick,0x7ff86ea82704,67829944,0,0x0,8
tick,0x7ff86ea82704,67831855,0,0x0,8
tick,0x7ff86ea82704,67833827,0,0x0,8
tick,0x7ff86ea82704,67835926,0,0x0,8
tick,0x7ff86ea82704,67837744,0,0x0,8
tick,0x7ff86ea82704,67839962,0,0x0,8
tick,0x7ff86ea82704,67841800,0,0x0,8
tick,0x7ff86ea82704,67844055,0,0x0,8
tick,0x7ff86ea82704,67845670,0,0x0,8
tick,0x7ff86ea82704,67847776,0,0x0,8
tick,0x7ff86ea82704,67849650,0,0x0,8
tick,0x7ff86ea82704,67851758,0,0x0,8
tick,0x7ff86ea82704,67853713,0,0x0,8
tick,0x7ff86ea82704,67855976,0,0x0,8
tick,0x7ff86ea82704,67857731,0,0x0,8
tick,0x7ff86ea82704,67859737,0,0x0,8
tick,0x7ff86ea82704,67861858,0,0x0,8
tick,0x7ff86ea82704,67863894,0,0x0,8
tick,0x7ff86ea82704,67865649,0,0x0,8
tick,0x7ff86ea82704,67867787,0,0x0,8
tick,0x7ff86ea82704,67869782,0,0x0,8
tick,0x7ff86ea82704,67871829,0,0x0,8
tick,0x7ff86ea82704,67873909,0,0x0,8
tick,0x7ff86ea82704,67875571,0,0x0,8
tick,0x7ff86ea82704,67877780,0,0x0,8
tick,0x7ff86ea82704,67879628,0,0x0,8
tick,0x7ff86ea82704,67881706,0,0x0,8
tick,0x7ff86ea82704,67883719,0,0x0,8
tick,0x7ff86ea82704,67885671,0,0x0,8
tick,0x7ff86ea82704,67887647,0,0x0,8
tick,0x7ff86ea82704,67889758,0,0x0,8
tick,0x7ff86ea82704,67891571,0,0x0,8
tick,0x7ff86ea82704,67893861,0,0x0,8
tick,0x7ff86ea82704,67895807,0,0x0,8
tick,0x7ff86ea82704,67897690,0,0x0,8
tick,0x7ff86ea82704,67899727,0,0x0,8
tick,0x7ff86ea82704,67901652,0,0x0,8
tick,0x7ff86ea82704,67903659,0,0x0,8
tick,0x7ff86ea82704,67905609,0,0x0,8
tick,0x7ff86ea82704,67907840,0,0x0,8
tick,0x7ff86ea82704,67909502,0,0x0,8
tick,0x7ff86ea82704,67911729,0,0x0,8
tick,0x7ff86ea82704,67913753,0,0x0,8
tick,0x7ff86ea82704,67915591,0,0x0,8
tick,0x7ff86ea82704,67917910,0,0x0,8
tick,0x7ff86ea82704,67919492,0,0x0,8
tick,0x7ff86ea82704,67921536,0,0x0,8
tick,0x7ff86ea82704,67923581,0,0x0,8
tick,0x7ff86ea82704,67925673,0,0x0,8
tick,0x7ff86ea82704,67927436,0,0x0,8
tick,0x7ff86ea82704,67929445,0,0x0,8
tick,0x7ff86ea82704,67931634,0,0x0,8
tick,0x7ff86ea82704,67933423,0,0x0,8
tick,0x7ff86ea82704,67935442,0,0x0,8
tick,0x7ff86ea82704,67937445,0,0x0,8
tick,0x7ff86ea82704,67939406,0,0x0,8
tick,0x7ff86ea82704,67941447,0,0x0,8
tick,0x7ff86ea82704,67943597,0,0x0,8
tick,0x7ff86ea82704,67945465,0,0x0,8
tick,0x7ff86ea82704,67947481,0,0x0,8
tick,0x7ff86ea82704,67949510,0,0x0,8
tick,0x7ff86ea82704,67951637,0,0x0,8
tick,0x7ff86ea82704,67953499,0,0x0,8
tick,0x7ff86ea82704,67955675,0,0x0,8
tick,0x7ff86ea82704,67957430,0,0x0,8
tick,0x7ff86ea82704,67959545,0,0x0,8
tick,0x7ff86ea82704,67961346,0,0x0,8
tick,0x7ff86ea82704,67963505,0,0x0,8
tick,0x7ff86ea82704,67965210,0,0x0,8
tick,0x7ff86ea82704,67967529,0,0x0,8
tick,0x7ff86ea82704,67969315,0,0x0,8
tick,0x7ff86ea82704,67971621,0,0x0,8
tick,0x7ff86ea82704,67973449,0,0x0,8
tick,0x7ff86ea82704,67975587,0,0x0,8
tick,0x7ff86ea82704,67977341,0,0x0,8
tick,0x7ff86ea82704,67979607,0,0x0,8
tick,0x7ff86ea82704,67981429,0,0x0,8
tick,0x7ff86ea82704,67983470,0,0x0,8
tick,0x7ff86ea82704,67985400,0,0x0,8
tick,0x7ff86ea82704,67987564,0,0x0,8
tick,0x7ff86ea82704,67989312,0,0x0,8
tick,0x7ff86ea82704,67991317,0,0x0,8
tick,0x7ff86ea82704,67993334,0,0x0,8
tick,0x7ff86ea82704,67995458,0,0x0,8
tick,0x7ff86ea82704,67997242,0,0x0,8
tick,0x7ff86ea82704,67999077,0,0x0,8
tick,0x7ff86ea82704,68001359,0,0x0,8
tick,0x7ff86ea82704,68003104,0,0x0,8
tick,0x7ff86ea82704,68005391,0,0x0,8
tick,0x7ff86ea82704,68007145,0,0x0,8
tick,0x7ff86ea82704,68009327,0,0x0,8
tick,0x7ff86ea82704,68011207,0,0x0,8
tick,0x7ff86ea82704,68013384,0,0x0,8
tick,0x7ff86ea82704,68015325,0,0x0,8
tick,0x7ff86ea82704,68017287,0,0x0,8
tick,0x7ff86ea82704,68019423,0,0x0,8
tick,0x7ff86ea82704,68021298,0,0x0,8
tick,0x7ff86ea82704,68023268,0,0x0,8
tick,0x7ff86ea82704,68025260,0,0x0,8
tick,0x7ff86ea82704,68027352,0,0x0,8
tick,0x7ff86ea82704,68029113,0,0x0,8
tick,0x7ff86ea82704,68031318,0,0x0,8
tick,0x7ff86ea82704,68033130,0,0x0,8
tick,0x7ff86ea82704,68035168,0,0x0,8
tick,0x7ff86ea82704,68037067,0,0x0,8
tick,0x7ff86ea82704,68039205,0,0x0,8
tick,0x7ff86ea82704,68041075,0,0x0,8
tick,0x7ff86ea82704,68043231,0,0x0,8
tick,0x7ff86ea82704,68045213,0,0x0,8
tick,0x7ff86ea82704,68047246,0,0x0,8
tick,0x7ff86ea82704,68049219,0,0x0,8
tick,0x7ff86ea82704,68051214,0,0x0,8
tick,0x7ff86ea82704,68053057,0,0x0,8
tick,0x7ff86ea82704,68055210,0,0x0,8
tick,0x7ff86ea82704,68057075,0,0x0,8
tick,0x7ff86ea82704,68059253,0,0x0,8
tick,0x7ff86ea82704,68061193,0,0x0,8
tick,0x7ff86ea82704,68063377,0,0x0,8
tick,0x7ff86ea82704,68065213,0,0x0,8
tick,0x7ff86ea82704,68067314,0,0x0,8
tick,0x7ff86ea82704,68069125,0,0x0,8
tick,0x7ff86ea82704,68071908,0,0x0,8
tick,0x7ff86ea82704,68073216,0,0x0,8
tick,0x7ff86ea82704,68075132,0,0x0,8
tick,0x7ff86ea82704,68077352,0,0x0,8
tick,0x7ff86ea82704,68079277,0,0x0,8
tick,0x7ff86ea82704,68081190,0,0x0,8
tick,0x7ff86ea82704,68083159,0,0x0,8
tick,0x7ff86ea82704,68085135,0,0x0,8
tick,0x7ff86ea82704,68087020,0,0x0,8
tick,0x7ff86ea82704,68089081,0,0x0,8
tick,0x7ff86ea82704,68090973,0,0x0,8
tick,0x7ff86ea82704,68093032,0,0x0,8
tick,0x7ff86ea82704,68095008,0,0x0,8
tick,0x7ff86ea82704,68096966,0,0x0,8
tick,0x7ff86ea82704,68099039,0,0x0,8
tick,0x7ff86ea82704,68101134,0,0x0,8
tick,0x7ff86ea82704,68103002,0,0x0,8
tick,0x7ff86ea82704,68105117,0,0x0,8
tick,0x7ff86ea82704,68106994,0,0x0,8
tick,0x7ff86ea82704,68109060,0,0x0,8
tick,0x7ff86ea82704,68111028,0,0x0,8
tick,0x7ff86ea82704,68113025,0,0x0,8
tick,0x7ff86ea82704,68114902,0,0x0,8
tick,0x7ff86ea82704,68117181,0,0x0,8
tick,0x7ff86ea82704,68118957,0,0x0,8
tick,0x7ff86ea82704,68121002,0,0x0,8
tick,0x7ff86ea82704,68123006,0,0x0,8
tick,0x7ff86ea82704,68124975,0,0x0,8
tick,0x7ff86ea82704,68126991,0,0x0,8
tick,0x7ff86ea82704,68128981,0,0x0,8
tick,0x7ff86ea82704,68131023,0,0x0,8
tick,0x7ff86ea82704,68132909,0,0x0,8
tick,0x7ff86ea82704,68135196,0,0x0,8
tick,0x7ff86ea82704,68137080,0,0x0,8
tick,0x7ff86ea82704,68139145,0,0x0,8
tick,0x7ff86ea82704,68140972,0,0x0,8
tick,0x7ff86ea82704,68142913,0,0x0,8
tick,0x7ff86ea82704,68144912,0,0x0,8
tick,0x7ff86ea82704,68147027,0,0x0,8
tick,0x7ff86ea82704,68148983,0,0x0,8
tick,0x7ff86ea82704,68151214,0,0x0,8
tick,0x7ff86ea82704,68152850,0,0x0,8
tick,0x7ff86ea82704,68154984,0,0x0,8
tick,0x7ff86ea82704,68156703,0,0x0,8
tick,0x7ff86ea82704,68158983,0,0x0,8
tick,0x7ff86ea82704,68161052,0,0x0,8
tick,0x7ff86ea82704,68162948,0,0x0,8
tick,0x7ff86ea82704,68164749,0,0x0,8
tick,0x7ff86ea82704,68167259,0,0x0,8
tick,0x7ff86ea82704,68168768,0,0x0,8
tick,0x7ff86ea82704,68171233,0,0x0,8
tick,0x7ff86ea82704,68172784,0,0x0,8
tick,0x7ff86ea82704,68174851,0,0x0,8
tick,0x7ff86ea82704,68176865,0,0x0,8
tick,0x7ff86ea82704,68178887,0,0x0,8
tick,0x7ff86ea82704,68180805,0,0x0,8
tick,0x7ff86ea82704,68182906,0,0x0,8
tick,0x7ff86ea82704,68185107,0,0x0,8
tick,0x7ff86ea82704,68186985,0,0x0,8
tick,0x7ff86ea82704,68188702,0,0x0,8
tick,0x7ff86ea82704,68191183,0,0x0,8
tick,0x7ff86ea82704,68192711,0,0x0,8
tick,0x7ff86ea82704,68194825,0,0x0,8
tick,0x7ff86ea82704,68197162,0,0x0,8
tick,0x7ff86ea82704,68198946,0,0x0,8
tick,0x7ff86ea82704,68200729,0,0x0,8
tick,0x7ff86ea82704,68202851,0,0x0,8
tick,0x7ff86ea82704,68204745,0,0x0,8
tick,0x7ff86ea82704,68206669,0,0x0,8
tick,0x7ff86ea82704,68208649,0,0x0,8
tick,0x7ff86ea82704,68210871,0,0x0,8
tick,0x7ff86ea82704,68212711,0,0x0,8
tick,0x7ff86ea82704,68216772,0,0x0,8
tick,0x7ff86ea82704,68218755,0,0x0,8
tick,0x7ff86ea82704,68220688,0,0x0,8
tick,0x7ff86ea82704,68222912,0,0x0,8
tick,0x7ff86ea82704,68224695,0,0x0,8
tick,0x7ff86ea82704,68226821,0,0x0,8
tick,0x7ff86ea82704,68228660,0,0x0,8
tick,0x7ff86ea82704,68230625,0,0x0,8
tick,0x7ff86ea82704,68232618,0,0x0,8
tick,0x7ff86ea82704,68234625,0,0x0,8
tick,0x7ff86ea82704,68236584,0,0x0,8
tick,0x7ff86ea82704,68238637,0,0x0,8
tick,0x7ff86ea82704,68240693,0,0x0,8
tick,0x7ff86ea82704,68242652,0,0x0,8
tick,0x7ff86ea82704,68244665,0,0x0,8
tick,0x7ff86ea82704,68246695,0,0x0,8
tick,0x7ff86ea82704,68248549,0,0x0,8
tick,0x7ff86ea82704,68250572,0,0x0,8
tick,0x7ff86ea82704,68252706,0,0x0,8
tick,0x7ff86ea82704,68254713,0,0x0,8
tick,0x7ff86ea82704,68256636,0,0x0,8
tick,0x7ff86ea82704,68258734,0,0x0,8
tick,0x7ff86ea82704,68260769,0,0x0,8
tick,0x7ff86ea82704,68262591,0,0x0,8
tick,0x7ff86ea82704,68264601,0,0x0,8
tick,0x7ff86ea82704,68266626,0,0x0,8
tick,0x7ff86ea82704,68268684,0,0x0,8
tick,0x7ff86ea82704,68270793,0,0x0,8
tick,0x7ff86ea82704,68272572,0,0x0,8
tick,0x7ff86ea82704,68274741,0,0x0,8
tick,0x7ff86ea82704,68276538,0,0x0,8
tick,0x7ff86ea82704,68278841,0,0x0,8
tick,0x7ff86ea82704,68280517,0,0x0,8
tick,0x7ff86ea82704,68282567,0,0x0,8
tick,0x7ff86ea82704,68284475,0,0x0,8
tick,0x7ff86ea82704,68286547,0,0x0,8
tick,0x7ff86ea82704,68288532,0,0x0,8
tick,0x7ff86ea82704,68290468,0,0x0,8
tick,0x7ff86ea82704,68292505,0,0x0,8
tick,0x7ff86ea82704,68294468,0,0x0,8
tick,0x7ff86ea82704,68296410,0,0x0,8
tick,0x7ff86ea82704,68298523,0,0x0,8
tick,0x7ff86ea82704,68300392,0,0x0,8
tick,0x7ff86ea82704,68302470,0,0x0,8
tick,0x7ff86ea82704,68304483,0,0x0,8
tick,0x7ff86ea82704,68306420,0,0x0,8
tick,0x7ff86ea82704,68308445,0,0x0,8
tick,0x7ff86ea82704,68310454,0,0x0,8
tick,0x7ff86ea82704,68312460,0,0x0,8
tick,0x7ff86ea82704,68314466,0,0x0,8
tick,0x7ff86ea82704,68316425,0,0x0,8
tick,0x7ff86ea82704,68318429,0,0x0,8
tick,0x7ff86ea82704,68320500,0,0x0,8
tick,0x7ff86ea82704,68322481,0,0x0,8
tick,0x7ff86ea82704,68324404,0,0x0,8
tick,0x7ff86ea82704,68326409,0,0x0,8
tick,0x7ff86ea82704,68328428,0,0x0,8
tick,0x7ff86ea82704,68330447,0,0x0,8
tick,0x7ff86ea82704,68332480,0,0x0,8
tick,0x7ff86ea82704,68334468,0,0x0,8
tick,0x7ff86ea82704,68336712,0,0x0,8
tick,0x7ff86ea82704,68338482,0,0x0,8
tick,0x7ff86ea82704,68340557,0,0x0,8
tick,0x7ff86ea82704,68342409,0,0x0,8
tick,0x7ff86ea82704,68344469,0,0x0,8
tick,0x7ff86ea82704,68346369,0,0x0,8
tick,0x7ff86ea82704,68348311,0,0x0,8
tick,0x7ff86ea82704,68350173,0,0x0,8
tick,0x7ff86ea82704,68352486,0,0x0,8
tick,0x7ff86ea82704,68354277,0,0x0,8
tick,0x7ff86ea82704,68356426,0,0x0,8
tick,0x7ff86ea82704,68358263,0,0x0,8
tick,0x7ff86ea82704,68360317,0,0x0,8
tick,0x7ff86ea82704,68362355,0,0x0,8
tick,0x7ff86ea82704,68364332,0,0x0,8
tick,0x7ff86ea82704,68366205,0,0x0,8
tick,0x7ff86ea82704,68368421,0,0x0,8
tick,0x7ff86ea82704,68370306,0,0x0,8
tick,0x7ff86ea82704,68372194,0,0x0,8
tick,0x7ff86ea82704,68374264,0,0x0,8
tick,0x7ff86ea82704,68376318,0,0x0,8
tick,0x7ff86ea82704,68378134,0,0x0,8
tick,0x7ff86ea82704,68380285,0,0x0,8
tick,0x7ff86ea82704,68382226,0,0x0,8
tick,0x7ff86ea82704,68384280,0,0x0,8
tick,0x7ff86ea82704,68386233,0,0x0,8
tick,0x7ff86ea82704,68388360,0,0x0,8
tick,0x7ff86ea82704,68390158,0,0x0,8
tick,0x7ff86ea82704,68392409,0,0x0,8
tick,0x7ff86ea82704,68394066,0,0x0,8
tick,0x7ff86ea82704,68396226,0,0x0,8
tick,0x7ff86ea82704,68398177,0,0x0,8
tick,0x7ff86ea82704,68400189,0,0x0,8
tick,0x7ff86ea82704,68402138,0,0x0,8
tick,0x7ff86ea82704,68404241,0,0x0,8
tick,0x7ff86ea82704,68406102,0,0x0,8
tick,0x7ff86ea82704,68408266,0,0x0,8
tick,0x7ff86ea82704,68410135,0,0x0,8
tick,0x7ff86ea82704,68412285,0,0x0,8
tick,0x7ff86ea82704,68414132,0,0x0,8
tick,0x7ff86ea82704,68416174,0,0x0,8
tick,0x7ff86ea82704,68418314,0,0x0,8
tick,0x7ff86ea82704,68420085,0,0x0,8
tick,0x7ff86ea82704,68422181,0,0x0,8
tick,0x7ff86ea82704,68424191,0,0x0,8
tick,0x7ff86ea82704,68426412,0,0x0,8
tick,0x7ff86ea82704,68428474,0,0x0,8
tick,0x7ff86ea82704,68430476,0,0x0,8
tick,0x7ff86ea82704,68432245,0,0x0,8
tick,0x7ff86ea82704,68434117,0,0x0,8
tick,0x7ff86ea82704,68436230,0,0x0,8
tick,0x7ff86ea82704,68438238,0,0x0,8
tick,0x7ff86ea82704,68439972,0,0x0,8
tick,0x7ff86ea82704,68442051,0,0x0,8
tick,0x7ff86ea82704,68444068,0,0x0,8
tick,0x7ff86ea82704,68446084,0,0x0,8
tick,0x7ff86ea82704,68447969,0,0x0,8
tick,0x7ff86ea82704,68450142,0,0x0,8
tick,0x7ff86ea82704,68452025,0,0x0,8
tick,0x7ff86ea82704,68454062,0,0x0,8
tick,0x7ff86ea82704,68456070,0,0x0,8
tick,0x7ff86ea82704,68458050,0,0x0,8
tick,0x7ff86ea82704,68459989,0,0x0,8
tick,0x7ff86ea82704,68461980,0,0x0,8
tick,0x7ff86ea82704,68464099,0,0x0,8
tick,0x7ff86ea82704,68466114,0,0x0,8
tick,0x7ff86ea82704,68468135,0,0x0,8
tick,0x7ff86ea82704,68470244,0,0x0,8
tick,0x7ff86ea82704,68471915,0,0x0,8
tick,0x7ff86ea82704,68473964,0,0x0,8
tick,0x7ff86ea82704,68475975,0,0x0,8
tick,0x7ff86ea82704,68478102,0,0x0,8
tick,0x7ff86ea82704,68479998,0,0x0,8
tick,0x7ff86ea82704,68481930,0,0x0,8
tick,0x7ff86ea82704,68483993,0,0x0,8
tick,0x7ff86ea82704,68486040,0,0x0,8
tick,0x7ff86ea82704,68487895,0,0x0,8
tick,0x7ff86ea82704,68489918,0,0x0,8
tick,0x7ff86ea82704,68492068,0,0x0,8
tick,0x7ff86ea82704,68494076,0,0x0,8
tick,0x7ff86ea82704,68495903,0,0x0,8
tick,0x7ff86ea82704,68497913,0,0x0,8
tick,0x7ff86ea82704,68499864,0,0x0,8
tick,0x7ff86ea82704,68501926,0,0x0,8
tick,0x7ff86ea82704,68504058,0,0x0,8
tick,0x7ff86ea82704,68505916,0,0x0,8
tick,0x7ff86ea82704,68507965,0,0x0,8
tick,0x7ff86ea82704,68509820,0,0x0,8
tick,0x7ff86ea82704,68512062,0,0x0,8
tick,0x7ff86ea82704,68513900,0,0x0,8
tick,0x7ff86ea82704,68516016,0,0x0,8
tick,0x7ff86ea82704,68517912,0,0x0,8
tick,0x7ff86ea82704,68519996,0,0x0,8
tick,0x7ff86ea82704,68521887,0,0x0,8
tick,0x7ff86ea82704,68523846,0,0x0,8
tick,0x7ff86ea82704,68525771,0,0x0,8
tick,0x7ff86ea82704,68527892,0,0x0,8
tick,0x7ff86ea82704,68529953,0,0x0,8
tick,0x7ff86ea82704,68531866,0,0x0,8
tick,0x7ff86ea82704,68533850,0,0x0,8
tick,0x7ff86ea82704,68535883,0,0x0,8
tick,0x7ff86ea82704,68537759,0,0x0,8
tick,0x7ff86ea82704,68539872,0,0x0,8
tick,0x7ff86ea82704,68541967,0,0x0,8
tick,0x7ff86ea82704,68543784,0,0x0,8
tick,0x7ff86ea82704,68545919,0,0x0,8
tick,0x7ff86ea82704,68547827,0,0x0,8
tick,0x7ff86ea82704,68550219,0,0x0,8
tick,0x7ff86ea82704,68551778,0,0x0,8
tick,0x7ff86ea82704,68553853,0,0x0,8
tick,0x7ff86ea82704,68555800,0,0x0,8
tick,0x7ff86ea82704,68557873,0,0x0,8
tick,0x7ff86ea82704,68560064,0,0x0,8
tick,0x7ff86ea82704,68561645,0,0x0,8
tick,0x7ff86ea82704,68563802,0,0x0,8
tick,0x7ff86ea82704,68565735,0,0x0,8
tick,0x7ff86ea82704,68567816,0,0x0,8
tick,0x7ff86ea82704,68569747,0,0x0,8
tick,0x7ff86ea82704,68571792,0,0x0,8
tick,0x7ff86ea82704,68573605,0,0x0,8
tick,0x7ff86ea82704,68575751,0,0x0,8
tick,0x7ff86ea82704,68577713,0,0x0,8
tick,0x7ff86ea82704,68579762,0,0x0,8
tick,0x7ff86ea82704,68581687,0,0x0,8
tick,0x7ff86ea82704,68583747,0,0x0,8
tick,0x7ff86ea82704,68585568,0,0x0,8
tick,0x7ff86ea82704,68587668,0,0x0,8
tick,0x7ff86ea82704,68589710,0,0x0,8
tick,0x7ff86ea82704,68591537,0,0x0,8
tick,0x7ff86ea82704,68593658,0,0x0,8
tick,0x7ff86ea82704,68595494,0,0x0,8
tick,0x7ff86ea82704,68597704,0,0x0,8
tick,0x7ff86ea82704,68599522,0,0x0,8
tick,0x7ff86ea82704,68601631,0,0x0,8
tick,0x7ff86ea82704,68603467,0,0x0,8
tick,0x7ff86ea82704,68605664,0,0x0,8
tick,0x7ff86ea82704,68607549,0,0x0,8
tick,0x7ff86ea82704,68609569,0,0x0,8
tick,0x7ff86ea82704,68611610,0,0x0,8
tick,0x7ff86ea82704,68613454,0,0x0,8
tick,0x7ff86ea82704,68615585,0,0x0,8
tick,0x7ff86ea82704,68617464,0,0x0,8
tick,0x7ff86ea82704,68619609,0,0x0,8
tick,0x7ff86ea82704,68621501,0,0x0,8
tick,0x7ff86ea82704,68623719,0,0x0,8
tick,0x7ff86ea82704,68625610,0,0x0,8
tick,0x7ff86ea82704,68627736,0,0x0,8
tick,0x7ff86ea82704,68629553,0,0x0,8
tick,0x7ff86ea82704,68631674,0,0x0,8
tick,0x7ff86ea82704,68633579,0,0x0,8
tick,0x7ff86ea82704,68635695,0,0x0,8
tick,0x7ff86ea82704,68637514,0,0x0,8
tick,0x7ff86ea82704,68639607,0,0x0,8
tick,0x7ff86ea82704,68641648,0,0x0,8
tick,0x7ff86ea82704,68643374,0,0x0,8
tick,0x7ff86ea82704,68645560,0,0x0,8
tick,0x7ff86ea82704,68647469,0,0x0,8
tick,0x7ff86ea82704,68649656,0,0x0,8
tick,0x7ff86ea82704,68651478,0,0x0,8
tick,0x7ff86ea82704,68653574,0,0x0,8
tick,0x7ff86ea82704,68655360,0,0x0,8
tick,0x7ff86ea82704,68657519,0,0x0,8
tick,0x7ff86ea82704,68659422,0,0x0,8
tick,0x7ff86ea82704,68661506,0,0x0,8
tick,0x7ff86ea82704,68663450,0,0x0,8
tick,0x7ff86ea82704,68665596,0,0x0,8
tick,0x7ff86ea82704,68667355,0,0x0,8
tick,0x7ff86ea82704,68669476,0,0x0,8
tick,0x7ff86ea82704,68671327,0,0x0,8
tick,0x7ff86ea82704,68673488,0,0x0,8
tick,0x7ff86ea82704,68675466,0,0x0,8
tick,0x7ff86ea82704,68677421,0,0x0,8
tick,0x7ff86ea82704,68679402,0,0x0,8
tick,0x7ff86ea82704,68681397,0,0x0,8
tick,0x7ff86ea82704,68685242,0,0x0,8
tick,0x7ff86ea82704,68686199,0,0x0,8
tick,0x7ff86ea82704,68688212,0,0x0,8
tick,0x7ff86ea82704,68690245,0,0x0,8
tick,0x7ff86ea82704,68692263,0,0x0,8
tick,0x7ff86ea82704,68694194,0,0x0,8
tick,0x7ff86ea82704,68696259,0,0x0,8
tick,0x7ff86ea82704,68698186,0,0x0,8
tick,0x7ff86ea82704,68700338,0,0x0,8
tick,0x7ff86ea82704,68702268,0,0x0,8
tick,0x7ff86ea82704,68704228,0,0x0,8
tick,0x7ff86ea82704,68706223,0,0x0,8
tick,0x7ff86ea82704,68708340,0,0x0,8
tick,0x7ff86ea82704,68710456,0,0x0,8
tick,0x7ff86ea82704,68712179,0,0x0,8
tick,0x7ff86ea82704,68714204,0,0x0,8
tick,0x7ff86ea82704,68716117,0,0x0,8
tick,0x7ff86ea82704,68718125,0,0x0,8
tick,0x7ff86ea82704,68720240,0,0x0,8
tick,0x7ff86ea82704,68722305,0,0x0,8
tick,0x7ff86ea82704,68724278,0,0x0,8
tick,0x7ff86ea82704,68726221,0,0x0,8
tick,0x7ff86ea82704,68728262,0,0x0,8
tick,0x7ff86ea82704,68730148,0,0x0,8
tick,0x7ff86ea82704,68732275,0,0x0,8
tick,0x7ff86ea82704,68734504,0,0x0,8
tick,0x7ff86ea82704,68736536,0,0x0,8
tick,0x7ff86ea82704,68738116,0,0x0,8
tick,0x7ff86ea82704,68740355,0,0x0,8
tick,0x7ff86ea82704,68742510,0,0x0,8
tick,0x7ff86ea82704,68745301,0,0x0,8
tick,0x7ff86ea82704,68746295,0,0x0,8
tick,0x7ff86ea82704,68749118,0,0x0,8
tick,0x7ff86ea82704,68750368,0,0x0,8
tick,0x7ff86ea82704,68752281,0,0x0,8
tick,0x7ff86ea82704,68754223,0,0x0,8
tick,0x7ff86ea82704,68756326,0,0x0,8
tick,0x7ff86ea82704,68758180,0,0x0,8
tick,0x7ff86ea82704,68760163,0,0x0,8
tick,0x7ff86ea82704,68762432,0,0x0,8
tick,0x7ff86ea82704,68764327,0,0x0,8
tick,0x7ff86ea82704,68766303,0,0x0,8
tick,0x7ff86ea82704,68768615,0,0x0,8
tick,0x7ff86ea82704,68770046,0,0x0,8
tick,0x7ff86ea82704,68772310,0,0x0,8
tick,0x7ff86ea82704,68774112,0,0x0,8
tick,0x7ff86ea82704,68776179,0,0x0,8
tick,0x7ff86ea82704,68778366,0,0x0,8
tick,0x7ff86ea82704,68780211,0,0x0,8
tick,0x7ff86ea82704,68782195,0,0x0,8
tick,0x7ff86ea82704,68784254,0,0x0,8
tick,0x7ff86ea82704,68786033,0,0x0,8
tick,0x7ff86ea82704,68788458,0,0x0,8
tick,0x7ff86ea82704,68790254,0,0x0,8
tick,0x7ff86ea82704,68792310,0,0x0,8
tick,0x7ff86ea82704,68794388,0,0x0,8
tick,0x7ff86ea82704,68796270,0,0x0,8
tick,0x7ff86ea82704,68798307,0,0x0,8
tick,0x7ff86ea82704,68800098,0,0x0,8
tick,0x7ff86ea82704,68802790,0,0x0,8
tick,0x7ff86ea82704,68804108,0,0x0,8
tick,0x7ff86ea82704,68806123,0,0x0,8
tick,0x7ff86ea82704,68808404,0,0x0,8
tick,0x7ff86ea82704,68809942,0,0x0,8
tick,0x7ff86ea82704,68812526,0,0x0,8
tick,0x7ff86ea82704,68813986,0,0x0,8
tick,0x7ff86ea82704,68816003,0,0x0,8
tick,0x7ff86ea82704,68817909,0,0x0,8
tick,0x7ff86ea82704,68820307,0,0x0,8
tick,0x7ff86ea82704,68821978,0,0x0,8
tick,0x7ff86ea82704,68824260,0,0x0,8
tick,0x7ff86ea82704,68825952,0,0x0,8
tick,0x7ff86ea82704,68828195,0,0x0,8
tick,0x7ff86ea82704,68830807,0,0x0,8
tick,0x7ff86ea82704,68832130,0,0x0,8
tick,0x7ff86ea82704,68834034,0,0x0,8
tick,0x7ff86ea82704,68835976,0,0x0,8
tick,0x7ff86ea82704,68838081,0,0x0,8
tick,0x7ff86ea82704,68840435,0,0x0,8
tick,0x7ff86ea82704,68877465,0,0x0,8
tick,0x7ff86ea82704,68877491,0,0x0,8
tick,0x7ff86ea82704,68877513,0,0x0,8
tick,0x7ff86ea82704,68877566,0,0x0,8
tick,0x7ff86ea82704,68877593,0,0x0,8
tick,0x7ff86ea82704,68877613,0,0x0,8
tick,0x7ff86ea82704,68877632,0,0x0,8
tick,0x7ff86ea82704,68877649,0,0x0,8
tick,0x7ff86ea82704,68877666,0,0x0,8
tick,0x7ff86ea82704,68877683,0,0x0,8
tick,0x7ff86ea82704,68877701,0,0x0,8
tick,0x7ff86ea82704,68877719,0,0x0,8
tick,0x7ff86ea82704,68877737,0,0x0,8
tick,0x7ff86ea82704,68877755,0,0x0,8
tick,0x7ff86ea82704,68879825,0,0x0,8
tick,0x7ff86ea82704,68881689,0,0x0,8
tick,0x7ff86ea82704,68884115,0,0x0,8
tick,0x7ff86ea82704,68886426,0,0x0,8
tick,0x7ff86ea82704,68887772,0,0x0,8
tick,0x7ff86ea82704,68889627,0,0x0,8
tick,0x7ff86ea82704,68891658,0,0x0,8
tick,0x7ff86ea82704,68893662,0,0x0,8
tick,0x7ff86ea82704,68895856,0,0x0,8
tick,0x7ff86ea82704,68897901,0,0x0,8
tick,0x7ff86ea82704,68899576,0,0x0,8
tick,0x7ff86ea82704,68901607,0,0x0,8
tick,0x7ff86ea82704,68903545,0,0x0,8
tick,0x7ff86ea82704,68905546,0,0x0,8
tick,0x7ff86ea82704,68907599,0,0x0,8
tick,0x7ff86ea82704,68909648,0,0x0,8
tick,0x7ff86ea82704,68911644,0,0x0,8
tick,0x7ff86ea82704,68913593,0,0x0,8
tick,0x7ff86ea82704,68915581,0,0x0,8
tick,0x7ff86ea82704,68917500,0,0x0,8
tick,0x7ff86ea82704,68919536,0,0x0,8
tick,0x7ff86ea82704,68921500,0,0x0,8
tick,0x7ff86ea82704,68923480,0,0x0,8
tick,0x7ff86ea82704,68925556,0,0x0,8
tick,0x7ff86ea82704,68927515,0,0x0,8
tick,0x7ff86ea82704,68929481,0,0x0,8
tick,0x7ff86ea82704,68931465,0,0x0,8
tick,0x7ff86ea82704,68933483,0,0x0,8
tick,0x7ff86ea82704,68935560,0,0x0,8
tick,0x7ff86ea82704,68937489,0,0x0,8
tick,0x7ff86ea82704,68939500,0,0x0,8
tick,0x7ff86ea82704,68941552,0,0x0,8
tick,0x7ff86ea82704,68943572,0,0x0,8
tick,0x7ff86ea82704,68945571,0,0x0,8
tick,0x7ff86ea82704,68947513,0,0x0,8
tick,0x7ff86ea82704,68949445,0,0x0,8
tick,0x7ff86ea82704,68951545,0,0x0,8
tick,0x7ff86ea82704,68953507,0,0x0,8
tick,0x7ff86ea82704,68955647,0,0x0,8
tick,0x7ff86ea82704,68957601,0,0x0,8
tick,0x7ff86ea82704,68959680,0,0x0,8
tick,0x7ff86ea82704,68962092,0,0x0,8
tick,0x7ff86ea82704,68963561,0,0x0,8
tick,0x7ff86ea82704,68965561,0,0x0,8
tick,0x7ff86ea82704,68967731,0,0x0,8
tick,0x7ff86ea82704,68969866,0,0x0,8
tick,0x7ff86ea82704,68971509,0,0x0,8
tick,0x7ff86ea82704,68973410,0,0x0,8
tick,0x7ff86ea82704,68975551,0,0x0,8
tick,0x7ff86ea82704,68977643,0,0x0,8
tick,0x7ff86ea82704,68979627,0,0x0,8
tick,0x7ff86ea82704,68981444,0,0x0,8
tick,0x7ff86ea82704,68983475,0,0x0,8
tick,0x7ff86ea82704,68985459,0,0x0,8
tick,0x7ff86ea82704,68987514,0,0x0,8
tick,0x7ff86ea82704,68989406,0,0x0,8
tick,0x7ff86ea82704,68991519,0,0x0,8
tick,0x7ff86ea82704,68993480,0,0x0,8
tick,0x7ff86ea82704,68995741,0,0x0,8
tick,0x7ff86ea82704,68997530,0,0x0,8
tick,0x7ff86ea82704,68999541,0,0x0,8
tick,0x7ff86ea82704,69001460,0,0x0,8
tick,0x7ff86ea82704,69003430,0,0x0,8
tick,0x7ff86ea82704,69005634,0,0x0,8
tick,0x7ff86ea82704,69007415,0,0x0,8
tick,0x7ff86ea82704,69009664,0,0x0,8
tick,0x7ff86ea82704,69011362,0,0x0,8
tick,0x7ff86ea82704,69013590,0,0x0,8
tick,0x7ff86ea82704,69015384,0,0x0,8
tick,0x7ff86ea82704,69017537,0,0x0,8
tick,0x7ff86ea82704,69019388,0,0x0,8
tick,0x7ff86ea82704,69021547,0,0x0,8
tick,0x7ff86ea82704,69023460,0,0x0,8
tick,0x7ff86ea82704,69025386,0,0x0,8
tick,0x7ff86ea82704,69027373,0,0x0,8
tick,0x7ff86ea82704,69029507,0,0x0,8
tick,0x7ff86ea82704,69031276,0,0x0,8
tick,0x7ff86ea82704,69033457,0,0x0,8
tick,0x7ff86ea82704,69035381,0,0x0,8
tick,0x7ff86ea82704,69037367,0,0x0,8
tick,0x7ff86ea82704,69039460,0,0x0,8
tick,0x7ff86ea82704,69041407,0,0x0,8
tick,0x7ff86ea82704,69043514,0,0x0,8
tick,0x7ff86ea82704,69045745,0,0x0,8
tick,0x7ff86ea82704,69047271,0,0x0,8
tick,0x7ff86ea82704,69049497,0,0x0,8
tick,0x7ff86ea82704,69051654,0,0x0,8
tick,0x7ff86ea82704,69053353,0,0x0,8
tick,0x7ff86ea82704,69055454,0,0x0,8
tick,0x7ff86ea82704,69057252,0,0x0,8
tick,0x7ff86ea82704,69059361,0,0x0,8
tick,0x7ff86ea82704,69061319,0,0x0,8
tick,0x7ff86ea82704,69063406,0,0x0,8
tick,0x7ff86ea82704,69065275,0,0x0,8
tick,0x7ff86ea82704,69067478,0,0x0,8
tick,0x7ff86ea82704,69069256,0,0x0,8
tick,0x7ff86ea82704,69071172,0,0x0,8
tick,0x7ff86ea82704,69073367,0,0x0,8
tick,0x7ff86ea82704,69075316,0,0x0,8
tick,0x7ff86ea82704,69077299,0,0x0,8
tick,0x7ff86ea82704,69079219,0,0x0,8
tick,0x7ff86ea82704,69081379,0,0x0,8
tick,0x7ff86ea82704,69083187,0,0x0,8
tick,0x7ff86ea82704,69085265,0,0x0,8
tick,0x7ff86ea82704,69087588,0,0x0,8
tick,0x7ff86ea82704,69089337,0,0x0,8
tick,0x7ff86ea82704,69091361,0,0x0,8
tick,0x7ff86ea82704,69093309,0,0x0,8
tick,0x7ff86ea82704,69095311,0,0x0,8
tick,0x7ff86ea82704,69097339,0,0x0,8
tick,0x7ff86ea82704,69099211,0,0x0,8
tick,0x7ff86ea82704,69101092,0,0x0,8
tick,0x7ff86ea82704,69103452,0,0x0,8
tick,0x7ff86ea82704,69105238,0,0x0,8
tick,0x7ff86ea82704,69107134,0,0x0,8
tick,0x7ff86ea82704,69109154,0,0x0,8
tick,0x7ff86ea82704,69111309,0,0x0,8
tick,0x7ff86ea82704,69113194,0,0x0,8
tick,0x7ff86ea82704,69115204,0,0x0,8
tick,0x7ff86ea82704,69117154,0,0x0,8
tick,0x7ff86ea82704,69119150,0,0x0,8
tick,0x7ff86ea82704,69121073,0,0x0,8
tick,0x7ff86ea82704,69123196,0,0x0,8
tick,0x7ff86ea82704,69125172,0,0x0,8
tick,0x7ff86ea82704,69127392,0,0x0,8
tick,0x7ff86ea82704,69129091,0,0x0,8
tick,0x7ff86ea82704,69131119,0,0x0,8
tick,0x7ff86ea82704,69133070,0,0x0,8
tick,0x7ff86ea82704,69135051,0,0x0,8
tick,0x7ff86ea82704,69137179,0,0x0,8
tick,0x7ff86ea82704,69139025,0,0x0,8
tick,0x7ff86ea82704,69141069,0,0x0,8
tick,0x7ff86ea82704,69143025,0,0x0,8
tick,0x7ff86ea82704,69145099,0,0x0,8
tick,0x7ff86ea82704,69147061,0,0x0,8
tick,0x7ff86ea82704,69149012,0,0x0,8
tick,0x7ff86ea82704,69150995,0,0x0,8
tick,0x7ff86ea82704,69153210,0,0x0,8
tick,0x7ff86ea82704,69155136,0,0x0,8
tick,0x7ff86ea82704,69156968,0,0x0,8
tick,0x7ff86ea82704,69159056,0,0x0,8
tick,0x7ff86ea82704,69161193,0,0x0,8
tick,0x7ff86ea82704,69163144,0,0x0,8
tick,0x7ff86ea82704,69165034,0,0x0,8
tick,0x7ff86ea82704,69167035,0,0x0,8
tick,0x7ff86ea82704,69169042,0,0x0,8
tick,0x7ff86ea82704,69171032,0,0x0,8
tick,0x7ff86ea82704,69173112,0,0x0,8
tick,0x7ff86ea82704,69175247,0,0x0,8
tick,0x7ff86ea82704,69177292,0,0x0,8
tick,0x7ff86ea82704,69179031,0,0x0,8
tick,0x7ff86ea82704,69187547,0,0x0,8
tick,0x7ff86ea82704,69189540,0,0x0,8
tick,0x7ff86ea82704,69191629,0,0x0,8
tick,0x7ff86ea82704,69194059,0,0x0,8
tick,0x7ff86ea82704,69196552,0,0x0,8
tick,0x7ff86ea82704,69198117,0,0x0,8
tick,0x7ff86ea82704,69200435,0,0x0,8
tick,0x7ff86ea82704,69202028,0,0x0,8
tick,0x7ff86ea82704,69211086,0,0x0,8
tick,0x7ff86ea82704,69211151,0,0x0,8
tick,0x7ff86ea82704,69211174,0,0x0,8
tick,0x7ff86ea82704,69211194,0,0x0,8
tick,0x7ff86ea82704,69211959,0,0x0,8
tick,0x7ff86ea82704,69213967,0,0x0,8
tick,0x7ff86ea82704,69215901,0,0x0,8
tick,0x7ff86ea82704,69217851,0,0x0,8
tick,0x7ff86ea82704,69219879,0,0x0,8
tick,0x7ff86ea82704,69221938,0,0x0,8
tick,0x7ff86ea82704,69224549,0,0x0,8
tick,0x7ff86ea82704,69226326,0,0x0,8
tick,0x7ff86ea82704,69228287,0,0x0,8
tick,0x7ff86ea82704,69230032,0,0x0,8
tick,0x7ff86ea82704,69232013,0,0x0,8
tick,0x7ff86ea82704,69233972,0,0x0,8
tick,0x7ff86ea82704,69235826,0,0x0,8
tick,0x7ff86ea82704,69237876,0,0x0,8
tick,0x7ff86ea82704,69239795,0,0x0,8
tick,0x7ff86ea82704,69241921,0,0x0,8
tick,0x7ff86ea82704,69244291,0,0x0,8
tick,0x7ff86ea82704,69246134,0,0x0,8
tick,0x7ff86ea82704,69247834,0,0x0,8
tick,0x7ff86ea82704,69250135,0,0x0,8
tick,0x7ff86ea82704,69251906,0,0x0,8
tick,0x7ff86ea82704,69253862,0,0x0,8
tick,0x7ff86ea82704,69255836,0,0x0,8
tick,0x7ff86ea82704,69257826,0,0x0,8
tick,0x7ff86ea82704,69259880,0,0x0,8
tick,0x7ff86ea82704,69262205,0,0x0,8
tick,0x7ff86ea82704,69263860,0,0x0,8
tick,0x7ff86ea82704,69266409,0,0x0,8
tick,0x7ff86ea82704,69267743,0,0x0,8
tick,0x7ff86ea82704,69269680,0,0x0,8
tick,0x7ff86ea82704,69271834,0,0x0,8
tick,0x7ff86ea82704,69273872,0,0x0,8
tick,0x7ff86ea82704,69275804,0,0x0,8
tick,0x7ff86ea82704,69277803,0,0x0,8
tick,0x7ff86ea82704,69279863,0,0x0,8
tick,0x7ff86ea82704,69281770,0,0x0,8
tick,0x7ff86ea82704,69283875,0,0x0,8
tick,0x7ff86ea82704,69285661,0,0x0,8
tick,0x7ff86ea82704,69287811,0,0x0,8
tick,0x7ff86ea82704,69289621,0,0x0,8
tick,0x7ff86ea82704,69291657,0,0x0,8
tick,0x7ff86ea82704,69293884,0,0x0,8
tick,0x7ff86ea82704,69295652,0,0x0,8
tick,0x7ff86ea82704,69297626,0,0x0,8
tick,0x7ff86ea82704,69299811,0,0x0,8
tick,0x7ff86ea82704,69301749,0,0x0,8
tick,0x7ff86ea82704,69303712,0,0x0,8
tick,0x7ff86ea82704,69305603,0,0x0,8
tick,0x7ff86ea82704,69307685,0,0x0,8
tick,0x7ff86ea82704,69309890,0,0x0,8
tick,0x7ff86ea82704,69311818,0,0x0,8
tick,0x7ff86ea82704,69313641,0,0x0,8
tick,0x7ff86ea82704,69315647,0,0x0,8
tick,0x7ff86ea82704,69317800,0,0x0,8
tick,0x7ff86ea82704,69319628,0,0x0,8
tick,0x7ff86ea82704,69321610,0,0x0,8
tick,0x7ff86ea82704,69323603,0,0x0,8
tick,0x7ff86ea82704,69325666,0,0x0,8
tick,0x7ff86ea82704,69327634,0,0x0,8
tick,0x7ff86ea82704,69329656,0,0x0,8
tick,0x7ff86ea82704,69331594,0,0x0,8
tick,0x7ff86ea82704,69333814,0,0x0,8
tick,0x7ff86ea82704,69335649,0,0x0,8
tick,0x7ff86ea82704,69337557,0,0x0,8
tick,0x7ff86ea82704,69339637,0,0x0,8
tick,0x7ff86ea82704,69341574,0,0x0,8
tick,0x7ff86ea82704,69343546,0,0x0,8
tick,0x7ff86ea82704,69345580,0,0x0,8
tick,0x7ff86ea82704,69347597,0,0x0,8
tick,0x7ff86ea82704,69349705,0,0x0,8
tick,0x7ff86ea82704,69351678,0,0x0,8
tick,0x7ff86ea82704,69353485,0,0x0,8
tick,0x7ff86ea82704,69355543,0,0x0,8
tick,0x7ff86ea82704,69357627,0,0x0,8
tick,0x7ff86ea82704,69359462,0,0x0,8
tick,0x7ff86ea82704,69361585,0,0x0,8
tick,0x7ff86ea82704,69363476,0,0x0,8
tick,0x7ff86ea82704,69365653,0,0x0,8
tick,0x7ff86ea82704,69367673,0,0x0,8
tick,0x7ff86ea82704,69369755,0,0x0,8
tick,0x7ff86ea82704,69371593,0,0x0,8
tick,0x7ff86ea82704,69373539,0,0x0,8
tick,0x7ff86ea82704,69375540,0,0x0,8
tick,0x7ff86ea82704,69377471,0,0x0,8
tick,0x7ff86ea82704,69379442,0,0x0,8
tick,0x7ff86ea82704,69381614,0,0x0,8
tick,0x7ff86ea82704,69383467,0,0x0,8
tick,0x7ff86ea82704,69385608,0,0x0,8
tick,0x7ff86ea82704,69387604,0,0x0,8
tick,0x7ff86ea82704,69389862,0,0x0,8
tick,0x7ff86ea82704,69391501,0,0x0,8
tick,0x7ff86ea82704,69393567,0,0x0,8
tick,0x7ff86ea82704,69395711,0,0x0,8
tick,0x7ff86ea82704,69397570,0,0x0,8
tick,0x7ff86ea82704,69399501,0,0x0,8
tick,0x7ff86ea82704,69401468,0,0x0,8
tick,0x7ff86ea82704,69403943,0,0x0,8
tick,0x7ff86ea82704,69405758,0,0x0,8
tick,0x7ff86ea82704,69407563,0,0x0,8
tick,0x7ff86ea82704,69409557,0,0x0,8
tick,0x7ff86ea82704,69411619,0,0x0,8
tick,0x7ff86ea82704,69413672,0,0x0,8
tick,0x7ff86ea82704,69415456,0,0x0,8
tick,0x7ff86ea82704,69417497,0,0x0,8
tick,0x7ff86ea82704,69419488,0,0x0,8
tick,0x7ff86ea82704,69421436,0,0x0,8
tick,0x7ff86ea82704,69423469,0,0x0,8
tick,0x7ff86ea82704,69425501,0,0x0,8
tick,0x7ff86ea82704,69427906,0,0x0,8
tick,0x7ff86ea82704,69429442,0,0x0,8
tick,0x7ff86ea82704,69431451,0,0x0,8
tick,0x7ff86ea82704,69433326,0,0x0,8
tick,0x7ff86ea82704,69435532,0,0x0,8
tick,0x7ff86ea82704,69437300,0,0x0,8
tick,0x7ff86ea82704,69439424,0,0x0,8
tick,0x7ff86ea82704,69441316,0,0x0,8
tick,0x7ff86ea82704,69443443,0,0x0,8
tick,0x7ff86ea82704,69445247,0,0x0,8
tick,0x7ff86ea82704,69447639,0,0x0,8
tick,0x7ff86ea82704,69449440,0,0x0,8
tick,0x7ff86ea82704,69451532,0,0x0,8
tick,0x7ff86ea82704,69453412,0,0x0,8
tick,0x7ff86ea82704,69455263,0,0x0,8
tick,0x7ff86ea82704,69457270,0,0x0,8
tick,0x7ff86ea82704,69459541,0,0x0,8
tick,0x7ff86ea82704,69461363,0,0x0,8
tick,0x7ff86ea82704,69463634,0,0x0,8
tick,0x7ff86ea82704,69465209,0,0x0,8
tick,0x7ff86ea82704,69467449,0,0x0,8
tick,0x7ff86ea82704,69469343,0,0x0,8
tick,0x7ff86ea82704,69471477,0,0x0,8
tick,0x7ff86ea82704,69473372,0,0x0,8
tick,0x7ff86ea82704,69475428,0,0x0,8
tick,0x7ff86ea82704,69477424,0,0x0,8
tick,0x7ff86ea82704,69479372,0,0x0,8
tick,0x7ff86ea82704,69481272,0,0x0,8
tick,0x7ff86ea82704,69483550,0,0x0,8
tick,0x7ff86ea82704,69485312,0,0x0,8
tick,0x7ff86ea82704,69487223,0,0x0,8
tick,0x7ff86ea82704,69489229,0,0x0,8
tick,0x7ff86ea82704,69491332,0,0x0,8
tick,0x7ff86ea82704,69493238,0,0x0,8
tick,0x7ff86ea82704,69495400,0,0x0,8
tick,0x7ff86ea82704,69497514,0,0x0,8
tick,0x7ff86ea82704,69499293,0,0x0,8
tick,0x7ff86ea82704,69501114,0,0x0,8
tick,0x7ff86ea82704,69503254,0,0x0,8
tick,0x7ff86ea82704,69505203,0,0x0,8
tick,0x7ff86ea82704,69507275,0,0x0,8
tick,0x7ff86ea82704,69509228,0,0x0,8
tick,0x7ff86ea82704,69511359,0,0x0,8
tick,0x7ff86ea82704,69513108,0,0x0,8
tick,0x7ff86ea82704,69515345,0,0x0,8
tick,0x7ff86ea82704,69517062,0,0x0,8
tick,0x7ff86ea82704,69519113,0,0x0,8
tick,0x7ff86ea82704,69521295,0,0x0,8
tick,0x7ff86ea82704,69523263,0,0x0,8
tick,0x7ff86ea82704,69525277,0,0x0,8
tick,0x7ff86ea82704,69527337,0,0x0,8
tick,0x7ff86ea82704,69529131,0,0x0,8
tick,0x7ff86ea82704,69531884,0,0x0,8
tick,0x7ff86ea82704,69533730,0,0x0,8
tick,0x7ff86ea82704,69535333,0,0x0,8
tick,0x7ff86ea82704,69537088,0,0x0,8
tick,0x7ff86ea82704,69539251,0,0x0,8
tick,0x7ff86ea82704,69541147,0,0x0,8
tick,0x7ff86ea82704,69543170,0,0x0,8
tick,0x7ff86ea82704,69545210,0,0x0,8
tick,0x7ff86ea82704,69547186,0,0x0,8
tick,0x7ff86ea82704,69549094,0,0x0,8
tick,0x7ff86ea82704,69551185,0,0x0,8
tick,0x7ff86ea82704,69553196,0,0x0,8
tick,0x7ff86ea82704,69555254,0,0x0,8
tick,0x7ff86ea82704,69557290,0,0x0,8
tick,0x7ff86ea82704,69559238,0,0x0,8
tick,0x7ff86ea82704,69561362,0,0x0,8
tick,0x7ff86ea82704,69563371,0,0x0,8
tick,0x7ff86ea82704,69565195,0,0x0,8
tick,0x7ff86ea82704,69567094,0,0x0,8
tick,0x7ff86ea82704,69569277,0,0x0,8
tick,0x7ff86ea82704,69571052,0,0x0,8
tick,0x7ff86ea82704,69573083,0,0x0,8
tick,0x7ff86ea82704,69574977,0,0x0,8
tick,0x7ff86ea82704,69577198,0,0x0,8
tick,0x7ff86ea82704,69579667,0,0x0,8
tick,0x7ff86ea82704,69581436,0,0x0,8
tick,0x7ff86ea82704,69582961,0,0x0,8
tick,0x7ff86ea82704,69585318,0,0x0,8
tick,0x7ff86ea82704,69587022,0,0x0,8
tick,0x7ff86ea82704,69588972,0,0x0,8
tick,0x7ff86ea82704,69591003,0,0x0,8
tick,0x7ff86ea82704,69593232,0,0x0,8
tick,0x7ff86ea82704,69595206,0,0x0,8
tick,0x7ff86ea82704,69597249,0,0x0,8
tick,0x7ff86ea82704,69599305,0,0x0,8
tick,0x7ff86ea82704,69600956,0,0x0,8
tick,0x7ff86ea82704,69603224,0,0x0,8
tick,0x7ff86ea82704,69604995,0,0x0,8
tick,0x7ff86ea82704,69607363,0,0x0,8
tick,0x7ff86ea82704,69608949,0,0x0,8
tick,0x7ff86ea82704,69610962,0,0x0,8
tick,0x7ff86ea82704,69612897,0,0x0,8
tick,0x7ff86ea82704,69615030,0,0x0,8
tick,0x7ff86ea82704,69616881,0,0x0,8
tick,0x7ff86ea82704,69618923,0,0x0,8
tick,0x7ff86ea82704,69620811,0,0x0,8
tick,0x7ff86ea82704,69623073,0,0x0,8
tick,0x7ff86ea82704,69624734,0,0x0,8
tick,0x7ff86ea82704,69627191,0,0x0,8
tick,0x7ff86ea82704,69628967,0,0x0,8
tick,0x7ff86ea82704,69631351,0,0x0,8
tick,0x7ff86ea82704,69632881,0,0x0,8
tick,0x7ff86ea82704,69634908,0,0x0,8
tick,0x7ff86ea82704,69636805,0,0x0,8
tick,0x7ff86ea82704,69639148,0,0x0,8
tick,0x7ff86ea82704,69640751,0,0x0,8
tick,0x7ff86ea82704,69643094,0,0x0,8
tick,0x7ff86ea82704,69645351,0,0x0,8
tick,0x7ff86ea82704,69647267,0,0x0,8
tick,0x7ff86ea82704,69649040,0,0x0,8
tick,0x7ff86ea82704,69650964,0,0x0,8
tick,0x7ff86ea82704,69653055,0,0x0,8
tick,0x7ff86ea82704,69655008,0,0x0,8
tick,0x7ff86ea82704,69656805,0,0x0,8
tick,0x7ff86ea82704,69659641,0,0x0,8
tick,0x7ff86ea82704,69661049,0,0x0,8
tick,0x7ff86ea82704,69662868,0,0x0,8
tick,0x7ff86ea82704,69665267,0,0x0,8
tick,0x7ff86ea82704,69666811,0,0x0,8
tick,0x7ff86ea82704,69668620,0,0x0,8
tick,0x7ff86ea82704,69670627,0,0x0,8
tick,0x7ff86ea82704,69672810,0,0x0,8
tick,0x7ff86ea82704,69674621,0,0x0,8
tick,0x7ff86ea82704,69676633,0,0x0,8
tick,0x7ff86ea82704,69680098,0,0x0,8
tick,0x7ff86ea82704,69681150,0,0x0,8
tick,0x7ff86ea82704,69682805,0,0x0,8
tick,0x7ff86ea82704,69684754,0,0x0,8
tick,0x7ff86ea82704,69686929,0,0x0,8
tick,0x7ff86ea82704,69688609,0,0x0,8
tick,0x7ff86ea82704,69690858,0,0x0,8
tick,0x7ff86ea82704,69692678,0,0x0,8
tick,0x7ff86ea82704,69697132,0,0x0,8
tick,0x7ff86ea82704,69698588,0,0x0,8
tick,0x7ff86ea82704,69701038,0,0x0,8
tick,0x7ff86ea82704,69702502,0,0x0,8
tick,0x7ff86ea82704,69704527,0,0x0,8
tick,0x7ff86ea82704,69706498,0,0x0,8
tick,0x7ff86ea82704,69713561,0,0x0,8
tick,0x7ff86ea82704,69715836,0,0x0,8
tick,0x7ff86ea82704,69717830,0,0x0,8
tick,0x7ff86ea82704,69719818,0,0x0,8
tick,0x7ff86ea82704,69721656,0,0x0,8
tick,0x7ff86ea82704,69723742,0,0x0,8
tick,0x7ff86ea82704,69725959,0,0x0,8
tick,0x7ff86ea82704,69728508,0,0x0,8
tick,0x7ff86ea82704,69730098,0,0x0,8
tick,0x7ff86ea82704,69731589,0,0x0,8
tick,0x7ff86ea82704,69733602,0,0x0,8
tick,0x7ff86ea82704,69735624,0,0x0,8
tick,0x7ff86ea82704,69737455,0,0x0,8
tick,0x7ff86ea82704,69739635,0,0x0,8
tick,0x7ff86ea82704,69741632,0,0x0,8
tick,0x7ff86ea82704,69743524,0,0x0,8
tick,0x7ff86ea82704,69746567,0,0x0,8
tick,0x7ff86ea82704,69747393,0,0x0,8
tick,0x7ff86ea82704,69749526,0,0x0,8
tick,0x7ff86ea82704,69751443,0,0x0,8
tick,0x7ff86ea82704,69753490,0,0x0,8
tick,0x7ff86ea82704,69755463,0,0x0,8
tick,0x7ff86ea82704,69757549,0,0x0,8
tick,0x7ff86ea82704,69759457,0,0x0,8
tick,0x7ff86ea82704,69763095,0,0x0,8
tick,0x7ff86ea82704,69764533,0,0x0,8
tick,0x7ff86ea82704,69766536,0,0x0,8
tick,0x7ff86ea82704,69768399,0,0x0,8
tick,0x7ff86ea82704,69770437,0,0x0,8
tick,0x7ff86ea82704,69772442,0,0x0,8
tick,0x7ff86ea82704,69774332,0,0x0,8
tick,0x7ff86ea82704,69777645,0,0x0,8
tick,0x7ff86ea82704,69781070,0,0x0,8
tick,0x7ff86ea82704,69781713,0,0x0,8
tick,0x7ff86ea82704,69783536,0,0x0,8
tick,0x7ff86ea82704,69785613,0,0x0,8
tick,0x7ff86ea82704,69787601,0,0x0,8
tick,0x7ff86ea82704,69789767,0,0x0,8
tick,0x7ff86ea82704,69791454,0,0x0,8
tick,0x7ff86ea82704,69793391,0,0x0,8
tick,0x7ff86ea82704,69796304,0,0x0,8
tick,0x7ff86ea82704,69797768,0,0x0,8
tick,0x7ff86ea82704,69799512,0,0x0,8
tick,0x7ff86ea82704,69802002,0,0x0,8
tick,0x7ff86ea82704,69803500,0,0x0,8
tick,0x7ff86ea82704,69805601,0,0x0,8
tick,0x7ff86ea82704,69807597,0,0x0,8
tick,0x7ff86ea82704,69809459,0,0x0,8
tick,0x7ff86ea82704,69813061,0,0x0,8
tick,0x7ff86ea82704,69813547,0,0x0,8
tick,0x7ff86ea82704,69815606,0,0x0,8
tick,0x7ff86ea82704,69817734,0,0x0,8
tick,0x7ff86ea82704,69819437,0,0x0,8
tick,0x7ff86ea82704,69821420,0,0x0,8
tick,0x7ff86ea82704,69823379,0,0x0,8
tick,0x7ff86ea82704,69825599,0,0x0,8
tick,0x7ff86ea82704,69828593,0,0x0,8
tick,0x7ff86ea82704,69829736,0,0x0,8
tick,0x7ff86ea82704,69831315,0,0x0,8
tick,0x7ff86ea82704,69833368,0,0x0,8
tick,0x7ff86ea82704,69835330,0,0x0,8
tick,0x7ff86ea82704,69837318,0,0x0,8
tick,0x7ff86ea82704,69839414,0,0x0,8
tick,0x7ff86ea82704,69841484,0,0x0,8
tick,0x7ff86ea82704,69843437,0,0x0,8
tick,0x7ff86ea82704,69845518,0,0x0,8
tick,0x7ff86ea82704,69848128,0,0x0,8
tick,0x7ff86ea82704,69850188,0,0x0,8
tick,0x7ff86ea82704,69852178,0,0x0,8
tick,0x7ff86ea82704,69854155,0,0x0,8
tick,0x7ff86ea82704,69856048,0,0x0,8
tick,0x7ff86ea82704,69858082,0,0x0,8
tick,0x7ff86ea82704,69860046,0,0x0,8
tick,0x7ff86ea82704,69862365,0,0x0,8
tick,0x7ff86ea82704,69864115,0,0x0,8
tick,0x7ff86ea82704,69866146,0,0x0,8
tick,0x7ff86ea82704,69868100,0,0x0,8
tick,0x7ff86ea82704,69870025,0,0x0,8
tick,0x7ff86ea82704,69872127,0,0x0,8
tick,0x7ff86ea82704,69874092,0,0x0,8
tick,0x7ff86ea82704,69876089,0,0x0,8
tick,0x7ff86ea82704,69878577,0,0x0,8
tick,0x7ff86ea82704,69880043,0,0x0,8
tick,0x7ff86ea82704,69882124,0,0x0,8
tick,0x7ff86ea82704,69884083,0,0x0,8
tick,0x7ff86ea82704,69886039,0,0x0,8
tick,0x7ff86ea82704,69887941,0,0x0,8
tick,0x7ff86ea82704,69890071,0,0x0,8
tick,0x7ff86ea82704,69892036,0,0x0,8
tick,0x7ff86ea82704,69894592,0,0x0,8
tick,0x7ff86ea82704,69896231,0,0x0,8
tick,0x7ff86ea82704,69898291,0,0x0,8
tick,0x7ff86ea82704,69900067,0,0x0,8
tick,0x7ff86ea82704,69902065,0,0x0,8
tick,0x7ff86ea82704,69904098,0,0x0,8
tick,0x7ff86ea82704,69906031,0,0x0,8
tick,0x7ff86ea82704,69908067,0,0x0,8
tick,0x7ff86ea82704,69910049,0,0x0,8
tick,0x7ff86ea82704,69912207,0,0x0,8
tick,0x7ff86ea82704,69914340,0,0x0,8
tick,0x7ff86ea82704,69915920,0,0x0,8
tick,0x7ff86ea82704,69918113,0,0x0,8
tick,0x7ff86ea82704,69920026,0,0x0,8
tick,0x7ff86ea82704,69922017,0,0x0,8
tick,0x7ff86ea82704,69924147,0,0x0,8
tick,0x7ff86ea82704,69926426,0,0x0,8
tick,0x7ff86ea82704,69930091,0,0x0,8
tick,0x7ff86ea82704,69932118,0,0x0,8
tick,0x7ff86ea82704,69933984,0,0x0,8
tick,0x7ff86ea82704,69936031,0,0x0,8
tick,0x7ff86ea82704,69937895,0,0x0,8
tick,0x7ff86ea82704,69940102,0,0x0,8
tick,0x7ff86ea82704,69941986,0,0x0,8
tick,0x7ff86ea82704,69945130,0,0x0,8
tick,0x7ff86ea82704,69947135,0,0x0,8
tick,0x7ff86ea82704,69950149,0,0x0,8
tick,0x7ff86ea82704,69952337,0,0x0,8
tick,0x7ff86ea82704,69954237,0,0x0,8
tick,0x7ff86ea82704,69955952,0,0x0,8
tick,0x7ff86ea82704,69958820,0,0x0,8
tick,0x7ff86ea82704,69961254,0,0x0,8
tick,0x7ff86ea82704,69962966,0,0x0,8
tick,0x7ff86ea82704,69964939,0,0x0,8
tick,0x7ff86ea82704,69966995,0,0x0,8
tick,0x7ff86ea82704,69969201,0,0x0,8
tick,0x7ff86ea82704,69971011,0,0x0,8
tick,0x7ff86ea82704,69972966,0,0x0,8
tick,0x7ff86ea82704,69974763,0,0x0,8
tick,0x7ff86ea82704,69976806,0,0x0,8
tick,0x7ff86ea82704,69979330,0,0x0,8
tick,0x7ff86ea82704,69980840,0,0x0,8
tick,0x7ff86ea82704,69982712,0,0x0,8
tick,0x7ff86ea82704,69984749,0,0x0,8
tick,0x7ff86ea82704,69986744,0,0x0,8
tick,0x7ff86ea82704,69988968,0,0x0,8
tick,0x7ff86ea82704,69990738,0,0x0,8
tick,0x7ff86ea82704,69992806,0,0x0,8
tick,0x7ff86ea82704,69995019,0,0x0,8
tick,0x7ff86ea82704,69996770,0,0x0,8
tick,0x7ff86ea82704,69998748,0,0x0,8
tick,0x7ff86ea82704,70000822,0,0x0,8
tick,0x7ff86ea82704,70003244,0,0x0,8
tick,0x7ff86ea82704,70004848,0,0x0,8
tick,0x7ff86ea82704,70006724,0,0x0,8
tick,0x7ff86ea82704,70008806,0,0x0,8
tick,0x7ff86ea82704,70010885,0,0x0,8
tick,0x7ff86ea82704,70013314,0,0x0,8
tick,0x7ff86ea82704,70014638,0,0x0,8
tick,0x7ff86ea82704,70016716,0,0x0,8
tick,0x7ff86ea82704,70018680,0,0x0,8
tick,0x7ff86ea82704,70020690,0,0x0,8
tick,0x7ff86ea82704,70022678,0,0x0,8
tick,0x7ff86ea82704,70024646,0,0x0,8
tick,0x7ff86ea82704,70026633,0,0x0,8
tick,0x7ff86ea82704,70028925,0,0x0,8
tick,0x7ff86ea82704,70030577,0,0x0,8
tick,0x7ff86ea82704,70032660,0,0x0,8
tick,0x7ff86ea82704,70034556,0,0x0,8
tick,0x7ff86ea82704,70036803,0,0x0,8
tick,0x7ff86ea82704,70038537,0,0x0,8
tick,0x7ff86ea82704,70040640,0,0x0,8
tick,0x7ff86ea82704,70042508,0,0x0,8
tick,0x7ff86ea82704,70045136,0,0x0,8
tick,0x7ff86ea82704,70046665,0,0x0,8
tick,0x7ff86ea82704,70048541,0,0x0,8
tick,0x7ff86ea82704,70050586,0,0x0,8
tick,0x7ff86ea82704,70052548,0,0x0,8
tick,0x7ff86ea82704,70054572,0,0x0,8
tick,0x7ff86ea82704,70056628,0,0x0,8
tick,0x7ff86ea82704,70058457,0,0x0,8
tick,0x7ff86ea82704,70060767,0,0x0,8
tick,0x7ff86ea82704,70062855,0,0x0,8
tick,0x7ff86ea82704,70064567,0,0x0,8
tick,0x7ff86ea82704,70066510,0,0x0,8
tick,0x7ff86ea82704,70069876,0,0x0,8
tick,0x7ff86ea82704,70072611,0,0x0,8
tick,0x7ff86ea82704,70074529,0,0x0,8
tick,0x7ff86ea82704,70076590,0,0x0,8
tick,0x7ff86ea82704,70079084,0,0x0,8
tick,0x7ff86ea82704,70080819,0,0x0,8
tick,0x7ff86ea82704,70082468,0,0x0,8
tick,0x7ff86ea82704,70084574,0,0x0,8
tick,0x7ff86ea82704,70086519,0,0x0,8
tick,0x7ff86ea82704,70088839,0,0x0,8
tick,0x7ff86ea82704,70090529,0,0x0,8
tick,0x7ff86ea82704,70092635,0,0x0,8
tick,0x7ff86ea82704,70094924,0,0x0,8
tick,0x7ff86ea82704,70096920,0,0x0,8
tick,0x7ff86ea82704,70098748,0,0x0,8
tick,0x7ff86ea82704,70101238,0,0x0,8
tick,0x7ff86ea82704,70102893,0,0x0,8
tick,0x7ff86ea82704,70104542,0,0x0,8
tick,0x7ff86ea82704,70106542,0,0x0,8
tick,0x7ff86ea82704,70108469,0,0x0,8
tick,0x7ff86ea82704,70113778,0,0x0,8
tick,0x7ff86ea82704,70113805,0,0x0,8
tick,0x7ff86ea82704,70114957,0,0x0,8
tick,0x7ff86ea82704,70116802,0,0x0,8
tick,0x7ff86ea82704,70118497,0,0x0,8
tick,0x7ff86ea82704,70120604,0,0x0,8
tick,0x7ff86ea82704,70122635,0,0x0,8
tick,0x7ff86ea82704,70124554,0,0x0,8
tick,0x7ff86ea82704,70126806,0,0x0,8
tick,0x7ff86ea82704,70129690,0,0x0,8
tick,0x7ff86ea82704,70131710,0,0x0,8
tick,0x7ff86ea82704,70133683,0,0x0,8
tick,0x7ff86ea82704,70135620,0,0x0,8
tick,0x7ff86ea82704,70137641,0,0x0,8
tick,0x7ff86ea82704,70139842,0,0x0,8
tick,0x7ff86ea82704,70141799,0,0x0,8
tick,0x7ff86ea82704,70144330,0,0x0,8
tick,0x7ff86ea82704,70146529,0,0x0,8
tick,0x7ff86ea82704,70148649,0,0x0,8
tick,0x7ff86ea82704,70150817,0,0x0,8
tick,0x7ff86ea82704,70152545,0,0x0,8
tick,0x7ff86ea82704,70154388,0,0x0,8
tick,0x7ff86ea82704,70156398,0,0x0,8
tick,0x7ff86ea82704,70158429,0,0x0,8
tick,0x7ff86ea82704,70162122,0,0x0,8
tick,0x7ff86ea82704,70163143,0,0x0,8
tick,0x7ff86ea82704,70164646,0,0x0,8
tick,0x7ff86ea82704,70166595,0,0x0,8
tick,0x7ff86ea82704,70168742,0,0x0,8
tick,0x7ff86ea82704,70170391,0,0x0,8
tick,0x7ff86ea82704,70173527,0,0x0,8
tick,0x7ff86ea82704,70174579,0,0x0,8
tick,0x7ff86ea82704,70176543,0,0x0,8
tick,0x7ff86ea82704,70179167,0,0x0,8
tick,0x7ff86ea82704,70180488,0,0x0,8
tick,0x7ff86ea82704,70182178,0,0x0,8
tick,0x7ff86ea82704,70184381,0,0x0,8
tick,0x7ff86ea82704,70186206,0,0x0,8
tick,0x7ff86ea82704,70188238,0,0x0,8
tick,0x7ff86ea82704,70190204,0,0x0,8
tick,0x7ff86ea82704,70192144,0,0x0,8
tick,0x7ff86ea82704,70195451,0,0x0,8
tick,0x7ff86ea82704,70196439,0,0x0,8
tick,0x7ff86ea82704,70198411,0,0x0,8
tick,0x7ff86ea82704,70200390,0,0x0,8
tick,0x7ff86ea82704,70202488,0,0x0,8
tick,0x7ff86ea82704,70204680,0,0x0,8
tick,0x7ff86ea82704,70206482,0,0x0,8
tick,0x7ff86ea82704,70208386,0,0x0,8
tick,0x7ff86ea82704,70210279,0,0x0,8
tick,0x7ff86ea82704,70212686,0,0x0,8
tick,0x7ff86ea82704,70214632,0,0x0,8
tick,0x7ff86ea82704,70216364,0,0x0,8
tick,0x7ff86ea82704,70218276,0,0x0,8
tick,0x7ff86ea82704,70220489,0,0x0,8
tick,0x7ff86ea82704,70222638,0,0x0,8
tick,0x7ff86ea82704,70224390,0,0x0,8
tick,0x7ff86ea82704,70226465,0,0x0,8
tick,0x7ff86ea82704,70229394,0,0x0,8
tick,0x7ff86ea82704,70230071,0,0x0,8
tick,0x7ff86ea82704,70232028,0,0x0,8
tick,0x7ff86ea82704,70234107,0,0x0,8
tick,0x7ff86ea82704,70236078,0,0x0,8
tick,0x7ff86ea82704,70238031,0,0x0,8
tick,0x7ff86ea82704,70240237,0,0x0,8
tick,0x7ff86ea82704,70242050,0,0x0,8
tick,0x7ff86ea82704,70246092,0,0x0,8
tick,0x7ff86ea82704,70246129,0,0x0,8
tick,0x7ff86ea82704,70248095,0,0x0,8
tick,0x7ff86ea82704,70250053,0,0x0,8
tick,0x7ff86ea82704,70252165,0,0x0,8
tick,0x7ff86ea82704,70253970,0,0x0,8
tick,0x7ff86ea82704,70256300,0,0x0,8
tick,0x7ff86ea82704,70258068,0,0x0,8
tick,0x7ff86ea82704,70260499,0,0x0,8
tick,0x7ff86ea82704,70262311,0,0x0,8
tick,0x7ff86ea82704,70264086,0,0x0,8
tick,0x7ff86ea82704,70265968,0,0x0,8
tick,0x7ff86ea82704,70268020,0,0x0,8
tick,0x7ff86ea82704,70270144,0,0x0,8
tick,0x7ff86ea82704,70271994,0,0x0,8
tick,0x7ff86ea82704,70274250,0,0x0,8
tick,0x7ff86ea82704,70276024,0,0x0,8
tick,0x7ff86ea82704,70279760,0,0x0,8
tick,0x7ff86ea82704,70282067,0,0x0,8
tick,0x7ff86ea82704,70284006,0,0x0,8
tick,0x7ff86ea82704,70285953,0,0x0,8
tick,0x7ff86ea82704,70288023,0,0x0,8
tick,0x7ff86ea82704,70289936,0,0x0,8
tick,0x7ff86ea82704,70291977,0,0x0,8
tick,0x7ff86ea82704,70294177,0,0x0,8
tick,0x7ff86ea82704,70296181,0,0x0,8
tick,0x7ff86ea82704,70297897,0,0x0,8
tick,0x7ff86ea82704,70299983,0,0x0,8
tick,0x7ff86ea82704,70301929,0,0x0,8
tick,0x7ff86ea82704,70303984,0,0x0,8
tick,0x7ff86ea82704,70305930,0,0x0,8
tick,0x7ff86ea82704,70307870,0,0x0,8
tick,0x7ff86ea82704,70310003,0,0x0,8
tick,0x7ff86ea82704,70312200,0,0x0,8
tick,0x7ff86ea82704,70314034,0,0x0,8
tick,0x7ff86ea82704,70315845,0,0x0,8
tick,0x7ff86ea82704,70317953,0,0x0,8
tick,0x7ff86ea82704,70319944,0,0x0,8
tick,0x7ff86ea82704,70321950,0,0x0,8
tick,0x7ff86ea82704,70323922,0,0x0,8
tick,0x7ff86ea82704,70325956,0,0x0,8
tick,0x7ff86ea82704,70329360,0,0x0,8
tick,0x7ff86ea82704,70329907,0,0x0,8
tick,0x7ff86ea82704,70332014,0,0x0,8
tick,0x7ff86ea82704,70333904,0,0x0,8
tick,0x7ff86ea82704,70336031,0,0x0,8
tick,0x7ff86ea82704,70338226,0,0x0,8
tick,0x7ff86ea82704,70340004,0,0x0,8
tick,0x7ff86ea82704,70342049,0,0x0,8
tick,0x7ff86ea82704,70345394,0,0x0,8
tick,0x7ff86ea82704,70346534,0,0x0,8
tick,0x7ff86ea82704,70347821,0,0x0,8
tick,0x7ff86ea82704,70349961,0,0x0,8
tick,0x7ff86ea82704,70351920,0,0x0,8
tick,0x7ff86ea82704,70353947,0,0x0,8
tick,0x7ff86ea82704,70355786,0,0x0,8
tick,0x7ff86ea82704,70357839,0,0x0,8
tick,0x7ff86ea82704,70359803,0,0x0,8
tick,0x7ff86ea82704,70363293,0,0x0,8
tick,0x7ff86ea82704,70364958,0,0x0,8
tick,0x7ff86ea82704,70366959,0,0x0,8
tick,0x7ff86ea82704,70369042,0,0x0,8
tick,0x7ff86ea82704,70370880,0,0x0,8
tick,0x7ff86ea82704,70373054,0,0x0,8
tick,0x7ff86ea82704,70374812,0,0x0,8
tick,0x7ff86ea82704,70376935,0,0x0,8
tick,0x7ff86ea82704,70379707,0,0x0,8
tick,0x7ff86ea82704,70381794,0,0x0,8
tick,0x7ff86ea82704,70383761,0,0x0,8
tick,0x7ff86ea82704,70386003,0,0x0,8
tick,0x7ff86ea82704,70388082,0,0x0,8
tick,0x7ff86ea82704,70389883,0,0x0,8
tick,0x7ff86ea82704,70391832,0,0x0,8
tick,0x7ff86ea82704,70395709,0,0x0,8
tick,0x7ff86ea82704,70396733,0,0x0,8
tick,0x7ff86ea82704,70398641,0,0x0,8
tick,0x7ff86ea82704,70401093,0,0x0,8
tick,0x7ff86ea82704,70402658,0,0x0,8
tick,0x7ff86ea82704,70404680,0,0x0,8
tick,0x7ff86ea82704,70406619,0,0x0,8
tick,0x7ff86ea82704,70408836,0,0x0,8
tick,0x7ff86ea82704,70411433,0,0x0,8
tick,0x7ff86ea82704,70413195,0,0x0,8
tick,0x7ff86ea82704,70415011,0,0x0,8
tick,0x7ff86ea82704,70417043,0,0x0,8
tick,0x7ff86ea82704,70418837,0,0x0,8
tick,0x7ff86ea82704,70420681,0,0x0,8
tick,0x7ff86ea82704,70422832,0,0x0,8
tick,0x7ff86ea82704,70424874,0,0x0,8
tick,0x7ff86ea82704,70426735,0,0x0,8
tick,0x7ff86ea82704,70429619,0,0x0,8
tick,0x7ff86ea82704,70430806,0,0x0,8
tick,0x7ff86ea82704,70432778,0,0x0,8
tick,0x7ff86ea82704,70434666,0,0x0,8
tick,0x7ff86ea82704,70436762,0,0x0,8
tick,0x7ff86ea82704,70438816,0,0x0,8
tick,0x7ff86ea82704,70440666,0,0x0,8
tick,0x7ff86ea82704,70442692,0,0x0,8
tick,0x7ff86ea82704,70446229,0,0x0,8
tick,0x7ff86ea82704,70446756,0,0x0,8
tick,0x7ff86ea82704,70448732,0,0x0,8
tick,0x7ff86ea82704,70450812,0,0x0,8
tick,0x7ff86ea82704,70452944,0,0x0,8
tick,0x7ff86ea82704,70454938,0,0x0,8
tick,0x7ff86ea82704,70456720,0,0x0,8
tick,0x7ff86ea82704,70458641,0,0x0,8
tick,0x7ff86ea82704,70461945,0,0x0,8
tick,0x7ff86ea82704,70463026,0,0x0,8
tick,0x7ff86ea82704,70464581,0,0x0,8
tick,0x7ff86ea82704,70466611,0,0x0,8
tick,0x7ff86ea82704,70468553,0,0x0,8
tick,0x7ff86ea82704,70470615,0,0x0,8
tick,0x7ff86ea82704,70472830,0,0x0,8
tick,0x7ff86ea82704,70474623,0,0x0,8
tick,0x7ff86ea82704,70476802,0,0x0,8
tick,0x7ff86ea82704,70479231,0,0x0,8
tick,0x7ff86ea82704,70480410,0,0x0,8
tick,0x7ff86ea82704,70482535,0,0x0,8
tick,0x7ff86ea82704,70484446,0,0x0,8
tick,0x7ff86ea82704,70486326,0,0x0,8
tick,0x7ff86ea82704,70488537,0,0x0,8
tick,0x7ff86ea82704,70490371,0,0x0,8
tick,0x7ff86ea82704,70492784,0,0x0,8
tick,0x7ff86ea82704,70494582,0,0x0,8
tick,0x7ff86ea82704,70496354,0,0x0,8
tick,0x7ff86ea82704,70498510,0,0x0,8
tick,0x7ff86ea82704,70500514,0,0x0,8
tick,0x7ff86ea82704,70502378,0,0x0,8
tick,0x7ff86ea82704,70504328,0,0x0,8
tick,0x7ff86ea82704,70506344,0,0x0,8
tick,0x7ff86ea82704,70508353,0,0x0,8
tick,0x7ff86ea82704,70510310,0,0x0,8
tick,0x7ff86ea82704,70512359,0,0x0,8
tick,0x7ff86ea82704,70514455,0,0x0,8
tick,0x7ff86ea82704,70516283,0,0x0,8
tick,0x7ff86ea82704,70518368,0,0x0,8
tick,0x7ff86ea82704,70520360,0,0x0,8
tick,0x7ff86ea82704,70522405,0,0x0,8
tick,0x7ff86ea82704,70524341,0,0x0,8
tick,0x7ff86ea82704,70526536,0,0x0,8
tick,0x7ff86ea82704,70528286,0,0x0,8
tick,0x7ff86ea82704,70530301,0,0x0,8
tick,0x7ff86ea82704,70532319,0,0x0,8
tick,0x7ff86ea82704,70534712,0,0x0,8
tick,0x7ff86ea82704,70536336,0,0x0,8
tick,0x7ff86ea82704,70538390,0,0x0,8
tick,0x7ff86ea82704,70540318,0,0x0,8
tick,0x7ff86ea82704,70542337,0,0x0,8
tick,0x7ff86ea82704,70544298,0,0x0,8
tick,0x7ff86ea82704,70546540,0,0x0,8
tick,0x7ff86ea82704,70548389,0,0x0,8
tick,0x7ff86ea82704,70550471,0,0x0,8
tick,0x7ff86ea82704,70552316,0,0x0,8
tick,0x7ff86ea82704,70554343,0,0x0,8
tick,0x7ff86ea82704,70556436,0,0x0,8
tick,0x7ff86ea82704,70558267,0,0x0,8
tick,0x7ff86ea82704,70560294,0,0x0,8
tick,0x7ff86ea82704,70562383,0,0x0,8
tick,0x7ff86ea82704,70564474,0,0x0,8
tick,0x7ff86ea82704,70566277,0,0x0,8
tick,0x7ff86ea82704,70568315,0,0x0,8
tick,0x7ff86ea82704,70570301,0,0x0,8
tick,0x7ff86ea82704,70572186,0,0x0,8
tick,0x7ff86ea82704,70574302,0,0x0,8
tick,0x7ff86ea82704,70576166,0,0x0,8
tick,0x7ff86ea82704,70578522,0,0x0,8
tick,0x7ff86ea82704,70580285,0,0x0,8
tick,0x7ff86ea82704,70582452,0,0x0,8
tick,0x7ff86ea82704,70584287,0,0x0,8
tick,0x7ff86ea82704,70586211,0,0x0,8
tick,0x7ff86ea82704,70588306,0,0x0,8
tick,0x7ff86ea82704,70590502,0,0x0,8
tick,0x7ff86ea82704,70592195,0,0x0,8
tick,0x7ff86ea82704,70594425,0,0x0,8
tick,0x7ff86ea82704,70596694,0,0x0,8
tick,0x7ff86ea82704,70598283,0,0x0,8
tick,0x7ff86ea82704,70600360,0,0x0,8
tick,0x7ff86ea82704,70602267,0,0x0,8
tick,0x7ff86ea82704,70604307,0,0x0,8
tick,0x7ff86ea82704,70609253,0,0x0,8
tick,0x7ff86ea82704,70611420,0,0x0,8
tick,0x7ff86ea82704,70613531,0,0x0,8
tick,0x7ff86ea82704,70615288,0,0x0,8
tick,0x7ff86ea82704,70617162,0,0x0,8
tick,0x7ff86ea82704,70619607,0,0x0,8
tick,0x7ff86ea82704,70621284,0,0x0,8
tick,0x7ff86ea82704,70623321,0,0x0,8
tick,0x7ff86ea82704,70625311,0,0x0,8
tick,0x7ff86ea82704,70627693,0,0x0,8
tick,0x7ff86ea82704,70629473,0,0x0,8
tick,0x7ff86ea82704,70631293,0,0x0,8
tick,0x7ff86ea82704,70633209,0,0x0,8
tick,0x7ff86ea82704,70635297,0,0x0,8
tick,0x7ff86ea82704,70637256,0,0x0,8
tick,0x7ff86ea82704,70639387,0,0x0,8
tick,0x7ff86ea82704,70641466,0,0x0,8
tick,0x7ff86ea82704,70643242,0,0x0,8
tick,0x7ff86ea82704,70645238,0,0x0,8
tick,0x7ff86ea82704,70647259,0,0x0,8
tick,0x7ff86ea82704,70649199,0,0x0,8
tick,0x7ff86ea82704,70651171,0,0x0,8
tick,0x7ff86ea82704,70653367,0,0x0,8
tick,0x7ff86ea82704,70655216,0,0x0,8
tick,0x7ff86ea82704,70657211,0,0x0,8
tick,0x7ff86ea82704,70659102,0,0x0,8
tick,0x7ff86ea82704,70661421,0,0x0,8
tick,0x7ff86ea82704,70663418,0,0x0,8
tick,0x7ff86ea82704,70665150,0,0x0,8
tick,0x7ff86ea82704,70667136,0,0x0,8
tick,0x7ff86ea82704,70669076,0,0x0,8
tick,0x7ff86ea82704,70671273,0,0x0,8
tick,0x7ff86ea82704,70673136,0,0x0,8
tick,0x7ff86ea82704,70675514,0,0x0,8
tick,0x7ff86ea82704,70677343,0,0x0,8
tick,0x7ff86ea82704,70679296,0,0x0,8
tick,0x7ff86ea82704,70680969,0,0x0,8
tick,0x7ff86ea82704,70683233,0,0x0,8
tick,0x7ff86ea82704,70685318,0,0x0,8
tick,0x7ff86ea82704,70687091,0,0x0,8
tick,0x7ff86ea82704,70689004,0,0x0,8
tick,0x7ff86ea82704,70691016,0,0x0,8
tick,0x7ff86ea82704,70692809,0,0x0,8
tick,0x7ff86ea82704,70695135,0,0x0,8
tick,0x7ff86ea82704,70696862,0,0x0,8
tick,0x7ff86ea82704,70699165,0,0x0,8
tick,0x7ff86ea82704,70701040,0,0x0,8
tick,0x7ff86ea82704,70703557,0,0x0,8
tick,0x7ff86ea82704,70704874,0,0x0,8
tick,0x7ff86ea82704,70707423,0,0x0,8
tick,0x7ff86ea82704,70709660,0,0x0,8
tick,0x7ff86ea82704,70710979,0,0x0,8
tick,0x7ff86ea82704,70713387,0,0x0,8
tick,0x7ff86ea82704,70714812,0,0x0,8
tick,0x7ff86ea82704,70716749,0,0x0,8
tick,0x7ff86ea82704,70718764,0,0x0,8
tick,0x7ff86ea82704,70720828,0,0x0,8
tick,0x7ff86ea82704,70722911,0,0x0,8
tick,0x7ff86ea82704,70724704,0,0x0,8
tick,0x7ff86ea82704,70726826,0,0x0,8
tick,0x7ff86ea82704,70728668,0,0x0,8
tick,0x7ff86ea82704,70730800,0,0x0,8
tick,0x7ff86ea82704,70732674,0,0x0,8
tick,0x7ff86ea82704,70734771,0,0x0,8
tick,0x7ff86ea82704,70736644,0,0x0,8
tick,0x7ff86ea82704,70738752,0,0x0,8
tick,0x7ff86ea82704,70740690,0,0x0,8
tick,0x7ff86ea82704,70742917,0,0x0,8
tick,0x7ff86ea82704,70744811,0,0x0,8
tick,0x7ff86ea82704,70746809,0,0x0,8
tick,0x7ff86ea82704,70748868,0,0x0,8
tick,0x7ff86ea82704,70750717,0,0x0,8
tick,0x7ff86ea82704,70752733,0,0x0,8
tick,0x7ff86ea82704,70754718,0,0x0,8
tick,0x7ff86ea82704,70756696,0,0x0,8
tick,0x7ff86ea82704,70758815,0,0x0,8
tick,0x7ff86ea82704,70760649,0,0x0,8
tick,0x7ff86ea82704,70762794,0,0x0,8
tick,0x7ff86ea82704,70764685,0,0x0,8
tick,0x7ff86ea82704,70766659,0,0x0,8
tick,0x7ff86ea82704,70768727,0,0x0,8
tick,0x7ff86ea82704,70770699,0,0x0,8
tick,0x7ff86ea82704,70772850,0,0x0,8
tick,0x7ff86ea82704,70774583,0,0x0,8
tick,0x7ff86ea82704,70776697,0,0x0,8
tick,0x7ff86ea82704,70778659,0,0x0,8
tick,0x7ff86ea82704,70780568,0,0x0,8
tick,0x7ff86ea82704,70782646,0,0x0,8
tick,0x7ff86ea82704,70784692,0,0x0,8
tick,0x7ff86ea82704,70786547,0,0x0,8
tick,0x7ff86ea82704,70788642,0,0x0,8
tick,0x7ff86ea82704,70790564,0,0x0,8
tick,0x7ff86ea82704,70792613,0,0x0,8
tick,0x7ff86ea82704,70794549,0,0x0,8
tick,0x7ff86ea82704,70796574,0,0x0,8
tick,0x7ff86ea82704,70798561,0,0x0,8
tick,0x7ff86ea82704,70800852,0,0x0,8
tick,0x7ff86ea82704,70802581,0,0x0,8
tick,0x7ff86ea82704,70804477,0,0x0,8
tick,0x7ff86ea82704,70806593,0,0x0,8
tick,0x7ff86ea82704,70808578,0,0x0,8
tick,0x7ff86ea82704,70810652,0,0x0,8
tick,0x7ff86ea82704,70812523,0,0x0,8
tick,0x7ff86ea82704,70814587,0,0x0,8
tick,0x7ff86ea82704,70816469,0,0x0,8
tick,0x7ff86ea82704,70818567,0,0x0,8
tick,0x7ff86ea82704,70820518,0,0x0,8
tick,0x7ff86ea82704,70822651,0,0x0,8
tick,0x7ff86ea82704,70824476,0,0x0,8
tick,0x7ff86ea82704,70826613,0,0x0,8
tick,0x7ff86ea82704,70828459,0,0x0,8
tick,0x7ff86ea82704,70830614,0,0x0,8
tick,0x7ff86ea82704,70832482,0,0x0,8
tick,0x7ff86ea82704,70834638,0,0x0,8
tick,0x7ff86ea82704,70836490,0,0x0,8
tick,0x7ff86ea82704,70838573,0,0x0,8
tick,0x7ff86ea82704,70840380,0,0x0,8
tick,0x7ff86ea82704,70842597,0,0x0,8
tick,0x7ff86ea82704,70844451,0,0x0,8
tick,0x7ff86ea82704,70846521,0,0x0,8
tick,0x7ff86ea82704,70848399,0,0x0,8
tick,0x7ff86ea82704,70850490,0,0x0,8
tick,0x7ff86ea82704,70852475,0,0x0,8
tick,0x7ff86ea82704,70854467,0,0x0,8
tick,0x7ff86ea82704,70856380,0,0x0,8
tick,0x7ff86ea82704,70858609,0,0x0,8
tick,0x7ff86ea82704,70860425,0,0x0,8
tick,0x7ff86ea82704,70862454,0,0x0,8
tick,0x7ff86ea82704,70864532,0,0x0,8
tick,0x7ff86ea82704,70866404,0,0x0,8
tick,0x7ff86ea82704,70868328,0,0x0,8
tick,0x7ff86ea82704,70870373,0,0x0,8
tick,0x7ff86ea82704,70872433,0,0x0,8
tick,0x7ff86ea82704,70874353,0,0x0,8
tick,0x7ff86ea82704,70876388,0,0x0,8
tick,0x7ff86ea82704,70878391,0,0x0,8
tick,0x7ff86ea82704,70880336,0,0x0,8
tick,0x7ff86ea82704,70882359,0,0x0,8
tick,0x7ff86ea82704,70884396,0,0x0,8
tick,0x7ff86ea82704,70886385,0,0x0,8
tick,0x7ff86ea82704,70888625,0,0x0,8
tick,0x7ff86ea82704,70890379,0,0x0,8
tick,0x7ff86ea82704,70892347,0,0x0,8
tick,0x7ff86ea82704,70894534,0,0x0,8
tick,0x7ff86ea82704,70896291,0,0x0,8
tick,0x7ff86ea82704,70898452,0,0x0,8
tick,0x7ff86ea82704,70900214,0,0x0,8
tick,0x7ff86ea82704,70902458,0,0x0,8
tick,0x7ff86ea82704,70904310,0,0x0,8
tick,0x7ff86ea82704,70906362,0,0x0,8
tick,0x7ff86ea82704,70908361,0,0x0,8
tick,0x7ff86ea82704,70910353,0,0x0,8
tick,0x7ff86ea82704,70912291,0,0x0,8
tick,0x7ff86ea82704,70914319,0,0x0,8
tick,0x7ff86ea82704,70916255,0,0x0,8
tick,0x7ff86ea82704,70918455,0,0x0,8
tick,0x7ff86ea82704,70920228,0,0x0,8
tick,0x7ff86ea82704,70922383,0,0x0,8
tick,0x7ff86ea82704,70924182,0,0x0,8
tick,0x7ff86ea82704,70926330,0,0x0,8
tick,0x7ff86ea82704,70928234,0,0x0,8
tick,0x7ff86ea82704,70930466,0,0x0,8
tick,0x7ff86ea82704,70932238,0,0x0,8
tick,0x7ff86ea82704,70934229,0,0x0,8
tick,0x7ff86ea82704,70936333,0,0x0,8
tick,0x7ff86ea82704,70938573,0,0x0,8
tick,0x7ff86ea82704,70940209,0,0x0,8
tick,0x7ff86ea82704,70942230,0,0x0,8
tick,0x7ff86ea82704,70944331,0,0x0,8
tick,0x7ff86ea82704,70946169,0,0x0,8
tick,0x7ff86ea82704,70948255,0,0x0,8
tick,0x7ff86ea82704,70950161,0,0x0,8
tick,0x7ff86ea82704,70952300,0,0x0,8
tick,0x7ff86ea82704,70954186,0,0x0,8
tick,0x7ff86ea82704,70956180,0,0x0,8
tick,0x7ff86ea82704,70958483,0,0x0,8
tick,0x7ff86ea82704,70960186,0,0x0,8
tick,0x7ff86ea82704,70962202,0,0x0,8
tick,0x7ff86ea82704,70964170,0,0x0,8
tick,0x7ff86ea82704,70966144,0,0x0,8
tick,0x7ff86ea82704,70968084,0,0x0,8
tick,0x7ff86ea82704,70970200,0,0x0,8
tick,0x7ff86ea82704,70972079,0,0x0,8
tick,0x7ff86ea82704,70974111,0,0x0,8
tick,0x7ff86ea82704,70976340,0,0x0,8
tick,0x7ff86ea82704,70978221,0,0x0,8
tick,0x7ff86ea82704,70980148,0,0x0,8
tick,0x7ff86ea82704,70982212,0,0x0,8
tick,0x7ff86ea82704,70984099,0,0x0,8
tick,0x7ff86ea82704,70986224,0,0x0,8
tick,0x7ff86ea82704,70988113,0,0x0,8
tick,0x7ff86ea82704,70990145,0,0x0,8
tick,0x7ff86ea82704,70992009,0,0x0,8
tick,0x7ff86ea82704,70994132,0,0x0,8
tick,0x7ff86ea82704,70996039,0,0x0,8
tick,0x7ff86ea82704,70998054,0,0x0,8
tick,0x7ff86ea82704,71000036,0,0x0,8
tick,0x7ff86ea82704,71002535,0,0x0,8
tick,0x7ff86ea82704,71004007,0,0x0,8
tick,0x7ff86ea82704,71006175,0,0x0,8
tick,0x7ff86ea82704,71008078,0,0x0,8
tick,0x7ff86ea82704,71010118,0,0x0,8
tick,0x7ff86ea82704,71012106,0,0x0,8
tick,0x7ff86ea82704,71014657,0,0x0,8
tick,0x7ff86ea82704,71016008,0,0x0,8
tick,0x7ff86ea82704,71018712,0,0x0,8
tick,0x7ff86ea82704,71019959,0,0x0,8
tick,0x7ff86ea82704,71022153,0,0x0,8
tick,0x7ff86ea82704,71024072,0,0x0,8
tick,0x7ff86ea82704,71026124,0,0x0,8
tick,0x7ff86ea82704,71028178,0,0x0,8
tick,0x7ff86ea82704,71030271,0,0x0,8
tick,0x7ff86ea82704,71032087,0,0x0,8
tick,0x7ff86ea82704,71033998,0,0x0,8
tick,0x7ff86ea82704,71035915,0,0x0,8
tick,0x7ff86ea82704,71038020,0,0x0,8
tick,0x7ff86ea82704,71039916,0,0x0,8
tick,0x7ff86ea82704,71042000,0,0x0,8
tick,0x7ff86ea82704,71044176,0,0x0,8
tick,0x7ff86ea82704,71045905,0,0x0,8
tick,0x7ff86ea82704,71047988,0,0x0,8
tick,0x7ff86ea82704,71050100,0,0x0,8
tick,0x7ff86ea82704,71051942,0,0x0,8
tick,0x7ff86ea82704,71054475,0,0x0,8
tick,0x7ff86ea82704,71055995,0,0x0,8
tick,0x7ff86ea82704,71057993,0,0x0,8
tick,0x7ff86ea82704,71059941,0,0x0,8
tick,0x7ff86ea82704,71062156,0,0x0,8
tick,0x7ff86ea82704,71063898,0,0x0,8
tick,0x7ff86ea82704,71065979,0,0x0,8
tick,0x7ff86ea82704,71067804,0,0x0,8
tick,0x7ff86ea82704,71070115,0,0x0,8
tick,0x7ff86ea82704,71071813,0,0x0,8
tick,0x7ff86ea82704,71073927,0,0x0,8
tick,0x7ff86ea82704,71075904,0,0x0,8
tick,0x7ff86ea82704,71077977,0,0x0,8
tick,0x7ff86ea82704,71079810,0,0x0,8
tick,0x7ff86ea82704,71081895,0,0x0,8
tick,0x7ff86ea82704,71083886,0,0x0,8
tick,0x7ff86ea82704,71085887,0,0x0,8
tick,0x7ff86ea82704,71087834,0,0x0,8
tick,0x7ff86ea82704,71089820,0,0x0,8
tick,0x7ff86ea82704,71091926,0,0x0,8
tick,0x7ff86ea82704,71093932,0,0x0,8
tick,0x7ff86ea82704,71095857,0,0x0,8
tick,0x7ff86ea82704,71097829,0,0x0,8
tick,0x7ff86ea82704,71099936,0,0x0,8
tick,0x7ff86ea82704,71101828,0,0x0,8
tick,0x7ff86ea82704,71103846,0,0x0,8
tick,0x7ff86ea82704,71105884,0,0x0,8
tick,0x7ff86ea82704,71107761,0,0x0,8
tick,0x7ff86ea82704,71110561,0,0x0,8
tick,0x7ff86ea82704,71111753,0,0x0,8
tick,0x7ff86ea82704,71113732,0,0x0,8
tick,0x7ff86ea82704,71115720,0,0x0,8
tick,0x7ff86ea82704,71117815,0,0x0,8
tick,0x7ff86ea82704,71119752,0,0x0,8
tick,0x7ff86ea82704,71121721,0,0x0,8
tick,0x7ff86ea82704,71123725,0,0x0,8
tick,0x7ff86ea82704,71125749,0,0x0,8
tick,0x7ff86ea82704,71127730,0,0x0,8
tick,0x7ff86ea82704,71129681,0,0x0,8
tick,0x7ff86ea82704,71131755,0,0x0,8
tick,0x7ff86ea82704,71133620,0,0x0,8
tick,0x7ff86ea82704,71135684,0,0x0,8
tick,0x7ff86ea82704,71137649,0,0x0,8
tick,0x7ff86ea82704,71139711,0,0x0,8
tick,0x7ff86ea82704,71141682,0,0x0,8
tick,0x7ff86ea82704,71143626,0,0x0,8
tick,0x7ff86ea82704,71145647,0,0x0,8
tick,0x7ff86ea82704,71147803,0,0x0,8
tick,0x7ff86ea82704,71149562,0,0x0,8
tick,0x7ff86ea82704,71151693,0,0x0,8
tick,0x7ff86ea82704,71153547,0,0x0,8
tick,0x7ff86ea82704,71155710,0,0x0,8
tick,0x7ff86ea82704,71157545,0,0x0,8
tick,0x7ff86ea82704,71159768,0,0x0,8
tick,0x7ff86ea82704,71161619,0,0x0,8
tick,0x7ff86ea82704,71163839,0,0x0,8
tick,0x7ff86ea82704,71165648,0,0x0,8
tick,0x7ff86ea82704,71167759,0,0x0,8
tick,0x7ff86ea82704,71169660,0,0x0,8
tick,0x7ff86ea82704,71171639,0,0x0,8
tick,0x7ff86ea82704,71173672,0,0x0,8
tick,0x7ff86ea82704,71175723,0,0x0,8
tick,0x7ff86ea82704,71177655,0,0x0,8
tick,0x7ff86ea82704,71180090,0,0x0,8
tick,0x7ff86ea82704,71181536,0,0x0,8
tick,0x7ff86ea82704,71183705,0,0x0,8
tick,0x7ff86ea82704,71185697,0,0x0,8
tick,0x7ff86ea82704,71188208,0,0x0,8
tick,0x7ff86ea82704,71189659,0,0x0,8
tick,0x7ff86ea82704,71191555,0,0x0,8
tick,0x7ff86ea82704,71193748,0,0x0,8
tick,0x7ff86ea82704,71195673,0,0x0,8
tick,0x7ff86ea82704,71197388,0,0x0,8
tick,0x7ff86ea82704,71199601,0,0x0,8
tick,0x7ff86ea82704,71201666,0,0x0,8
tick,0x7ff86ea82704,71203889,0,0x0,8
tick,0x7ff86ea82704,71205524,0,0x0,8
tick,0x7ff86ea82704,71207643,0,0x0,8
tick,0x7ff86ea82704,71209701,0,0x0,8
tick,0x7ff86ea82704,71211798,0,0x0,8
tick,0x7ff86ea82704,71213803,0,0x0,8
tick,0x7ff86ea82704,71215574,0,0x0,8
tick,0x7ff86ea82704,71217527,0,0x0,8
tick,0x7ff86ea82704,71219419,0,0x0,8
tick,0x7ff86ea82704,71221449,0,0x0,8
tick,0x7ff86ea82704,71223768,0,0x0,8
tick,0x7ff86ea82704,71225774,0,0x0,8
tick,0x7ff86ea82704,71227709,0,0x0,8
tick,0x7ff86ea82704,71229440,0,0x0,8
tick,0x7ff86ea82704,71231540,0,0x0,8
tick,0x7ff86ea82704,71233508,0,0x0,8
tick,0x7ff86ea82704,71235452,0,0x0,8
tick,0x7ff86ea82704,71237395,0,0x0,8
tick,0x7ff86ea82704,71239474,0,0x0,8
tick,0x7ff86ea82704,71241561,0,0x0,8
tick,0x7ff86ea82704,71243431,0,0x0,8
tick,0x7ff86ea82704,71245709,0,0x0,8
tick,0x7ff86ea82704,71247431,0,0x0,8
tick,0x7ff86ea82704,71249636,0,0x0,8
tick,0x7ff86ea82704,71251704,0,0x0,8
tick,0x7ff86ea82704,71253408,0,0x0,8
tick,0x7ff86ea82704,71255454,0,0x0,8
tick,0x7ff86ea82704,71257493,0,0x0,8
tick,0x7ff86ea82704,71259597,0,0x0,8
tick,0x7ff86ea82704,71261924,0,0x0,8
tick,0x7ff86ea82704,71263503,0,0x0,8
tick,0x7ff86ea82704,71265853,0,0x0,8
tick,0x7ff86ea82704,71267552,0,0x0,8
tick,0x7ff86ea82704,71269570,0,0x0,8
tick,0x7ff86ea82704,71271324,0,0x0,8
tick,0x7ff86ea82704,71273564,0,0x0,8
tick,0x7ff86ea82704,71275699,0,0x0,8
tick,0x7ff86ea82704,71279494,0,0x0,8
tick,0x7ff86ea82704,71279571,0,0x0,8
tick,0x7ff86ea82704,71281838,0,0x0,8
tick,0x7ff86ea82704,71283711,0,0x0,8
tick,0x7ff86ea82704,71285511,0,0x0,8
tick,0x7ff86ea82704,71287511,0,0x0,8
tick,0x7ff86ea82704,71289401,0,0x0,8
tick,0x7ff86ea82704,71291501,0,0x0,8
tick,0x7ff86ea82704,71293486,0,0x0,8
tick,0x7ff86ea82704,71296461,0,0x0,8
tick,0x7ff86ea82704,71297311,0,0x0,8
tick,0x7ff86ea82704,71299358,0,0x0,8
tick,0x7ff86ea82704,71301778,0,0x0,8
tick,0x7ff86ea82704,71303597,0,0x0,8
tick,0x7ff86ea82704,71305290,0,0x0,8
tick,0x7ff86ea82704,71307446,0,0x0,8
tick,0x7ff86ea82704,71309339,0,0x0,8
tick,0x7ff86ea82704,71315451,0,0x0,8
tick,0x7ff86ea82704,71315486,0,0x0,8
tick,0x7ff86ea82704,71317430,0,0x0,8
tick,0x7ff86ea82704,71319496,0,0x0,8
tick,0x7ff86ea82704,71321332,0,0x0,8
tick,0x7ff86ea82704,71323323,0,0x0,8
tick,0x7ff86ea82704,71325426,0,0x0,8
tick,0x7ff86ea82704,71327809,0,0x0,8
tick,0x7ff86ea82704,71330373,0,0x0,8
tick,0x7ff86ea82704,71331766,0,0x0,8
tick,0x7ff86ea82704,71333285,0,0x0,8
tick,0x7ff86ea82704,71335633,0,0x0,8
tick,0x7ff86ea82704,71337397,0,0x0,8
tick,0x7ff86ea82704,71339254,0,0x0,8
tick,0x7ff86ea82704,71341226,0,0x0,8
tick,0x7ff86ea82704,71343362,0,0x0,8
tick,0x7ff86ea82704,71346067,0,0x0,8
tick,0x7ff86ea82704,71347636,0,0x0,8
tick,0x7ff86ea82704,71349597,0,0x0,8
tick,0x7ff86ea82704,71351499,0,0x0,8
tick,0x7ff86ea82704,71353182,0,0x0,8
tick,0x7ff86ea82704,71355225,0,0x0,8
tick,0x7ff86ea82704,71357713,0,0x0,8
tick,0x7ff86ea82704,71361975,0,0x0,8
tick,0x7ff86ea82704,71363222,0,0x0,8
tick,0x7ff86ea82704,71364606,0,0x0,8
tick,0x7ff86ea82704,71366276,0,0x0,8
tick,0x7ff86ea82704,71368926,0,0x0,8
tick,0x7ff86ea82704,71370326,0,0x0,8
tick,0x7ff86ea82704,71371992,0,0x0,8
tick,0x7ff86ea82704,71374059,0,0x0,8
tick,0x7ff86ea82704,71376042,0,0x0,8
tick,0x7ff86ea82704,71378720,0,0x0,8
tick,0x7ff86ea82704,71380143,0,0x0,8
tick,0x7ff86ea82704,71382097,0,0x0,8
tick,0x7ff86ea82704,71383960,0,0x0,8
tick,0x7ff86ea82704,71385970,0,0x0,8
tick,0x7ff86ea82704,71387922,0,0x0,8
tick,0x7ff86ea82704,71389949,0,0x0,8
tick,0x7ff86ea82704,71391957,0,0x0,8
tick,0x7ff86ea82704,71394076,0,0x0,8
tick,0x7ff86ea82704,71396609,0,0x0,8
tick,0x7ff86ea82704,71397909,0,0x0,8
tick,0x7ff86ea82704,71399947,0,0x0,8
tick,0x7ff86ea82704,71402056,0,0x0,8
tick,0x7ff86ea82704,71404313,0,0x0,8
tick,0x7ff86ea82704,71405973,0,0x0,8
tick,0x7ff86ea82704,71408064,0,0x0,8
tick,0x7ff86ea82704,71409968,0,0x0,8
tick,0x7ff86ea82704,71412485,0,0x0,8
tick,0x7ff86ea82704,71414290,0,0x0,8
tick,0x7ff86ea82704,71416070,0,0x0,8
tick,0x7ff86ea82704,71417998,0,0x0,8
tick,0x7ff86ea82704,71419912,0,0x0,8
tick,0x7ff86ea82704,71421874,0,0x0,8
tick,0x7ff86ea82704,71423920,0,0x0,8
tick,0x7ff86ea82704,71425815,0,0x0,8
tick,0x7ff86ea82704,71428322,0,0x0,8
tick,0x7ff86ea82704,71429964,0,0x0,8
tick,0x7ff86ea82704,71431979,0,0x0,8
tick,0x7ff86ea82704,71434130,0,0x0,8
tick,0x7ff86ea82704,71436197,0,0x0,8
tick,0x7ff86ea82704,71437851,0,0x0,8
tick,0x7ff86ea82704,71440084,0,0x0,8
tick,0x7ff86ea82704,71441769,0,0x0,8
tick,0x7ff86ea82704,71444264,0,0x0,8
tick,0x7ff86ea82704,71446400,0,0x0,8
tick,0x7ff86ea82704,71447853,0,0x0,8
tick,0x7ff86ea82704,71450008,0,0x0,8
tick,0x7ff86ea82704,71451905,0,0x0,8
tick,0x7ff86ea82704,71454207,0,0x0,8
tick,0x7ff86ea82704,71455858,0,0x0,8
tick,0x7ff86ea82704,71457817,0,0x0,8
tick,0x7ff86ea82704,71459849,0,0x0,8
tick,0x7ff86ea82704,71462204,0,0x0,8
tick,0x7ff86ea82704,71463864,0,0x0,8
tick,0x7ff86ea82704,71465823,0,0x0,8
tick,0x7ff86ea82704,71467980,0,0x0,8
tick,0x7ff86ea82704,71469726,0,0x0,8
tick,0x7ff86ea82704,71471830,0,0x0,8
tick,0x7ff86ea82704,71473838,0,0x0,8
tick,0x7ff86ea82704,71475945,0,0x0,8
tick,0x7ff86ea82704,71479073,0,0x0,8
tick,0x7ff86ea82704,71479853,0,0x0,8
tick,0x7ff86ea82704,71482021,0,0x0,8
tick,0x7ff86ea82704,71484032,0,0x0,8
tick,0x7ff86ea82704,71485852,0,0x0,8
tick,0x7ff86ea82704,71487752,0,0x0,8
tick,0x7ff86ea82704,71489861,0,0x0,8
tick,0x7ff86ea82704,71491727,0,0x0,8
tick,0x7ff86ea82704,71493979,0,0x0,8
tick,0x7ff86ea82704,71496059,0,0x0,8
tick,0x7ff86ea82704,71497763,0,0x0,8
tick,0x7ff86ea82704,71499768,0,0x0,8
tick,0x7ff86ea82704,71501963,0,0x0,8
tick,0x7ff86ea82704,71503696,0,0x0,8
tick,0x7ff86ea82704,71505852,0,0x0,8
tick,0x7ff86ea82704,71507728,0,0x0,8
tick,0x7ff86ea82704,71509822,0,0x0,8
tick,0x7ff86ea82704,71512096,0,0x0,8
tick,0x7ff86ea82704,71513768,0,0x0,8
tick,0x7ff86ea82704,71515822,0,0x0,8
tick,0x7ff86ea82704,71517936,0,0x0,8
tick,0x7ff86ea82704,71519695,0,0x0,8
tick,0x7ff86ea82704,71521701,0,0x0,8
tick,0x7ff86ea82704,71523788,0,0x0,8
tick,0x7ff86ea82704,71525691,0,0x0,8
tick,0x7ff86ea82704,71528998,0,0x0,8
tick,0x7ff86ea82704,71530220,0,0x0,8
tick,0x7ff86ea82704,71532638,0,0x0,8
tick,0x7ff86ea82704,71534792,0,0x0,8
tick,0x7ff86ea82704,71536543,0,0x0,8
tick,0x7ff86ea82704,71538881,0,0x0,8
tick,0x7ff86ea82704,71540688,0,0x0,8
tick,0x7ff86ea82704,71542681,0,0x0,8
tick,0x7ff86ea82704,71545608,0,0x0,8
tick,0x7ff86ea82704,71546947,0,0x0,8
tick,0x7ff86ea82704,71548835,0,0x0,8
tick,0x7ff86ea82704,71550824,0,0x0,8
tick,0x7ff86ea82704,71552768,0,0x0,8
tick,0x7ff86ea82704,71554916,0,0x0,8
tick,0x7ff86ea82704,71556667,0,0x0,8
tick,0x7ff86ea82704,71558766,0,0x0,8
tick,0x7ff86ea82704,71560782,0,0x0,8
tick,0x7ff86ea82704,71562988,0,0x0,8
tick,0x7ff86ea82704,71564616,0,0x0,8
tick,0x7ff86ea82704,71566682,0,0x0,8
tick,0x7ff86ea82704,71569305,0,0x0,8
tick,0x7ff86ea82704,71571099,0,0x0,8
tick,0x7ff86ea82704,71572591,0,0x0,8
tick,0x7ff86ea82704,71574571,0,0x0,8
tick,0x7ff86ea82704,71576884,0,0x0,8
tick,0x7ff86ea82704,71580242,0,0x0,8
tick,0x7ff86ea82704,71582195,0,0x0,8
tick,0x7ff86ea82704,71584054,0,0x0,8
tick,0x7ff86ea82704,71585693,0,0x0,8
tick,0x7ff86ea82704,71587722,0,0x0,8
tick,0x7ff86ea82704,71589576,0,0x0,8
tick,0x7ff86ea82704,71591624,0,0x0,8
tick,0x7ff86ea82704,71593677,0,0x0,8
tick,0x7ff86ea82704,71596475,0,0x0,8
tick,0x7ff86ea82704,71598813,0,0x0,8
tick,0x7ff86ea82704,71600540,0,0x0,8
tick,0x7ff86ea82704,71602596,0,0x0,8
tick,0x7ff86ea82704,71604667,0,0x0,8
tick,0x7ff86ea82704,71606508,0,0x0,8
tick,0x7ff86ea82704,71609010,0,0x0,8
tick,0x7ff86ea82704,71610915,0,0x0,8
tick,0x7ff86ea82704,71613021,0,0x0,8
tick,0x7ff86ea82704,71615097,0,0x0,8
tick,0x7ff86ea82704,71616390,0,0x0,8
tick,0x7ff86ea82704,71618679,0,0x0,8
tick,0x7ff86ea82704,71620366,0,0x0,8
tick,0x7ff86ea82704,71622444,0,0x0,8
tick,0x7ff86ea82704,71624416,0,0x0,8
tick,0x7ff86ea82704,71626466,0,0x0,8
tick,0x7ff86ea82704,71628694,0,0x0,8
tick,0x7ff86ea82704,71630341,0,0x0,8
tick,0x7ff86ea82704,71632622,0,0x0,8
tick,0x7ff86ea82704,71634274,0,0x0,8
tick,0x7ff86ea82704,71636349,0,0x0,8
tick,0x7ff86ea82704,71638270,0,0x0,8
tick,0x7ff86ea82704,71640376,0,0x0,8
tick,0x7ff86ea82704,71642335,0,0x0,8
tick,0x7ff86ea82704,71644953,0,0x0,8
tick,0x7ff86ea82704,71646658,0,0x0,8
tick,0x7ff86ea82704,71648374,0,0x0,8
tick,0x7ff86ea82704,71650477,0,0x0,8
tick,0x7ff86ea82704,71652511,0,0x0,8
tick,0x7ff86ea82704,71654525,0,0x0,8
tick,0x7ff86ea82704,71656525,0,0x0,8
tick,0x7ff86ea82704,71658397,0,0x0,8
tick,0x7ff86ea82704,71661938,0,0x0,8
tick,0x7ff86ea82704,71663330,0,0x0,8
tick,0x7ff86ea82704,71665545,0,0x0,8
tick,0x7ff86ea82704,71667439,0,0x0,8
tick,0x7ff86ea82704,71669365,0,0x0,8
tick,0x7ff86ea82704,71671508,0,0x0,8
tick,0x7ff86ea82704,71673259,0,0x0,8
tick,0x7ff86ea82704,71675434,0,0x0,8
tick,0x7ff86ea82704,71677630,0,0x0,8
tick,0x7ff86ea82704,71679891,0,0x0,8
tick,0x7ff86ea82704,71681339,0,0x0,8
tick,0x7ff86ea82704,71683461,0,0x0,8
tick,0x7ff86ea82704,71685387,0,0x0,8
tick,0x7ff86ea82704,71687387,0,0x0,8
tick,0x7ff86ea82704,71689391,0,0x0,8
tick,0x7ff86ea82704,71691354,0,0x0,8
tick,0x7ff86ea82704,71693391,0,0x0,8
tick,0x7ff86ea82704,71696374,0,0x0,8
tick,0x7ff86ea82704,71698328,0,0x0,8
tick,0x7ff86ea82704,71700265,0,0x0,8
tick,0x7ff86ea82704,71702492,0,0x0,8
tick,0x7ff86ea82704,71704580,0,0x0,8
tick,0x7ff86ea82704,71706207,0,0x0,8
tick,0x7ff86ea82704,71708330,0,0x0,8
tick,0x7ff86ea82704,71710177,0,0x0,8
tick,0x7ff86ea82704,71712514,0,0x0,8
tick,0x7ff86ea82704,71714103,0,0x0,8
tick,0x7ff86ea82704,71716223,0,0x0,8
tick,0x7ff86ea82704,71718095,0,0x0,8
tick,0x7ff86ea82704,71720277,0,0x0,8
tick,0x7ff86ea82704,71722059,0,0x0,8
tick,0x7ff86ea82704,71724220,0,0x0,8
tick,0x7ff86ea82704,71726142,0,0x0,8
tick,0x7ff86ea82704,71728533,0,0x0,8
tick,0x7ff86ea82704,71730215,0,0x0,8
tick,0x7ff86ea82704,71732097,0,0x0,8
tick,0x7ff86ea82704,71734098,0,0x0,8
tick,0x7ff86ea82704,71736085,0,0x0,8
tick,0x7ff86ea82704,71738110,0,0x0,8
tick,0x7ff86ea82704,71739994,0,0x0,8
tick,0x7ff86ea82704,71742178,0,0x0,8
tick,0x7ff86ea82704,71744292,0,0x0,8
tick,0x7ff86ea82704,71746392,0,0x0,8
tick,0x7ff86ea82704,71748025,0,0x0,8
tick,0x7ff86ea82704,71750133,0,0x0,8
tick,0x7ff86ea82704,71751997,0,0x0,8
tick,0x7ff86ea82704,71754112,0,0x0,8
tick,0x7ff86ea82704,71755984,0,0x0,8
tick,0x7ff86ea82704,71758011,0,0x0,8
tick,0x7ff86ea82704,71759982,0,0x0,8
tick,0x7ff86ea82704,71762690,0,0x0,8
tick,0x7ff86ea82704,71764035,0,0x0,8
tick,0x7ff86ea82704,71766063,0,0x0,8
tick,0x7ff86ea82704,71767945,0,0x0,8
tick,0x7ff86ea82704,71770017,0,0x0,8
tick,0x7ff86ea82704,71771965,0,0x0,8
tick,0x7ff86ea82704,71774048,0,0x0,8
tick,0x7ff86ea82704,71776025,0,0x0,8
tick,0x7ff86ea82704,71778642,0,0x0,8
tick,0x7ff86ea82704,71780915,0,0x0,8
tick,0x7ff86ea82704,71783068,0,0x0,8
tick,0x7ff86ea82704,71785478,0,0x0,8
tick,0x7ff86ea82704,71787012,0,0x0,8
tick,0x7ff86ea82704,71789348,0,0x0,8
tick,0x7ff86ea82704,71790936,0,0x0,8
tick,0x7ff86ea82704,71793024,0,0x0,8
tick,0x7ff86ea82704,71795024,0,0x0,8
tick,0x7ff86ea82704,71797149,0,0x0,8
tick,0x7ff86ea82704,71798879,0,0x0,8
tick,0x7ff86ea82704,71801163,0,0x0,8
tick,0x7ff86ea82704,71802945,0,0x0,8
tick,0x7ff86ea82704,71804942,0,0x0,8
tick,0x7ff86ea82704,71806983,0,0x0,8
tick,0x7ff86ea82704,71809520,0,0x0,8
tick,0x7ff86ea82704,71811754,0,0x0,8
tick,0x7ff86ea82704,71813167,0,0x0,8
tick,0x7ff86ea82704,71814903,0,0x0,8
tick,0x7ff86ea82704,71817009,0,0x0,8
tick,0x7ff86ea82704,71818994,0,0x0,8
tick,0x7ff86ea82704,71820978,0,0x0,8
tick,0x7ff86ea82704,71823051,0,0x0,8
tick,0x7ff86ea82704,71825083,0,0x0,8
tick,0x7ff86ea82704,71826918,0,0x0,8
tick,0x7ff86ea82704,71829246,0,0x0,8
tick,0x7ff86ea82704,71831002,0,0x0,8
tick,0x7ff86ea82704,71832952,0,0x0,8
tick,0x7ff86ea82704,71834972,0,0x0,8
tick,0x7ff86ea82704,71836966,0,0x0,8
tick,0x7ff86ea82704,71838947,0,0x0,8
tick,0x7ff86ea82704,71840817,0,0x0,8
tick,0x7ff86ea82704,71843045,0,0x0,8
tick,0x7ff86ea82704,71845472,0,0x0,8
tick,0x7ff86ea82704,71846991,0,0x0,8
tick,0x7ff86ea82704,71849016,0,0x0,8
tick,0x7ff86ea82704,71850891,0,0x0,8
tick,0x7ff86ea82704,71852871,0,0x0,8
tick,0x7ff86ea82704,71854829,0,0x0,8
tick,0x7ff86ea82704,71857419,0,0x0,8
tick,0x7ff86ea82704,71858824,0,0x0,8
tick,0x7ff86ea82704,71861572,0,0x0,8
tick,0x7ff86ea82704,71863119,0,0x0,8
tick,0x7ff86ea82704,71864805,0,0x0,8
tick,0x7ff86ea82704,71866868,0,0x0,8
tick,0x7ff86ea82704,71868813,0,0x0,8
tick,0x7ff86ea82704,71870937,0,0x0,8
tick,0x7ff86ea82704,71872773,0,0x0,8
tick,0x7ff86ea82704,71874889,0,0x0,8
tick,0x7ff86ea82704,71876874,0,0x0,8
tick,0x7ff86ea82704,71879428,0,0x0,8
tick,0x7ff86ea82704,71880730,0,0x0,8
tick,0x7ff86ea82704,71882981,0,0x0,8
tick,0x7ff86ea82704,71884826,0,0x0,8
tick,0x7ff86ea82704,71886923,0,0x0,8
tick,0x7ff86ea82704,71888803,0,0x0,8
tick,0x7ff86ea82704,71891048,0,0x0,8
tick,0x7ff86ea82704,71892856,0,0x0,8
tick,0x7ff86ea82704,71895454,0,0x0,8
tick,0x7ff86ea82704,71896839,0,0x0,8
tick,0x7ff86ea82704,71899174,0,0x0,8
tick,0x7ff86ea82704,71900750,0,0x0,8
tick,0x7ff86ea82704,71902763,0,0x0,8
tick,0x7ff86ea82704,71904793,0,0x0,8
tick,0x7ff86ea82704,71906693,0,0x0,8
tick,0x7ff86ea82704,71908781,0,0x0,8
tick,0x7ff86ea82704,71910842,0,0x0,8
tick,0x7ff86ea82704,71913223,0,0x0,8
tick,0x7ff86ea82704,71914571,0,0x0,8
tick,0x7ff86ea82704,71916883,0,0x0,8
tick,0x7ff86ea82704,71918573,0,0x0,8
tick,0x7ff86ea82704,71920653,0,0x0,8
tick,0x7ff86ea82704,71922581,0,0x0,8
tick,0x7ff86ea82704,71924594,0,0x0,8
tick,0x7ff86ea82704,71926543,0,0x0,8
tick,0x7ff86ea82704,71929131,0,0x0,8
tick,0x7ff86ea82704,71930503,0,0x0,8
tick,0x7ff86ea82704,71932886,0,0x0,8
tick,0x7ff86ea82704,71934557,0,0x0,8
tick,0x7ff86ea82704,71936694,0,0x0,8
tick,0x7ff86ea82704,71938599,0,0x0,8
tick,0x7ff86ea82704,71940677,0,0x0,8
tick,0x7ff86ea82704,71942476,0,0x0,8
tick,0x7ff86ea82704,71944920,0,0x0,8
tick,0x7ff86ea82704,71946502,0,0x0,8
tick,0x7ff86ea82704,71948639,0,0x0,8
tick,0x7ff86ea82704,71950456,0,0x0,8
tick,0x7ff86ea82704,71952708,0,0x0,8
tick,0x7ff86ea82704,71954485,0,0x0,8
tick,0x7ff86ea82704,71956772,0,0x0,8
tick,0x7ff86ea82704,71958560,0,0x0,8
tick,0x7ff86ea82704,71960556,0,0x0,8
tick,0x7ff86ea82704,71962853,0,0x0,8
tick,0x7ff86ea82704,71964710,0,0x0,8
tick,0x7ff86ea82704,71966865,0,0x0,8
tick,0x7ff86ea82704,71968560,0,0x0,8
tick,0x7ff86ea82704,71972687,0,0x0,8
tick,0x7ff86ea82704,71974630,0,0x0,8
tick,0x7ff86ea82704,71976934,0,0x0,8
tick,0x7ff86ea82704,71979739,0,0x0,8
tick,0x7ff86ea82704,71981599,0,0x0,8
tick,0x7ff86ea82704,71983527,0,0x0,8
tick,0x7ff86ea82704,71985504,0,0x0,8
tick,0x7ff86ea82704,71987454,0,0x0,8
tick,0x7ff86ea82704,71989616,0,0x0,8
tick,0x7ff86ea82704,71991501,0,0x0,8
tick,0x7ff86ea82704,71993636,0,0x0,8
tick,0x7ff86ea82704,71996346,0,0x0,8
tick,0x7ff86ea82704,71997467,0,0x0,8
tick,0x7ff86ea82704,71999637,0,0x0,8
tick,0x7ff86ea82704,72001435,0,0x0,8
tick,0x7ff86ea82704,72003351,0,0x0,8
tick,0x7ff86ea82704,72005484,0,0x0,8
tick,0x7ff86ea82704,72007320,0,0x0,8
tick,0x7ff86ea82704,72009336,0,0x0,8
tick,0x7ff86ea82704,72012552,0,0x0,8
tick,0x7ff86ea82704,72014623,0,0x0,8
tick,0x7ff86ea82704,72016566,0,0x0,8
tick,0x7ff86ea82704,72018821,0,0x0,8
tick,0x7ff86ea82704,72020385,0,0x0,8
tick,0x7ff86ea82704,72022996,0,0x0,8
tick,0x7ff86ea82704,72024612,0,0x0,8
tick,0x7ff86ea82704,72026649,0,0x0,8
tick,0x7ff86ea82704,72028987,0,0x0,8
tick,0x7ff86ea82704,72030273,0,0x0,8
tick,0x7ff86ea82704,72032294,0,0x0,8
tick,0x7ff86ea82704,72034264,0,0x0,8
tick,0x7ff86ea82704,72036297,0,0x0,8
tick,0x7ff86ea82704,72038291,0,0x0,8
tick,0x7ff86ea82704,72040341,0,0x0,8
tick,0x7ff86ea82704,72042397,0,0x0,8
tick,0x7ff86ea82704,72044415,0,0x0,8
tick,0x7ff86ea82704,72046953,0,0x0,8
tick,0x7ff86ea82704,72048651,0,0x0,8
tick,0x7ff86ea82704,72050403,0,0x0,8
tick,0x7ff86ea82704,72053594,0,0x0,8
tick,0x7ff86ea82704,72055776,0,0x0,8
tick,0x7ff86ea82704,72057407,0,0x0,8
tick,0x7ff86ea82704,72059400,0,0x0,8
tick,0x7ff86ea82704,72062607,0,0x0,8
tick,0x7ff86ea82704,72063666,0,0x0,8
tick,0x7ff86ea82704,72065424,0,0x0,8
tick,0x7ff86ea82704,72067482,0,0x0,8
tick,0x7ff86ea82704,72069572,0,0x0,8
tick,0x7ff86ea82704,72071259,0,0x0,8
tick,0x7ff86ea82704,72073620,0,0x0,8
tick,0x7ff86ea82704,72075306,0,0x0,8
tick,0x7ff86ea82704,72077425,0,0x0,8
tick,0x7ff86ea82704,72081638,0,0x0,8
tick,0x7ff86ea82704,72081667,0,0x0,8
tick,0x7ff86ea82704,72083102,0,0x0,8
tick,0x7ff86ea82704,72085155,0,0x0,8
tick,0x7ff86ea82704,72087256,0,0x0,8
tick,0x7ff86ea82704,72089638,0,0x0,8
tick,0x7ff86ea82704,72091241,0,0x0,8
tick,0x7ff86ea82704,72093305,0,0x0,8
tick,0x7ff86ea82704,72098421,0,0x0,8
tick,0x7ff86ea82704,72098456,0,0x0,8
tick,0x7ff86ea82704,72100547,0,0x0,8
tick,0x7ff86ea82704,72102684,0,0x0,8
tick,0x7ff86ea82704,72104218,0,0x0,8
tick,0x7ff86ea82704,72106322,0,0x0,8
tick,0x7ff86ea82704,72108170,0,0x0,8
tick,0x7ff86ea82704,72110518,0,0x0,8
tick,0x7ff86ea82704,72113632,0,0x0,8
tick,0x7ff86ea82704,72115187,0,0x0,8
tick,0x7ff86ea82704,72117173,0,0x0,8
tick,0x7ff86ea82704,72119377,0,0x0,8
tick,0x7ff86ea82704,72121308,0,0x0,8
tick,0x7ff86ea82704,72123175,0,0x0,8
tick,0x7ff86ea82704,72125257,0,0x0,8
tick,0x7ff86ea82704,72127165,0,0x0,8
tick,0x7ff86ea82704,72129787,0,0x0,8
tick,0x7ff86ea82704,72131174,0,0x0,8
tick,0x7ff86ea82704,72133749,0,0x0,8
tick,0x7ff86ea82704,72135816,0,0x0,8
tick,0x7ff86ea82704,72138263,0,0x0,8
tick,0x7ff86ea82704,72140080,0,0x0,8
tick,0x7ff86ea82704,72142492,0,0x0,8
tick,0x7ff86ea82704,72144416,0,0x0,8
tick,0x7ff86ea82704,72146708,0,0x0,8
tick,0x7ff86ea82704,72148769,0,0x0,8
tick,0x7ff86ea82704,72150347,0,0x0,8
tick,0x7ff86ea82704,72152142,0,0x0,8
tick,0x7ff86ea82704,72154325,0,0x0,8
tick,0x7ff86ea82704,72156099,0,0x0,8
tick,0x7ff86ea82704,72158235,0,0x0,8
tick,0x7ff86ea82704,72160132,0,0x0,8
tick,0x7ff86ea82704,72171861,0,0x0,8
tick,0x7ff86ea82704,72183215,0,0x0,8
tick,0x7ff86ea82704,72184983,0,0x0,8
tick,0x7ff86ea82704,72187104,0,0x0,8
tick,0x7ff86ea82704,72189266,0,0x0,8
tick,0x7ff86ea82704,72191276,0,0x0,8
tick,0x7ff86ea82704,72192982,0,0x0,8
tick,0x7ff86ea82704,72195521,0,0x0,8
tick,0x7ff86ea82704,72197554,0,0x0,8
tick,0x7ff86ea82704,72199185,0,0x0,8
tick,0x7ff86ea82704,72201108,0,0x0,8
tick,0x7ff86ea82704,72202923,0,0x0,8
tick,0x7ff86ea82704,72204886,0,0x0,8
tick,0x7ff86ea82704,72207026,0,0x0,8
tick,0x7ff86ea82704,72208907,0,0x0,8
tick,0x7ff86ea82704,72211083,0,0x0,8
tick,0x7ff86ea82704,72213071,0,0x0,8
tick,0x7ff86ea82704,72215232,0,0x0,8
tick,0x7ff86ea82704,72217175,0,0x0,8
tick,0x7ff86ea82704,72218858,0,0x0,8
tick,0x7ff86ea82704,72220925,0,0x0,8
tick,0x7ff86ea82704,72223081,0,0x0,8
tick,0x7ff86ea82704,72224891,0,0x0,8
tick,0x7ff86ea82704,72226884,0,0x0,8
tick,0x7ff86ea82704,72228971,0,0x0,8
tick,0x7ff86ea82704,72230902,0,0x0,8
tick,0x7ff86ea82704,72233031,0,0x0,8
tick,0x7ff86ea82704,72234869,0,0x0,8
tick,0x7ff86ea82704,72236979,0,0x0,8
tick,0x7ff86ea82704,72239100,0,0x0,8
tick,0x7ff86ea82704,72240791,0,0x0,8
tick,0x7ff86ea82704,72242811,0,0x0,8
tick,0x7ff86ea82704,72246231,0,0x0,8
tick,0x7ff86ea82704,72247960,0,0x0,8
tick,0x7ff86ea82704,72249689,0,0x0,8
tick,0x7ff86ea82704,72251719,0,0x0,8
tick,0x7ff86ea82704,72253739,0,0x0,8
tick,0x7ff86ea82704,72255706,0,0x0,8
tick,0x7ff86ea82704,72257668,0,0x0,8
tick,0x7ff86ea82704,72259635,0,0x0,8
tick,0x7ff86ea82704,72262051,0,0x0,8
tick,0x7ff86ea82704,72263637,0,0x0,8
tick,0x7ff86ea82704,72265753,0,0x0,8
tick,0x7ff86ea82704,72268074,0,0x0,8
tick,0x7ff86ea82704,72269827,0,0x0,8
tick,0x7ff86ea82704,72271705,0,0x0,8
tick,0x7ff86ea82704,72273727,0,0x0,8
tick,0x7ff86ea82704,72275951,0,0x0,8
tick,0x7ff86ea82704,72278419,0,0x0,8
tick,0x7ff86ea82704,72279940,0,0x0,8
tick,0x7ff86ea82704,72281871,0,0x0,8
tick,0x7ff86ea82704,72283624,0,0x0,8
tick,0x7ff86ea82704,72285752,0,0x0,8
tick,0x7ff86ea82704,72287645,0,0x0,8
tick,0x7ff86ea82704,72289630,0,0x0,8
tick,0x7ff86ea82704,72291599,0,0x0,8
tick,0x7ff86ea82704,72293634,0,0x0,8
tick,0x7ff86ea82704,72295897,0,0x0,8
tick,0x7ff86ea82704,72297579,0,0x0,8
tick,0x7ff86ea82704,72299511,0,0x0,8
tick,0x7ff86ea82704,72301837,0,0x0,8
tick,0x7ff86ea82704,72304596,0,0x0,8
tick,0x7ff86ea82704,72306033,0,0x0,8
tick,0x7ff86ea82704,72307811,0,0x0,8
tick,0x7ff86ea82704,72309536,0,0x0,8
tick,0x7ff86ea82704,72311926,0,0x0,8
tick,0x7ff86ea82704,72313566,0,0x0,8
tick,0x7ff86ea82704,72315943,0,0x0,8
tick,0x7ff86ea82704,72317689,0,0x0,8
tick,0x7ff86ea82704,72319510,0,0x0,8
tick,0x7ff86ea82704,72321482,0,0x0,8
tick,0x7ff86ea82704,72323622,0,0x0,8
tick,0x7ff86ea82704,72325746,0,0x0,8
tick,0x7ff86ea82704,72329538,0,0x0,8
tick,0x7ff86ea82704,72330227,0,0x0,8
tick,0x7ff86ea82704,72331436,0,0x0,8
tick,0x7ff86ea82704,72333357,0,0x0,8
tick,0x7ff86ea82704,72335472,0,0x0,8
tick,0x7ff86ea82704,72337438,0,0x0,8
tick,0x7ff86ea82704,72339504,0,0x0,8
tick,0x7ff86ea82704,72341461,0,0x0,8
tick,0x7ff86ea82704,72344145,0,0x0,8
tick,0x7ff86ea82704,72348131,0,0x0,8
tick,0x7ff86ea82704,72348159,0,0x0,8
tick,0x7ff86ea82704,72349543,0,0x0,8
tick,0x7ff86ea82704,72351428,0,0x0,8
tick,0x7ff86ea82704,72353514,0,0x0,8
tick,0x7ff86ea82704,72355452,0,0x0,8
tick,0x7ff86ea82704,72357495,0,0x0,8
tick,0x7ff86ea82704,72359355,0,0x0,8
tick,0x7ff86ea82704,72362729,0,0x0,8
tick,0x7ff86ea82704,72364570,0,0x0,8
tick,0x7ff86ea82704,72365656,0,0x0,8
tick,0x7ff86ea82704,72367600,0,0x0,8
tick,0x7ff86ea82704,72369530,0,0x0,8
tick,0x7ff86ea82704,72371437,0,0x0,8
tick,0x7ff86ea82704,72373593,0,0x0,8
tick,0x7ff86ea82704,72375390,0,0x0,8
tick,0x7ff86ea82704,72377526,0,0x0,8
tick,0x7ff86ea82704,72379903,0,0x0,8
tick,0x7ff86ea82704,72381421,0,0x0,8
tick,0x7ff86ea82704,72383340,0,0x0,8
tick,0x7ff86ea82704,72385365,0,0x0,8
tick,0x7ff86ea82704,72387392,0,0x0,8
tick,0x7ff86ea82704,72389539,0,0x0,8
tick,0x7ff86ea82704,72391374,0,0x0,8
tick,0x7ff86ea82704,72393490,0,0x0,8
tick,0x7ff86ea82704,72396722,0,0x0,8
tick,0x7ff86ea82704,72398311,0,0x0,8
tick,0x7ff86ea82704,72400200,0,0x0,8
tick,0x7ff86ea82704,72402316,0,0x0,8
tick,0x7ff86ea82704,72404634,0,0x0,8
tick,0x7ff86ea82704,72406283,0,0x0,8
tick,0x7ff86ea82704,72408278,0,0x0,8
tick,0x7ff86ea82704,72410205,0,0x0,8
tick,0x7ff86ea82704,72412622,0,0x0,8
tick,0x7ff86ea82704,72414256,0,0x0,8
tick,0x7ff86ea82704,72416213,0,0x0,8
tick,0x7ff86ea82704,72418504,0,0x0,8
tick,0x7ff86ea82704,72420483,0,0x0,8
tick,0x7ff86ea82704,72422325,0,0x0,8
tick,0x7ff86ea82704,72424311,0,0x0,8
tick,0x7ff86ea82704,72426198,0,0x0,8
tick,0x7ff86ea82704,72428273,0,0x0,8
tick,0x7ff86ea82704,72430294,0,0x0,8
tick,0x7ff86ea82704,72432198,0,0x0,8
tick,0x7ff86ea82704,72434239,0,0x0,8
tick,0x7ff86ea82704,72436200,0,0x0,8
tick,0x7ff86ea82704,72438276,0,0x0,8
tick,0x7ff86ea82704,72440181,0,0x0,8
tick,0x7ff86ea82704,72442289,0,0x0,8
tick,0x7ff86ea82704,72444183,0,0x0,8
tick,0x7ff86ea82704,72446133,0,0x0,8
tick,0x7ff86ea82704,72448242,0,0x0,8
tick,0x7ff86ea82704,72450142,0,0x0,8
tick,0x7ff86ea82704,72452297,0,0x0,8
tick,0x7ff86ea82704,72454201,0,0x0,8
tick,0x7ff86ea82704,72456114,0,0x0,8
tick,0x7ff86ea82704,72458175,0,0x0,8
tick,0x7ff86ea82704,72460219,0,0x0,8
tick,0x7ff86ea82704,72462130,0,0x0,8
tick,0x7ff86ea82704,72464107,0,0x0,8
tick,0x7ff86ea82704,72466210,0,0x0,8
tick,0x7ff86ea82704,72468067,0,0x0,8
tick,0x7ff86ea82704,72470093,0,0x0,8
tick,0x7ff86ea82704,72472070,0,0x0,8
tick,0x7ff86ea82704,72474096,0,0x0,8
tick,0x7ff86ea82704,72476192,0,0x0,8
tick,0x7ff86ea82704,72478105,0,0x0,8
tick,0x7ff86ea82704,72480044,0,0x0,8
tick,0x7ff86ea82704,72482057,0,0x0,8
tick,0x7ff86ea82704,72484065,0,0x0,8
tick,0x7ff86ea82704,72486062,0,0x0,8
tick,0x7ff86ea82704,72488295,0,0x0,8
tick,0x7ff86ea82704,72490079,0,0x0,8
tick,0x7ff86ea82704,72492053,0,0x0,8
tick,0x7ff86ea82704,72494029,0,0x0,8
tick,0x7ff86ea82704,72496048,0,0x0,8
tick,0x7ff86ea82704,72498052,0,0x0,8
tick,0x7ff86ea82704,72500054,0,0x0,8
tick,0x7ff86ea82704,72502036,0,0x0,8
tick,0x7ff86ea82704,72504059,0,0x0,8
tick,0x7ff86ea82704,72506145,0,0x0,8
tick,0x7ff86ea82704,72508118,0,0x0,8
tick,0x7ff86ea82704,72510133,0,0x0,8
tick,0x7ff86ea82704,72511928,0,0x0,8
tick,0x7ff86ea82704,72513999,0,0x0,8
tick,0x7ff86ea82704,72516244,0,0x0,8
tick,0x7ff86ea82704,72517931,0,0x0,8
tick,0x7ff86ea82704,72520037,0,0x0,8
tick,0x7ff86ea82704,72521933,0,0x0,8
tick,0x7ff86ea82704,72524021,0,0x0,8
tick,0x7ff86ea82704,72525907,0,0x0,8
tick,0x7ff86ea82704,72528083,0,0x0,8
tick,0x7ff86ea82704,72529999,0,0x0,8
tick,0x7ff86ea82704,72532010,0,0x0,8
tick,0x7ff86ea82704,72533930,0,0x0,8
tick,0x7ff86ea82704,72535981,0,0x0,8
tick,0x7ff86ea82704,72537889,0,0x0,8
tick,0x7ff86ea82704,72539899,0,0x0,8
tick,0x7ff86ea82704,72541884,0,0x0,8
tick,0x7ff86ea82704,72544098,0,0x0,8
tick,0x7ff86ea82704,72545862,0,0x0,8
tick,0x7ff86ea82704,72548045,0,0x0,8
tick,0x7ff86ea82704,72549878,0,0x0,8
tick,0x7ff86ea82704,72551958,0,0x0,8
tick,0x7ff86ea82704,72553887,0,0x0,8
tick,0x7ff86ea82704,72555925,0,0x0,8
tick,0x7ff86ea82704,72557930,0,0x0,8
tick,0x7ff86ea82704,72559960,0,0x0,8
tick,0x7ff86ea82704,72561880,0,0x0,8
tick,0x7ff86ea82704,72563832,0,0x0,8
tick,0x7ff86ea82704,72565933,0,0x0,8
tick,0x7ff86ea82704,72567793,0,0x0,8
tick,0x7ff86ea82704,72569879,0,0x0,8
tick,0x7ff86ea82704,72571853,0,0x0,8
tick,0x7ff86ea82704,72573791,0,0x0,8
tick,0x7ff86ea82704,72575793,0,0x0,8
tick,0x7ff86ea82704,72577826,0,0x0,8
tick,0x7ff86ea82704,72579784,0,0x0,8
tick,0x7ff86ea82704,72581851,0,0x0,8
tick,0x7ff86ea82704,72583838,0,0x0,8
tick,0x7ff86ea82704,72586083,0,0x0,8
tick,0x7ff86ea82704,72587738,0,0x0,8
tick,0x7ff86ea82704,72589864,0,0x0,8
tick,0x7ff86ea82704,72591772,0,0x0,8
tick,0x7ff86ea82704,72593723,0,0x0,8
tick,0x7ff86ea82704,72595742,0,0x0,8
tick,0x7ff86ea82704,72597815,0,0x0,8
tick,0x7ff86ea82704,72599779,0,0x0,8
tick,0x7ff86ea82704,72601739,0,0x0,8
tick,0x7ff86ea82704,72603813,0,0x0,8
tick,0x7ff86ea82704,72605775,0,0x0,8
tick,0x7ff86ea82704,72607702,0,0x0,8
tick,0x7ff86ea82704,72609776,0,0x0,8
tick,0x7ff86ea82704,72611796,0,0x0,8
tick,0x7ff86ea82704,72613822,0,0x0,8
tick,0x7ff86ea82704,72615732,0,0x0,8
tick,0x7ff86ea82704,72617967,0,0x0,8
tick,0x7ff86ea82704,72619969,0,0x0,8
tick,0x7ff86ea82704,72621758,0,0x0,8
tick,0x7ff86ea82704,72623838,0,0x0,8
tick,0x7ff86ea82704,72625643,0,0x0,8
tick,0x7ff86ea82704,72627774,0,0x0,8
tick,0x7ff86ea82704,72629651,0,0x0,8
tick,0x7ff86ea82704,72631642,0,0x0,8
tick,0x7ff86ea82704,72633696,0,0x0,8
tick,0x7ff86ea82704,72635650,0,0x0,8
tick,0x7ff86ea82704,72637699,0,0x0,8
tick,0x7ff86ea82704,72639755,0,0x0,8
tick,0x7ff86ea82704,72641589,0,0x0,8
tick,0x7ff86ea82704,72643686,0,0x0,8
tick,0x7ff86ea82704,72645623,0,0x0,8
tick,0x7ff86ea82704,72647817,0,0x0,8
tick,0x7ff86ea82704,72649549,0,0x0,8
tick,0x7ff86ea82704,72651590,0,0x0,8
tick,0x7ff86ea82704,72653591,0,0x0,8
tick,0x7ff86ea82704,72655677,0,0x0,8
tick,0x7ff86ea82704,72657564,0,0x0,8
tick,0x7ff86ea82704,72659693,0,0x0,8
tick,0x7ff86ea82704,72661533,0,0x0,8
tick,0x7ff86ea82704,72663707,0,0x0,8
tick,0x7ff86ea82704,72665569,0,0x0,8
tick,0x7ff86ea82704,72667632,0,0x0,8
tick,0x7ff86ea82704,72669611,0,0x0,8
tick,0x7ff86ea82704,72671696,0,0x0,8
tick,0x7ff86ea82704,72673710,0,0x0,8
tick,0x7ff86ea82704,72675533,0,0x0,8
tick,0x7ff86ea82704,72677536,0,0x0,8
tick,0x7ff86ea82704,72679515,0,0x0,8
tick,0x7ff86ea82704,72681487,0,0x0,8
tick,0x7ff86ea82704,72683562,0,0x0,8
tick,0x7ff86ea82704,72685606,0,0x0,8
tick,0x7ff86ea82704,72687603,0,0x0,8
tick,0x7ff86ea82704,72689476,0,0x0,8
tick,0x7ff86ea82704,72691458,0,0x0,8
tick,0x7ff86ea82704,72693430,0,0x0,8
tick,0x7ff86ea82704,72695529,0,0x0,8
tick,0x7ff86ea82704,72697536,0,0x0,8
tick,0x7ff86ea82704,72699490,0,0x0,8
tick,0x7ff86ea82704,72701546,0,0x0,8
tick,0x7ff86ea82704,72703507,0,0x0,8
tick,0x7ff86ea82704,72705471,0,0x0,8
tick,0x7ff86ea82704,72707436,0,0x0,8
tick,0x7ff86ea82704,72709534,0,0x0,8
tick,0x7ff86ea82704,72711450,0,0x0,8
tick,0x7ff86ea82704,72713437,0,0x0,8
tick,0x7ff86ea82704,72715427,0,0x0,8
tick,0x7ff86ea82704,72717421,0,0x0,8
tick,0x7ff86ea82704,72719474,0,0x0,8
tick,0x7ff86ea82704,72721482,0,0x0,8
tick,0x7ff86ea82704,72723482,0,0x0,8
tick,0x7ff86ea82704,72725434,0,0x0,8
tick,0x7ff86ea82704,72727594,0,0x0,8
tick,0x7ff86ea82704,72729470,0,0x0,8
tick,0x7ff86ea82704,72731433,0,0x0,8
tick,0x7ff86ea82704,72733366,0,0x0,8
tick,0x7ff86ea82704,72735410,0,0x0,8
tick,0x7ff86ea82704,72737567,0,0x0,8
tick,0x7ff86ea82704,72739399,0,0x0,8
tick,0x7ff86ea82704,72741537,0,0x0,8
tick,0x7ff86ea82704,72745238,0,0x0,8
tick,0x7ff86ea82704,72746433,0,0x0,8
tick,0x7ff86ea82704,72748365,0,0x0,8
tick,0x7ff86ea82704,72750544,0,0x0,8
tick,0x7ff86ea82704,72752373,0,0x0,8
tick,0x7ff86ea82704,72754450,0,0x0,8
tick,0x7ff86ea82704,72756395,0,0x0,8
tick,0x7ff86ea82704,72758372,0,0x0,8
tick,0x7ff86ea82704,72760361,0,0x0,8
tick,0x7ff86ea82704,72762439,0,0x0,8
tick,0x7ff86ea82704,72764433,0,0x0,8
tick,0x7ff86ea82704,72766315,0,0x0,8
tick,0x7ff86ea82704,72768462,0,0x0,8
tick,0x7ff86ea82704,72770366,0,0x0,8
tick,0x7ff86ea82704,72772430,0,0x0,8
tick,0x7ff86ea82704,72774349,0,0x0,8
tick,0x7ff86ea82704,72776490,0,0x0,8
tick,0x7ff86ea82704,72778412,0,0x0,8
tick,0x7ff86ea82704,72780209,0,0x0,8
tick,0x7ff86ea82704,72782389,0,0x0,8
tick,0x7ff86ea82704,72784280,0,0x0,8
tick,0x7ff86ea82704,72786469,0,0x0,8
tick,0x7ff86ea82704,72788418,0,0x0,8
tick,0x7ff86ea82704,72790276,0,0x0,8
tick,0x7ff86ea82704,72792366,0,0x0,8
tick,0x7ff86ea82704,72794303,0,0x0,8
tick,0x7ff86ea82704,72796370,0,0x0,8
tick,0x7ff86ea82704,72798330,0,0x0,8
tick,0x7ff86ea82704,72800257,0,0x0,8
tick,0x7ff86ea82704,72802342,0,0x0,8
tick,0x7ff86ea82704,72804280,0,0x0,8
tick,0x7ff86ea82704,72806405,0,0x0,8
tick,0x7ff86ea82704,72808166,0,0x0,8
tick,0x7ff86ea82704,72810357,0,0x0,8
tick,0x7ff86ea82704,72812289,0,0x0,8
tick,0x7ff86ea82704,72814303,0,0x0,8
tick,0x7ff86ea82704,72816235,0,0x0,8
tick,0x7ff86ea82704,72818268,0,0x0,8
tick,0x7ff86ea82704,72820326,0,0x0,8
tick,0x7ff86ea82704,72822285,0,0x0,8
tick,0x7ff86ea82704,72824246,0,0x0,8
tick,0x7ff86ea82704,72826267,0,0x0,8
tick,0x7ff86ea82704,72828277,0,0x0,8
tick,0x7ff86ea82704,72830440,0,0x0,8
tick,0x7ff86ea82704,72832259,0,0x0,8
tick,0x7ff86ea82704,72834160,0,0x0,8
tick,0x7ff86ea82704,72836319,0,0x0,8
tick,0x7ff86ea82704,72838186,0,0x0,8
tick,0x7ff86ea82704,72840313,0,0x0,8
tick,0x7ff86ea82704,72842263,0,0x0,8
tick,0x7ff86ea82704,72844163,0,0x0,8
tick,0x7ff86ea82704,72846203,0,0x0,8
tick,0x7ff86ea82704,72848328,0,0x0,8
tick,0x7ff86ea82704,72850239,0,0x0,8
tick,0x7ff86ea82704,72852143,0,0x0,8
tick,0x7ff86ea82704,72854274,0,0x0,8
tick,0x7ff86ea82704,72856127,0,0x0,8
tick,0x7ff86ea82704,72858421,0,0x0,8
tick,0x7ff86ea82704,72860133,0,0x0,8
tick,0x7ff86ea82704,72862287,0,0x0,8
tick,0x7ff86ea82704,72864237,0,0x0,8
tick,0x7ff86ea82704,72866175,0,0x0,8
tick,0x7ff86ea82704,72868373,0,0x0,8
tick,0x7ff86ea82704,72870132,0,0x0,8
tick,0x7ff86ea82704,72872242,0,0x0,8
tick,0x7ff86ea82704,72874197,0,0x0,8
tick,0x7ff86ea82704,72876178,0,0x0,8
tick,0x7ff86ea82704,72878006,0,0x0,8
tick,0x7ff86ea82704,72880128,0,0x0,8
tick,0x7ff86ea82704,72882143,0,0x0,8
tick,0x7ff86ea82704,72884082,0,0x0,8
tick,0x7ff86ea82704,72885971,0,0x0,8
tick,0x7ff86ea82704,72888191,0,0x0,8
tick,0x7ff86ea82704,72890174,0,0x0,8
tick,0x7ff86ea82704,72892147,0,0x0,8
tick,0x7ff86ea82704,72894151,0,0x0,8
tick,0x7ff86ea82704,72896007,0,0x0,8
tick,0x7ff86ea82704,72898149,0,0x0,8
tick,0x7ff86ea82704,72899947,0,0x0,8
tick,0x7ff86ea82704,72902157,0,0x0,8
tick,0x7ff86ea82704,72903962,0,0x0,8
tick,0x7ff86ea82704,72905988,0,0x0,8
tick,0x7ff86ea82704,72908022,0,0x0,8
tick,0x7ff86ea82704,72909928,0,0x0,8
tick,0x7ff86ea82704,72911998,0,0x0,8
tick,0x7ff86ea82704,72914024,0,0x0,8
tick,0x7ff86ea82704,72915942,0,0x0,8
tick,0x7ff86ea82704,72918081,0,0x0,8
tick,0x7ff86ea82704,72919876,0,0x0,8
tick,0x7ff86ea82704,72922010,0,0x0,8
tick,0x7ff86ea82704,72923908,0,0x0,8
tick,0x7ff86ea82704,72926113,0,0x0,8
tick,0x7ff86ea82704,72927990,0,0x0,8
tick,0x7ff86ea82704,72930002,0,0x0,8
tick,0x7ff86ea82704,72931899,0,0x0,8
tick,0x7ff86ea82704,72934153,0,0x0,8
tick,0x7ff86ea82704,72935909,0,0x0,8
tick,0x7ff86ea82704,72938106,0,0x0,8
tick,0x7ff86ea82704,72940073,0,0x0,8
tick,0x7ff86ea82704,72941968,0,0x0,8
tick,0x7ff86ea82704,72944683,0,0x0,8
tick,0x7ff86ea82704,72946658,0,0x0,8
tick,0x7ff86ea82704,72948041,0,0x0,8
tick,0x7ff86ea82704,72949953,0,0x0,8
tick,0x7ff86ea82704,72951888,0,0x0,8
tick,0x7ff86ea82704,72954246,0,0x0,8
tick,0x7ff86ea82704,72956057,0,0x0,8
tick,0x7ff86ea82704,72957943,0,0x0,8
tick,0x7ff86ea82704,72960018,0,0x0,8
tick,0x7ff86ea82704,72962151,0,0x0,8
tick,0x7ff86ea82704,72963795,0,0x0,8
tick,0x7ff86ea82704,72965915,0,0x0,8
tick,0x7ff86ea82704,72968010,0,0x0,8
tick,0x7ff86ea82704,72970032,0,0x0,8
tick,0x7ff86ea82704,72971864,0,0x0,8
tick,0x7ff86ea82704,72973977,0,0x0,8
tick,0x7ff86ea82704,72975892,0,0x0,8
tick,0x7ff86ea82704,72978089,0,0x0,8
tick,0x7ff86ea82704,72980049,0,0x0,8
tick,0x7ff86ea82704,72981959,0,0x0,8
tick,0x7ff86ea82704,72983836,0,0x0,8
tick,0x7ff86ea82704,72985789,0,0x0,8
tick,0x7ff86ea82704,72987761,0,0x0,8
tick,0x7ff86ea82704,72989773,0,0x0,8
tick,0x7ff86ea82704,72991730,0,0x0,8
tick,0x7ff86ea82704,72993803,0,0x0,8
tick,0x7ff86ea82704,72995784,0,0x0,8
tick,0x7ff86ea82704,72997746,0,0x0,8
tick,0x7ff86ea82704,72999738,0,0x0,8
tick,0x7ff86ea82704,73001766,0,0x0,8
tick,0x7ff86ea82704,73003726,0,0x0,8
tick,0x7ff86ea82704,73005823,0,0x0,8
tick,0x7ff86ea82704,73007760,0,0x0,8
tick,0x7ff86ea82704,73009794,0,0x0,8
tick,0x7ff86ea82704,73011761,0,0x0,8
tick,0x7ff86ea82704,73013878,0,0x0,8
tick,0x7ff86ea82704,73015648,0,0x0,8
tick,0x7ff86ea82704,73017739,0,0x0,8
tick,0x7ff86ea82704,73019725,0,0x0,8
tick,0x7ff86ea82704,73021754,0,0x0,8
tick,0x7ff86ea82704,73023851,0,0x0,8
tick,0x7ff86ea82704,73025797,0,0x0,8
tick,0x7ff86ea82704,73027743,0,0x0,8
tick,0x7ff86ea82704,73029664,0,0x0,8
tick,0x7ff86ea82704,73031643,0,0x0,8
tick,0x7ff86ea82704,73033804,0,0x0,8
tick,0x7ff86ea82704,73035790,0,0x0,8
tick,0x7ff86ea82704,73037650,0,0x0,8
tick,0x7ff86ea82704,73039653,0,0x0,8
tick,0x7ff86ea82704,73041630,0,0x0,8
tick,0x7ff86ea82704,73043765,0,0x0,8
tick,0x7ff86ea82704,73045659,0,0x0,8
tick,0x7ff86ea82704,73047777,0,0x0,8
tick,0x7ff86ea82704,73049583,0,0x0,8
tick,0x7ff86ea82704,73051769,0,0x0,8
tick,0x7ff86ea82704,73053711,0,0x0,8
tick,0x7ff86ea82704,73055681,0,0x0,8
tick,0x7ff86ea82704,73057674,0,0x0,8
tick,0x7ff86ea82704,73059673,0,0x0,8
tick,0x7ff86ea82704,73061609,0,0x0,8
tick,0x7ff86ea82704,73063582,0,0x0,8
tick,0x7ff86ea82704,73065677,0,0x0,8
tick,0x7ff86ea82704,73068096,0,0x0,8
tick,0x7ff86ea82704,73069828,0,0x0,8
tick,0x7ff86ea82704,73071784,0,0x0,8
tick,0x7ff86ea82704,73073582,0,0x0,8
tick,0x7ff86ea82704,73075564,0,0x0,8
tick,0x7ff86ea82704,73077731,0,0x0,8
tick,0x7ff86ea82704,73079631,0,0x0,8
tick,0x7ff86ea82704,73081610,0,0x0,8
tick,0x7ff86ea82704,73083462,0,0x0,8
tick,0x7ff86ea82704,73085610,0,0x0,8
tick,0x7ff86ea82704,73087478,0,0x0,8
tick,0x7ff86ea82704,73089568,0,0x0,8
tick,0x7ff86ea82704,73091499,0,0x0,8
tick,0x7ff86ea82704,73093694,0,0x0,8
tick,0x7ff86ea82704,73095456,0,0x0,8
tick,0x7ff86ea82704,73097548,0,0x0,8
tick,0x7ff86ea82704,73099517,0,0x0,8
tick,0x7ff86ea82704,73101646,0,0x0,8
tick,0x7ff86ea82704,73103526,0,0x0,8
tick,0x7ff86ea82704,73105471,0,0x0,8
tick,0x7ff86ea82704,73107443,0,0x0,8
tick,0x7ff86ea82704,73109639,0,0x0,8
tick,0x7ff86ea82704,73111719,0,0x0,8
tick,0x7ff86ea82704,73113649,0,0x0,8
tick,0x7ff86ea82704,73115473,0,0x0,8
tick,0x7ff86ea82704,73117577,0,0x0,8
tick,0x7ff86ea82704,73119458,0,0x0,8
tick,0x7ff86ea82704,73121424,0,0x0,8
tick,0x7ff86ea82704,73123435,0,0x0,8
tick,0x7ff86ea82704,73125635,0,0x0,8
tick,0x7ff86ea82704,73127606,0,0x0,8
tick,0x7ff86ea82704,73129559,0,0x0,8
tick,0x7ff86ea82704,73131617,0,0x0,8
tick,0x7ff86ea82704,73133673,0,0x0,8
tick,0x7ff86ea82704,73135533,0,0x0,8
tick,0x7ff86ea82704,73137594,0,0x0,8
tick,0x7ff86ea82704,73139356,0,0x0,8
tick,0x7ff86ea82704,73141560,0,0x0,8
tick,0x7ff86ea82704,73143528,0,0x0,8
tick,0x7ff86ea82704,73145600,0,0x0,8
tick,0x7ff86ea82704,73147661,0,0x0,8
tick,0x7ff86ea82704,73149664,0,0x0,8
tick,0x7ff86ea82704,73151488,0,0x0,8
tick,0x7ff86ea82704,73153367,0,0x0,8
tick,0x7ff86ea82704,73155500,0,0x0,8
tick,0x7ff86ea82704,73157451,0,0x0,8
tick,0x7ff86ea82704,73159398,0,0x0,8
tick,0x7ff86ea82704,73161389,0,0x0,8
tick,0x7ff86ea82704,73163556,0,0x0,8
tick,0x7ff86ea82704,73165708,0,0x0,8
tick,0x7ff86ea82704,73167460,0,0x0,8
tick,0x7ff86ea82704,73169560,0,0x0,8
tick,0x7ff86ea82704,73171427,0,0x0,8
tick,0x7ff86ea82704,73173677,0,0x0,8
tick,0x7ff86ea82704,73175597,0,0x0,8
tick,0x7ff86ea82704,73177644,0,0x0,8
tick,0x7ff86ea82704,73179615,0,0x0,8
tick,0x7ff86ea82704,73181696,0,0x0,8
tick,0x7ff86ea82704,73183329,0,0x0,8
tick,0x7ff86ea82704,73185402,0,0x0,8
tick,0x7ff86ea82704,73187517,0,0x0,8
tick,0x7ff86ea82704,73189491,0,0x0,8
tick,0x7ff86ea82704,73191280,0,0x0,8
tick,0x7ff86ea82704,73193422,0,0x0,8
tick,0x7ff86ea82704,73195733,0,0x0,8
tick,0x7ff86ea82704,73197504,0,0x0,8
tick,0x7ff86ea82704,73199301,0,0x0,8
tick,0x7ff86ea82704,73201211,0,0x0,8
tick,0x7ff86ea82704,73203370,0,0x0,8
tick,0x7ff86ea82704,73205247,0,0x0,8
tick,0x7ff86ea82704,73207301,0,0x0,8
tick,0x7ff86ea82704,73209367,0,0x0,8
tick,0x7ff86ea82704,73211398,0,0x0,8
tick,0x7ff86ea82704,73213485,0,0x0,8
tick,0x7ff86ea82704,73215189,0,0x0,8
tick,0x7ff86ea82704,73217210,0,0x0,8
tick,0x7ff86ea82704,73219495,0,0x0,8
tick,0x7ff86ea82704,73221301,0,0x0,8
tick,0x7ff86ea82704,73223235,0,0x0,8
tick,0x7ff86ea82704,73225196,0,0x0,8
tick,0x7ff86ea82704,73227260,0,0x0,8
tick,0x7ff86ea82704,73229353,0,0x0,8
tick,0x7ff86ea82704,73231143,0,0x0,8
tick,0x7ff86ea82704,73233115,0,0x0,8
tick,0x7ff86ea82704,73235348,0,0x0,8
tick,0x7ff86ea82704,73237242,0,0x0,8
tick,0x7ff86ea82704,73239105,0,0x0,8
tick,0x7ff86ea82704,73241238,0,0x0,8
tick,0x7ff86ea82704,73243417,0,0x0,8
tick,0x7ff86ea82704,73245279,0,0x0,8
tick,0x7ff86ea82704,73247082,0,0x0,8
tick,0x7ff86ea82704,73249057,0,0x0,8
tick,0x7ff86ea82704,73251273,0,0x0,8
tick,0x7ff86ea82704,73253073,0,0x0,8
tick,0x7ff86ea82704,73255066,0,0x0,8
tick,0x7ff86ea82704,73257133,0,0x0,8
tick,0x7ff86ea82704,73259211,0,0x0,8
tick,0x7ff86ea82704,73261144,0,0x0,8
tick,0x7ff86ea82704,73263250,0,0x0,8
tick,0x7ff86ea82704,73265059,0,0x0,8
tick,0x7ff86ea82704,73267466,0,0x0,8
tick,0x7ff86ea82704,73269064,0,0x0,8
tick,0x7ff86ea82704,73271093,0,0x0,8
tick,0x7ff86ea82704,73273126,0,0x0,8
tick,0x7ff86ea82704,73278422,0,0x0,8
tick,0x7ff86ea82704,73280474,0,0x0,8
tick,0x7ff86ea82704,73282207,0,0x0,8
tick,0x7ff86ea82704,73284276,0,0x0,8
tick,0x7ff86ea82704,73285984,0,0x0,8
tick,0x7ff86ea82704,73288142,0,0x0,8
tick,0x7ff86ea82704,73290230,0,0x0,8
tick,0x7ff86ea82704,73292168,0,0x0,8
tick,0x7ff86ea82704,73294166,0,0x0,8
tick,0x7ff86ea82704,73296086,0,0x0,8
tick,0x7ff86ea82704,73297950,0,0x0,8
tick,0x7ff86ea82704,73300146,0,0x0,8
tick,0x7ff86ea82704,73302248,0,0x0,8
tick,0x7ff86ea82704,73304203,0,0x0,8
tick,0x7ff86ea82704,73306081,0,0x0,8
tick,0x7ff86ea82704,73308009,0,0x0,8
tick,0x7ff86ea82704,73310063,0,0x0,8
tick,0x7ff86ea82704,73312248,0,0x0,8
tick,0x7ff86ea82704,73314212,0,0x0,8
tick,0x7ff86ea82704,73316060,0,0x0,8
tick,0x7ff86ea82704,73318053,0,0x0,8
tick,0x7ff86ea82704,73320048,0,0x0,8
tick,0x7ff86ea82704,73321984,0,0x0,8
tick,0x7ff86ea82704,73324011,0,0x0,8
tick,0x7ff86ea82704,73325989,0,0x0,8
tick,0x7ff86ea82704,73328163,0,0x0,8
tick,0x7ff86ea82704,73330079,0,0x0,8
tick,0x7ff86ea82704,73332109,0,0x0,8
tick,0x7ff86ea82704,73334235,0,0x0,8
tick,0x7ff86ea82704,73336063,0,0x0,8
tick,0x7ff86ea82704,73338169,0,0x0,8
tick,0x7ff86ea82704,73340007,0,0x0,8
tick,0x7ff86ea82704,73341928,0,0x0,8
tick,0x7ff86ea82704,73343936,0,0x0,8
tick,0x7ff86ea82704,73346098,0,0x0,8
tick,0x7ff86ea82704,73347860,0,0x0,8
tick,0x7ff86ea82704,73349880,0,0x0,8
tick,0x7ff86ea82704,73352099,0,0x0,8
tick,0x7ff86ea82704,73353992,0,0x0,8
tick,0x7ff86ea82704,73355960,0,0x0,8
tick,0x7ff86ea82704,73358121,0,0x0,8
tick,0x7ff86ea82704,73360253,0,0x0,8
tick,0x7ff86ea82704,73362067,0,0x0,8
tick,0x7ff86ea82704,73363944,0,0x0,8
tick,0x7ff86ea82704,73365913,0,0x0,8
tick,0x7ff86ea82704,73367896,0,0x0,8
tick,0x7ff86ea82704,73370006,0,0x0,8
tick,0x7ff86ea82704,73371954,0,0x0,8
tick,0x7ff86ea82704,73373846,0,0x0,8
tick,0x7ff86ea82704,73375800,0,0x0,8
tick,0x7ff86ea82704,73377992,0,0x0,8
tick,0x7ff86ea82704,73379906,0,0x0,8
tick,0x7ff86ea82704,73381844,0,0x0,8
tick,0x7ff86ea82704,73383736,0,0x0,8
tick,0x7ff86ea82704,73385903,0,0x0,8
tick,0x7ff86ea82704,73387823,0,0x0,8
tick,0x7ff86ea82704,73389779,0,0x0,8
tick,0x7ff86ea82704,73391824,0,0x0,8
tick,0x7ff86ea82704,73394024,0,0x0,8
tick,0x7ff86ea82704,73396011,0,0x0,8
tick,0x7ff86ea82704,73397825,0,0x0,8
tick,0x7ff86ea82704,73399866,0,0x0,8
tick,0x7ff86ea82704,73401810,0,0x0,8
tick,0x7ff86ea82704,73403744,0,0x0,8
tick,0x7ff86ea82704,73405838,0,0x0,8
tick,0x7ff86ea82704,73407905,0,0x0,8
tick,0x7ff86ea82704,73409879,0,0x0,8
tick,0x7ff86ea82704,73411877,0,0x0,8
tick,0x7ff86ea82704,73413734,0,0x0,8
tick,0x7ff86ea82704,73416009,0,0x0,8
tick,0x7ff86ea82704,73417788,0,0x0,8
tick,0x7ff86ea82704,73419740,0,0x0,8
tick,0x7ff86ea82704,73421670,0,0x0,8
tick,0x7ff86ea82704,73423826,0,0x0,8
tick,0x7ff86ea82704,73425678,0,0x0,8
tick,0x7ff86ea82704,73428027,0,0x0,8
tick,0x7ff86ea82704,73430339,0,0x0,8
tick,0x7ff86ea82704,73431829,0,0x0,8
tick,0x7ff86ea82704,73433635,0,0x0,8
tick,0x7ff86ea82704,73435779,0,0x0,8
tick,0x7ff86ea82704,73437707,0,0x0,8
tick,0x7ff86ea82704,73439899,0,0x0,8
tick,0x7ff86ea82704,73441714,0,0x0,8
tick,0x7ff86ea82704,73443985,0,0x0,8
tick,0x7ff86ea82704,73445756,0,0x0,8
tick,0x7ff86ea82704,73447964,0,0x0,8
tick,0x7ff86ea82704,73449679,0,0x0,8
tick,0x7ff86ea82704,73451970,0,0x0,8
tick,0x7ff86ea82704,73453817,0,0x0,8
tick,0x7ff86ea82704,73455895,0,0x0,8
tick,0x7ff86ea82704,73457897,0,0x0,8
tick,0x7ff86ea82704,73459968,0,0x0,8
tick,0x7ff86ea82704,73461793,0,0x0,8
tick,0x7ff86ea82704,73463759,0,0x0,8
tick,0x7ff86ea82704,73465837,0,0x0,8
tick,0x7ff86ea82704,73467700,0,0x0,8
tick,0x7ff86ea82704,73469631,0,0x0,8
tick,0x7ff86ea82704,73471735,0,0x0,8
tick,0x7ff86ea82704,73473578,0,0x0,8
tick,0x7ff86ea82704,73475618,0,0x0,8
tick,0x7ff86ea82704,73477675,0,0x0,8
tick,0x7ff86ea82704,73479805,0,0x0,8
tick,0x7ff86ea82704,73481918,0,0x0,8
tick,0x7ff86ea82704,73483626,0,0x0,8
tick,0x7ff86ea82704,73485685,0,0x0,8
tick,0x7ff86ea82704,73487724,0,0x0,8
tick,0x7ff86ea82704,73489608,0,0x0,8
tick,0x7ff86ea82704,73491681,0,0x0,8
tick,0x7ff86ea82704,73493512,0,0x0,8
tick,0x7ff86ea82704,73495850,0,0x0,8
tick,0x7ff86ea82704,73497621,0,0x0,8
tick,0x7ff86ea82704,73499771,0,0x0,8
tick,0x7ff86ea82704,73501633,0,0x0,8
tick,0x7ff86ea82704,73503661,0,0x0,8
tick,0x7ff86ea82704,73505748,0,0x0,8
tick,0x7ff86ea82704,73507670,0,0x0,8
tick,0x7ff86ea82704,73509775,0,0x0,8
tick,0x7ff86ea82704,73511530,0,0x0,8
tick,0x7ff86ea82704,73513762,0,0x0,8
tick,0x7ff86ea82704,73515584,0,0x0,8
tick,0x7ff86ea82704,73517901,0,0x0,8
tick,0x7ff86ea82704,73519647,0,0x0,8
tick,0x7ff86ea82704,73521622,0,0x0,8
tick,0x7ff86ea82704,73523560,0,0x0,8
tick,0x7ff86ea82704,73525602,0,0x0,8
tick,0x7ff86ea82704,73527480,0,0x0,8
tick,0x7ff86ea82704,73529627,0,0x0,8
tick,0x7ff86ea82704,73531455,0,0x0,8
tick,0x7ff86ea82704,73534145,0,0x0,8
tick,0x7ff86ea82704,73536630,0,0x0,8
tick,0x7ff86ea82704,73538321,0,0x0,8
tick,0x7ff86ea82704,73540700,0,0x0,8
tick,0x7ff86ea82704,73542400,0,0x0,8
tick,0x7ff86ea82704,73545481,0,0x0,8
tick,0x7ff86ea82704,73546881,0,0x0,8
tick,0x7ff86ea82704,73548907,0,0x0,8
tick,0x7ff86ea82704,73550484,0,0x0,8
tick,0x7ff86ea82704,73552427,0,0x0,8
tick,0x7ff86ea82704,73554400,0,0x0,8
tick,0x7ff86ea82704,73556383,0,0x0,8
tick,0x7ff86ea82704,73558512,0,0x0,8
tick,0x7ff86ea82704,73560333,0,0x0,8
tick,0x7ff86ea82704,73562910,0,0x0,8
tick,0x7ff86ea82704,73564362,0,0x0,8
tick,0x7ff86ea82704,73566284,0,0x0,8
tick,0x7ff86ea82704,73568355,0,0x0,8
tick,0x7ff86ea82704,73570320,0,0x0,8
tick,0x7ff86ea82704,73572718,0,0x0,8
tick,0x7ff86ea82704,73574435,0,0x0,8
tick,0x7ff86ea82704,73576368,0,0x0,8
tick,0x7ff86ea82704,73578468,0,0x0,8
tick,0x7ff86ea82704,73580172,0,0x0,8
tick,0x7ff86ea82704,73582304,0,0x0,8
tick,0x7ff86ea82704,73584358,0,0x0,8
tick,0x7ff86ea82704,73586276,0,0x0,8
tick,0x7ff86ea82704,73588077,0,0x0,8
tick,0x7ff86ea82704,73590201,0,0x0,8
tick,0x7ff86ea82704,73592246,0,0x0,8
tick,0x7ff86ea82704,73594293,0,0x0,8
tick,0x7ff86ea82704,73596514,0,0x0,8
tick,0x7ff86ea82704,73598479,0,0x0,8
tick,0x7ff86ea82704,73600353,0,0x0,8
tick,0x7ff86ea82704,73602294,0,0x0,8
tick,0x7ff86ea82704,73604177,0,0x0,8
tick,0x7ff86ea82704,73606162,0,0x0,8
tick,0x7ff86ea82704,73608203,0,0x0,8
tick,0x7ff86ea82704,73610038,0,0x0,8
tick,0x7ff86ea82704,73612327,0,0x0,8
tick,0x7ff86ea82704,73614332,0,0x0,8
tick,0x7ff86ea82704,73616290,0,0x0,8
tick,0x7ff86ea82704,73618251,0,0x0,8
tick,0x7ff86ea82704,73620468,0,0x0,8
tick,0x7ff86ea82704,73622170,0,0x0,8
tick,0x7ff86ea82704,73624429,0,0x0,8
tick,0x7ff86ea82704,73627025,0,0x0,8
tick,0x7ff86ea82704,73628341,0,0x0,8
tick,0x7ff86ea82704,73630322,0,0x0,8
tick,0x7ff86ea82704,73632149,0,0x0,8
tick,0x7ff86ea82704,73634087,0,0x0,8
tick,0x7ff86ea82704,73636221,0,0x0,8
tick,0x7ff86ea82704,73638072,0,0x0,8
tick,0x7ff86ea82704,73640117,0,0x0,8
tick,0x7ff86ea82704,73642066,0,0x0,8
tick,0x7ff86ea82704,73644169,0,0x0,8
tick,0x7ff86ea82704,73647112,0,0x0,8
tick,0x7ff86ea82704,73648256,0,0x0,8
tick,0x7ff86ea82704,73650197,0,0x0,8
tick,0x7ff86ea82704,73652470,0,0x0,8
tick,0x7ff86ea82704,73654016,0,0x0,8
tick,0x7ff86ea82704,73656072,0,0x0,8
tick,0x7ff86ea82704,73658105,0,0x0,8
tick,0x7ff86ea82704,73660068,0,0x0,8
tick,0x7ff86ea82704,73665029,0,0x0,8
tick,0x7ff86ea82704,73666518,0,0x0,8
tick,0x7ff86ea82704,73667968,0,0x0,8
tick,0x7ff86ea82704,73669927,0,0x0,8
tick,0x7ff86ea82704,73671988,0,0x0,8
tick,0x7ff86ea82704,73673882,0,0x0,8
tick,0x7ff86ea82704,73675966,0,0x0,8
tick,0x7ff86ea82704,73678607,0,0x0,8
tick,0x7ff86ea82704,73681636,0,0x0,8
tick,0x7ff86ea82704,73682979,0,0x0,8
tick,0x7ff86ea82704,73685098,0,0x0,8
tick,0x7ff86ea82704,73687008,0,0x0,8
tick,0x7ff86ea82704,73688815,0,0x0,8
tick,0x7ff86ea82704,73690834,0,0x0,8
tick,0x7ff86ea82704,73692782,0,0x0,8
tick,0x7ff86ea82704,73695367,0,0x0,8
tick,0x7ff86ea82704,73697299,0,0x0,8
tick,0x7ff86ea82704,73699231,0,0x0,8
tick,0x7ff86ea82704,73701238,0,0x0,8
tick,0x7ff86ea82704,73702974,0,0x0,8
tick,0x7ff86ea82704,73704916,0,0x0,8
tick,0x7ff86ea82704,73707025,0,0x0,8
tick,0x7ff86ea82704,73708999,0,0x0,8
tick,0x7ff86ea82704,73711143,0,0x0,8
tick,0x7ff86ea82704,73713900,0,0x0,8
tick,0x7ff86ea82704,73714786,0,0x0,8
tick,0x7ff86ea82704,73717050,0,0x0,8
tick,0x7ff86ea82704,73718927,0,0x0,8
tick,0x7ff86ea82704,73721500,0,0x0,8
tick,0x7ff86ea82704,73722638,0,0x0,8
tick,0x7ff86ea82704,73724820,0,0x0,8
tick,0x7ff86ea82704,73726793,0,0x0,8
tick,0x7ff86ea82704,73730855,0,0x0,8
tick,0x7ff86ea82704,73731803,0,0x0,8
tick,0x7ff86ea82704,73733879,0,0x0,8
tick,0x7ff86ea82704,73735873,0,0x0,8
tick,0x7ff86ea82704,73737721,0,0x0,8
tick,0x7ff86ea82704,73739738,0,0x0,8
tick,0x7ff86ea82704,73741737,0,0x0,8
tick,0x7ff86ea82704,73743706,0,0x0,8
tick,0x7ff86ea82704,73747214,0,0x0,8
tick,0x7ff86ea82704,73748797,0,0x0,8
tick,0x7ff86ea82704,73750872,0,0x0,8
tick,0x7ff86ea82704,73753128,0,0x0,8
tick,0x7ff86ea82704,73754954,0,0x0,8
tick,0x7ff86ea82704,73756979,0,0x0,8
tick,0x7ff86ea82704,73758701,0,0x0,8
tick,0x7ff86ea82704,73761580,0,0x0,8
tick,0x7ff86ea82704,73763801,0,0x0,8
tick,0x7ff86ea82704,73765817,0,0x0,8
tick,0x7ff86ea82704,73768028,0,0x0,8
tick,0x7ff86ea82704,73770035,0,0x0,8
tick,0x7ff86ea82704,73771765,0,0x0,8
tick,0x7ff86ea82704,73773896,0,0x0,8
tick,0x7ff86ea82704,73775729,0,0x0,8
tick,0x7ff86ea82704,73778600,0,0x0,8
tick,0x7ff86ea82704,73780484,0,0x0,8
tick,0x7ff86ea82704,73781606,0,0x0,8
tick,0x7ff86ea82704,73783827,0,0x0,8
tick,0x7ff86ea82704,73785625,0,0x0,8
tick,0x7ff86ea82704,73787649,0,0x0,8
tick,0x7ff86ea82704,73789746,0,0x0,8
tick,0x7ff86ea82704,73791553,0,0x0,8
tick,0x7ff86ea82704,73793542,0,0x0,8
tick,0x7ff86ea82704,73795765,0,0x0,8
tick,0x7ff86ea82704,73797654,0,0x0,8
tick,0x7ff86ea82704,73799670,0,0x0,8
tick,0x7ff86ea82704,73801609,0,0x0,8
tick,0x7ff86ea82704,73803560,0,0x0,8
tick,0x7ff86ea82704,73805606,0,0x0,8
tick,0x7ff86ea82704,73807605,0,0x0,8
tick,0x7ff86ea82704,73809561,0,0x0,8
tick,0x7ff86ea82704,73811922,0,0x0,8
tick,0x7ff86ea82704,73813615,0,0x0,8
tick,0x7ff86ea82704,73815628,0,0x0,8
tick,0x7ff86ea82704,73817583,0,0x0,8
tick,0x7ff86ea82704,73819509,0,0x0,8
tick,0x7ff86ea82704,73821529,0,0x0,8
tick,0x7ff86ea82704,73823457,0,0x0,8
tick,0x7ff86ea82704,73825517,0,0x0,8
tick,0x7ff86ea82704,73827647,0,0x0,8
tick,0x7ff86ea82704,73829643,0,0x0,8
tick,0x7ff86ea82704,73831608,0,0x0,8
tick,0x7ff86ea82704,73833581,0,0x0,8
tick,0x7ff86ea82704,73835469,0,0x0,8
tick,0x7ff86ea82704,73837488,0,0x0,8
tick,0x7ff86ea82704,73839497,0,0x0,8
tick,0x7ff86ea82704,73841468,0,0x0,8
tick,0x7ff86ea82704,73843512,0,0x0,8
tick,0x7ff86ea82704,73845754,0,0x0,8
tick,0x7ff86ea82704,73847669,0,0x0,8
tick,0x7ff86ea82704,73849839,0,0x0,8
tick,0x7ff86ea82704,73851468,0,0x0,8
tick,0x7ff86ea82704,73853463,0,0x0,8
tick,0x7ff86ea82704,73855511,0,0x0,8
tick,0x7ff86ea82704,73857497,0,0x0,8
tick,0x7ff86ea82704,73859425,0,0x0,8
tick,0x7ff86ea82704,73861842,0,0x0,8
tick,0x7ff86ea82704,73863652,0,0x0,8
tick,0x7ff86ea82704,73865815,0,0x0,8
tick,0x7ff86ea82704,73867382,0,0x0,8
tick,0x7ff86ea82704,73869643,0,0x0,8
tick,0x7ff86ea82704,73871518,0,0x0,8
tick,0x7ff86ea82704,73873439,0,0x0,8
tick,0x7ff86ea82704,73875344,0,0x0,8
tick,0x7ff86ea82704,73877367,0,0x0,8
tick,0x7ff86ea82704,73879488,0,0x0,8
tick,0x7ff86ea82704,73881432,0,0x0,8
tick,0x7ff86ea82704,73883334,0,0x0,8
tick,0x7ff86ea82704,73885335,0,0x0,8
tick,0x7ff86ea82704,73887352,0,0x0,8
tick,0x7ff86ea82704,73889310,0,0x0,8
tick,0x7ff86ea82704,73891393,0,0x0,8
tick,0x7ff86ea82704,73893304,0,0x0,8
tick,0x7ff86ea82704,73895560,0,0x0,8
tick,0x7ff86ea82704,73897426,0,0x0,8
tick,0x7ff86ea82704,73899404,0,0x0,8
tick,0x7ff86ea82704,73901261,0,0x0,8
tick,0x7ff86ea82704,73903385,0,0x0,8
tick,0x7ff86ea82704,73905212,0,0x0,8
tick,0x7ff86ea82704,73907263,0,0x0,8
tick,0x7ff86ea82704,73909283,0,0x0,8
tick,0x7ff86ea82704,73911531,0,0x0,8
tick,0x7ff86ea82704,73913418,0,0x0,8
tick,0x7ff86ea82704,73915253,0,0x0,8
tick,0x7ff86ea82704,73917196,0,0x0,8
tick,0x7ff86ea82704,73919315,0,0x0,8
tick,0x7ff86ea82704,73921297,0,0x0,8
tick,0x7ff86ea82704,73923335,0,0x0,8
tick,0x7ff86ea82704,73925216,0,0x0,8
tick,0x7ff86ea82704,73927268,0,0x0,8
tick,0x7ff86ea82704,73929671,0,0x0,8
tick,0x7ff86ea82704,73931281,0,0x0,8
tick,0x7ff86ea82704,73933298,0,0x0,8
tick,0x7ff86ea82704,73935374,0,0x0,8
tick,0x7ff86ea82704,73937279,0,0x0,8
tick,0x7ff86ea82704,73939274,0,0x0,8
tick,0x7ff86ea82704,73941207,0,0x0,8
tick,0x7ff86ea82704,73943200,0,0x0,8
tick,0x7ff86ea82704,73945414,0,0x0,8
tick,0x7ff86ea82704,73947310,0,0x0,8
tick,0x7ff86ea82704,73949223,0,0x0,8
tick,0x7ff86ea82704,73951297,0,0x0,8
tick,0x7ff86ea82704,73953282,0,0x0,8
tick,0x7ff86ea82704,73955277,0,0x0,8
tick,0x7ff86ea82704,73957123,0,0x0,8
tick,0x7ff86ea82704,73959210,0,0x0,8
tick,0x7ff86ea82704,73962318,0,0x0,8
tick,0x7ff86ea82704,73964701,0,0x0,8
tick,0x7ff86ea82704,73966205,0,0x0,8
tick,0x7ff86ea82704,73968098,0,0x0,8
tick,0x7ff86ea82704,73970199,0,0x0,8
tick,0x7ff86ea82704,73972101,0,0x0,8
tick,0x7ff86ea82704,73974148,0,0x0,8
tick,0x7ff86ea82704,73976074,0,0x0,8
tick,0x7ff86ea82704,73978368,0,0x0,8
tick,0x7ff86ea82704,73980168,0,0x0,8
tick,0x7ff86ea82704,73982370,0,0x0,8
tick,0x7ff86ea82704,73984086,0,0x0,8
tick,0x7ff86ea82704,73986166,0,0x0,8
tick,0x7ff86ea82704,73988153,0,0x0,8
tick,0x7ff86ea82704,73990218,0,0x0,8
tick,0x7ff86ea82704,73992074,0,0x0,8
tick,0x7ff86ea82704,73994043,0,0x0,8
tick,0x7ff86ea82704,73996317,0,0x0,8
tick,0x7ff86ea82704,73998181,0,0x0,8
tick,0x7ff86ea82704,74000167,0,0x0,8
tick,0x7ff86ea82704,74002111,0,0x0,8
tick,0x7ff86ea82704,74004079,0,0x0,8
tick,0x7ff86ea82704,74006128,0,0x0,8
tick,0x7ff86ea82704,74008030,0,0x0,8
tick,0x7ff86ea82704,74010009,0,0x0,8
tick,0x7ff86ea82704,74012638,0,0x0,8
tick,0x7ff86ea82704,74014164,0,0x0,8
tick,0x7ff86ea82704,74016089,0,0x0,8
tick,0x7ff86ea82704,74017996,0,0x0,8
tick,0x7ff86ea82704,74020031,0,0x0,8
tick,0x7ff86ea82704,74022008,0,0x0,8
tick,0x7ff86ea82704,74023932,0,0x0,8
tick,0x7ff86ea82704,74026093,0,0x0,8
tick,0x7ff86ea82704,74028329,0,0x0,8
tick,0x7ff86ea82704,74029969,0,0x0,8
tick,0x7ff86ea82704,74032047,0,0x0,8
tick,0x7ff86ea82704,74034068,0,0x0,8
tick,0x7ff86ea82704,74035979,0,0x0,8
tick,0x7ff86ea82704,74037936,0,0x0,8
tick,0x7ff86ea82704,74039956,0,0x0,8
tick,0x7ff86ea82704,74041911,0,0x0,8
tick,0x7ff86ea82704,74043984,0,0x0,8
tick,0x7ff86ea82704,74046002,0,0x0,8
tick,0x7ff86ea82704,74048006,0,0x0,8
tick,0x7ff86ea82704,74049894,0,0x0,8
tick,0x7ff86ea82704,74051929,0,0x0,8
tick,0x7ff86ea82704,74053912,0,0x0,8
tick,0x7ff86ea82704,74055915,0,0x0,8
tick,0x7ff86ea82704,74057833,0,0x0,8
tick,0x7ff86ea82704,74059935,0,0x0,8
tick,0x7ff86ea82704,74062661,0,0x0,8
tick,0x7ff86ea82704,74064962,0,0x0,8
tick,0x7ff86ea82704,74066896,0,0x0,8
tick,0x7ff86ea82704,74069047,0,0x0,8
tick,0x7ff86ea82704,74071083,0,0x0,8
tick,0x7ff86ea82704,74072809,0,0x0,8
tick,0x7ff86ea82704,74074988,0,0x0,8
tick,0x7ff86ea82704,74077006,0,0x0,8
tick,0x7ff86ea82704,74079482,0,0x0,8
tick,0x7ff86ea82704,74081122,0,0x0,8
tick,0x7ff86ea82704,74082841,0,0x0,8
tick,0x7ff86ea82704,74084961,0,0x0,8
tick,0x7ff86ea82704,74086811,0,0x0,8
tick,0x7ff86ea82704,74088934,0,0x0,8
tick,0x7ff86ea82704,74090906,0,0x0,8
tick,0x7ff86ea82704,74092973,0,0x0,8
tick,0x7ff86ea82704,74095281,0,0x0,8
tick,0x7ff86ea82704,74096906,0,0x0,8
tick,0x7ff86ea82704,74098842,0,0x0,8
tick,0x7ff86ea82704,74100959,0,0x0,8
tick,0x7ff86ea82704,74102815,0,0x0,8
tick,0x7ff86ea82704,74104851,0,0x0,8
tick,0x7ff86ea82704,74106803,0,0x0,8
tick,0x7ff86ea82704,74108819,0,0x0,8
tick,0x7ff86ea82704,74110686,0,0x0,8
tick,0x7ff86ea82704,74113286,0,0x0,8
tick,0x7ff86ea82704,74114809,0,0x0,8
tick,0x7ff86ea82704,74117099,0,0x0,8
tick,0x7ff86ea82704,74118942,0,0x0,8
tick,0x7ff86ea82704,74120763,0,0x0,8
tick,0x7ff86ea82704,74122925,0,0x0,8
tick,0x7ff86ea82704,74125028,0,0x0,8
tick,0x7ff86ea82704,74126715,0,0x0,8
tick,0x7ff86ea82704,74129945,0,0x0,8
tick,0x7ff86ea82704,74131771,0,0x0,8
tick,0x7ff86ea82704,74133692,0,0x0,8
tick,0x7ff86ea82704,74135651,0,0x0,8
tick,0x7ff86ea82704,74137748,0,0x0,8
tick,0x7ff86ea82704,74139874,0,0x0,8
tick,0x7ff86ea82704,74141647,0,0x0,8
tick,0x7ff86ea82704,74143666,0,0x0,8
tick,0x7ff86ea82704,74145815,0,0x0,8
tick,0x7ff86ea82704,74147602,0,0x0,8
tick,0x7ff86ea82704,74149685,0,0x0,8
tick,0x7ff86ea82704,74151658,0,0x0,8
tick,0x7ff86ea82704,74153623,0,0x0,8
tick,0x7ff86ea82704,74155584,0,0x0,8
tick,0x7ff86ea82704,74157665,0,0x0,8
tick,0x7ff86ea82704,74159511,0,0x0,8
tick,0x7ff86ea82704,74162084,0,0x0,8
tick,0x7ff86ea82704,74163770,0,0x0,8
tick,0x7ff86ea82704,74165701,0,0x0,8
tick,0x7ff86ea82704,74167768,0,0x0,8
tick,0x7ff86ea82704,74169563,0,0x0,8
tick,0x7ff86ea82704,74171678,0,0x0,8
tick,0x7ff86ea82704,74173593,0,0x0,8
tick,0x7ff86ea82704,74175876,0,0x0,8
tick,0x7ff86ea82704,74177779,0,0x0,8
tick,0x7ff86ea82704,74180772,0,0x0,8
tick,0x7ff86ea82704,74182645,0,0x0,8
tick,0x7ff86ea82704,74184805,0,0x0,8
tick,0x7ff86ea82704,74186646,0,0x0,8
tick,0x7ff86ea82704,74188700,0,0x0,8
tick,0x7ff86ea82704,74190551,0,0x0,8
tick,0x7ff86ea82704,74192690,0,0x0,8
tick,0x7ff86ea82704,74195157,0,0x0,8
tick,0x7ff86ea82704,74197366,0,0x0,8
tick,0x7ff86ea82704,74198608,0,0x0,8
tick,0x7ff86ea82704,74200541,0,0x0,8
tick,0x7ff86ea82704,74202442,0,0x0,8
tick,0x7ff86ea82704,74204586,0,0x0,8
tick,0x7ff86ea82704,74206573,0,0x0,8
tick,0x7ff86ea82704,74208517,0,0x0,8
tick,0x7ff86ea82704,74210487,0,0x0,8
tick,0x7ff86ea82704,74212835,0,0x0,8
tick,0x7ff86ea82704,74214474,0,0x0,8
tick,0x7ff86ea82704,74216564,0,0x0,8
tick,0x7ff86ea82704,74218412,0,0x0,8
tick,0x7ff86ea82704,74220481,0,0x0,8
tick,0x7ff86ea82704,74222397,0,0x0,8
tick,0x7ff86ea82704,74224440,0,0x0,8
tick,0x7ff86ea82704,74226439,0,0x0,8
tick,0x7ff86ea82704,74229040,0,0x0,8
tick,0x7ff86ea82704,74230433,0,0x0,8
tick,0x7ff86ea82704,74232452,0,0x0,8
tick,0x7ff86ea82704,74234490,0,0x0,8
tick,0x7ff86ea82704,74236345,0,0x0,8
tick,0x7ff86ea82704,74238476,0,0x0,8
tick,0x7ff86ea82704,74240417,0,0x0,8
tick,0x7ff86ea82704,74242426,0,0x0,8
tick,0x7ff86ea82704,74244734,0,0x0,8
tick,0x7ff86ea82704,74246438,0,0x0,8
tick,0x7ff86ea82704,74248625,0,0x0,8
tick,0x7ff86ea82704,74250435,0,0x0,8
tick,0x7ff86ea82704,74252395,0,0x0,8
tick,0x7ff86ea82704,74254334,0,0x0,8
tick,0x7ff86ea82704,74256363,0,0x0,8
tick,0x7ff86ea82704,74258307,0,0x0,8
tick,0x7ff86ea82704,74260384,0,0x0,8
tick,0x7ff86ea82704,74262925,0,0x0,8
tick,0x7ff86ea82704,74264332,0,0x0,8
tick,0x7ff86ea82704,74266326,0,0x0,8
tick,0x7ff86ea82704,74268234,0,0x0,8
tick,0x7ff86ea82704,74270265,0,0x0,8
tick,0x7ff86ea82704,74272261,0,0x0,8
tick,0x7ff86ea82704,74274320,0,0x0,8
tick,0x7ff86ea82704,74276250,0,0x0,8
tick,0x7ff86ea82704,74278649,0,0x0,8
tick,0x7ff86ea82704,74280279,0,0x0,8
tick,0x7ff86ea82704,74282347,0,0x0,8
tick,0x7ff86ea82704,74284259,0,0x0,8
tick,0x7ff86ea82704,74286240,0,0x0,8
tick,0x7ff86ea82704,74288249,0,0x0,8
tick,0x7ff86ea82704,74290282,0,0x0,8
tick,0x7ff86ea82704,74292184,0,0x0,8
tick,0x7ff86ea82704,74294630,0,0x0,8
tick,0x7ff86ea82704,74296969,0,0x0,8
tick,0x7ff86ea82704,74298348,0,0x0,8
tick,0x7ff86ea82704,74300243,0,0x0,8
tick,0x7ff86ea82704,74302422,0,0x0,8
tick,0x7ff86ea82704,74304224,0,0x0,8
tick,0x7ff86ea82704,74306239,0,0x0,8
tick,0x7ff86ea82704,74308294,0,0x0,8
tick,0x7ff86ea82704,74310218,0,0x0,8
tick,0x7ff86ea82704,74312352,0,0x0,8
tick,0x7ff86ea82704,74314528,0,0x0,8
tick,0x7ff86ea82704,74316256,0,0x0,8
tick,0x7ff86ea82704,74318960,0,0x0,8
tick,0x7ff86ea82704,74320189,0,0x0,8
tick,0x7ff86ea82704,74322281,0,0x0,8
tick,0x7ff86ea82704,74324129,0,0x0,8
tick,0x7ff86ea82704,74326302,0,0x0,8
tick,0x7ff86ea82704,74328879,0,0x0,8
tick,0x7ff86ea82704,74331005,0,0x0,8
tick,0x7ff86ea82704,74332458,0,0x0,8
tick,0x7ff86ea82704,74334189,0,0x0,8
tick,0x7ff86ea82704,74336207,0,0x0,8
tick,0x7ff86ea82704,74338208,0,0x0,8
tick,0x7ff86ea82704,74340182,0,0x0,8
tick,0x7ff86ea82704,74342117,0,0x0,8
tick,0x7ff86ea82704,74344318,0,0x0,8
tick,0x7ff86ea82704,74347076,0,0x0,8
tick,0x7ff86ea82704,74348462,0,0x0,8
tick,0x7ff86ea82704,74350165,0,0x0,8
tick,0x7ff86ea82704,74352249,0,0x0,8
tick,0x7ff86ea82704,74354209,0,0x0,8
tick,0x7ff86ea82704,74356154,0,0x0,8
tick,0x7ff86ea82704,74358279,0,0x0,8
tick,0x7ff86ea82704,74360295,0,0x0,8
tick,0x7ff86ea82704,74362649,0,0x0,8
tick,0x7ff86ea82704,74364211,0,0x0,8
tick,0x7ff86ea82704,74366179,0,0x0,8
tick,0x7ff86ea82704,74368396,0,0x0,8
tick,0x7ff86ea82704,74370258,0,0x0,8
tick,0x7ff86ea82704,74372177,0,0x0,8
tick,0x7ff86ea82704,74374220,0,0x0,8
tick,0x7ff86ea82704,74376262,0,0x0,8
tick,0x7ff86ea82704,74378605,0,0x0,8
tick,0x7ff86ea82704,74381572,0,0x0,8
tick,0x7ff86ea82704,74383348,0,0x0,8
tick,0x7ff86ea82704,74385023,0,0x0,8
tick,0x7ff86ea82704,74387062,0,0x0,8
tick,0x7ff86ea82704,74389237,0,0x0,8
tick,0x7ff86ea82704,74391087,0,0x0,8
tick,0x7ff86ea82704,74392947,0,0x0,8
tick,0x7ff86ea82704,74396035,0,0x0,8
tick,0x7ff86ea82704,74399390,0,0x0,8
tick,0x7ff86ea82704,74401095,0,0x0,8
tick,0x7ff86ea82704,74402974,0,0x0,8
tick,0x7ff86ea82704,74405394,0,0x0,8
tick,0x7ff86ea82704,74406997,0,0x0,8
tick,0x7ff86ea82704,74408916,0,0x0,8
tick,0x7ff86ea82704,74411332,0,0x0,8
tick,0x7ff86ea82704,74414587,0,0x0,8
tick,0x7ff86ea82704,74416154,0,0x0,8
tick,0x7ff86ea82704,74418175,0,0x0,8
tick,0x7ff86ea82704,74420010,0,0x0,8
tick,0x7ff86ea82704,74421992,0,0x0,8
tick,0x7ff86ea82704,74424140,0,0x0,8
tick,0x7ff86ea82704,74426129,0,0x0,8
tick,0x7ff86ea82704,74428570,0,0x0,8
tick,0x7ff86ea82704,74431239,0,0x0,8
tick,0x7ff86ea82704,74433381,0,0x0,8
tick,0x7ff86ea82704,74434992,0,0x0,8
tick,0x7ff86ea82704,74437012,0,0x0,8
tick,0x7ff86ea82704,74439039,0,0x0,8
tick,0x7ff86ea82704,74441021,0,0x0,8
tick,0x7ff86ea82704,74442870,0,0x0,8
tick,0x7ff86ea82704,74447417,0,0x0,8
tick,0x7ff86ea82704,74448068,0,0x0,8
tick,0x7ff86ea82704,74450284,0,0x0,8
tick,0x7ff86ea82704,74452010,0,0x0,8
tick,0x7ff86ea82704,74453843,0,0x0,8
tick,0x7ff86ea82704,74455943,0,0x0,8
tick,0x7ff86ea82704,74457906,0,0x0,8
tick,0x7ff86ea82704,74459786,0,0x0,8
tick,0x7ff86ea82704,74462694,0,0x0,8
tick,0x7ff86ea82704,74464786,0,0x0,8
tick,0x7ff86ea82704,74466998,0,0x0,8
tick,0x7ff86ea82704,74468708,0,0x0,8
tick,0x7ff86ea82704,74470728,0,0x0,8
tick,0x7ff86ea82704,74472823,0,0x0,8
tick,0x7ff86ea82704,74474813,0,0x0,8
tick,0x7ff86ea82704,74476768,0,0x0,8
tick,0x7ff86ea82704,74480413,0,0x0,8
tick,0x7ff86ea82704,74481914,0,0x0,8
tick,0x7ff86ea82704,74483961,0,0x0,8
tick,0x7ff86ea82704,74485854,0,0x0,8
tick,0x7ff86ea82704,74488020,0,0x0,8
tick,0x7ff86ea82704,74489912,0,0x0,8
tick,0x7ff86ea82704,74491950,0,0x0,8
tick,0x7ff86ea82704,74493781,0,0x0,8
tick,0x7ff86ea82704,74497244,0,0x0,8
tick,0x7ff86ea82704,74499136,0,0x0,8
tick,0x7ff86ea82704,74500702,0,0x0,8
tick,0x7ff86ea82704,74502716,0,0x0,8
tick,0x7ff86ea82704,74504649,0,0x0,8
tick,0x7ff86ea82704,74506701,0,0x0,8
tick,0x7ff86ea82704,74508671,0,0x0,8
tick,0x7ff86ea82704,74510733,0,0x0,8
tick,0x7ff86ea82704,74513309,0,0x0,8
tick,0x7ff86ea82704,74514762,0,0x0,8
tick,0x7ff86ea82704,74516561,0,0x0,8
tick,0x7ff86ea82704,74518704,0,0x0,8
tick,0x7ff86ea82704,74520792,0,0x0,8
tick,0x7ff86ea82704,74525043,0,0x0,8
tick,0x7ff86ea82704,74527344,0,0x0,8
tick,0x7ff86ea82704,74528923,0,0x0,8
tick,0x7ff86ea82704,74531254,0,0x0,8
tick,0x7ff86ea82704,74532541,0,0x0,8
tick,0x7ff86ea82704,74534546,0,0x0,8
tick,0x7ff86ea82704,74536724,0,0x0,8
tick,0x7ff86ea82704,74538853,0,0x0,8
tick,0x7ff86ea82704,74540647,0,0x0,8
tick,0x7ff86ea82704,74542640,0,0x0,8
tick,0x7ff86ea82704,74545305,0,0x0,8
tick,0x7ff86ea82704,74547631,0,0x0,8
tick,0x7ff86ea82704,74548494,0,0x0,8
tick,0x7ff86ea82704,74550424,0,0x0,8
tick,0x7ff86ea82704,74552520,0,0x0,8
tick,0x7ff86ea82704,74555127,0,0x0,8
tick,0x7ff86ea82704,74556582,0,0x0,8
tick,0x7ff86ea82704,74558474,0,0x0,8
tick,0x7ff86ea82704,74560438,0,0x0,8
tick,0x7ff86ea82704,74563722,0,0x0,8
tick,0x7ff86ea82704,74565166,0,0x0,8
tick,0x7ff86ea82704,74566506,0,0x0,8
tick,0x7ff86ea82704,74568621,0,0x0,8
tick,0x7ff86ea82704,74570500,0,0x0,8
tick,0x7ff86ea82704,74572559,0,0x0,8
tick,0x7ff86ea82704,74574571,0,0x0,8
tick,0x7ff86ea82704,74576712,0,0x0,8
tick,0x7ff86ea82704,74579158,0,0x0,8
tick,0x7ff86ea82704,74581004,0,0x0,8
tick,0x7ff86ea82704,74582598,0,0x0,8
tick,0x7ff86ea82704,74584590,0,0x0,8
tick,0x7ff86ea82704,74586544,0,0x0,8
tick,0x7ff86ea82704,74588460,0,0x0,8
tick,0x7ff86ea82704,74590498,0,0x0,8
tick,0x7ff86ea82704,74592786,0,0x0,8
tick,0x7ff86ea82704,74595969,0,0x0,8
tick,0x7ff86ea82704,74597978,0,0x0,8
tick,0x7ff86ea82704,74599517,0,0x0,8
tick,0x7ff86ea82704,74601718,0,0x0,8
tick,0x7ff86ea82704,74603438,0,0x0,8
tick,0x7ff86ea82704,74605823,0,0x0,8
tick,0x7ff86ea82704,74607473,0,0x0,8
tick,0x7ff86ea82704,74609567,0,0x0,8
tick,0x7ff86ea82704,74612306,0,0x0,8
tick,0x7ff86ea82704,74614669,0,0x0,8
tick,0x7ff86ea82704,74616762,0,0x0,8
tick,0x7ff86ea82704,74618312,0,0x0,8
tick,0x7ff86ea82704,74620506,0,0x0,8
tick,0x7ff86ea82704,74622445,0,0x0,8
tick,0x7ff86ea82704,74624840,0,0x0,8
tick,0x7ff86ea82704,74626457,0,0x0,8
tick,0x7ff86ea82704,74629644,0,0x0,8
tick,0x7ff86ea82704,74630974,0,0x0,8
tick,0x7ff86ea82704,74632490,0,0x0,8
tick,0x7ff86ea82704,74634352,0,0x0,8
tick,0x7ff86ea82704,74636568,0,0x0,8
tick,0x7ff86ea82704,74638506,0,0x0,8
tick,0x7ff86ea82704,74640517,0,0x0,8
tick,0x7ff86ea82704,74642594,0,0x0,8
tick,0x7ff86ea82704,74644554,0,0x0,8
tick,0x7ff86ea82704,74646657,0,0x0,8
tick,0x7ff86ea82704,74648310,0,0x0,8
tick,0x7ff86ea82704,74650380,0,0x0,8
tick,0x7ff86ea82704,74652300,0,0x0,8
tick,0x7ff86ea82704,74654594,0,0x0,8
tick,0x7ff86ea82704,74656338,0,0x0,8
tick,0x7ff86ea82704,74658432,0,0x0,8
tick,0x7ff86ea82704,74660357,0,0x0,8
tick,0x7ff86ea82704,74662861,0,0x0,8
tick,0x7ff86ea82704,74664771,0,0x0,8
tick,0x7ff86ea82704,74666490,0,0x0,8
tick,0x7ff86ea82704,74668237,0,0x0,8
tick,0x7ff86ea82704,74670384,0,0x0,8
tick,0x7ff86ea82704,74672443,0,0x0,8
tick,0x7ff86ea82704,74674425,0,0x0,8
tick,0x7ff86ea82704,74676442,0,0x0,8
tick,0x7ff86ea82704,74678701,0,0x0,8
tick,0x7ff86ea82704,74680582,0,0x0,8
tick,0x7ff86ea82704,74682437,0,0x0,8
tick,0x7ff86ea82704,74684388,0,0x0,8
tick,0x7ff86ea82704,74686467,0,0x0,8
tick,0x7ff86ea82704,74688283,0,0x0,8
tick,0x7ff86ea82704,74690385,0,0x0,8
tick,0x7ff86ea82704,74692370,0,0x0,8
tick,0x7ff86ea82704,74694532,0,0x0,8
tick,0x7ff86ea82704,74696393,0,0x0,8
tick,0x7ff86ea82704,74698372,0,0x0,8
tick,0x7ff86ea82704,74700577,0,0x0,8
tick,0x7ff86ea82704,74702256,0,0x0,8
tick,0x7ff86ea82704,74704261,0,0x0,8
tick,0x7ff86ea82704,74706276,0,0x0,8
tick,0x7ff86ea82704,74708240,0,0x0,8
tick,0x7ff86ea82704,74710229,0,0x0,8
tick,0x7ff86ea82704,74712511,0,0x0,8
tick,0x7ff86ea82704,74714349,0,0x0,8
tick,0x7ff86ea82704,74716320,0,0x0,8
tick,0x7ff86ea82704,74718206,0,0x0,8
tick,0x7ff86ea82704,74720275,0,0x0,8
tick,0x7ff86ea82704,74722332,0,0x0,8
tick,0x7ff86ea82704,74724291,0,0x0,8
tick,0x7ff86ea82704,74726286,0,0x0,8
tick,0x7ff86ea82704,74728269,0,0x0,8
tick,0x7ff86ea82704,74730333,0,0x0,8
tick,0x7ff86ea82704,74732200,0,0x0,8
tick,0x7ff86ea82704,74734447,0,0x0,8
tick,0x7ff86ea82704,74736143,0,0x0,8
tick,0x7ff86ea82704,74738300,0,0x0,8
tick,0x7ff86ea82704,74740048,0,0x0,8
tick,0x7ff86ea82704,74742234,0,0x0,8
tick,0x7ff86ea82704,74744109,0,0x0,8
tick,0x7ff86ea82704,74746170,0,0x0,8
tick,0x7ff86ea82704,74748216,0,0x0,8
tick,0x7ff86ea82704,74750205,0,0x0,8
tick,0x7ff86ea82704,74752223,0,0x0,8
tick,0x7ff86ea82704,74754350,0,0x0,8
tick,0x7ff86ea82704,74756230,0,0x0,8
tick,0x7ff86ea82704,74758203,0,0x0,8
tick,0x7ff86ea82704,74760143,0,0x0,8
tick,0x7ff86ea82704,74762128,0,0x0,8
tick,0x7ff86ea82704,74764236,0,0x0,8
tick,0x7ff86ea82704,74766349,0,0x0,8
tick,0x7ff86ea82704,74768222,0,0x0,8
tick,0x7ff86ea82704,74770122,0,0x0,8
tick,0x7ff86ea82704,74772093,0,0x0,8
tick,0x7ff86ea82704,74774074,0,0x0,8
tick,0x7ff86ea82704,74776449,0,0x0,8
tick,0x7ff86ea82704,74779478,0,0x0,8
tick,0x7ff86ea82704,74780952,0,0x0,8
tick,0x7ff86ea82704,74783104,0,0x0,8
tick,0x7ff86ea82704,74784825,0,0x0,8
tick,0x7ff86ea82704,74786910,0,0x0,8
tick,0x7ff86ea82704,74789048,0,0x0,8
tick,0x7ff86ea82704,74790893,0,0x0,8
tick,0x7ff86ea82704,74792878,0,0x0,8
tick,0x7ff86ea82704,74794974,0,0x0,8
tick,0x7ff86ea82704,74796871,0,0x0,8
tick,0x7ff86ea82704,74798973,0,0x0,8
tick,0x7ff86ea82704,74800868,0,0x0,8
tick,0x7ff86ea82704,74802818,0,0x0,8
tick,0x7ff86ea82704,74804861,0,0x0,8
tick,0x7ff86ea82704,74806780,0,0x0,8
tick,0x7ff86ea82704,74808824,0,0x0,8
tick,0x7ff86ea82704,74810822,0,0x0,8
tick,0x7ff86ea82704,74812884,0,0x0,8
tick,0x7ff86ea82704,74814771,0,0x0,8
tick,0x7ff86ea82704,74816792,0,0x0,8
tick,0x7ff86ea82704,74818776,0,0x0,8
tick,0x7ff86ea82704,74820839,0,0x0,8
tick,0x7ff86ea82704,74822731,0,0x0,8
tick,0x7ff86ea82704,74824816,0,0x0,8
tick,0x7ff86ea82704,74826778,0,0x0,8
tick,0x7ff86ea82704,74828826,0,0x0,8
tick,0x7ff86ea82704,74830778,0,0x0,8
tick,0x7ff86ea82704,74832863,0,0x0,8
tick,0x7ff86ea82704,74834818,0,0x0,8
tick,0x7ff86ea82704,74836842,0,0x0,8
tick,0x7ff86ea82704,74838752,0,0x0,8
tick,0x7ff86ea82704,74840897,0,0x0,8
tick,0x7ff86ea82704,74842964,0,0x0,8
tick,0x7ff86ea82704,74844906,0,0x0,8
tick,0x7ff86ea82704,74846731,0,0x0,8
tick,0x7ff86ea82704,74848767,0,0x0,8
tick,0x7ff86ea82704,74850868,0,0x0,8
tick,0x7ff86ea82704,74852734,0,0x0,8
tick,0x7ff86ea82704,74854793,0,0x0,8
tick,0x7ff86ea82704,74856723,0,0x0,8
tick,0x7ff86ea82704,74858687,0,0x0,8
tick,0x7ff86ea82704,74860788,0,0x0,8
tick,0x7ff86ea82704,74862716,0,0x0,8
tick,0x7ff86ea82704,74864789,0,0x0,8
tick,0x7ff86ea82704,74867029,0,0x0,8
tick,0x7ff86ea82704,74868641,0,0x0,8
tick,0x7ff86ea82704,74870703,0,0x0,8
tick,0x7ff86ea82704,74872640,0,0x0,8
tick,0x7ff86ea82704,74874841,0,0x0,8
tick,0x7ff86ea82704,74876758,0,0x0,8
tick,0x7ff86ea82704,74878959,0,0x0,8
tick,0x7ff86ea82704,74880713,0,0x0,8
tick,0x7ff86ea82704,74883094,0,0x0,8
tick,0x7ff86ea82704,74884659,0,0x0,8
tick,0x7ff86ea82704,74886615,0,0x0,8
tick,0x7ff86ea82704,74888647,0,0x0,8
tick,0x7ff86ea82704,74890682,0,0x0,8
tick,0x7ff86ea82704,74892573,0,0x0,8
tick,0x7ff86ea82704,74894799,0,0x0,8
tick,0x7ff86ea82704,74896628,0,0x0,8
tick,0x7ff86ea82704,74898748,0,0x0,8
tick,0x7ff86ea82704,74900690,0,0x0,8
tick,0x7ff86ea82704,74902570,0,0x0,8
tick,0x7ff86ea82704,74904613,0,0x0,8
tick,0x7ff86ea82704,74906665,0,0x0,8
tick,0x7ff86ea82704,74908551,0,0x0,8
tick,0x7ff86ea82704,74910555,0,0x0,8
tick,0x7ff86ea82704,74912747,0,0x0,8
tick,0x7ff86ea82704,74914766,0,0x0,8
tick,0x7ff86ea82704,74916566,0,0x0,8
tick,0x7ff86ea82704,74918592,0,0x0,8
tick,0x7ff86ea82704,74920482,0,0x0,8
tick,0x7ff86ea82704,74922685,0,0x0,8
tick,0x7ff86ea82704,74924515,0,0x0,8
tick,0x7ff86ea82704,74926547,0,0x0,8
tick,0x7ff86ea82704,74928600,0,0x0,8
tick,0x7ff86ea82704,74930594,0,0x0,8
tick,0x7ff86ea82704,74932543,0,0x0,8
tick,0x7ff86ea82704,74934565,0,0x0,8
tick,0x7ff86ea82704,74936469,0,0x0,8
tick,0x7ff86ea82704,74938554,0,0x0,8
tick,0x7ff86ea82704,74940551,0,0x0,8
tick,0x7ff86ea82704,74942445,0,0x0,8
tick,0x7ff86ea82704,74944777,0,0x0,8
tick,0x7ff86ea82704,74946508,0,0x0,8
tick,0x7ff86ea82704,74948646,0,0x0,8
tick,0x7ff86ea82704,74950514,0,0x0,8
tick,0x7ff86ea82704,74952472,0,0x0,8
tick,0x7ff86ea82704,74954512,0,0x0,8
tick,0x7ff86ea82704,74956393,0,0x0,8
tick,0x7ff86ea82704,74958510,0,0x0,8
tick,0x7ff86ea82704,74960394,0,0x0,8
tick,0x7ff86ea82704,74962618,0,0x0,8
tick,0x7ff86ea82704,74964428,0,0x0,8
tick,0x7ff86ea82704,74966434,0,0x0,8
tick,0x7ff86ea82704,74968436,0,0x0,8
tick,0x7ff86ea82704,74970413,0,0x0,8
tick,0x7ff86ea82704,74972424,0,0x0,8
tick,0x7ff86ea82704,74974392,0,0x0,8
tick,0x7ff86ea82704,74976377,0,0x0,8
tick,0x7ff86ea82704,74978414,0,0x0,8
tick,0x7ff86ea82704,74980446,0,0x0,8
tick,0x7ff86ea82704,74982410,0,0x0,8
tick,0x7ff86ea82704,74984424,0,0x0,8
tick,0x7ff86ea82704,74986424,0,0x0,8
tick,0x7ff86ea82704,74988311,0,0x0,8
tick,0x7ff86ea82704,74990294,0,0x0,8
tick,0x7ff86ea82704,74992412,0,0x0,8
tick,0x7ff86ea82704,74994588,0,0x0,8
tick,0x7ff86ea82704,74996377,0,0x0,8
tick,0x7ff86ea82704,74998312,0,0x0,8
tick,0x7ff86ea82704,75000408,0,0x0,8
tick,0x7ff86ea82704,75002293,0,0x0,8
tick,0x7ff86ea82704,75004349,0,0x0,8
tick,0x7ff86ea82704,75006293,0,0x0,8
tick,0x7ff86ea82704,75008365,0,0x0,8
tick,0x7ff86ea82704,75010278,0,0x0,8
tick,0x7ff86ea82704,75012398,0,0x0,8
tick,0x7ff86ea82704,75014346,0,0x0,8
tick,0x7ff86ea82704,75016410,0,0x0,8
tick,0x7ff86ea82704,75018290,0,0x0,8
tick,0x7ff86ea82704,75020285,0,0x0,8
tick,0x7ff86ea82704,75022229,0,0x0,8
tick,0x7ff86ea82704,75024223,0,0x0,8
tick,0x7ff86ea82704,75026247,0,0x0,8
tick,0x7ff86ea82704,75028500,0,0x0,8
tick,0x7ff86ea82704,75030355,0,0x0,8
tick,0x7ff86ea82704,75032306,0,0x0,8
tick,0x7ff86ea82704,75034246,0,0x0,8
tick,0x7ff86ea82704,75036185,0,0x0,8
tick,0x7ff86ea82704,75038272,0,0x0,8
tick,0x7ff86ea82704,75040166,0,0x0,8
tick,0x7ff86ea82704,75042262,0,0x0,8
tick,0x7ff86ea82704,75044216,0,0x0,8
tick,0x7ff86ea82704,75046290,0,0x0,8
tick,0x7ff86ea82704,75048145,0,0x0,8
tick,0x7ff86ea82704,75050204,0,0x0,8
tick,0x7ff86ea82704,75052146,0,0x0,8
tick,0x7ff86ea82704,75054130,0,0x0,8
tick,0x7ff86ea82704,75056140,0,0x0,8
tick,0x7ff86ea82704,75058185,0,0x0,8
tick,0x7ff86ea82704,75060092,0,0x0,8
tick,0x7ff86ea82704,75062259,0,0x0,8
tick,0x7ff86ea82704,75064217,0,0x0,8
tick,0x7ff86ea82704,75066347,0,0x0,8
tick,0x7ff86ea82704,75068130,0,0x0,8
tick,0x7ff86ea82704,75070129,0,0x0,8
tick,0x7ff86ea82704,75072103,0,0x0,8
tick,0x7ff86ea82704,75074043,0,0x0,8
tick,0x7ff86ea82704,75076149,0,0x0,8
tick,0x7ff86ea82704,75078187,0,0x0,8
tick,0x7ff86ea82704,75080090,0,0x0,8
tick,0x7ff86ea82704,75082080,0,0x0,8
tick,0x7ff86ea82704,75084063,0,0x0,8
tick,0x7ff86ea82704,75086103,0,0x0,8
tick,0x7ff86ea82704,75088064,0,0x0,8
tick,0x7ff86ea82704,75090103,0,0x0,8
tick,0x7ff86ea82704,75092143,0,0x0,8
tick,0x7ff86ea82704,75094032,0,0x0,8
tick,0x7ff86ea82704,75096255,0,0x0,8
tick,0x7ff86ea82704,75098016,0,0x0,8
tick,0x7ff86ea82704,75100093,0,0x0,8
tick,0x7ff86ea82704,75102026,0,0x0,8
tick,0x7ff86ea82704,75104104,0,0x0,8
tick,0x7ff86ea82704,75106007,0,0x0,8
tick,0x7ff86ea82704,75108037,0,0x0,8
tick,0x7ff86ea82704,75109984,0,0x0,8
tick,0x7ff86ea82704,75111967,0,0x0,8
tick,0x7ff86ea82704,75113928,0,0x0,8
tick,0x7ff86ea82704,75116027,0,0x0,8
tick,0x7ff86ea82704,75117989,0,0x0,8
tick,0x7ff86ea82704,75120003,0,0x0,8
tick,0x7ff86ea82704,75121999,0,0x0,8
tick,0x7ff86ea82704,75123969,0,0x0,8
tick,0x7ff86ea82704,75126010,0,0x0,8
tick,0x7ff86ea82704,75128063,0,0x0,8
tick,0x7ff86ea82704,75130025,0,0x0,8
tick,0x7ff86ea82704,75132027,0,0x0,8
tick,0x7ff86ea82704,75133990,0,0x0,8
tick,0x7ff86ea82704,75136007,0,0x0,8
tick,0x7ff86ea82704,75137948,0,0x0,8
tick,0x7ff86ea82704,75140028,0,0x0,8
tick,0x7ff86ea82704,75141990,0,0x0,8
tick,0x7ff86ea82704,75144282,0,0x0,8
tick,0x7ff86ea82704,75145941,0,0x0,8
tick,0x7ff86ea82704,75149119,0,0x0,8
tick,0x7ff86ea82704,75151308,0,0x0,8
tick,0x7ff86ea82704,75153258,0,0x0,8
tick,0x7ff86ea82704,75155147,0,0x0,8
tick,0x7ff86ea82704,75157325,0,0x0,8
tick,0x7ff86ea82704,75159910,0,0x0,8
tick,0x7ff86ea82704,75161635,0,0x0,8
tick,0x7ff86ea82704,75163054,0,0x0,8
tick,0x7ff86ea82704,75164994,0,0x0,8
tick,0x7ff86ea82704,75166917,0,0x0,8
tick,0x7ff86ea82704,75168925,0,0x0,8
tick,0x7ff86ea82704,75170991,0,0x0,8
tick,0x7ff86ea82704,75172880,0,0x0,8
tick,0x7ff86ea82704,75174971,0,0x0,8
tick,0x7ff86ea82704,75176914,0,0x0,8
tick,0x7ff86ea82704,75181696,0,0x0,8
tick,0x7ff86ea82704,75182796,0,0x0,8
tick,0x7ff86ea82704,75184816,0,0x0,8
tick,0x7ff86ea82704,75186808,0,0x0,8
tick,0x7ff86ea82704,75188776,0,0x0,8
tick,0x7ff86ea82704,75190801,0,0x0,8
tick,0x7ff86ea82704,75192771,0,0x0,8
tick,0x7ff86ea82704,75194862,0,0x0,8
tick,0x7ff86ea82704,75197495,0,0x0,8
tick,0x7ff86ea82704,75198886,0,0x0,8
tick,0x7ff86ea82704,75201023,0,0x0,8
tick,0x7ff86ea82704,75203241,0,0x0,8
tick,0x7ff86ea82704,75205013,0,0x0,8
tick,0x7ff86ea82704,75206914,0,0x0,8
tick,0x7ff86ea82704,75208990,0,0x0,8
tick,0x7ff86ea82704,75210910,0,0x0,8
tick,0x7ff86ea82704,75214671,0,0x0,8
tick,0x7ff86ea82704,75216177,0,0x0,8
tick,0x7ff86ea82704,75218033,0,0x0,8
tick,0x7ff86ea82704,75219804,0,0x0,8
tick,0x7ff86ea82704,75221856,0,0x0,8
tick,0x7ff86ea82704,75223890,0,0x0,8
tick,0x7ff86ea82704,75225886,0,0x0,8
tick,0x7ff86ea82704,75228596,0,0x0,8
tick,0x7ff86ea82704,75229954,0,0x0,8
tick,0x7ff86ea82704,75231848,0,0x0,8
tick,0x7ff86ea82704,75233736,0,0x0,8
tick,0x7ff86ea82704,75235844,0,0x0,8
tick,0x7ff86ea82704,75237892,0,0x0,8
tick,0x7ff86ea82704,75239887,0,0x0,8
tick,0x7ff86ea82704,75241744,0,0x0,8
tick,0x7ff86ea82704,75243876,0,0x0,8
tick,0x7ff86ea82704,75246576,0,0x0,8
tick,0x7ff86ea82704,75247710,0,0x0,8
tick,0x7ff86ea82704,75249617,0,0x0,8
tick,0x7ff86ea82704,75251587,0,0x0,8
tick,0x7ff86ea82704,75253575,0,0x0,8
tick,0x7ff86ea82704,75255561,0,0x0,8
tick,0x7ff86ea82704,75257600,0,0x0,8
tick,0x7ff86ea82704,75259594,0,0x0,8
tick,0x7ff86ea82704,75261914,0,0x0,8
tick,0x7ff86ea82704,75263682,0,0x0,8
tick,0x7ff86ea82704,75265803,0,0x0,8
tick,0x7ff86ea82704,75267553,0,0x0,8
tick,0x7ff86ea82704,75269661,0,0x0,8
tick,0x7ff86ea82704,75271613,0,0x0,8
tick,0x7ff86ea82704,75273616,0,0x0,8
tick,0x7ff86ea82704,75275563,0,0x0,8
tick,0x7ff86ea82704,75277707,0,0x0,8
tick,0x7ff86ea82704,75279792,0,0x0,8
tick,0x7ff86ea82704,75281632,0,0x0,8
tick,0x7ff86ea82704,75283587,0,0x0,8
tick,0x7ff86ea82704,75285693,0,0x0,8
tick,0x7ff86ea82704,75287629,0,0x0,8
tick,0x7ff86ea82704,75289634,0,0x0,8
tick,0x7ff86ea82704,75291689,0,0x0,8
tick,0x7ff86ea82704,75293577,0,0x0,8
tick,0x7ff86ea82704,75296609,0,0x0,8
tick,0x7ff86ea82704,75298778,0,0x0,8
tick,0x7ff86ea82704,75300676,0,0x0,8
tick,0x7ff86ea82704,75302794,0,0x0,8
tick,0x7ff86ea82704,75304639,0,0x0,8
tick,0x7ff86ea82704,75306763,0,0x0,8
tick,0x7ff86ea82704,75308601,0,0x0,8
tick,0x7ff86ea82704,75310658,0,0x0,8
tick,0x7ff86ea82704,75312845,0,0x0,8
tick,0x7ff86ea82704,75314781,0,0x0,8
tick,0x7ff86ea82704,75316603,0,0x0,8
tick,0x7ff86ea82704,75318606,0,0x0,8
tick,0x7ff86ea82704,75320565,0,0x0,8
tick,0x7ff86ea82704,75322706,0,0x0,8
tick,0x7ff86ea82704,75324569,0,0x0,8
tick,0x7ff86ea82704,75326581,0,0x0,8
tick,0x7ff86ea82704,75329391,0,0x0,8
tick,0x7ff86ea82704,75330532,0,0x0,8
tick,0x7ff86ea82704,75332585,0,0x0,8
tick,0x7ff86ea82704,75334464,0,0x0,8
tick,0x7ff86ea82704,75336603,0,0x0,8
tick,0x7ff86ea82704,75338547,0,0x0,8
tick,0x7ff86ea82704,75340544,0,0x0,8
tick,0x7ff86ea82704,75342519,0,0x0,8
tick,0x7ff86ea82704,75344928,0,0x0,8
tick,0x7ff86ea82704,75346816,0,0x0,8
tick,0x7ff86ea82704,75348624,0,0x0,8
tick,0x7ff86ea82704,75350464,0,0x0,8
tick,0x7ff86ea82704,75352585,0,0x0,8
tick,0x7ff86ea82704,75354620,0,0x0,8
tick,0x7ff86ea82704,75356536,0,0x0,8
tick,0x7ff86ea82704,75358440,0,0x0,8
tick,0x7ff86ea82704,75360499,0,0x0,8
tick,0x7ff86ea82704,75363265,0,0x0,8
tick,0x7ff86ea82704,75365482,0,0x0,8
tick,0x7ff86ea82704,75367430,0,0x0,8
tick,0x7ff86ea82704,75369477,0,0x0,8
tick,0x7ff86ea82704,75371354,0,0x0,8
tick,0x7ff86ea82704,75373378,0,0x0,8
tick,0x7ff86ea82704,75375277,0,0x0,8
tick,0x7ff86ea82704,75377352,0,0x0,8
tick,0x7ff86ea82704,75380182,0,0x0,8
tick,0x7ff86ea82704,75381339,0,0x0,8
tick,0x7ff86ea82704,75383373,0,0x0,8
tick,0x7ff86ea82704,75385493,0,0x0,8
tick,0x7ff86ea82704,75387349,0,0x0,8
tick,0x7ff86ea82704,75389414,0,0x0,8
tick,0x7ff86ea82704,75391273,0,0x0,8
tick,0x7ff86ea82704,75393355,0,0x0,8
tick,0x7ff86ea82704,75395529,0,0x0,8
tick,0x7ff86ea82704,75397287,0,0x0,8
tick,0x7ff86ea82704,75399221,0,0x0,8
tick,0x7ff86ea82704,75401318,0,0x0,8
tick,0x7ff86ea82704,75403308,0,0x0,8
tick,0x7ff86ea82704,75405310,0,0x0,8
tick,0x7ff86ea82704,75407540,0,0x0,8
tick,0x7ff86ea82704,75409525,0,0x0,8
tick,0x7ff86ea82704,75412553,0,0x0,8
tick,0x7ff86ea82704,75413460,0,0x0,8
tick,0x7ff86ea82704,75415166,0,0x0,8
tick,0x7ff86ea82704,75417178,0,0x0,8
tick,0x7ff86ea82704,75419249,0,0x0,8
tick,0x7ff86ea82704,75421449,0,0x0,8
tick,0x7ff86ea82704,75423307,0,0x0,8
tick,0x7ff86ea82704,75425276,0,0x0,8
tick,0x7ff86ea82704,75427144,0,0x0,8
tick,0x7ff86ea82704,75431322,0,0x0,8
tick,0x7ff86ea82704,75433350,0,0x0,8
tick,0x7ff86ea82704,75435265,0,0x0,8
tick,0x7ff86ea82704,75437399,0,0x0,8
tick,0x7ff86ea82704,75439256,0,0x0,8
tick,0x7ff86ea82704,75441284,0,0x0,8
tick,0x7ff86ea82704,75443193,0,0x0,8
tick,0x7ff86ea82704,75447628,0,0x0,8
tick,0x7ff86ea82704,75449352,0,0x0,8
tick,0x7ff86ea82704,75450226,0,0x0,8
tick,0x7ff86ea82704,75452144,0,0x0,8
tick,0x7ff86ea82704,75454104,0,0x0,8
tick,0x7ff86ea82704,75456203,0,0x0,8
tick,0x7ff86ea82704,75458136,0,0x0,8
tick,0x7ff86ea82704,75460160,0,0x0,8
tick,0x7ff86ea82704,75462302,0,0x0,8
tick,0x7ff86ea82704,75464217,0,0x0,8
tick,0x7ff86ea82704,75466221,0,0x0,8
tick,0x7ff86ea82704,75468090,0,0x0,8
tick,0x7ff86ea82704,75470262,0,0x0,8
tick,0x7ff86ea82704,75472108,0,0x0,8
tick,0x7ff86ea82704,75474172,0,0x0,8
tick,0x7ff86ea82704,75476050,0,0x0,8
tick,0x7ff86ea82704,75478182,0,0x0,8
tick,0x7ff86ea82704,75480261,0,0x0,8
tick,0x7ff86ea82704,75482083,0,0x0,8
tick,0x7ff86ea82704,75484043,0,0x0,8
tick,0x7ff86ea82704,75486048,0,0x0,8
tick,0x7ff86ea82704,75488030,0,0x0,8
tick,0x7ff86ea82704,75490052,0,0x0,8
tick,0x7ff86ea82704,75492083,0,0x0,8
tick,0x7ff86ea82704,75494084,0,0x0,8
tick,0x7ff86ea82704,75496123,0,0x0,8
tick,0x7ff86ea82704,75497985,0,0x0,8
tick,0x7ff86ea82704,75500199,0,0x0,8
tick,0x7ff86ea82704,75501966,0,0x0,8
tick,0x7ff86ea82704,75504225,0,0x0,8
tick,0x7ff86ea82704,75506321,0,0x0,8
tick,0x7ff86ea82704,75508215,0,0x0,8
tick,0x7ff86ea82704,75510241,0,0x0,8
tick,0x7ff86ea82704,75512427,0,0x0,8
tick,0x7ff86ea82704,75514261,0,0x0,8
tick,0x7ff86ea82704,75515990,0,0x0,8
tick,0x7ff86ea82704,75518058,0,0x0,8
tick,0x7ff86ea82704,75520148,0,0x0,8
tick,0x7ff86ea82704,75522163,0,0x0,8
tick,0x7ff86ea82704,75524025,0,0x0,8
tick,0x7ff86ea82704,75526021,0,0x0,8
tick,0x7ff86ea82704,75528310,0,0x0,8
tick,0x7ff86ea82704,75530423,0,0x0,8
tick,0x7ff86ea82704,75531983,0,0x0,8
tick,0x7ff86ea82704,75533948,0,0x0,8
tick,0x7ff86ea82704,75536080,0,0x0,8
tick,0x7ff86ea82704,75537962,0,0x0,8
tick,0x7ff86ea82704,75539847,0,0x0,8
tick,0x7ff86ea82704,75542032,0,0x0,8
tick,0x7ff86ea82704,75543980,0,0x0,8
tick,0x7ff86ea82704,75546035,0,0x0,8
tick,0x7ff86ea82704,75547935,0,0x0,8
tick,0x7ff86ea82704,75549969,0,0x0,8
tick,0x7ff86ea82704,75551927,0,0x0,8
tick,0x7ff86ea82704,75553967,0,0x0,8
tick,0x7ff86ea82704,75555918,0,0x0,8
tick,0x7ff86ea82704,75557846,0,0x0,8
tick,0x7ff86ea82704,75559992,0,0x0,8
tick,0x7ff86ea82704,75561909,0,0x0,8
tick,0x7ff86ea82704,75563986,0,0x0,8
tick,0x7ff86ea82704,75565902,0,0x0,8
tick,0x7ff86ea82704,75568032,0,0x0,8
tick,0x7ff86ea82704,75569890,0,0x0,8
tick,0x7ff86ea82704,75571876,0,0x0,8
tick,0x7ff86ea82704,75573907,0,0x0,8
tick,0x7ff86ea82704,75575875,0,0x0,8
tick,0x7ff86ea82704,75578136,0,0x0,8
tick,0x7ff86ea82704,75580223,0,0x0,8
tick,0x7ff86ea82704,75581950,0,0x0,8
tick,0x7ff86ea82704,75583893,0,0x0,8
tick,0x7ff86ea82704,75585835,0,0x0,8
tick,0x7ff86ea82704,75587925,0,0x0,8
tick,0x7ff86ea82704,75589747,0,0x0,8
tick,0x7ff86ea82704,75591889,0,0x0,8
tick,0x7ff86ea82704,75593720,0,0x0,8
tick,0x7ff86ea82704,75598198,0,0x0,8
tick,0x7ff86ea82704,75600144,0,0x0,8
tick,0x7ff86ea82704,75602077,0,0x0,8
tick,0x7ff86ea82704,75604060,0,0x0,8
tick,0x7ff86ea82704,75606227,0,0x0,8
tick,0x7ff86ea82704,75607916,0,0x0,8
tick,0x7ff86ea82704,75610073,0,0x0,8
tick,0x7ff86ea82704,75612065,0,0x0,8
tick,0x7ff86ea82704,75614099,0,0x0,8
tick,0x7ff86ea82704,75616122,0,0x0,8
tick,0x7ff86ea82704,75617934,0,0x0,8
tick,0x7ff86ea82704,75619920,0,0x0,8
tick,0x7ff86ea82704,75621922,0,0x0,8
tick,0x7ff86ea82704,75624047,0,0x0,8
tick,0x7ff86ea82704,75626031,0,0x0,8
tick,0x7ff86ea82704,75629262,0,0x0,8
tick,0x7ff86ea82704,75630913,0,0x0,8
tick,0x7ff86ea82704,75632848,0,0x0,8
tick,0x7ff86ea82704,75634713,0,0x0,8
tick,0x7ff86ea82704,75636935,0,0x0,8
tick,0x7ff86ea82704,75638637,0,0x0,8
tick,0x7ff86ea82704,75640633,0,0x0,8
tick,0x7ff86ea82704,75642811,0,0x0,8
tick,0x7ff86ea82704,75645375,0,0x0,8
tick,0x7ff86ea82704,75646999,0,0x0,8
tick,0x7ff86ea82704,75648749,0,0x0,8
tick,0x7ff86ea82704,75650612,0,0x0,8
tick,0x7ff86ea82704,75652929,0,0x0,8
tick,0x7ff86ea82704,75654569,0,0x0,8
tick,0x7ff86ea82704,75656704,0,0x0,8
tick,0x7ff86ea82704,75658624,0,0x0,8
tick,0x7ff86ea82704,75660872,0,0x0,8
tick,0x7ff86ea82704,75662685,0,0x0,8
tick,0x7ff86ea82704,75664600,0,0x0,8
tick,0x7ff86ea82704,75666630,0,0x0,8
tick,0x7ff86ea82704,75669035,0,0x0,8
tick,0x7ff86ea82704,75670617,0,0x0,8
tick,0x7ff86ea82704,75672624,0,0x0,8
tick,0x7ff86ea82704,75674506,0,0x0,8
tick,0x7ff86ea82704,75676648,0,0x0,8
tick,0x7ff86ea82704,75678593,0,0x0,8
tick,0x7ff86ea82704,75680814,0,0x0,8
tick,0x7ff86ea82704,75682486,0,0x0,8
tick,0x7ff86ea82704,75684635,0,0x0,8
tick,0x7ff86ea82704,75686556,0,0x0,8
tick,0x7ff86ea82704,75688545,0,0x0,8
tick,0x7ff86ea82704,75690457,0,0x0,8
tick,0x7ff86ea82704,75692757,0,0x0,8
tick,0x7ff86ea82704,75694702,0,0x0,8
tick,0x7ff86ea82704,75696651,0,0x0,8
tick,0x7ff86ea82704,75698612,0,0x0,8
tick,0x7ff86ea82704,75700663,0,0x0,8
tick,0x7ff86ea82704,75702545,0,0x0,8
tick,0x7ff86ea82704,75704567,0,0x0,8
tick,0x7ff86ea82704,75706532,0,0x0,8
tick,0x7ff86ea82704,75708555,0,0x0,8
tick,0x7ff86ea82704,75710488,0,0x0,8
tick,0x7ff86ea82704,75712476,0,0x0,8
tick,0x7ff86ea82704,75714438,0,0x0,8
tick,0x7ff86ea82704,75716454,0,0x0,8
tick,0x7ff86ea82704,75718436,0,0x0,8
tick,0x7ff86ea82704,75720398,0,0x0,8
tick,0x7ff86ea82704,75722388,0,0x0,8
tick,0x7ff86ea82704,75724349,0,0x0,8
tick,0x7ff86ea82704,75726433,0,0x0,8
tick,0x7ff86ea82704,75728400,0,0x0,8
tick,0x7ff86ea82704,75730462,0,0x0,8
tick,0x7ff86ea82704,75732379,0,0x0,8
tick,0x7ff86ea82704,75734370,0,0x0,8
tick,0x7ff86ea82704,75736323,0,0x0,8
tick,0x7ff86ea82704,75738418,0,0x0,8
tick,0x7ff86ea82704,75740482,0,0x0,8
tick,0x7ff86ea82704,75742442,0,0x0,8
tick,0x7ff86ea82704,75744432,0,0x0,8
tick,0x7ff86ea82704,75746333,0,0x0,8
tick,0x7ff86ea82704,75748367,0,0x0,8
tick,0x7ff86ea82704,75750380,0,0x0,8
tick,0x7ff86ea82704,75752276,0,0x0,8
tick,0x7ff86ea82704,75754399,0,0x0,8
tick,0x7ff86ea82704,75756353,0,0x0,8
tick,0x7ff86ea82704,75758302,0,0x0,8
tick,0x7ff86ea82704,75760378,0,0x0,8
tick,0x7ff86ea82704,75762479,0,0x0,8
tick,0x7ff86ea82704,75764369,0,0x0,8
tick,0x7ff86ea82704,75766315,0,0x0,8
tick,0x7ff86ea82704,75768289,0,0x0,8
tick,0x7ff86ea82704,75770387,0,0x0,8
tick,0x7ff86ea82704,75772304,0,0x0,8
tick,0x7ff86ea82704,75774253,0,0x0,8
tick,0x7ff86ea82704,75776298,0,0x0,8
tick,0x7ff86ea82704,75778258,0,0x0,8
tick,0x7ff86ea82704,75780353,0,0x0,8
tick,0x7ff86ea82704,75782266,0,0x0,8
tick,0x7ff86ea82704,75784306,0,0x0,8
tick,0x7ff86ea82704,75786210,0,0x0,8
tick,0x7ff86ea82704,75788383,0,0x0,8
tick,0x7ff86ea82704,75790388,0,0x0,8
tick,0x7ff86ea82704,75792295,0,0x0,8
tick,0x7ff86ea82704,75794266,0,0x0,8
tick,0x7ff86ea82704,75796258,0,0x0,8
tick,0x7ff86ea82704,75798264,0,0x0,8
tick,0x7ff86ea82704,75800188,0,0x0,8
tick,0x7ff86ea82704,75802417,0,0x0,8
tick,0x7ff86ea82704,75804212,0,0x0,8
tick,0x7ff86ea82704,75806196,0,0x0,8
tick,0x7ff86ea82704,75808170,0,0x0,8
tick,0x7ff86ea82704,75810258,0,0x0,8
tick,0x7ff86ea82704,75812130,0,0x0,8
tick,0x7ff86ea82704,75814255,0,0x0,8
tick,0x7ff86ea82704,75816149,0,0x0,8
tick,0x7ff86ea82704,75818217,0,0x0,8
tick,0x7ff86ea82704,75820180,0,0x0,8
tick,0x7ff86ea82704,75822145,0,0x0,8
tick,0x7ff86ea82704,75824146,0,0x0,8
tick,0x7ff86ea82704,75826159,0,0x0,8
tick,0x7ff86ea82704,75828304,0,0x0,8
tick,0x7ff86ea82704,75830235,0,0x0,8
tick,0x7ff86ea82704,75832130,0,0x0,8
tick,0x7ff86ea82704,75834026,0,0x0,8
tick,0x7ff86ea82704,75836112,0,0x0,8
tick,0x7ff86ea82704,75838156,0,0x0,8
tick,0x7ff86ea82704,75840197,0,0x0,8
tick,0x7ff86ea82704,75842073,0,0x0,8
tick,0x7ff86ea82704,75844086,0,0x0,8
tick,0x7ff86ea82704,75846205,0,0x0,8
tick,0x7ff86ea82704,75848123,0,0x0,8
tick,0x7ff86ea82704,75850043,0,0x0,8
tick,0x7ff86ea82704,75852139,0,0x0,8
tick,0x7ff86ea82704,75854034,0,0x0,8
tick,0x7ff86ea82704,75856137,0,0x0,8
tick,0x7ff86ea82704,75858059,0,0x0,8
tick,0x7ff86ea82704,75860238,0,0x0,8
tick,0x7ff86ea82704,75862026,0,0x0,8
tick,0x7ff86ea82704,75864086,0,0x0,8
tick,0x7ff86ea82704,75865995,0,0x0,8
tick,0x7ff86ea82704,75868214,0,0x0,8
tick,0x7ff86ea82704,75869980,0,0x0,8
tick,0x7ff86ea82704,75872050,0,0x0,8
tick,0x7ff86ea82704,75873952,0,0x0,8
tick,0x7ff86ea82704,75876119,0,0x0,8
tick,0x7ff86ea82704,75877962,0,0x0,8
tick,0x7ff86ea82704,75880049,0,0x0,8
tick,0x7ff86ea82704,75881975,0,0x0,8
tick,0x7ff86ea82704,75884014,0,0x0,8
tick,0x7ff86ea82704,75885944,0,0x0,8
tick,0x7ff86ea82704,75888007,0,0x0,8
tick,0x7ff86ea82704,75889923,0,0x0,8
tick,0x7ff86ea82704,75891875,0,0x0,8
tick,0x7ff86ea82704,75894080,0,0x0,8
tick,0x7ff86ea82704,75895984,0,0x0,8
tick,0x7ff86ea82704,75898011,0,0x0,8
tick,0x7ff86ea82704,75899939,0,0x0,8
tick,0x7ff86ea82704,75902016,0,0x0,8
tick,0x7ff86ea82704,75903915,0,0x0,8
tick,0x7ff86ea82704,75905959,0,0x0,8
tick,0x7ff86ea82704,75907975,0,0x0,8
tick,0x7ff86ea82704,75909883,0,0x0,8
tick,0x7ff86ea82704,75911914,0,0x0,8
tick,0x7ff86ea82704,75914013,0,0x0,8
tick,0x7ff86ea82704,75915871,0,0x0,8
tick,0x7ff86ea82704,75917859,0,0x0,8
tick,0x7ff86ea82704,75919850,0,0x0,8
tick,0x7ff86ea82704,75921916,0,0x0,8
tick,0x7ff86ea82704,75923843,0,0x0,8
tick,0x7ff86ea82704,75925885,0,0x0,8
tick,0x7ff86ea82704,75928125,0,0x0,8
tick,0x7ff86ea82704,75929973,0,0x0,8
tick,0x7ff86ea82704,75931852,0,0x0,8
tick,0x7ff86ea82704,75933996,0,0x0,8
tick,0x7ff86ea82704,75935778,0,0x0,8
tick,0x7ff86ea82704,75937806,0,0x0,8
tick,0x7ff86ea82704,75939884,0,0x0,8
tick,0x7ff86ea82704,75941895,0,0x0,8
tick,0x7ff86ea82704,75943851,0,0x0,8
tick,0x7ff86ea82704,75945835,0,0x0,8
tick,0x7ff86ea82704,75947883,0,0x0,8
tick,0x7ff86ea82704,75949786,0,0x0,8
tick,0x7ff86ea82704,75951838,0,0x0,8
tick,0x7ff86ea82704,75953791,0,0x0,8
tick,0x7ff86ea82704,75955861,0,0x0,8
tick,0x7ff86ea82704,75957822,0,0x0,8
tick,0x7ff86ea82704,75959751,0,0x0,8
tick,0x7ff86ea82704,75961831,0,0x0,8
tick,0x7ff86ea82704,75963784,0,0x0,8
tick,0x7ff86ea82704,75965702,0,0x0,8
tick,0x7ff86ea82704,75967751,0,0x0,8
tick,0x7ff86ea82704,75969760,0,0x0,8
tick,0x7ff86ea82704,75971746,0,0x0,8
tick,0x7ff86ea82704,75973690,0,0x0,8
tick,0x7ff86ea82704,75975826,0,0x0,8
tick,0x7ff86ea82704,75977655,0,0x0,8
tick,0x7ff86ea82704,75979808,0,0x0,8
tick,0x7ff86ea82704,75981641,0,0x0,8
tick,0x7ff86ea82704,75983843,0,0x0,8
tick,0x7ff86ea82704,75985674,0,0x0,8
tick,0x7ff86ea82704,75987752,0,0x0,8
tick,0x7ff86ea82704,75989624,0,0x0,8
tick,0x7ff86ea82704,75991786,0,0x0,8
tick,0x7ff86ea82704,75993670,0,0x0,8
tick,0x7ff86ea82704,75995738,0,0x0,8
tick,0x7ff86ea82704,75997647,0,0x0,8
tick,0x7ff86ea82704,75999698,0,0x0,8
tick,0x7ff86ea82704,76001727,0,0x0,8
tick,0x7ff86ea82704,76003706,0,0x0,8
tick,0x7ff86ea82704,76005668,0,0x0,8
tick,0x7ff86ea82704,76007600,0,0x0,8
tick,0x7ff86ea82704,76009626,0,0x0,8
tick,0x7ff86ea82704,76011624,0,0x0,8
tick,0x7ff86ea82704,76013566,0,0x0,8
tick,0x7ff86ea82704,76015756,0,0x0,8
tick,0x7ff86ea82704,76017575,0,0x0,8
tick,0x7ff86ea82704,76019616,0,0x0,8
tick,0x7ff86ea82704,76021611,0,0x0,8
tick,0x7ff86ea82704,76023685,0,0x0,8
tick,0x7ff86ea82704,76025671,0,0x0,8
tick,0x7ff86ea82704,76027547,0,0x0,8
tick,0x7ff86ea82704,76029600,0,0x0,8
tick,0x7ff86ea82704,76031584,0,0x0,8
tick,0x7ff86ea82704,76033549,0,0x0,8
tick,0x7ff86ea82704,76035594,0,0x0,8
tick,0x7ff86ea82704,76037546,0,0x0,8
tick,0x7ff86ea82704,76039525,0,0x0,8
tick,0x7ff86ea82704,76041584,0,0x0,8
tick,0x7ff86ea82704,76043591,0,0x0,8
tick,0x7ff86ea82704,76045518,0,0x0,8
tick,0x7ff86ea82704,76047545,0,0x0,8
tick,0x7ff86ea82704,76049547,0,0x0,8
tick,0x7ff86ea82704,76051560,0,0x0,8
tick,0x7ff86ea82704,76053537,0,0x0,8
tick,0x7ff86ea82704,76055599,0,0x0,8
tick,0x7ff86ea82704,76057545,0,0x0,8
tick,0x7ff86ea82704,76061624,0,0x0,8
tick,0x7ff86ea82704,76063660,0,0x0,8
tick,0x7ff86ea82704,76065690,0,0x0,8
tick,0x7ff86ea82704,76067789,0,0x0,8
tick,0x7ff86ea82704,76069600,0,0x0,8
tick,0x7ff86ea82704,76071561,0,0x0,8
tick,0x7ff86ea82704,76073700,0,0x0,8
tick,0x7ff86ea82704,76075582,0,0x0,8
tick,0x7ff86ea82704,76077568,0,0x0,8
tick,0x7ff86ea82704,76079593,0,0x0,8
tick,0x7ff86ea82704,76081632,0,0x0,8
tick,0x7ff86ea82704,76083619,0,0x0,8
tick,0x7ff86ea82704,76085623,0,0x0,8
tick,0x7ff86ea82704,76087725,0,0x0,8
tick,0x7ff86ea82704,76089481,0,0x0,8
tick,0x7ff86ea82704,76091687,0,0x0,8
tick,0x7ff86ea82704,76093546,0,0x0,8
tick,0x7ff86ea82704,76095564,0,0x0,8
tick,0x7ff86ea82704,76097613,0,0x0,8
tick,0x7ff86ea82704,76099551,0,0x0,8
tick,0x7ff86ea82704,76101651,0,0x0,8
tick,0x7ff86ea82704,76103592,0,0x0,8
tick,0x7ff86ea82704,76105582,0,0x0,8
tick,0x7ff86ea82704,76107508,0,0x0,8
tick,0x7ff86ea82704,76109531,0,0x0,8
tick,0x7ff86ea82704,76111424,0,0x0,8
tick,0x7ff86ea82704,76113482,0,0x0,8
tick,0x7ff86ea82704,76115409,0,0x0,8
tick,0x7ff86ea82704,76117610,0,0x0,8
tick,0x7ff86ea82704,76119509,0,0x0,8
tick,0x7ff86ea82704,76121654,0,0x0,8
tick,0x7ff86ea82704,76123470,0,0x0,8
tick,0x7ff86ea82704,76125518,0,0x0,8
tick,0x7ff86ea82704,76127595,0,0x0,8
tick,0x7ff86ea82704,76129465,0,0x0,8
tick,0x7ff86ea82704,76131713,0,0x0,8
tick,0x7ff86ea82704,76133570,0,0x0,8
tick,0x7ff86ea82704,76135485,0,0x0,8
tick,0x7ff86ea82704,76137496,0,0x0,8
tick,0x7ff86ea82704,76139467,0,0x0,8
tick,0x7ff86ea82704,76141549,0,0x0,8
tick,0x7ff86ea82704,76143524,0,0x0,8
tick,0x7ff86ea82704,76145503,0,0x0,8
tick,0x7ff86ea82704,76147397,0,0x0,8
tick,0x7ff86ea82704,76149451,0,0x0,8
tick,0x7ff86ea82704,76151475,0,0x0,8
tick,0x7ff86ea82704,76153413,0,0x0,8
tick,0x7ff86ea82704,76155337,0,0x0,8
tick,0x7ff86ea82704,76157478,0,0x0,8
tick,0x7ff86ea82704,76159321,0,0x0,8
tick,0x7ff86ea82704,76161823,0,0x0,8
tick,0x7ff86ea82704,76163346,0,0x0,8
tick,0x7ff86ea82704,76165535,0,0x0,8
tick,0x7ff86ea82704,76167393,0,0x0,8
tick,0x7ff86ea82704,76169469,0,0x0,8
tick,0x7ff86ea82704,76171554,0,0x0,8
tick,0x7ff86ea82704,76173402,0,0x0,8
tick,0x7ff86ea82704,76175294,0,0x0,8
tick,0x7ff86ea82704,76177380,0,0x0,8
tick,0x7ff86ea82704,76179310,0,0x0,8
tick,0x7ff86ea82704,76181452,0,0x0,8
tick,0x7ff86ea82704,76183403,0,0x0,8
tick,0x7ff86ea82704,76185431,0,0x0,8
tick,0x7ff86ea82704,76187354,0,0x0,8
tick,0x7ff86ea82704,76189215,0,0x0,8
tick,0x7ff86ea82704,76191386,0,0x0,8
tick,0x7ff86ea82704,76193462,0,0x0,8
tick,0x7ff86ea82704,76195425,0,0x0,8
tick,0x7ff86ea82704,76197191,0,0x0,8
tick,0x7ff86ea82704,76199414,0,0x0,8
tick,0x7ff86ea82704,76201336,0,0x0,8
tick,0x7ff86ea82704,76203379,0,0x0,8
tick,0x7ff86ea82704,76205213,0,0x0,8
tick,0x7ff86ea82704,76207265,0,0x0,8
tick,0x7ff86ea82704,76209293,0,0x0,8
tick,0x7ff86ea82704,76211355,0,0x0,8
tick,0x7ff86ea82704,76213115,0,0x0,8
tick,0x7ff86ea82704,76215343,0,0x0,8
tick,0x7ff86ea82704,76217315,0,0x0,8
tick,0x7ff86ea82704,76219376,0,0x0,8
tick,0x7ff86ea82704,76221347,0,0x0,8
tick,0x7ff86ea82704,76223232,0,0x0,8
tick,0x7ff86ea82704,76225351,0,0x0,8
tick,0x7ff86ea82704,76227236,0,0x0,8
tick,0x7ff86ea82704,76229206,0,0x0,8
tick,0x7ff86ea82704,76231221,0,0x0,8
tick,0x7ff86ea82704,76233228,0,0x0,8
tick,0x7ff86ea82704,76235150,0,0x0,8
tick,0x7ff86ea82704,76237075,0,0x0,8
tick,0x7ff86ea82704,76239115,0,0x0,8
tick,0x7ff86ea82704,76241224,0,0x0,8
tick,0x7ff86ea82704,76243272,0,0x0,8
tick,0x7ff86ea82704,76245214,0,0x0,8
tick,0x7ff86ea82704,76247207,0,0x0,8
tick,0x7ff86ea82704,76249080,0,0x0,8
tick,0x7ff86ea82704,76251153,0,0x0,8
tick,0x7ff86ea82704,76253168,0,0x0,8
tick,0x7ff86ea82704,76255353,0,0x0,8
tick,0x7ff86ea82704,76257112,0,0x0,8
tick,0x7ff86ea82704,76259388,0,0x0,8
tick,0x7ff86ea82704,76261121,0,0x0,8
tick,0x7ff86ea82704,76263113,0,0x0,8
tick,0x7ff86ea82704,76265046,0,0x0,8
tick,0x7ff86ea82704,76267161,0,0x0,8
tick,0x7ff86ea82704,76269035,0,0x0,8
tick,0x7ff86ea82704,76271104,0,0x0,8
tick,0x7ff86ea82704,76272988,0,0x0,8
tick,0x7ff86ea82704,76275176,0,0x0,8
tick,0x7ff86ea82704,76277049,0,0x0,8
tick,0x7ff86ea82704,76279075,0,0x0,8
tick,0x7ff86ea82704,76281075,0,0x0,8
tick,0x7ff86ea82704,76283221,0,0x0,8
tick,0x7ff86ea82704,76285128,0,0x0,8
tick,0x7ff86ea82704,76287115,0,0x0,8
tick,0x7ff86ea82704,76289084,0,0x0,8
tick,0x7ff86ea82704,76291027,0,0x0,8
tick,0x7ff86ea82704,76293127,0,0x0,8
tick,0x7ff86ea82704,76295084,0,0x0,8
tick,0x7ff86ea82704,76297073,0,0x0,8
tick,0x7ff86ea82704,76298999,0,0x0,8
tick,0x7ff86ea82704,76300966,0,0x0,8
tick,0x7ff86ea82704,76303011,0,0x0,8
tick,0x7ff86ea82704,76305014,0,0x0,8
tick,0x7ff86ea82704,76307040,0,0x0,8
tick,0x7ff86ea82704,76309090,0,0x0,8
tick,0x7ff86ea82704,76311006,0,0x0,8
tick,0x7ff86ea82704,76312960,0,0x0,8
tick,0x7ff86ea82704,76315047,0,0x0,8
tick,0x7ff86ea82704,76317133,0,0x0,8
tick,0x7ff86ea82704,76319032,0,0x0,8
tick,0x7ff86ea82704,76321086,0,0x0,8
tick,0x7ff86ea82704,76322878,0,0x0,8
tick,0x7ff86ea82704,76324946,0,0x0,8
tick,0x7ff86ea82704,76326947,0,0x0,8
tick,0x7ff86ea82704,76328970,0,0x0,8
tick,0x7ff86ea82704,76330916,0,0x0,8
tick,0x7ff86ea82704,76332948,0,0x0,8
tick,0x7ff86ea82704,76335019,0,0x0,8
tick,0x7ff86ea82704,76336939,0,0x0,8
tick,0x7ff86ea82704,76339669,0,0x0,8
tick,0x7ff86ea82704,76340945,0,0x0,8
tick,0x7ff86ea82704,76342898,0,0x0,8
tick,0x7ff86ea82704,76345188,0,0x0,8
tick,0x7ff86ea82704,76346998,0,0x0,8
tick,0x7ff86ea82704,76348715,0,0x0,8
tick,0x7ff86ea82704,76350806,0,0x0,8
tick,0x7ff86ea82704,76352748,0,0x0,8
tick,0x7ff86ea82704,76354756,0,0x0,8
tick,0x7ff86ea82704,76356744,0,0x0,8
tick,0x7ff86ea82704,76358614,0,0x0,8
tick,0x7ff86ea82704,76360785,0,0x0,8
tick,0x7ff86ea82704,76362663,0,0x0,8
tick,0x7ff86ea82704,76364833,0,0x0,8
tick,0x7ff86ea82704,76366827,0,0x0,8
tick,0x7ff86ea82704,76368679,0,0x0,8
tick,0x7ff86ea82704,76370725,0,0x0,8
tick,0x7ff86ea82704,76372734,0,0x0,8
tick,0x7ff86ea82704,76374642,0,0x0,8
tick,0x7ff86ea82704,76376660,0,0x0,8
tick,0x7ff86ea82704,76378729,0,0x0,8
tick,0x7ff86ea82704,76380746,0,0x0,8
tick,0x7ff86ea82704,76382657,0,0x0,8
tick,0x7ff86ea82704,76384649,0,0x0,8
tick,0x7ff86ea82704,76386675,0,0x0,8
tick,0x7ff86ea82704,76388667,0,0x0,8
tick,0x7ff86ea82704,76390652,0,0x0,8
tick,0x7ff86ea82704,76392657,0,0x0,8
tick,0x7ff86ea82704,76394678,0,0x0,8
tick,0x7ff86ea82704,76396678,0,0x0,8
tick,0x7ff86ea82704,76398514,0,0x0,8
tick,0x7ff86ea82704,76400679,0,0x0,8
tick,0x7ff86ea82704,76402582,0,0x0,8
tick,0x7ff86ea82704,76404721,0,0x0,8
tick,0x7ff86ea82704,76406589,0,0x0,8
tick,0x7ff86ea82704,76408638,0,0x0,8
tick,0x7ff86ea82704,76410711,0,0x0,8
tick,0x7ff86ea82704,76412670,0,0x0,8
tick,0x7ff86ea82704,76414684,0,0x0,8
tick,0x7ff86ea82704,76416568,0,0x0,8
tick,0x7ff86ea82704,76418596,0,0x0,8
tick,0x7ff86ea82704,76420847,0,0x0,8
tick,0x7ff86ea82704,76422526,0,0x0,8
tick,0x7ff86ea82704,76424689,0,0x0,8
tick,0x7ff86ea82704,76426563,0,0x0,8
tick,0x7ff86ea82704,76428566,0,0x0,8
tick,0x7ff86ea82704,76430454,0,0x0,8
tick,0x7ff86ea82704,76432596,0,0x0,8
tick,0x7ff86ea82704,76434634,0,0x0,8
tick,0x7ff86ea82704,76436617,0,0x0,8
tick,0x7ff86ea82704,76438422,0,0x0,8
tick,0x7ff86ea82704,76440586,0,0x0,8
tick,0x7ff86ea82704,76442439,0,0x0,8
tick,0x7ff86ea82704,76444650,0,0x0,8
tick,0x7ff86ea82704,76446451,0,0x0,8
tick,0x7ff86ea82704,76448536,0,0x0,8
tick,0x7ff86ea82704,76450483,0,0x0,8
tick,0x7ff86ea82704,76452606,0,0x0,8
tick,0x7ff86ea82704,76454472,0,0x0,8
tick,0x7ff86ea82704,76456524,0,0x0,8
tick,0x7ff86ea82704,76458509,0,0x0,8
tick,0x7ff86ea82704,76460549,0,0x0,8
tick,0x7ff86ea82704,76462415,0,0x0,8
tick,0x7ff86ea82704,76464477,0,0x0,8
tick,0x7ff86ea82704,76466481,0,0x0,8
tick,0x7ff86ea82704,76468526,0,0x0,8
tick,0x7ff86ea82704,76470463,0,0x0,8
tick,0x7ff86ea82704,76472486,0,0x0,8
tick,0x7ff86ea82704,76474519,0,0x0,8
tick,0x7ff86ea82704,76476618,0,0x0,8
tick,0x7ff86ea82704,76478508,0,0x0,8
tick,0x7ff86ea82704,76480365,0,0x0,8
tick,0x7ff86ea82704,76482397,0,0x0,8
tick,0x7ff86ea82704,76484421,0,0x0,8
tick,0x7ff86ea82704,76486394,0,0x0,8
tick,0x7ff86ea82704,76488487,0,0x0,8
tick,0x7ff86ea82704,76490579,0,0x0,8
tick,0x7ff86ea82704,76492500,0,0x0,8
tick,0x7ff86ea82704,76494481,0,0x0,8
tick,0x7ff86ea82704,76496356,0,0x0,8
tick,0x7ff86ea82704,76498388,0,0x0,8
tick,0x7ff86ea82704,76500301,0,0x0,8
tick,0x7ff86ea82704,76502274,0,0x0,8
tick,0x7ff86ea82704,76504428,0,0x0,8
tick,0x7ff86ea82704,76506419,0,0x0,8
tick,0x7ff86ea82704,76508285,0,0x0,8
tick,0x7ff86ea82704,76510471,0,0x0,8
tick,0x7ff86ea82704,76512309,0,0x0,8
tick,0x7ff86ea82704,76514546,0,0x0,8
tick,0x7ff86ea82704,76516441,0,0x0,8
tick,0x7ff86ea82704,76518309,0,0x0,8
tick,0x7ff86ea82704,76520379,0,0x0,8
tick,0x7ff86ea82704,76522346,0,0x0,8
tick,0x7ff86ea82704,76524361,0,0x0,8
tick,0x7ff86ea82704,76526275,0,0x0,8
tick,0x7ff86ea82704,76528421,0,0x0,8
tick,0x7ff86ea82704,76530242,0,0x0,8
tick,0x7ff86ea82704,76532327,0,0x0,8
tick,0x7ff86ea82704,76534236,0,0x0,8
tick,0x7ff86ea82704,76536360,0,0x0,8
tick,0x7ff86ea82704,76538287,0,0x0,8
tick,0x7ff86ea82704,76540108,0,0x0,8
tick,0x7ff86ea82704,76542352,0,0x0,8
tick,0x7ff86ea82704,76544244,0,0x0,8
tick,0x7ff86ea82704,76546313,0,0x0,8
tick,0x7ff86ea82704,76548306,0,0x0,8
tick,0x7ff86ea82704,76550317,0,0x0,8
tick,0x7ff86ea82704,76552178,0,0x0,8
tick,0x7ff86ea82704,76554269,0,0x0,8
tick,0x7ff86ea82704,76556207,0,0x0,8
tick,0x7ff86ea82704,76558166,0,0x0,8
tick,0x7ff86ea82704,76560229,0,0x0,8
tick,0x7ff86ea82704,76562148,0,0x0,8
tick,0x7ff86ea82704,76564209,0,0x0,8
tick,0x7ff86ea82704,76566088,0,0x0,8
tick,0x7ff86ea82704,76568264,0,0x0,8
tick,0x7ff86ea82704,76570219,0,0x0,8
tick,0x7ff86ea82704,76572192,0,0x0,8
tick,0x7ff86ea82704,76574210,0,0x0,8
tick,0x7ff86ea82704,76576234,0,0x0,8
tick,0x7ff86ea82704,76578163,0,0x0,8
tick,0x7ff86ea82704,76580099,0,0x0,8
tick,0x7ff86ea82704,76582025,0,0x0,8
tick,0x7ff86ea82704,76584126,0,0x0,8
tick,0x7ff86ea82704,76586061,0,0x0,8
tick,0x7ff86ea82704,76588177,0,0x0,8
tick,0x7ff86ea82704,76590108,0,0x0,8
tick,0x7ff86ea82704,76592103,0,0x0,8
tick,0x7ff86ea82704,76594059,0,0x0,8
tick,0x7ff86ea82704,76596213,0,0x0,8
tick,0x7ff86ea82704,76598074,0,0x0,8
tick,0x7ff86ea82704,76600161,0,0x0,8
tick,0x7ff86ea82704,76602018,0,0x0,8
tick,0x7ff86ea82704,76604335,0,0x0,8
tick,0x7ff86ea82704,76605967,0,0x0,8
tick,0x7ff86ea82704,76608087,0,0x0,8
tick,0x7ff86ea82704,76610012,0,0x0,8
tick,0x7ff86ea82704,76612144,0,0x0,8
tick,0x7ff86ea82704,76614029,0,0x0,8
tick,0x7ff86ea82704,76616094,0,0x0,8
tick,0x7ff86ea82704,76617966,0,0x0,8
tick,0x7ff86ea82704,76620031,0,0x0,8
tick,0x7ff86ea82704,76621983,0,0x0,8
tick,0x7ff86ea82704,76624229,0,0x0,8
tick,0x7ff86ea82704,76625947,0,0x0,8
tick,0x7ff86ea82704,76628157,0,0x0,8
tick,0x7ff86ea82704,76630001,0,0x0,8
tick,0x7ff86ea82704,76632007,0,0x0,8
tick,0x7ff86ea82704,76633942,0,0x0,8
tick,0x7ff86ea82704,76635985,0,0x0,8
tick,0x7ff86ea82704,76637941,0,0x0,8
tick,0x7ff86ea82704,76639965,0,0x0,8
tick,0x7ff86ea82704,76642009,0,0x0,8
tick,0x7ff86ea82704,76643957,0,0x0,8
tick,0x7ff86ea82704,76645877,0,0x0,8
tick,0x7ff86ea82704,76647962,0,0x0,8
tick,0x7ff86ea82704,76649886,0,0x0,8
tick,0x7ff86ea82704,76652099,0,0x0,8
tick,0x7ff86ea82704,76653880,0,0x0,8
tick,0x7ff86ea82704,76655920,0,0x0,8
tick,0x7ff86ea82704,76657880,0,0x0,8
tick,0x7ff86ea82704,76660045,0,0x0,8
tick,0x7ff86ea82704,76661860,0,0x0,8
tick,0x7ff86ea82704,76663881,0,0x0,8
tick,0x7ff86ea82704,76666017,0,0x0,8
tick,0x7ff86ea82704,76667899,0,0x0,8
tick,0x7ff86ea82704,76669812,0,0x0,8
tick,0x7ff86ea82704,76671980,0,0x0,8
tick,0x7ff86ea82704,76673880,0,0x0,8
tick,0x7ff86ea82704,76675908,0,0x0,8
tick,0x7ff86ea82704,76677932,0,0x0,8
tick,0x7ff86ea82704,76679793,0,0x0,8
tick,0x7ff86ea82704,76681875,0,0x0,8
tick,0x7ff86ea82704,76683816,0,0x0,8
tick,0x7ff86ea82704,76685895,0,0x0,8
tick,0x7ff86ea82704,76687817,0,0x0,8
tick,0x7ff86ea82704,76689851,0,0x0,8
tick,0x7ff86ea82704,76691834,0,0x0,8
tick,0x7ff86ea82704,76693813,0,0x0,8
tick,0x7ff86ea82704,76695921,0,0x0,8
tick,0x7ff86ea82704,76697811,0,0x0,8
tick,0x7ff86ea82704,76699857,0,0x0,8
tick,0x7ff86ea82704,76701737,0,0x0,8
tick,0x7ff86ea82704,76703808,0,0x0,8
tick,0x7ff86ea82704,76705696,0,0x0,8
tick,0x7ff86ea82704,76707837,0,0x0,8
tick,0x7ff86ea82704,76709765,0,0x0,8
tick,0x7ff86ea82704,76711866,0,0x0,8
tick,0x7ff86ea82704,76713710,0,0x0,8
tick,0x7ff86ea82704,76715814,0,0x0,8
tick,0x7ff86ea82704,76717718,0,0x0,8
tick,0x7ff86ea82704,76719750,0,0x0,8
tick,0x7ff86ea82704,76721753,0,0x0,8
tick,0x7ff86ea82704,76723849,0,0x0,8
tick,0x7ff86ea82704,76725846,0,0x0,8
tick,0x7ff86ea82704,76727863,0,0x0,8
tick,0x7ff86ea82704,76729748,0,0x0,8
tick,0x7ff86ea82704,76731776,0,0x0,8
tick,0x7ff86ea82704,76733827,0,0x0,8
tick,0x7ff86ea82704,76735750,0,0x0,8
tick,0x7ff86ea82704,76737806,0,0x0,8
tick,0x7ff86ea82704,76739642,0,0x0,8
tick,0x7ff86ea82704,76741694,0,0x0,8
tick,0x7ff86ea82704,76743660,0,0x0,8
tick,0x7ff86ea82704,76745624,0,0x0,8
tick,0x7ff86ea82704,76747649,0,0x0,8
tick,0x7ff86ea82704,76749761,0,0x0,8
tick,0x7ff86ea82704,76751709,0,0x0,8
tick,0x7ff86ea82704,76753661,0,0x0,8
tick,0x7ff86ea82704,76755665,0,0x0,8
tick,0x7ff86ea82704,76757712,0,0x0,8
tick,0x7ff86ea82704,76759847,0,0x0,8
tick,0x7ff86ea82704,76761700,0,0x0,8
tick,0x7ff86ea82704,76763660,0,0x0,8
tick,0x7ff86ea82704,76765632,0,0x0,8
tick,0x7ff86ea82704,76767699,0,0x0,8
tick,0x7ff86ea82704,76769674,0,0x0,8
tick,0x7ff86ea82704,76771607,0,0x0,8
tick,0x7ff86ea82704,76773672,0,0x0,8
tick,0x7ff86ea82704,76775563,0,0x0,8
tick,0x7ff86ea82704,76777662,0,0x0,8
tick,0x7ff86ea82704,76779539,0,0x0,8
tick,0x7ff86ea82704,76781622,0,0x0,8
tick,0x7ff86ea82704,76783497,0,0x0,8
tick,0x7ff86ea82704,76785697,0,0x0,8
tick,0x7ff86ea82704,76787542,0,0x0,8
tick,0x7ff86ea82704,76789625,0,0x0,8
tick,0x7ff86ea82704,76791560,0,0x0,8
tick,0x7ff86ea82704,76793559,0,0x0,8
tick,0x7ff86ea82704,76795553,0,0x0,8
tick,0x7ff86ea82704,76797519,0,0x0,8
tick,0x7ff86ea82704,76799599,0,0x0,8
tick,0x7ff86ea82704,76801582,0,0x0,8
tick,0x7ff86ea82704,76803605,0,0x0,8
tick,0x7ff86ea82704,76805462,0,0x0,8
tick,0x7ff86ea82704,76807525,0,0x0,8
tick,0x7ff86ea82704,76809589,0,0x0,8
tick,0x7ff86ea82704,76811485,0,0x0,8
tick,0x7ff86ea82704,76813519,0,0x0,8
tick,0x7ff86ea82704,76815508,0,0x0,8
tick,0x7ff86ea82704,76817496,0,0x0,8
tick,0x7ff86ea82704,76819437,0,0x0,8
tick,0x7ff86ea82704,76821507,0,0x0,8
tick,0x7ff86ea82704,76823463,0,0x0,8
tick,0x7ff86ea82704,76825501,0,0x0,8
tick,0x7ff86ea82704,76827546,0,0x0,8
tick,0x7ff86ea82704,76829530,0,0x0,8
tick,0x7ff86ea82704,76831452,0,0x0,8
tick,0x7ff86ea82704,76833548,0,0x0,8
tick,0x7ff86ea82704,76835497,0,0x0,8
tick,0x7ff86ea82704,76837421,0,0x0,8
tick,0x7ff86ea82704,76839452,0,0x0,8
tick,0x7ff86ea82704,76841450,0,0x0,8
tick,0x7ff86ea82704,76843421,0,0x0,8
tick,0x7ff86ea82704,76845348,0,0x0,8
tick,0x7ff86ea82704,76847391,0,0x0,8
tick,0x7ff86ea82704,76849479,0,0x0,8
tick,0x7ff86ea82704,76851404,0,0x0,8
tick,0x7ff86ea82704,76853367,0,0x0,8
tick,0x7ff86ea82704,76855533,0,0x0,8
tick,0x7ff86ea82704,76857365,0,0x0,8
tick,0x7ff86ea82704,76859385,0,0x0,8
tick,0x7ff86ea82704,76861436,0,0x0,8
tick,0x7ff86ea82704,76863455,0,0x0,8
tick,0x7ff86ea82704,76865346,0,0x0,8
tick,0x7ff86ea82704,76867390,0,0x0,8
tick,0x7ff86ea82704,76869300,0,0x0,8
tick,0x7ff86ea82704,76871398,0,0x0,8
tick,0x7ff86ea82704,76873238,0,0x0,8
tick,0x7ff86ea82704,76875386,0,0x0,8
tick,0x7ff86ea82704,76877284,0,0x0,8
tick,0x7ff86ea82704,76879493,0,0x0,8
tick,0x7ff86ea82704,76881260,0,0x0,8
tick,0x7ff86ea82704,76883361,0,0x0,8
tick,0x7ff86ea82704,76885222,0,0x0,8
tick,0x7ff86ea82704,76887415,0,0x0,8
tick,0x7ff86ea82704,76889232,0,0x0,8
tick,0x7ff86ea82704,76891331,0,0x0,8
tick,0x7ff86ea82704,76893220,0,0x0,8
tick,0x7ff86ea82704,76895321,0,0x0,8
tick,0x7ff86ea82704,76897240,0,0x0,8
tick,0x7ff86ea82704,76901134,0,0x0,8
tick,0x7ff86ea82704,76902387,0,0x0,8
tick,0x7ff86ea82704,76904374,0,0x0,8
tick,0x7ff86ea82704,76906216,0,0x0,8
tick,0x7ff86ea82704,76908383,0,0x0,8
tick,0x7ff86ea82704,76910283,0,0x0,8
tick,0x7ff86ea82704,76912350,0,0x0,8
tick,0x7ff86ea82704,76914218,0,0x0,8
tick,0x7ff86ea82704,76916266,0,0x0,8
tick,0x7ff86ea82704,76918187,0,0x0,8
tick,0x7ff86ea82704,76920292,0,0x0,8
tick,0x7ff86ea82704,76922224,0,0x0,8
tick,0x7ff86ea82704,76924302,0,0x0,8
tick,0x7ff86ea82704,76926281,0,0x0,8
tick,0x7ff86ea82704,76928243,0,0x0,8
tick,0x7ff86ea82704,76930301,0,0x0,8
tick,0x7ff86ea82704,76932349,0,0x0,8
tick,0x7ff86ea82704,76934268,0,0x0,8
tick,0x7ff86ea82704,76936250,0,0x0,8
tick,0x7ff86ea82704,76938279,0,0x0,8
tick,0x7ff86ea82704,76940216,0,0x0,8
tick,0x7ff86ea82704,76942151,0,0x0,8
tick,0x7ff86ea82704,76944198,0,0x0,8
tick,0x7ff86ea82704,76946176,0,0x0,8
tick,0x7ff86ea82704,76948185,0,0x0,8
tick,0x7ff86ea82704,76950317,0,0x0,8
tick,0x7ff86ea82704,76952174,0,0x0,8
tick,0x7ff86ea82704,76954221,0,0x0,8
tick,0x7ff86ea82704,76956264,0,0x0,8
tick,0x7ff86ea82704,76958165,0,0x0,8
tick,0x7ff86ea82704,76960179,0,0x0,8
tick,0x7ff86ea82704,76962164,0,0x0,8
tick,0x7ff86ea82704,76964205,0,0x0,8
tick,0x7ff86ea82704,76966134,0,0x0,8
tick,0x7ff86ea82704,76968169,0,0x0,8
tick,0x7ff86ea82704,76970121,0,0x0,8
tick,0x7ff86ea82704,76972232,0,0x0,8
tick,0x7ff86ea82704,76974068,0,0x0,8
tick,0x7ff86ea82704,76976245,0,0x0,8
tick,0x7ff86ea82704,76978103,0,0x0,8
tick,0x7ff86ea82704,76980092,0,0x0,8
tick,0x7ff86ea82704,76982156,0,0x0,8
tick,0x7ff86ea82704,76984126,0,0x0,8
tick,0x7ff86ea82704,76986083,0,0x0,8
tick,0x7ff86ea82704,76988128,0,0x0,8
tick,0x7ff86ea82704,76990092,0,0x0,8
tick,0x7ff86ea82704,76992081,0,0x0,8
tick,0x7ff86ea82704,76994060,0,0x0,8
tick,0x7ff86ea82704,76996103,0,0x0,8
tick,0x7ff86ea82704,76997984,0,0x0,8
tick,0x7ff86ea82704,77000139,0,0x0,8
tick,0x7ff86ea82704,77002011,0,0x0,8
tick,0x7ff86ea82704,77004131,0,0x0,8
tick,0x7ff86ea82704,77006009,0,0x0,8
tick,0x7ff86ea82704,77008027,0,0x0,8
tick,0x7ff86ea82704,77009985,0,0x0,8
tick,0x7ff86ea82704,77011998,0,0x0,8
tick,0x7ff86ea82704,77013989,0,0x0,8
tick,0x7ff86ea82704,77016090,0,0x0,8
tick,0x7ff86ea82704,77018011,0,0x0,8
tick,0x7ff86ea82704,77020065,0,0x0,8
tick,0x7ff86ea82704,77021986,0,0x0,8
tick,0x7ff86ea82704,77023977,0,0x0,8
tick,0x7ff86ea82704,77025968,0,0x0,8
tick,0x7ff86ea82704,77028063,0,0x0,8
tick,0x7ff86ea82704,77030022,0,0x0,8
tick,0x7ff86ea82704,77032009,0,0x0,8
tick,0x7ff86ea82704,77033993,0,0x0,8
tick,0x7ff86ea82704,77035906,0,0x0,8
tick,0x7ff86ea82704,77037895,0,0x0,8
tick,0x7ff86ea82704,77039962,0,0x0,8
tick,0x7ff86ea82704,77041960,0,0x0,8
tick,0x7ff86ea82704,77043783,0,0x0,8
tick,0x7ff86ea82704,77046038,0,0x0,8
tick,0x7ff86ea82704,77047842,0,0x0,8
tick,0x7ff86ea82704,77050010,0,0x0,8
tick,0x7ff86ea82704,77051936,0,0x0,8
tick,0x7ff86ea82704,77053937,0,0x0,8
tick,0x7ff86ea82704,77055944,0,0x0,8
tick,0x7ff86ea82704,77057963,0,0x0,8
tick,0x7ff86ea82704,77059907,0,0x0,8
tick,0x7ff86ea82704,77061931,0,0x0,8
tick,0x7ff86ea82704,77063904,0,0x0,8
tick,0x7ff86ea82704,77065968,0,0x0,8
tick,0x7ff86ea82704,77067917,0,0x0,8
tick,0x7ff86ea82704,77069961,0,0x0,8
tick,0x7ff86ea82704,77071913,0,0x0,8
tick,0x7ff86ea82704,77073863,0,0x0,8
tick,0x7ff86ea82704,77075936,0,0x0,8
tick,0x7ff86ea82704,77077931,0,0x0,8
tick,0x7ff86ea82704,77079889,0,0x0,8
tick,0x7ff86ea82704,77081874,0,0x0,8
tick,0x7ff86ea82704,77083893,0,0x0,8
tick,0x7ff86ea82704,77085861,0,0x0,8
tick,0x7ff86ea82704,77087801,0,0x0,8
tick,0x7ff86ea82704,77089818,0,0x0,8
tick,0x7ff86ea82704,77091827,0,0x0,8
tick,0x7ff86ea82704,77093830,0,0x0,8
tick,0x7ff86ea82704,77095830,0,0x0,8
tick,0x7ff86ea82704,77097801,0,0x0,8
tick,0x7ff86ea82704,77099780,0,0x0,8
tick,0x7ff86ea82704,77101817,0,0x0,8
tick,0x7ff86ea82704,77103786,0,0x0,8
tick,0x7ff86ea82704,77105830,0,0x0,8
tick,0x7ff86ea82704,77107771,0,0x0,8
tick,0x7ff86ea82704,77109774,0,0x0,8
tick,0x7ff86ea82704,77111721,0,0x0,8
tick,0x7ff86ea82704,77113773,0,0x0,8
tick,0x7ff86ea82704,77115765,0,0x0,8
tick,0x7ff86ea82704,77117899,0,0x0,8
tick,0x7ff86ea82704,77119811,0,0x0,8
tick,0x7ff86ea82704,77121935,0,0x0,8
tick,0x7ff86ea82704,77123815,0,0x0,8
tick,0x7ff86ea82704,77125865,0,0x0,8
tick,0x7ff86ea82704,77127769,0,0x0,8
tick,0x7ff86ea82704,77129815,0,0x0,8
tick,0x7ff86ea82704,77131830,0,0x0,8
tick,0x7ff86ea82704,77133713,0,0x0,8
tick,0x7ff86ea82704,77135834,0,0x0,8
tick,0x7ff86ea82704,77137773,0,0x0,8
tick,0x7ff86ea82704,77139831,0,0x0,8
tick,0x7ff86ea82704,77141789,0,0x0,8
tick,0x7ff86ea82704,77143756,0,0x0,8
tick,0x7ff86ea82704,77145757,0,0x0,8
tick,0x7ff86ea82704,77147676,0,0x0,8
tick,0x7ff86ea82704,77149658,0,0x0,8
tick,0x7ff86ea82704,77151601,0,0x0,8
tick,0x7ff86ea82704,77153797,0,0x0,8
tick,0x7ff86ea82704,77155638,0,0x0,8
tick,0x7ff86ea82704,77157697,0,0x0,8
tick,0x7ff86ea82704,77159628,0,0x0,8
tick,0x7ff86ea82704,77161696,0,0x0,8
tick,0x7ff86ea82704,77163789,0,0x0,8
tick,0x7ff86ea82704,77165625,0,0x0,8
tick,0x7ff86ea82704,77167738,0,0x0,8
tick,0x7ff86ea82704,77169677,0,0x0,8
tick,0x7ff86ea82704,77171798,0,0x0,8
tick,0x7ff86ea82704,77173663,0,0x0,8
tick,0x7ff86ea82704,77175605,0,0x0,8
tick,0x7ff86ea82704,77177624,0,0x0,8
tick,0x7ff86ea82704,77179583,0,0x0,8
tick,0x7ff86ea82704,77181671,0,0x0,8
tick,0x7ff86ea82704,77183564,0,0x0,8
tick,0x7ff86ea82704,77185535,0,0x0,8
tick,0x7ff86ea82704,77187645,0,0x0,8
tick,0x7ff86ea82704,77189713,0,0x0,8
tick,0x7ff86ea82704,77191595,0,0x0,8
tick,0x7ff86ea82704,77193733,0,0x0,8
tick,0x7ff86ea82704,77195624,0,0x0,8
tick,0x7ff86ea82704,77197660,0,0x0,8
tick,0x7ff86ea82704,77199629,0,0x0,8
tick,0x7ff86ea82704,77201543,0,0x0,8
tick,0x7ff86ea82704,77203561,0,0x0,8
tick,0x7ff86ea82704,77205598,0,0x0,8
tick,0x7ff86ea82704,77208047,0,0x0,8
tick,0x7ff86ea82704,77209502,0,0x0,8
tick,0x7ff86ea82704,77211595,0,0x0,8
tick,0x7ff86ea82704,77213512,0,0x0,8
tick,0x7ff86ea82704,77215524,0,0x0,8
tick,0x7ff86ea82704,77217536,0,0x0,8
tick,0x7ff86ea82704,77219515,0,0x0,8
tick,0x7ff86ea82704,77221534,0,0x0,8
tick,0x7ff86ea82704,77223543,0,0x0,8
tick,0x7ff86ea82704,77225601,0,0x0,8
tick,0x7ff86ea82704,77227622,0,0x0,8
tick,0x7ff86ea82704,77229516,0,0x0,8
tick,0x7ff86ea82704,77231531,0,0x0,8
tick,0x7ff86ea82704,77233562,0,0x0,8
tick,0x7ff86ea82704,77235693,0,0x0,8
tick,0x7ff86ea82704,77237458,0,0x0,8
tick,0x7ff86ea82704,77239472,0,0x0,8
tick,0x7ff86ea82704,77241404,0,0x0,8
tick,0x7ff86ea82704,77243499,0,0x0,8
tick,0x7ff86ea82704,77245358,0,0x0,8
tick,0x7ff86ea82704,77247452,0,0x0,8
tick,0x7ff86ea82704,77249418,0,0x0,8
tick,0x7ff86ea82704,77251528,0,0x0,8
tick,0x7ff86ea82704,77253534,0,0x0,8
tick,0x7ff86ea82704,77255396,0,0x0,8
tick,0x7ff86ea82704,77257399,0,0x0,8
tick,0x7ff86ea82704,77259350,0,0x0,8
tick,0x7ff86ea82704,77261623,0,0x0,8
tick,0x7ff86ea82704,77263351,0,0x0,8
tick,0x7ff86ea82704,77265351,0,0x0,8
tick,0x7ff86ea82704,77267392,0,0x0,8
tick,0x7ff86ea82704,77269566,0,0x0,8
tick,0x7ff86ea82704,77271334,0,0x0,8
tick,0x7ff86ea82704,77273443,0,0x0,8
tick,0x7ff86ea82704,77275350,0,0x0,8
tick,0x7ff86ea82704,77277447,0,0x0,8
tick,0x7ff86ea82704,77279333,0,0x0,8
tick,0x7ff86ea82704,77281266,0,0x0,8
tick,0x7ff86ea82704,77283218,0,0x0,8
tick,0x7ff86ea82704,77285284,0,0x0,8
tick,0x7ff86ea82704,77287224,0,0x0,8
tick,0x7ff86ea82704,77289268,0,0x0,8
tick,0x7ff86ea82704,77291416,0,0x0,8
tick,0x7ff86ea82704,77293354,0,0x0,8
tick,0x7ff86ea82704,77295270,0,0x0,8
tick,0x7ff86ea82704,77297320,0,0x0,8
tick,0x7ff86ea82704,77299386,0,0x0,8
tick,0x7ff86ea82704,77301338,0,0x0,8
tick,0x7ff86ea82704,77303295,0,0x0,8
tick,0x7ff86ea82704,77305494,0,0x0,8
tick,0x7ff86ea82704,77307224,0,0x0,8
tick,0x7ff86ea82704,77309336,0,0x0,8
tick,0x7ff86ea82704,77311290,0,0x0,8
tick,0x7ff86ea82704,77313232,0,0x0,8
tick,0x7ff86ea82704,77315418,0,0x0,8
tick,0x7ff86ea82704,77317233,0,0x0,8
tick,0x7ff86ea82704,77319236,0,0x0,8
tick,0x7ff86ea82704,77321238,0,0x0,8
tick,0x7ff86ea82704,77323302,0,0x0,8
tick,0x7ff86ea82704,77325239,0,0x0,8
tick,0x7ff86ea82704,77327270,0,0x0,8
tick,0x7ff86ea82704,77331672,0,0x0,8
tick,0x7ff86ea82704,77333287,0,0x0,8
tick,0x7ff86ea82704,77335384,0,0x0,8
tick,0x7ff86ea82704,77337384,0,0x0,8
tick,0x7ff86ea82704,77339397,0,0x0,8
tick,0x7ff86ea82704,77341229,0,0x0,8
tick,0x7ff86ea82704,77343622,0,0x0,8
tick,0x7ff86ea82704,77345342,0,0x0,8
tick,0x7ff86ea82704,77347516,0,0x0,8
tick,0x7ff86ea82704,77349412,0,0x0,8
tick,0x7ff86ea82704,77351393,0,0x0,8
tick,0x7ff86ea82704,77353543,0,0x0,8
tick,0x7ff86ea82704,77355710,0,0x0,8
tick,0x7ff86ea82704,77357509,0,0x0,8
tick,0x7ff86ea82704,77359362,0,0x0,8
tick,0x7ff86ea82704,77361839,0,0x0,8
tick,0x7ff86ea82704,77363285,0,0x0,8
tick,0x7ff86ea82704,77365198,0,0x0,8
tick,0x7ff86ea82704,77367145,0,0x0,8
tick,0x7ff86ea82704,77369103,0,0x0,8
tick,0x7ff86ea82704,77371224,0,0x0,8
tick,0x7ff86ea82704,77373132,0,0x0,8
tick,0x7ff86ea82704,77375246,0,0x0,8
tick,0x7ff86ea82704,77377026,0,0x0,8
tick,0x7ff86ea82704,77379304,0,0x0,8
tick,0x7ff86ea82704,77381074,0,0x0,8
tick,0x7ff86ea82704,77383374,0,0x0,8
tick,0x7ff86ea82704,77385143,0,0x0,8
tick,0x7ff86ea82704,77387369,0,0x0,8
tick,0x7ff86ea82704,77389049,0,0x0,8
tick,0x7ff86ea82704,77391213,0,0x0,8
tick,0x7ff86ea82704,77393128,0,0x0,8
tick,0x7ff86ea82704,77395145,0,0x0,8
tick,0x7ff86ea82704,77397050,0,0x0,8
tick,0x7ff86ea82704,77399164,0,0x0,8
tick,0x7ff86ea82704,77401072,0,0x0,8
tick,0x7ff86ea82704,77403198,0,0x0,8
tick,0x7ff86ea82704,77405038,0,0x0,8
tick,0x7ff86ea82704,77407163,0,0x0,8
tick,0x7ff86ea82704,77409141,0,0x0,8
tick,0x7ff86ea82704,77411251,0,0x0,8
tick,0x7ff86ea82704,77413094,0,0x0,8
tick,0x7ff86ea82704,77415099,0,0x0,8
tick,0x7ff86ea82704,77417078,0,0x0,8
tick,0x7ff86ea82704,77419031,0,0x0,8
tick,0x7ff86ea82704,77421155,0,0x0,8
tick,0x7ff86ea82704,77423244,0,0x0,8
tick,0x7ff86ea82704,77425194,0,0x0,8
tick,0x7ff86ea82704,77427008,0,0x0,8
tick,0x7ff86ea82704,77429024,0,0x0,8
tick,0x7ff86ea82704,77430945,0,0x0,8
tick,0x7ff86ea82704,77433238,0,0x0,8
tick,0x7ff86ea82704,77435057,0,0x0,8
tick,0x7ff86ea82704,77437108,0,0x0,8
tick,0x7ff86ea82704,77438980,0,0x0,8
tick,0x7ff86ea82704,77441048,0,0x0,8
tick,0x7ff86ea82704,77442917,0,0x0,8
tick,0x7ff86ea82704,77445033,0,0x0,8
tick,0x7ff86ea82704,77446968,0,0x0,8
tick,0x7ff86ea82704,77449101,0,0x0,8
tick,0x7ff86ea82704,77450983,0,0x0,8
tick,0x7ff86ea82704,77453117,0,0x0,8
tick,0x7ff86ea82704,77455129,0,0x0,8
tick,0x7ff86ea82704,77457091,0,0x0,8
tick,0x7ff86ea82704,77458954,0,0x0,8
tick,0x7ff86ea82704,77460958,0,0x0,8
tick,0x7ff86ea82704,77462986,0,0x0,8
tick,0x7ff86ea82704,77464924,0,0x0,8
tick,0x7ff86ea82704,77466875,0,0x0,8
tick,0x7ff86ea82704,77468928,0,0x0,8
tick,0x7ff86ea82704,77470896,0,0x0,8
tick,0x7ff86ea82704,77472878,0,0x0,8
tick,0x7ff86ea82704,77474832,0,0x0,8
tick,0x7ff86ea82704,77476933,0,0x0,8
tick,0x7ff86ea82704,77478928,0,0x0,8
tick,0x7ff86ea82704,77481128,0,0x0,8
tick,0x7ff86ea82704,77482933,0,0x0,8
tick,0x7ff86ea82704,77484856,0,0x0,8
tick,0x7ff86ea82704,77486859,0,0x0,8
tick,0x7ff86ea82704,77488898,0,0x0,8
tick,0x7ff86ea82704,77490873,0,0x0,8
tick,0x7ff86ea82704,77492832,0,0x0,8
tick,0x7ff86ea82704,77494853,0,0x0,8
tick,0x7ff86ea82704,77496831,0,0x0,8
tick,0x7ff86ea82704,77498833,0,0x0,8
tick,0x7ff86ea82704,77500816,0,0x0,8
tick,0x7ff86ea82704,77502850,0,0x0,8
tick,0x7ff86ea82704,77504885,0,0x0,8
tick,0x7ff86ea82704,77506856,0,0x0,8
tick,0x7ff86ea82704,77509028,0,0x0,8
tick,0x7ff86ea82704,77510914,0,0x0,8
tick,0x7ff86ea82704,77512775,0,0x0,8
tick,0x7ff86ea82704,77514882,0,0x0,8
tick,0x7ff86ea82704,77516640,0,0x0,8
tick,0x7ff86ea82704,77518977,0,0x0,8
tick,0x7ff86ea82704,77520883,0,0x0,8
tick,0x7ff86ea82704,77522860,0,0x0,8
tick,0x7ff86ea82704,77525094,0,0x0,8
tick,0x7ff86ea82704,77526903,0,0x0,8
tick,0x7ff86ea82704,77528724,0,0x0,8
tick,0x7ff86ea82704,77530997,0,0x0,8
tick,0x7ff86ea82704,77532753,0,0x0,8
tick,0x7ff86ea82704,77534832,0,0x0,8
tick,0x7ff86ea82704,77536861,0,0x0,8
tick,0x7ff86ea82704,77538811,0,0x0,8
tick,0x7ff86ea82704,77540744,0,0x0,8
tick,0x7ff86ea82704,77542727,0,0x0,8
tick,0x7ff86ea82704,77545008,0,0x0,8
tick,0x7ff86ea82704,77546791,0,0x0,8
tick,0x7ff86ea82704,77548858,0,0x0,8
tick,0x7ff86ea82704,77550664,0,0x0,8
tick,0x7ff86ea82704,77552572,0,0x0,8
tick,0x7ff86ea82704,77554842,0,0x0,8
tick,0x7ff86ea82704,77556599,0,0x0,8
tick,0x7ff86ea82704,77558697,0,0x0,8
tick,0x7ff86ea82704,77560668,0,0x0,8
tick,0x7ff86ea82704,77562709,0,0x0,8
tick,0x7ff86ea82704,77564653,0,0x0,8
tick,0x7ff86ea82704,77566556,0,0x0,8
tick,0x7ff86ea82704,77568729,0,0x0,8
tick,0x7ff86ea82704,77570666,0,0x0,8
tick,0x7ff86ea82704,77572764,0,0x0,8
tick,0x7ff86ea82704,77574499,0,0x0,8
tick,0x7ff86ea82704,77576721,0,0x0,8
tick,0x7ff86ea82704,77578505,0,0x0,8
tick,0x7ff86ea82704,77580668,0,0x0,8
tick,0x7ff86ea82704,77582510,0,0x0,8
tick,0x7ff86ea82704,77584616,0,0x0,8
tick,0x7ff86ea82704,77586695,0,0x0,8
tick,0x7ff86ea82704,77588620,0,0x0,8
tick,0x7ff86ea82704,77590586,0,0x0,8
tick,0x7ff86ea82704,77592532,0,0x0,8
tick,0x7ff86ea82704,77594748,0,0x0,8
tick,0x7ff86ea82704,77596530,0,0x0,8
tick,0x7ff86ea82704,77598707,0,0x0,8
tick,0x7ff86ea82704,77600479,0,0x0,8
tick,0x7ff86ea82704,77602499,0,0x0,8
tick,0x7ff86ea82704,77604452,0,0x0,8
tick,0x7ff86ea82704,77606528,0,0x0,8
tick,0x7ff86ea82704,77608565,0,0x0,8
tick,0x7ff86ea82704,77610520,0,0x0,8
tick,0x7ff86ea82704,77612604,0,0x0,8
tick,0x7ff86ea82704,77614708,0,0x0,8
tick,0x7ff86ea82704,77616606,0,0x0,8
tick,0x7ff86ea82704,77618662,0,0x0,8
tick,0x7ff86ea82704,77620652,0,0x0,8
tick,0x7ff86ea82704,77622754,0,0x0,8
tick,0x7ff86ea82704,77624586,0,0x0,8
tick,0x7ff86ea82704,77626483,0,0x0,8
tick,0x7ff86ea82704,77628666,0,0x0,8
tick,0x7ff86ea82704,77630487,0,0x0,8
tick,0x7ff86ea82704,77632595,0,0x0,8
tick,0x7ff86ea82704,77634508,0,0x0,8
tick,0x7ff86ea82704,77636643,0,0x0,8
tick,0x7ff86ea82704,77638435,0,0x0,8
tick,0x7ff86ea82704,77640581,0,0x0,8
tick,0x7ff86ea82704,77642532,0,0x0,8
tick,0x7ff86ea82704,77644600,0,0x0,8
tick,0x7ff86ea82704,77646574,0,0x0,8
tick,0x7ff86ea82704,77648405,0,0x0,8
tick,0x7ff86ea82704,77650420,0,0x0,8
tick,0x7ff86ea82704,77652401,0,0x0,8
tick,0x7ff86ea82704,77654518,0,0x0,8
tick,0x7ff86ea82704,77656411,0,0x0,8
tick,0x7ff86ea82704,77658521,0,0x0,8
tick,0x7ff86ea82704,77660533,0,0x0,8
tick,0x7ff86ea82704,77662535,0,0x0,8
tick,0x7ff86ea82704,77664455,0,0x0,8
tick,0x7ff86ea82704,77666705,0,0x0,8
tick,0x7ff86ea82704,77668428,0,0x0,8
tick,0x7ff86ea82704,77670496,0,0x0,8
tick,0x7ff86ea82704,77672538,0,0x0,8
tick,0x7ff86ea82704,77674307,0,0x0,8
tick,0x7ff86ea82704,77676386,0,0x0,8
tick,0x7ff86ea82704,77678336,0,0x0,8
tick,0x7ff86ea82704,77680524,0,0x0,8
tick,0x7ff86ea82704,77682343,0,0x0,8
tick,0x7ff86ea82704,77684432,0,0x0,8
tick,0x7ff86ea82704,77686438,0,0x0,8
tick,0x7ff86ea82704,77688460,0,0x0,8
tick,0x7ff86ea82704,77690595,0,0x0,8
tick,0x7ff86ea82704,77692439,0,0x0,8
tick,0x7ff86ea82704,77694303,0,0x0,8
tick,0x7ff86ea82704,77696429,0,0x0,8
tick,0x7ff86ea82704,77698332,0,0x0,8
tick,0x7ff86ea82704,77700394,0,0x0,8
tick,0x7ff86ea82704,77702319,0,0x0,8
tick,0x7ff86ea82704,77704356,0,0x0,8
tick,0x7ff86ea82704,77706295,0,0x0,8
tick,0x7ff86ea82704,77708525,0,0x0,8
tick,0x7ff86ea82704,77710267,0,0x0,8
tick,0x7ff86ea82704,77712438,0,0x0,8
tick,0x7ff86ea82704,77714273,0,0x0,8
tick,0x7ff86ea82704,77716345,0,0x0,8
tick,0x7ff86ea82704,77718281,0,0x0,8
tick,0x7ff86ea82704,77720337,0,0x0,8
tick,0x7ff86ea82704,77722239,0,0x0,8
tick,0x7ff86ea82704,77724310,0,0x0,8
tick,0x7ff86ea82704,77726239,0,0x0,8
tick,0x7ff86ea82704,77728244,0,0x0,8
tick,0x7ff86ea82704,77730223,0,0x0,8
tick,0x7ff86ea82704,77732298,0,0x0,8
tick,0x7ff86ea82704,77734244,0,0x0,8
tick,0x7ff86ea82704,77736306,0,0x0,8
tick,0x7ff86ea82704,77738321,0,0x0,8
tick,0x7ff86ea82704,77740344,0,0x0,8
tick,0x7ff86ea82704,77742325,0,0x0,8
tick,0x7ff86ea82704,77744388,0,0x0,8
tick,0x7ff86ea82704,77746368,0,0x0,8
tick,0x7ff86ea82704,77748300,0,0x0,8
tick,0x7ff86ea82704,77750245,0,0x0,8
tick,0x7ff86ea82704,77752190,0,0x0,8
tick,0x7ff86ea82704,77754468,0,0x0,8
tick,0x7ff86ea82704,77756347,0,0x0,8
tick,0x7ff86ea82704,77758092,0,0x0,8
tick,0x7ff86ea82704,77760066,0,0x0,8
tick,0x7ff86ea82704,77762257,0,0x0,8
tick,0x7ff86ea82704,77764142,0,0x0,8
tick,0x7ff86ea82704,77766134,0,0x0,8
tick,0x7ff86ea82704,77768190,0,0x0,8
tick,0x7ff86ea82704,77770145,0,0x0,8
tick,0x7ff86ea82704,77772072,0,0x0,8
tick,0x7ff86ea82704,77774091,0,0x0,8
tick,0x7ff86ea82704,77776115,0,0x0,8
tick,0x7ff86ea82704,77778166,0,0x0,8
tick,0x7ff86ea82704,77780137,0,0x0,8
tick,0x7ff86ea82704,77782108,0,0x0,8
tick,0x7ff86ea82704,77784093,0,0x0,8
tick,0x7ff86ea82704,77786049,0,0x0,8
tick,0x7ff86ea82704,77788116,0,0x0,8
tick,0x7ff86ea82704,77790102,0,0x0,8
tick,0x7ff86ea82704,77792045,0,0x0,8
tick,0x7ff86ea82704,77794025,0,0x0,8
tick,0x7ff86ea82704,77795995,0,0x0,8
tick,0x7ff86ea82704,77798015,0,0x0,8
tick,0x7ff86ea82704,77800013,0,0x0,8
tick,0x7ff86ea82704,77802115,0,0x0,8
tick,0x7ff86ea82704,77804056,0,0x0,8
tick,0x7ff86ea82704,77806040,0,0x0,8
tick,0x7ff86ea82704,77808196,0,0x0,8
tick,0x7ff86ea82704,77809963,0,0x0,8
tick,0x7ff86ea82704,77811985,0,0x0,8
tick,0x7ff86ea82704,77813963,0,0x0,8
tick,0x7ff86ea82704,77815963,0,0x0,8
tick,0x7ff86ea82704,77817929,0,0x0,8
tick,0x7ff86ea82704,77820010,0,0x0,8
tick,0x7ff86ea82704,77821980,0,0x0,8
tick,0x7ff86ea82704,77823932,0,0x0,8
tick,0x7ff86ea82704,77825929,0,0x0,8
tick,0x7ff86ea82704,77827873,0,0x0,8
tick,0x7ff86ea82704,77829957,0,0x0,8
tick,0x7ff86ea82704,77831866,0,0x0,8
tick,0x7ff86ea82704,77833966,0,0x0,8
tick,0x7ff86ea82704,77835886,0,0x0,8
tick,0x7ff86ea82704,77837989,0,0x0,8
tick,0x7ff86ea82704,77839937,0,0x0,8
tick,0x7ff86ea82704,77842038,0,0x0,8
tick,0x7ff86ea82704,77843819,0,0x0,8
tick,0x7ff86ea82704,77845941,0,0x0,8
tick,0x7ff86ea82704,77847924,0,0x0,8
tick,0x7ff86ea82704,77850002,0,0x0,8
tick,0x7ff86ea82704,77852019,0,0x0,8
tick,0x7ff86ea82704,77854004,0,0x0,8
tick,0x7ff86ea82704,77855874,0,0x0,8
tick,0x7ff86ea82704,77858215,0,0x0,8
tick,0x7ff86ea82704,77859856,0,0x0,8
tick,0x7ff86ea82704,77861905,0,0x0,8
tick,0x7ff86ea82704,77863945,0,0x0,8
tick,0x7ff86ea82704,77865894,0,0x0,8
tick,0x7ff86ea82704,77867974,0,0x0,8
tick,0x7ff86ea82704,77870012,0,0x0,8
tick,0x7ff86ea82704,77872049,0,0x0,8
tick,0x7ff86ea82704,77873869,0,0x0,8
tick,0x7ff86ea82704,77876009,0,0x0,8
tick,0x7ff86ea82704,77877899,0,0x0,8
tick,0x7ff86ea82704,77879910,0,0x0,8
tick,0x7ff86ea82704,77881955,0,0x0,8
tick,0x7ff86ea82704,77883910,0,0x0,8
tick,0x7ff86ea82704,77885805,0,0x0,8
tick,0x7ff86ea82704,77887867,0,0x0,8
tick,0x7ff86ea82704,77889868,0,0x0,8
tick,0x7ff86ea82704,77891843,0,0x0,8
tick,0x7ff86ea82704,77893865,0,0x0,8
tick,0x7ff86ea82704,77895813,0,0x0,8
tick,0x7ff86ea82704,77897838,0,0x0,8
tick,0x7ff86ea82704,77899808,0,0x0,8
tick,0x7ff86ea82704,77901751,0,0x0,8
tick,0x7ff86ea82704,77903788,0,0x0,8
tick,0x7ff86ea82704,77905781,0,0x0,8
tick,0x7ff86ea82704,77907802,0,0x0,8
tick,0x7ff86ea82704,77909820,0,0x0,8
tick,0x7ff86ea82704,77911760,0,0x0,8
tick,0x7ff86ea82704,77913726,0,0x0,8
tick,0x7ff86ea82704,77915635,0,0x0,8
tick,0x7ff86ea82704,77917686,0,0x0,8
tick,0x7ff86ea82704,77919745,0,0x0,8
tick,0x7ff86ea82704,77921680,0,0x0,8
tick,0x7ff86ea82704,77923669,0,0x0,8
tick,0x7ff86ea82704,77925634,0,0x0,8
tick,0x7ff86ea82704,77927817,0,0x0,8
tick,0x7ff86ea82704,77929698,0,0x0,8
tick,0x7ff86ea82704,77931729,0,0x0,8
tick,0x7ff86ea82704,77933532,0,0x0,8
tick,0x7ff86ea82704,77935751,0,0x0,8
tick,0x7ff86ea82704,77937615,0,0x0,8
tick,0x7ff86ea82704,77939677,0,0x0,8
tick,0x7ff86ea82704,77941511,0,0x0,8
tick,0x7ff86ea82704,77943737,0,0x0,8
tick,0x7ff86ea82704,77945590,0,0x0,8
tick,0x7ff86ea82704,77947618,0,0x0,8
tick,0x7ff86ea82704,77949663,0,0x0,8
tick,0x7ff86ea82704,77951642,0,0x0,8
tick,0x7ff86ea82704,77953515,0,0x0,8
tick,0x7ff86ea82704,77955617,0,0x0,8
tick,0x7ff86ea82704,77957596,0,0x0,8
tick,0x7ff86ea82704,77959638,0,0x0,8
tick,0x7ff86ea82704,77961620,0,0x0,8
tick,0x7ff86ea82704,77963592,0,0x0,8
tick,0x7ff86ea82704,77965584,0,0x0,8
tick,0x7ff86ea82704,77967505,0,0x0,8
tick,0x7ff86ea82704,77969604,0,0x0,8
tick,0x7ff86ea82704,77971460,0,0x0,8
tick,0x7ff86ea82704,77973618,0,0x0,8
tick,0x7ff86ea82704,77975495,0,0x0,8
tick,0x7ff86ea82704,77977664,0,0x0,8
tick,0x7ff86ea82704,77979508,0,0x0,8
tick,0x7ff86ea82704,77981697,0,0x0,8
tick,0x7ff86ea82704,77983436,0,0x0,8
tick,0x7ff86ea82704,77985481,0,0x0,8
tick,0x7ff86ea82704,77987592,0,0x0,8
tick,0x7ff86ea82704,77989569,0,0x0,8
tick,0x7ff86ea82704,77991557,0,0x0,8
tick,0x7ff86ea82704,77993578,0,0x0,8
tick,0x7ff86ea82704,77995459,0,0x0,8
tick,0x7ff86ea82704,77997561,0,0x0,8
tick,0x7ff86ea82704,77999417,0,0x0,8
tick,0x7ff86ea82704,78001534,0,0x0,8
tick,0x7ff86ea82704,78003451,0,0x0,8
tick,0x7ff86ea82704,78005358,0,0x0,8
tick,0x7ff86ea82704,78007553,0,0x0,8
tick,0x7ff86ea82704,78009376,0,0x0,8
tick,0x7ff86ea82704,78011712,0,0x0,8
tick,0x7ff86ea82704,78013429,0,0x0,8
tick,0x7ff86ea82704,78015499,0,0x0,8
tick,0x7ff86ea82704,78017377,0,0x0,8
tick,0x7ff86ea82704,78019392,0,0x0,8
tick,0x7ff86ea82704,78021407,0,0x0,8
tick,0x7ff86ea82704,78023462,0,0x0,8
tick,0x7ff86ea82704,78025376,0,0x0,8
tick,0x7ff86ea82704,78027457,0,0x0,8
tick,0x7ff86ea82704,78029480,0,0x0,8
tick,0x7ff86ea82704,78031322,0,0x0,8
tick,0x7ff86ea82704,78033340,0,0x0,8
tick,0x7ff86ea82704,78035348,0,0x0,8
tick,0x7ff86ea82704,78037541,0,0x0,8
tick,0x7ff86ea82704,78039338,0,0x0,8
tick,0x7ff86ea82704,78041495,0,0x0,8
tick,0x7ff86ea82704,78043316,0,0x0,8
tick,0x7ff86ea82704,78045487,0,0x0,8
tick,0x7ff86ea82704,78047403,0,0x0,8
tick,0x7ff86ea82704,78049462,0,0x0,8
tick,0x7ff86ea82704,78051352,0,0x0,8
tick,0x7ff86ea82704,78053440,0,0x0,8
tick,0x7ff86ea82704,78055292,0,0x0,8
tick,0x7ff86ea82704,78059993,0,0x0,8
tick,0x7ff86ea82704,78061289,0,0x0,8
tick,0x7ff86ea82704,78063204,0,0x0,8
tick,0x7ff86ea82704,78065347,0,0x0,8
tick,0x7ff86ea82704,78067427,0,0x0,8
tick,0x7ff86ea82704,78069643,0,0x0,8
tick,0x7ff86ea82704,78071637,0,0x0,8
tick,0x7ff86ea82704,78073275,0,0x0,8
tick,0x7ff86ea82704,78075218,0,0x0,8
tick,0x7ff86ea82704,78077236,0,0x0,8
tick,0x7ff86ea82704,78079303,0,0x0,8
tick,0x7ff86ea82704,78081188,0,0x0,8
tick,0x7ff86ea82704,78083339,0,0x0,8
tick,0x7ff86ea82704,78085107,0,0x0,8
tick,0x7ff86ea82704,78087282,0,0x0,8
tick,0x7ff86ea82704,78089233,0,0x0,8
tick,0x7ff86ea82704,78091203,0,0x0,8
tick,0x7ff86ea82704,78093153,0,0x0,8
tick,0x7ff86ea82704,78095223,0,0x0,8
tick,0x7ff86ea82704,78097173,0,0x0,8
tick,0x7ff86ea82704,78099344,0,0x0,8
tick,0x7ff86ea82704,78101218,0,0x0,8
tick,0x7ff86ea82704,78103262,0,0x0,8
tick,0x7ff86ea82704,78105243,0,0x0,8
tick,0x7ff86ea82704,78107254,0,0x0,8
tick,0x7ff86ea82704,78109363,0,0x0,8
tick,0x7ff86ea82704,78111140,0,0x0,8
tick,0x7ff86ea82704,78113446,0,0x0,8
tick,0x7ff86ea82704,78115426,0,0x0,8
tick,0x7ff86ea82704,78117256,0,0x0,8
tick,0x7ff86ea82704,78119182,0,0x0,8
tick,0x7ff86ea82704,78121234,0,0x0,8
tick,0x7ff86ea82704,78123457,0,0x0,8
tick,0x7ff86ea82704,78125155,0,0x0,8
tick,0x7ff86ea82704,78127305,0,0x0,8
tick,0x7ff86ea82704,78129101,0,0x0,8
tick,0x7ff86ea82704,78131371,0,0x0,8
tick,0x7ff86ea82704,78133183,0,0x0,8
tick,0x7ff86ea82704,78135104,0,0x0,8
tick,0x7ff86ea82704,78137359,0,0x0,8
tick,0x7ff86ea82704,78139068,0,0x0,8
tick,0x7ff86ea82704,78141207,0,0x0,8
tick,0x7ff86ea82704,78143063,0,0x0,8
tick,0x7ff86ea82704,78145179,0,0x0,8
tick,0x7ff86ea82704,78147140,0,0x0,8
tick,0x7ff86ea82704,78149247,0,0x0,8
tick,0x7ff86ea82704,78151286,0,0x0,8
tick,0x7ff86ea82704,78153164,0,0x0,8
tick,0x7ff86ea82704,78155127,0,0x0,8
tick,0x7ff86ea82704,78157144,0,0x0,8
tick,0x7ff86ea82704,78159161,0,0x0,8
tick,0x7ff86ea82704,78161215,0,0x0,8
tick,0x7ff86ea82704,78163237,0,0x0,8
tick,0x7ff86ea82704,78165096,0,0x0,8
tick,0x7ff86ea82704,78167215,0,0x0,8
tick,0x7ff86ea82704,78169563,0,0x0,8
tick,0x7ff86ea82704,78171030,0,0x0,8
tick,0x7ff86ea82704,78173202,0,0x0,8
tick,0x7ff86ea82704,78174978,0,0x0,8
tick,0x7ff86ea82704,78177033,0,0x0,8
tick,0x7ff86ea82704,78179087,0,0x0,8
tick,0x7ff86ea82704,78181088,0,0x0,8
tick,0x7ff86ea82704,78183079,0,0x0,8
tick,0x7ff86ea82704,78185296,0,0x0,8
tick,0x7ff86ea82704,78187479,0,0x0,8
tick,0x7ff86ea82704,78188911,0,0x0,8
tick,0x7ff86ea82704,78191011,0,0x0,8
tick,0x7ff86ea82704,78192911,0,0x0,8
tick,0x7ff86ea82704,78194978,0,0x0,8
tick,0x7ff86ea82704,78196935,0,0x0,8
tick,0x7ff86ea82704,78198956,0,0x0,8
tick,0x7ff86ea82704,78201054,0,0x0,8
tick,0x7ff86ea82704,78202974,0,0x0,8
tick,0x7ff86ea82704,78204862,0,0x0,8
tick,0x7ff86ea82704,78206991,0,0x0,8
tick,0x7ff86ea82704,78208900,0,0x0,8
tick,0x7ff86ea82704,78210928,0,0x0,8
tick,0x7ff86ea82704,78212874,0,0x0,8
tick,0x7ff86ea82704,78214965,0,0x0,8
tick,0x7ff86ea82704,78216830,0,0x0,8
tick,0x7ff86ea82704,78218943,0,0x0,8
tick,0x7ff86ea82704,78220764,0,0x0,8
tick,0x7ff86ea82704,78222973,0,0x0,8
tick,0x7ff86ea82704,78224847,0,0x0,8
tick,0x7ff86ea82704,78226846,0,0x0,8
tick,0x7ff86ea82704,78228696,0,0x0,8
tick,0x7ff86ea82704,78230997,0,0x0,8
tick,0x7ff86ea82704,78232960,0,0x0,8
tick,0x7ff86ea82704,78234842,0,0x0,8
tick,0x7ff86ea82704,78236891,0,0x0,8
tick,0x7ff86ea82704,78238760,0,0x0,8
tick,0x7ff86ea82704,78240800,0,0x0,8
tick,0x7ff86ea82704,78242809,0,0x0,8
tick,0x7ff86ea82704,78244752,0,0x0,8
tick,0x7ff86ea82704,78246663,0,0x0,8
tick,0x7ff86ea82704,78248889,0,0x0,8
tick,0x7ff86ea82704,78250780,0,0x0,8
tick,0x7ff86ea82704,78252650,0,0x0,8
tick,0x7ff86ea82704,78255123,0,0x0,8
tick,0x7ff86ea82704,78256847,0,0x0,8
tick,0x7ff86ea82704,78258818,0,0x0,8
tick,0x7ff86ea82704,78260949,0,0x0,8
tick,0x7ff86ea82704,78262835,0,0x0,8
tick,0x7ff86ea82704,78264947,0,0x0,8
tick,0x7ff86ea82704,78267019,0,0x0,8
tick,0x7ff86ea82704,78268795,0,0x0,8
tick,0x7ff86ea82704,78270909,0,0x0,8
tick,0x7ff86ea82704,78272822,0,0x0,8
tick,0x7ff86ea82704,78274892,0,0x0,8
tick,0x7ff86ea82704,78276818,0,0x0,8
tick,0x7ff86ea82704,78278717,0,0x0,8
tick,0x7ff86ea82704,78280763,0,0x0,8
tick,0x7ff86ea82704,78282713,0,0x0,8
tick,0x7ff86ea82704,78284693,0,0x0,8
tick,0x7ff86ea82704,78286856,0,0x0,8
tick,0x7ff86ea82704,78288896,0,0x0,8
tick,0x7ff86ea82704,78290779,0,0x0,8
tick,0x7ff86ea82704,78292730,0,0x0,8
tick,0x7ff86ea82704,78294701,0,0x0,8
tick,0x7ff86ea82704,78296795,0,0x0,8
tick,0x7ff86ea82704,78298661,0,0x0,8
tick,0x7ff86ea82704,78300810,0,0x0,8
tick,0x7ff86ea82704,78302602,0,0x0,8
tick,0x7ff86ea82704,78304837,0,0x0,8
tick,0x7ff86ea82704,78306584,0,0x0,8
tick,0x7ff86ea82704,78308851,0,0x0,8
tick,0x7ff86ea82704,78310659,0,0x0,8
tick,0x7ff86ea82704,78312790,0,0x0,8
tick,0x7ff86ea82704,78314665,0,0x0,8
tick,0x7ff86ea82704,78316609,0,0x0,8
tick,0x7ff86ea82704,78318683,0,0x0,8
tick,0x7ff86ea82704,78320652,0,0x0,8
tick,0x7ff86ea82704,78322894,0,0x0,8
tick,0x7ff86ea82704,78324703,0,0x0,8
tick,0x7ff86ea82704,78326598,0,0x0,8
tick,0x7ff86ea82704,78328513,0,0x0,8
tick,0x7ff86ea82704,78330783,0,0x0,8
tick,0x7ff86ea82704,78332558,0,0x0,8
tick,0x7ff86ea82704,78334671,0,0x0,8
tick,0x7ff86ea82704,78336537,0,0x0,8
tick,0x7ff86ea82704,78338743,0,0x0,8
tick,0x7ff86ea82704,78340566,0,0x0,8
tick,0x7ff86ea82704,78342640,0,0x0,8
tick,0x7ff86ea82704,78344621,0,0x0,8
tick,0x7ff86ea82704,78346532,0,0x0,8
tick,0x7ff86ea82704,78348465,0,0x0,8
tick,0x7ff86ea82704,78350451,0,0x0,8
tick,0x7ff86ea82704,78352417,0,0x0,8
tick,0x7ff86ea82704,78354513,0,0x0,8
tick,0x7ff86ea82704,78356516,0,0x0,8
tick,0x7ff86ea82704,78359500,0,0x0,8
tick,0x7ff86ea82704,78361730,0,0x0,8
tick,0x7ff86ea82704,78363451,0,0x0,8
tick,0x7ff86ea82704,78365389,0,0x0,8
tick,0x7ff86ea82704,78367346,0,0x0,8
tick,0x7ff86ea82704,78369376,0,0x0,8
tick,0x7ff86ea82704,78371525,0,0x0,8
tick,0x7ff86ea82704,78373389,0,0x0,8
tick,0x7ff86ea82704,78375278,0,0x0,8
tick,0x7ff86ea82704,78377390,0,0x0,8
tick,0x7ff86ea82704,78379489,0,0x0,8
tick,0x7ff86ea82704,78381669,0,0x0,8
tick,0x7ff86ea82704,78383307,0,0x0,8
tick,0x7ff86ea82704,78385441,0,0x0,8
tick,0x7ff86ea82704,78387601,0,0x0,8
tick,0x7ff86ea82704,78389217,0,0x0,8
tick,0x7ff86ea82704,78391424,0,0x0,8
tick,0x7ff86ea82704,78393225,0,0x0,8
tick,0x7ff86ea82704,78395364,0,0x0,8
tick,0x7ff86ea82704,78397471,0,0x0,8
tick,0x7ff86ea82704,78399621,0,0x0,8
tick,0x7ff86ea82704,78401268,0,0x0,8
tick,0x7ff86ea82704,78403336,0,0x0,8
tick,0x7ff86ea82704,78405204,0,0x0,8
tick,0x7ff86ea82704,78407361,0,0x0,8
tick,0x7ff86ea82704,78409626,0,0x0,8
tick,0x7ff86ea82704,78411502,0,0x0,8
tick,0x7ff86ea82704,78413356,0,0x0,8
tick,0x7ff86ea82704,78415290,0,0x0,8
tick,0x7ff86ea82704,78417464,0,0x0,8
tick,0x7ff86ea82704,78419236,0,0x0,8
tick,0x7ff86ea82704,78421575,0,0x0,8
tick,0x7ff86ea82704,78423262,0,0x0,8
tick,0x7ff86ea82704,78425318,0,0x0,8
tick,0x7ff86ea82704,78427228,0,0x0,8
tick,0x7ff86ea82704,78429264,0,0x0,8
tick,0x7ff86ea82704,78431248,0,0x0,8
tick,0x7ff86ea82704,78433222,0,0x0,8
tick,0x7ff86ea82704,78435250,0,0x0,8
tick,0x7ff86ea82704,78437325,0,0x0,8
tick,0x7ff86ea82704,78439396,0,0x0,8
tick,0x7ff86ea82704,78441318,0,0x0,8
tick,0x7ff86ea82704,78443355,0,0x0,8
tick,0x7ff86ea82704,78445253,0,0x0,8
tick,0x7ff86ea82704,78447243,0,0x0,8
tick,0x7ff86ea82704,78449276,0,0x0,8
tick,0x7ff86ea82704,78451216,0,0x0,8
tick,0x7ff86ea82704,78453276,0,0x0,8
tick,0x7ff86ea82704,78455047,0,0x0,8
tick,0x7ff86ea82704,78457376,0,0x0,8
tick,0x7ff86ea82704,78459240,0,0x0,8
tick,0x7ff86ea82704,78461410,0,0x0,8
tick,0x7ff86ea82704,78463080,0,0x0,8
tick,0x7ff86ea82704,78465333,0,0x0,8
tick,0x7ff86ea82704,78467052,0,0x0,8
tick,0x7ff86ea82704,78469148,0,0x0,8
tick,0x7ff86ea82704,78471093,0,0x0,8
tick,0x7ff86ea82704,78473252,0,0x0,8
tick,0x7ff86ea82704,78475143,0,0x0,8
tick,0x7ff86ea82704,78477241,0,0x0,8
tick,0x7ff86ea82704,78479053,0,0x0,8
tick,0x7ff86ea82704,78481182,0,0x0,8
tick,0x7ff86ea82704,78483121,0,0x0,8
tick,0x7ff86ea82704,78485160,0,0x0,8
tick,0x7ff86ea82704,78487353,0,0x0,8
tick,0x7ff86ea82704,78489112,0,0x0,8
tick,0x7ff86ea82704,78491057,0,0x0,8
tick,0x7ff86ea82704,78492985,0,0x0,8
tick,0x7ff86ea82704,78495168,0,0x0,8
tick,0x7ff86ea82704,78497063,0,0x0,8
tick,0x7ff86ea82704,78499068,0,0x0,8
tick,0x7ff86ea82704,78501089,0,0x0,8
tick,0x7ff86ea82704,78503001,0,0x0,8
tick,0x7ff86ea82704,78505180,0,0x0,8
tick,0x7ff86ea82704,78507126,0,0x0,8
tick,0x7ff86ea82704,78509174,0,0x0,8
tick,0x7ff86ea82704,78511069,0,0x0,8
tick,0x7ff86ea82704,78513180,0,0x0,8
tick,0x7ff86ea82704,78515230,0,0x0,8
tick,0x7ff86ea82704,78517190,0,0x0,8
tick,0x7ff86ea82704,78519088,0,0x0,8
tick,0x7ff86ea82704,78521195,0,0x0,8
tick,0x7ff86ea82704,78523119,0,0x0,8
tick,0x7ff86ea82704,78525425,0,0x0,8
tick,0x7ff86ea82704,78527382,0,0x0,8
tick,0x7ff86ea82704,78529473,0,0x0,8
tick,0x7ff86ea82704,78530920,0,0x0,8
tick,0x7ff86ea82704,78533146,0,0x0,8
tick,0x7ff86ea82704,78535255,0,0x0,8
tick,0x7ff86ea82704,78537292,0,0x0,8
tick,0x7ff86ea82704,78538951,0,0x0,8
tick,0x7ff86ea82704,78540968,0,0x0,8
tick,0x7ff86ea82704,78543563,0,0x0,8
tick,0x7ff86ea82704,78544886,0,0x0,8
tick,0x7ff86ea82704,78547191,0,0x0,8
tick,0x7ff86ea82704,78549686,0,0x0,8
tick,0x7ff86ea82704,78550980,0,0x0,8
tick,0x7ff86ea82704,78552740,0,0x0,8
tick,0x7ff86ea82704,78555102,0,0x0,8
tick,0x7ff86ea82704,78556858,0,0x0,8
tick,0x7ff86ea82704,78559118,0,0x0,8
tick,0x7ff86ea82704,78560833,0,0x0,8
tick,0x7ff86ea82704,78562942,0,0x0,8
tick,0x7ff86ea82704,78565055,0,0x0,8
tick,0x7ff86ea82704,78566793,0,0x0,8
tick,0x7ff86ea82704,78568743,0,0x0,8
tick,0x7ff86ea82704,78570784,0,0x0,8
tick,0x7ff86ea82704,78572763,0,0x0,8
tick,0x7ff86ea82704,78575019,0,0x0,8
tick,0x7ff86ea82704,78576776,0,0x0,8
tick,0x7ff86ea82704,78578969,0,0x0,8
tick,0x7ff86ea82704,78580685,0,0x0,8
tick,0x7ff86ea82704,78583106,0,0x0,8
tick,0x7ff86ea82704,78584736,0,0x0,8
tick,0x7ff86ea82704,78586867,0,0x0,8
tick,0x7ff86ea82704,78588936,0,0x0,8
tick,0x7ff86ea82704,78590887,0,0x0,8
tick,0x7ff86ea82704,78592703,0,0x0,8
tick,0x7ff86ea82704,78594772,0,0x0,8
tick,0x7ff86ea82704,78596915,0,0x0,8
tick,0x7ff86ea82704,78598762,0,0x0,8
tick,0x7ff86ea82704,78600662,0,0x0,8
tick,0x7ff86ea82704,78602811,0,0x0,8
tick,0x7ff86ea82704,78604743,0,0x0,8
tick,0x7ff86ea82704,78606921,0,0x0,8
tick,0x7ff86ea82704,78608686,0,0x0,8
tick,0x7ff86ea82704,78610719,0,0x0,8
tick,0x7ff86ea82704,78612805,0,0x0,8
tick,0x7ff86ea82704,78615057,0,0x0,8
tick,0x7ff86ea82704,78616715,0,0x0,8
tick,0x7ff86ea82704,78618759,0,0x0,8
tick,0x7ff86ea82704,78620801,0,0x0,8
tick,0x7ff86ea82704,78622924,0,0x0,8
tick,0x7ff86ea82704,78624621,0,0x0,8
tick,0x7ff86ea82704,78626780,0,0x0,8
tick,0x7ff86ea82704,78628734,0,0x0,8
tick,0x7ff86ea82704,78630635,0,0x0,8
tick,0x7ff86ea82704,78632639,0,0x0,8
tick,0x7ff86ea82704,78634560,0,0x0,8
tick,0x7ff86ea82704,78636744,0,0x0,8
tick,0x7ff86ea82704,78638532,0,0x0,8
tick,0x7ff86ea82704,78640654,0,0x0,8
tick,0x7ff86ea82704,78642525,0,0x0,8
tick,0x7ff86ea82704,78644606,0,0x0,8
tick,0x7ff86ea82704,78646628,0,0x0,8
tick,0x7ff86ea82704,78648674,0,0x0,8
tick,0x7ff86ea82704,78650859,0,0x0,8
tick,0x7ff86ea82704,78652542,0,0x0,8
tick,0x7ff86ea82704,78654850,0,0x0,8
tick,0x7ff86ea82704,78656563,0,0x0,8
tick,0x7ff86ea82704,78659533,0,0x0,8
tick,0x7ff86ea82704,78661626,0,0x0,8
tick,0x7ff86ea82704,78663574,0,0x0,8
tick,0x7ff86ea82704,78665597,0,0x0,8
tick,0x7ff86ea82704,78667606,0,0x0,8
tick,0x7ff86ea82704,78669637,0,0x0,8
tick,0x7ff86ea82704,78671687,0,0x0,8
tick,0x7ff86ea82704,78673775,0,0x0,8
tick,0x7ff86ea82704,78675687,0,0x0,8
tick,0x7ff86ea82704,78677645,0,0x0,8
tick,0x7ff86ea82704,78679554,0,0x0,8
tick,0x7ff86ea82704,78684719,0,0x0,8
tick,0x7ff86ea82704,78686676,0,0x0,8
tick,0x7ff86ea82704,78689610,0,0x0,8
tick,0x7ff86ea82704,78691528,0,0x0,8
tick,0x7ff86ea82704,78694145,0,0x0,8
tick,0x7ff86ea82704,78695595,0,0x0,8
tick,0x7ff86ea82704,78698127,0,0x0,8
tick,0x7ff86ea82704,78699724,0,0x0,8
tick,0x7ff86ea82704,78702211,0,0x0,8
tick,0x7ff86ea82704,78703869,0,0x0,8
tick,0x7ff86ea82704,78705734,0,0x0,8
tick,0x7ff86ea82704,78707559,0,0x0,8
tick,0x7ff86ea82704,78709926,0,0x0,8
tick,0x7ff86ea82704,78711989,0,0x0,8
tick,0x7ff86ea82704,78713728,0,0x0,8
tick,0x7ff86ea82704,78715663,0,0x0,8
tick,0x7ff86ea82704,78717852,0,0x0,8
tick,0x7ff86ea82704,78719845,0,0x0,8
tick,0x7ff86ea82704,78721611,0,0x0,8
tick,0x7ff86ea82704,78723578,0,0x0,8
tick,0x7ff86ea82704,78726269,0,0x0,8
tick,0x7ff86ea82704,78728743,0,0x0,8
tick,0x7ff86ea82704,78730453,0,0x0,8
tick,0x7ff86ea82704,78733025,0,0x0,8
tick,0x7ff86ea82704,78734467,0,0x0,8
tick,0x7ff86ea82704,78736910,0,0x0,8
tick,0x7ff86ea82704,78738678,0,0x0,8
tick,0x7ff86ea82704,78740577,0,0x0,8
tick,0x7ff86ea82704,78742504,0,0x0,8
tick,0x7ff86ea82704,78744617,0,0x0,8
tick,0x7ff86ea82704,78746390,0,0x0,8
tick,0x7ff86ea82704,78748685,0,0x0,8
tick,0x7ff86ea82704,78750375,0,0x0,8
tick,0x7ff86ea82704,78752597,0,0x0,8
tick,0x7ff86ea82704,78754536,0,0x0,8
tick,0x7ff86ea82704,78756616,0,0x0,8
tick,0x7ff86ea82704,78758612,0,0x0,8
tick,0x7ff86ea82704,78760792,0,0x0,8
tick,0x7ff86ea82704,78762338,0,0x0,8
tick,0x7ff86ea82704,78764630,0,0x0,8
tick,0x7ff86ea82704,78766684,0,0x0,8
tick,0x7ff86ea82704,78768548,0,0x0,8
tick,0x7ff86ea82704,78770536,0,0x0,8
tick,0x7ff86ea82704,78772317,0,0x0,8
tick,0x7ff86ea82704,78774481,0,0x0,8
tick,0x7ff86ea82704,78776529,0,0x0,8
tick,0x7ff86ea82704,78778361,0,0x0,8
tick,0x7ff86ea82704,78780355,0,0x0,8
tick,0x7ff86ea82704,78782419,0,0x0,8
tick,0x7ff86ea82704,78784360,0,0x0,8
tick,0x7ff86ea82704,78786429,0,0x0,8
tick,0x7ff86ea82704,78788304,0,0x0,8
tick,0x7ff86ea82704,78790368,0,0x0,8
tick,0x7ff86ea82704,78792396,0,0x0,8
tick,0x7ff86ea82704,78794389,0,0x0,8
tick,0x7ff86ea82704,78796389,0,0x0,8
tick,0x7ff86ea82704,78798578,0,0x0,8
tick,0x7ff86ea82704,78800373,0,0x0,8
tick,0x7ff86ea82704,78802372,0,0x0,8
tick,0x7ff86ea82704,78804669,0,0x0,8
tick,0x7ff86ea82704,78806448,0,0x0,8
tick,0x7ff86ea82704,78808435,0,0x0,8
tick,0x7ff86ea82704,78810220,0,0x0,8
tick,0x7ff86ea82704,78812503,0,0x0,8
tick,0x7ff86ea82704,78814271,0,0x0,8
tick,0x7ff86ea82704,78816516,0,0x0,8
tick,0x7ff86ea82704,78818383,0,0x0,8
tick,0x7ff86ea82704,78820410,0,0x0,8
tick,0x7ff86ea82704,78822641,0,0x0,8
tick,0x7ff86ea82704,78824222,0,0x0,8
tick,0x7ff86ea82704,78826341,0,0x0,8
tick,0x7ff86ea82704,78828198,0,0x0,8
tick,0x7ff86ea82704,78830212,0,0x0,8
tick,0x7ff86ea82704,78832216,0,0x0,8
tick,0x7ff86ea82704,78834230,0,0x0,8
tick,0x7ff86ea82704,78836140,0,0x0,8
tick,0x7ff86ea82704,78838209,0,0x0,8
tick,0x7ff86ea82704,78840215,0,0x0,8
tick,0x7ff86ea82704,78842319,0,0x0,8
tick,0x7ff86ea82704,78844337,0,0x0,8
tick,0x7ff86ea82704,78846221,0,0x0,8
tick,0x7ff86ea82704,78848116,0,0x0,8
tick,0x7ff86ea82704,78850257,0,0x0,8
tick,0x7ff86ea82704,78852163,0,0x0,8
tick,0x7ff86ea82704,78854406,0,0x0,8
tick,0x7ff86ea82704,78856106,0,0x0,8
tick,0x7ff86ea82704,78858179,0,0x0,8
tick,0x7ff86ea82704,78860270,0,0x0,8
tick,0x7ff86ea82704,78862455,0,0x0,8
tick,0x7ff86ea82704,78864210,0,0x0,8
tick,0x7ff86ea82704,78866349,0,0x0,8
tick,0x7ff86ea82704,78868551,0,0x0,8
tick,0x7ff86ea82704,78870476,0,0x0,8
tick,0x7ff86ea82704,78872174,0,0x0,8
tick,0x7ff86ea82704,78874286,0,0x0,8
tick,0x7ff86ea82704,78876102,0,0x0,8
tick,0x7ff86ea82704,78878231,0,0x0,8
tick,0x7ff86ea82704,78879996,0,0x0,8
tick,0x7ff86ea82704,78882067,0,0x0,8
tick,0x7ff86ea82704,78883957,0,0x0,8
tick,0x7ff86ea82704,78886147,0,0x0,8
tick,0x7ff86ea82704,78888005,0,0x0,8
tick,0x7ff86ea82704,78890168,0,0x0,8
tick,0x7ff86ea82704,78892200,0,0x0,8
tick,0x7ff86ea82704,78894323,0,0x0,8
tick,0x7ff86ea82704,78895929,0,0x0,8
tick,0x7ff86ea82704,78898232,0,0x0,8
tick,0x7ff86ea82704,78899987,0,0x0,8
tick,0x7ff86ea82704,78902164,0,0x0,8
tick,0x7ff86ea82704,78904165,0,0x0,8
tick,0x7ff86ea82704,78906006,0,0x0,8
tick,0x7ff86ea82704,78908097,0,0x0,8
tick,0x7ff86ea82704,78910197,0,0x0,8
tick,0x7ff86ea82704,78912030,0,0x0,8
tick,0x7ff86ea82704,78914017,0,0x0,8
tick,0x7ff86ea82704,78915907,0,0x0,8
tick,0x7ff86ea82704,78917966,0,0x0,8
tick,0x7ff86ea82704,78920092,0,0x0,8
tick,0x7ff86ea82704,78921961,0,0x0,8
tick,0x7ff86ea82704,78924258,0,0x0,8
tick,0x7ff86ea82704,78925946,0,0x0,8
tick,0x7ff86ea82704,78927946,0,0x0,8
tick,0x7ff86ea82704,78930053,0,0x0,8
tick,0x7ff86ea82704,78932019,0,0x0,8
tick,0x7ff86ea82704,78933875,0,0x0,8
tick,0x7ff86ea82704,78936065,0,0x0,8
tick,0x7ff86ea82704,78937961,0,0x0,8
tick,0x7ff86ea82704,78942933,0,0x0,8
tick,0x7ff86ea82704,78945339,0,0x0,8
tick,0x7ff86ea82704,78946802,0,0x0,8
tick,0x7ff86ea82704,78948959,0,0x0,8
tick,0x7ff86ea82704,78950843,0,0x0,8
tick,0x7ff86ea82704,78952880,0,0x0,8
tick,0x7ff86ea82704,78954741,0,0x0,8
tick,0x7ff86ea82704,78957271,0,0x0,8
tick,0x7ff86ea82704,78958795,0,0x0,8
tick,0x7ff86ea82704,78961466,0,0x0,8
tick,0x7ff86ea82704,78962765,0,0x0,8
tick,0x7ff86ea82704,78965139,0,0x0,8
tick,0x7ff86ea82704,78966823,0,0x0,8
tick,0x7ff86ea82704,78969032,0,0x0,8
tick,0x7ff86ea82704,78970849,0,0x0,8
tick,0x7ff86ea82704,78972904,0,0x0,8
tick,0x7ff86ea82704,78974780,0,0x0,8
tick,0x7ff86ea82704,78977074,0,0x0,8
tick,0x7ff86ea82704,78980007,0,0x0,8
tick,0x7ff86ea82704,78981446,0,0x0,8
tick,0x7ff86ea82704,78983009,0,0x0,8
tick,0x7ff86ea82704,78985032,0,0x0,8
tick,0x7ff86ea82704,78986681,0,0x0,8
tick,0x7ff86ea82704,78989357,0,0x0,8
tick,0x7ff86ea82704,78990704,0,0x0,8
tick,0x7ff86ea82704,78992766,0,0x0,8
tick,0x7ff86ea82704,78994941,0,0x0,8
tick,0x7ff86ea82704,78996761,0,0x0,8
tick,0x7ff86ea82704,78998717,0,0x0,8
tick,0x7ff86ea82704,79000815,0,0x0,8
tick,0x7ff86ea82704,79002809,0,0x0,8
tick,0x7ff86ea82704,79004813,0,0x0,8
tick,0x7ff86ea82704,79006763,0,0x0,8
tick,0x7ff86ea82704,79009315,0,0x0,8
tick,0x7ff86ea82704,79010672,0,0x0,8
tick,0x7ff86ea82704,79012776,0,0x0,8
tick,0x7ff86ea82704,79014619,0,0x0,8
tick,0x7ff86ea82704,79016792,0,0x0,8
tick,0x7ff86ea82704,79018604,0,0x0,8
tick,0x7ff86ea82704,79020767,0,0x0,8
tick,0x7ff86ea82704,79022659,0,0x0,8
tick,0x7ff86ea82704,79024897,0,0x0,8
tick,0x7ff86ea82704,79026671,0,0x0,8
tick,0x7ff86ea82704,79028711,0,0x0,8
tick,0x7ff86ea82704,79030638,0,0x0,8
tick,0x7ff86ea82704,79032830,0,0x0,8
tick,0x7ff86ea82704,79034558,0,0x0,8
tick,0x7ff86ea82704,79036775,0,0x0,8
tick,0x7ff86ea82704,79038747,0,0x0,8
tick,0x7ff86ea82704,79041092,0,0x0,8
tick,0x7ff86ea82704,79042964,0,0x0,8
tick,0x7ff86ea82704,79044910,0,0x0,8
tick,0x7ff86ea82704,79046474,0,0x0,8
tick,0x7ff86ea82704,79048758,0,0x0,8
tick,0x7ff86ea82704,79050558,0,0x0,8
tick,0x7ff86ea82704,79052869,0,0x0,8
tick,0x7ff86ea82704,79054528,0,0x0,8
tick,0x7ff86ea82704,79056604,0,0x0,8
tick,0x7ff86ea82704,79058712,0,0x0,8
tick,0x7ff86ea82704,79060592,0,0x0,8
tick,0x7ff86ea82704,79062770,0,0x0,8
tick,0x7ff86ea82704,79064487,0,0x0,8
tick,0x7ff86ea82704,79066686,0,0x0,8
tick,0x7ff86ea82704,79068510,0,0x0,8
tick,0x7ff86ea82704,79070573,0,0x0,8
tick,0x7ff86ea82704,79072556,0,0x0,8
tick,0x7ff86ea82704,79074597,0,0x0,8
tick,0x7ff86ea82704,79076450,0,0x0,8
tick,0x7ff86ea82704,79078769,0,0x0,8
tick,0x7ff86ea82704,79080587,0,0x0,8
tick,0x7ff86ea82704,79082503,0,0x0,8
tick,0x7ff86ea82704,79084663,0,0x0,8
tick,0x7ff86ea82704,79086628,0,0x0,8
tick,0x7ff86ea82704,79088878,0,0x0,8
tick,0x7ff86ea82704,79090661,0,0x0,8
tick,0x7ff86ea82704,79092471,0,0x0,8
tick,0x7ff86ea82704,79094734,0,0x0,8
tick,0x7ff86ea82704,79096675,0,0x0,8
tick,0x7ff86ea82704,79098505,0,0x0,8
tick,0x7ff86ea82704,79100588,0,0x0,8
tick,0x7ff86ea82704,79102410,0,0x0,8
tick,0x7ff86ea82704,79104500,0,0x0,8
tick,0x7ff86ea82704,79106661,0,0x0,8
tick,0x7ff86ea82704,79108744,0,0x0,8
tick,0x7ff86ea82704,79110537,0,0x0,8
tick,0x7ff86ea82704,79112579,0,0x0,8
tick,0x7ff86ea82704,79114899,0,0x0,8
tick,0x7ff86ea82704,79116486,0,0x0,8
tick,0x7ff86ea82704,79118430,0,0x0,8
tick,0x7ff86ea82704,79120400,0,0x0,8
tick,0x7ff86ea82704,79122425,0,0x0,8
tick,0x7ff86ea82704,79124420,0,0x0,8
tick,0x7ff86ea82704,79126386,0,0x0,8
tick,0x7ff86ea82704,79128490,0,0x0,8
tick,0x7ff86ea82704,79130495,0,0x0,8
tick,0x7ff86ea82704,79132428,0,0x0,8
tick,0x7ff86ea82704,79134470,0,0x0,8
tick,0x7ff86ea82704,79136455,0,0x0,8
tick,0x7ff86ea82704,79138312,0,0x0,8
tick,0x7ff86ea82704,79140489,0,0x0,8
tick,0x7ff86ea82704,79142331,0,0x0,8
tick,0x7ff86ea82704,79144358,0,0x0,8
tick,0x7ff86ea82704,79146507,0,0x0,8
tick,0x7ff86ea82704,79148482,0,0x0,8
tick,0x7ff86ea82704,79150345,0,0x0,8
tick,0x7ff86ea82704,79152474,0,0x0,8
tick,0x7ff86ea82704,79154330,0,0x0,8
tick,0x7ff86ea82704,79156420,0,0x0,8
tick,0x7ff86ea82704,79158237,0,0x0,8
tick,0x7ff86ea82704,79160724,0,0x0,8
tick,0x7ff86ea82704,79162334,0,0x0,8
tick,0x7ff86ea82704,79164660,0,0x0,8
tick,0x7ff86ea82704,79166279,0,0x0,8
tick,0x7ff86ea82704,79168343,0,0x0,8
tick,0x7ff86ea82704,79170229,0,0x0,8
tick,0x7ff86ea82704,79172260,0,0x0,8
tick,0x7ff86ea82704,79174258,0,0x0,8
tick,0x7ff86ea82704,79176288,0,0x0,8
tick,0x7ff86ea82704,79178763,0,0x0,8
tick,0x7ff86ea82704,79180355,0,0x0,8
tick,0x7ff86ea82704,79182198,0,0x0,8
tick,0x7ff86ea82704,79184464,0,0x0,8
tick,0x7ff86ea82704,79186284,0,0x0,8
tick,0x7ff86ea82704,79188402,0,0x0,8
tick,0x7ff86ea82704,79190206,0,0x0,8
tick,0x7ff86ea82704,79193049,0,0x0,8
tick,0x7ff86ea82704,79195830,0,0x0,8
tick,0x7ff86ea82704,79198320,0,0x0,8
tick,0x7ff86ea82704,79202194,0,0x0,8
tick,0x7ff86ea82704,79204163,0,0x0,8
tick,0x7ff86ea82704,79206042,0,0x0,8
tick,0x7ff86ea82704,79208087,0,0x0,8
tick,0x7ff86ea82704,79210288,0,0x0,8
tick,0x7ff86ea82704,79212079,0,0x0,8
tick,0x7ff86ea82704,79214115,0,0x0,8
tick,0x7ff86ea82704,79216689,0,0x0,8
tick,0x7ff86ea82704,79218754,0,0x0,8
tick,0x7ff86ea82704,79220120,0,0x0,8
tick,0x7ff86ea82704,79222222,0,0x0,8
tick,0x7ff86ea82704,79224097,0,0x0,8
tick,0x7ff86ea82704,79227067,0,0x0,8
tick,0x7ff86ea82704,79229674,0,0x0,8
tick,0x7ff86ea82704,79231891,0,0x0,8
tick,0x7ff86ea82704,79233017,0,0x0,8
tick,0x7ff86ea82704,79235081,0,0x0,8
tick,0x7ff86ea82704,79237218,0,0x0,8
tick,0x7ff86ea82704,79239054,0,0x0,8
tick,0x7ff86ea82704,79241390,0,0x0,8
tick,0x7ff86ea82704,79243322,0,0x0,8
tick,0x7ff86ea82704,79245540,0,0x0,8
tick,0x7ff86ea82704,79247239,0,0x0,8
tick,0x7ff86ea82704,79249037,0,0x0,8
tick,0x7ff86ea82704,79251199,0,0x0,8
tick,0x7ff86ea82704,79253085,0,0x0,8
tick,0x7ff86ea82704,79254979,0,0x0,8
tick,0x7ff86ea82704,79257083,0,0x0,8
tick,0x7ff86ea82704,79259254,0,0x0,8
tick,0x7ff86ea82704,79261166,0,0x0,8
tick,0x7ff86ea82704,79264349,0,0x0,8
tick,0x7ff86ea82704,79266075,0,0x0,8
tick,0x7ff86ea82704,79267867,0,0x0,8
tick,0x7ff86ea82704,79269857,0,0x0,8
tick,0x7ff86ea82704,79271849,0,0x0,8
tick,0x7ff86ea82704,79273931,0,0x0,8
tick,0x7ff86ea82704,79275899,0,0x0,8
tick,0x7ff86ea82704,79277962,0,0x0,8
tick,0x7ff86ea82704,79279873,0,0x0,8
tick,0x7ff86ea82704,79282081,0,0x0,8
tick,0x7ff86ea82704,79283806,0,0x0,8
tick,0x7ff86ea82704,79285975,0,0x0,8
tick,0x7ff86ea82704,79287822,0,0x0,8
tick,0x7ff86ea82704,79289863,0,0x0,8
tick,0x7ff86ea82704,79291982,0,0x0,8
tick,0x7ff86ea82704,79293892,0,0x0,8
tick,0x7ff86ea82704,79295789,0,0x0,8
tick,0x7ff86ea82704,79297835,0,0x0,8
tick,0x7ff86ea82704,79299960,0,0x0,8
tick,0x7ff86ea82704,79301974,0,0x0,8
tick,0x7ff86ea82704,79304085,0,0x0,8
tick,0x7ff86ea82704,79305840,0,0x0,8
tick,0x7ff86ea82704,79307789,0,0x0,8
tick,0x7ff86ea82704,79310052,0,0x0,8
tick,0x7ff86ea82704,79311841,0,0x0,8
tick,0x7ff86ea82704,79314354,0,0x0,8
tick,0x7ff86ea82704,79315897,0,0x0,8
tick,0x7ff86ea82704,79318033,0,0x0,8
tick,0x7ff86ea82704,79319824,0,0x0,8
tick,0x7ff86ea82704,79321876,0,0x0,8
tick,0x7ff86ea82704,79324160,0,0x0,8
tick,0x7ff86ea82704,79325841,0,0x0,8
tick,0x7ff86ea82704,79327888,0,0x0,8
tick,0x7ff86ea82704,79329862,0,0x0,8
tick,0x7ff86ea82704,79331857,0,0x0,8
tick,0x7ff86ea82704,79333848,0,0x0,8
tick,0x7ff86ea82704,79335793,0,0x0,8
tick,0x7ff86ea82704,79337885,0,0x0,8
tick,0x7ff86ea82704,79339803,0,0x0,8
tick,0x7ff86ea82704,79341927,0,0x0,8
tick,0x7ff86ea82704,79343738,0,0x0,8
tick,0x7ff86ea82704,79345911,0,0x0,8
tick,0x7ff86ea82704,79347773,0,0x0,8
tick,0x7ff86ea82704,79349863,0,0x0,8
tick,0x7ff86ea82704,79351704,0,0x0,8
tick,0x7ff86ea82704,79353784,0,0x0,8
tick,0x7ff86ea82704,79355641,0,0x0,8
tick,0x7ff86ea82704,79358236,0,0x0,8
tick,0x7ff86ea82704,79359630,0,0x0,8
tick,0x7ff86ea82704,79361775,0,0x0,8
tick,0x7ff86ea82704,79363769,0,0x0,8
tick,0x7ff86ea82704,79365829,0,0x0,8
tick,0x7ff86ea82704,79367702,0,0x0,8
tick,0x7ff86ea82704,79369756,0,0x0,8
tick,0x7ff86ea82704,79371595,0,0x0,8
tick,0x7ff86ea82704,79373737,0,0x0,8
tick,0x7ff86ea82704,79375651,0,0x0,8
tick,0x7ff86ea82704,79377650,0,0x0,8
tick,0x7ff86ea82704,79379761,0,0x0,8
tick,0x7ff86ea82704,79381681,0,0x0,8
tick,0x7ff86ea82704,79383666,0,0x0,8
tick,0x7ff86ea82704,79385919,0,0x0,8
tick,0x7ff86ea82704,79387596,0,0x0,8
tick,0x7ff86ea82704,79389965,0,0x0,8
tick,0x7ff86ea82704,79391589,0,0x0,8
tick,0x7ff86ea82704,79393638,0,0x0,8
tick,0x7ff86ea82704,79395601,0,0x0,8
tick,0x7ff86ea82704,79397794,0,0x0,8
tick,0x7ff86ea82704,79399676,0,0x0,8
tick,0x7ff86ea82704,79401671,0,0x0,8
tick,0x7ff86ea82704,79403753,0,0x0,8
tick,0x7ff86ea82704,79405717,0,0x0,8
tick,0x7ff86ea82704,79407810,0,0x0,8
tick,0x7ff86ea82704,79410075,0,0x0,8
tick,0x7ff86ea82704,79411828,0,0x0,8
tick,0x7ff86ea82704,79413733,0,0x0,8
tick,0x7ff86ea82704,79415774,0,0x0,8
tick,0x7ff86ea82704,79417697,0,0x0,8
tick,0x7ff86ea82704,79419589,0,0x0,8
tick,0x7ff86ea82704,79421548,0,0x0,8
tick,0x7ff86ea82704,79423589,0,0x0,8
tick,0x7ff86ea82704,79425603,0,0x0,8
tick,0x7ff86ea82704,79427631,0,0x0,8
tick,0x7ff86ea82704,79429527,0,0x0,8
tick,0x7ff86ea82704,79431520,0,0x0,8
tick,0x7ff86ea82704,79433630,0,0x0,8
tick,0x7ff86ea82704,79435472,0,0x0,8
tick,0x7ff86ea82704,79437772,0,0x0,8
tick,0x7ff86ea82704,79439475,0,0x0,8
tick,0x7ff86ea82704,79441581,0,0x0,8
tick,0x7ff86ea82704,79443438,0,0x0,8
tick,0x7ff86ea82704,79445631,0,0x0,8
tick,0x7ff86ea82704,79447481,0,0x0,8
tick,0x7ff86ea82704,79449644,0,0x0,8
tick,0x7ff86ea82704,79451791,0,0x0,8
tick,0x7ff86ea82704,79453523,0,0x0,8
tick,0x7ff86ea82704,79455608,0,0x0,8
tick,0x7ff86ea82704,79457499,0,0x0,8
tick,0x7ff86ea82704,79459578,0,0x0,8
tick,0x7ff86ea82704,79461521,0,0x0,8
tick,0x7ff86ea82704,79463692,0,0x0,8
tick,0x7ff86ea82704,79465504,0,0x0,8
tick,0x7ff86ea82704,79467474,0,0x0,8
tick,0x7ff86ea82704,79469508,0,0x0,8
tick,0x7ff86ea82704,79471618,0,0x0,8
tick,0x7ff86ea82704,79473547,0,0x0,8
tick,0x7ff86ea82704,79475620,0,0x0,8
tick,0x7ff86ea82704,79477612,0,0x0,8
tick,0x7ff86ea82704,79479560,0,0x0,8
tick,0x7ff86ea82704,79481672,0,0x0,8
tick,0x7ff86ea82704,79483598,0,0x0,8
tick,0x7ff86ea82704,79485464,0,0x0,8
tick,0x7ff86ea82704,79487801,0,0x0,8
tick,0x7ff86ea82704,79489399,0,0x0,8
tick,0x7ff86ea82704,79491816,0,0x0,8
tick,0x7ff86ea82704,79493436,0,0x0,8
tick,0x7ff86ea82704,79496028,0,0x0,8
tick,0x7ff86ea82704,79497504,0,0x0,8
tick,0x7ff86ea82704,79499458,0,0x0,8
tick,0x7ff86ea82704,79501709,0,0x0,8
tick,0x7ff86ea82704,79503460,0,0x0,8
tick,0x7ff86ea82704,79505583,0,0x0,8
tick,0x7ff86ea82704,79507336,0,0x0,8
tick,0x7ff86ea82704,79509445,0,0x0,8
tick,0x7ff86ea82704,79511329,0,0x0,8
tick,0x7ff86ea82704,79513340,0,0x0,8
tick,0x7ff86ea82704,79515254,0,0x0,8
tick,0x7ff86ea82704,79517570,0,0x0,8
tick,0x7ff86ea82704,79519217,0,0x0,8
tick,0x7ff86ea82704,79521529,0,0x0,8
tick,0x7ff86ea82704,79523215,0,0x0,8
tick,0x7ff86ea82704,79525327,0,0x0,8
tick,0x7ff86ea82704,79527421,0,0x0,8
tick,0x7ff86ea82704,79529453,0,0x0,8
tick,0x7ff86ea82704,79531485,0,0x0,8
tick,0x7ff86ea82704,79533512,0,0x0,8
tick,0x7ff86ea82704,79535709,0,0x0,8
tick,0x7ff86ea82704,79537393,0,0x0,8
tick,0x7ff86ea82704,79539868,0,0x0,8
tick,0x7ff86ea82704,79541470,0,0x0,8
tick,0x7ff86ea82704,79543532,0,0x0,8
tick,0x7ff86ea82704,79545924,0,0x0,8
tick,0x7ff86ea82704,79547397,0,0x0,8
tick,0x7ff86ea82704,79549424,0,0x0,8
tick,0x7ff86ea82704,79553485,0,0x0,8
tick,0x7ff86ea82704,79555557,0,0x0,8
tick,0x7ff86ea82704,79557413,0,0x0,8
tick,0x7ff86ea82704,79559457,0,0x0,8
tick,0x7ff86ea82704,79561354,0,0x0,8
tick,0x7ff86ea82704,79563773,0,0x0,8
tick,0x7ff86ea82704,79565487,0,0x0,8
tick,0x7ff86ea82704,79567653,0,0x0,8
tick,0x7ff86ea82704,79569645,0,0x0,8
tick,0x7ff86ea82704,79571474,0,0x0,8
tick,0x7ff86ea82704,79573509,0,0x0,8
tick,0x7ff86ea82704,79575358,0,0x0,8
tick,0x7ff86ea82704,79577464,0,0x0,8
tick,0x7ff86ea82704,79579967,0,0x0,8
tick,0x7ff86ea82704,79582115,0,0x0,8
tick,0x7ff86ea82704,79584313,0,0x0,8
tick,0x7ff86ea82704,79585999,0,0x0,8
tick,0x7ff86ea82704,79588071,0,0x0,8
tick,0x7ff86ea82704,79589979,0,0x0,8
tick,0x7ff86ea82704,79591999,0,0x0,8
tick,0x7ff86ea82704,79593993,0,0x0,8
tick,0x7ff86ea82704,79596017,0,0x0,8
tick,0x7ff86ea82704,79598316,0,0x0,8
tick,0x7ff86ea82704,79600324,0,0x0,8
tick,0x7ff86ea82704,79602002,0,0x0,8
tick,0x7ff86ea82704,79603982,0,0x0,8
tick,0x7ff86ea82704,79605989,0,0x0,8
tick,0x7ff86ea82704,79607998,0,0x0,8
tick,0x7ff86ea82704,79610504,0,0x0,8
tick,0x7ff86ea82704,79612226,0,0x0,8
tick,0x7ff86ea82704,79614083,0,0x0,8
tick,0x7ff86ea82704,79616569,0,0x0,8
tick,0x7ff86ea82704,79617981,0,0x0,8
tick,0x7ff86ea82704,79620139,0,0x0,8
tick,0x7ff86ea82704,79621958,0,0x0,8
tick,0x7ff86ea82704,79624075,0,0x0,8
tick,0x7ff86ea82704,79625912,0,0x0,8
tick,0x7ff86ea82704,79627999,0,0x0,8
tick,0x7ff86ea82704,79630031,0,0x0,8
tick,0x7ff86ea82704,79632145,0,0x0,8
tick,0x7ff86ea82704,79634634,0,0x0,8
tick,0x7ff86ea82704,79635921,0,0x0,8
tick,0x7ff86ea82704,79638036,0,0x0,8
tick,0x7ff86ea82704,79639894,0,0x0,8
tick,0x7ff86ea82704,79642253,0,0x0,8
tick,0x7ff86ea82704,79643969,0,0x0,8
tick,0x7ff86ea82704,79646057,0,0x0,8
tick,0x7ff86ea82704,79647952,0,0x0,8
tick,0x7ff86ea82704,79650127,0,0x0,8
tick,0x7ff86ea82704,79652100,0,0x0,8
tick,0x7ff86ea82704,79653962,0,0x0,8
tick,0x7ff86ea82704,79655962,0,0x0,8
tick,0x7ff86ea82704,79657917,0,0x0,8
tick,0x7ff86ea82704,79659941,0,0x0,8
tick,0x7ff86ea82704,79662089,0,0x0,8
tick,0x7ff86ea82704,79663892,0,0x0,8
tick,0x7ff86ea82704,79665967,0,0x0,8
tick,0x7ff86ea82704,79667887,0,0x0,8
tick,0x7ff86ea82704,79669893,0,0x0,8
tick,0x7ff86ea82704,79671815,0,0x0,8
tick,0x7ff86ea82704,79673922,0,0x0,8
tick,0x7ff86ea82704,79675820,0,0x0,8
tick,0x7ff86ea82704,79677948,0,0x0,8
tick,0x7ff86ea82704,79679890,0,0x0,8
tick,0x7ff86ea82704,79681838,0,0x0,8
tick,0x7ff86ea82704,79683944,0,0x0,8
tick,0x7ff86ea82704,79685821,0,0x0,8
tick,0x7ff86ea82704,79687880,0,0x0,8
tick,0x7ff86ea82704,79689946,0,0x0,8
tick,0x7ff86ea82704,79691744,0,0x0,8
tick,0x7ff86ea82704,79693812,0,0x0,8
tick,0x7ff86ea82704,79695769,0,0x0,8
tick,0x7ff86ea82704,79697936,0,0x0,8
tick,0x7ff86ea82704,79699781,0,0x0,8
tick,0x7ff86ea82704,79701895,0,0x0,8
tick,0x7ff86ea82704,79703926,0,0x0,8
tick,0x7ff86ea82704,79705717,0,0x0,8
tick,0x7ff86ea82704,79707809,0,0x0,8
tick,0x7ff86ea82704,79709682,0,0x0,8
tick,0x7ff86ea82704,79711754,0,0x0,8
tick,0x7ff86ea82704,79713801,0,0x0,8
tick,0x7ff86ea82704,79715879,0,0x0,8
tick,0x7ff86ea82704,79717764,0,0x0,8
tick,0x7ff86ea82704,79719717,0,0x0,8
tick,0x7ff86ea82704,79721761,0,0x0,8
tick,0x7ff86ea82704,79723645,0,0x0,8
tick,0x7ff86ea82704,79725752,0,0x0,8
tick,0x7ff86ea82704,79727659,0,0x0,8
tick,0x7ff86ea82704,79729675,0,0x0,8
tick,0x7ff86ea82704,79731689,0,0x0,8
tick,0x7ff86ea82704,79733660,0,0x0,8
tick,0x7ff86ea82704,79735662,0,0x0,8
tick,0x7ff86ea82704,79737681,0,0x0,8
tick,0x7ff86ea82704,79739576,0,0x0,8
tick,0x7ff86ea82704,79741716,0,0x0,8
tick,0x7ff86ea82704,79743600,0,0x0,8
tick,0x7ff86ea82704,79745637,0,0x0,8
tick,0x7ff86ea82704,79747622,0,0x0,8
tick,0x7ff86ea82704,79749666,0,0x0,8
tick,0x7ff86ea82704,79751630,0,0x0,8
tick,0x7ff86ea82704,79753616,0,0x0,8
tick,0x7ff86ea82704,79755656,0,0x0,8
tick,0x7ff86ea82704,79757558,0,0x0,8
tick,0x7ff86ea82704,79759706,0,0x0,8
tick,0x7ff86ea82704,79761542,0,0x0,8
tick,0x7ff86ea82704,79763658,0,0x0,8
tick,0x7ff86ea82704,79765550,0,0x0,8
tick,0x7ff86ea82704,79767576,0,0x0,8
tick,0x7ff86ea82704,79769792,0,0x0,8
tick,0x7ff86ea82704,79771597,0,0x0,8
tick,0x7ff86ea82704,79773736,0,0x0,8
tick,0x7ff86ea82704,79775617,0,0x0,8
tick,0x7ff86ea82704,79777676,0,0x0,8
tick,0x7ff86ea82704,79779714,0,0x0,8
tick,0x7ff86ea82704,79781679,0,0x0,8
tick,0x7ff86ea82704,79783658,0,0x0,8
tick,0x7ff86ea82704,79785605,0,0x0,8
tick,0x7ff86ea82704,79787874,0,0x0,8
tick,0x7ff86ea82704,79789684,0,0x0,8
tick,0x7ff86ea82704,79791840,0,0x0,8
tick,0x7ff86ea82704,79793587,0,0x0,8
tick,0x7ff86ea82704,79795651,0,0x0,8
tick,0x7ff86ea82704,79797556,0,0x0,8
tick,0x7ff86ea82704,79799597,0,0x0,8
tick,0x7ff86ea82704,79801559,0,0x0,8
tick,0x7ff86ea82704,79803585,0,0x0,8
tick,0x7ff86ea82704,79805616,0,0x0,8
tick,0x7ff86ea82704,79807561,0,0x0,8
tick,0x7ff86ea82704,79809482,0,0x0,8
tick,0x7ff86ea82704,79811615,0,0x0,8
tick,0x7ff86ea82704,79813534,0,0x0,8
tick,0x7ff86ea82704,79815444,0,0x0,8
tick,0x7ff86ea82704,79817478,0,0x0,8
tick,0x7ff86ea82704,79819505,0,0x0,8
tick,0x7ff86ea82704,79821531,0,0x0,8
tick,0x7ff86ea82704,79823543,0,0x0,8
tick,0x7ff86ea82704,79825497,0,0x0,8
tick,0x7ff86ea82704,79827514,0,0x0,8
tick,0x7ff86ea82704,79829519,0,0x0,8
tick,0x7ff86ea82704,79831393,0,0x0,8
tick,0x7ff86ea82704,79833543,0,0x0,8
tick,0x7ff86ea82704,79835456,0,0x0,8
tick,0x7ff86ea82704,79837357,0,0x0,8
tick,0x7ff86ea82704,79839654,0,0x0,8
tick,0x7ff86ea82704,79841384,0,0x0,8
tick,0x7ff86ea82704,79843538,0,0x0,8
tick,0x7ff86ea82704,79845453,0,0x0,8
tick,0x7ff86ea82704,79847458,0,0x0,8
tick,0x7ff86ea82704,79849335,0,0x0,8
tick,0x7ff86ea82704,79851447,0,0x0,8
tick,0x7ff86ea82704,79853402,0,0x0,8
tick,0x7ff86ea82704,79855461,0,0x0,8
tick,0x7ff86ea82704,79857325,0,0x0,8
tick,0x7ff86ea82704,79859357,0,0x0,8
tick,0x7ff86ea82704,79861662,0,0x0,8
tick,0x7ff86ea82704,79863522,0,0x0,8
tick,0x7ff86ea82704,79865434,0,0x0,8
tick,0x7ff86ea82704,79867480,0,0x0,8
tick,0x7ff86ea82704,79869377,0,0x0,8
tick,0x7ff86ea82704,79871821,0,0x0,8
tick,0x7ff86ea82704,79873312,0,0x0,8
tick,0x7ff86ea82704,79875373,0,0x0,8
tick,0x7ff86ea82704,79877371,0,0x0,8
tick,0x7ff86ea82704,79879369,0,0x0,8
tick,0x7ff86ea82704,79881308,0,0x0,8
tick,0x7ff86ea82704,79883304,0,0x0,8
tick,0x7ff86ea82704,79885474,0,0x0,8
tick,0x7ff86ea82704,79887237,0,0x0,8
tick,0x7ff86ea82704,79889378,0,0x0,8
tick,0x7ff86ea82704,79891235,0,0x0,8
tick,0x7ff86ea82704,79893382,0,0x0,8
tick,0x7ff86ea82704,79895338,0,0x0,8
tick,0x7ff86ea82704,79897299,0,0x0,8
tick,0x7ff86ea82704,79899282,0,0x0,8
tick,0x7ff86ea82704,79901255,0,0x0,8
tick,0x7ff86ea82704,79903320,0,0x0,8
tick,0x7ff86ea82704,79905156,0,0x0,8
tick,0x7ff86ea82704,79907334,0,0x0,8
tick,0x7ff86ea82704,79909283,0,0x0,8
tick,0x7ff86ea82704,79911261,0,0x0,8
tick,0x7ff86ea82704,79913169,0,0x0,8
tick,0x7ff86ea82704,79915358,0,0x0,8
tick,0x7ff86ea82704,79917299,0,0x0,8
tick,0x7ff86ea82704,79919245,0,0x0,8
tick,0x7ff86ea82704,79921210,0,0x0,8
tick,0x7ff86ea82704,79923302,0,0x0,8
tick,0x7ff86ea82704,79925234,0,0x0,8
tick,0x7ff86ea82704,79927301,0,0x0,8
tick,0x7ff86ea82704,79929272,0,0x0,8
tick,0x7ff86ea82704,79931250,0,0x0,8
tick,0x7ff86ea82704,79933249,0,0x0,8
tick,0x7ff86ea82704,79935233,0,0x0,8
tick,0x7ff86ea82704,79937231,0,0x0,8
tick,0x7ff86ea82704,79939114,0,0x0,8
tick,0x7ff86ea82704,79941282,0,0x0,8
tick,0x7ff86ea82704,79943156,0,0x0,8
tick,0x7ff86ea82704,79945142,0,0x0,8
tick,0x7ff86ea82704,79947081,0,0x0,8
tick,0x7ff86ea82704,79949329,0,0x0,8
tick,0x7ff86ea82704,79951036,0,0x0,8
tick,0x7ff86ea82704,79953269,0,0x0,8
tick,0x7ff86ea82704,79955174,0,0x0,8
tick,0x7ff86ea82704,79957127,0,0x0,8
tick,0x7ff86ea82704,79959166,0,0x0,8
tick,0x7ff86ea82704,79961104,0,0x0,8
tick,0x7ff86ea82704,79963143,0,0x0,8
tick,0x7ff86ea82704,79965140,0,0x0,8
tick,0x7ff86ea82704,79967078,0,0x0,8
tick,0x7ff86ea82704,79969067,0,0x0,8
tick,0x7ff86ea82704,79971066,0,0x0,8
tick,0x7ff86ea82704,79973096,0,0x0,8
tick,0x7ff86ea82704,79975071,0,0x0,8
tick,0x7ff86ea82704,79977171,0,0x0,8
tick,0x7ff86ea82704,79979073,0,0x0,8
tick,0x7ff86ea82704,79981138,0,0x0,8
tick,0x7ff86ea82704,79982951,0,0x0,8
tick,0x7ff86ea82704,79985171,0,0x0,8
tick,0x7ff86ea82704,79986980,0,0x0,8
tick,0x7ff86ea82704,79989144,0,0x0,8
tick,0x7ff86ea82704,79990983,0,0x0,8
tick,0x7ff86ea82704,79993046,0,0x0,8
tick,0x7ff86ea82704,79995137,0,0x0,8
tick,0x7ff86ea82704,79996962,0,0x0,8
tick,0x7ff86ea82704,79999058,0,0x0,8
tick,0x7ff86ea82704,80001093,0,0x0,8
tick,0x7ff86ea82704,80003013,0,0x0,8
tick,0x7ff86ea82704,80004995,0,0x0,8
tick,0x7ff86ea82704,80007085,0,0x0,8
tick,0x7ff86ea82704,80008958,0,0x0,8
tick,0x7ff86ea82704,80011008,0,0x0,8
tick,0x7ff86ea82704,80013130,0,0x0,8
tick,0x7ff86ea82704,80015085,0,0x0,8
tick,0x7ff86ea82704,80017108,0,0x0,8
tick,0x7ff86ea82704,80018997,0,0x0,8
tick,0x7ff86ea82704,80021088,0,0x0,8
tick,0x7ff86ea82704,80023205,0,0x0,8
tick,0x7ff86ea82704,80024934,0,0x0,8
tick,0x7ff86ea82704,80027003,0,0x0,8
tick,0x7ff86ea82704,80028987,0,0x0,8
tick,0x7ff86ea82704,80030998,0,0x0,8
tick,0x7ff86ea82704,80033040,0,0x0,8
tick,0x7ff86ea82704,80034954,0,0x0,8
tick,0x7ff86ea82704,80037008,0,0x0,8
tick,0x7ff86ea82704,80038901,0,0x0,8
tick,0x7ff86ea82704,80040840,0,0x0,8
tick,0x7ff86ea82704,80043088,0,0x0,8
tick,0x7ff86ea82704,80045020,0,0x0,8
tick,0x7ff86ea82704,80046867,0,0x0,8
tick,0x7ff86ea82704,80048898,0,0x0,8
tick,0x7ff86ea82704,80051071,0,0x0,8
tick,0x7ff86ea82704,80052876,0,0x0,8
tick,0x7ff86ea82704,80054979,0,0x0,8
tick,0x7ff86ea82704,80056885,0,0x0,8
tick,0x7ff86ea82704,80059014,0,0x0,8
tick,0x7ff86ea82704,80060883,0,0x0,8
tick,0x7ff86ea82704,80062997,0,0x0,8
tick,0x7ff86ea82704,80064884,0,0x0,8
tick,0x7ff86ea82704,80066865,0,0x0,8
tick,0x7ff86ea82704,80068747,0,0x0,8
tick,0x7ff86ea82704,80071013,0,0x0,8
tick,0x7ff86ea82704,80072713,0,0x0,8
tick,0x7ff86ea82704,80074990,0,0x0,8
tick,0x7ff86ea82704,80076867,0,0x0,8
tick,0x7ff86ea82704,80078922,0,0x0,8
tick,0x7ff86ea82704,80080813,0,0x0,8
tick,0x7ff86ea82704,80082950,0,0x0,8
tick,0x7ff86ea82704,80084763,0,0x0,8
tick,0x7ff86ea82704,80086820,0,0x0,8
tick,0x7ff86ea82704,80088835,0,0x0,8
tick,0x7ff86ea82704,80090799,0,0x0,8
tick,0x7ff86ea82704,80092699,0,0x0,8
tick,0x7ff86ea82704,80094955,0,0x0,8
tick,0x7ff86ea82704,80096763,0,0x0,8
tick,0x7ff86ea82704,80098732,0,0x0,8
tick,0x7ff86ea82704,80100839,0,0x0,8
tick,0x7ff86ea82704,80102775,0,0x0,8
tick,0x7ff86ea82704,80104849,0,0x0,8
tick,0x7ff86ea82704,80106740,0,0x0,8
tick,0x7ff86ea82704,80108811,0,0x0,8
tick,0x7ff86ea82704,80110696,0,0x0,8
tick,0x7ff86ea82704,80112916,0,0x0,8
tick,0x7ff86ea82704,80114867,0,0x0,8
tick,0x7ff86ea82704,80116751,0,0x0,8
tick,0x7ff86ea82704,80118745,0,0x0,8
tick,0x7ff86ea82704,80120639,0,0x0,8
tick,0x7ff86ea82704,80122865,0,0x0,8
tick,0x7ff86ea82704,80124704,0,0x0,8
tick,0x7ff86ea82704,80126716,0,0x0,8
tick,0x7ff86ea82704,80128617,0,0x0,8
tick,0x7ff86ea82704,80130717,0,0x0,8
tick,0x7ff86ea82704,80132626,0,0x0,8
tick,0x7ff86ea82704,80134674,0,0x0,8
tick,0x7ff86ea82704,80136606,0,0x0,8
tick,0x7ff86ea82704,80138652,0,0x0,8
tick,0x7ff86ea82704,80140608,0,0x0,8
tick,0x7ff86ea82704,80142646,0,0x0,8
tick,0x7ff86ea82704,80144741,0,0x0,8
tick,0x7ff86ea82704,80146686,0,0x0,8
tick,0x7ff86ea82704,80148691,0,0x0,8
tick,0x7ff86ea82704,80150646,0,0x0,8
tick,0x7ff86ea82704,80152814,0,0x0,8
tick,0x7ff86ea82704,80154704,0,0x0,8
tick,0x7ff86ea82704,80156729,0,0x0,8
tick,0x7ff86ea82704,80158639,0,0x0,8
tick,0x7ff86ea82704,80160942,0,0x0,8
tick,0x7ff86ea82704,80162586,0,0x0,8
tick,0x7ff86ea82704,80164856,0,0x0,8
tick,0x7ff86ea82704,80166516,0,0x0,8
tick,0x7ff86ea82704,80168610,0,0x0,8
tick,0x7ff86ea82704,80170650,0,0x0,8
tick,0x7ff86ea82704,80172786,0,0x0,8
tick,0x7ff86ea82704,80174512,0,0x0,8
tick,0x7ff86ea82704,80176656,0,0x0,8
tick,0x7ff86ea82704,80178558,0,0x0,8
tick,0x7ff86ea82704,80180535,0,0x0,8
tick,0x7ff86ea82704,80182722,0,0x0,8
tick,0x7ff86ea82704,80184717,0,0x0,8
tick,0x7ff86ea82704,80186537,0,0x0,8
tick,0x7ff86ea82704,80188721,0,0x0,8
tick,0x7ff86ea82704,80190439,0,0x0,8
tick,0x7ff86ea82704,80192555,0,0x0,8
tick,0x7ff86ea82704,80194479,0,0x0,8
tick,0x7ff86ea82704,80196514,0,0x0,8
tick,0x7ff86ea82704,80198439,0,0x0,8
tick,0x7ff86ea82704,80200883,0,0x0,8
tick,0x7ff86ea82704,80202576,0,0x0,8
tick,0x7ff86ea82704,80204533,0,0x0,8
tick,0x7ff86ea82704,80206444,0,0x0,8
tick,0x7ff86ea82704,80208418,0,0x0,8
tick,0x7ff86ea82704,80210428,0,0x0,8
tick,0x7ff86ea82704,80212474,0,0x0,8
tick,0x7ff86ea82704,80214357,0,0x0,8
tick,0x7ff86ea82704,80216425,0,0x0,8
tick,0x7ff86ea82704,80218473,0,0x0,8
tick,0x7ff86ea82704,80220349,0,0x0,8
tick,0x7ff86ea82704,80222425,0,0x0,8
tick,0x7ff86ea82704,80224440,0,0x0,8
tick,0x7ff86ea82704,80226434,0,0x0,8
tick,0x7ff86ea82704,80228365,0,0x0,8
tick,0x7ff86ea82704,80230393,0,0x0,8
tick,0x7ff86ea82704,80232327,0,0x0,8
tick,0x7ff86ea82704,80234424,0,0x0,8
tick,0x7ff86ea82704,80236321,0,0x0,8
tick,0x7ff86ea82704,80238368,0,0x0,8
tick,0x7ff86ea82704,80240317,0,0x0,8
tick,0x7ff86ea82704,80242422,0,0x0,8
tick,0x7ff86ea82704,80244281,0,0x0,8
tick,0x7ff86ea82704,80246426,0,0x0,8
tick,0x7ff86ea82704,80248370,0,0x0,8
tick,0x7ff86ea82704,80250315,0,0x0,8
tick,0x7ff86ea82704,80252341,0,0x0,8
tick,0x7ff86ea82704,80254360,0,0x0,8
tick,0x7ff86ea82704,80256314,0,0x0,8
tick,0x7ff86ea82704,80258388,0,0x0,8
tick,0x7ff86ea82704,80260342,0,0x0,8
tick,0x7ff86ea82704,80262303,0,0x0,8
tick,0x7ff86ea82704,80264390,0,0x0,8
tick,0x7ff86ea82704,80266213,0,0x0,8
tick,0x7ff86ea82704,80268230,0,0x0,8
tick,0x7ff86ea82704,80270309,0,0x0,8
tick,0x7ff86ea82704,80272521,0,0x0,8
tick,0x7ff86ea82704,80274587,0,0x0,8
tick,0x7ff86ea82704,80276334,0,0x0,8
tick,0x7ff86ea82704,80278405,0,0x0,8
tick,0x7ff86ea82704,80280181,0,0x0,8
tick,0x7ff86ea82704,80282480,0,0x0,8
tick,0x7ff86ea82704,80284209,0,0x0,8
tick,0x7ff86ea82704,80286303,0,0x0,8
tick,0x7ff86ea82704,80288267,0,0x0,8
tick,0x7ff86ea82704,80290233,0,0x0,8
tick,0x7ff86ea82704,80292153,0,0x0,8
tick,0x7ff86ea82704,80294251,0,0x0,8
tick,0x7ff86ea82704,80296628,0,0x0,8
tick,0x7ff86ea82704,80298316,0,0x0,8
tick,0x7ff86ea82704,80300236,0,0x0,8
tick,0x7ff86ea82704,80302422,0,0x0,8
tick,0x7ff86ea82704,80304134,0,0x0,8
tick,0x7ff86ea82704,80306280,0,0x0,8
tick,0x7ff86ea82704,80308124,0,0x0,8
tick,0x7ff86ea82704,80310233,0,0x0,8
tick,0x7ff86ea82704,80312097,0,0x0,8
tick,0x7ff86ea82704,80314208,0,0x0,8
tick,0x7ff86ea82704,80316106,0,0x0,8
tick,0x7ff86ea82704,80318190,0,0x0,8
tick,0x7ff86ea82704,80320070,0,0x0,8
tick,0x7ff86ea82704,80322117,0,0x0,8
tick,0x7ff86ea82704,80324134,0,0x0,8
tick,0x7ff86ea82704,80326153,0,0x0,8
tick,0x7ff86ea82704,80328106,0,0x0,8
tick,0x7ff86ea82704,80330164,0,0x0,8
tick,0x7ff86ea82704,80332031,0,0x0,8
tick,0x7ff86ea82704,80334145,0,0x0,8
tick,0x7ff86ea82704,80336082,0,0x0,8
tick,0x7ff86ea82704,80338132,0,0x0,8
tick,0x7ff86ea82704,80340139,0,0x0,8
tick,0x7ff86ea82704,80342032,0,0x0,8
tick,0x7ff86ea82704,80344018,0,0x0,8
tick,0x7ff86ea82704,80346028,0,0x0,8
tick,0x7ff86ea82704,80348119,0,0x0,8
tick,0x7ff86ea82704,80350136,0,0x0,8
tick,0x7ff86ea82704,80352047,0,0x0,8
tick,0x7ff86ea82704,80354030,0,0x0,8
tick,0x7ff86ea82704,80356058,0,0x0,8
tick,0x7ff86ea82704,80357982,0,0x0,8
tick,0x7ff86ea82704,80360137,0,0x0,8
tick,0x7ff86ea82704,80362012,0,0x0,8
tick,0x7ff86ea82704,80364063,0,0x0,8
tick,0x7ff86ea82704,80366039,0,0x0,8
tick,0x7ff86ea82704,80368058,0,0x0,8
tick,0x7ff86ea82704,80369998,0,0x0,8
tick,0x7ff86ea82704,80372053,0,0x0,8
tick,0x7ff86ea82704,80373879,0,0x0,8
tick,0x7ff86ea82704,80375935,0,0x0,8
tick,0x7ff86ea82704,80378165,0,0x0,8
tick,0x7ff86ea82704,80380006,0,0x0,8
tick,0x7ff86ea82704,80381878,0,0x0,8
tick,0x7ff86ea82704,80384035,0,0x0,8
tick,0x7ff86ea82704,80385976,0,0x0,8
tick,0x7ff86ea82704,80388088,0,0x0,8
tick,0x7ff86ea82704,80390151,0,0x0,8
tick,0x7ff86ea82704,80391945,0,0x0,8
tick,0x7ff86ea82704,80393984,0,0x0,8
tick,0x7ff86ea82704,80395940,0,0x0,8
tick,0x7ff86ea82704,80397980,0,0x0,8
tick,0x7ff86ea82704,80399935,0,0x0,8
tick,0x7ff86ea82704,80401937,0,0x0,8
tick,0x7ff86ea82704,80403958,0,0x0,8
tick,0x7ff86ea82704,80405867,0,0x0,8
tick,0x7ff86ea82704,80408100,0,0x0,8
tick,0x7ff86ea82704,80409898,0,0x0,8
tick,0x7ff86ea82704,80412087,0,0x0,8
tick,0x7ff86ea82704,80413828,0,0x0,8
tick,0x7ff86ea82704,80415983,0,0x0,8
tick,0x7ff86ea82704,80417848,0,0x0,8
tick,0x7ff86ea82704,80419879,0,0x0,8
tick,0x7ff86ea82704,80421829,0,0x0,8
tick,0x7ff86ea82704,80423935,0,0x0,8
tick,0x7ff86ea82704,80425887,0,0x0,8
tick,0x7ff86ea82704,80427830,0,0x0,8
tick,0x7ff86ea82704,80429807,0,0x0,8
tick,0x7ff86ea82704,80431747,0,0x0,8
tick,0x7ff86ea82704,80433873,0,0x0,8
tick,0x7ff86ea82704,80435902,0,0x0,8
tick,0x7ff86ea82704,80437769,0,0x0,8
tick,0x7ff86ea82704,80439811,0,0x0,8
tick,0x7ff86ea82704,80441774,0,0x0,8
tick,0x7ff86ea82704,80443860,0,0x0,8
tick,0x7ff86ea82704,80445719,0,0x0,8
tick,0x7ff86ea82704,80448044,0,0x0,8
tick,0x7ff86ea82704,80449719,0,0x0,8
tick,0x7ff86ea82704,80451833,0,0x0,8
tick,0x7ff86ea82704,80453754,0,0x0,8
tick,0x7ff86ea82704,80455886,0,0x0,8
tick,0x7ff86ea82704,80457833,0,0x0,8
tick,0x7ff86ea82704,80459898,0,0x0,8
tick,0x7ff86ea82704,80461891,0,0x0,8
tick,0x7ff86ea82704,80463803,0,0x0,8
tick,0x7ff86ea82704,80465734,0,0x0,8
tick,0x7ff86ea82704,80467768,0,0x0,8
tick,0x7ff86ea82704,80469713,0,0x0,8
tick,0x7ff86ea82704,80471759,0,0x0,8
tick,0x7ff86ea82704,80473770,0,0x0,8
tick,0x7ff86ea82704,80475755,0,0x0,8
tick,0x7ff86ea82704,80477716,0,0x0,8
tick,0x7ff86ea82704,80480143,0,0x0,8
tick,0x7ff86ea82704,80481886,0,0x0,8
tick,0x7ff86ea82704,80483896,0,0x0,8
tick,0x7ff86ea82704,80485787,0,0x0,8
tick,0x7ff86ea82704,80489148,0,0x0,8
tick,0x7ff86ea82704,80489996,0,0x0,8
tick,0x7ff86ea82704,80491874,0,0x0,8
tick,0x7ff86ea82704,80493789,0,0x0,8
tick,0x7ff86ea82704,80495697,0,0x0,8
tick,0x7ff86ea82704,80497756,0,0x0,8
tick,0x7ff86ea82704,80499812,0,0x0,8
tick,0x7ff86ea82704,80501573,0,0x0,8
tick,0x7ff86ea82704,80503854,0,0x0,8
tick,0x7ff86ea82704,80505570,0,0x0,8
tick,0x7ff86ea82704,80507695,0,0x0,8
tick,0x7ff86ea82704,80509688,0,0x0,8
tick,0x7ff86ea82704,80511701,0,0x0,8
tick,0x7ff86ea82704,80513570,0,0x0,8
tick,0x7ff86ea82704,80515574,0,0x0,8
tick,0x7ff86ea82704,80517663,0,0x0,8
tick,0x7ff86ea82704,80519584,0,0x0,8
tick,0x7ff86ea82704,80521556,0,0x0,8
tick,0x7ff86ea82704,80523788,0,0x0,8
tick,0x7ff86ea82704,80525530,0,0x0,8
tick,0x7ff86ea82704,80527577,0,0x0,8
tick,0x7ff86ea82704,80529527,0,0x0,8
tick,0x7ff86ea82704,80531521,0,0x0,8
tick,0x7ff86ea82704,80533666,0,0x0,8
tick,0x7ff86ea82704,80535609,0,0x0,8
tick,0x7ff86ea82704,80537497,0,0x0,8
tick,0x7ff86ea82704,80539586,0,0x0,8
tick,0x7ff86ea82704,80541649,0,0x0,8
tick,0x7ff86ea82704,80543542,0,0x0,8
tick,0x7ff86ea82704,80545645,0,0x0,8
tick,0x7ff86ea82704,80547573,0,0x0,8
tick,0x7ff86ea82704,80549510,0,0x0,8
tick,0x7ff86ea82704,80551541,0,0x0,8
tick,0x7ff86ea82704,80553573,0,0x0,8
tick,0x7ff86ea82704,80555433,0,0x0,8
tick,0x7ff86ea82704,80557558,0,0x0,8
tick,0x7ff86ea82704,80559489,0,0x0,8
tick,0x7ff86ea82704,80561700,0,0x0,8
tick,0x7ff86ea82704,80563420,0,0x0,8
tick,0x7ff86ea82704,80565563,0,0x0,8
tick,0x7ff86ea82704,80567402,0,0x0,8
tick,0x7ff86ea82704,80569425,0,0x0,8
tick,0x7ff86ea82704,80571405,0,0x0,8
tick,0x7ff86ea82704,80573511,0,0x0,8
tick,0x7ff86ea82704,80575463,0,0x0,8
tick,0x7ff86ea82704,80577818,0,0x0,8
tick,0x7ff86ea82704,80579402,0,0x0,8
tick,0x7ff86ea82704,80581557,0,0x0,8
tick,0x7ff86ea82704,80583479,0,0x0,8
tick,0x7ff86ea82704,80585456,0,0x0,8
tick,0x7ff86ea82704,80587418,0,0x0,8
tick,0x7ff86ea82704,80589366,0,0x0,8
tick,0x7ff86ea82704,80591329,0,0x0,8
tick,0x7ff86ea82704,80593382,0,0x0,8
tick,0x7ff86ea82704,80595407,0,0x0,8
tick,0x7ff86ea82704,80597388,0,0x0,8
tick,0x7ff86ea82704,80599388,0,0x0,8
tick,0x7ff86ea82704,80601524,0,0x0,8
tick,0x7ff86ea82704,80603418,0,0x0,8
tick,0x7ff86ea82704,80605333,0,0x0,8
tick,0x7ff86ea82704,80607496,0,0x0,8
tick,0x7ff86ea82704,80609382,0,0x0,8
tick,0x7ff86ea82704,80611522,0,0x0,8
tick,0x7ff86ea82704,80613399,0,0x0,8
tick,0x7ff86ea82704,80615370,0,0x0,8
tick,0x7ff86ea82704,80617432,0,0x0,8
tick,0x7ff86ea82704,80619323,0,0x0,8
tick,0x7ff86ea82704,80624083,0,0x0,8
tick,0x7ff86ea82704,80625462,0,0x0,8
tick,0x7ff86ea82704,80627570,0,0x0,8
tick,0x7ff86ea82704,80629460,0,0x0,8
tick,0x7ff86ea82704,80631644,0,0x0,8
tick,0x7ff86ea82704,80633386,0,0x0,8
tick,0x7ff86ea82704,80635504,0,0x0,8
tick,0x7ff86ea82704,80637435,0,0x0,8
tick,0x7ff86ea82704,80639604,0,0x0,8
tick,0x7ff86ea82704,80641377,0,0x0,8
tick,0x7ff86ea82704,80643494,0,0x0,8
tick,0x7ff86ea82704,80645555,0,0x0,8
tick,0x7ff86ea82704,80647601,0,0x0,8
tick,0x7ff86ea82704,80649553,0,0x0,8
tick,0x7ff86ea82704,80651538,0,0x0,8
tick,0x7ff86ea82704,80653435,0,0x0,8
tick,0x7ff86ea82704,80655558,0,0x0,8
tick,0x7ff86ea82704,80657505,0,0x0,8
tick,0x7ff86ea82704,80659346,0,0x0,8
tick,0x7ff86ea82704,80661653,0,0x0,8
tick,0x7ff86ea82704,80663408,0,0x0,8
tick,0x7ff86ea82704,80665510,0,0x0,8
tick,0x7ff86ea82704,80667433,0,0x0,8
tick,0x7ff86ea82704,80669412,0,0x0,8
tick,0x7ff86ea82704,80671521,0,0x0,8
tick,0x7ff86ea82704,80673417,0,0x0,8
tick,0x7ff86ea82704,80675353,0,0x0,8
tick,0x7ff86ea82704,80677548,0,0x0,8
tick,0x7ff86ea82704,80679404,0,0x0,8
tick,0x7ff86ea82704,80681335,0,0x0,8
tick,0x7ff86ea82704,80683579,0,0x0,8
tick,0x7ff86ea82704,80685527,0,0x0,8
tick,0x7ff86ea82704,80687547,0,0x0,8
tick,0x7ff86ea82704,80689423,0,0x0,8
tick,0x7ff86ea82704,80691325,0,0x0,8
tick,0x7ff86ea82704,80693449,0,0x0,8
tick,0x7ff86ea82704,80695334,0,0x0,8
tick,0x7ff86ea82704,80697484,0,0x0,8
tick,0x7ff86ea82704,80699380,0,0x0,8
tick,0x7ff86ea82704,80701375,0,0x0,8
tick,0x7ff86ea82704,80703353,0,0x0,8
tick,0x7ff86ea82704,80705330,0,0x0,8
tick,0x7ff86ea82704,80707436,0,0x0,8
tick,0x7ff86ea82704,80709526,0,0x0,8
tick,0x7ff86ea82704,80711357,0,0x0,8
tick,0x7ff86ea82704,80713281,0,0x0,8
tick,0x7ff86ea82704,80715197,0,0x0,8
tick,0x7ff86ea82704,80717340,0,0x0,8
tick,0x7ff86ea82704,80719308,0,0x0,8
tick,0x7ff86ea82704,80721580,0,0x0,8
tick,0x7ff86ea82704,80723205,0,0x0,8
tick,0x7ff86ea82704,80725428,0,0x0,8
tick,0x7ff86ea82704,80727200,0,0x0,8
tick,0x7ff86ea82704,80729354,0,0x0,8
tick,0x7ff86ea82704,80731203,0,0x0,8
tick,0x7ff86ea82704,80733484,0,0x0,8
tick,0x7ff86ea82704,80735187,0,0x0,8
tick,0x7ff86ea82704,80737246,0,0x0,8
tick,0x7ff86ea82704,80739087,0,0x0,8
tick,0x7ff86ea82704,80741471,0,0x0,8
tick,0x7ff86ea82704,80743188,0,0x0,8
tick,0x7ff86ea82704,80745332,0,0x0,8
tick,0x7ff86ea82704,80747261,0,0x0,8
tick,0x7ff86ea82704,80749208,0,0x0,8
tick,0x7ff86ea82704,80751220,0,0x0,8
tick,0x7ff86ea82704,80753227,0,0x0,8
tick,0x7ff86ea82704,80755253,0,0x0,8
tick,0x7ff86ea82704,80757252,0,0x0,8
tick,0x7ff86ea82704,80759175,0,0x0,8
tick,0x7ff86ea82704,80761156,0,0x0,8
tick,0x7ff86ea82704,80763211,0,0x0,8
tick,0x7ff86ea82704,80765092,0,0x0,8
tick,0x7ff86ea82704,80767116,0,0x0,8
tick,0x7ff86ea82704,80769169,0,0x0,8
tick,0x7ff86ea82704,80771139,0,0x0,8
tick,0x7ff86ea82704,80773132,0,0x0,8
tick,0x7ff86ea82704,80775227,0,0x0,8
tick,0x7ff86ea82704,80777107,0,0x0,8
tick,0x7ff86ea82704,80779279,0,0x0,8
tick,0x7ff86ea82704,80781134,0,0x0,8
tick,0x7ff86ea82704,80783536,0,0x0,8
tick,0x7ff86ea82704,80785354,0,0x0,8
tick,0x7ff86ea82704,80787302,0,0x0,8
tick,0x7ff86ea82704,80789428,0,0x0,8
tick,0x7ff86ea82704,80791100,0,0x0,8
tick,0x7ff86ea82704,80793865,0,0x0,8
tick,0x7ff86ea82704,80795577,0,0x0,8
tick,0x7ff86ea82704,80797014,0,0x0,8
tick,0x7ff86ea82704,80798981,0,0x0,8
tick,0x7ff86ea82704,80801053,0,0x0,8
tick,0x7ff86ea82704,80803078,0,0x0,8
tick,0x7ff86ea82704,80804951,0,0x0,8
tick,0x7ff86ea82704,80806922,0,0x0,8
tick,0x7ff86ea82704,80809000,0,0x0,8
tick,0x7ff86ea82704,80811176,0,0x0,8
tick,0x7ff86ea82704,80813363,0,0x0,8
tick,0x7ff86ea82704,80814918,0,0x0,8
tick,0x7ff86ea82704,80817037,0,0x0,8
tick,0x7ff86ea82704,80818907,0,0x0,8
tick,0x7ff86ea82704,80820842,0,0x0,8
tick,0x7ff86ea82704,80822881,0,0x0,8
tick,0x7ff86ea82704,80824772,0,0x0,8
tick,0x7ff86ea82704,80827000,0,0x0,8
tick,0x7ff86ea82704,80829016,0,0x0,8
tick,0x7ff86ea82704,80830847,0,0x0,8
tick,0x7ff86ea82704,80832948,0,0x0,8
tick,0x7ff86ea82704,80834824,0,0x0,8
tick,0x7ff86ea82704,80836883,0,0x0,8
tick,0x7ff86ea82704,80838806,0,0x0,8
tick,0x7ff86ea82704,80840774,0,0x0,8
tick,0x7ff86ea82704,80842830,0,0x0,8
tick,0x7ff86ea82704,80844884,0,0x0,8
tick,0x7ff86ea82704,80846949,0,0x0,8
tick,0x7ff86ea82704,80848919,0,0x0,8
tick,0x7ff86ea82704,80850843,0,0x0,8
tick,0x7ff86ea82704,80852816,0,0x0,8
tick,0x7ff86ea82704,80854742,0,0x0,8
tick,0x7ff86ea82704,80856870,0,0x0,8
tick,0x7ff86ea82704,80858878,0,0x0,8
tick,0x7ff86ea82704,80860820,0,0x0,8
tick,0x7ff86ea82704,80862797,0,0x0,8
tick,0x7ff86ea82704,80864999,0,0x0,8
tick,0x7ff86ea82704,80866826,0,0x0,8
tick,0x7ff86ea82704,80868751,0,0x0,8
tick,0x7ff86ea82704,80870774,0,0x0,8
tick,0x7ff86ea82704,80872693,0,0x0,8
tick,0x7ff86ea82704,80874760,0,0x0,8
tick,0x7ff86ea82704,80876733,0,0x0,8
tick,0x7ff86ea82704,80878963,0,0x0,8
tick,0x7ff86ea82704,80880809,0,0x0,8
tick,0x7ff86ea82704,80882827,0,0x0,8
tick,0x7ff86ea82704,80884673,0,0x0,8
tick,0x7ff86ea82704,80886753,0,0x0,8
tick,0x7ff86ea82704,80888645,0,0x0,8
tick,0x7ff86ea82704,80890644,0,0x0,8
tick,0x7ff86ea82704,80892716,0,0x0,8
tick,0x7ff86ea82704,80894667,0,0x0,8
tick,0x7ff86ea82704,80896784,0,0x0,8
tick,0x7ff86ea82704,80898693,0,0x0,8
tick,0x7ff86ea82704,80900674,0,0x0,8
tick,0x7ff86ea82704,80902727,0,0x0,8
tick,0x7ff86ea82704,80904794,0,0x0,8
tick,0x7ff86ea82704,80906671,0,0x0,8
tick,0x7ff86ea82704,80908758,0,0x0,8
tick,0x7ff86ea82704,80910685,0,0x0,8
tick,0x7ff86ea82704,80912709,0,0x0,8
tick,0x7ff86ea82704,80914635,0,0x0,8
tick,0x7ff86ea82704,80916595,0,0x0,8
tick,0x7ff86ea82704,80918659,0,0x0,8
tick,0x7ff86ea82704,80920656,0,0x0,8
tick,0x7ff86ea82704,80922696,0,0x0,8
tick,0x7ff86ea82704,80924585,0,0x0,8
tick,0x7ff86ea82704,80926651,0,0x0,8
tick,0x7ff86ea82704,80928655,0,0x0,8
tick,0x7ff86ea82704,80930557,0,0x0,8
tick,0x7ff86ea82704,80932579,0,0x0,8
tick,0x7ff86ea82704,80934669,0,0x0,8
tick,0x7ff86ea82704,80936659,0,0x0,8
tick,0x7ff86ea82704,80938685,0,0x0,8
tick,0x7ff86ea82704,80940559,0,0x0,8
tick,0x7ff86ea82704,80942598,0,0x0,8
tick,0x7ff86ea82704,80944550,0,0x0,8
tick,0x7ff86ea82704,80946619,0,0x0,8
tick,0x7ff86ea82704,80948571,0,0x0,8
tick,0x7ff86ea82704,80950575,0,0x0,8
tick,0x7ff86ea82704,80952589,0,0x0,8
tick,0x7ff86ea82704,80954525,0,0x0,8
tick,0x7ff86ea82704,80956539,0,0x0,8
tick,0x7ff86ea82704,80958516,0,0x0,8
tick,0x7ff86ea82704,80960375,0,0x0,8
tick,0x7ff86ea82704,80962609,0,0x0,8
tick,0x7ff86ea82704,80964461,0,0x0,8
tick,0x7ff86ea82704,80966582,0,0x0,8
tick,0x7ff86ea82704,80968430,0,0x0,8
tick,0x7ff86ea82704,80970502,0,0x0,8
tick,0x7ff86ea82704,80972398,0,0x0,8
tick,0x7ff86ea82704,80974488,0,0x0,8
tick,0x7ff86ea82704,80976439,0,0x0,8
tick,0x7ff86ea82704,80978524,0,0x0,8
tick,0x7ff86ea82704,80980530,0,0x0,8
tick,0x7ff86ea82704,80982415,0,0x0,8
tick,0x7ff86ea82704,80984548,0,0x0,8
tick,0x7ff86ea82704,80986481,0,0x0,8
tick,0x7ff86ea82704,80988546,0,0x0,8
tick,0x7ff86ea82704,80990420,0,0x0,8
tick,0x7ff86ea82704,80992550,0,0x0,8
tick,0x7ff86ea82704,80994437,0,0x0,8
tick,0x7ff86ea82704,80996472,0,0x0,8
tick,0x7ff86ea82704,80998476,0,0x0,8
tick,0x7ff86ea82704,81000394,0,0x0,8
tick,0x7ff86ea82704,81002424,0,0x0,8
tick,0x7ff86ea82704,81004375,0,0x0,8
tick,0x7ff86ea82704,81006479,0,0x0,8
tick,0x7ff86ea82704,81008423,0,0x0,8
tick,0x7ff86ea82704,81010290,0,0x0,8
tick,0x7ff86ea82704,81012342,0,0x0,8
tick,0x7ff86ea82704,81014401,0,0x0,8
tick,0x7ff86ea82704,81016454,0,0x0,8
tick,0x7ff86ea82704,81018393,0,0x0,8
tick,0x7ff86ea82704,81020325,0,0x0,8
tick,0x7ff86ea82704,81022345,0,0x0,8
tick,0x7ff86ea82704,81024374,0,0x0,8
tick,0x7ff86ea82704,81026410,0,0x0,8
tick,0x7ff86ea82704,81028291,0,0x0,8
tick,0x7ff86ea82704,81030337,0,0x0,8
tick,0x7ff86ea82704,81032255,0,0x0,8
tick,0x7ff86ea82704,81034321,0,0x0,8
tick,0x7ff86ea82704,81036310,0,0x0,8
tick,0x7ff86ea82704,81038396,0,0x0,8
tick,0x7ff86ea82704,81040230,0,0x0,8
tick,0x7ff86ea82704,81042376,0,0x0,8
tick,0x7ff86ea82704,81044297,0,0x0,8
tick,0x7ff86ea82704,81046322,0,0x0,8
tick,0x7ff86ea82704,81048321,0,0x0,8
tick,0x7ff86ea82704,81050259,0,0x0,8
tick,0x7ff86ea82704,81052300,0,0x0,8
tick,0x7ff86ea82704,81054279,0,0x0,8
tick,0x7ff86ea82704,81056279,0,0x0,8
tick,0x7ff86ea82704,81058251,0,0x0,8
tick,0x7ff86ea82704,81060271,0,0x0,8
tick,0x7ff86ea82704,81062173,0,0x0,8
tick,0x7ff86ea82704,81064222,0,0x0,8
tick,0x7ff86ea82704,81066169,0,0x0,8
tick,0x7ff86ea82704,81068211,0,0x0,8
tick,0x7ff86ea82704,81070240,0,0x0,8
tick,0x7ff86ea82704,81072187,0,0x0,8
tick,0x7ff86ea82704,81074186,0,0x0,8
tick,0x7ff86ea82704,81076282,0,0x0,8
tick,0x7ff86ea82704,81078279,0,0x0,8
tick,0x7ff86ea82704,81080203,0,0x0,8
tick,0x7ff86ea82704,81082354,0,0x0,8
tick,0x7ff86ea82704,81084207,0,0x0,8
tick,0x7ff86ea82704,81086183,0,0x0,8
tick,0x7ff86ea82704,81088229,0,0x0,8
tick,0x7ff86ea82704,81090255,0,0x0,8
tick,0x7ff86ea82704,81092187,0,0x0,8
tick,0x7ff86ea82704,81094120,0,0x0,8
tick,0x7ff86ea82704,81096099,0,0x0,8
tick,0x7ff86ea82704,81098176,0,0x0,8
tick,0x7ff86ea82704,81100193,0,0x0,8
tick,0x7ff86ea82704,81102245,0,0x0,8
tick,0x7ff86ea82704,81104142,0,0x0,8
tick,0x7ff86ea82704,81106110,0,0x0,8
tick,0x7ff86ea82704,81108170,0,0x0,8
tick,0x7ff86ea82704,81110106,0,0x0,8
tick,0x7ff86ea82704,81112101,0,0x0,8
tick,0x7ff86ea82704,81114208,0,0x0,8
tick,0x7ff86ea82704,81116164,0,0x0,8
tick,0x7ff86ea82704,81118204,0,0x0,8
tick,0x7ff86ea82704,81120114,0,0x0,8
tick,0x7ff86ea82704,81122231,0,0x0,8
tick,0x7ff86ea82704,81124119,0,0x0,8
tick,0x7ff86ea82704,81126190,0,0x0,8
tick,0x7ff86ea82704,81128096,0,0x0,8
tick,0x7ff86ea82704,81130133,0,0x0,8
tick,0x7ff86ea82704,81132081,0,0x0,8
tick,0x7ff86ea82704,81134033,0,0x0,8
tick,0x7ff86ea82704,81136118,0,0x0,8
tick,0x7ff86ea82704,81138017,0,0x0,8
tick,0x7ff86ea82704,81140278,0,0x0,8
tick,0x7ff86ea82704,81142007,0,0x0,8
tick,0x7ff86ea82704,81144166,0,0x0,8
tick,0x7ff86ea82704,81145968,0,0x0,8
tick,0x7ff86ea82704,81148323,0,0x0,8
tick,0x7ff86ea82704,81149900,0,0x0,8
tick,0x7ff86ea82704,81152099,0,0x0,8
tick,0x7ff86ea82704,81153974,0,0x0,8
tick,0x7ff86ea82704,81156070,0,0x0,8
tick,0x7ff86ea82704,81157907,0,0x0,8
tick,0x7ff86ea82704,81159983,0,0x0,8
tick,0x7ff86ea82704,81161956,0,0x0,8
tick,0x7ff86ea82704,81163953,0,0x0,8
tick,0x7ff86ea82704,81165956,0,0x0,8
tick,0x7ff86ea82704,81168022,0,0x0,8
tick,0x7ff86ea82704,81169964,0,0x0,8
tick,0x7ff86ea82704,81171974,0,0x0,8
tick,0x7ff86ea82704,81174039,0,0x0,8
tick,0x7ff86ea82704,81175997,0,0x0,8
tick,0x7ff86ea82704,81178031,0,0x0,8
tick,0x7ff86ea82704,81180048,0,0x0,8
tick,0x7ff86ea82704,81181963,0,0x0,8
tick,0x7ff86ea82704,81184074,0,0x0,8
tick,0x7ff86ea82704,81185991,0,0x0,8
tick,0x7ff86ea82704,81187998,0,0x0,8
tick,0x7ff86ea82704,81190032,0,0x0,8
tick,0x7ff86ea82704,81191842,0,0x0,8
tick,0x7ff86ea82704,81193924,0,0x0,8
tick,0x7ff86ea82704,81195996,0,0x0,8
tick,0x7ff86ea82704,81197943,0,0x0,8
tick,0x7ff86ea82704,81199937,0,0x0,8
tick,0x7ff86ea82704,81201902,0,0x0,8
tick,0x7ff86ea82704,81203917,0,0x0,8
tick,0x7ff86ea82704,81205818,0,0x0,8
tick,0x7ff86ea82704,81207820,0,0x0,8
tick,0x7ff86ea82704,81209813,0,0x0,8
tick,0x7ff86ea82704,81211841,0,0x0,8
tick,0x7ff86ea82704,81213881,0,0x0,8
tick,0x7ff86ea82704,81215836,0,0x0,8
tick,0x7ff86ea82704,81217830,0,0x0,8
tick,0x7ff86ea82704,81219874,0,0x0,8
tick,0x7ff86ea82704,81221857,0,0x0,8
tick,0x7ff86ea82704,81223842,0,0x0,8
tick,0x7ff86ea82704,81225775,0,0x0,8
tick,0x7ff86ea82704,81227717,0,0x0,8
tick,0x7ff86ea82704,81229859,0,0x0,8
tick,0x7ff86ea82704,81231770,0,0x0,8
tick,0x7ff86ea82704,81233781,0,0x0,8
tick,0x7ff86ea82704,81235761,0,0x0,8
tick,0x7ff86ea82704,81237761,0,0x0,8
tick,0x7ff86ea82704,81239751,0,0x0,8
tick,0x7ff86ea82704,81241802,0,0x0,8
tick,0x7ff86ea82704,81243795,0,0x0,8
tick,0x7ff86ea82704,81245847,0,0x0,8
tick,0x7ff86ea82704,81247735,0,0x0,8
tick,0x7ff86ea82704,81249917,0,0x0,8
tick,0x7ff86ea82704,81253948,0,0x0,8
tick,0x7ff86ea82704,81256160,0,0x0,8
tick,0x7ff86ea82704,81257953,0,0x0,8
tick,0x7ff86ea82704,81260046,0,0x0,8
tick,0x7ff86ea82704,81261807,0,0x0,8
tick,0x7ff86ea82704,81264041,0,0x0,8
tick,0x7ff86ea82704,81265969,0,0x0,8
tick,0x7ff86ea82704,81268010,0,0x0,8
tick,0x7ff86ea82704,81269916,0,0x0,8
tick,0x7ff86ea82704,81271842,0,0x0,8
tick,0x7ff86ea82704,81273843,0,0x0,8
tick,0x7ff86ea82704,81275784,0,0x0,8
tick,0x7ff86ea82704,81277856,0,0x0,8
tick,0x7ff86ea82704,81279794,0,0x0,8
tick,0x7ff86ea82704,81281868,0,0x0,8
tick,0x7ff86ea82704,81283771,0,0x0,8
tick,0x7ff86ea82704,81285798,0,0x0,8
tick,0x7ff86ea82704,81287907,0,0x0,8
tick,0x7ff86ea82704,81290077,0,0x0,8
tick,0x7ff86ea82704,81291927,0,0x0,8
tick,0x7ff86ea82704,81293834,0,0x0,8
tick,0x7ff86ea82704,81295801,0,0x0,8
tick,0x7ff86ea82704,81297664,0,0x0,8
tick,0x7ff86ea82704,81299730,0,0x0,8
tick,0x7ff86ea82704,81302082,0,0x0,8
tick,0x7ff86ea82704,81303892,0,0x0,8
tick,0x7ff86ea82704,81305731,0,0x0,8
tick,0x7ff86ea82704,81307754,0,0x0,8
tick,0x7ff86ea82704,81309669,0,0x0,8
tick,0x7ff86ea82704,81311882,0,0x0,8
tick,0x7ff86ea82704,81313736,0,0x0,8
tick,0x7ff86ea82704,81315791,0,0x0,8
tick,0x7ff86ea82704,81317579,0,0x0,8
tick,0x7ff86ea82704,81319707,0,0x0,8
tick,0x7ff86ea82704,81321550,0,0x0,8
tick,0x7ff86ea82704,81323665,0,0x0,8
tick,0x7ff86ea82704,81325573,0,0x0,8
tick,0x7ff86ea82704,81327624,0,0x0,8
tick,0x7ff86ea82704,81329564,0,0x0,8
tick,0x7ff86ea82704,81331652,0,0x0,8
tick,0x7ff86ea82704,81333569,0,0x0,8
tick,0x7ff86ea82704,81335625,0,0x0,8
tick,0x7ff86ea82704,81337666,0,0x0,8
tick,0x7ff86ea82704,81339710,0,0x0,8
tick,0x7ff86ea82704,81341534,0,0x0,8
tick,0x7ff86ea82704,81343513,0,0x0,8
tick,0x7ff86ea82704,81345799,0,0x0,8
tick,0x7ff86ea82704,81347604,0,0x0,8
tick,0x7ff86ea82704,81349574,0,0x0,8
tick,0x7ff86ea82704,81351605,0,0x0,8
tick,0x7ff86ea82704,81353716,0,0x0,8
tick,0x7ff86ea82704,81355473,0,0x0,8
tick,0x7ff86ea82704,81357516,0,0x0,8
tick,0x7ff86ea82704,81359504,0,0x0,8
tick,0x7ff86ea82704,81361639,0,0x0,8
tick,0x7ff86ea82704,81363574,0,0x0,8
tick,0x7ff86ea82704,81365557,0,0x0,8
tick,0x7ff86ea82704,81367509,0,0x0,8
tick,0x7ff86ea82704,81369428,0,0x0,8
tick,0x7ff86ea82704,81371561,0,0x0,8
tick,0x7ff86ea82704,81373782,0,0x0,8
tick,0x7ff86ea82704,81375683,0,0x0,8
tick,0x7ff86ea82704,81377486,0,0x0,8
tick,0x7ff86ea82704,81379581,0,0x0,8
tick,0x7ff86ea82704,81381598,0,0x0,8
tick,0x7ff86ea82704,81383593,0,0x0,8
tick,0x7ff86ea82704,81385485,0,0x0,8
tick,0x7ff86ea82704,81387451,0,0x0,8
tick,0x7ff86ea82704,81389488,0,0x0,8
tick,0x7ff86ea82704,81391438,0,0x0,8
tick,0x7ff86ea82704,81393764,0,0x0,8
tick,0x7ff86ea82704,81395610,0,0x0,8
tick,0x7ff86ea82704,81397298,0,0x0,8
tick,0x7ff86ea82704,81399656,0,0x0,8
tick,0x7ff86ea82704,81401269,0,0x0,8
tick,0x7ff86ea82704,81403500,0,0x0,8
tick,0x7ff86ea82704,81405352,0,0x0,8
tick,0x7ff86ea82704,81407551,0,0x0,8
tick,0x7ff86ea82704,81409398,0,0x0,8
tick,0x7ff86ea82704,81411393,0,0x0,8
tick,0x7ff86ea82704,81413301,0,0x0,8
tick,0x7ff86ea82704,81415679,0,0x0,8
tick,0x7ff86ea82704,81417553,0,0x0,8
tick,0x7ff86ea82704,81419555,0,0x0,8
tick,0x7ff86ea82704,81421357,0,0x0,8
tick,0x7ff86ea82704,81423522,0,0x0,8
tick,0x7ff86ea82704,81425563,0,0x0,8
tick,0x7ff86ea82704,81427420,0,0x0,8
tick,0x7ff86ea82704,81429448,0,0x0,8
tick,0x7ff86ea82704,81431401,0,0x0,8
tick,0x7ff86ea82704,81433413,0,0x0,8
tick,0x7ff86ea82704,81435499,0,0x0,8
tick,0x7ff86ea82704,81437379,0,0x0,8
tick,0x7ff86ea82704,81439507,0,0x0,8
tick,0x7ff86ea82704,81441420,0,0x0,8
tick,0x7ff86ea82704,81443527,0,0x0,8
tick,0x7ff86ea82704,81445470,0,0x0,8
tick,0x7ff86ea82704,81447270,0,0x0,8
tick,0x7ff86ea82704,81449415,0,0x0,8
tick,0x7ff86ea82704,81451384,0,0x0,8
tick,0x7ff86ea82704,81453270,0,0x0,8
tick,0x7ff86ea82704,81455373,0,0x0,8
tick,0x7ff86ea82704,81457288,0,0x0,8
tick,0x7ff86ea82704,81459312,0,0x0,8
tick,0x7ff86ea82704,81461238,0,0x0,8
tick,0x7ff86ea82704,81463365,0,0x0,8
tick,0x7ff86ea82704,81465450,0,0x0,8
tick,0x7ff86ea82704,81467434,0,0x0,8
tick,0x7ff86ea82704,81469482,0,0x0,8
tick,0x7ff86ea82704,81471358,0,0x0,8
tick,0x7ff86ea82704,81473400,0,0x0,8
tick,0x7ff86ea82704,81475698,0,0x0,8
tick,0x7ff86ea82704,81477363,0,0x0,8
tick,0x7ff86ea82704,81479442,0,0x0,8
tick,0x7ff86ea82704,81481422,0,0x0,8
tick,0x7ff86ea82704,81483390,0,0x0,8
tick,0x7ff86ea82704,81485355,0,0x0,8
tick,0x7ff86ea82704,81487269,0,0x0,8
tick,0x7ff86ea82704,81489238,0,0x0,8
tick,0x7ff86ea82704,81491315,0,0x0,8
tick,0x7ff86ea82704,81493522,0,0x0,8
tick,0x7ff86ea82704,81495183,0,0x0,8
tick,0x7ff86ea82704,81497480,0,0x0,8
tick,0x7ff86ea82704,81499216,0,0x0,8
tick,0x7ff86ea82704,81501308,0,0x0,8
tick,0x7ff86ea82704,81503306,0,0x0,8
tick,0x7ff86ea82704,81505262,0,0x0,8
tick,0x7ff86ea82704,81507393,0,0x0,8
tick,0x7ff86ea82704,81509194,0,0x0,8
tick,0x7ff86ea82704,81511170,0,0x0,8
tick,0x7ff86ea82704,81513189,0,0x0,8
tick,0x7ff86ea82704,81515391,0,0x0,8
tick,0x7ff86ea82704,81517089,0,0x0,8
tick,0x7ff86ea82704,81519283,0,0x0,8
tick,0x7ff86ea82704,81521096,0,0x0,8
tick,0x7ff86ea82704,81523248,0,0x0,8
tick,0x7ff86ea82704,81525152,0,0x0,8
tick,0x7ff86ea82704,81527281,0,0x0,8
tick,0x7ff86ea82704,81529088,0,0x0,8
tick,0x7ff86ea82704,81531282,0,0x0,8
tick,0x7ff86ea82704,81533505,0,0x0,8
tick,0x7ff86ea82704,81535046,0,0x0,8
tick,0x7ff86ea82704,81537212,0,0x0,8
tick,0x7ff86ea82704,81539207,0,0x0,8
tick,0x7ff86ea82704,81541256,0,0x0,8
tick,0x7ff86ea82704,81543238,0,0x0,8
tick,0x7ff86ea82704,81545070,0,0x0,8
tick,0x7ff86ea82704,81547220,0,0x0,8
tick,0x7ff86ea82704,81549139,0,0x0,8
tick,0x7ff86ea82704,81551168,0,0x0,8
tick,0x7ff86ea82704,81553066,0,0x0,8
tick,0x7ff86ea82704,81555010,0,0x0,8
tick,0x7ff86ea82704,81557102,0,0x0,8
tick,0x7ff86ea82704,81559191,0,0x0,8
tick,0x7ff86ea82704,81561084,0,0x0,8
tick,0x7ff86ea82704,81562984,0,0x0,8
tick,0x7ff86ea82704,81564985,0,0x0,8
tick,0x7ff86ea82704,81567125,0,0x0,8
tick,0x7ff86ea82704,81569174,0,0x0,8
tick,0x7ff86ea82704,81571141,0,0x0,8
tick,0x7ff86ea82704,81573156,0,0x0,8
tick,0x7ff86ea82704,81575181,0,0x0,8
tick,0x7ff86ea82704,81577043,0,0x0,8
tick,0x7ff86ea82704,81579102,0,0x0,8
tick,0x7ff86ea82704,81581028,0,0x0,8
tick,0x7ff86ea82704,81582924,0,0x0,8
tick,0x7ff86ea82704,81584941,0,0x0,8
tick,0x7ff86ea82704,81587069,0,0x0,8
tick,0x7ff86ea82704,81588984,0,0x0,8
tick,0x7ff86ea82704,81590977,0,0x0,8
tick,0x7ff86ea82704,81593120,0,0x0,8
tick,0x7ff86ea82704,81594876,0,0x0,8
tick,0x7ff86ea82704,81596993,0,0x0,8
tick,0x7ff86ea82704,81598959,0,0x0,8
tick,0x7ff86ea82704,81601226,0,0x0,8
tick,0x7ff86ea82704,81602954,0,0x0,8
tick,0x7ff86ea82704,81605152,0,0x0,8
tick,0x7ff86ea82704,81607078,0,0x0,8
tick,0x7ff86ea82704,81610203,0,0x0,8
tick,0x7ff86ea82704,81611789,0,0x0,8
tick,0x7ff86ea82704,81613825,0,0x0,8
tick,0x7ff86ea82704,81615910,0,0x0,8
tick,0x7ff86ea82704,81617685,0,0x0,8
tick,0x7ff86ea82704,81619871,0,0x0,8
tick,0x7ff86ea82704,81621959,0,0x0,8
tick,0x7ff86ea82704,81623730,0,0x0,8
tick,0x7ff86ea82704,81625784,0,0x0,8
tick,0x7ff86ea82704,81627761,0,0x0,8
tick,0x7ff86ea82704,81630191,0,0x0,8
tick,0x7ff86ea82704,81631598,0,0x0,8
tick,0x7ff86ea82704,81634219,0,0x0,8
tick,0x7ff86ea82704,81635917,0,0x0,8
tick,0x7ff86ea82704,81637678,0,0x0,8
tick,0x7ff86ea82704,81639817,0,0x0,8
tick,0x7ff86ea82704,81641710,0,0x0,8
tick,0x7ff86ea82704,81643682,0,0x0,8
tick,0x7ff86ea82704,81645865,0,0x0,8
tick,0x7ff86ea82704,81647636,0,0x0,8
tick,0x7ff86ea82704,81649719,0,0x0,8
tick,0x7ff86ea82704,81651926,0,0x0,8
tick,0x7ff86ea82704,81653948,0,0x0,8
tick,0x7ff86ea82704,81655855,0,0x0,8
tick,0x7ff86ea82704,81657982,0,0x0,8
tick,0x7ff86ea82704,81659704,0,0x0,8
tick,0x7ff86ea82704,81661691,0,0x0,8
tick,0x7ff86ea82704,81663689,0,0x0,8
tick,0x7ff86ea82704,81665758,0,0x0,8
tick,0x7ff86ea82704,81667757,0,0x0,8
tick,0x7ff86ea82704,81669844,0,0x0,8
tick,0x7ff86ea82704,81671590,0,0x0,8
tick,0x7ff86ea82704,81673565,0,0x0,8
tick,0x7ff86ea82704,81675613,0,0x0,8
tick,0x7ff86ea82704,81677592,0,0x0,8
tick,0x7ff86ea82704,81679501,0,0x0,8
tick,0x7ff86ea82704,81681675,0,0x0,8
tick,0x7ff86ea82704,81683485,0,0x0,8
tick,0x7ff86ea82704,81685570,0,0x0,8
tick,0x7ff86ea82704,81687560,0,0x0,8
tick,0x7ff86ea82704,81689569,0,0x0,8
tick,0x7ff86ea82704,81691586,0,0x0,8
tick,0x7ff86ea82704,81693621,0,0x0,8
tick,0x7ff86ea82704,81695515,0,0x0,8
tick,0x7ff86ea82704,81697623,0,0x0,8
tick,0x7ff86ea82704,81699433,0,0x0,8
tick,0x7ff86ea82704,81701649,0,0x0,8
tick,0x7ff86ea82704,81703454,0,0x0,8
tick,0x7ff86ea82704,81705593,0,0x0,8
tick,0x7ff86ea82704,81707403,0,0x0,8
tick,0x7ff86ea82704,81709612,0,0x0,8
tick,0x7ff86ea82704,81711495,0,0x0,8
tick,0x7ff86ea82704,81713552,0,0x0,8
tick,0x7ff86ea82704,81715507,0,0x0,8
tick,0x7ff86ea82704,81717493,0,0x0,8
tick,0x7ff86ea82704,81719492,0,0x0,8
tick,0x7ff86ea82704,81721386,0,0x0,8
tick,0x7ff86ea82704,81723323,0,0x0,8
tick,0x7ff86ea82704,81725388,0,0x0,8
tick,0x7ff86ea82704,81727446,0,0x0,8
tick,0x7ff86ea82704,81729484,0,0x0,8
tick,0x7ff86ea82704,81731366,0,0x0,8
tick,0x7ff86ea82704,81733472,0,0x0,8
tick,0x7ff86ea82704,81735267,0,0x0,8
tick,0x7ff86ea82704,81737447,0,0x0,8
tick,0x7ff86ea82704,81739419,0,0x0,8
tick,0x7ff86ea82704,81741457,0,0x0,8
tick,0x7ff86ea82704,81743310,0,0x0,8
tick,0x7ff86ea82704,81745522,0,0x0,8
tick,0x7ff86ea82704,81747426,0,0x0,8
tick,0x7ff86ea82704,81749365,0,0x0,8
tick,0x7ff86ea82704,81751408,0,0x0,8
tick,0x7ff86ea82704,81753312,0,0x0,8
tick,0x7ff86ea82704,81755530,0,0x0,8
tick,0x7ff86ea82704,81757496,0,0x0,8
tick,0x7ff86ea82704,81759427,0,0x0,8
tick,0x7ff86ea82704,81761329,0,0x0,8
tick,0x7ff86ea82704,81763287,0,0x0,8
tick,0x7ff86ea82704,81765367,0,0x0,8
tick,0x7ff86ea82704,81767208,0,0x0,8
tick,0x7ff86ea82704,81769452,0,0x0,8
tick,0x7ff86ea82704,81771350,0,0x0,8
tick,0x7ff86ea82704,81773364,0,0x0,8
tick,0x7ff86ea82704,81775241,0,0x0,8
tick,0x7ff86ea82704,81777312,0,0x0,8
tick,0x7ff86ea82704,81779245,0,0x0,8
tick,0x7ff86ea82704,81781338,0,0x0,8
tick,0x7ff86ea82704,81783365,0,0x0,8
tick,0x7ff86ea82704,81785502,0,0x0,8
tick,0x7ff86ea82704,81787313,0,0x0,8
tick,0x7ff86ea82704,81789265,0,0x0,8
tick,0x7ff86ea82704,81791337,0,0x0,8
tick,0x7ff86ea82704,81793294,0,0x0,8
tick,0x7ff86ea82704,81795181,0,0x0,8
tick,0x7ff86ea82704,81797272,0,0x0,8
tick,0x7ff86ea82704,81799273,0,0x0,8
tick,0x7ff86ea82704,81801315,0,0x0,8
tick,0x7ff86ea82704,81803374,0,0x0,8
tick,0x7ff86ea82704,81805267,0,0x0,8
tick,0x7ff86ea82704,81807278,0,0x0,8
tick,0x7ff86ea82704,81809224,0,0x0,8
tick,0x7ff86ea82704,81811278,0,0x0,8
tick,0x7ff86ea82704,81813147,0,0x0,8
tick,0x7ff86ea82704,81815270,0,0x0,8
tick,0x7ff86ea82704,81817235,0,0x0,8
tick,0x7ff86ea82704,81819260,0,0x0,8
tick,0x7ff86ea82704,81821142,0,0x0,8
tick,0x7ff86ea82704,81823139,0,0x0,8
tick,0x7ff86ea82704,81825121,0,0x0,8
tick,0x7ff86ea82704,81827189,0,0x0,8
tick,0x7ff86ea82704,81829149,0,0x0,8
tick,0x7ff86ea82704,81831349,0,0x0,8
tick,0x7ff86ea82704,81833075,0,0x0,8
tick,0x7ff86ea82704,81835207,0,0x0,8
tick,0x7ff86ea82704,81837292,0,0x0,8
tick,0x7ff86ea82704,81839315,0,0x0,8
tick,0x7ff86ea82704,81841345,0,0x0,8
tick,0x7ff86ea82704,81843175,0,0x0,8
tick,0x7ff86ea82704,81845367,0,0x0,8
tick,0x7ff86ea82704,81847053,0,0x0,8
tick,0x7ff86ea82704,81849186,0,0x0,8
tick,0x7ff86ea82704,81850983,0,0x0,8
tick,0x7ff86ea82704,81853114,0,0x0,8
tick,0x7ff86ea82704,81855050,0,0x0,8
tick,0x7ff86ea82704,81857085,0,0x0,8
tick,0x7ff86ea82704,81859094,0,0x0,8
tick,0x7ff86ea82704,81861067,0,0x0,8
tick,0x7ff86ea82704,81862997,0,0x0,8
tick,0x7ff86ea82704,81865105,0,0x0,8
tick,0x7ff86ea82704,81867111,0,0x0,8
tick,0x7ff86ea82704,81869176,0,0x0,8
tick,0x7ff86ea82704,81870985,0,0x0,8
tick,0x7ff86ea82704,81873058,0,0x0,8
tick,0x7ff86ea82704,81874991,0,0x0,8
tick,0x7ff86ea82704,81877095,0,0x0,8
tick,0x7ff86ea82704,81879112,0,0x0,8
tick,0x7ff86ea82704,81880974,0,0x0,8
tick,0x7ff86ea82704,81882929,0,0x0,8
tick,0x7ff86ea82704,81884949,0,0x0,8
tick,0x7ff86ea82704,81887038,0,0x0,8
tick,0x7ff86ea82704,81888974,0,0x0,8
tick,0x7ff86ea82704,81890912,0,0x0,8
tick,0x7ff86ea82704,81893035,0,0x0,8
tick,0x7ff86ea82704,81894985,0,0x0,8
tick,0x7ff86ea82704,81897075,0,0x0,8
tick,0x7ff86ea82704,81898921,0,0x0,8
tick,0x7ff86ea82704,81901014,0,0x0,8
tick,0x7ff86ea82704,81902874,0,0x0,8
tick,0x7ff86ea82704,81904919,0,0x0,8
tick,0x7ff86ea82704,81906869,0,0x0,8
tick,0x7ff86ea82704,81908889,0,0x0,8
tick,0x7ff86ea82704,81910852,0,0x0,8
tick,0x7ff86ea82704,81912931,0,0x0,8
tick,0x7ff86ea82704,81914948,0,0x0,8
tick,0x7ff86ea82704,81916932,0,0x0,8
tick,0x7ff86ea82704,81918883,0,0x0,8
tick,0x7ff86ea82704,81920974,0,0x0,8
tick,0x7ff86ea82704,81922864,0,0x0,8
tick,0x7ff86ea82704,81924983,0,0x0,8
tick,0x7ff86ea82704,81926841,0,0x0,8
tick,0x7ff86ea82704,81928875,0,0x0,8
tick,0x7ff86ea82704,81930799,0,0x0,8
tick,0x7ff86ea82704,81932974,0,0x0,8
tick,0x7ff86ea82704,81934857,0,0x0,8
tick,0x7ff86ea82704,81937052,0,0x0,8
tick,0x7ff86ea82704,81938837,0,0x0,8
tick,0x7ff86ea82704,81940926,0,0x0,8
tick,0x7ff86ea82704,81942911,0,0x0,8
tick,0x7ff86ea82704,81944837,0,0x0,8
tick,0x7ff86ea82704,81946824,0,0x0,8
tick,0x7ff86ea82704,81948745,0,0x0,8
tick,0x7ff86ea82704,81950743,0,0x0,8
tick,0x7ff86ea82704,81952749,0,0x0,8
tick,0x7ff86ea82704,81954790,0,0x0,8
tick,0x7ff86ea82704,81956693,0,0x0,8
tick,0x7ff86ea82704,81958797,0,0x0,8
tick,0x7ff86ea82704,81960766,0,0x0,8
tick,0x7ff86ea82704,81963023,0,0x0,8
tick,0x7ff86ea82704,81964790,0,0x0,8
tick,0x7ff86ea82704,81966853,0,0x0,8
tick,0x7ff86ea82704,81968713,0,0x0,8
tick,0x7ff86ea82704,81970824,0,0x0,8
tick,0x7ff86ea82704,81972697,0,0x0,8
tick,0x7ff86ea82704,81974899,0,0x0,8
tick,0x7ff86ea82704,81976651,0,0x0,8
tick,0x7ff86ea82704,81978799,0,0x0,8
tick,0x7ff86ea82704,81980642,0,0x0,8
tick,0x7ff86ea82704,81982696,0,0x0,8
tick,0x7ff86ea82704,81984676,0,0x0,8
tick,0x7ff86ea82704,81986798,0,0x0,8
tick,0x7ff86ea82704,81988621,0,0x0,8
tick,0x7ff86ea82704,81990803,0,0x0,8
tick,0x7ff86ea82704,81992681,0,0x0,8
tick,0x7ff86ea82704,81994743,0,0x0,8
tick,0x7ff86ea82704,81996633,0,0x0,8
tick,0x7ff86ea82704,81998804,0,0x0,8
tick,0x7ff86ea82704,82000596,0,0x0,8
tick,0x7ff86ea82704,82002655,0,0x0,8
tick,0x7ff86ea82704,82004593,0,0x0,8
tick,0x7ff86ea82704,82006632,0,0x0,8
tick,0x7ff86ea82704,82008573,0,0x0,8
tick,0x7ff86ea82704,82010952,0,0x0,8
tick,0x7ff86ea82704,82012734,0,0x0,8
tick,0x7ff86ea82704,82014553,0,0x0,8
tick,0x7ff86ea82704,82016692,0,0x0,8
tick,0x7ff86ea82704,82018547,0,0x0,8
tick,0x7ff86ea82704,82020678,0,0x0,8
tick,0x7ff86ea82704,82022558,0,0x0,8
tick,0x7ff86ea82704,82024679,0,0x0,8
tick,0x7ff86ea82704,82026609,0,0x0,8
tick,0x7ff86ea82704,82028686,0,0x0,8
tick,0x7ff86ea82704,82030600,0,0x0,8
tick,0x7ff86ea82704,82032551,0,0x0,8
tick,0x7ff86ea82704,82034562,0,0x0,8
tick,0x7ff86ea82704,82036701,0,0x0,8
tick,0x7ff86ea82704,82038580,0,0x0,8
tick,0x7ff86ea82704,82040540,0,0x0,8
tick,0x7ff86ea82704,82042542,0,0x0,8
tick,0x7ff86ea82704,82044546,0,0x0,8
tick,0x7ff86ea82704,82046498,0,0x0,8
tick,0x7ff86ea82704,82048577,0,0x0,8
tick,0x7ff86ea82704,82050596,0,0x0,8
tick,0x7ff86ea82704,82052453,0,0x0,8
tick,0x7ff86ea82704,82054658,0,0x0,8
tick,0x7ff86ea82704,82056544,0,0x0,8
tick,0x7ff86ea82704,82058661,0,0x0,8
tick,0x7ff86ea82704,82060604,0,0x0,8
tick,0x7ff86ea82704,82062511,0,0x0,8
tick,0x7ff86ea82704,82064560,0,0x0,8
tick,0x7ff86ea82704,82066614,0,0x0,8
tick,0x7ff86ea82704,82068545,0,0x0,8
tick,0x7ff86ea82704,82070665,0,0x0,8
tick,0x7ff86ea82704,82072489,0,0x0,8
tick,0x7ff86ea82704,82074568,0,0x0,8
tick,0x7ff86ea82704,82076541,0,0x0,8
tick,0x7ff86ea82704,82078581,0,0x0,8
tick,0x7ff86ea82704,82080589,0,0x0,8
tick,0x7ff86ea82704,82082522,0,0x0,8
tick,0x7ff86ea82704,82084550,0,0x0,8
tick,0x7ff86ea82704,82086390,0,0x0,8
tick,0x7ff86ea82704,82088548,0,0x0,8
tick,0x7ff86ea82704,82090565,0,0x0,8
tick,0x7ff86ea82704,82092473,0,0x0,8
tick,0x7ff86ea82704,82094485,0,0x0,8
tick,0x7ff86ea82704,82096417,0,0x0,8
tick,0x7ff86ea82704,82098514,0,0x0,8
tick,0x7ff86ea82704,82100346,0,0x0,8
tick,0x7ff86ea82704,82102594,0,0x0,8
tick,0x7ff86ea82704,82104450,0,0x0,8
tick,0x7ff86ea82704,82106548,0,0x0,8
tick,0x7ff86ea82704,82108394,0,0x0,8
tick,0x7ff86ea82704,82110544,0,0x0,8
tick,0x7ff86ea82704,82112398,0,0x0,8
tick,0x7ff86ea82704,82114332,0,0x0,8
tick,0x7ff86ea82704,82116412,0,0x0,8
tick,0x7ff86ea82704,82118528,0,0x0,8
tick,0x7ff86ea82704,82120606,0,0x0,8
tick,0x7ff86ea82704,82122409,0,0x0,8
tick,0x7ff86ea82704,82124451,0,0x0,8
tick,0x7ff86ea82704,82126484,0,0x0,8
tick,0x7ff86ea82704,82128391,0,0x0,8
tick,0x7ff86ea82704,82130450,0,0x0,8
tick,0x7ff86ea82704,82132452,0,0x0,8
tick,0x7ff86ea82704,82134375,0,0x0,8
tick,0x7ff86ea82704,82136352,0,0x0,8
tick,0x7ff86ea82704,82138419,0,0x0,8
tick,0x7ff86ea82704,82140285,0,0x0,8
tick,0x7ff86ea82704,82142236,0,0x0,8
tick,0x7ff86ea82704,82144353,0,0x0,8
tick,0x7ff86ea82704,82146328,0,0x0,8
tick,0x7ff86ea82704,82148226,0,0x0,8
tick,0x7ff86ea82704,82150269,0,0x0,8
tick,0x7ff86ea82704,82152222,0,0x0,8
tick,0x7ff86ea82704,82154375,0,0x0,8
tick,0x7ff86ea82704,82156342,0,0x0,8
tick,0x7ff86ea82704,82158224,0,0x0,8
tick,0x7ff86ea82704,82160285,0,0x0,8
tick,0x7ff86ea82704,82162326,0,0x0,8
tick,0x7ff86ea82704,82164436,0,0x0,8
tick,0x7ff86ea82704,82166165,0,0x0,8
tick,0x7ff86ea82704,82168336,0,0x0,8
tick,0x7ff86ea82704,82170237,0,0x0,8
tick,0x7ff86ea82704,82172305,0,0x0,8
tick,0x7ff86ea82704,82174248,0,0x0,8
tick,0x7ff86ea82704,82176149,0,0x0,8
tick,0x7ff86ea82704,82178159,0,0x0,8
tick,0x7ff86ea82704,82180259,0,0x0,8
tick,0x7ff86ea82704,82182280,0,0x0,8
tick,0x7ff86ea82704,82184258,0,0x0,8
tick,0x7ff86ea82704,82186191,0,0x0,8
tick,0x7ff86ea82704,82188138,0,0x0,8
tick,0x7ff86ea82704,82190282,0,0x0,8
tick,0x7ff86ea82704,82192262,0,0x0,8
tick,0x7ff86ea82704,82194291,0,0x0,8
tick,0x7ff86ea82704,82196183,0,0x0,8
tick,0x7ff86ea82704,82198248,0,0x0,8
tick,0x7ff86ea82704,82200179,0,0x0,8
tick,0x7ff86ea82704,82202290,0,0x0,8
tick,0x7ff86ea82704,82204429,0,0x0,8
tick,0x7ff86ea82704,82206273,0,0x0,8
tick,0x7ff86ea82704,82208682,0,0x0,8
tick,0x7ff86ea82704,82210132,0,0x0,8
tick,0x7ff86ea82704,82212053,0,0x0,8
tick,0x7ff86ea82704,82214206,0,0x0,8
tick,0x7ff86ea82704,82216136,0,0x0,8
tick,0x7ff86ea82704,82218174,0,0x0,8
tick,0x7ff86ea82704,82220078,0,0x0,8
tick,0x7ff86ea82704,82222066,0,0x0,8
tick,0x7ff86ea82704,82224037,0,0x0,8
tick,0x7ff86ea82704,82226086,0,0x0,8
tick,0x7ff86ea82704,82228141,0,0x0,8
tick,0x7ff86ea82704,82230146,0,0x0,8
tick,0x7ff86ea82704,82232126,0,0x0,8
tick,0x7ff86ea82704,82234071,0,0x0,8
tick,0x7ff86ea82704,82236135,0,0x0,8
tick,0x7ff86ea82704,82238074,0,0x0,8
tick,0x7ff86ea82704,82240092,0,0x0,8
tick,0x7ff86ea82704,82242048,0,0x0,8
tick,0x7ff86ea82704,82244081,0,0x0,8
tick,0x7ff86ea82704,82246033,0,0x0,8
tick,0x7ff86ea82704,82248069,0,0x0,8
tick,0x7ff86ea82704,82250026,0,0x0,8
tick,0x7ff86ea82704,82252000,0,0x0,8
tick,0x7ff86ea82704,82253999,0,0x0,8
tick,0x7ff86ea82704,82256014,0,0x0,8
tick,0x7ff86ea82704,82258043,0,0x0,8
tick,0x7ff86ea82704,82259955,0,0x0,8
tick,0x7ff86ea82704,82261968,0,0x0,8
tick,0x7ff86ea82704,82264163,0,0x0,8
tick,0x7ff86ea82704,82266216,0,0x0,8
tick,0x7ff86ea82704,82267931,0,0x0,8
tick,0x7ff86ea82704,82270068,0,0x0,8
tick,0x7ff86ea82704,82272093,0,0x0,8
tick,0x7ff86ea82704,82273930,0,0x0,8
tick,0x7ff86ea82704,82278371,0,0x0,8
tick,0x7ff86ea82704,82280095,0,0x0,8
tick,0x7ff86ea82704,82282223,0,0x0,8
tick,0x7ff86ea82704,82284003,0,0x0,8
tick,0x7ff86ea82704,82286146,0,0x0,8
tick,0x7ff86ea82704,82288131,0,0x0,8
tick,0x7ff86ea82704,82290190,0,0x0,8
tick,0x7ff86ea82704,82292177,0,0x0,8
tick,0x7ff86ea82704,82294147,0,0x0,8
tick,0x7ff86ea82704,82296061,0,0x0,8
tick,0x7ff86ea82704,82298402,0,0x0,8
tick,0x7ff86ea82704,82300180,0,0x0,8
tick,0x7ff86ea82704,82302359,0,0x0,8
tick,0x7ff86ea82704,82303981,0,0x0,8
tick,0x7ff86ea82704,82306144,0,0x0,8
tick,0x7ff86ea82704,82308077,0,0x0,8
tick,0x7ff86ea82704,82310095,0,0x0,8
tick,0x7ff86ea82704,82312047,0,0x0,8
tick,0x7ff86ea82704,82314005,0,0x0,8
tick,0x7ff86ea82704,82315905,0,0x0,8
tick,0x7ff86ea82704,82318147,0,0x0,8
tick,0x7ff86ea82704,82320013,0,0x0,8
tick,0x7ff86ea82704,82322061,0,0x0,8
tick,0x7ff86ea82704,82323994,0,0x0,8
tick,0x7ff86ea82704,82326134,0,0x0,8
tick,0x7ff86ea82704,82327945,0,0x0,8
tick,0x7ff86ea82704,82329992,0,0x0,8
tick,0x7ff86ea82704,82332093,0,0x0,8
tick,0x7ff86ea82704,82333939,0,0x0,8
tick,0x7ff86ea82704,82336016,0,0x0,8
tick,0x7ff86ea82704,82337903,0,0x0,8
tick,0x7ff86ea82704,82340003,0,0x0,8
tick,0x7ff86ea82704,82341893,0,0x0,8
tick,0x7ff86ea82704,82343901,0,0x0,8
tick,0x7ff86ea82704,82345897,0,0x0,8
tick,0x7ff86ea82704,82348027,0,0x0,8
tick,0x7ff86ea82704,82350009,0,0x0,8
tick,0x7ff86ea82704,82352011,0,0x0,8
tick,0x7ff86ea82704,82353954,0,0x0,8
tick,0x7ff86ea82704,82356015,0,0x0,8
tick,0x7ff86ea82704,82357968,0,0x0,8
tick,0x7ff86ea82704,82360167,0,0x0,8
tick,0x7ff86ea82704,82362252,0,0x0,8
tick,0x7ff86ea82704,82364084,0,0x0,8
tick,0x7ff86ea82704,82365775,0,0x0,8
tick,0x7ff86ea82704,82368029,0,0x0,8
tick,0x7ff86ea82704,82369711,0,0x0,8
tick,0x7ff86ea82704,82371906,0,0x0,8
tick,0x7ff86ea82704,82373707,0,0x0,8
tick,0x7ff86ea82704,82375858,0,0x0,8
tick,0x7ff86ea82704,82377768,0,0x0,8
tick,0x7ff86ea82704,82379843,0,0x0,8
tick,0x7ff86ea82704,82382180,0,0x0,8
tick,0x7ff86ea82704,82383991,0,0x0,8
tick,0x7ff86ea82704,82385829,0,0x0,8
tick,0x7ff86ea82704,82387768,0,0x0,8
tick,0x7ff86ea82704,82389840,0,0x0,8
tick,0x7ff86ea82704,82391872,0,0x0,8
tick,0x7ff86ea82704,82393749,0,0x0,8
tick,0x7ff86ea82704,82396038,0,0x0,8
tick,0x7ff86ea82704,82398073,0,0x0,8
tick,0x7ff86ea82704,82400030,0,0x0,8
tick,0x7ff86ea82704,82401784,0,0x0,8
tick,0x7ff86ea82704,82403716,0,0x0,8
tick,0x7ff86ea82704,82405883,0,0x0,8
tick,0x7ff86ea82704,82407872,0,0x0,8
tick,0x7ff86ea82704,82409744,0,0x0,8
tick,0x7ff86ea82704,82411856,0,0x0,8
tick,0x7ff86ea82704,82413820,0,0x0,8
tick,0x7ff86ea82704,82415888,0,0x0,8
tick,0x7ff86ea82704,82417980,0,0x0,8
tick,0x7ff86ea82704,82419777,0,0x0,8
tick,0x7ff86ea82704,82421886,0,0x0,8
tick,0x7ff86ea82704,82423826,0,0x0,8
tick,0x7ff86ea82704,82425723,0,0x0,8
tick,0x7ff86ea82704,82427692,0,0x0,8
tick,0x7ff86ea82704,82429987,0,0x0,8
tick,0x7ff86ea82704,82431934,0,0x0,8
tick,0x7ff86ea82704,82433702,0,0x0,8
tick,0x7ff86ea82704,82435776,0,0x0,8
tick,0x7ff86ea82704,82437772,0,0x0,8
tick,0x7ff86ea82704,82439929,0,0x0,8
tick,0x7ff86ea82704,82441837,0,0x0,8
tick,0x7ff86ea82704,82443831,0,0x0,8
tick,0x7ff86ea82704,82445935,0,0x0,8
tick,0x7ff86ea82704,82448439,0,0x0,8
tick,0x7ff86ea82704,82450347,0,0x0,8
tick,0x7ff86ea82704,82452352,0,0x0,8
tick,0x7ff86ea82704,82454567,0,0x0,8
tick,0x7ff86ea82704,82456347,0,0x0,8
tick,0x7ff86ea82704,82458371,0,0x0,8
tick,0x7ff86ea82704,82460276,0,0x0,8
tick,0x7ff86ea82704,82462533,0,0x0,8
tick,0x7ff86ea82704,82464459,0,0x0,8
tick,0x7ff86ea82704,82466341,0,0x0,8
tick,0x7ff86ea82704,82468274,0,0x0,8
tick,0x7ff86ea82704,82470321,0,0x0,8
tick,0x7ff86ea82704,82472291,0,0x0,8
tick,0x7ff86ea82704,82474356,0,0x0,8
tick,0x7ff86ea82704,82476283,0,0x0,8
tick,0x7ff86ea82704,82478560,0,0x0,8
tick,0x7ff86ea82704,82480529,0,0x0,8
tick,0x7ff86ea82704,82482358,0,0x0,8
tick,0x7ff86ea82704,82484271,0,0x0,8
tick,0x7ff86ea82704,82486278,0,0x0,8
tick,0x7ff86ea82704,82488332,0,0x0,8
tick,0x7ff86ea82704,82490250,0,0x0,8
tick,0x7ff86ea82704,82492295,0,0x0,8
tick,0x7ff86ea82704,82494325,0,0x0,8
tick,0x7ff86ea82704,82496319,0,0x0,8
tick,0x7ff86ea82704,82498260,0,0x0,8
tick,0x7ff86ea82704,82500304,0,0x0,8
tick,0x7ff86ea82704,82502175,0,0x0,8
tick,0x7ff86ea82704,82504243,0,0x0,8
tick,0x7ff86ea82704,82506170,0,0x0,8
tick,0x7ff86ea82704,82508369,0,0x0,8
tick,0x7ff86ea82704,82510162,0,0x0,8
tick,0x7ff86ea82704,82512247,0,0x0,8
tick,0x7ff86ea82704,82514426,0,0x0,8
tick,0x7ff86ea82704,82516167,0,0x0,8
tick,0x7ff86ea82704,82518251,0,0x0,8
tick,0x7ff86ea82704,82520196,0,0x0,8
tick,0x7ff86ea82704,82522176,0,0x0,8
tick,0x7ff86ea82704,82524224,0,0x0,8
tick,0x7ff86ea82704,82526233,0,0x0,8
tick,0x7ff86ea82704,82528181,0,0x0,8
tick,0x7ff86ea82704,82530279,0,0x0,8
tick,0x7ff86ea82704,82532194,0,0x0,8
tick,0x7ff86ea82704,82534100,0,0x0,8
tick,0x7ff86ea82704,82536241,0,0x0,8
tick,0x7ff86ea82704,82538128,0,0x0,8
tick,0x7ff86ea82704,82540192,0,0x0,8
tick,0x7ff86ea82704,82542101,0,0x0,8
tick,0x7ff86ea82704,82544197,0,0x0,8
tick,0x7ff86ea82704,82546141,0,0x0,8
tick,0x7ff86ea82704,82548158,0,0x0,8
tick,0x7ff86ea82704,82550104,0,0x0,8
tick,0x7ff86ea82704,82552168,0,0x0,8
tick,0x7ff86ea82704,82554022,0,0x0,8
tick,0x7ff86ea82704,82556138,0,0x0,8
tick,0x7ff86ea82704,82558069,0,0x0,8
tick,0x7ff86ea82704,82560194,0,0x0,8
tick,0x7ff86ea82704,82562073,0,0x0,8
tick,0x7ff86ea82704,82564278,0,0x0,8
tick,0x7ff86ea82704,82566063,0,0x0,8
tick,0x7ff86ea82704,82568132,0,0x0,8
tick,0x7ff86ea82704,82570034,0,0x0,8
tick,0x7ff86ea82704,82572103,0,0x0,8
tick,0x7ff86ea82704,82574064,0,0x0,8
tick,0x7ff86ea82704,82576060,0,0x0,8
tick,0x7ff86ea82704,82577999,0,0x0,8
tick,0x7ff86ea82704,82580218,0,0x0,8
tick,0x7ff86ea82704,82581970,0,0x0,8
tick,0x7ff86ea82704,82584098,0,0x0,8
tick,0x7ff86ea82704,82586004,0,0x0,8
tick,0x7ff86ea82704,82588035,0,0x0,8
tick,0x7ff86ea82704,82590008,0,0x0,8
tick,0x7ff86ea82704,82591988,0,0x0,8
tick,0x7ff86ea82704,82594010,0,0x0,8
tick,0x7ff86ea82704,82595920,0,0x0,8
tick,0x7ff86ea82704,82598033,0,0x0,8
tick,0x7ff86ea82704,82599930,0,0x0,8
tick,0x7ff86ea82704,82602019,0,0x0,8
tick,0x7ff86ea82704,82603948,0,0x0,8
tick,0x7ff86ea82704,82606002,0,0x0,8
tick,0x7ff86ea82704,82607927,0,0x0,8
tick,0x7ff86ea82704,82609900,0,0x0,8
tick,0x7ff86ea82704,82612141,0,0x0,8
tick,0x7ff86ea82704,82613979,0,0x0,8
tick,0x7ff86ea82704,82615991,0,0x0,8
tick,0x7ff86ea82704,82617905,0,0x0,8
tick,0x7ff86ea82704,82619897,0,0x0,8
tick,0x7ff86ea82704,82621912,0,0x0,8
tick,0x7ff86ea82704,82623902,0,0x0,8
tick,0x7ff86ea82704,82625826,0,0x0,8
tick,0x7ff86ea82704,82627920,0,0x0,8
tick,0x7ff86ea82704,82629909,0,0x0,8
tick,0x7ff86ea82704,82631958,0,0x0,8
tick,0x7ff86ea82704,82633893,0,0x0,8
tick,0x7ff86ea82704,82635868,0,0x0,8
tick,0x7ff86ea82704,82637871,0,0x0,8
tick,0x7ff86ea82704,82639897,0,0x0,8
tick,0x7ff86ea82704,82641832,0,0x0,8
tick,0x7ff86ea82704,82643903,0,0x0,8
tick,0x7ff86ea82704,82645923,0,0x0,8
tick,0x7ff86ea82704,82648082,0,0x0,8
tick,0x7ff86ea82704,82649880,0,0x0,8
tick,0x7ff86ea82704,82651886,0,0x0,8
tick,0x7ff86ea82704,82653911,0,0x0,8
tick,0x7ff86ea82704,82655909,0,0x0,8
tick,0x7ff86ea82704,82657882,0,0x0,8
tick,0x7ff86ea82704,82659831,0,0x0,8
tick,0x7ff86ea82704,82662069,0,0x0,8
tick,0x7ff86ea82704,82663754,0,0x0,8
tick,0x7ff86ea82704,82665831,0,0x0,8
tick,0x7ff86ea82704,82667727,0,0x0,8
tick,0x7ff86ea82704,82669846,0,0x0,8
tick,0x7ff86ea82704,82671786,0,0x0,8
tick,0x7ff86ea82704,82673773,0,0x0,8
tick,0x7ff86ea82704,82675864,0,0x0,8
tick,0x7ff86ea82704,82677851,0,0x0,8
tick,0x7ff86ea82704,82679815,0,0x0,8
tick,0x7ff86ea82704,82681847,0,0x0,8
tick,0x7ff86ea82704,82683730,0,0x0,8
tick,0x7ff86ea82704,82685749,0,0x0,8
tick,0x7ff86ea82704,82687728,0,0x0,8
tick,0x7ff86ea82704,82689845,0,0x0,8
tick,0x7ff86ea82704,82691736,0,0x0,8
tick,0x7ff86ea82704,82693741,0,0x0,8
tick,0x7ff86ea82704,82695664,0,0x0,8
tick,0x7ff86ea82704,82697823,0,0x0,8
tick,0x7ff86ea82704,82699629,0,0x0,8
tick,0x7ff86ea82704,82701737,0,0x0,8
tick,0x7ff86ea82704,82703639,0,0x0,8
tick,0x7ff86ea82704,82705734,0,0x0,8
tick,0x7ff86ea82704,82707685,0,0x0,8
tick,0x7ff86ea82704,82709766,0,0x0,8
tick,0x7ff86ea82704,82711735,0,0x0,8
tick,0x7ff86ea82704,82713861,0,0x0,8
tick,0x7ff86ea82704,82715722,0,0x0,8
tick,0x7ff86ea82704,82717663,0,0x0,8
tick,0x7ff86ea82704,82719647,0,0x0,8
tick,0x7ff86ea82704,82721697,0,0x0,8
tick,0x7ff86ea82704,82723701,0,0x0,8
tick,0x7ff86ea82704,82725707,0,0x0,8
tick,0x7ff86ea82704,82727726,0,0x0,8
tick,0x7ff86ea82704,82729737,0,0x0,8
tick,0x7ff86ea82704,82731671,0,0x0,8
tick,0x7ff86ea82704,82733676,0,0x0,8
tick,0x7ff86ea82704,82735644,0,0x0,8
tick,0x7ff86ea82704,82737554,0,0x0,8
tick,0x7ff86ea82704,82739609,0,0x0,8
tick,0x7ff86ea82704,82741536,0,0x0,8
tick,0x7ff86ea82704,82743657,0,0x0,8
tick,0x7ff86ea82704,82745784,0,0x0,8
tick,0x7ff86ea82704,82747675,0,0x0,8
tick,0x7ff86ea82704,82749561,0,0x0,8
tick,0x7ff86ea82704,82751660,0,0x0,8
tick,0x7ff86ea82704,82753667,0,0x0,8
tick,0x7ff86ea82704,82755610,0,0x0,8
tick,0x7ff86ea82704,82757553,0,0x0,8
tick,0x7ff86ea82704,82759612,0,0x0,8
tick,0x7ff86ea82704,82761600,0,0x0,8
tick,0x7ff86ea82704,82763591,0,0x0,8
tick,0x7ff86ea82704,82765555,0,0x0,8
tick,0x7ff86ea82704,82767508,0,0x0,8
tick,0x7ff86ea82704,82769696,0,0x0,8
tick,0x7ff86ea82704,82771489,0,0x0,8
tick,0x7ff86ea82704,82773569,0,0x0,8
tick,0x7ff86ea82704,82775726,0,0x0,8
tick,0x7ff86ea82704,82777620,0,0x0,8
tick,0x7ff86ea82704,82779599,0,0x0,8
tick,0x7ff86ea82704,82781635,0,0x0,8
tick,0x7ff86ea82704,82783689,0,0x0,8
tick,0x7ff86ea82704,82785553,0,0x0,8
tick,0x7ff86ea82704,82787457,0,0x0,8
tick,0x7ff86ea82704,82789570,0,0x0,8
tick,0x7ff86ea82704,82791909,0,0x0,8
tick,0x7ff86ea82704,82793596,0,0x0,8
tick,0x7ff86ea82704,82795638,0,0x0,8
tick,0x7ff86ea82704,82797535,0,0x0,8
tick,0x7ff86ea82704,82799585,0,0x0,8
tick,0x7ff86ea82704,82801428,0,0x0,8
tick,0x7ff86ea82704,82803504,0,0x0,8
tick,0x7ff86ea82704,82805634,0,0x0,8
tick,0x7ff86ea82704,82807497,0,0x0,8
tick,0x7ff86ea82704,82809489,0,0x0,8
tick,0x7ff86ea82704,82811386,0,0x0,8
tick,0x7ff86ea82704,82813646,0,0x0,8
tick,0x7ff86ea82704,82815576,0,0x0,8
tick,0x7ff86ea82704,82817469,0,0x0,8
tick,0x7ff86ea82704,82819437,0,0x0,8
tick,0x7ff86ea82704,82821406,0,0x0,8
tick,0x7ff86ea82704,82823369,0,0x0,8
tick,0x7ff86ea82704,82825468,0,0x0,8
tick,0x7ff86ea82704,82827352,0,0x0,8
tick,0x7ff86ea82704,82829653,0,0x0,8
tick,0x7ff86ea82704,82831663,0,0x0,8
tick,0x7ff86ea82704,82833461,0,0x0,8
tick,0x7ff86ea82704,82835332,0,0x0,8
tick,0x7ff86ea82704,82837484,0,0x0,8
tick,0x7ff86ea82704,82839562,0,0x0,8
tick,0x7ff86ea82704,82842042,0,0x0,8
tick,0x7ff86ea82704,82843574,0,0x0,8
tick,0x7ff86ea82704,82847539,0,0x0,8
tick,0x7ff86ea82704,82848678,0,0x0,8
tick,0x7ff86ea82704,82850876,0,0x0,8
tick,0x7ff86ea82704,82853057,0,0x0,8
tick,0x7ff86ea82704,82854483,0,0x0,8
tick,0x7ff86ea82704,82859393,0,0x0,8
tick,0x7ff86ea82704,82861324,0,0x0,8
tick,0x7ff86ea82704,82866373,0,0x0,8
tick,0x7ff86ea82704,82868530,0,0x0,8
tick,0x7ff86ea82704,82870566,0,0x0,8
tick,0x7ff86ea82704,82872525,0,0x0,8
tick,0x7ff86ea82704,82874451,0,0x0,8
tick,0x7ff86ea82704,82877042,0,0x0,8
tick,0x7ff86ea82704,82884823,0,0x0,8
tick,0x7ff86ea82704,82886464,0,0x0,8
tick,0x7ff86ea82704,82888355,0,0x0,8
tick,0x7ff86ea82704,82890393,0,0x0,8
tick,0x7ff86ea82704,82892276,0,0x0,8
tick,0x7ff86ea82704,82894302,0,0x0,8
tick,0x7ff86ea82704,82897260,0,0x0,8
tick,0x7ff86ea82704,82898862,0,0x0,8
tick,0x7ff86ea82704,82900645,0,0x0,8
tick,0x7ff86ea82704,82902272,0,0x0,8
tick,0x7ff86ea82704,82904407,0,0x0,8
tick,0x7ff86ea82704,82906254,0,0x0,8
tick,0x7ff86ea82704,82908336,0,0x0,8
tick,0x7ff86ea82704,82910365,0,0x0,8
tick,0x7ff86ea82704,82912897,0,0x0,8
tick,0x7ff86ea82704,82914541,0,0x0,8
tick,0x7ff86ea82704,82916976,0,0x0,8
tick,0x7ff86ea82704,82918381,0,0x0,8
tick,0x7ff86ea82704,82920362,0,0x0,8
tick,0x7ff86ea82704,82922170,0,0x0,8
tick,0x7ff86ea82704,82924249,0,0x0,8
tick,0x7ff86ea82704,82926172,0,0x0,8
tick,0x7ff86ea82704,82928381,0,0x0,8
tick,0x7ff86ea82704,82930652,0,0x0,8
tick,0x7ff86ea82704,82932676,0,0x0,8
tick,0x7ff86ea82704,82934519,0,0x0,8
tick,0x7ff86ea82704,82936374,0,0x0,8
tick,0x7ff86ea82704,82938230,0,0x0,8
tick,0x7ff86ea82704,82940363,0,0x0,8
tick,0x7ff86ea82704,82942233,0,0x0,8
tick,0x7ff86ea82704,82944245,0,0x0,8
tick,0x7ff86ea82704,82946894,0,0x0,8
tick,0x7ff86ea82704,82948283,0,0x0,8
tick,0x7ff86ea82704,82950383,0,0x0,8
tick,0x7ff86ea82704,82952147,0,0x0,8
tick,0x7ff86ea82704,82954172,0,0x0,8
tick,0x7ff86ea82704,82956192,0,0x0,8
tick,0x7ff86ea82704,82958096,0,0x0,8
tick,0x7ff86ea82704,82960149,0,0x0,8
tick,0x7ff86ea82704,82962927,0,0x0,8
tick,0x7ff86ea82704,82964531,0,0x0,8
tick,0x7ff86ea82704,82966567,0,0x0,8
tick,0x7ff86ea82704,82968139,0,0x0,8
tick,0x7ff86ea82704,82970069,0,0x0,8
tick,0x7ff86ea82704,82972070,0,0x0,8
tick,0x7ff86ea82704,82974204,0,0x0,8
tick,0x7ff86ea82704,82976121,0,0x0,8
tick,0x7ff86ea82704,82978061,0,0x0,8
tick,0x7ff86ea82704,82980571,0,0x0,8
tick,0x7ff86ea82704,82982145,0,0x0,8
tick,0x7ff86ea82704,82984182,0,0x0,8
tick,0x7ff86ea82704,82986077,0,0x0,8
tick,0x7ff86ea82704,82988135,0,0x0,8
tick,0x7ff86ea82704,82990037,0,0x0,8
tick,0x7ff86ea82704,82992050,0,0x0,8
tick,0x7ff86ea82704,82994071,0,0x0,8
tick,0x7ff86ea82704,82996667,0,0x0,8
tick,0x7ff86ea82704,82997950,0,0x0,8
tick,0x7ff86ea82704,82999911,0,0x0,8
tick,0x7ff86ea82704,83001997,0,0x0,8
tick,0x7ff86ea82704,83003967,0,0x0,8
tick,0x7ff86ea82704,83006112,0,0x0,8
tick,0x7ff86ea82704,83007978,0,0x0,8
tick,0x7ff86ea82704,83010012,0,0x0,8
tick,0x7ff86ea82704,83012659,0,0x0,8
tick,0x7ff86ea82704,83014130,0,0x0,8
tick,0x7ff86ea82704,83016123,0,0x0,8
tick,0x7ff86ea82704,83017895,0,0x0,8
tick,0x7ff86ea82704,83019957,0,0x0,8
tick,0x7ff86ea82704,83022009,0,0x0,8
tick,0x7ff86ea82704,83023958,0,0x0,8
tick,0x7ff86ea82704,83025910,0,0x0,8
tick,0x7ff86ea82704,83027899,0,0x0,8
tick,0x7ff86ea82704,83029955,0,0x0,8
tick,0x7ff86ea82704,83031872,0,0x0,8
tick,0x7ff86ea82704,83033997,0,0x0,8
tick,0x7ff86ea82704,83035992,0,0x0,8
tick,0x7ff86ea82704,83037752,0,0x0,8
tick,0x7ff86ea82704,83039813,0,0x0,8
tick,0x7ff86ea82704,83041961,0,0x0,8
tick,0x7ff86ea82704,83043818,0,0x0,8
tick,0x7ff86ea82704,83047121,0,0x0,8
tick,0x7ff86ea82704,83049059,0,0x0,8
tick,0x7ff86ea82704,83050851,0,0x0,8
tick,0x7ff86ea82704,83053015,0,0x0,8
tick,0x7ff86ea82704,83054867,0,0x0,8
tick,0x7ff86ea82704,83056986,0,0x0,8
tick,0x7ff86ea82704,83058780,0,0x0,8
tick,0x7ff86ea82704,83061209,0,0x0,8
tick,0x7ff86ea82704,83064035,0,0x0,8
tick,0x7ff86ea82704,83066033,0,0x0,8
tick,0x7ff86ea82704,83067878,0,0x0,8
tick,0x7ff86ea82704,83070044,0,0x0,8
tick,0x7ff86ea82704,83071924,0,0x0,8
tick,0x7ff86ea82704,83073952,0,0x0,8
tick,0x7ff86ea82704,83075912,0,0x0,8
tick,0x7ff86ea82704,83078009,0,0x0,8
tick,0x7ff86ea82704,83080215,0,0x0,8
tick,0x7ff86ea82704,83081941,0,0x0,8
tick,0x7ff86ea82704,83084022,0,0x0,8
tick,0x7ff86ea82704,83085909,0,0x0,8
tick,0x7ff86ea82704,83087906,0,0x0,8
tick,0x7ff86ea82704,83089822,0,0x0,8
tick,0x7ff86ea82704,83091711,0,0x0,8
tick,0x7ff86ea82704,83093934,0,0x0,8
tick,0x7ff86ea82704,83096453,0,0x0,8
tick,0x7ff86ea82704,83098104,0,0x0,8
tick,0x7ff86ea82704,83100048,0,0x0,8
tick,0x7ff86ea82704,83101893,0,0x0,8
tick,0x7ff86ea82704,83103908,0,0x0,8
tick,0x7ff86ea82704,83105726,0,0x0,8
tick,0x7ff86ea82704,83107807,0,0x0,8
tick,0x7ff86ea82704,83109764,0,0x0,8
tick,0x7ff86ea82704,83112087,0,0x0,8
tick,0x7ff86ea82704,83114161,0,0x0,8
tick,0x7ff86ea82704,83115949,0,0x0,8
tick,0x7ff86ea82704,83117734,0,0x0,8
tick,0x7ff86ea82704,83119830,0,0x0,8
tick,0x7ff86ea82704,83121892,0,0x0,8
tick,0x7ff86ea82704,83123920,0,0x0,8
tick,0x7ff86ea82704,83125918,0,0x0,8
tick,0x7ff86ea82704,83127867,0,0x0,8
tick,0x7ff86ea82704,83131683,0,0x0,8
tick,0x7ff86ea82704,83132976,0,0x0,8
tick,0x7ff86ea82704,83134724,0,0x0,8
tick,0x7ff86ea82704,83136908,0,0x0,8
tick,0x7ff86ea82704,83139015,0,0x0,8
tick,0x7ff86ea82704,83140854,0,0x0,8
tick,0x7ff86ea82704,83142810,0,0x0,8
tick,0x7ff86ea82704,83144879,0,0x0,8
tick,0x7ff86ea82704,83147996,0,0x0,8
tick,0x7ff86ea82704,83150008,0,0x0,8
tick,0x7ff86ea82704,83151926,0,0x0,8
tick,0x7ff86ea82704,83154027,0,0x0,8
tick,0x7ff86ea82704,83156421,0,0x0,8
tick,0x7ff86ea82704,83157624,0,0x0,8
tick,0x7ff86ea82704,83159678,0,0x0,8
tick,0x7ff86ea82704,83161709,0,0x0,8
tick,0x7ff86ea82704,83165213,0,0x0,8
tick,0x7ff86ea82704,83165746,0,0x0,8
tick,0x7ff86ea82704,83167738,0,0x0,8
tick,0x7ff86ea82704,83169863,0,0x0,8
tick,0x7ff86ea82704,83172718,0,0x0,8
tick,0x7ff86ea82704,83175287,0,0x0,8
tick,0x7ff86ea82704,83176854,0,0x0,8
tick,0x7ff86ea82704,83181293,0,0x0,8
tick,0x7ff86ea82704,83181338,0,0x0,8
tick,0x7ff86ea82704,83182730,0,0x0,8
tick,0x7ff86ea82704,83184968,0,0x0,8
tick,0x7ff86ea82704,83186607,0,0x0,8
tick,0x7ff86ea82704,83188445,0,0x0,8
tick,0x7ff86ea82704,83190641,0,0x0,8
tick,0x7ff86ea82704,83192516,0,0x0,8
tick,0x7ff86ea82704,83194646,0,0x0,8
tick,0x7ff86ea82704,83198619,0,0x0,8
tick,0x7ff86ea82704,83200612,0,0x0,8
tick,0x7ff86ea82704,83202466,0,0x0,8
tick,0x7ff86ea82704,83204544,0,0x0,8
tick,0x7ff86ea82704,83207950,0,0x0,8
tick,0x7ff86ea82704,83209928,0,0x0,8
tick,0x7ff86ea82704,83211621,0,0x0,8
tick,0x7ff86ea82704,83214983,0,0x0,8
tick,0x7ff86ea82704,83216385,0,0x0,8
tick,0x7ff86ea82704,83218492,0,0x0,8
tick,0x7ff86ea82704,83220385,0,0x0,8
tick,0x7ff86ea82704,83222354,0,0x0,8
tick,0x7ff86ea82704,83224412,0,0x0,8
tick,0x7ff86ea82704,83226460,0,0x0,8
tick,0x7ff86ea82704,83228391,0,0x0,8
tick,0x7ff86ea82704,83231056,0,0x0,8
tick,0x7ff86ea82704,83232462,0,0x0,8
tick,0x7ff86ea82704,83234424,0,0x0,8
tick,0x7ff86ea82704,83236372,0,0x0,8
tick,0x7ff86ea82704,83238336,0,0x0,8
tick,0x7ff86ea82704,83240611,0,0x0,8
tick,0x7ff86ea82704,83242655,0,0x0,8
tick,0x7ff86ea82704,83244572,0,0x0,8
tick,0x7ff86ea82704,83248007,0,0x0,8
tick,0x7ff86ea82704,83248500,0,0x0,8
tick,0x7ff86ea82704,83250497,0,0x0,8
tick,0x7ff86ea82704,83252363,0,0x0,8
tick,0x7ff86ea82704,83254496,0,0x0,8
tick,0x7ff86ea82704,83256761,0,0x0,8
tick,0x7ff86ea82704,83258587,0,0x0,8
tick,0x7ff86ea82704,83260301,0,0x0,8
tick,0x7ff86ea82704,83263094,0,0x0,8
tick,0x7ff86ea82704,83264754,0,0x0,8
tick,0x7ff86ea82704,83266347,0,0x0,8
tick,0x7ff86ea82704,83268253,0,0x0,8
tick,0x7ff86ea82704,83270374,0,0x0,8
tick,0x7ff86ea82704,83272175,0,0x0,8
tick,0x7ff86ea82704,83274480,0,0x0,8
tick,0x7ff86ea82704,83276159,0,0x0,8
tick,0x7ff86ea82704,83278398,0,0x0,8
tick,0x7ff86ea82704,83280928,0,0x0,8
tick,0x7ff86ea82704,83282307,0,0x0,8
tick,0x7ff86ea82704,83284322,0,0x0,8
tick,0x7ff86ea82704,83286458,0,0x0,8
tick,0x7ff86ea82704,83288538,0,0x0,8
tick,0x7ff86ea82704,83290235,0,0x0,8
tick,0x7ff86ea82704,83292299,0,0x0,8
tick,0x7ff86ea82704,83294486,0,0x0,8
tick,0x7ff86ea82704,83296294,0,0x0,8
tick,0x7ff86ea82704,83298298,0,0x0,8
tick,0x7ff86ea82704,83300167,0,0x0,8
tick,0x7ff86ea82704,83302279,0,0x0,8
tick,0x7ff86ea82704,83304286,0,0x0,8
tick,0x7ff86ea82704,83306357,0,0x0,8
tick,0x7ff86ea82704,83308294,0,0x0,8
tick,0x7ff86ea82704,83310259,0,0x0,8
tick,0x7ff86ea82704,83313157,0,0x0,8
tick,0x7ff86ea82704,83315198,0,0x0,8
tick,0x7ff86ea82704,83317292,0,0x0,8
tick,0x7ff86ea82704,83319056,0,0x0,8
tick,0x7ff86ea82704,83321224,0,0x0,8
tick,0x7ff86ea82704,83323193,0,0x0,8
tick,0x7ff86ea82704,83325214,0,0x0,8
tick,0x7ff86ea82704,83327144,0,0x0,8
tick,0x7ff86ea82704,83329786,0,0x0,8
tick,0x7ff86ea82704,83331676,0,0x0,8
tick,0x7ff86ea82704,83333358,0,0x0,8
tick,0x7ff86ea82704,83335297,0,0x0,8
tick,0x7ff86ea82704,83337083,0,0x0,8
tick,0x7ff86ea82704,83339164,0,0x0,8
tick,0x7ff86ea82704,83341037,0,0x0,8
tick,0x7ff86ea82704,83343127,0,0x0,8
tick,0x7ff86ea82704,83345343,0,0x0,8
tick,0x7ff86ea82704,83347308,0,0x0,8
tick,0x7ff86ea82704,83349137,0,0x0,8
tick,0x7ff86ea82704,83350998,0,0x0,8
tick,0x7ff86ea82704,83353137,0,0x0,8
tick,0x7ff86ea82704,83354967,0,0x0,8
tick,0x7ff86ea82704,83357120,0,0x0,8
tick,0x7ff86ea82704,83359018,0,0x0,8
tick,0x7ff86ea82704,83361046,0,0x0,8
tick,0x7ff86ea82704,83363167,0,0x0,8
tick,0x7ff86ea82704,83365059,0,0x0,8
tick,0x7ff86ea82704,83366984,0,0x0,8
tick,0x7ff86ea82704,83369067,0,0x0,8
tick,0x7ff86ea82704,83370928,0,0x0,8
tick,0x7ff86ea82704,83373065,0,0x0,8
tick,0x7ff86ea82704,83374893,0,0x0,8
tick,0x7ff86ea82704,83377046,0,0x0,8
tick,0x7ff86ea82704,83379456,0,0x0,8
tick,0x7ff86ea82704,83381678,0,0x0,8
tick,0x7ff86ea82704,83382874,0,0x0,8
tick,0x7ff86ea82704,83384966,0,0x0,8
tick,0x7ff86ea82704,83386945,0,0x0,8
tick,0x7ff86ea82704,83388952,0,0x0,8
tick,0x7ff86ea82704,83390906,0,0x0,8
tick,0x7ff86ea82704,83392922,0,0x0,8
tick,0x7ff86ea82704,83394832,0,0x0,8
tick,0x7ff86ea82704,83397457,0,0x0,8
tick,0x7ff86ea82704,83398861,0,0x0,8
tick,0x7ff86ea82704,83400855,0,0x0,8
tick,0x7ff86ea82704,83402841,0,0x0,8
tick,0x7ff86ea82704,83405005,0,0x0,8
tick,0x7ff86ea82704,83406948,0,0x0,8
tick,0x7ff86ea82704,83408820,0,0x0,8
tick,0x7ff86ea82704,83410996,0,0x0,8
tick,0x7ff86ea82704,83413890,0,0x0,8
tick,0x7ff86ea82704,83414913,0,0x0,8
tick,0x7ff86ea82704,83416983,0,0x0,8
tick,0x7ff86ea82704,83418970,0,0x0,8
tick,0x7ff86ea82704,83420929,0,0x0,8
tick,0x7ff86ea82704,83422922,0,0x0,8
tick,0x7ff86ea82704,83424921,0,0x0,8
tick,0x7ff86ea82704,83427444,0,0x0,8
tick,0x7ff86ea82704,83429055,0,0x0,8
tick,0x7ff86ea82704,83431333,0,0x0,8
tick,0x7ff86ea82704,83432850,0,0x0,8
tick,0x7ff86ea82704,83435100,0,0x0,8
tick,0x7ff86ea82704,83436782,0,0x0,8
tick,0x7ff86ea82704,83438907,0,0x0,8
tick,0x7ff86ea82704,83440772,0,0x0,8
tick,0x7ff86ea82704,83442921,0,0x0,8
tick,0x7ff86ea82704,83444778,0,0x0,8
tick,0x7ff86ea82704,83447553,0,0x0,8
tick,0x7ff86ea82704,83448876,0,0x0,8
tick,0x7ff86ea82704,83450916,0,0x0,8
tick,0x7ff86ea82704,83452926,0,0x0,8
tick,0x7ff86ea82704,83454801,0,0x0,8
tick,0x7ff86ea82704,83457042,0,0x0,8
tick,0x7ff86ea82704,83458841,0,0x0,8
tick,0x7ff86ea82704,83460971,0,0x0,8
tick,0x7ff86ea82704,83463839,0,0x0,8
tick,0x7ff86ea82704,83465921,0,0x0,8
tick,0x7ff86ea82704,83467851,0,0x0,8
tick,0x7ff86ea82704,83469878,0,0x0,8
tick,0x7ff86ea82704,83471828,0,0x0,8
tick,0x7ff86ea82704,83473765,0,0x0,8
tick,0x7ff86ea82704,83475781,0,0x0,8
tick,0x7ff86ea82704,83477836,0,0x0,8
tick,0x7ff86ea82704,83480160,0,0x0,8
tick,0x7ff86ea82704,83482073,0,0x0,8
tick,0x7ff86ea82704,83483815,0,0x0,8
tick,0x7ff86ea82704,83485802,0,0x0,8
tick,0x7ff86ea82704,83487892,0,0x0,8
tick,0x7ff86ea82704,83489988,0,0x0,8
tick,0x7ff86ea82704,83491750,0,0x0,8
tick,0x7ff86ea82704,83493764,0,0x0,8
tick,0x7ff86ea82704,83495835,0,0x0,8
tick,0x7ff86ea82704,83498078,0,0x0,8
tick,0x7ff86ea82704,83499785,0,0x0,8
tick,0x7ff86ea82704,83502039,0,0x0,8
tick,0x7ff86ea82704,83503721,0,0x0,8
tick,0x7ff86ea82704,83505880,0,0x0,8
tick,0x7ff86ea82704,83507957,0,0x0,8
tick,0x7ff86ea82704,83509685,0,0x0,8
tick,0x7ff86ea82704,83511956,0,0x0,8
tick,0x7ff86ea82704,83514300,0,0x0,8
tick,0x7ff86ea82704,83515738,0,0x0,8
tick,0x7ff86ea82704,83517531,0,0x0,8
tick,0x7ff86ea82704,83519747,0,0x0,8
tick,0x7ff86ea82704,83521965,0,0x0,8
tick,0x7ff86ea82704,83523637,0,0x0,8
tick,0x7ff86ea82704,83525489,0,0x0,8
tick,0x7ff86ea82704,83527670,0,0x0,8
tick,0x7ff86ea82704,83530773,0,0x0,8
tick,0x7ff86ea82704,83531835,0,0x0,8
tick,0x7ff86ea82704,83533413,0,0x0,8
tick,0x7ff86ea82704,83535501,0,0x0,8
tick,0x7ff86ea82704,83537511,0,0x0,8
tick,0x7ff86ea82704,83539556,0,0x0,8
tick,0x7ff86ea82704,83541424,0,0x0,8
tick,0x7ff86ea82704,83543581,0,0x0,8
tick,0x7ff86ea82704,83546217,0,0x0,8
tick,0x7ff86ea82704,83547657,0,0x0,8
tick,0x7ff86ea82704,83549634,0,0x0,8
tick,0x7ff86ea82704,83551529,0,0x0,8
tick,0x7ff86ea82704,83553706,0,0x0,8
tick,0x7ff86ea82704,83555570,0,0x0,8
tick,0x7ff86ea82704,83557523,0,0x0,8
tick,0x7ff86ea82704,83559578,0,0x0,8
tick,0x7ff86ea82704,83561662,0,0x0,8
tick,0x7ff86ea82704,83563833,0,0x0,8
tick,0x7ff86ea82704,83565569,0,0x0,8
tick,0x7ff86ea82704,83567580,0,0x0,8
tick,0x7ff86ea82704,83569503,0,0x0,8
tick,0x7ff86ea82704,83571483,0,0x0,8
tick,0x7ff86ea82704,83573457,0,0x0,8
tick,0x7ff86ea82704,83575504,0,0x0,8
tick,0x7ff86ea82704,83577585,0,0x0,8
tick,0x7ff86ea82704,83579938,0,0x0,8
tick,0x7ff86ea82704,83581318,0,0x0,8
tick,0x7ff86ea82704,83583302,0,0x0,8
tick,0x7ff86ea82704,83585725,0,0x0,8
tick,0x7ff86ea82704,83587361,0,0x0,8
tick,0x7ff86ea82704,83589453,0,0x0,8
tick,0x7ff86ea82704,83591463,0,0x0,8
tick,0x7ff86ea82704,83593337,0,0x0,8
tick,0x7ff86ea82704,83596339,0,0x0,8
tick,0x7ff86ea82704,83598425,0,0x0,8
tick,0x7ff86ea82704,83600331,0,0x0,8
tick,0x7ff86ea82704,83602369,0,0x0,8
tick,0x7ff86ea82704,83604433,0,0x0,8
tick,0x7ff86ea82704,83606340,0,0x0,8
tick,0x7ff86ea82704,83608318,0,0x0,8
tick,0x7ff86ea82704,83610292,0,0x0,8
tick,0x7ff86ea82704,83612903,0,0x0,8
tick,0x7ff86ea82704,83614303,0,0x0,8
tick,0x7ff86ea82704,83616644,0,0x0,8
tick,0x7ff86ea82704,83618324,0,0x0,8
tick,0x7ff86ea82704,83620442,0,0x0,8
tick,0x7ff86ea82704,83622349,0,0x0,8
tick,0x7ff86ea82704,83624484,0,0x0,8
tick,0x7ff86ea82704,83626359,0,0x0,8
tick,0x7ff86ea82704,83628422,0,0x0,8
tick,0x7ff86ea82704,83630615,0,0x0,8
tick,0x7ff86ea82704,83632295,0,0x0,8
tick,0x7ff86ea82704,83634214,0,0x0,8
tick,0x7ff86ea82704,83636320,0,0x0,8
tick,0x7ff86ea82704,83638172,0,0x0,8
tick,0x7ff86ea82704,83640340,0,0x0,8
tick,0x7ff86ea82704,83642169,0,0x0,8
tick,0x7ff86ea82704,83644257,0,0x0,8
tick,0x7ff86ea82704,83646284,0,0x0,8
tick,0x7ff86ea82704,83648320,0,0x0,8
tick,0x7ff86ea82704,83650292,0,0x0,8
tick,0x7ff86ea82704,83652296,0,0x0,8
tick,0x7ff86ea82704,83654172,0,0x0,8
tick,0x7ff86ea82704,83656245,0,0x0,8
tick,0x7ff86ea82704,83658338,0,0x0,8
tick,0x7ff86ea82704,83660234,0,0x0,8
tick,0x7ff86ea82704,83662272,0,0x0,8
tick,0x7ff86ea82704,83664279,0,0x0,8
tick,0x7ff86ea82704,83666115,0,0x0,8
tick,0x7ff86ea82704,83668235,0,0x0,8
tick,0x7ff86ea82704,83670147,0,0x0,8
tick,0x7ff86ea82704,83672219,0,0x0,8
tick,0x7ff86ea82704,83674213,0,0x0,8
tick,0x7ff86ea82704,83676182,0,0x0,8
tick,0x7ff86ea82704,83678167,0,0x0,8
tick,0x7ff86ea82704,83680207,0,0x0,8
tick,0x7ff86ea82704,83682162,0,0x0,8
tick,0x7ff86ea82704,83684172,0,0x0,8
tick,0x7ff86ea82704,83686130,0,0x0,8
tick,0x7ff86ea82704,83688198,0,0x0,8
tick,0x7ff86ea82704,83690187,0,0x0,8
tick,0x7ff86ea82704,83692106,0,0x0,8
tick,0x7ff86ea82704,83694120,0,0x0,8
tick,0x7ff86ea82704,83696140,0,0x0,8
tick,0x7ff86ea82704,83698163,0,0x0,8
tick,0x7ff86ea82704,83700119,0,0x0,8
tick,0x7ff86ea82704,83702133,0,0x0,8
tick,0x7ff86ea82704,83704058,0,0x0,8
tick,0x7ff86ea82704,83706066,0,0x0,8
tick,0x7ff86ea82704,83708005,0,0x0,8
tick,0x7ff86ea82704,83710076,0,0x0,8
tick,0x7ff86ea82704,83712114,0,0x0,8
tick,0x7ff86ea82704,83714343,0,0x0,8
tick,0x7ff86ea82704,83716067,0,0x0,8
tick,0x7ff86ea82704,83718023,0,0x0,8
tick,0x7ff86ea82704,83720014,0,0x0,8
tick,0x7ff86ea82704,83722040,0,0x0,8
tick,0x7ff86ea82704,83724053,0,0x0,8
tick,0x7ff86ea82704,83726049,0,0x0,8
tick,0x7ff86ea82704,83728042,0,0x0,8
tick,0x7ff86ea82704,83730015,0,0x0,8
tick,0x7ff86ea82704,83731981,0,0x0,8
tick,0x7ff86ea82704,83733969,0,0x0,8
tick,0x7ff86ea82704,83735980,0,0x0,8
tick,0x7ff86ea82704,83738006,0,0x0,8
tick,0x7ff86ea82704,83739989,0,0x0,8
tick,0x7ff86ea82704,83741931,0,0x0,8
tick,0x7ff86ea82704,83744097,0,0x0,8
tick,0x7ff86ea82704,83745897,0,0x0,8
tick,0x7ff86ea82704,83747938,0,0x0,8
tick,0x7ff86ea82704,83749909,0,0x0,8
tick,0x7ff86ea82704,83751949,0,0x0,8
tick,0x7ff86ea82704,83753898,0,0x0,8
tick,0x7ff86ea82704,83755897,0,0x0,8
tick,0x7ff86ea82704,83757958,0,0x0,8
tick,0x7ff86ea82704,83759924,0,0x0,8
tick,0x7ff86ea82704,83762210,0,0x0,8
tick,0x7ff86ea82704,83763867,0,0x0,8
tick,0x7ff86ea82704,83765943,0,0x0,8
tick,0x7ff86ea82704,83767824,0,0x0,8
tick,0x7ff86ea82704,83769852,0,0x0,8
tick,0x7ff86ea82704,83771909,0,0x0,8
tick,0x7ff86ea82704,83773877,0,0x0,8
tick,0x7ff86ea82704,83775874,0,0x0,8
tick,0x7ff86ea82704,83777835,0,0x0,8
tick,0x7ff86ea82704,83779890,0,0x0,8
tick,0x7ff86ea82704,83781804,0,0x0,8
tick,0x7ff86ea82704,83783962,0,0x0,8
tick,0x7ff86ea82704,83786212,0,0x0,8
tick,0x7ff86ea82704,83787865,0,0x0,8
tick,0x7ff86ea82704,83789816,0,0x0,8
tick,0x7ff86ea82704,83791848,0,0x0,8
tick,0x7ff86ea82704,83793756,0,0x0,8
tick,0x7ff86ea82704,83795857,0,0x0,8
tick,0x7ff86ea82704,83797775,0,0x0,8
tick,0x7ff86ea82704,83799942,0,0x0,8
tick,0x7ff86ea82704,83801796,0,0x0,8
tick,0x7ff86ea82704,83803780,0,0x0,8
tick,0x7ff86ea82704,83805839,0,0x0,8
tick,0x7ff86ea82704,83807822,0,0x0,8
tick,0x7ff86ea82704,83809813,0,0x0,8
tick,0x7ff86ea82704,83812357,0,0x0,8
tick,0x7ff86ea82704,83813812,0,0x0,8
tick,0x7ff86ea82704,83815782,0,0x0,8
tick,0x7ff86ea82704,83817714,0,0x0,8
tick,0x7ff86ea82704,83819684,0,0x0,8
tick,0x7ff86ea82704,83821683,0,0x0,8
tick,0x7ff86ea82704,83823703,0,0x0,8
tick,0x7ff86ea82704,83825724,0,0x0,8
tick,0x7ff86ea82704,83827663,0,0x0,8
tick,0x7ff86ea82704,83829659,0,0x0,8
tick,0x7ff86ea82704,83831696,0,0x0,8
tick,0x7ff86ea82704,83833638,0,0x0,8
tick,0x7ff86ea82704,83835654,0,0x0,8
tick,0x7ff86ea82704,83837693,0,0x0,8
tick,0x7ff86ea82704,83839621,0,0x0,8
tick,0x7ff86ea82704,83841746,0,0x0,8
tick,0x7ff86ea82704,83843711,0,0x0,8
tick,0x7ff86ea82704,83845669,0,0x0,8
tick,0x7ff86ea82704,83847598,0,0x0,8
tick,0x7ff86ea82704,83849696,0,0x0,8
tick,0x7ff86ea82704,83852337,0,0x0,8
tick,0x7ff86ea82704,83854040,0,0x0,8
tick,0x7ff86ea82704,83855932,0,0x0,8
tick,0x7ff86ea82704,83857673,0,0x0,8
tick,0x7ff86ea82704,83859952,0,0x0,8
tick,0x7ff86ea82704,83861681,0,0x0,8
tick,0x7ff86ea82704,83863647,0,0x0,8
tick,0x7ff86ea82704,83865759,0,0x0,8
tick,0x7ff86ea82704,83867749,0,0x0,8
tick,0x7ff86ea82704,83869760,0,0x0,8
tick,0x7ff86ea82704,83871720,0,0x0,8
tick,0x7ff86ea82704,83873716,0,0x0,8
tick,0x7ff86ea82704,83875635,0,0x0,8
tick,0x7ff86ea82704,83877776,0,0x0,8
tick,0x7ff86ea82704,83879945,0,0x0,8
tick,0x7ff86ea82704,83881790,0,0x0,8
tick,0x7ff86ea82704,83883728,0,0x0,8
tick,0x7ff86ea82704,83887106,0,0x0,8
tick,0x7ff86ea82704,83888850,0,0x0,8
tick,0x7ff86ea82704,83891152,0,0x0,8
tick,0x7ff86ea82704,83892820,0,0x0,8
tick,0x7ff86ea82704,83894874,0,0x0,8
tick,0x7ff86ea82704,83896851,0,0x0,8
tick,0x7ff86ea82704,83898767,0,0x0,8
tick,0x7ff86ea82704,83900907,0,0x0,8
tick,0x7ff86ea82704,83904162,0,0x0,8
tick,0x7ff86ea82704,83905631,0,0x0,8
tick,0x7ff86ea82704,83907720,0,0x0,8
tick,0x7ff86ea82704,83909596,0,0x0,8
tick,0x7ff86ea82704,83911924,0,0x0,8
tick,0x7ff86ea82704,83913652,0,0x0,8
tick,0x7ff86ea82704,83915671,0,0x0,8
tick,0x7ff86ea82704,83917547,0,0x0,8
tick,0x7ff86ea82704,83919886,0,0x0,8
tick,0x7ff86ea82704,83921582,0,0x0,8
tick,0x7ff86ea82704,83923578,0,0x0,8
tick,0x7ff86ea82704,83925590,0,0x0,8
tick,0x7ff86ea82704,83927660,0,0x0,8
tick,0x7ff86ea82704,83929463,0,0x0,8
tick,0x7ff86ea82704,83931534,0,0x0,8
tick,0x7ff86ea82704,83935834,0,0x0,8
tick,0x7ff86ea82704,83936864,0,0x0,8
tick,0x7ff86ea82704,83938831,0,0x0,8
tick,0x7ff86ea82704,83940864,0,0x0,8
tick,0x7ff86ea82704,83942811,0,0x0,8
tick,0x7ff86ea82704,83944674,0,0x0,8
tick,0x7ff86ea82704,83947553,0,0x0,8
tick,0x7ff86ea82704,83948974,0,0x0,8
tick,0x7ff86ea82704,83950663,0,0x0,8
tick,0x7ff86ea82704,83952576,0,0x0,8
tick,0x7ff86ea82704,83954601,0,0x0,8
tick,0x7ff86ea82704,83956647,0,0x0,8
tick,0x7ff86ea82704,83958424,0,0x0,8
tick,0x7ff86ea82704,83960565,0,0x0,8
tick,0x7ff86ea82704,83963124,0,0x0,8
tick,0x7ff86ea82704,83965772,0,0x0,8
tick,0x7ff86ea82704,83967531,0,0x0,8
tick,0x7ff86ea82704,83969408,0,0x0,8
tick,0x7ff86ea82704,83971548,0,0x0,8
tick,0x7ff86ea82704,83973451,0,0x0,8
tick,0x7ff86ea82704,83975454,0,0x0,8
tick,0x7ff86ea82704,83977410,0,0x0,8
tick,0x7ff86ea82704,83980032,0,0x0,8
tick,0x7ff86ea82704,83981489,0,0x0,8
tick,0x7ff86ea82704,83983425,0,0x0,8
tick,0x7ff86ea82704,83985352,0,0x0,8
tick,0x7ff86ea82704,83987584,0,0x0,8
tick,0x7ff86ea82704,83989900,0,0x0,8
tick,0x7ff86ea82704,83991403,0,0x0,8
tick,0x7ff86ea82704,83993581,0,0x0,8
tick,0x7ff86ea82704,83996413,0,0x0,8
tick,0x7ff86ea82704,83997966,0,0x0,8
tick,0x7ff86ea82704,83999512,0,0x0,8
tick,0x7ff86ea82704,84001491,0,0x0,8
tick,0x7ff86ea82704,84004045,0,0x0,8
tick,0x7ff86ea82704,84005309,0,0x0,8
tick,0x7ff86ea82704,84007795,0,0x0,8
tick,0x7ff86ea82704,84009418,0,0x0,8
tick,0x7ff86ea82704,84011581,0,0x0,8
tick,0x7ff86ea82704,84013313,0,0x0,8
tick,0x7ff86ea82704,84015905,0,0x0,8
tick,0x7ff86ea82704,84017460,0,0x0,8
tick,0x7ff86ea82704,84019799,0,0x0,8
tick,0x7ff86ea82704,84021349,0,0x0,8
tick,0x7ff86ea82704,84023328,0,0x0,8
tick,0x7ff86ea82704,84025211,0,0x0,8
tick,0x7ff86ea82704,84027389,0,0x0,8
tick,0x7ff86ea82704,84029754,0,0x0,8
tick,0x7ff86ea82704,84032672,0,0x0,8
tick,0x7ff86ea82704,84034176,0,0x0,8
tick,0x7ff86ea82704,84036355,0,0x0,8
tick,0x7ff86ea82704,84038228,0,0x0,8
tick,0x7ff86ea82704,84040405,0,0x0,8
tick,0x7ff86ea82704,84042836,0,0x0,8
tick,0x7ff86ea82704,84049980,0,0x0,8
tick,0x7ff86ea82704,84052602,0,0x0,8
tick,0x7ff86ea82704,84054245,0,0x0,8
tick,0x7ff86ea82704,84056637,0,0x0,8
tick,0x7ff86ea82704,84058665,0,0x0,8
tick,0x7ff86ea82704,84060347,0,0x0,8
tick,0x7ff86ea82704,84062716,0,0x0,8
tick,0x7ff86ea82704,84064865,0,0x0,8
tick,0x7ff86ea82704,84066358,0,0x0,8
tick,0x7ff86ea82704,84068277,0,0x0,8
tick,0x7ff86ea82704,84070119,0,0x0,8
tick,0x7ff86ea82704,84072185,0,0x0,8
tick,0x7ff86ea82704,84075006,0,0x0,8
tick,0x7ff86ea82704,84076753,0,0x0,8
tick,0x7ff86ea82704,84078342,0,0x0,8
tick,0x7ff86ea82704,84081601,0,0x0,8
tick,0x7ff86ea82704,84082453,0,0x0,8
tick,0x7ff86ea82704,84085861,0,0x0,8
tick,0x7ff86ea82704,84086774,0,0x0,8
tick,0x7ff86ea82704,84088695,0,0x0,8
tick,0x7ff86ea82704,84090559,0,0x0,8
tick,0x7ff86ea82704,84092403,0,0x0,8
tick,0x7ff86ea82704,84094183,0,0x0,8
tick,0x7ff86ea82704,84097415,0,0x0,8
tick,0x7ff86ea82704,84098963,0,0x0,8
tick,0x7ff86ea82704,84099946,0,0x0,8
tick,0x7ff86ea82704,84102706,0,0x0,8
tick,0x7ff86ea82704,84104112,0,0x0,8
tick,0x7ff86ea82704,84107402,0,0x0,8
tick,0x7ff86ea82704,84109399,0,0x0,8
tick,0x7ff86ea82704,84111192,0,0x0,8
tick,0x7ff86ea82704,84113709,0,0x0,8
tick,0x7ff86ea82704,84116146,0,0x0,8
tick,0x7ff86ea82704,84118424,0,0x0,8
tick,0x7ff86ea82704,84120504,0,0x0,8
tick,0x7ff86ea82704,84121959,0,0x0,8
tick,0x7ff86ea82704,84124064,0,0x0,8
tick,0x7ff86ea82704,84125918,0,0x0,8
tick,0x7ff86ea82704,84127981,0,0x0,8
tick,0x7ff86ea82704,84131120,0,0x0,8
tick,0x7ff86ea82704,84132639,0,0x0,8
tick,0x7ff86ea82704,84134183,0,0x0,8
tick,0x7ff86ea82704,84136126,0,0x0,8
tick,0x7ff86ea82704,84138019,0,0x0,8
tick,0x7ff86ea82704,84140003,0,0x0,8
tick,0x7ff86ea82704,84141966,0,0x0,8
tick,0x7ff86ea82704,84144016,0,0x0,8
tick,0x7ff86ea82704,84146054,0,0x0,8
tick,0x7ff86ea82704,84148434,0,0x0,8
tick,0x7ff86ea82704,84150297,0,0x0,8
tick,0x7ff86ea82704,84152117,0,0x0,8
tick,0x7ff86ea82704,84154068,0,0x0,8
tick,0x7ff86ea82704,84156088,0,0x0,8
tick,0x7ff86ea82704,84158003,0,0x0,8
tick,0x7ff86ea82704,84160305,0,0x0,8
tick,0x7ff86ea82704,84162660,0,0x0,8
tick,0x7ff86ea82704,84165009,0,0x0,8
tick,0x7ff86ea82704,84167151,0,0x0,8
tick,0x7ff86ea82704,84169016,0,0x0,8
tick,0x7ff86ea82704,84170880,0,0x0,8
tick,0x7ff86ea82704,84172914,0,0x0,8
tick,0x7ff86ea82704,84174814,0,0x0,8
tick,0x7ff86ea82704,84176891,0,0x0,8
tick,0x7ff86ea82704,84179140,0,0x0,8
tick,0x7ff86ea82704,84181152,0,0x0,8
tick,0x7ff86ea82704,84183010,0,0x0,8
tick,0x7ff86ea82704,84184860,0,0x0,8
tick,0x7ff86ea82704,84186957,0,0x0,8
tick,0x7ff86ea82704,84188803,0,0x0,8
tick,0x7ff86ea82704,84190877,0,0x0,8
tick,0x7ff86ea82704,84192856,0,0x0,8
tick,0x7ff86ea82704,84194839,0,0x0,8
tick,0x7ff86ea82704,84197499,0,0x0,8
tick,0x7ff86ea82704,84198889,0,0x0,8
tick,0x7ff86ea82704,84200857,0,0x0,8
tick,0x7ff86ea82704,84202767,0,0x0,8
tick,0x7ff86ea82704,84204963,0,0x0,8
tick,0x7ff86ea82704,84206828,0,0x0,8
tick,0x7ff86ea82704,84208904,0,0x0,8
tick,0x7ff86ea82704,84210777,0,0x0,8
tick,0x7ff86ea82704,84212884,0,0x0,8
tick,0x7ff86ea82704,84214706,0,0x0,8
tick,0x7ff86ea82704,84216773,0,0x0,8
tick,0x7ff86ea82704,84218698,0,0x0,8
tick,0x7ff86ea82704,84220750,0,0x0,8
tick,0x7ff86ea82704,84222736,0,0x0,8
tick,0x7ff86ea82704,84224693,0,0x0,8
tick,0x7ff86ea82704,84226738,0,0x0,8
tick,0x7ff86ea82704,84228817,0,0x0,8
tick,0x7ff86ea82704,84230654,0,0x0,8
tick,0x7ff86ea82704,84232699,0,0x0,8
tick,0x7ff86ea82704,84234663,0,0x0,8
tick,0x7ff86ea82704,84236721,0,0x0,8
tick,0x7ff86ea82704,84238797,0,0x0,8
tick,0x7ff86ea82704,84240659,0,0x0,8
tick,0x7ff86ea82704,84242889,0,0x0,8
tick,0x7ff86ea82704,84244677,0,0x0,8
tick,0x7ff86ea82704,84246688,0,0x0,8
tick,0x7ff86ea82704,84248834,0,0x0,8
tick,0x7ff86ea82704,84250659,0,0x0,8
tick,0x7ff86ea82704,84252710,0,0x0,8
tick,0x7ff86ea82704,84254753,0,0x0,8
tick,0x7ff86ea82704,84256766,0,0x0,8
tick,0x7ff86ea82704,84258571,0,0x0,8
tick,0x7ff86ea82704,84260720,0,0x0,8
tick,0x7ff86ea82704,84262605,0,0x0,8
tick,0x7ff86ea82704,84264609,0,0x0,8
tick,0x7ff86ea82704,84266731,0,0x0,8
tick,0x7ff86ea82704,84268578,0,0x0,8
tick,0x7ff86ea82704,84270658,0,0x0,8
tick,0x7ff86ea82704,84272536,0,0x0,8
tick,0x7ff86ea82704,84274854,0,0x0,8
tick,0x7ff86ea82704,84276608,0,0x0,8
tick,0x7ff86ea82704,84279173,0,0x0,8
tick,0x7ff86ea82704,84280586,0,0x0,8
tick,0x7ff86ea82704,84283002,0,0x0,8
tick,0x7ff86ea82704,84284469,0,0x0,8
tick,0x7ff86ea82704,84286672,0,0x0,8
tick,0x7ff86ea82704,84288461,0,0x0,8
tick,0x7ff86ea82704,84290571,0,0x0,8
tick,0x7ff86ea82704,84292498,0,0x0,8
tick,0x7ff86ea82704,84294615,0,0x0,8
tick,0x7ff86ea82704,84297028,0,0x0,8
tick,0x7ff86ea82704,84298459,0,0x0,8
tick,0x7ff86ea82704,84300415,0,0x0,8
tick,0x7ff86ea82704,84302483,0,0x0,8
tick,0x7ff86ea82704,84304397,0,0x0,8
tick,0x7ff86ea82704,84306460,0,0x0,8
tick,0x7ff86ea82704,84308493,0,0x0,8
tick,0x7ff86ea82704,84310422,0,0x0,8
tick,0x7ff86ea82704,84312458,0,0x0,8
tick,0x7ff86ea82704,84314415,0,0x0,8
tick,0x7ff86ea82704,84316391,0,0x0,8
tick,0x7ff86ea82704,84318379,0,0x0,8
tick,0x7ff86ea82704,84320387,0,0x0,8
tick,0x7ff86ea82704,84322376,0,0x0,8
tick,0x7ff86ea82704,84324384,0,0x0,8
tick,0x7ff86ea82704,84326423,0,0x0,8
tick,0x7ff86ea82704,84328493,0,0x0,8
tick,0x7ff86ea82704,84330369,0,0x0,8
tick,0x7ff86ea82704,84332409,0,0x0,8
tick,0x7ff86ea82704,84334409,0,0x0,8
tick,0x7ff86ea82704,84336508,0,0x0,8
tick,0x7ff86ea82704,84338338,0,0x0,8
tick,0x7ff86ea82704,84340399,0,0x0,8
tick,0x7ff86ea82704,84342330,0,0x0,8
tick,0x7ff86ea82704,84344324,0,0x0,8
tick,0x7ff86ea82704,84347035,0,0x0,8
tick,0x7ff86ea82704,84348407,0,0x0,8
tick,0x7ff86ea82704,84350388,0,0x0,8
tick,0x7ff86ea82704,84352688,0,0x0,8
tick,0x7ff86ea82704,84354397,0,0x0,8
tick,0x7ff86ea82704,84356319,0,0x0,8
tick,0x7ff86ea82704,84358322,0,0x0,8
tick,0x7ff86ea82704,84360245,0,0x0,8
tick,0x7ff86ea82704,84362566,0,0x0,8
tick,0x7ff86ea82704,84364320,0,0x0,8
tick,0x7ff86ea82704,84366316,0,0x0,8
tick,0x7ff86ea82704,84368186,0,0x0,8
tick,0x7ff86ea82704,84370214,0,0x0,8
tick,0x7ff86ea82704,84372275,0,0x0,8
tick,0x7ff86ea82704,84374238,0,0x0,8
tick,0x7ff86ea82704,84376329,0,0x0,8
tick,0x7ff86ea82704,84378267,0,0x0,8
tick,0x7ff86ea82704,84380692,0,0x0,8
tick,0x7ff86ea82704,84382182,0,0x0,8
tick,0x7ff86ea82704,84384495,0,0x0,8
tick,0x7ff86ea82704,84386269,0,0x0,8
tick,0x7ff86ea82704,84388452,0,0x0,8
tick,0x7ff86ea82704,84390417,0,0x0,8
tick,0x7ff86ea82704,84392374,0,0x0,8
tick,0x7ff86ea82704,84394516,0,0x0,8
tick,0x7ff86ea82704,84396472,0,0x0,8
tick,0x7ff86ea82704,84398657,0,0x0,8
tick,0x7ff86ea82704,84400217,0,0x0,8
tick,0x7ff86ea82704,84402273,0,0x0,8
tick,0x7ff86ea82704,84404326,0,0x0,8
tick,0x7ff86ea82704,84406192,0,0x0,8
tick,0x7ff86ea82704,84408294,0,0x0,8
tick,0x7ff86ea82704,84410213,0,0x0,8
tick,0x7ff86ea82704,84412741,0,0x0,8
tick,0x7ff86ea82704,84414475,0,0x0,8
tick,0x7ff86ea82704,84416176,0,0x0,8
tick,0x7ff86ea82704,84418174,0,0x0,8
tick,0x7ff86ea82704,84420153,0,0x0,8
tick,0x7ff86ea82704,84422126,0,0x0,8
tick,0x7ff86ea82704,84424117,0,0x0,8
tick,0x7ff86ea82704,84426213,0,0x0,8
tick,0x7ff86ea82704,84428131,0,0x0,8
tick,0x7ff86ea82704,84430605,0,0x0,8
tick,0x7ff86ea82704,84432174,0,0x0,8
tick,0x7ff86ea82704,84434099,0,0x0,8
tick,0x7ff86ea82704,84436106,0,0x0,8
tick,0x7ff86ea82704,84438056,0,0x0,8
tick,0x7ff86ea82704,84440200,0,0x0,8
tick,0x7ff86ea82704,84442165,0,0x0,8
tick,0x7ff86ea82704,84444113,0,0x0,8
tick,0x7ff86ea82704,84446171,0,0x0,8
tick,0x7ff86ea82704,84448190,0,0x0,8
tick,0x7ff86ea82704,84450106,0,0x0,8
tick,0x7ff86ea82704,84452195,0,0x0,8
tick,0x7ff86ea82704,84454086,0,0x0,8
tick,0x7ff86ea82704,84456250,0,0x0,8
tick,0x7ff86ea82704,84458124,0,0x0,8
tick,0x7ff86ea82704,84460076,0,0x0,8
tick,0x7ff86ea82704,84462558,0,0x0,8
tick,0x7ff86ea82704,84464227,0,0x0,8
tick,0x7ff86ea82704,84466148,0,0x0,8
tick,0x7ff86ea82704,84468034,0,0x0,8
tick,0x7ff86ea82704,84470048,0,0x0,8
tick,0x7ff86ea82704,84472059,0,0x0,8
tick,0x7ff86ea82704,84474039,0,0x0,8
tick,0x7ff86ea82704,84476004,0,0x0,8
tick,0x7ff86ea82704,84478030,0,0x0,8
tick,0x7ff86ea82704,84480283,0,0x0,8
tick,0x7ff86ea82704,84482297,0,0x0,8
tick,0x7ff86ea82704,84484070,0,0x0,8
tick,0x7ff86ea82704,84486019,0,0x0,8
tick,0x7ff86ea82704,84488071,0,0x0,8
tick,0x7ff86ea82704,84489975,0,0x0,8
tick,0x7ff86ea82704,84491991,0,0x0,8
tick,0x7ff86ea82704,84494062,0,0x0,8
tick,0x7ff86ea82704,84496174,0,0x0,8
tick,0x7ff86ea82704,84498179,0,0x0,8
tick,0x7ff86ea82704,84499988,0,0x0,8
tick,0x7ff86ea82704,84501996,0,0x0,8
tick,0x7ff86ea82704,84504076,0,0x0,8
tick,0x7ff86ea82704,84506242,0,0x0,8
tick,0x7ff86ea82704,84508143,0,0x0,8
tick,0x7ff86ea82704,84510253,0,0x0,8
tick,0x7ff86ea82704,84514062,0,0x0,8
tick,0x7ff86ea82704,84515857,0,0x0,8
tick,0x7ff86ea82704,84517219,0,0x0,8
tick,0x7ff86ea82704,84518951,0,0x0,8
tick,0x7ff86ea82704,84521038,0,0x0,8
tick,0x7ff86ea82704,84523126,0,0x0,8
tick,0x7ff86ea82704,84525299,0,0x0,8
tick,0x7ff86ea82704,84527098,0,0x0,8
tick,0x7ff86ea82704,84530068,0,0x0,8
tick,0x7ff86ea82704,84531551,0,0x0,8
tick,0x7ff86ea82704,84533170,0,0x0,8
tick,0x7ff86ea82704,84534981,0,0x0,8
tick,0x7ff86ea82704,84537057,0,0x0,8
tick,0x7ff86ea82704,84539292,0,0x0,8
tick,0x7ff86ea82704,84541378,0,0x0,8
tick,0x7ff86ea82704,84543427,0,0x0,8
tick,0x7ff86ea82704,84545194,0,0x0,8
tick,0x7ff86ea82704,84546943,0,0x0,8
tick,0x7ff86ea82704,84549367,0,0x0,8
tick,0x7ff86ea82704,84551450,0,0x0,8
tick,0x7ff86ea82704,84553063,0,0x0,8
tick,0x7ff86ea82704,84555087,0,0x0,8
tick,0x7ff86ea82704,84557216,0,0x0,8
tick,0x7ff86ea82704,84559075,0,0x0,8
tick,0x7ff86ea82704,84561039,0,0x0,8
tick,0x7ff86ea82704,84564017,0,0x0,8
tick,0x7ff86ea82704,84564829,0,0x0,8
tick,0x7ff86ea82704,84567035,0,0x0,8
tick,0x7ff86ea82704,84568878,0,0x0,8
tick,0x7ff86ea82704,84570768,0,0x0,8
tick,0x7ff86ea82704,84573038,0,0x0,8
tick,0x7ff86ea82704,84574838,0,0x0,8
tick,0x7ff86ea82704,84576976,0,0x0,8
tick,0x7ff86ea82704,84579179,0,0x0,8
tick,0x7ff86ea82704,84580995,0,0x0,8
tick,0x7ff86ea82704,84582690,0,0x0,8
tick,0x7ff86ea82704,84584991,0,0x0,8
tick,0x7ff86ea82704,84586782,0,0x0,8
tick,0x7ff86ea82704,84588854,0,0x0,8
tick,0x7ff86ea82704,84590739,0,0x0,8
tick,0x7ff86ea82704,84592886,0,0x0,8
tick,0x7ff86ea82704,84594771,0,0x0,8
tick,0x7ff86ea82704,84597032,0,0x0,8
tick,0x7ff86ea82704,84598952,0,0x0,8
tick,0x7ff86ea82704,84600810,0,0x0,8
tick,0x7ff86ea82704,84602764,0,0x0,8
tick,0x7ff86ea82704,84604590,0,0x0,8
tick,0x7ff86ea82704,84606790,0,0x0,8
tick,0x7ff86ea82704,84608870,0,0x0,8
tick,0x7ff86ea82704,84610689,0,0x0,8
tick,0x7ff86ea82704,84612879,0,0x0,8
tick,0x7ff86ea82704,84614780,0,0x0,8
tick,0x7ff86ea82704,84616871,0,0x0,8
tick,0x7ff86ea82704,84618911,0,0x0,8
tick,0x7ff86ea82704,84621190,0,0x0,8
tick,0x7ff86ea82704,84622595,0,0x0,8
tick,0x7ff86ea82704,84624983,0,0x0,8
tick,0x7ff86ea82704,84626901,0,0x0,8
tick,0x7ff86ea82704,84628930,0,0x0,8
tick,0x7ff86ea82704,84631480,0,0x0,8
tick,0x7ff86ea82704,84632854,0,0x0,8
tick,0x7ff86ea82704,84634943,0,0x0,8
tick,0x7ff86ea82704,84636757,0,0x0,8
tick,0x7ff86ea82704,84638851,0,0x0,8
tick,0x7ff86ea82704,84640767,0,0x0,8
tick,0x7ff86ea82704,84642671,0,0x0,8
tick,0x7ff86ea82704,84644816,0,0x0,8
tick,0x7ff86ea82704,84646943,0,0x0,8
tick,0x7ff86ea82704,84648722,0,0x0,8
tick,0x7ff86ea82704,84650707,0,0x0,8
tick,0x7ff86ea82704,84652838,0,0x0,8
tick,0x7ff86ea82704,84654623,0,0x0,8
tick,0x7ff86ea82704,84656703,0,0x0,8
tick,0x7ff86ea82704,84658769,0,0x0,8
tick,0x7ff86ea82704,84660640,0,0x0,8
tick,0x7ff86ea82704,84663265,0,0x0,8
tick,0x7ff86ea82704,84664452,0,0x0,8
tick,0x7ff86ea82704,84666970,0,0x0,8
tick,0x7ff86ea82704,84668832,0,0x0,8
tick,0x7ff86ea82704,84670725,0,0x0,8
tick,0x7ff86ea82704,84672639,0,0x0,8
tick,0x7ff86ea82704,84674509,0,0x0,8
tick,0x7ff86ea82704,84676913,0,0x0,8
tick,0x7ff86ea82704,84679568,0,0x0,8
tick,0x7ff86ea82704,84681495,0,0x0,8
tick,0x7ff86ea82704,84682486,0,0x0,8
tick,0x7ff86ea82704,84684871,0,0x0,8
tick,0x7ff86ea82704,84686588,0,0x0,8
tick,0x7ff86ea82704,84688639,0,0x0,8
tick,0x7ff86ea82704,84690603,0,0x0,8
tick,0x7ff86ea82704,84692559,0,0x0,8
tick,0x7ff86ea82704,84694678,0,0x0,8
tick,0x7ff86ea82704,84696699,0,0x0,8
tick,0x7ff86ea82704,84698904,0,0x0,8
tick,0x7ff86ea82704,84700580,0,0x0,8
tick,0x7ff86ea82704,84702593,0,0x0,8
tick,0x7ff86ea82704,84704977,0,0x0,8
tick,0x7ff86ea82704,84707030,0,0x0,8
tick,0x7ff86ea82704,84708704,0,0x0,8
tick,0x7ff86ea82704,84710431,0,0x0,8
tick,0x7ff86ea82704,84713054,0,0x0,8
tick,0x7ff86ea82704,84714601,0,0x0,8
tick,0x7ff86ea82704,84717032,0,0x0,8
tick,0x7ff86ea82704,84718753,0,0x0,8
tick,0x7ff86ea82704,84720480,0,0x0,8
tick,0x7ff86ea82704,84722311,0,0x0,8
tick,0x7ff86ea82704,84724366,0,0x0,8
tick,0x7ff86ea82704,84726371,0,0x0,8
tick,0x7ff86ea82704,84728448,0,0x0,8
tick,0x7ff86ea82704,84731009,0,0x0,8
tick,0x7ff86ea82704,84732778,0,0x0,8
tick,0x7ff86ea82704,84734432,0,0x0,8
tick,0x7ff86ea82704,84736341,0,0x0,8
tick,0x7ff86ea82704,84738396,0,0x0,8
tick,0x7ff86ea82704,84740358,0,0x0,8
tick,0x7ff86ea82704,84742364,0,0x0,8
tick,0x7ff86ea82704,84744321,0,0x0,8
tick,0x7ff86ea82704,84747449,0,0x0,8
tick,0x7ff86ea82704,84748909,0,0x0,8
tick,0x7ff86ea82704,84750235,0,0x0,8
tick,0x7ff86ea82704,84752225,0,0x0,8
tick,0x7ff86ea82704,84754236,0,0x0,8
tick,0x7ff86ea82704,84756171,0,0x0,8
tick,0x7ff86ea82704,84758271,0,0x0,8
tick,0x7ff86ea82704,84760207,0,0x0,8
tick,0x7ff86ea82704,84762783,0,0x0,8
tick,0x7ff86ea82704,84765110,0,0x0,8
tick,0x7ff86ea82704,84766503,0,0x0,8
tick,0x7ff86ea82704,84768224,0,0x0,8
tick,0x7ff86ea82704,84770277,0,0x0,8
tick,0x7ff86ea82704,84772387,0,0x0,8
tick,0x7ff86ea82704,84774346,0,0x0,8
tick,0x7ff86ea82704,84776389,0,0x0,8
tick,0x7ff86ea82704,84778199,0,0x0,8
tick,0x7ff86ea82704,84780754,0,0x0,8
tick,0x7ff86ea82704,84782407,0,0x0,8
tick,0x7ff86ea82704,84784261,0,0x0,8
tick,0x7ff86ea82704,84786141,0,0x0,8
tick,0x7ff86ea82704,84788118,0,0x0,8
tick,0x7ff86ea82704,84790202,0,0x0,8
tick,0x7ff86ea82704,84792151,0,0x0,8
tick,0x7ff86ea82704,84794140,0,0x0,8
tick,0x7ff86ea82704,84796652,0,0x0,8
tick,0x7ff86ea82704,84798168,0,0x0,8
tick,0x7ff86ea82704,84800283,0,0x0,8
tick,0x7ff86ea82704,84802150,0,0x0,8
tick,0x7ff86ea82704,84803180,0,0x0,8
tick,0x7ff86ea82704,84805051,0,0x0,8
tick,0x7ff86ea82704,84807070,0,0x0,8
tick,0x7ff86ea82704,84809286,0,0x0,8
tick,0x7ff86ea82704,84811173,0,0x0,8
tick,0x7ff86ea82704,84813426,0,0x0,8
tick,0x7ff86ea82704,84815439,0,0x0,8
tick,0x7ff86ea82704,84817246,0,0x0,8
tick,0x7ff86ea82704,84819171,0,0x0,8
tick,0x7ff86ea82704,84821036,0,0x0,8
tick,0x7ff86ea82704,84823199,0,0x0,8
tick,0x7ff86ea82704,84825411,0,0x0,8
tick,0x7ff86ea82704,84827220,0,0x0,8
tick,0x7ff86ea82704,84829563,0,0x0,8
tick,0x7ff86ea82704,84831023,0,0x0,8
tick,0x7ff86ea82704,84833302,0,0x0,8
tick,0x7ff86ea82704,84834987,0,0x0,8
tick,0x7ff86ea82704,84837046,0,0x0,8
tick,0x7ff86ea82704,84839053,0,0x0,8
tick,0x7ff86ea82704,84841226,0,0x0,8
tick,0x7ff86ea82704,84842996,0,0x0,8
tick,0x7ff86ea82704,84844914,0,0x0,8
tick,0x7ff86ea82704,84847612,0,0x0,8
tick,0x7ff86ea82704,84849328,0,0x0,8
tick,0x7ff86ea82704,84851108,0,0x0,8
tick,0x7ff86ea82704,84852997,0,0x0,8
tick,0x7ff86ea82704,84855332,0,0x0,8
tick,0x7ff86ea82704,84856984,0,0x0,8
tick,0x7ff86ea82704,84858948,0,0x0,8
tick,0x7ff86ea82704,84860940,0,0x0,8
tick,0x7ff86ea82704,84863328,0,0x0,8
tick,0x7ff86ea82704,84865091,0,0x0,8
tick,0x7ff86ea82704,84866924,0,0x0,8
tick,0x7ff86ea82704,84868959,0,0x0,8
tick,0x7ff86ea82704,84870989,0,0x0,8
tick,0x7ff86ea82704,84872950,0,0x0,8
tick,0x7ff86ea82704,84874949,0,0x0,8
tick,0x7ff86ea82704,84876979,0,0x0,8
tick,0x7ff86ea82704,84879464,0,0x0,8
tick,0x7ff86ea82704,84881273,0,0x0,8
tick,0x7ff86ea82704,84883070,0,0x0,8
tick,0x7ff86ea82704,84885054,0,0x0,8
tick,0x7ff86ea82704,84887213,0,0x0,8
tick,0x7ff86ea82704,84889091,0,0x0,8
tick,0x7ff86ea82704,84891073,0,0x0,8
tick,0x7ff86ea82704,84892889,0,0x0,8
tick,0x7ff86ea82704,84894973,0,0x0,8
tick,0x7ff86ea82704,84897310,0,0x0,8
tick,0x7ff86ea82704,84899025,0,0x0,8
tick,0x7ff86ea82704,84901145,0,0x0,8
tick,0x7ff86ea82704,84903240,0,0x0,8
tick,0x7ff86ea82704,84904962,0,0x0,8
tick,0x7ff86ea82704,84907025,0,0x0,8
tick,0x7ff86ea82704,84908953,0,0x0,8
tick,0x7ff86ea82704,84910907,0,0x0,8
tick,0x7ff86ea82704,84913456,0,0x0,8
tick,0x7ff86ea82704,84915065,0,0x0,8
tick,0x7ff86ea82704,84917294,0,0x0,8
tick,0x7ff86ea82704,84918885,0,0x0,8
tick,0x7ff86ea82704,84921028,0,0x0,8
tick,0x7ff86ea82704,84922934,0,0x0,8
tick,0x7ff86ea82704,84924874,0,0x0,8
tick,0x7ff86ea82704,84926944,0,0x0,8
tick,0x7ff86ea82704,84929201,0,0x0,8
tick,0x7ff86ea82704,84930969,0,0x0,8
tick,0x7ff86ea82704,84932872,0,0x0,8
tick,0x7ff86ea82704,84935134,0,0x0,8
tick,0x7ff86ea82704,84936950,0,0x0,8
tick,0x7ff86ea82704,84938948,0,0x0,8
tick,0x7ff86ea82704,84941208,0,0x0,8
tick,0x7ff86ea82704,84943406,0,0x0,8
tick,0x7ff86ea82704,84945197,0,0x0,8
tick,0x7ff86ea82704,84947515,0,0x0,8
tick,0x7ff86ea82704,84948821,0,0x0,8
tick,0x7ff86ea82704,84951583,0,0x0,8
tick,0x7ff86ea82704,84952752,0,0x0,8
tick,0x7ff86ea82704,84954856,0,0x0,8
tick,0x7ff86ea82704,84956867,0,0x0,8
tick,0x7ff86ea82704,84958907,0,0x0,8
tick,0x7ff86ea82704,84961311,0,0x0,8
tick,0x7ff86ea82704,84963416,0,0x0,8
tick,0x7ff86ea82704,84964788,0,0x0,8
tick,0x7ff86ea82704,84966767,0,0x0,8
tick,0x7ff86ea82704,84968849,0,0x0,8
tick,0x7ff86ea82704,84970755,0,0x0,8
tick,0x7ff86ea82704,84972680,0,0x0,8
tick,0x7ff86ea82704,84974707,0,0x0,8
tick,0x7ff86ea82704,84976744,0,0x0,8
tick,0x7ff86ea82704,84979108,0,0x0,8
tick,0x7ff86ea82704,84980901,0,0x0,8
tick,0x7ff86ea82704,84982811,0,0x0,8
tick,0x7ff86ea82704,84984662,0,0x0,8
tick,0x7ff86ea82704,84986616,0,0x0,8
tick,0x7ff86ea82704,84988682,0,0x0,8
tick,0x7ff86ea82704,84990630,0,0x0,8
tick,0x7ff86ea82704,84992560,0,0x0,8
tick,0x7ff86ea82704,84994610,0,0x0,8
tick,0x7ff86ea82704,84996792,0,0x0,8
tick,0x7ff86ea82704,84998749,0,0x0,8
tick,0x7ff86ea82704,85000681,0,0x0,8
tick,0x7ff86ea82704,85002658,0,0x0,8
tick,0x7ff86ea82704,85004607,0,0x0,8
tick,0x7ff86ea82704,85006648,0,0x0,8
tick,0x7ff86ea82704,85008675,0,0x0,8
tick,0x7ff86ea82704,85010536,0,0x0,8
tick,0x7ff86ea82704,85014060,0,0x0,8
tick,0x7ff86ea82704,85014727,0,0x0,8
tick,0x7ff86ea82704,85016675,0,0x0,8
tick,0x7ff86ea82704,85018788,0,0x0,8
tick,0x7ff86ea82704,85020628,0,0x0,8
tick,0x7ff86ea82704,85022572,0,0x0,8
tick,0x7ff86ea82704,85024619,0,0x0,8
tick,0x7ff86ea82704,85026586,0,0x0,8
tick,0x7ff86ea82704,85029096,0,0x0,8
tick,0x7ff86ea82704,85030551,0,0x0,8
tick,0x7ff86ea82704,85032695,0,0x0,8
tick,0x7ff86ea82704,85034857,0,0x0,8
tick,0x7ff86ea82704,85036453,0,0x0,8
tick,0x7ff86ea82704,85038508,0,0x0,8
tick,0x7ff86ea82704,85040507,0,0x0,8
tick,0x7ff86ea82704,85042489,0,0x0,8
tick,0x7ff86ea82704,85044612,0,0x0,8
tick,0x7ff86ea82704,85046733,0,0x0,8
tick,0x7ff86ea82704,85048530,0,0x0,8
tick,0x7ff86ea82704,85050624,0,0x0,8
tick,0x7ff86ea82704,85054592,0,0x0,8
tick,0x7ff86ea82704,85056653,0,0x0,8
tick,0x7ff86ea82704,85058850,0,0x0,8
tick,0x7ff86ea82704,85060797,0,0x0,8
tick,0x7ff86ea82704,85063133,0,0x0,8
tick,0x7ff86ea82704,85064595,0,0x0,8
tick,0x7ff86ea82704,85066738,0,0x0,8
tick,0x7ff86ea82704,85068879,0,0x0,8
tick,0x7ff86ea82704,85070670,0,0x0,8
tick,0x7ff86ea82704,85072564,0,0x0,8
tick,0x7ff86ea82704,85074587,0,0x0,8
tick,0x7ff86ea82704,85076578,0,0x0,8
tick,0x7ff86ea82704,85078719,0,0x0,8
tick,0x7ff86ea82704,85080820,0,0x0,8
tick,0x7ff86ea82704,85082587,0,0x0,8
tick,0x7ff86ea82704,85084633,0,0x0,8
tick,0x7ff86ea82704,85086512,0,0x0,8
tick,0x7ff86ea82704,85088584,0,0x0,8
tick,0x7ff86ea82704,85090624,0,0x0,8
tick,0x7ff86ea82704,85092854,0,0x0,8
tick,0x7ff86ea82704,85094483,0,0x0,8
tick,0x7ff86ea82704,85096915,0,0x0,8
tick,0x7ff86ea82704,85098556,0,0x0,8
tick,0x7ff86ea82704,85100578,0,0x0,8
tick,0x7ff86ea82704,85102367,0,0x0,8
tick,0x7ff86ea82704,85104394,0,0x0,8
tick,0x7ff86ea82704,85106654,0,0x0,8
tick,0x7ff86ea82704,85108609,0,0x0,8
tick,0x7ff86ea82704,85110647,0,0x0,8
tick,0x7ff86ea82704,85113358,0,0x0,8
tick,0x7ff86ea82704,85114419,0,0x0,8
tick,0x7ff86ea82704,85116455,0,0x0,8
tick,0x7ff86ea82704,85118420,0,0x0,8
tick,0x7ff86ea82704,85120184,0,0x0,8
tick,0x7ff86ea82704,85122436,0,0x0,8
tick,0x7ff86ea82704,85124382,0,0x0,8
tick,0x7ff86ea82704,85126366,0,0x0,8
tick,0x7ff86ea82704,85128490,0,0x0,8
tick,0x7ff86ea82704,85131292,0,0x0,8
tick,0x7ff86ea82704,85134427,0,0x0,8
tick,0x7ff86ea82704,85136306,0,0x0,8
tick,0x7ff86ea82704,85138224,0,0x0,8
tick,0x7ff86ea82704,85140398,0,0x0,8
tick,0x7ff86ea82704,85142344,0,0x0,8
tick,0x7ff86ea82704,85144518,0,0x0,8
tick,0x7ff86ea82704,85147304,0,0x0,8
tick,0x7ff86ea82704,85148348,0,0x0,8
tick,0x7ff86ea82704,85150228,0,0x0,8
tick,0x7ff86ea82704,85152359,0,0x0,8
tick,0x7ff86ea82704,85154308,0,0x0,8
tick,0x7ff86ea82704,85156264,0,0x0,8
tick,0x7ff86ea82704,85158167,0,0x0,8
tick,0x7ff86ea82704,85160295,0,0x0,8
tick,0x7ff86ea82704,85163046,0,0x0,8
tick,0x7ff86ea82704,85165214,0,0x0,8
tick,0x7ff86ea82704,85167287,0,0x0,8
tick,0x7ff86ea82704,85169196,0,0x0,8
tick,0x7ff86ea82704,85171208,0,0x0,8
tick,0x7ff86ea82704,85173062,0,0x0,8
tick,0x7ff86ea82704,85175317,0,0x0,8
tick,0x7ff86ea82704,85177143,0,0x0,8
tick,0x7ff86ea82704,85179438,0,0x0,8
tick,0x7ff86ea82704,85181165,0,0x0,8
tick,0x7ff86ea82704,85183117,0,0x0,8
tick,0x7ff86ea82704,85185424,0,0x0,8
tick,0x7ff86ea82704,85187174,0,0x0,8
tick,0x7ff86ea82704,85189134,0,0x0,8
tick,0x7ff86ea82704,85191222,0,0x0,8
tick,0x7ff86ea82704,85193186,0,0x0,8
tick,0x7ff86ea82704,85195097,0,0x0,8
tick,0x7ff86ea82704,85197409,0,0x0,8
tick,0x7ff86ea82704,85198996,0,0x0,8
tick,0x7ff86ea82704,85201147,0,0x0,8
tick,0x7ff86ea82704,85203133,0,0x0,8
tick,0x7ff86ea82704,85205156,0,0x0,8
tick,0x7ff86ea82704,85207200,0,0x0,8
tick,0x7ff86ea82704,85209034,0,0x0,8
tick,0x7ff86ea82704,85211019,0,0x0,8
tick,0x7ff86ea82704,85213133,0,0x0,8
tick,0x7ff86ea82704,85214956,0,0x0,8
tick,0x7ff86ea82704,85217074,0,0x0,8
tick,0x7ff86ea82704,85218931,0,0x0,8
tick,0x7ff86ea82704,85220978,0,0x0,8
tick,0x7ff86ea82704,85222961,0,0x0,8
tick,0x7ff86ea82704,85225093,0,0x0,8
tick,0x7ff86ea82704,85227125,0,0x0,8
tick,0x7ff86ea82704,85229047,0,0x0,8
tick,0x7ff86ea82704,85231021,0,0x0,8
tick,0x7ff86ea82704,85233223,0,0x0,8
tick,0x7ff86ea82704,85235017,0,0x0,8
tick,0x7ff86ea82704,85236895,0,0x0,8
tick,0x7ff86ea82704,85239105,0,0x0,8
tick,0x7ff86ea82704,85241154,0,0x0,8
tick,0x7ff86ea82704,85242931,0,0x0,8
tick,0x7ff86ea82704,85245009,0,0x0,8
tick,0x7ff86ea82704,85247074,0,0x0,8
tick,0x7ff86ea82704,85248927,0,0x0,8
tick,0x7ff86ea82704,85250984,0,0x0,8
tick,0x7ff86ea82704,85252964,0,0x0,8
tick,0x7ff86ea82704,85254967,0,0x0,8
tick,0x7ff86ea82704,85257092,0,0x0,8
tick,0x7ff86ea82704,85259001,0,0x0,8
tick,0x7ff86ea82704,85260897,0,0x0,8
tick,0x7ff86ea82704,85262910,0,0x0,8
tick,0x7ff86ea82704,85264849,0,0x0,8
tick,0x7ff86ea82704,85266901,0,0x0,8
tick,0x7ff86ea82704,85268818,0,0x0,8
tick,0x7ff86ea82704,85271021,0,0x0,8
tick,0x7ff86ea82704,85273002,0,0x0,8
tick,0x7ff86ea82704,85274910,0,0x0,8
tick,0x7ff86ea82704,85276912,0,0x0,8
tick,0x7ff86ea82704,85279042,0,0x0,8
tick,0x7ff86ea82704,85280907,0,0x0,8
tick,0x7ff86ea82704,85282847,0,0x0,8
tick,0x7ff86ea82704,85284883,0,0x0,8
tick,0x7ff86ea82704,85286806,0,0x0,8
tick,0x7ff86ea82704,85288915,0,0x0,8
tick,0x7ff86ea82704,85290746,0,0x0,8
tick,0x7ff86ea82704,85292904,0,0x0,8
tick,0x7ff86ea82704,85294756,0,0x0,8
tick,0x7ff86ea82704,85296995,0,0x0,8
tick,0x7ff86ea82704,85298858,0,0x0,8
tick,0x7ff86ea82704,85300867,0,0x0,8
tick,0x7ff86ea82704,85302982,0,0x0,8
tick,0x7ff86ea82704,85304797,0,0x0,8
tick,0x7ff86ea82704,85307234,0,0x0,8
tick,0x7ff86ea82704,85308732,0,0x0,8
tick,0x7ff86ea82704,85310888,0,0x0,8
tick,0x7ff86ea82704,85312727,0,0x0,8
tick,0x7ff86ea82704,85314788,0,0x0,8
tick,0x7ff86ea82704,85316753,0,0x0,8
tick,0x7ff86ea82704,85318801,0,0x0,8
tick,0x7ff86ea82704,85320953,0,0x0,8
tick,0x7ff86ea82704,85322786,0,0x0,8
tick,0x7ff86ea82704,85324862,0,0x0,8
tick,0x7ff86ea82704,85326779,0,0x0,8
tick,0x7ff86ea82704,85328848,0,0x0,8
tick,0x7ff86ea82704,85330888,0,0x0,8
tick,0x7ff86ea82704,85332710,0,0x0,8
tick,0x7ff86ea82704,85334703,0,0x0,8
tick,0x7ff86ea82704,85336646,0,0x0,8
tick,0x7ff86ea82704,85338679,0,0x0,8
tick,0x7ff86ea82704,85340869,0,0x0,8
tick,0x7ff86ea82704,85342636,0,0x0,8
tick,0x7ff86ea82704,85344707,0,0x0,8
tick,0x7ff86ea82704,85346880,0,0x0,8
tick,0x7ff86ea82704,85348697,0,0x0,8
tick,0x7ff86ea82704,85350702,0,0x0,8
tick,0x7ff86ea82704,85352659,0,0x0,8
tick,0x7ff86ea82704,85354661,0,0x0,8
tick,0x7ff86ea82704,85356693,0,0x0,8
tick,0x7ff86ea82704,85358663,0,0x0,8
tick,0x7ff86ea82704,85360778,0,0x0,8
tick,0x7ff86ea82704,85362731,0,0x0,8
tick,0x7ff86ea82704,85364562,0,0x0,8
tick,0x7ff86ea82704,85366582,0,0x0,8
tick,0x7ff86ea82704,85368576,0,0x0,8
tick,0x7ff86ea82704,85370693,0,0x0,8
tick,0x7ff86ea82704,85372518,0,0x0,8
tick,0x7ff86ea82704,85374722,0,0x0,8
tick,0x7ff86ea82704,85376559,0,0x0,8
tick,0x7ff86ea82704,85378665,0,0x0,8
tick,0x7ff86ea82704,85380499,0,0x0,8
tick,0x7ff86ea82704,85382625,0,0x0,8
tick,0x7ff86ea82704,85384561,0,0x0,8
tick,0x7ff86ea82704,85386580,0,0x0,8
tick,0x7ff86ea82704,85388556,0,0x0,8
tick,0x7ff86ea82704,85390761,0,0x0,8
tick,0x7ff86ea82704,85392556,0,0x0,8
tick,0x7ff86ea82704,85394581,0,0x0,8
tick,0x7ff86ea82704,85396533,0,0x0,8
tick,0x7ff86ea82704,85398669,0,0x0,8
tick,0x7ff86ea82704,85400542,0,0x0,8
tick,0x7ff86ea82704,85402614,0,0x0,8
tick,0x7ff86ea82704,85404639,0,0x0,8
tick,0x7ff86ea82704,85406580,0,0x0,8
tick,0x7ff86ea82704,85408512,0,0x0,8
tick,0x7ff86ea82704,85410535,0,0x0,8
tick,0x7ff86ea82704,85412469,0,0x0,8
tick,0x7ff86ea82704,85414463,0,0x0,8
tick,0x7ff86ea82704,85416467,0,0x0,8
tick,0x7ff86ea82704,85418495,0,0x0,8
tick,0x7ff86ea82704,85420557,0,0x0,8
tick,0x7ff86ea82704,85422500,0,0x0,8
tick,0x7ff86ea82704,85424474,0,0x0,8
tick,0x7ff86ea82704,85426581,0,0x0,8
tick,0x7ff86ea82704,85428419,0,0x0,8
tick,0x7ff86ea82704,85430529,0,0x0,8
tick,0x7ff86ea82704,85432327,0,0x0,8
tick,0x7ff86ea82704,85434552,0,0x0,8
tick,0x7ff86ea82704,85436418,0,0x0,8
tick,0x7ff86ea82704,85438466,0,0x0,8
tick,0x7ff86ea82704,85440421,0,0x0,8
tick,0x7ff86ea82704,85442439,0,0x0,8
tick,0x7ff86ea82704,85444470,0,0x0,8
tick,0x7ff86ea82704,85446406,0,0x0,8
tick,0x7ff86ea82704,85448495,0,0x0,8
tick,0x7ff86ea82704,85450363,0,0x0,8
tick,0x7ff86ea82704,85452488,0,0x0,8
tick,0x7ff86ea82704,85454412,0,0x0,8
tick,0x7ff86ea82704,85456349,0,0x0,8
tick,0x7ff86ea82704,85458436,0,0x0,8
tick,0x7ff86ea82704,85460357,0,0x0,8
tick,0x7ff86ea82704,85462413,0,0x0,8
tick,0x7ff86ea82704,85464435,0,0x0,8
tick,0x7ff86ea82704,85466389,0,0x0,8
tick,0x7ff86ea82704,85468379,0,0x0,8
tick,0x7ff86ea82704,85470447,0,0x0,8
tick,0x7ff86ea82704,85472264,0,0x0,8
tick,0x7ff86ea82704,85474421,0,0x0,8
tick,0x7ff86ea82704,85476459,0,0x0,8
tick,0x7ff86ea82704,85478344,0,0x0,8
tick,0x7ff86ea82704,85480366,0,0x0,8
tick,0x7ff86ea82704,85482447,0,0x0,8
tick,0x7ff86ea82704,85484250,0,0x0,8
tick,0x7ff86ea82704,85486392,0,0x0,8
tick,0x7ff86ea82704,85488207,0,0x0,8
tick,0x7ff86ea82704,85490383,0,0x0,8
tick,0x7ff86ea82704,85492224,0,0x0,8
tick,0x7ff86ea82704,85494346,0,0x0,8
tick,0x7ff86ea82704,85496350,0,0x0,8
tick,0x7ff86ea82704,85498369,0,0x0,8
tick,0x7ff86ea82704,85500304,0,0x0,8
tick,0x7ff86ea82704,85502450,0,0x0,8
tick,0x7ff86ea82704,85504209,0,0x0,8
tick,0x7ff86ea82704,85506269,0,0x0,8
tick,0x7ff86ea82704,85508273,0,0x0,8
tick,0x7ff86ea82704,85510300,0,0x0,8
tick,0x7ff86ea82704,85512241,0,0x0,8
tick,0x7ff86ea82704,85514361,0,0x0,8
tick,0x7ff86ea82704,85516248,0,0x0,8
tick,0x7ff86ea82704,85518271,0,0x0,8
tick,0x7ff86ea82704,85520191,0,0x0,8
tick,0x7ff86ea82704,85522309,0,0x0,8
tick,0x7ff86ea82704,85524165,0,0x0,8
tick,0x7ff86ea82704,85526201,0,0x0,8
tick,0x7ff86ea82704,85528197,0,0x0,8
tick,0x7ff86ea82704,85530179,0,0x0,8
tick,0x7ff86ea82704,85532289,0,0x0,8
tick,0x7ff86ea82704,85534184,0,0x0,8
tick,0x7ff86ea82704,85536250,0,0x0,8
tick,0x7ff86ea82704,85538406,0,0x0,8
tick,0x7ff86ea82704,85540154,0,0x0,8
tick,0x7ff86ea82704,85542252,0,0x0,8
tick,0x7ff86ea82704,85544203,0,0x0,8
tick,0x7ff86ea82704,85546289,0,0x0,8
tick,0x7ff86ea82704,85548117,0,0x0,8
tick,0x7ff86ea82704,85550235,0,0x0,8
tick,0x7ff86ea82704,85552129,0,0x0,8
tick,0x7ff86ea82704,85554232,0,0x0,8
tick,0x7ff86ea82704,85556094,0,0x0,8
tick,0x7ff86ea82704,85558134,0,0x0,8
tick,0x7ff86ea82704,85560073,0,0x0,8
tick,0x7ff86ea82704,85562194,0,0x0,8
tick,0x7ff86ea82704,85564030,0,0x0,8
tick,0x7ff86ea82704,85566209,0,0x0,8
tick,0x7ff86ea82704,85567990,0,0x0,8
tick,0x7ff86ea82704,85570351,0,0x0,8
tick,0x7ff86ea82704,85572135,0,0x0,8
tick,0x7ff86ea82704,85574095,0,0x0,8
tick,0x7ff86ea82704,85576045,0,0x0,8
tick,0x7ff86ea82704,85577999,0,0x0,8
tick,0x7ff86ea82704,85580082,0,0x0,8
tick,0x7ff86ea82704,85582028,0,0x0,8
tick,0x7ff86ea82704,85584022,0,0x0,8
tick,0x7ff86ea82704,85585990,0,0x0,8
tick,0x7ff86ea82704,85588110,0,0x0,8
tick,0x7ff86ea82704,85589924,0,0x0,8
tick,0x7ff86ea82704,85592005,0,0x0,8
tick,0x7ff86ea82704,85593927,0,0x0,8
tick,0x7ff86ea82704,85595983,0,0x0,8
tick,0x7ff86ea82704,85597959,0,0x0,8
tick,0x7ff86ea82704,85600109,0,0x0,8
tick,0x7ff86ea82704,85603784,0,0x0,8
tick,0x7ff86ea82704,85605099,0,0x0,8
tick,0x7ff86ea82704,85607070,0,0x0,8
tick,0x7ff86ea82704,85609031,0,0x0,8
tick,0x7ff86ea82704,85611044,0,0x0,8
tick,0x7ff86ea82704,85613036,0,0x0,8
tick,0x7ff86ea82704,85615025,0,0x0,8
tick,0x7ff86ea82704,85617232,0,0x0,8
tick,0x7ff86ea82704,85618929,0,0x0,8
tick,0x7ff86ea82704,85621093,0,0x0,8
tick,0x7ff86ea82704,85623017,0,0x0,8
tick,0x7ff86ea82704,85625047,0,0x0,8
tick,0x7ff86ea82704,85627318,0,0x0,8
tick,0x7ff86ea82704,85629228,0,0x0,8
tick,0x7ff86ea82704,85631006,0,0x0,8
tick,0x7ff86ea82704,85633155,0,0x0,8
tick,0x7ff86ea82704,85635416,0,0x0,8
tick,0x7ff86ea82704,85637061,0,0x0,8
tick,0x7ff86ea82704,85639112,0,0x0,8
tick,0x7ff86ea82704,85641138,0,0x0,8
tick,0x7ff86ea82704,85642992,0,0x0,8
tick,0x7ff86ea82704,85645164,0,0x0,8
tick,0x7ff86ea82704,85647144,0,0x0,8
tick,0x7ff86ea82704,85649092,0,0x0,8
tick,0x7ff86ea82704,85650905,0,0x0,8
tick,0x7ff86ea82704,85652986,0,0x0,8
tick,0x7ff86ea82704,85654900,0,0x0,8
tick,0x7ff86ea82704,85657260,0,0x0,8
tick,0x7ff86ea82704,85658916,0,0x0,8
tick,0x7ff86ea82704,85661000,0,0x0,8
tick,0x7ff86ea82704,85662970,0,0x0,8
tick,0x7ff86ea82704,85665110,0,0x0,8
tick,0x7ff86ea82704,85667051,0,0x0,8
tick,0x7ff86ea82704,85668972,0,0x0,8
tick,0x7ff86ea82704,85670862,0,0x0,8
tick,0x7ff86ea82704,85673311,0,0x0,8
tick,0x7ff86ea82704,85674825,0,0x0,8
tick,0x7ff86ea82704,85677157,0,0x0,8
tick,0x7ff86ea82704,85679042,0,0x0,8
tick,0x7ff86ea82704,85681219,0,0x0,8
tick,0x7ff86ea82704,85682905,0,0x0,8
tick,0x7ff86ea82704,85684924,0,0x0,8
tick,0x7ff86ea82704,85686964,0,0x0,8
tick,0x7ff86ea82704,85688908,0,0x0,8
tick,0x7ff86ea82704,85690861,0,0x0,8
tick,0x7ff86ea82704,85692811,0,0x0,8
tick,0x7ff86ea82704,85694720,0,0x0,8
tick,0x7ff86ea82704,85697139,0,0x0,8
tick,0x7ff86ea82704,85698732,0,0x0,8
tick,0x7ff86ea82704,85700788,0,0x0,8
tick,0x7ff86ea82704,85702972,0,0x0,8
tick,0x7ff86ea82704,85704699,0,0x0,8
tick,0x7ff86ea82704,85706833,0,0x0,8
tick,0x7ff86ea82704,85708694,0,0x0,8
tick,0x7ff86ea82704,85710851,0,0x0,8
tick,0x7ff86ea82704,85712723,0,0x0,8
tick,0x7ff86ea82704,85714889,0,0x0,8
tick,0x7ff86ea82704,85716715,0,0x0,8
tick,0x7ff86ea82704,85718914,0,0x0,8
tick,0x7ff86ea82704,85720648,0,0x0,8
tick,0x7ff86ea82704,85722781,0,0x0,8
tick,0x7ff86ea82704,85724733,0,0x0,8
tick,0x7ff86ea82704,85726725,0,0x0,8
tick,0x7ff86ea82704,85728751,0,0x0,8
tick,0x7ff86ea82704,85730772,0,0x0,8
tick,0x7ff86ea82704,85732605,0,0x0,8
tick,0x7ff86ea82704,85734802,0,0x0,8
tick,0x7ff86ea82704,85736666,0,0x0,8
tick,0x7ff86ea82704,85738809,0,0x0,8
tick,0x7ff86ea82704,85740849,0,0x0,8
tick,0x7ff86ea82704,85742625,0,0x0,8
tick,0x7ff86ea82704,85744637,0,0x0,8
tick,0x7ff86ea82704,85746515,0,0x0,8
tick,0x7ff86ea82704,85748692,0,0x0,8
tick,0x7ff86ea82704,85750616,0,0x0,8
tick,0x7ff86ea82704,85752588,0,0x0,8
tick,0x7ff86ea82704,85754640,0,0x0,8
tick,0x7ff86ea82704,85756627,0,0x0,8
tick,0x7ff86ea82704,85758612,0,0x0,8
tick,0x7ff86ea82704,85760655,0,0x0,8
tick,0x7ff86ea82704,85762703,0,0x0,8
tick,0x7ff86ea82704,85764654,0,0x0,8
tick,0x7ff86ea82704,85766741,0,0x0,8
tick,0x7ff86ea82704,85768594,0,0x0,8
tick,0x7ff86ea82704,85770582,0,0x0,8
tick,0x7ff86ea82704,85772721,0,0x0,8
tick,0x7ff86ea82704,85774551,0,0x0,8
tick,0x7ff86ea82704,85776616,0,0x0,8
tick,0x7ff86ea82704,85778545,0,0x0,8
tick,0x7ff86ea82704,85780682,0,0x0,8
tick,0x7ff86ea82704,85782477,0,0x0,8
tick,0x7ff86ea82704,85784667,0,0x0,8
tick,0x7ff86ea82704,85786525,0,0x0,8
tick,0x7ff86ea82704,85788543,0,0x0,8
tick,0x7ff86ea82704,85790532,0,0x0,8
tick,0x7ff86ea82704,85792509,0,0x0,8
tick,0x7ff86ea82704,85794564,0,0x0,8
tick,0x7ff86ea82704,85796476,0,0x0,8
tick,0x7ff86ea82704,85798551,0,0x0,8
tick,0x7ff86ea82704,85800585,0,0x0,8
tick,0x7ff86ea82704,85802521,0,0x0,8
tick,0x7ff86ea82704,85804536,0,0x0,8
tick,0x7ff86ea82704,85806520,0,0x0,8
tick,0x7ff86ea82704,85808378,0,0x0,8
tick,0x7ff86ea82704,85810605,0,0x0,8
tick,0x7ff86ea82704,85812491,0,0x0,8
tick,0x7ff86ea82704,85814652,0,0x0,8
tick,0x7ff86ea82704,85816456,0,0x0,8
tick,0x7ff86ea82704,85818507,0,0x0,8
tick,0x7ff86ea82704,85820531,0,0x0,8
tick,0x7ff86ea82704,85822399,0,0x0,8
tick,0x7ff86ea82704,85824520,0,0x0,8
tick,0x7ff86ea82704,85826489,0,0x0,8
tick,0x7ff86ea82704,85828484,0,0x0,8
tick,0x7ff86ea82704,85830387,0,0x0,8
tick,0x7ff86ea82704,85832463,0,0x0,8
tick,0x7ff86ea82704,85834462,0,0x0,8
tick,0x7ff86ea82704,85836384,0,0x0,8
tick,0x7ff86ea82704,85838410,0,0x0,8
tick,0x7ff86ea82704,85840458,0,0x0,8
tick,0x7ff86ea82704,85842398,0,0x0,8
tick,0x7ff86ea82704,85844475,0,0x0,8
tick,0x7ff86ea82704,85846374,0,0x0,8
tick,0x7ff86ea82704,85848416,0,0x0,8
tick,0x7ff86ea82704,85850396,0,0x0,8
tick,0x7ff86ea82704,85852375,0,0x0,8
tick,0x7ff86ea82704,85854308,0,0x0,8
tick,0x7ff86ea82704,85856329,0,0x0,8
tick,0x7ff86ea82704,85858399,0,0x0,8
tick,0x7ff86ea82704,85860283,0,0x0,8
tick,0x7ff86ea82704,85862392,0,0x0,8
tick,0x7ff86ea82704,85864246,0,0x0,8
tick,0x7ff86ea82704,85866428,0,0x0,8
tick,0x7ff86ea82704,85868268,0,0x0,8
tick,0x7ff86ea82704,85870436,0,0x0,8
tick,0x7ff86ea82704,85872274,0,0x0,8
tick,0x7ff86ea82704,85874266,0,0x0,8
tick,0x7ff86ea82704,85876417,0,0x0,8
tick,0x7ff86ea82704,85878307,0,0x0,8
tick,0x7ff86ea82704,85880270,0,0x0,8
tick,0x7ff86ea82704,85882366,0,0x0,8
tick,0x7ff86ea82704,85884385,0,0x0,8
tick,0x7ff86ea82704,85886296,0,0x0,8
tick,0x7ff86ea82704,85888338,0,0x0,8
tick,0x7ff86ea82704,85890277,0,0x0,8
tick,0x7ff86ea82704,85892344,0,0x0,8
tick,0x7ff86ea82704,85894215,0,0x0,8
tick,0x7ff86ea82704,85896353,0,0x0,8
tick,0x7ff86ea82704,85898219,0,0x0,8
tick,0x7ff86ea82704,85900322,0,0x0,8
tick,0x7ff86ea82704,85902194,0,0x0,8
tick,0x7ff86ea82704,85904302,0,0x0,8
tick,0x7ff86ea82704,85906216,0,0x0,8
tick,0x7ff86ea82704,85908167,0,0x0,8
tick,0x7ff86ea82704,85910333,0,0x0,8
tick,0x7ff86ea82704,85912301,0,0x0,8
tick,0x7ff86ea82704,85914223,0,0x0,8
tick,0x7ff86ea82704,85916239,0,0x0,8
tick,0x7ff86ea82704,85918403,0,0x0,8
tick,0x7ff86ea82704,85920272,0,0x0,8
tick,0x7ff86ea82704,85922172,0,0x0,8
tick,0x7ff86ea82704,85924349,0,0x0,8
tick,0x7ff86ea82704,85926127,0,0x0,8
tick,0x7ff86ea82704,85928334,0,0x0,8
tick,0x7ff86ea82704,85930139,0,0x0,8
tick,0x7ff86ea82704,85932283,0,0x0,8
tick,0x7ff86ea82704,85934223,0,0x0,8
tick,0x7ff86ea82704,85936261,0,0x0,8
tick,0x7ff86ea82704,85938138,0,0x0,8
tick,0x7ff86ea82704,85940197,0,0x0,8
tick,0x7ff86ea82704,85942203,0,0x0,8
tick,0x7ff86ea82704,85944169,0,0x0,8
tick,0x7ff86ea82704,85946250,0,0x0,8
tick,0x7ff86ea82704,85948170,0,0x0,8
tick,0x7ff86ea82704,85950187,0,0x0,8
tick,0x7ff86ea82704,85952028,0,0x0,8
tick,0x7ff86ea82704,85954189,0,0x0,8
tick,0x7ff86ea82704,85956112,0,0x0,8
tick,0x7ff86ea82704,85958120,0,0x0,8
tick,0x7ff86ea82704,85960094,0,0x0,8
tick,0x7ff86ea82704,85962244,0,0x0,8
tick,0x7ff86ea82704,85964208,0,0x0,8
tick,0x7ff86ea82704,85966028,0,0x0,8
tick,0x7ff86ea82704,85968184,0,0x0,8
tick,0x7ff86ea82704,85970127,0,0x0,8
tick,0x7ff86ea82704,85972087,0,0x0,8
tick,0x7ff86ea82704,85974089,0,0x0,8
tick,0x7ff86ea82704,85976123,0,0x0,8
tick,0x7ff86ea82704,85978004,0,0x0,8
tick,0x7ff86ea82704,85980285,0,0x0,8
tick,0x7ff86ea82704,85981977,0,0x0,8
tick,0x7ff86ea82704,85984094,0,0x0,8
tick,0x7ff86ea82704,85985962,0,0x0,8
tick,0x7ff86ea82704,85988099,0,0x0,8
tick,0x7ff86ea82704,85989957,0,0x0,8
tick,0x7ff86ea82704,85991966,0,0x0,8
tick,0x7ff86ea82704,85993916,0,0x0,8
tick,0x7ff86ea82704,85996024,0,0x0,8
tick,0x7ff86ea82704,85998039,0,0x0,8
tick,0x7ff86ea82704,86000063,0,0x0,8
tick,0x7ff86ea82704,86002064,0,0x0,8
tick,0x7ff86ea82704,86003921,0,0x0,8
tick,0x7ff86ea82704,86006025,0,0x0,8
tick,0x7ff86ea82704,86007941,0,0x0,8
tick,0x7ff86ea82704,86009964,0,0x0,8
tick,0x7ff86ea82704,86011993,0,0x0,8
tick,0x7ff86ea82704,86014077,0,0x0,8
tick,0x7ff86ea82704,86015930,0,0x0,8
tick,0x7ff86ea82704,86018037,0,0x0,8
tick,0x7ff86ea82704,86019945,0,0x0,8
tick,0x7ff86ea82704,86021943,0,0x0,8
tick,0x7ff86ea82704,86023865,0,0x0,8
tick,0x7ff86ea82704,86025957,0,0x0,8
tick,0x7ff86ea82704,86027960,0,0x0,8
tick,0x7ff86ea82704,86029926,0,0x0,8
tick,0x7ff86ea82704,86031828,0,0x0,8
tick,0x7ff86ea82704,86033880,0,0x0,8
tick,0x7ff86ea82704,86035916,0,0x0,8
tick,0x7ff86ea82704,86037938,0,0x0,8
tick,0x7ff86ea82704,86039873,0,0x0,8
tick,0x7ff86ea82704,86041947,0,0x0,8
tick,0x7ff86ea82704,86043876,0,0x0,8
tick,0x7ff86ea82704,86045827,0,0x0,8
tick,0x7ff86ea82704,86047862,0,0x0,8
tick,0x7ff86ea82704,86049841,0,0x0,8
tick,0x7ff86ea82704,86051843,0,0x0,8
tick,0x7ff86ea82704,86053904,0,0x0,8
tick,0x7ff86ea82704,86055891,0,0x0,8
tick,0x7ff86ea82704,86057796,0,0x0,8
tick,0x7ff86ea82704,86059931,0,0x0,8
tick,0x7ff86ea82704,86061751,0,0x0,8
tick,0x7ff86ea82704,86063854,0,0x0,8
tick,0x7ff86ea82704,86065786,0,0x0,8
tick,0x7ff86ea82704,86067847,0,0x0,8
tick,0x7ff86ea82704,86069717,0,0x0,8
tick,0x7ff86ea82704,86071784,0,0x0,8
tick,0x7ff86ea82704,86073739,0,0x0,8
tick,0x7ff86ea82704,86075971,0,0x0,8
tick,0x7ff86ea82704,86077761,0,0x0,8
tick,0x7ff86ea82704,86079749,0,0x0,8
tick,0x7ff86ea82704,86081744,0,0x0,8
tick,0x7ff86ea82704,86083700,0,0x0,8
tick,0x7ff86ea82704,86085713,0,0x0,8
tick,0x7ff86ea82704,86087825,0,0x0,8
tick,0x7ff86ea82704,86089733,0,0x0,8
tick,0x7ff86ea82704,86091819,0,0x0,8
tick,0x7ff86ea82704,86093723,0,0x0,8
tick,0x7ff86ea82704,86095705,0,0x0,8
tick,0x7ff86ea82704,86097824,0,0x0,8
tick,0x7ff86ea82704,86099684,0,0x0,8
tick,0x7ff86ea82704,86101779,0,0x0,8
tick,0x7ff86ea82704,86103762,0,0x0,8
tick,0x7ff86ea82704,86105727,0,0x0,8
tick,0x7ff86ea82704,86107641,0,0x0,8
tick,0x7ff86ea82704,86109633,0,0x0,8
tick,0x7ff86ea82704,86111697,0,0x0,8
tick,0x7ff86ea82704,86113645,0,0x0,8
tick,0x7ff86ea82704,86115724,0,0x0,8
tick,0x7ff86ea82704,86117627,0,0x0,8
tick,0x7ff86ea82704,86119611,0,0x0,8
tick,0x7ff86ea82704,86121585,0,0x0,8
tick,0x7ff86ea82704,86123788,0,0x0,8
tick,0x7ff86ea82704,86125624,0,0x0,8
tick,0x7ff86ea82704,86127718,0,0x0,8
tick,0x7ff86ea82704,86129627,0,0x0,8
tick,0x7ff86ea82704,86131710,0,0x0,8
tick,0x7ff86ea82704,86133669,0,0x0,8
tick,0x7ff86ea82704,86135583,0,0x0,8
tick,0x7ff86ea82704,86137674,0,0x0,8
tick,0x7ff86ea82704,86139601,0,0x0,8
tick,0x7ff86ea82704,86141678,0,0x0,8
tick,0x7ff86ea82704,86143548,0,0x0,8
tick,0x7ff86ea82704,86145657,0,0x0,8
tick,0x7ff86ea82704,86147660,0,0x0,8
tick,0x7ff86ea82704,86149579,0,0x0,8
tick,0x7ff86ea82704,86151559,0,0x0,8
tick,0x7ff86ea82704,86153593,0,0x0,8
tick,0x7ff86ea82704,86155487,0,0x0,8
tick,0x7ff86ea82704,86157630,0,0x0,8
tick,0x7ff86ea82704,86159656,0,0x0,8
tick,0x7ff86ea82704,86161704,0,0x0,8
tick,0x7ff86ea82704,86163775,0,0x0,8
tick,0x7ff86ea82704,86165685,0,0x0,8
tick,0x7ff86ea82704,86167747,0,0x0,8
tick,0x7ff86ea82704,86169613,0,0x0,8
tick,0x7ff86ea82704,86171622,0,0x0,8
tick,0x7ff86ea82704,86173598,0,0x0,8
tick,0x7ff86ea82704,86175458,0,0x0,8
tick,0x7ff86ea82704,86177518,0,0x0,8
tick,0x7ff86ea82704,86179615,0,0x0,8
tick,0x7ff86ea82704,86181532,0,0x0,8
tick,0x7ff86ea82704,86183622,0,0x0,8
tick,0x7ff86ea82704,86185596,0,0x0,8
tick,0x7ff86ea82704,86187539,0,0x0,8
tick,0x7ff86ea82704,86189424,0,0x0,8
tick,0x7ff86ea82704,86191488,0,0x0,8
tick,0x7ff86ea82704,86193439,0,0x0,8
tick,0x7ff86ea82704,86195559,0,0x0,8
tick,0x7ff86ea82704,86197616,0,0x0,8
tick,0x7ff86ea82704,86199409,0,0x0,8
tick,0x7ff86ea82704,86201569,0,0x0,8
tick,0x7ff86ea82704,86203504,0,0x0,8
tick,0x7ff86ea82704,86205484,0,0x0,8
tick,0x7ff86ea82704,86207430,0,0x0,8
tick,0x7ff86ea82704,86209484,0,0x0,8
tick,0x7ff86ea82704,86211453,0,0x0,8
tick,0x7ff86ea82704,86213930,0,0x0,8
tick,0x7ff86ea82704,86215259,0,0x0,8
tick,0x7ff86ea82704,86217433,0,0x0,8
tick,0x7ff86ea82704,86219253,0,0x0,8
tick,0x7ff86ea82704,86221341,0,0x0,8
tick,0x7ff86ea82704,86223383,0,0x0,8
tick,0x7ff86ea82704,86225264,0,0x0,8
tick,0x7ff86ea82704,86227429,0,0x0,8
tick,0x7ff86ea82704,86229283,0,0x0,8
tick,0x7ff86ea82704,86231302,0,0x0,8
tick,0x7ff86ea82704,86233387,0,0x0,8
tick,0x7ff86ea82704,86235318,0,0x0,8
tick,0x7ff86ea82704,86237290,0,0x0,8
tick,0x7ff86ea82704,86239345,0,0x0,8
tick,0x7ff86ea82704,86241446,0,0x0,8
tick,0x7ff86ea82704,86243309,0,0x0,8
tick,0x7ff86ea82704,86245655,0,0x0,8
tick,0x7ff86ea82704,86247307,0,0x0,8
tick,0x7ff86ea82704,86249309,0,0x0,8
tick,0x7ff86ea82704,86251286,0,0x0,8
tick,0x7ff86ea82704,86253195,0,0x0,8
tick,0x7ff86ea82704,86255510,0,0x0,8
tick,0x7ff86ea82704,86257353,0,0x0,8
tick,0x7ff86ea82704,86259318,0,0x0,8
tick,0x7ff86ea82704,86261359,0,0x0,8
tick,0x7ff86ea82704,86263226,0,0x0,8
tick,0x7ff86ea82704,86265447,0,0x0,8
tick,0x7ff86ea82704,86267313,0,0x0,8
tick,0x7ff86ea82704,86269425,0,0x0,8
tick,0x7ff86ea82704,86271321,0,0x0,8
tick,0x7ff86ea82704,86273358,0,0x0,8
tick,0x7ff86ea82704,86275117,0,0x0,8
tick,0x7ff86ea82704,86277203,0,0x0,8
tick,0x7ff86ea82704,86279215,0,0x0,8
tick,0x7ff86ea82704,86281241,0,0x0,8
tick,0x7ff86ea82704,86283200,0,0x0,8
tick,0x7ff86ea82704,86285268,0,0x0,8
tick,0x7ff86ea82704,86287197,0,0x0,8
tick,0x7ff86ea82704,86289308,0,0x0,8
tick,0x7ff86ea82704,86291136,0,0x0,8
tick,0x7ff86ea82704,86293253,0,0x0,8
tick,0x7ff86ea82704,86295157,0,0x0,8
tick,0x7ff86ea82704,86297101,0,0x0,8
tick,0x7ff86ea82704,86299158,0,0x0,8
tick,0x7ff86ea82704,86301232,0,0x0,8
tick,0x7ff86ea82704,86303081,0,0x0,8
tick,0x7ff86ea82704,86305263,0,0x0,8
tick,0x7ff86ea82704,86307104,0,0x0,8
tick,0x7ff86ea82704,86309164,0,0x0,8
tick,0x7ff86ea82704,86311126,0,0x0,8
tick,0x7ff86ea82704,86313176,0,0x0,8
tick,0x7ff86ea82704,86315090,0,0x0,8
tick,0x7ff86ea82704,86317252,0,0x0,8
tick,0x7ff86ea82704,86319131,0,0x0,8
tick,0x7ff86ea82704,86321100,0,0x0,8
tick,0x7ff86ea82704,86323167,0,0x0,8
tick,0x7ff86ea82704,86325381,0,0x0,8
tick,0x7ff86ea82704,86327107,0,0x0,8
tick,0x7ff86ea82704,86329070,0,0x0,8
tick,0x7ff86ea82704,86331041,0,0x0,8
tick,0x7ff86ea82704,86333081,0,0x0,8
tick,0x7ff86ea82704,86335124,0,0x0,8
tick,0x7ff86ea82704,86337062,0,0x0,8
tick,0x7ff86ea82704,86339087,0,0x0,8
tick,0x7ff86ea82704,86341176,0,0x0,8
tick,0x7ff86ea82704,86343125,0,0x0,8
tick,0x7ff86ea82704,86344978,0,0x0,8
tick,0x7ff86ea82704,86347119,0,0x0,8
tick,0x7ff86ea82704,86349005,0,0x0,8
tick,0x7ff86ea82704,86351046,0,0x0,8
tick,0x7ff86ea82704,86353011,0,0x0,8
tick,0x7ff86ea82704,86355124,0,0x0,8
tick,0x7ff86ea82704,86356928,0,0x0,8
tick,0x7ff86ea82704,86359049,0,0x0,8
tick,0x7ff86ea82704,86360980,0,0x0,8
tick,0x7ff86ea82704,86363031,0,0x0,8
tick,0x7ff86ea82704,86364954,0,0x0,8
tick,0x7ff86ea82704,86367033,0,0x0,8
tick,0x7ff86ea82704,86368927,0,0x0,8
tick,0x7ff86ea82704,86370973,0,0x0,8
tick,0x7ff86ea82704,86373027,0,0x0,8
tick,0x7ff86ea82704,86374924,0,0x0,8
tick,0x7ff86ea82704,86376900,0,0x0,8
tick,0x7ff86ea82704,86379032,0,0x0,8
tick,0x7ff86ea82704,86381050,0,0x0,8
tick,0x7ff86ea82704,86382881,0,0x0,8
tick,0x7ff86ea82704,86384836,0,0x0,8
tick,0x7ff86ea82704,86386989,0,0x0,8
tick,0x7ff86ea82704,86388912,0,0x0,8
tick,0x7ff86ea82704,86391098,0,0x0,8
tick,0x7ff86ea82704,86392966,0,0x0,8
tick,0x7ff86ea82704,86394993,0,0x0,8
tick,0x7ff86ea82704,86396955,0,0x0,8
tick,0x7ff86ea82704,86398979,0,0x0,8
tick,0x7ff86ea82704,86400946,0,0x0,8
tick,0x7ff86ea82704,86402926,0,0x0,8
tick,0x7ff86ea82704,86404997,0,0x0,8
tick,0x7ff86ea82704,86406834,0,0x0,8
tick,0x7ff86ea82704,86408912,0,0x0,8
tick,0x7ff86ea82704,86410879,0,0x0,8
tick,0x7ff86ea82704,86412882,0,0x0,8
tick,0x7ff86ea82704,86414935,0,0x0,8
tick,0x7ff86ea82704,86417043,0,0x0,8
tick,0x7ff86ea82704,86418796,0,0x0,8
tick,0x7ff86ea82704,86420922,0,0x0,8
tick,0x7ff86ea82704,86422898,0,0x0,8
tick,0x7ff86ea82704,86425002,0,0x0,8
tick,0x7ff86ea82704,86426923,0,0x0,8
tick,0x7ff86ea82704,86428917,0,0x0,8
tick,0x7ff86ea82704,86430805,0,0x0,8
tick,0x7ff86ea82704,86432755,0,0x0,8
tick,0x7ff86ea82704,86434870,0,0x0,8
tick,0x7ff86ea82704,86436868,0,0x0,8
tick,0x7ff86ea82704,86438748,0,0x0,8
tick,0x7ff86ea82704,86440815,0,0x0,8
tick,0x7ff86ea82704,86442864,0,0x0,8
tick,0x7ff86ea82704,86444727,0,0x0,8
tick,0x7ff86ea82704,86446781,0,0x0,8
tick,0x7ff86ea82704,86448779,0,0x0,8
tick,0x7ff86ea82704,86450743,0,0x0,8
tick,0x7ff86ea82704,86452688,0,0x0,8
tick,0x7ff86ea82704,86454768,0,0x0,8
tick,0x7ff86ea82704,86456676,0,0x0,8
tick,0x7ff86ea82704,86458907,0,0x0,8
tick,0x7ff86ea82704,86460816,0,0x0,8
tick,0x7ff86ea82704,86462810,0,0x0,8
tick,0x7ff86ea82704,86464659,0,0x0,8
tick,0x7ff86ea82704,86466764,0,0x0,8
tick,0x7ff86ea82704,86468708,0,0x0,8
tick,0x7ff86ea82704,86470867,0,0x0,8
tick,0x7ff86ea82704,86472657,0,0x0,8
tick,0x7ff86ea82704,86474873,0,0x0,8
tick,0x7ff86ea82704,86476589,0,0x0,8
tick,0x7ff86ea82704,86478781,0,0x0,8
tick,0x7ff86ea82704,86480675,0,0x0,8
tick,0x7ff86ea82704,86483035,0,0x0,8
tick,0x7ff86ea82704,86484655,0,0x0,8
tick,0x7ff86ea82704,86486630,0,0x0,8
tick,0x7ff86ea82704,86488617,0,0x0,8
tick,0x7ff86ea82704,86490677,0,0x0,8
tick,0x7ff86ea82704,86492607,0,0x0,8
tick,0x7ff86ea82704,86494637,0,0x0,8
tick,0x7ff86ea82704,86496927,0,0x0,8
tick,0x7ff86ea82704,86498777,0,0x0,8
tick,0x7ff86ea82704,86500650,0,0x0,8
tick,0x7ff86ea82704,86502588,0,0x0,8
tick,0x7ff86ea82704,86504628,0,0x0,8
tick,0x7ff86ea82704,86506640,0,0x0,8
tick,0x7ff86ea82704,86508546,0,0x0,8
tick,0x7ff86ea82704,86510601,0,0x0,8
tick,0x7ff86ea82704,86512584,0,0x0,8
tick,0x7ff86ea82704,86514576,0,0x0,8
tick,0x7ff86ea82704,86516506,0,0x0,8
tick,0x7ff86ea82704,86518584,0,0x0,8
tick,0x7ff86ea82704,86520936,0,0x0,8
tick,0x7ff86ea82704,86522531,0,0x0,8
tick,0x7ff86ea82704,86524543,0,0x0,8
tick,0x7ff86ea82704,86526626,0,0x0,8
tick,0x7ff86ea82704,86528606,0,0x0,8
tick,0x7ff86ea82704,86530668,0,0x0,8
tick,0x7ff86ea82704,86532485,0,0x0,8
tick,0x7ff86ea82704,86534508,0,0x0,8
tick,0x7ff86ea82704,86536578,0,0x0,8
tick,0x7ff86ea82704,86538481,0,0x0,8
tick,0x7ff86ea82704,86540596,0,0x0,8
tick,0x7ff86ea82704,86542504,0,0x0,8
tick,0x7ff86ea82704,86544533,0,0x0,8
tick,0x7ff86ea82704,86546460,0,0x0,8
tick,0x7ff86ea82704,86548498,0,0x0,8
tick,0x7ff86ea82704,86550581,0,0x0,8
tick,0x7ff86ea82704,86552573,0,0x0,8
tick,0x7ff86ea82704,86554366,0,0x0,8
tick,0x7ff86ea82704,86556487,0,0x0,8
tick,0x7ff86ea82704,86558355,0,0x0,8
tick,0x7ff86ea82704,86560628,0,0x0,8
tick,0x7ff86ea82704,86562684,0,0x0,8
tick,0x7ff86ea82704,86564509,0,0x0,8
tick,0x7ff86ea82704,86566525,0,0x0,8
tick,0x7ff86ea82704,86568396,0,0x0,8
tick,0x7ff86ea82704,86570490,0,0x0,8
tick,0x7ff86ea82704,86572460,0,0x0,8
tick,0x7ff86ea82704,86574500,0,0x0,8
tick,0x7ff86ea82704,86576388,0,0x0,8
tick,0x7ff86ea82704,86578527,0,0x0,8
tick,0x7ff86ea82704,86580332,0,0x0,8
tick,0x7ff86ea82704,86582421,0,0x0,8
tick,0x7ff86ea82704,86584539,0,0x0,8
tick,0x7ff86ea82704,86586425,0,0x0,8
tick,0x7ff86ea82704,86588304,0,0x0,8
tick,0x7ff86ea82704,86590397,0,0x0,8
tick,0x7ff86ea82704,86592339,0,0x0,8
tick,0x7ff86ea82704,86594415,0,0x0,8
tick,0x7ff86ea82704,86596369,0,0x0,8
tick,0x7ff86ea82704,86598425,0,0x0,8
tick,0x7ff86ea82704,86600313,0,0x0,8
tick,0x7ff86ea82704,86602559,0,0x0,8
tick,0x7ff86ea82704,86604287,0,0x0,8
tick,0x7ff86ea82704,86606391,0,0x0,8
tick,0x7ff86ea82704,86608271,0,0x0,8
tick,0x7ff86ea82704,86610600,0,0x0,8
tick,0x7ff86ea82704,86612597,0,0x0,8
tick,0x7ff86ea82704,86614263,0,0x0,8
tick,0x7ff86ea82704,86616264,0,0x0,8
tick,0x7ff86ea82704,86618534,0,0x0,8
tick,0x7ff86ea82704,86620300,0,0x0,8
tick,0x7ff86ea82704,86622444,0,0x0,8
tick,0x7ff86ea82704,86624242,0,0x0,8
tick,0x7ff86ea82704,86626308,0,0x0,8
tick,0x7ff86ea82704,86628298,0,0x0,8
tick,0x7ff86ea82704,86630515,0,0x0,8
tick,0x7ff86ea82704,86632396,0,0x0,8
tick,0x7ff86ea82704,86634335,0,0x0,8
tick,0x7ff86ea82704,86636257,0,0x0,8
tick,0x7ff86ea82704,86638341,0,0x0,8
tick,0x7ff86ea82704,86640300,0,0x0,8
tick,0x7ff86ea82704,86642273,0,0x0,8
tick,0x7ff86ea82704,86644287,0,0x0,8
tick,0x7ff86ea82704,86646325,0,0x0,8
tick,0x7ff86ea82704,86648427,0,0x0,8
tick,0x7ff86ea82704,86650290,0,0x0,8
tick,0x7ff86ea82704,86652288,0,0x0,8
tick,0x7ff86ea82704,86654292,0,0x0,8
tick,0x7ff86ea82704,86656195,0,0x0,8
tick,0x7ff86ea82704,86658164,0,0x0,8
tick,0x7ff86ea82704,86660123,0,0x0,8
tick,0x7ff86ea82704,86662483,0,0x0,8
tick,0x7ff86ea82704,86664219,0,0x0,8
tick,0x7ff86ea82704,86666265,0,0x0,8
tick,0x7ff86ea82704,86668113,0,0x0,8
tick,0x7ff86ea82704,86670243,0,0x0,8
tick,0x7ff86ea82704,86672076,0,0x0,8
tick,0x7ff86ea82704,86674130,0,0x0,8
tick,0x7ff86ea82704,86676093,0,0x0,8
tick,0x7ff86ea82704,86678134,0,0x0,8
tick,0x7ff86ea82704,86680125,0,0x0,8
tick,0x7ff86ea82704,86682164,0,0x0,8
tick,0x7ff86ea82704,86684111,0,0x0,8
tick,0x7ff86ea82704,86686185,0,0x0,8
tick,0x7ff86ea82704,86688095,0,0x0,8
tick,0x7ff86ea82704,86690215,0,0x0,8
tick,0x7ff86ea82704,86692172,0,0x0,8
tick,0x7ff86ea82704,86694225,0,0x0,8
tick,0x7ff86ea82704,86696030,0,0x0,8
tick,0x7ff86ea82704,86698226,0,0x0,8
tick,0x7ff86ea82704,86700005,0,0x0,8
tick,0x7ff86ea82704,86702090,0,0x0,8
tick,0x7ff86ea82704,86703977,0,0x0,8
tick,0x7ff86ea82704,86706128,0,0x0,8
tick,0x7ff86ea82704,86708072,0,0x0,8
tick,0x7ff86ea82704,86710062,0,0x0,8
tick,0x7ff86ea82704,86711961,0,0x0,8
tick,0x7ff86ea82704,86714080,0,0x0,8
tick,0x7ff86ea82704,86716058,0,0x0,8
tick,0x7ff86ea82704,86718069,0,0x0,8
tick,0x7ff86ea82704,86719970,0,0x0,8
tick,0x7ff86ea82704,86721988,0,0x0,8
tick,0x7ff86ea82704,86724039,0,0x0,8
tick,0x7ff86ea82704,86726026,0,0x0,8
tick,0x7ff86ea82704,86728062,0,0x0,8
tick,0x7ff86ea82704,86729992,0,0x0,8
tick,0x7ff86ea82704,86732014,0,0x0,8
tick,0x7ff86ea82704,86733925,0,0x0,8
tick,0x7ff86ea82704,86735980,0,0x0,8
tick,0x7ff86ea82704,86737943,0,0x0,8
tick,0x7ff86ea82704,86739977,0,0x0,8
tick,0x7ff86ea82704,86741960,0,0x0,8
tick,0x7ff86ea82704,86743960,0,0x0,8
tick,0x7ff86ea82704,86745905,0,0x0,8
tick,0x7ff86ea82704,86747916,0,0x0,8
tick,0x7ff86ea82704,86749922,0,0x0,8
tick,0x7ff86ea82704,86751888,0,0x0,8
tick,0x7ff86ea82704,86753927,0,0x0,8
tick,0x7ff86ea82704,86755909,0,0x0,8
tick,0x7ff86ea82704,86757967,0,0x0,8
tick,0x7ff86ea82704,86759817,0,0x0,8
tick,0x7ff86ea82704,86761922,0,0x0,8
tick,0x7ff86ea82704,86763935,0,0x0,8
tick,0x7ff86ea82704,86765835,0,0x0,8
tick,0x7ff86ea82704,86767882,0,0x0,8
tick,0x7ff86ea82704,86769841,0,0x0,8
tick,0x7ff86ea82704,86771937,0,0x0,8
tick,0x7ff86ea82704,86773909,0,0x0,8
tick,0x7ff86ea82704,86775968,0,0x0,8
tick,0x7ff86ea82704,86777996,0,0x0,8
tick,0x7ff86ea82704,86779811,0,0x0,8
tick,0x7ff86ea82704,86781903,0,0x0,8
tick,0x7ff86ea82704,86783901,0,0x0,8
tick,0x7ff86ea82704,86785903,0,0x0,8
tick,0x7ff86ea82704,86787921,0,0x0,8
tick,0x7ff86ea82704,86789893,0,0x0,8
tick,0x7ff86ea82704,86791770,0,0x0,8
tick,0x7ff86ea82704,86793836,0,0x0,8
tick,0x7ff86ea82704,86795977,0,0x0,8
tick,0x7ff86ea82704,86797757,0,0x0,8
tick,0x7ff86ea82704,86799874,0,0x0,8
tick,0x7ff86ea82704,86801774,0,0x0,8
tick,0x7ff86ea82704,86803803,0,0x0,8
tick,0x7ff86ea82704,86805746,0,0x0,8
tick,0x7ff86ea82704,86807914,0,0x0,8
tick,0x7ff86ea82704,86809775,0,0x0,8
tick,0x7ff86ea82704,86811766,0,0x0,8
tick,0x7ff86ea82704,86813748,0,0x0,8
tick,0x7ff86ea82704,86815743,0,0x0,8
tick,0x7ff86ea82704,86820811,0,0x0,8
tick,0x7ff86ea82704,86822927,0,0x0,8
tick,0x7ff86ea82704,86825072,0,0x0,8
tick,0x7ff86ea82704,86826807,0,0x0,8
tick,0x7ff86ea82704,86829203,0,0x0,8
tick,0x7ff86ea82704,86831376,0,0x0,8
tick,0x7ff86ea82704,86833152,0,0x0,8
tick,0x7ff86ea82704,86834739,0,0x0,8
tick,0x7ff86ea82704,86836984,0,0x0,8
tick,0x7ff86ea82704,86838894,0,0x0,8
tick,0x7ff86ea82704,86841068,0,0x0,8
tick,0x7ff86ea82704,86842870,0,0x0,8
tick,0x7ff86ea82704,86844959,0,0x0,8
tick,0x7ff86ea82704,86846903,0,0x0,8
tick,0x7ff86ea82704,86848962,0,0x0,8
tick,0x7ff86ea82704,86850972,0,0x0,8
tick,0x7ff86ea82704,86852877,0,0x0,8
tick,0x7ff86ea82704,86854864,0,0x0,8
tick,0x7ff86ea82704,86856836,0,0x0,8
tick,0x7ff86ea82704,86858843,0,0x0,8
tick,0x7ff86ea82704,86860796,0,0x0,8
tick,0x7ff86ea82704,86862831,0,0x0,8
tick,0x7ff86ea82704,86864934,0,0x0,8
tick,0x7ff86ea82704,86866818,0,0x0,8
tick,0x7ff86ea82704,86868857,0,0x0,8
tick,0x7ff86ea82704,86870725,0,0x0,8
tick,0x7ff86ea82704,86872781,0,0x0,8
tick,0x7ff86ea82704,86874896,0,0x0,8
tick,0x7ff86ea82704,86876797,0,0x0,8
tick,0x7ff86ea82704,86878952,0,0x0,8
tick,0x7ff86ea82704,86880787,0,0x0,8
tick,0x7ff86ea82704,86882701,0,0x0,8
tick,0x7ff86ea82704,86884738,0,0x0,8
tick,0x7ff86ea82704,86886817,0,0x0,8
tick,0x7ff86ea82704,86888702,0,0x0,8
tick,0x7ff86ea82704,86890714,0,0x0,8
tick,0x7ff86ea82704,86892664,0,0x0,8
tick,0x7ff86ea82704,86894918,0,0x0,8
tick,0x7ff86ea82704,86896563,0,0x0,8
tick,0x7ff86ea82704,86898759,0,0x0,8
tick,0x7ff86ea82704,86900649,0,0x0,8
tick,0x7ff86ea82704,86902785,0,0x0,8
tick,0x7ff86ea82704,86904676,0,0x0,8
tick,0x7ff86ea82704,86906719,0,0x0,8
tick,0x7ff86ea82704,86908606,0,0x0,8
tick,0x7ff86ea82704,86910803,0,0x0,8
tick,0x7ff86ea82704,86912675,0,0x0,8
tick,0x7ff86ea82704,86914823,0,0x0,8
tick,0x7ff86ea82704,86916694,0,0x0,8
tick,0x7ff86ea82704,86918708,0,0x0,8
tick,0x7ff86ea82704,86920718,0,0x0,8
tick,0x7ff86ea82704,86922496,0,0x0,8
tick,0x7ff86ea82704,86924779,0,0x0,8
tick,0x7ff86ea82704,86926727,0,0x0,8
tick,0x7ff86ea82704,86928628,0,0x0,8
tick,0x7ff86ea82704,86930647,0,0x0,8
tick,0x7ff86ea82704,86932565,0,0x0,8
tick,0x7ff86ea82704,86934576,0,0x0,8
tick,0x7ff86ea82704,86936594,0,0x0,8
tick,0x7ff86ea82704,86938676,0,0x0,8
tick,0x7ff86ea82704,86940557,0,0x0,8
tick,0x7ff86ea82704,86942640,0,0x0,8
tick,0x7ff86ea82704,86944736,0,0x0,8
tick,0x7ff86ea82704,86946678,0,0x0,8
tick,0x7ff86ea82704,86948517,0,0x0,8
tick,0x7ff86ea82704,86950622,0,0x0,8
tick,0x7ff86ea82704,86952616,0,0x0,8
tick,0x7ff86ea82704,86954716,0,0x0,8
tick,0x7ff86ea82704,86956521,0,0x0,8
tick,0x7ff86ea82704,86958567,0,0x0,8
tick,0x7ff86ea82704,86960656,0,0x0,8
tick,0x7ff86ea82704,86962810,0,0x0,8
tick,0x7ff86ea82704,86964538,0,0x0,8
tick,0x7ff86ea82704,86966595,0,0x0,8
tick,0x7ff86ea82704,86968492,0,0x0,8
tick,0x7ff86ea82704,86970478,0,0x0,8
tick,0x7ff86ea82704,86972397,0,0x0,8
tick,0x7ff86ea82704,86974436,0,0x0,8
tick,0x7ff86ea82704,86976505,0,0x0,8
tick,0x7ff86ea82704,86978504,0,0x0,8
tick,0x7ff86ea82704,86980706,0,0x0,8
tick,0x7ff86ea82704,86982501,0,0x0,8
tick,0x7ff86ea82704,86984637,0,0x0,8
tick,0x7ff86ea82704,86986528,0,0x0,8
tick,0x7ff86ea82704,86988334,0,0x0,8
tick,0x7ff86ea82704,86990523,0,0x0,8
tick,0x7ff86ea82704,86992359,0,0x0,8
tick,0x7ff86ea82704,86994553,0,0x0,8
tick,0x7ff86ea82704,86996516,0,0x0,8
tick,0x7ff86ea82704,86998486,0,0x0,8
tick,0x7ff86ea82704,87000438,0,0x0,8
tick,0x7ff86ea82704,87002561,0,0x0,8
tick,0x7ff86ea82704,87004399,0,0x0,8
tick,0x7ff86ea82704,87006512,0,0x0,8
tick,0x7ff86ea82704,87008409,0,0x0,8
tick,0x7ff86ea82704,87010556,0,0x0,8
tick,0x7ff86ea82704,87012548,0,0x0,8
tick,0x7ff86ea82704,87014619,0,0x0,8
tick,0x7ff86ea82704,87016576,0,0x0,8
tick,0x7ff86ea82704,87018463,0,0x0,8
tick,0x7ff86ea82704,87020372,0,0x0,8
tick,0x7ff86ea82704,87022487,0,0x0,8
tick,0x7ff86ea82704,87024481,0,0x0,8
tick,0x7ff86ea82704,87026468,0,0x0,8
tick,0x7ff86ea82704,87028366,0,0x0,8
tick,0x7ff86ea82704,87030697,0,0x0,8
tick,0x7ff86ea82704,87032216,0,0x0,8
tick,0x7ff86ea82704,87034361,0,0x0,8
tick,0x7ff86ea82704,87036238,0,0x0,8
tick,0x7ff86ea82704,87038241,0,0x0,8
tick,0x7ff86ea82704,87040208,0,0x0,8
tick,0x7ff86ea82704,87042267,0,0x0,8
tick,0x7ff86ea82704,87044285,0,0x0,8
tick,0x7ff86ea82704,87046390,0,0x0,8
tick,0x7ff86ea82704,87048208,0,0x0,8
tick,0x7ff86ea82704,87050295,0,0x0,8
tick,0x7ff86ea82704,87052259,0,0x0,8
tick,0x7ff86ea82704,87054179,0,0x0,8
tick,0x7ff86ea82704,87056158,0,0x0,8
tick,0x7ff86ea82704,87058223,0,0x0,8
tick,0x7ff86ea82704,87060247,0,0x0,8
tick,0x7ff86ea82704,87062208,0,0x0,8
tick,0x7ff86ea82704,87064177,0,0x0,8
tick,0x7ff86ea82704,87066114,0,0x0,8
tick,0x7ff86ea82704,87068222,0,0x0,8
tick,0x7ff86ea82704,87070168,0,0x0,8
tick,0x7ff86ea82704,87072150,0,0x0,8
tick,0x7ff86ea82704,87074117,0,0x0,8
tick,0x7ff86ea82704,87076070,0,0x0,8
tick,0x7ff86ea82704,87078038,0,0x0,8
tick,0x7ff86ea82704,87080116,0,0x0,8
tick,0x7ff86ea82704,87082233,0,0x0,8
tick,0x7ff86ea82704,87084023,0,0x0,8
tick,0x7ff86ea82704,87086078,0,0x0,8
tick,0x7ff86ea82704,87088109,0,0x0,8
tick,0x7ff86ea82704,87090139,0,0x0,8
tick,0x7ff86ea82704,87092035,0,0x0,8
tick,0x7ff86ea82704,87094130,0,0x0,8
tick,0x7ff86ea82704,87096095,0,0x0,8
tick,0x7ff86ea82704,87098158,0,0x0,8
tick,0x7ff86ea82704,87100044,0,0x0,8
tick,0x7ff86ea82704,87102009,0,0x0,8
tick,0x7ff86ea82704,87104022,0,0x0,8
tick,0x7ff86ea82704,87106188,0,0x0,8
tick,0x7ff86ea82704,87108121,0,0x0,8
tick,0x7ff86ea82704,87110073,0,0x0,8
tick,0x7ff86ea82704,87112004,0,0x0,8
tick,0x7ff86ea82704,87114038,0,0x0,8
tick,0x7ff86ea82704,87115944,0,0x0,8
tick,0x7ff86ea82704,87118058,0,0x0,8
tick,0x7ff86ea82704,87119910,0,0x0,8
tick,0x7ff86ea82704,87121994,0,0x0,8
tick,0x7ff86ea82704,87123973,0,0x0,8
tick,0x7ff86ea82704,87126031,0,0x0,8
tick,0x7ff86ea82704,87127901,0,0x0,8
tick,0x7ff86ea82704,87130179,0,0x0,8
tick,0x7ff86ea82704,87131962,0,0x0,8
tick,0x7ff86ea82704,87134088,0,0x0,8
tick,0x7ff86ea82704,87135910,0,0x0,8
tick,0x7ff86ea82704,87138054,0,0x0,8
tick,0x7ff86ea82704,87140044,0,0x0,8
tick,0x7ff86ea82704,87142102,0,0x0,8
tick,0x7ff86ea82704,87144147,0,0x0,8
tick,0x7ff86ea82704,87146016,0,0x0,8
tick,0x7ff86ea82704,87147952,0,0x0,8
tick,0x7ff86ea82704,87150021,0,0x0,8
tick,0x7ff86ea82704,87151979,0,0x0,8
tick,0x7ff86ea82704,87154003,0,0x0,8
tick,0x7ff86ea82704,87155879,0,0x0,8
tick,0x7ff86ea82704,87157980,0,0x0,8
tick,0x7ff86ea82704,87159903,0,0x0,8
tick,0x7ff86ea82704,87162051,0,0x0,8
tick,0x7ff86ea82704,87163880,0,0x0,8
tick,0x7ff86ea82704,87165962,0,0x0,8
tick,0x7ff86ea82704,87167857,0,0x0,8
tick,0x7ff86ea82704,87169981,0,0x0,8
tick,0x7ff86ea82704,87171953,0,0x0,8
tick,0x7ff86ea82704,87173949,0,0x0,8
tick,0x7ff86ea82704,87175908,0,0x0,8
tick,0x7ff86ea82704,87177951,0,0x0,8
tick,0x7ff86ea82704,87179950,0,0x0,8
tick,0x7ff86ea82704,87181869,0,0x0,8
tick,0x7ff86ea82704,87183949,0,0x0,8
tick,0x7ff86ea82704,87185942,0,0x0,8
tick,0x7ff86ea82704,87187953,0,0x0,8
tick,0x7ff86ea82704,87189716,0,0x0,8
tick,0x7ff86ea82704,87191880,0,0x0,8
tick,0x7ff86ea82704,87193798,0,0x0,8
tick,0x7ff86ea82704,87195954,0,0x0,8
tick,0x7ff86ea82704,87197895,0,0x0,8
tick,0x7ff86ea82704,87199967,0,0x0,8
tick,0x7ff86ea82704,87201766,0,0x0,8
tick,0x7ff86ea82704,87203816,0,0x0,8
tick,0x7ff86ea82704,87205822,0,0x0,8
tick,0x7ff86ea82704,87207881,0,0x0,8
tick,0x7ff86ea82704,87209706,0,0x0,8
tick,0x7ff86ea82704,87211855,0,0x0,8
tick,0x7ff86ea82704,87213661,0,0x0,8
tick,0x7ff86ea82704,87215782,0,0x0,8
tick,0x7ff86ea82704,87217825,0,0x0,8
tick,0x7ff86ea82704,87219676,0,0x0,8
tick,0x7ff86ea82704,87221741,0,0x0,8
tick,0x7ff86ea82704,87223758,0,0x0,8
tick,0x7ff86ea82704,87225906,0,0x0,8
tick,0x7ff86ea82704,87227658,0,0x0,8
tick,0x7ff86ea82704,87229771,0,0x0,8
tick,0x7ff86ea82704,87231723,0,0x0,8
tick,0x7ff86ea82704,87233748,0,0x0,8
tick,0x7ff86ea82704,87235664,0,0x0,8
tick,0x7ff86ea82704,87237754,0,0x0,8
tick,0x7ff86ea82704,87239657,0,0x0,8
tick,0x7ff86ea82704,87241783,0,0x0,8
tick,0x7ff86ea82704,87243643,0,0x0,8
tick,0x7ff86ea82704,87245929,0,0x0,8
tick,0x7ff86ea82704,87247886,0,0x0,8
tick,0x7ff86ea82704,87249808,0,0x0,8
tick,0x7ff86ea82704,87251649,0,0x0,8
tick,0x7ff86ea82704,87253711,0,0x0,8
tick,0x7ff86ea82704,87255540,0,0x0,8
tick,0x7ff86ea82704,87257706,0,0x0,8
tick,0x7ff86ea82704,87259556,0,0x0,8
tick,0x7ff86ea82704,87261703,0,0x0,8
tick,0x7ff86ea82704,87263644,0,0x0,8
tick,0x7ff86ea82704,87265685,0,0x0,8
tick,0x7ff86ea82704,87267585,0,0x0,8
tick,0x7ff86ea82704,87269716,0,0x0,8
tick,0x7ff86ea82704,87271608,0,0x0,8
tick,0x7ff86ea82704,87273720,0,0x0,8
tick,0x7ff86ea82704,87275611,0,0x0,8
tick,0x7ff86ea82704,87277697,0,0x0,8
tick,0x7ff86ea82704,87279574,0,0x0,8
tick,0x7ff86ea82704,87281569,0,0x0,8
tick,0x7ff86ea82704,87283530,0,0x0,8
tick,0x7ff86ea82704,87285674,0,0x0,8
tick,0x7ff86ea82704,87287500,0,0x0,8
tick,0x7ff86ea82704,87289586,0,0x0,8
tick,0x7ff86ea82704,87291677,0,0x0,8
tick,0x7ff86ea82704,87293592,0,0x0,8
tick,0x7ff86ea82704,87295447,0,0x0,8
tick,0x7ff86ea82704,87297622,0,0x0,8
tick,0x7ff86ea82704,87299586,0,0x0,8
tick,0x7ff86ea82704,87301666,0,0x0,8
tick,0x7ff86ea82704,87303465,0,0x0,8
tick,0x7ff86ea82704,87305821,0,0x0,8
tick,0x7ff86ea82704,87307468,0,0x0,8
tick,0x7ff86ea82704,87309661,0,0x0,8
tick,0x7ff86ea82704,87311513,0,0x0,8
tick,0x7ff86ea82704,87313488,0,0x0,8
tick,0x7ff86ea82704,87315562,0,0x0,8
tick,0x7ff86ea82704,87317378,0,0x0,8
tick,0x7ff86ea82704,87319567,0,0x0,8
tick,0x7ff86ea82704,87321405,0,0x0,8
tick,0x7ff86ea82704,87323584,0,0x0,8
tick,0x7ff86ea82704,87325415,0,0x0,8
tick,0x7ff86ea82704,87327578,0,0x0,8
tick,0x7ff86ea82704,87329471,0,0x0,8
tick,0x7ff86ea82704,87331440,0,0x0,8
tick,0x7ff86ea82704,87333381,0,0x0,8
tick,0x7ff86ea82704,87335602,0,0x0,8
tick,0x7ff86ea82704,87337453,0,0x0,8
tick,0x7ff86ea82704,87339482,0,0x0,8
tick,0x7ff86ea82704,87341452,0,0x0,8
tick,0x7ff86ea82704,87343390,0,0x0,8
tick,0x7ff86ea82704,87345479,0,0x0,8
tick,0x7ff86ea82704,87347455,0,0x0,8
tick,0x7ff86ea82704,87349468,0,0x0,8
tick,0x7ff86ea82704,87351397,0,0x0,8
tick,0x7ff86ea82704,87353381,0,0x0,8
tick,0x7ff86ea82704,87355449,0,0x0,8
tick,0x7ff86ea82704,87357360,0,0x0,8
tick,0x7ff86ea82704,87359535,0,0x0,8
tick,0x7ff86ea82704,87361405,0,0x0,8
tick,0x7ff86ea82704,87363401,0,0x0,8
tick,0x7ff86ea82704,87365347,0,0x0,8
tick,0x7ff86ea82704,87367466,0,0x0,8
tick,0x7ff86ea82704,87369339,0,0x0,8
tick,0x7ff86ea82704,87371346,0,0x0,8
tick,0x7ff86ea82704,87373360,0,0x0,8
tick,0x7ff86ea82704,87375282,0,0x0,8
tick,0x7ff86ea82704,87377363,0,0x0,8
tick,0x7ff86ea82704,87379370,0,0x0,8
tick,0x7ff86ea82704,87381467,0,0x0,8
tick,0x7ff86ea82704,87383433,0,0x0,8
tick,0x7ff86ea82704,87385365,0,0x0,8
tick,0x7ff86ea82704,87387328,0,0x0,8
tick,0x7ff86ea82704,87389352,0,0x0,8
tick,0x7ff86ea82704,87391323,0,0x0,8
tick,0x7ff86ea82704,87393264,0,0x0,8
tick,0x7ff86ea82704,87395516,0,0x0,8
tick,0x7ff86ea82704,87397251,0,0x0,8
tick,0x7ff86ea82704,87399302,0,0x0,8
tick,0x7ff86ea82704,87401284,0,0x0,8
tick,0x7ff86ea82704,87403355,0,0x0,8
tick,0x7ff86ea82704,87405254,0,0x0,8
tick,0x7ff86ea82704,87407309,0,0x0,8
tick,0x7ff86ea82704,87409202,0,0x0,8
tick,0x7ff86ea82704,87411347,0,0x0,8
tick,0x7ff86ea82704,87413144,0,0x0,8
tick,0x7ff86ea82704,87415304,0,0x0,8
tick,0x7ff86ea82704,87417262,0,0x0,8
tick,0x7ff86ea82704,87419300,0,0x0,8
tick,0x7ff86ea82704,87421315,0,0x0,8
tick,0x7ff86ea82704,87423246,0,0x0,8
tick,0x7ff86ea82704,87425210,0,0x0,8
tick,0x7ff86ea82704,87427352,0,0x0,8
tick,0x7ff86ea82704,87429301,0,0x0,8
tick,0x7ff86ea82704,87431228,0,0x0,8
tick,0x7ff86ea82704,87433262,0,0x0,8
tick,0x7ff86ea82704,87435258,0,0x0,8
tick,0x7ff86ea82704,87437178,0,0x0,8
tick,0x7ff86ea82704,87439217,0,0x0,8
tick,0x7ff86ea82704,87441096,0,0x0,8
tick,0x7ff86ea82704,87443159,0,0x0,8
tick,0x7ff86ea82704,87445349,0,0x0,8
tick,0x7ff86ea82704,87447150,0,0x0,8
tick,0x7ff86ea82704,87449298,0,0x0,8
tick,0x7ff86ea82704,87451101,0,0x0,8
tick,0x7ff86ea82704,87453241,0,0x0,8
tick,0x7ff86ea82704,87455072,0,0x0,8
tick,0x7ff86ea82704,87457156,0,0x0,8
tick,0x7ff86ea82704,87458991,0,0x0,8
tick,0x7ff86ea82704,87461204,0,0x0,8
tick,0x7ff86ea82704,87463192,0,0x0,8
tick,0x7ff86ea82704,87465111,0,0x0,8
tick,0x7ff86ea82704,87467171,0,0x0,8
tick,0x7ff86ea82704,87469134,0,0x0,8
tick,0x7ff86ea82704,87471117,0,0x0,8
tick,0x7ff86ea82704,87473119,0,0x0,8
tick,0x7ff86ea82704,87475171,0,0x0,8
tick,0x7ff86ea82704,87477109,0,0x0,8
tick,0x7ff86ea82704,87479134,0,0x0,8
tick,0x7ff86ea82704,87481167,0,0x0,8
tick,0x7ff86ea82704,87483025,0,0x0,8
tick,0x7ff86ea82704,87485194,0,0x0,8
tick,0x7ff86ea82704,87487095,0,0x0,8
tick,0x7ff86ea82704,87488999,0,0x0,8
tick,0x7ff86ea82704,87491045,0,0x0,8
tick,0x7ff86ea82704,87493025,0,0x0,8
tick,0x7ff86ea82704,87495087,0,0x0,8
tick,0x7ff86ea82704,87496973,0,0x0,8
tick,0x7ff86ea82704,87498999,0,0x0,8
tick,0x7ff86ea82704,87500901,0,0x0,8
tick,0x7ff86ea82704,87503070,0,0x0,8
tick,0x7ff86ea82704,87504968,0,0x0,8
tick,0x7ff86ea82704,87507064,0,0x0,8
tick,0x7ff86ea82704,87509015,0,0x0,8
tick,0x7ff86ea82704,87511067,0,0x0,8
tick,0x7ff86ea82704,87512927,0,0x0,8
tick,0x7ff86ea82704,87515007,0,0x0,8
tick,0x7ff86ea82704,87517004,0,0x0,8
tick,0x7ff86ea82704,87518986,0,0x0,8
tick,0x7ff86ea82704,87521021,0,0x0,8
tick,0x7ff86ea82704,87522975,0,0x0,8
tick,0x7ff86ea82704,87525250,0,0x0,8
tick,0x7ff86ea82704,87526915,0,0x0,8
tick,0x7ff86ea82704,87529002,0,0x0,8
tick,0x7ff86ea82704,87531027,0,0x0,8
tick,0x7ff86ea82704,87532999,0,0x0,8
tick,0x7ff86ea82704,87534910,0,0x0,8
tick,0x7ff86ea82704,87537010,0,0x0,8
tick,0x7ff86ea82704,87538912,0,0x0,8
tick,0x7ff86ea82704,87541199,0,0x0,8
tick,0x7ff86ea82704,87542957,0,0x0,8
tick,0x7ff86ea82704,87544934,0,0x0,8
tick,0x7ff86ea82704,87546992,0,0x0,8
tick,0x7ff86ea82704,87548878,0,0x0,8
tick,0x7ff86ea82704,87550834,0,0x0,8
tick,0x7ff86ea82704,87552876,0,0x0,8
tick,0x7ff86ea82704,87554900,0,0x0,8
tick,0x7ff86ea82704,87556997,0,0x0,8
tick,0x7ff86ea82704,87558895,0,0x0,8
tick,0x7ff86ea82704,87560770,0,0x0,8
tick,0x7ff86ea82704,87562991,0,0x0,8
tick,0x7ff86ea82704,87564873,0,0x0,8
tick,0x7ff86ea82704,87566779,0,0x0,8
tick,0x7ff86ea82704,87568772,0,0x0,8
tick,0x7ff86ea82704,87570887,0,0x0,8
tick,0x7ff86ea82704,87572731,0,0x0,8
tick,0x7ff86ea82704,87574797,0,0x0,8
tick,0x7ff86ea82704,87576702,0,0x0,8
tick,0x7ff86ea82704,87578831,0,0x0,8
tick,0x7ff86ea82704,87580728,0,0x0,8
tick,0x7ff86ea82704,87582836,0,0x0,8
tick,0x7ff86ea82704,87584695,0,0x0,8
tick,0x7ff86ea82704,87586997,0,0x0,8
tick,0x7ff86ea82704,87588760,0,0x0,8
tick,0x7ff86ea82704,87590722,0,0x0,8
tick,0x7ff86ea82704,87592896,0,0x0,8
tick,0x7ff86ea82704,87594671,0,0x0,8
tick,0x7ff86ea82704,87596866,0,0x0,8
tick,0x7ff86ea82704,87598691,0,0x0,8
tick,0x7ff86ea82704,87600870,0,0x0,8
tick,0x7ff86ea82704,87602718,0,0x0,8
tick,0x7ff86ea82704,87604804,0,0x0,8
tick,0x7ff86ea82704,87606739,0,0x0,8
tick,0x7ff86ea82704,87608748,0,0x0,8
tick,0x7ff86ea82704,87610860,0,0x0,8
tick,0x7ff86ea82704,87612898,0,0x0,8
tick,0x7ff86ea82704,87614736,0,0x0,8
tick,0x7ff86ea82704,87616715,0,0x0,8
tick,0x7ff86ea82704,87618817,0,0x0,8
tick,0x7ff86ea82704,87620717,0,0x0,8
tick,0x7ff86ea82704,87622714,0,0x0,8
tick,0x7ff86ea82704,87624814,0,0x0,8
tick,0x7ff86ea82704,87626711,0,0x0,8
tick,0x7ff86ea82704,87628920,0,0x0,8
tick,0x7ff86ea82704,87630892,0,0x0,8
tick,0x7ff86ea82704,87632839,0,0x0,8
tick,0x7ff86ea82704,87634704,0,0x0,8
tick,0x7ff86ea82704,87636717,0,0x0,8
tick,0x7ff86ea82704,87638643,0,0x0,8
tick,0x7ff86ea82704,87640876,0,0x0,8
tick,0x7ff86ea82704,87642658,0,0x0,8
tick,0x7ff86ea82704,87644742,0,0x0,8
tick,0x7ff86ea82704,87646620,0,0x0,8
tick,0x7ff86ea82704,87648660,0,0x0,8
tick,0x7ff86ea82704,87650646,0,0x0,8
tick,0x7ff86ea82704,87652627,0,0x0,8
tick,0x7ff86ea82704,87654783,0,0x0,8
tick,0x7ff86ea82704,87656570,0,0x0,8
tick,0x7ff86ea82704,87658643,0,0x0,8
tick,0x7ff86ea82704,87660589,0,0x0,8
tick,0x7ff86ea82704,87662745,0,0x0,8
tick,0x7ff86ea82704,87664543,0,0x0,8
tick,0x7ff86ea82704,87666641,0,0x0,8
tick,0x7ff86ea82704,87668527,0,0x0,8
tick,0x7ff86ea82704,87670559,0,0x0,8
tick,0x7ff86ea82704,87672580,0,0x0,8
tick,0x7ff86ea82704,87674534,0,0x0,8
tick,0x7ff86ea82704,87676465,0,0x0,8
tick,0x7ff86ea82704,87678500,0,0x0,8
tick,0x7ff86ea82704,87680534,0,0x0,8
tick,0x7ff86ea82704,87682549,0,0x0,8
tick,0x7ff86ea82704,87684424,0,0x0,8
tick,0x7ff86ea82704,87686426,0,0x0,8
tick,0x7ff86ea82704,87688458,0,0x0,8
tick,0x7ff86ea82704,87690507,0,0x0,8
tick,0x7ff86ea82704,87692442,0,0x0,8
tick,0x7ff86ea82704,87694524,0,0x0,8
tick,0x7ff86ea82704,87696442,0,0x0,8
tick,0x7ff86ea82704,87698457,0,0x0,8
tick,0x7ff86ea82704,87700382,0,0x0,8
tick,0x7ff86ea82704,87702444,0,0x0,8
tick,0x7ff86ea82704,87704532,0,0x0,8
tick,0x7ff86ea82704,87706399,0,0x0,8
tick,0x7ff86ea82704,87708544,0,0x0,8
tick,0x7ff86ea82704,87710299,0,0x0,8
tick,0x7ff86ea82704,87712542,0,0x0,8
tick,0x7ff86ea82704,87714377,0,0x0,8
tick,0x7ff86ea82704,87716493,0,0x0,8
tick,0x7ff86ea82704,87718402,0,0x0,8
tick,0x7ff86ea82704,87720485,0,0x0,8
tick,0x7ff86ea82704,87722390,0,0x0,8
tick,0x7ff86ea82704,87724465,0,0x0,8
tick,0x7ff86ea82704,87726382,0,0x0,8
tick,0x7ff86ea82704,87728325,0,0x0,8
tick,0x7ff86ea82704,87730444,0,0x0,8
tick,0x7ff86ea82704,87732387,0,0x0,8
tick,0x7ff86ea82704,87734373,0,0x0,8
tick,0x7ff86ea82704,87736349,0,0x0,8
tick,0x7ff86ea82704,87738353,0,0x0,8
tick,0x7ff86ea82704,87740352,0,0x0,8
tick,0x7ff86ea82704,87742266,0,0x0,8
tick,0x7ff86ea82704,87744251,0,0x0,8
tick,0x7ff86ea82704,87746368,0,0x0,8
tick,0x7ff86ea82704,87748292,0,0x0,8
tick,0x7ff86ea82704,87750378,0,0x0,8
tick,0x7ff86ea82704,87752275,0,0x0,8
tick,0x7ff86ea82704,87754386,0,0x0,8
tick,0x7ff86ea82704,87756286,0,0x0,8
tick,0x7ff86ea82704,87758345,0,0x0,8
tick,0x7ff86ea82704,87760333,0,0x0,8
tick,0x7ff86ea82704,87762259,0,0x0,8
tick,0x7ff86ea82704,87764229,0,0x0,8
tick,0x7ff86ea82704,87766223,0,0x0,8
tick,0x7ff86ea82704,87768242,0,0x0,8
tick,0x7ff86ea82704,87770279,0,0x0,8
tick,0x7ff86ea82704,87772185,0,0x0,8
tick,0x7ff86ea82704,87774392,0,0x0,8
tick,0x7ff86ea82704,87776243,0,0x0,8
tick,0x7ff86ea82704,87778296,0,0x0,8
tick,0x7ff86ea82704,87780243,0,0x0,8
tick,0x7ff86ea82704,87782360,0,0x0,8
tick,0x7ff86ea82704,87784202,0,0x0,8
tick,0x7ff86ea82704,87786226,0,0x0,8
tick,0x7ff86ea82704,87788253,0,0x0,8
tick,0x7ff86ea82704,87790249,0,0x0,8
tick,0x7ff86ea82704,87794042,0,0x0,8
tick,0x7ff86ea82704,87796245,0,0x0,8
tick,0x7ff86ea82704,87798290,0,0x0,8
tick,0x7ff86ea82704,87800267,0,0x0,8
tick,0x7ff86ea82704,87802252,0,0x0,8
tick,0x7ff86ea82704,87804154,0,0x0,8
tick,0x7ff86ea82704,87806162,0,0x0,8
tick,0x7ff86ea82704,87808276,0,0x0,8
tick,0x7ff86ea82704,87810386,0,0x0,8
tick,0x7ff86ea82704,87812269,0,0x0,8
tick,0x7ff86ea82704,87814181,0,0x0,8
tick,0x7ff86ea82704,87816219,0,0x0,8
tick,0x7ff86ea82704,87818120,0,0x0,8
tick,0x7ff86ea82704,87820220,0,0x0,8
tick,0x7ff86ea82704,87822022,0,0x0,8
tick,0x7ff86ea82704,87824254,0,0x0,8
tick,0x7ff86ea82704,87826110,0,0x0,8
tick,0x7ff86ea82704,87828316,0,0x0,8
tick,0x7ff86ea82704,87830339,0,0x0,8
tick,0x7ff86ea82704,87832221,0,0x0,8
tick,0x7ff86ea82704,87834108,0,0x0,8
tick,0x7ff86ea82704,87836155,0,0x0,8
tick,0x7ff86ea82704,87838165,0,0x0,8
tick,0x7ff86ea82704,87840188,0,0x0,8
tick,0x7ff86ea82704,87842100,0,0x0,8
tick,0x7ff86ea82704,87844061,0,0x0,8
tick,0x7ff86ea82704,87846190,0,0x0,8
tick,0x7ff86ea82704,87848014,0,0x0,8
tick,0x7ff86ea82704,87850232,0,0x0,8
tick,0x7ff86ea82704,87852094,0,0x0,8
tick,0x7ff86ea82704,87854189,0,0x0,8
tick,0x7ff86ea82704,87855969,0,0x0,8
tick,0x7ff86ea82704,87858098,0,0x0,8
tick,0x7ff86ea82704,87859975,0,0x0,8
tick,0x7ff86ea82704,87862136,0,0x0,8
tick,0x7ff86ea82704,87863974,0,0x0,8
tick,0x7ff86ea82704,87866061,0,0x0,8
tick,0x7ff86ea82704,87868081,0,0x0,8
tick,0x7ff86ea82704,87870112,0,0x0,8
tick,0x7ff86ea82704,87871960,0,0x0,8
tick,0x7ff86ea82704,87874096,0,0x0,8
tick,0x7ff86ea82704,87875980,0,0x0,8
tick,0x7ff86ea82704,87878101,0,0x0,8
tick,0x7ff86ea82704,87880043,0,0x0,8
tick,0x7ff86ea82704,87882091,0,0x0,8
tick,0x7ff86ea82704,87883958,0,0x0,8
tick,0x7ff86ea82704,87886140,0,0x0,8
tick,0x7ff86ea82704,87887991,0,0x0,8
tick,0x7ff86ea82704,87890144,0,0x0,8
tick,0x7ff86ea82704,87892062,0,0x0,8
tick,0x7ff86ea82704,87893919,0,0x0,8
tick,0x7ff86ea82704,87896088,0,0x0,8
tick,0x7ff86ea82704,87897836,0,0x0,8
tick,0x7ff86ea82704,87899999,0,0x0,8
tick,0x7ff86ea82704,87901845,0,0x0,8
tick,0x7ff86ea82704,87904122,0,0x0,8
tick,0x7ff86ea82704,87906026,0,0x0,8
tick,0x7ff86ea82704,87907839,0,0x0,8
tick,0x7ff86ea82704,87909924,0,0x0,8
tick,0x7ff86ea82704,87911916,0,0x0,8
tick,0x7ff86ea82704,87913928,0,0x0,8
tick,0x7ff86ea82704,87915915,0,0x0,8
tick,0x7ff86ea82704,87917829,0,0x0,8
tick,0x7ff86ea82704,87919975,0,0x0,8
tick,0x7ff86ea82704,87921825,0,0x0,8
tick,0x7ff86ea82704,87923891,0,0x0,8
tick,0x7ff86ea82704,87925861,0,0x0,8
tick,0x7ff86ea82704,87927866,0,0x0,8
tick,0x7ff86ea82704,87929847,0,0x0,8
tick,0x7ff86ea82704,87931855,0,0x0,8
tick,0x7ff86ea82704,87933913,0,0x0,8
tick,0x7ff86ea82704,87935858,0,0x0,8
tick,0x7ff86ea82704,87937758,0,0x0,8
tick,0x7ff86ea82704,87940066,0,0x0,8
tick,0x7ff86ea82704,87941837,0,0x0,8
tick,0x7ff86ea82704,87944011,0,0x0,8
tick,0x7ff86ea82704,87945802,0,0x0,8
tick,0x7ff86ea82704,87947855,0,0x0,8
tick,0x7ff86ea82704,87949770,0,0x0,8
tick,0x7ff86ea82704,87951769,0,0x0,8
tick,0x7ff86ea82704,87953783,0,0x0,8
tick,0x7ff86ea82704,87955820,0,0x0,8
tick,0x7ff86ea82704,87957784,0,0x0,8
tick,0x7ff86ea82704,87959765,0,0x0,8
tick,0x7ff86ea82704,87961678,0,0x0,8
tick,0x7ff86ea82704,87963830,0,0x0,8
tick,0x7ff86ea82704,87965725,0,0x0,8
tick,0x7ff86ea82704,87967770,0,0x0,8
tick,0x7ff86ea82704,87969830,0,0x0,8
tick,0x7ff86ea82704,87971837,0,0x0,8
tick,0x7ff86ea82704,87973704,0,0x0,8
tick,0x7ff86ea82704,87975771,0,0x0,8
tick,0x7ff86ea82704,87977696,0,0x0,8
tick,0x7ff86ea82704,87979825,0,0x0,8
tick,0x7ff86ea82704,87981625,0,0x0,8
tick,0x7ff86ea82704,87983756,0,0x0,8
tick,0x7ff86ea82704,87985654,0,0x0,8
tick,0x7ff86ea82704,87987724,0,0x0,8
tick,0x7ff86ea82704,87989622,0,0x0,8
tick,0x7ff86ea82704,87991780,0,0x0,8
tick,0x7ff86ea82704,87993628,0,0x0,8
tick,0x7ff86ea82704,87995815,0,0x0,8
tick,0x7ff86ea82704,87997572,0,0x0,8
tick,0x7ff86ea82704,87999816,0,0x0,8
tick,0x7ff86ea82704,88001648,0,0x0,8
tick,0x7ff86ea82704,88003690,0,0x0,8
tick,0x7ff86ea82704,88005586,0,0x0,8
tick,0x7ff86ea82704,88007721,0,0x0,8
tick,0x7ff86ea82704,88009625,0,0x0,8
tick,0x7ff86ea82704,88011682,0,0x0,8
tick,0x7ff86ea82704,88013556,0,0x0,8
tick,0x7ff86ea82704,88015579,0,0x0,8
tick,0x7ff86ea82704,88017674,0,0x0,8
tick,0x7ff86ea82704,88019590,0,0x0,8
tick,0x7ff86ea82704,88021636,0,0x0,8
tick,0x7ff86ea82704,88023634,0,0x0,8
tick,0x7ff86ea82704,88025689,0,0x0,8
tick,0x7ff86ea82704,88027602,0,0x0,8
tick,0x7ff86ea82704,88029617,0,0x0,8
tick,0x7ff86ea82704,88031618,0,0x0,8
tick,0x7ff86ea82704,88033549,0,0x0,8
tick,0x7ff86ea82704,88035573,0,0x0,8
tick,0x7ff86ea82704,88037614,0,0x0,8
tick,0x7ff86ea82704,88039640,0,0x0,8
tick,0x7ff86ea82704,88041652,0,0x0,8
tick,0x7ff86ea82704,88043557,0,0x0,8
tick,0x7ff86ea82704,88045674,0,0x0,8
tick,0x7ff86ea82704,88047597,0,0x0,8
tick,0x7ff86ea82704,88049630,0,0x0,8
tick,0x7ff86ea82704,88051471,0,0x0,8
tick,0x7ff86ea82704,88053685,0,0x0,8
tick,0x7ff86ea82704,88055486,0,0x0,8
tick,0x7ff86ea82704,88057573,0,0x0,8
tick,0x7ff86ea82704,88059524,0,0x0,8
tick,0x7ff86ea82704,88061572,0,0x0,8
tick,0x7ff86ea82704,88063415,0,0x0,8
tick,0x7ff86ea82704,88065546,0,0x0,8
tick,0x7ff86ea82704,88067683,0,0x0,8
tick,0x7ff86ea82704,88069597,0,0x0,8
tick,0x7ff86ea82704,88071375,0,0x0,8
tick,0x7ff86ea82704,88073437,0,0x0,8
tick,0x7ff86ea82704,88075328,0,0x0,8
tick,0x7ff86ea82704,88077420,0,0x0,8
tick,0x7ff86ea82704,88079391,0,0x0,8
tick,0x7ff86ea82704,88081408,0,0x0,8
tick,0x7ff86ea82704,88083438,0,0x0,8
tick,0x7ff86ea82704,88085515,0,0x0,8
tick,0x7ff86ea82704,88087439,0,0x0,8
tick,0x7ff86ea82704,88089451,0,0x0,8
tick,0x7ff86ea82704,88091412,0,0x0,8
tick,0x7ff86ea82704,88093420,0,0x0,8
tick,0x7ff86ea82704,88095337,0,0x0,8
tick,0x7ff86ea82704,88097515,0,0x0,8
tick,0x7ff86ea82704,88099398,0,0x0,8
tick,0x7ff86ea82704,88101502,0,0x0,8
tick,0x7ff86ea82704,88103416,0,0x0,8
tick,0x7ff86ea82704,88105432,0,0x0,8
tick,0x7ff86ea82704,88107273,0,0x0,8
tick,0x7ff86ea82704,88109444,0,0x0,8
tick,0x7ff86ea82704,88111298,0,0x0,8
tick,0x7ff86ea82704,88113415,0,0x0,8
tick,0x7ff86ea82704,88115486,0,0x0,8
tick,0x7ff86ea82704,88117321,0,0x0,8
tick,0x7ff86ea82704,88119293,0,0x0,8
tick,0x7ff86ea82704,88121499,0,0x0,8
tick,0x7ff86ea82704,88123343,0,0x0,8
tick,0x7ff86ea82704,88125464,0,0x0,8
tick,0x7ff86ea82704,88127285,0,0x0,8
tick,0x7ff86ea82704,88129384,0,0x0,8
tick,0x7ff86ea82704,88131309,0,0x0,8
tick,0x7ff86ea82704,88133415,0,0x0,8
tick,0x7ff86ea82704,88135407,0,0x0,8
tick,0x7ff86ea82704,88137345,0,0x0,8
tick,0x7ff86ea82704,88139213,0,0x0,8
tick,0x7ff86ea82704,88141310,0,0x0,8
tick,0x7ff86ea82704,88143201,0,0x0,8
tick,0x7ff86ea82704,88145403,0,0x0,8
tick,0x7ff86ea82704,88147216,0,0x0,8
tick,0x7ff86ea82704,88149408,0,0x0,8
tick,0x7ff86ea82704,88151243,0,0x0,8
tick,0x7ff86ea82704,88153322,0,0x0,8
tick,0x7ff86ea82704,88155285,0,0x0,8
tick,0x7ff86ea82704,88157487,0,0x0,8
tick,0x7ff86ea82704,88159155,0,0x0,8
tick,0x7ff86ea82704,88161482,0,0x0,8
tick,0x7ff86ea82704,88163297,0,0x0,8
tick,0x7ff86ea82704,88165573,0,0x0,8
tick,0x7ff86ea82704,88167430,0,0x0,8
tick,0x7ff86ea82704,88169668,0,0x0,8
tick,0x7ff86ea82704,88172444,0,0x0,8
tick,0x7ff86ea82704,88174713,0,0x0,8
tick,0x7ff86ea82704,88176689,0,0x0,8
tick,0x7ff86ea82704,88178452,0,0x0,8
tick,0x7ff86ea82704,88180184,0,0x0,8
tick,0x7ff86ea82704,88182318,0,0x0,8
tick,0x7ff86ea82704,88184399,0,0x0,8
tick,0x7ff86ea82704,88186312,0,0x0,8
tick,0x7ff86ea82704,88188357,0,0x0,8
tick,0x7ff86ea82704,88190141,0,0x0,8
tick,0x7ff86ea82704,88192305,0,0x0,8
tick,0x7ff86ea82704,88194432,0,0x0,8
tick,0x7ff86ea82704,88196097,0,0x0,8
tick,0x7ff86ea82704,88198251,0,0x0,8
tick,0x7ff86ea82704,88200106,0,0x0,8
tick,0x7ff86ea82704,88202179,0,0x0,8
tick,0x7ff86ea82704,88204328,0,0x0,8
tick,0x7ff86ea82704,88206186,0,0x0,8
tick,0x7ff86ea82704,88208075,0,0x0,8
tick,0x7ff86ea82704,88210189,0,0x0,8
tick,0x7ff86ea82704,88211961,0,0x0,8
tick,0x7ff86ea82704,88214224,0,0x0,8
tick,0x7ff86ea82704,88215974,0,0x0,8
tick,0x7ff86ea82704,88218045,0,0x0,8
tick,0x7ff86ea82704,88220071,0,0x0,8
tick,0x7ff86ea82704,88222000,0,0x0,8
tick,0x7ff86ea82704,88224137,0,0x0,8
tick,0x7ff86ea82704,88225961,0,0x0,8
tick,0x7ff86ea82704,88227932,0,0x0,8
tick,0x7ff86ea82704,88230141,0,0x0,8
tick,0x7ff86ea82704,88232038,0,0x0,8
tick,0x7ff86ea82704,88234207,0,0x0,8
tick,0x7ff86ea82704,88235979,0,0x0,8
tick,0x7ff86ea82704,88238065,0,0x0,8
tick,0x7ff86ea82704,88240064,0,0x0,8
tick,0x7ff86ea82704,88242226,0,0x0,8
tick,0x7ff86ea82704,88244110,0,0x0,8
tick,0x7ff86ea82704,88246087,0,0x0,8
tick,0x7ff86ea82704,88248203,0,0x0,8
tick,0x7ff86ea82704,88249981,0,0x0,8
tick,0x7ff86ea82704,88252152,0,0x0,8
tick,0x7ff86ea82704,88254332,0,0x0,8
tick,0x7ff86ea82704,88256807,0,0x0,8
tick,0x7ff86ea82704,88258116,0,0x0,8
tick,0x7ff86ea82704,88260449,0,0x0,8
tick,0x7ff86ea82704,88263160,0,0x0,8
tick,0x7ff86ea82704,88264584,0,0x0,8
tick,0x7ff86ea82704,88265987,0,0x0,8
tick,0x7ff86ea82704,88268085,0,0x0,8
tick,0x7ff86ea82704,88270109,0,0x0,8
tick,0x7ff86ea82704,88272119,0,0x0,8
tick,0x7ff86ea82704,88274562,0,0x0,8
tick,0x7ff86ea82704,88275807,0,0x0,8
tick,0x7ff86ea82704,88277898,0,0x0,8
tick,0x7ff86ea82704,88279847,0,0x0,8
tick,0x7ff86ea82704,88281843,0,0x0,8
tick,0x7ff86ea82704,88283717,0,0x0,8
tick,0x7ff86ea82704,88285838,0,0x0,8
tick,0x7ff86ea82704,88287766,0,0x0,8
tick,0x7ff86ea82704,88289910,0,0x0,8
tick,0x7ff86ea82704,88291733,0,0x0,8
tick,0x7ff86ea82704,88293863,0,0x0,8
tick,0x7ff86ea82704,88295764,0,0x0,8
tick,0x7ff86ea82704,88298014,0,0x0,8
tick,0x7ff86ea82704,88299727,0,0x0,8
tick,0x7ff86ea82704,88301875,0,0x0,8
tick,0x7ff86ea82704,88303833,0,0x0,8
tick,0x7ff86ea82704,88305811,0,0x0,8
tick,0x7ff86ea82704,88307706,0,0x0,8
tick,0x7ff86ea82704,88309700,0,0x0,8
tick,0x7ff86ea82704,88311682,0,0x0,8
tick,0x7ff86ea82704,88313701,0,0x0,8
tick,0x7ff86ea82704,88315786,0,0x0,8
tick,0x7ff86ea82704,88317733,0,0x0,8
tick,0x7ff86ea82704,88319712,0,0x0,8
tick,0x7ff86ea82704,88321760,0,0x0,8
tick,0x7ff86ea82704,88323698,0,0x0,8
tick,0x7ff86ea82704,88325700,0,0x0,8
tick,0x7ff86ea82704,88327880,0,0x0,8
tick,0x7ff86ea82704,88329765,0,0x0,8
tick,0x7ff86ea82704,88331744,0,0x0,8
tick,0x7ff86ea82704,88333855,0,0x0,8
tick,0x7ff86ea82704,88335620,0,0x0,8
tick,0x7ff86ea82704,88338010,0,0x0,8
tick,0x7ff86ea82704,88339741,0,0x0,8
tick,0x7ff86ea82704,88341649,0,0x0,8
tick,0x7ff86ea82704,88343703,0,0x0,8
tick,0x7ff86ea82704,88345722,0,0x0,8
tick,0x7ff86ea82704,88347741,0,0x0,8
tick,0x7ff86ea82704,88349673,0,0x0,8
tick,0x7ff86ea82704,88351707,0,0x0,8
tick,0x7ff86ea82704,88353691,0,0x0,8
tick,0x7ff86ea82704,88355673,0,0x0,8
tick,0x7ff86ea82704,88357622,0,0x0,8
tick,0x7ff86ea82704,88359686,0,0x0,8
tick,0x7ff86ea82704,88361657,0,0x0,8
tick,0x7ff86ea82704,88363564,0,0x0,8
tick,0x7ff86ea82704,88365515,0,0x0,8
tick,0x7ff86ea82704,88367634,0,0x0,8
tick,0x7ff86ea82704,88369582,0,0x0,8
tick,0x7ff86ea82704,88371661,0,0x0,8
tick,0x7ff86ea82704,88373573,0,0x0,8
tick,0x7ff86ea82704,88375537,0,0x0,8
tick,0x7ff86ea82704,88377841,0,0x0,8
tick,0x7ff86ea82704,88379615,0,0x0,8
tick,0x7ff86ea82704,88381638,0,0x0,8
tick,0x7ff86ea82704,88383539,0,0x0,8
tick,0x7ff86ea82704,88385691,0,0x0,8
tick,0x7ff86ea82704,88387545,0,0x0,8
tick,0x7ff86ea82704,88389569,0,0x0,8
tick,0x7ff86ea82704,88391577,0,0x0,8
tick,0x7ff86ea82704,88393473,0,0x0,8
tick,0x7ff86ea82704,88395579,0,0x0,8
tick,0x7ff86ea82704,88397505,0,0x0,8
tick,0x7ff86ea82704,88399534,0,0x0,8
tick,0x7ff86ea82704,88401452,0,0x0,8
tick,0x7ff86ea82704,88403531,0,0x0,8
tick,0x7ff86ea82704,88405549,0,0x0,8
tick,0x7ff86ea82704,88407443,0,0x0,8
tick,0x7ff86ea82704,88409489,0,0x0,8
tick,0x7ff86ea82704,88411474,0,0x0,8
tick,0x7ff86ea82704,88413461,0,0x0,8
tick,0x7ff86ea82704,88415533,0,0x0,8
tick,0x7ff86ea82704,88417517,0,0x0,8
tick,0x7ff86ea82704,88419388,0,0x0,8
tick,0x7ff86ea82704,88421504,0,0x0,8
tick,0x7ff86ea82704,88423679,0,0x0,8
tick,0x7ff86ea82704,88425410,0,0x0,8
tick,0x7ff86ea82704,88427805,0,0x0,8
tick,0x7ff86ea82704,88429816,0,0x0,8
tick,0x7ff86ea82704,88431819,0,0x0,8
tick,0x7ff86ea82704,88434298,0,0x0,8
tick,0x7ff86ea82704,88436454,0,0x0,8
tick,0x7ff86ea82704,88438627,0,0x0,8
tick,0x7ff86ea82704,88440588,0,0x0,8
tick,0x7ff86ea82704,88442513,0,0x0,8
tick,0x7ff86ea82704,88444530,0,0x0,8
tick,0x7ff86ea82704,88446442,0,0x0,8
tick,0x7ff86ea82704,88448600,0,0x0,8
tick,0x7ff86ea82704,88450402,0,0x0,8
tick,0x7ff86ea82704,88452625,0,0x0,8
tick,0x7ff86ea82704,88454451,0,0x0,8
tick,0x7ff86ea82704,88456511,0,0x0,8
tick,0x7ff86ea82704,88458337,0,0x0,8
tick,0x7ff86ea82704,88460471,0,0x0,8
tick,0x7ff86ea82704,88462457,0,0x0,8
tick,0x7ff86ea82704,88464469,0,0x0,8
tick,0x7ff86ea82704,88467061,0,0x0,8
tick,0x7ff86ea82704,88468428,0,0x0,8
tick,0x7ff86ea82704,88470248,0,0x0,8
tick,0x7ff86ea82704,88472537,0,0x0,8
tick,0x7ff86ea82704,88474440,0,0x0,8
tick,0x7ff86ea82704,88476285,0,0x0,8
tick,0x7ff86ea82704,88478351,0,0x0,8
tick,0x7ff86ea82704,88480901,0,0x0,8
tick,0x7ff86ea82704,88482444,0,0x0,8
tick,0x7ff86ea82704,88484421,0,0x0,8
tick,0x7ff86ea82704,88486282,0,0x0,8
tick,0x7ff86ea82704,88488341,0,0x0,8
tick,0x7ff86ea82704,88490264,0,0x0,8
tick,0x7ff86ea82704,88492333,0,0x0,8
tick,0x7ff86ea82704,88494396,0,0x0,8
tick,0x7ff86ea82704,88496607,0,0x0,8
tick,0x7ff86ea82704,88498276,0,0x0,8
tick,0x7ff86ea82704,88500211,0,0x0,8
tick,0x7ff86ea82704,88502289,0,0x0,8
tick,0x7ff86ea82704,88504242,0,0x0,8
tick,0x7ff86ea82704,88506240,0,0x0,8
tick,0x7ff86ea82704,88508186,0,0x0,8
tick,0x7ff86ea82704,88510525,0,0x0,8
tick,0x7ff86ea82704,88512315,0,0x0,8
tick,0x7ff86ea82704,88514281,0,0x0,8
tick,0x7ff86ea82704,88516312,0,0x0,8
tick,0x7ff86ea82704,88518469,0,0x0,8
tick,0x7ff86ea82704,88520251,0,0x0,8
tick,0x7ff86ea82704,88522383,0,0x0,8
tick,0x7ff86ea82704,88524132,0,0x0,8
tick,0x7ff86ea82704,88526225,0,0x0,8
tick,0x7ff86ea82704,88528249,0,0x0,8
tick,0x7ff86ea82704,88530181,0,0x0,8
tick,0x7ff86ea82704,88532146,0,0x0,8
tick,0x7ff86ea82704,88534259,0,0x0,8
tick,0x7ff86ea82704,88536188,0,0x0,8
tick,0x7ff86ea82704,88538111,0,0x0,8
tick,0x7ff86ea82704,88540279,0,0x0,8
tick,0x7ff86ea82704,88542135,0,0x0,8
tick,0x7ff86ea82704,88544113,0,0x0,8
tick,0x7ff86ea82704,88546843,0,0x0,8
tick,0x7ff86ea82704,88548076,0,0x0,8
tick,0x7ff86ea82704,88550415,0,0x0,8
tick,0x7ff86ea82704,88552127,0,0x0,8
tick,0x7ff86ea82704,88554184,0,0x0,8
tick,0x7ff86ea82704,88556255,0,0x0,8
tick,0x7ff86ea82704,88558427,0,0x0,8
tick,0x7ff86ea82704,88560185,0,0x0,8
tick,0x7ff86ea82704,88562053,0,0x0,8
tick,0x7ff86ea82704,88564079,0,0x0,8
tick,0x7ff86ea82704,88566244,0,0x0,8
tick,0x7ff86ea82704,88568137,0,0x0,8
tick,0x7ff86ea82704,88570291,0,0x0,8
tick,0x7ff86ea82704,88572072,0,0x0,8
tick,0x7ff86ea82704,88574225,0,0x0,8
tick,0x7ff86ea82704,88575984,0,0x0,8
tick,0x7ff86ea82704,88578051,0,0x0,8
tick,0x7ff86ea82704,88579977,0,0x0,8
tick,0x7ff86ea82704,88582357,0,0x0,8
tick,0x7ff86ea82704,88584186,0,0x0,8
tick,0x7ff86ea82704,88586067,0,0x0,8
tick,0x7ff86ea82704,88588079,0,0x0,8
tick,0x7ff86ea82704,88590317,0,0x0,8
tick,0x7ff86ea82704,88591936,0,0x0,8
tick,0x7ff86ea82704,88594305,0,0x0,8
tick,0x7ff86ea82704,88595938,0,0x0,8
tick,0x7ff86ea82704,88598431,0,0x0,8
tick,0x7ff86ea82704,88599866,0,0x0,8
tick,0x7ff86ea82704,88602105,0,0x0,8
tick,0x7ff86ea82704,88604028,0,0x0,8
tick,0x7ff86ea82704,88606136,0,0x0,8
tick,0x7ff86ea82704,88607941,0,0x0,8
tick,0x7ff86ea82704,88609884,0,0x0,8
tick,0x7ff86ea82704,88612118,0,0x0,8
tick,0x7ff86ea82704,88614068,0,0x0,8
tick,0x7ff86ea82704,88616256,0,0x0,8
tick,0x7ff86ea82704,88617966,0,0x0,8
tick,0x7ff86ea82704,88619973,0,0x0,8
tick,0x7ff86ea82704,88621908,0,0x0,8
tick,0x7ff86ea82704,88624080,0,0x0,8
tick,0x7ff86ea82704,88625952,0,0x0,8
tick,0x7ff86ea82704,88627901,0,0x0,8
tick,0x7ff86ea82704,88629889,0,0x0,8
tick,0x7ff86ea82704,88632126,0,0x0,8
tick,0x7ff86ea82704,88633880,0,0x0,8
tick,0x7ff86ea82704,88636027,0,0x0,8
tick,0x7ff86ea82704,88637991,0,0x0,8
tick,0x7ff86ea82704,88640019,0,0x0,8
tick,0x7ff86ea82704,88642193,0,0x0,8
tick,0x7ff86ea82704,88643879,0,0x0,8
tick,0x7ff86ea82704,88646009,0,0x0,8
tick,0x7ff86ea82704,88647865,0,0x0,8
tick,0x7ff86ea82704,88649933,0,0x0,8
tick,0x7ff86ea82704,88651820,0,0x0,8
tick,0x7ff86ea82704,88653957,0,0x0,8
tick,0x7ff86ea82704,88656380,0,0x0,8
tick,0x7ff86ea82704,88657784,0,0x0,8
tick,0x7ff86ea82704,88659869,0,0x0,8
tick,0x7ff86ea82704,88661754,0,0x0,8
tick,0x7ff86ea82704,88663920,0,0x0,8
tick,0x7ff86ea82704,88665763,0,0x0,8
tick,0x7ff86ea82704,88667893,0,0x0,8
tick,0x7ff86ea82704,88669721,0,0x0,8
tick,0x7ff86ea82704,88671862,0,0x0,8
tick,0x7ff86ea82704,88673729,0,0x0,8
tick,0x7ff86ea82704,88675806,0,0x0,8
tick,0x7ff86ea82704,88677925,0,0x0,8
tick,0x7ff86ea82704,88679757,0,0x0,8
tick,0x7ff86ea82704,88681698,0,0x0,8
tick,0x7ff86ea82704,88683775,0,0x0,8
tick,0x7ff86ea82704,88685694,0,0x0,8
tick,0x7ff86ea82704,88687827,0,0x0,8
tick,0x7ff86ea82704,88689762,0,0x0,8
tick,0x7ff86ea82704,88691767,0,0x0,8
tick,0x7ff86ea82704,88693660,0,0x0,8
tick,0x7ff86ea82704,88695792,0,0x0,8
tick,0x7ff86ea82704,88697729,0,0x0,8
tick,0x7ff86ea82704,88699868,0,0x0,8
tick,0x7ff86ea82704,88701640,0,0x0,8
tick,0x7ff86ea82704,88703811,0,0x0,8
tick,0x7ff86ea82704,88705696,0,0x0,8
tick,0x7ff86ea82704,88707818,0,0x0,8
tick,0x7ff86ea82704,88709635,0,0x0,8
tick,0x7ff86ea82704,88711670,0,0x0,8
tick,0x7ff86ea82704,88713714,0,0x0,8
tick,0x7ff86ea82704,88715630,0,0x0,8
tick,0x7ff86ea82704,88717695,0,0x0,8
tick,0x7ff86ea82704,88719639,0,0x0,8
tick,0x7ff86ea82704,88721657,0,0x0,8
tick,0x7ff86ea82704,88723703,0,0x0,8
tick,0x7ff86ea82704,88725636,0,0x0,8
tick,0x7ff86ea82704,88727587,0,0x0,8
tick,0x7ff86ea82704,88729645,0,0x0,8
tick,0x7ff86ea82704,88731538,0,0x0,8
tick,0x7ff86ea82704,88733623,0,0x0,8
tick,0x7ff86ea82704,88735546,0,0x0,8
tick,0x7ff86ea82704,88737579,0,0x0,8
tick,0x7ff86ea82704,88739538,0,0x0,8
tick,0x7ff86ea82704,88741595,0,0x0,8
tick,0x7ff86ea82704,88743517,0,0x0,8
tick,0x7ff86ea82704,88745694,0,0x0,8
tick,0x7ff86ea82704,88747544,0,0x0,8
tick,0x7ff86ea82704,88749627,0,0x0,8
tick,0x7ff86ea82704,88751562,0,0x0,8
tick,0x7ff86ea82704,88753593,0,0x0,8
tick,0x7ff86ea82704,88755819,0,0x0,8
tick,0x7ff86ea82704,88757513,0,0x0,8
tick,0x7ff86ea82704,88759630,0,0x0,8
tick,0x7ff86ea82704,88761505,0,0x0,8
tick,0x7ff86ea82704,88763600,0,0x0,8
tick,0x7ff86ea82704,88765578,0,0x0,8
tick,0x7ff86ea82704,88767593,0,0x0,8
tick,0x7ff86ea82704,88769809,0,0x0,8
tick,0x7ff86ea82704,88771553,0,0x0,8
tick,0x7ff86ea82704,88773642,0,0x0,8
tick,0x7ff86ea82704,88775484,0,0x0,8
tick,0x7ff86ea82704,88777715,0,0x0,8
tick,0x7ff86ea82704,88779548,0,0x0,8
tick,0x7ff86ea82704,88781473,0,0x0,8
tick,0x7ff86ea82704,88783520,0,0x0,8
tick,0x7ff86ea82704,88785565,0,0x0,8
tick,0x7ff86ea82704,88787442,0,0x0,8
tick,0x7ff86ea82704,88789413,0,0x0,8
tick,0x7ff86ea82704,88791644,0,0x0,8
tick,0x7ff86ea82704,88793530,0,0x0,8
tick,0x7ff86ea82704,88795445,0,0x0,8
tick,0x7ff86ea82704,88797482,0,0x0,8
tick,0x7ff86ea82704,88799503,0,0x0,8
tick,0x7ff86ea82704,88801415,0,0x0,8
tick,0x7ff86ea82704,88803453,0,0x0,8
tick,0x7ff86ea82704,88805347,0,0x0,8
tick,0x7ff86ea82704,88807348,0,0x0,8
tick,0x7ff86ea82704,88809391,0,0x0,8
tick,0x7ff86ea82704,88811373,0,0x0,8
tick,0x7ff86ea82704,88813369,0,0x0,8
tick,0x7ff86ea82704,88815382,0,0x0,8
tick,0x7ff86ea82704,88817321,0,0x0,8
tick,0x7ff86ea82704,88819334,0,0x0,8
tick,0x7ff86ea82704,88821257,0,0x0,8
tick,0x7ff86ea82704,88823340,0,0x0,8
tick,0x7ff86ea82704,88825300,0,0x0,8
tick,0x7ff86ea82704,88827401,0,0x0,8
tick,0x7ff86ea82704,88829403,0,0x0,8
tick,0x7ff86ea82704,88831300,0,0x0,8
tick,0x7ff86ea82704,88833383,0,0x0,8
tick,0x7ff86ea82704,88835499,0,0x0,8
tick,0x7ff86ea82704,88837522,0,0x0,8
tick,0x7ff86ea82704,88839253,0,0x0,8
tick,0x7ff86ea82704,88841489,0,0x0,8
tick,0x7ff86ea82704,88843265,0,0x0,8
tick,0x7ff86ea82704,88845282,0,0x0,8
tick,0x7ff86ea82704,88847230,0,0x0,8
tick,0x7ff86ea82704,88849326,0,0x0,8
tick,0x7ff86ea82704,88851234,0,0x0,8
tick,0x7ff86ea82704,88853363,0,0x0,8
tick,0x7ff86ea82704,88855227,0,0x0,8
tick,0x7ff86ea82704,88857386,0,0x0,8
tick,0x7ff86ea82704,88859253,0,0x0,8
tick,0x7ff86ea82704,88861260,0,0x0,8
tick,0x7ff86ea82704,88863214,0,0x0,8
tick,0x7ff86ea82704,88865247,0,0x0,8
tick,0x7ff86ea82704,88867176,0,0x0,8
tick,0x7ff86ea82704,88869296,0,0x0,8
tick,0x7ff86ea82704,88871150,0,0x0,8
tick,0x7ff86ea82704,88873298,0,0x0,8
tick,0x7ff86ea82704,88875213,0,0x0,8
tick,0x7ff86ea82704,88877232,0,0x0,8
tick,0x7ff86ea82704,88879225,0,0x0,8
tick,0x7ff86ea82704,88881325,0,0x0,8
tick,0x7ff86ea82704,88883219,0,0x0,8
tick,0x7ff86ea82704,88885167,0,0x0,8
tick,0x7ff86ea82704,88887319,0,0x0,8
tick,0x7ff86ea82704,88889132,0,0x0,8
tick,0x7ff86ea82704,88891247,0,0x0,8
tick,0x7ff86ea82704,88893169,0,0x0,8
tick,0x7ff86ea82704,88895295,0,0x0,8
tick,0x7ff86ea82704,88897229,0,0x0,8
tick,0x7ff86ea82704,88899066,0,0x0,8
tick,0x7ff86ea82704,88901226,0,0x0,8
tick,0x7ff86ea82704,88903095,0,0x0,8
tick,0x7ff86ea82704,88905279,0,0x0,8
tick,0x7ff86ea82704,88907155,0,0x0,8
tick,0x7ff86ea82704,88909266,0,0x0,8
tick,0x7ff86ea82704,88911089,0,0x0,8
tick,0x7ff86ea82704,88913176,0,0x0,8
tick,0x7ff86ea82704,88915101,0,0x0,8
tick,0x7ff86ea82704,88917145,0,0x0,8
tick,0x7ff86ea82704,88919039,0,0x0,8
tick,0x7ff86ea82704,88921147,0,0x0,8
tick,0x7ff86ea82704,88923018,0,0x0,8
tick,0x7ff86ea82704,88925151,0,0x0,8
tick,0x7ff86ea82704,88927028,0,0x0,8
tick,0x7ff86ea82704,88929144,0,0x0,8
tick,0x7ff86ea82704,88931058,0,0x0,8
tick,0x7ff86ea82704,88933132,0,0x0,8
tick,0x7ff86ea82704,88935076,0,0x0,8
tick,0x7ff86ea82704,88937134,0,0x0,8
tick,0x7ff86ea82704,88939030,0,0x0,8
tick,0x7ff86ea82704,88941160,0,0x0,8
tick,0x7ff86ea82704,88943013,0,0x0,8
tick,0x7ff86ea82704,88945049,0,0x0,8
tick,0x7ff86ea82704,88947103,0,0x0,8
tick,0x7ff86ea82704,88948995,0,0x0,8
tick,0x7ff86ea82704,88950984,0,0x0,8
tick,0x7ff86ea82704,88952978,0,0x0,8
tick,0x7ff86ea82704,88955000,0,0x0,8
tick,0x7ff86ea82704,88956974,0,0x0,8
tick,0x7ff86ea82704,88959014,0,0x0,8
tick,0x7ff86ea82704,88960982,0,0x0,8
tick,0x7ff86ea82704,88962982,0,0x0,8
tick,0x7ff86ea82704,88964968,0,0x0,8
tick,0x7ff86ea82704,88967007,0,0x0,8
tick,0x7ff86ea82704,88969053,0,0x0,8
tick,0x7ff86ea82704,88970886,0,0x0,8
tick,0x7ff86ea82704,88972969,0,0x0,8
tick,0x7ff86ea82704,88974895,0,0x0,8
tick,0x7ff86ea82704,88976926,0,0x0,8
tick,0x7ff86ea82704,88978897,0,0x0,8
tick,0x7ff86ea82704,88980891,0,0x0,8
tick,0x7ff86ea82704,88982947,0,0x0,8
tick,0x7ff86ea82704,88984879,0,0x0,8
tick,0x7ff86ea82704,88986914,0,0x0,8
tick,0x7ff86ea82704,88988932,0,0x0,8
tick,0x7ff86ea82704,88990889,0,0x0,8
tick,0x7ff86ea82704,88992954,0,0x0,8
tick,0x7ff86ea82704,88994881,0,0x0,8
tick,0x7ff86ea82704,88996853,0,0x0,8
tick,0x7ff86ea82704,88998833,0,0x0,8
tick,0x7ff86ea82704,89000837,0,0x0,8
tick,0x7ff86ea82704,89002910,0,0x0,8
tick,0x7ff86ea82704,89004900,0,0x0,8
tick,0x7ff86ea82704,89006817,0,0x0,8
tick,0x7ff86ea82704,89008855,0,0x0,8
tick,0x7ff86ea82704,89010843,0,0x0,8
tick,0x7ff86ea82704,89012895,0,0x0,8
tick,0x7ff86ea82704,89014794,0,0x0,8
tick,0x7ff86ea82704,89016857,0,0x0,8
tick,0x7ff86ea82704,89018880,0,0x0,8
tick,0x7ff86ea82704,89020993,0,0x0,8
tick,0x7ff86ea82704,89022788,0,0x0,8
tick,0x7ff86ea82704,89024770,0,0x0,8
tick,0x7ff86ea82704,89026812,0,0x0,8
tick,0x7ff86ea82704,89028792,0,0x0,8
tick,0x7ff86ea82704,89030796,0,0x0,8
tick,0x7ff86ea82704,89032742,0,0x0,8
tick,0x7ff86ea82704,89034810,0,0x0,8
tick,0x7ff86ea82704,89036740,0,0x0,8
tick,0x7ff86ea82704,89038748,0,0x0,8
tick,0x7ff86ea82704,89040751,0,0x0,8
tick,0x7ff86ea82704,89042792,0,0x0,8
tick,0x7ff86ea82704,89044706,0,0x0,8
tick,0x7ff86ea82704,89046756,0,0x0,8
tick,0x7ff86ea82704,89048701,0,0x0,8
tick,0x7ff86ea82704,89050707,0,0x0,8
tick,0x7ff86ea82704,89052646,0,0x0,8
tick,0x7ff86ea82704,89054768,0,0x0,8
tick,0x7ff86ea82704,89056645,0,0x0,8
tick,0x7ff86ea82704,89058742,0,0x0,8
tick,0x7ff86ea82704,89060668,0,0x0,8
tick,0x7ff86ea82704,89062840,0,0x0,8
tick,0x7ff86ea82704,89064692,0,0x0,8
tick,0x7ff86ea82704,89066685,0,0x0,8
tick,0x7ff86ea82704,89068677,0,0x0,8
tick,0x7ff86ea82704,89070713,0,0x0,8
tick,0x7ff86ea82704,89072673,0,0x0,8
tick,0x7ff86ea82704,89074681,0,0x0,8
tick,0x7ff86ea82704,89076642,0,0x0,8
tick,0x7ff86ea82704,89078639,0,0x0,8
tick,0x7ff86ea82704,89080665,0,0x0,8
tick,0x7ff86ea82704,89082605,0,0x0,8
tick,0x7ff86ea82704,89084680,0,0x0,8
tick,0x7ff86ea82704,89086565,0,0x0,8
tick,0x7ff86ea82704,89088648,0,0x0,8
tick,0x7ff86ea82704,89090542,0,0x0,8
tick,0x7ff86ea82704,89092745,0,0x0,8
tick,0x7ff86ea82704,89094560,0,0x0,8
tick,0x7ff86ea82704,89096640,0,0x0,8
tick,0x7ff86ea82704,89098617,0,0x0,8
tick,0x7ff86ea82704,89100544,0,0x0,8
tick,0x7ff86ea82704,89102574,0,0x0,8
tick,0x7ff86ea82704,89104631,0,0x0,8
tick,0x7ff86ea82704,89106655,0,0x0,8
tick,0x7ff86ea82704,89108617,0,0x0,8
tick,0x7ff86ea82704,89110543,0,0x0,8
tick,0x7ff86ea82704,89112622,0,0x0,8
tick,0x7ff86ea82704,89114619,0,0x0,8
tick,0x7ff86ea82704,89116572,0,0x0,8
tick,0x7ff86ea82704,89118613,0,0x0,8
tick,0x7ff86ea82704,89120559,0,0x0,8
tick,0x7ff86ea82704,89122544,0,0x0,8
tick,0x7ff86ea82704,89124557,0,0x0,8
tick,0x7ff86ea82704,89126509,0,0x0,8
tick,0x7ff86ea82704,89128561,0,0x0,8
tick,0x7ff86ea82704,89130428,0,0x0,8
tick,0x7ff86ea82704,89132731,0,0x0,8
tick,0x7ff86ea82704,89134502,0,0x0,8
tick,0x7ff86ea82704,89136530,0,0x0,8
tick,0x7ff86ea82704,89138490,0,0x0,8
tick,0x7ff86ea82704,89140671,0,0x0,8
tick,0x7ff86ea82704,89142550,0,0x0,8
tick,0x7ff86ea82704,89144562,0,0x0,8
tick,0x7ff86ea82704,89146504,0,0x0,8
tick,0x7ff86ea82704,89148531,0,0x0,8
tick,0x7ff86ea82704,89150446,0,0x0,8
tick,0x7ff86ea82704,89152594,0,0x0,8
tick,0x7ff86ea82704,89154392,0,0x0,8
tick,0x7ff86ea82704,89156451,0,0x0,8
tick,0x7ff86ea82704,89158472,0,0x0,8
tick,0x7ff86ea82704,89160472,0,0x0,8
tick,0x7ff86ea82704,89162596,0,0x0,8
tick,0x7ff86ea82704,89164429,0,0x0,8
tick,0x7ff86ea82704,89166433,0,0x0,8
tick,0x7ff86ea82704,89168403,0,0x0,8
tick,0x7ff86ea82704,89170563,0,0x0,8
tick,0x7ff86ea82704,89172379,0,0x0,8
tick,0x7ff86ea82704,89174500,0,0x0,8
tick,0x7ff86ea82704,89176449,0,0x0,8
tick,0x7ff86ea82704,89178371,0,0x0,8
tick,0x7ff86ea82704,89180421,0,0x0,8
tick,0x7ff86ea82704,89182619,0,0x0,8
tick,0x7ff86ea82704,89184332,0,0x0,8
tick,0x7ff86ea82704,89186362,0,0x0,8
tick,0x7ff86ea82704,89188353,0,0x0,8
tick,0x7ff86ea82704,89190467,0,0x0,8
tick,0x7ff86ea82704,89192369,0,0x0,8
tick,0x7ff86ea82704,89194390,0,0x0,8
tick,0x7ff86ea82704,89196367,0,0x0,8
tick,0x7ff86ea82704,89198449,0,0x0,8
tick,0x7ff86ea82704,89200405,0,0x0,8
tick,0x7ff86ea82704,89202387,0,0x0,8
tick,0x7ff86ea82704,89204256,0,0x0,8
tick,0x7ff86ea82704,89206353,0,0x0,8
tick,0x7ff86ea82704,89208282,0,0x0,8
tick,0x7ff86ea82704,89210295,0,0x0,8
tick,0x7ff86ea82704,89215959,0,0x0,8
tick,0x7ff86ea82704,89217378,0,0x0,8
tick,0x7ff86ea82704,89219225,0,0x0,8
tick,0x7ff86ea82704,89221446,0,0x0,8
tick,0x7ff86ea82704,89223235,0,0x0,8
tick,0x7ff86ea82704,89225343,0,0x0,8
tick,0x7ff86ea82704,89227258,0,0x0,8
tick,0x7ff86ea82704,89229300,0,0x0,8
tick,0x7ff86ea82704,89231327,0,0x0,8
tick,0x7ff86ea82704,89233274,0,0x0,8
tick,0x7ff86ea82704,89235278,0,0x0,8
tick,0x7ff86ea82704,89237346,0,0x0,8
tick,0x7ff86ea82704,89239294,0,0x0,8
tick,0x7ff86ea82704,89241286,0,0x0,8
tick,0x7ff86ea82704,89243211,0,0x0,8
tick,0x7ff86ea82704,89245260,0,0x0,8
tick,0x7ff86ea82704,89247219,0,0x0,8
tick,0x7ff86ea82704,89249254,0,0x0,8
tick,0x7ff86ea82704,89251226,0,0x0,8
tick,0x7ff86ea82704,89253174,0,0x0,8
tick,0x7ff86ea82704,89255255,0,0x0,8
tick,0x7ff86ea82704,89257262,0,0x0,8
tick,0x7ff86ea82704,89259323,0,0x0,8
tick,0x7ff86ea82704,89261914,0,0x0,8
tick,0x7ff86ea82704,89264529,0,0x0,8
tick,0x7ff86ea82704,89266438,0,0x0,8
tick,0x7ff86ea82704,89268288,0,0x0,8
tick,0x7ff86ea82704,89270354,0,0x0,8
tick,0x7ff86ea82704,89272312,0,0x0,8
tick,0x7ff86ea82704,89274208,0,0x0,8
tick,0x7ff86ea82704,89276388,0,0x0,8
tick,0x7ff86ea82704,89278318,0,0x0,8
tick,0x7ff86ea82704,89280153,0,0x0,8
tick,0x7ff86ea82704,89282241,0,0x0,8
tick,0x7ff86ea82704,89284318,0,0x0,8
tick,0x7ff86ea82704,89286422,0,0x0,8
tick,0x7ff86ea82704,89288291,0,0x0,8
tick,0x7ff86ea82704,89290443,0,0x0,8
tick,0x7ff86ea82704,89292218,0,0x0,8
tick,0x7ff86ea82704,89294316,0,0x0,8
tick,0x7ff86ea82704,89296164,0,0x0,8
tick,0x7ff86ea82704,89298245,0,0x0,8
tick,0x7ff86ea82704,89300291,0,0x0,8
tick,0x7ff86ea82704,89302264,0,0x0,8
tick,0x7ff86ea82704,89304106,0,0x0,8
tick,0x7ff86ea82704,89306171,0,0x0,8
tick,0x7ff86ea82704,89308177,0,0x0,8
tick,0x7ff86ea82704,89310235,0,0x0,8
tick,0x7ff86ea82704,89312244,0,0x0,8
tick,0x7ff86ea82704,89314120,0,0x0,8
tick,0x7ff86ea82704,89316148,0,0x0,8
tick,0x7ff86ea82704,89318083,0,0x0,8
tick,0x7ff86ea82704,89320606,0,0x0,8
tick,0x7ff86ea82704,89322019,0,0x0,8
tick,0x7ff86ea82704,89324218,0,0x0,8
tick,0x7ff86ea82704,89326340,0,0x0,8
tick,0x7ff86ea82704,89328374,0,0x0,8
tick,0x7ff86ea82704,89330005,0,0x0,8
tick,0x7ff86ea82704,89332353,0,0x0,8
tick,0x7ff86ea82704,89334031,0,0x0,8
tick,0x7ff86ea82704,89337070,0,0x0,8
tick,0x7ff86ea82704,89338094,0,0x0,8
tick,0x7ff86ea82704,89340090,0,0x0,8
tick,0x7ff86ea82704,89341998,0,0x0,8
tick,0x7ff86ea82704,89344038,0,0x0,8
tick,0x7ff86ea82704,89345933,0,0x0,8
tick,0x7ff86ea82704,89348095,0,0x0,8
tick,0x7ff86ea82704,89349876,0,0x0,8
tick,0x7ff86ea82704,89352042,0,0x0,8
tick,0x7ff86ea82704,89353875,0,0x0,8
tick,0x7ff86ea82704,89355992,0,0x0,8
tick,0x7ff86ea82704,89357909,0,0x0,8
tick,0x7ff86ea82704,89359949,0,0x0,8
tick,0x7ff86ea82704,89361956,0,0x0,8
tick,0x7ff86ea82704,89364053,0,0x0,8
tick,0x7ff86ea82704,89365957,0,0x0,8
tick,0x7ff86ea82704,89367863,0,0x0,8
tick,0x7ff86ea82704,89369877,0,0x0,8
tick,0x7ff86ea82704,89371922,0,0x0,8
tick,0x7ff86ea82704,89373846,0,0x0,8
tick,0x7ff86ea82704,89375933,0,0x0,8
tick,0x7ff86ea82704,89377817,0,0x0,8
tick,0x7ff86ea82704,89379928,0,0x0,8
tick,0x7ff86ea82704,89381792,0,0x0,8
tick,0x7ff86ea82704,89383931,0,0x0,8
tick,0x7ff86ea82704,89385798,0,0x0,8
tick,0x7ff86ea82704,89387947,0,0x0,8
tick,0x7ff86ea82704,89389796,0,0x0,8
tick,0x7ff86ea82704,89391943,0,0x0,8
tick,0x7ff86ea82704,89393732,0,0x0,8
tick,0x7ff86ea82704,89395876,0,0x0,8
tick,0x7ff86ea82704,89397919,0,0x0,8
tick,0x7ff86ea82704,89399885,0,0x0,8
tick,0x7ff86ea82704,89401842,0,0x0,8
tick,0x7ff86ea82704,89403821,0,0x0,8
tick,0x7ff86ea82704,89405917,0,0x0,8
tick,0x7ff86ea82704,89407856,0,0x0,8
tick,0x7ff86ea82704,89409951,0,0x0,8
tick,0x7ff86ea82704,89411791,0,0x0,8
tick,0x7ff86ea82704,89413866,0,0x0,8
tick,0x7ff86ea82704,89415806,0,0x0,8
tick,0x7ff86ea82704,89417825,0,0x0,8
tick,0x7ff86ea82704,89419804,0,0x0,8
tick,0x7ff86ea82704,89421845,0,0x0,8
tick,0x7ff86ea82704,89423749,0,0x0,8
tick,0x7ff86ea82704,89425863,0,0x0,8
tick,0x7ff86ea82704,89427752,0,0x0,8
tick,0x7ff86ea82704,89429822,0,0x0,8
tick,0x7ff86ea82704,89431679,0,0x0,8
tick,0x7ff86ea82704,89433667,0,0x0,8
tick,0x7ff86ea82704,89435865,0,0x0,8
tick,0x7ff86ea82704,89437712,0,0x0,8
tick,0x7ff86ea82704,89439917,0,0x0,8
tick,0x7ff86ea82704,89441958,0,0x0,8
tick,0x7ff86ea82704,89444039,0,0x0,8
tick,0x7ff86ea82704,89445969,0,0x0,8
tick,0x7ff86ea82704,89448092,0,0x0,8
tick,0x7ff86ea82704,89449986,0,0x0,8
tick,0x7ff86ea82704,89452194,0,0x0,8
tick,0x7ff86ea82704,89453678,0,0x0,8
tick,0x7ff86ea82704,89456058,0,0x0,8
tick,0x7ff86ea82704,89457939,0,0x0,8
tick,0x7ff86ea82704,89459917,0,0x0,8
tick,0x7ff86ea82704,89461715,0,0x0,8
tick,0x7ff86ea82704,89463724,0,0x0,8
tick,0x7ff86ea82704,89465695,0,0x0,8
tick,0x7ff86ea82704,89467700,0,0x0,8
tick,0x7ff86ea82704,89469627,0,0x0,8
tick,0x7ff86ea82704,89471736,0,0x0,8
tick,0x7ff86ea82704,89473755,0,0x0,8
tick,0x7ff86ea82704,89475746,0,0x0,8
tick,0x7ff86ea82704,89477711,0,0x0,8
tick,0x7ff86ea82704,89479823,0,0x0,8
tick,0x7ff86ea82704,89481650,0,0x0,8
tick,0x7ff86ea82704,89483976,0,0x0,8
tick,0x7ff86ea82704,89485678,0,0x0,8
tick,0x7ff86ea82704,89487865,0,0x0,8
tick,0x7ff86ea82704,89489617,0,0x0,8
tick,0x7ff86ea82704,89491681,0,0x0,8
tick,0x7ff86ea82704,89493591,0,0x0,8
tick,0x7ff86ea82704,89495689,0,0x0,8
tick,0x7ff86ea82704,89497651,0,0x0,8
tick,0x7ff86ea82704,89499684,0,0x0,8
tick,0x7ff86ea82704,89501547,0,0x0,8
tick,0x7ff86ea82704,89503731,0,0x0,8
tick,0x7ff86ea82704,89505738,0,0x0,8
tick,0x7ff86ea82704,89507650,0,0x0,8
tick,0x7ff86ea82704,89509638,0,0x0,8
tick,0x7ff86ea82704,89511520,0,0x0,8
tick,0x7ff86ea82704,89513727,0,0x0,8
tick,0x7ff86ea82704,89515641,0,0x0,8
tick,0x7ff86ea82704,89517562,0,0x0,8
tick,0x7ff86ea82704,89519674,0,0x0,8
tick,0x7ff86ea82704,89521589,0,0x0,8
tick,0x7ff86ea82704,89523588,0,0x0,8
tick,0x7ff86ea82704,89525434,0,0x0,8
tick,0x7ff86ea82704,89527594,0,0x0,8
tick,0x7ff86ea82704,89529491,0,0x0,8
tick,0x7ff86ea82704,89531444,0,0x0,8
tick,0x7ff86ea82704,89533497,0,0x0,8
tick,0x7ff86ea82704,89535660,0,0x0,8
tick,0x7ff86ea82704,89537431,0,0x0,8
tick,0x7ff86ea82704,89539424,0,0x0,8
tick,0x7ff86ea82704,89541535,0,0x0,8
tick,0x7ff86ea82704,89543396,0,0x0,8
tick,0x7ff86ea82704,89545818,0,0x0,8
tick,0x7ff86ea82704,89547392,0,0x0,8
tick,0x7ff86ea82704,89549550,0,0x0,8
tick,0x7ff86ea82704,89551481,0,0x0,8
tick,0x7ff86ea82704,89553524,0,0x0,8
tick,0x7ff86ea82704,89555332,0,0x0,8
tick,0x7ff86ea82704,89557691,0,0x0,8
tick,0x7ff86ea82704,89559363,0,0x0,8
tick,0x7ff86ea82704,89561645,0,0x0,8
tick,0x7ff86ea82704,89563357,0,0x0,8
tick,0x7ff86ea82704,89565522,0,0x0,8
tick,0x7ff86ea82704,89567337,0,0x0,8
tick,0x7ff86ea82704,89569606,0,0x0,8
tick,0x7ff86ea82704,89571412,0,0x0,8
tick,0x7ff86ea82704,89573382,0,0x0,8
tick,0x7ff86ea82704,89575320,0,0x0,8
tick,0x7ff86ea82704,89577360,0,0x0,8
tick,0x7ff86ea82704,89579433,0,0x0,8
tick,0x7ff86ea82704,89581422,0,0x0,8
tick,0x7ff86ea82704,89583298,0,0x0,8
tick,0x7ff86ea82704,89585409,0,0x0,8
tick,0x7ff86ea82704,89587260,0,0x0,8
tick,0x7ff86ea82704,89589274,0,0x0,8
tick,0x7ff86ea82704,89591429,0,0x0,8
tick,0x7ff86ea82704,89593296,0,0x0,8
tick,0x7ff86ea82704,89595684,0,0x0,8
tick,0x7ff86ea82704,89597453,0,0x0,8
tick,0x7ff86ea82704,89599771,0,0x0,8
tick,0x7ff86ea82704,89601355,0,0x0,8
tick,0x7ff86ea82704,89603509,0,0x0,8
tick,0x7ff86ea82704,89605438,0,0x0,8
tick,0x7ff86ea82704,89607462,0,0x0,8
tick,0x7ff86ea82704,89609336,0,0x0,8
tick,0x7ff86ea82704,89611326,0,0x0,8
tick,0x7ff86ea82704,89613560,0,0x0,8
tick,0x7ff86ea82704,89615426,0,0x0,8
tick,0x7ff86ea82704,89617375,0,0x0,8
tick,0x7ff86ea82704,89619350,0,0x0,8
tick,0x7ff86ea82704,89621404,0,0x0,8
tick,0x7ff86ea82704,89623582,0,0x0,8
tick,0x7ff86ea82704,89625407,0,0x0,8
tick,0x7ff86ea82704,89627353,0,0x0,8
tick,0x7ff86ea82704,89629629,0,0x0,8
tick,0x7ff86ea82704,89631389,0,0x0,8
tick,0x7ff86ea82704,89633410,0,0x0,8
tick,0x7ff86ea82704,89635310,0,0x0,8
tick,0x7ff86ea82704,89637295,0,0x0,8
tick,0x7ff86ea82704,89639424,0,0x0,8
tick,0x7ff86ea82704,89641662,0,0x0,8
tick,0x7ff86ea82704,89643294,0,0x0,8
tick,0x7ff86ea82704,89645762,0,0x0,8
tick,0x7ff86ea82704,89647306,0,0x0,8
tick,0x7ff86ea82704,89649130,0,0x0,8
tick,0x7ff86ea82704,89651177,0,0x0,8
tick,0x7ff86ea82704,89653175,0,0x0,8
tick,0x7ff86ea82704,89655177,0,0x0,8
tick,0x7ff86ea82704,89657142,0,0x0,8
tick,0x7ff86ea82704,89659172,0,0x0,8
tick,0x7ff86ea82704,89661277,0,0x0,8
tick,0x7ff86ea82704,89663229,0,0x0,8
tick,0x7ff86ea82704,89665195,0,0x0,8
tick,0x7ff86ea82704,89667161,0,0x0,8
tick,0x7ff86ea82704,89669193,0,0x0,8
tick,0x7ff86ea82704,89671212,0,0x0,8
tick,0x7ff86ea82704,89673058,0,0x0,8
tick,0x7ff86ea82704,89675376,0,0x0,8
tick,0x7ff86ea82704,89677037,0,0x0,8
tick,0x7ff86ea82704,89679143,0,0x0,8
tick,0x7ff86ea82704,89681106,0,0x0,8
tick,0x7ff86ea82704,89683114,0,0x0,8
tick,0x7ff86ea82704,89685190,0,0x0,8
tick,0x7ff86ea82704,89687095,0,0x0,8
tick,0x7ff86ea82704,89689310,0,0x0,8
tick,0x7ff86ea82704,89691044,0,0x0,8
tick,0x7ff86ea82704,89693200,0,0x0,8
tick,0x7ff86ea82704,89695047,0,0x0,8
tick,0x7ff86ea82704,89697106,0,0x0,8
tick,0x7ff86ea82704,89699035,0,0x0,8
tick,0x7ff86ea82704,89701087,0,0x0,8
tick,0x7ff86ea82704,89703065,0,0x0,8
tick,0x7ff86ea82704,89705009,0,0x0,8
tick,0x7ff86ea82704,89707127,0,0x0,8
tick,0x7ff86ea82704,89709149,0,0x0,8
tick,0x7ff86ea82704,89711169,0,0x0,8
tick,0x7ff86ea82704,89713262,0,0x0,8
tick,0x7ff86ea82704,89715379,0,0x0,8
tick,0x7ff86ea82704,89717419,0,0x0,8
tick,0x7ff86ea82704,89719210,0,0x0,8
tick,0x7ff86ea82704,89721054,0,0x0,8
tick,0x7ff86ea82704,89723012,0,0x0,8
tick,0x7ff86ea82704,89725058,0,0x0,8
tick,0x7ff86ea82704,89727152,0,0x0,8
tick,0x7ff86ea82704,89729132,0,0x0,8
tick,0x7ff86ea82704,89730982,0,0x0,8
tick,0x7ff86ea82704,89733062,0,0x0,8
tick,0x7ff86ea82704,89735013,0,0x0,8
tick,0x7ff86ea82704,89737027,0,0x0,8
tick,0x7ff86ea82704,89739021,0,0x0,8
tick,0x7ff86ea82704,89741051,0,0x0,8
tick,0x7ff86ea82704,89742982,0,0x0,8
tick,0x7ff86ea82704,89745019,0,0x0,8
tick,0x7ff86ea82704,89747153,0,0x0,8
tick,0x7ff86ea82704,89749012,0,0x0,8
tick,0x7ff86ea82704,89750995,0,0x0,8
tick,0x7ff86ea82704,89752894,0,0x0,8
tick,0x7ff86ea82704,89754916,0,0x0,8
tick,0x7ff86ea82704,89756940,0,0x0,8
tick,0x7ff86ea82704,89759354,0,0x0,8
tick,0x7ff86ea82704,89760893,0,0x0,8
tick,0x7ff86ea82704,89762916,0,0x0,8
tick,0x7ff86ea82704,89764963,0,0x0,8
tick,0x7ff86ea82704,89766873,0,0x0,8
tick,0x7ff86ea82704,89768959,0,0x0,8
tick,0x7ff86ea82704,89770899,0,0x0,8
tick,0x7ff86ea82704,89773058,0,0x0,8
tick,0x7ff86ea82704,89774981,0,0x0,8
tick,0x7ff86ea82704,89777028,0,0x0,8
tick,0x7ff86ea82704,89778959,0,0x0,8
tick,0x7ff86ea82704,89780838,0,0x0,8
tick,0x7ff86ea82704,89782987,0,0x0,8
tick,0x7ff86ea82704,89784861,0,0x0,8
tick,0x7ff86ea82704,89787023,0,0x0,8
tick,0x7ff86ea82704,89788880,0,0x0,8
tick,0x7ff86ea82704,89791014,0,0x0,8
tick,0x7ff86ea82704,89793045,0,0x0,8
tick,0x7ff86ea82704,89794964,0,0x0,8
tick,0x7ff86ea82704,89796822,0,0x0,8
tick,0x7ff86ea82704,89798818,0,0x0,8
tick,0x7ff86ea82704,89800766,0,0x0,8
tick,0x7ff86ea82704,89802859,0,0x0,8
tick,0x7ff86ea82704,89804768,0,0x0,8
tick,0x7ff86ea82704,89806953,0,0x0,8
tick,0x7ff86ea82704,89808817,0,0x0,8
tick,0x7ff86ea82704,89810920,0,0x0,8
tick,0x7ff86ea82704,89813216,0,0x0,8
tick,0x7ff86ea82704,89814980,0,0x0,8
tick,0x7ff86ea82704,89816864,0,0x0,8
tick,0x7ff86ea82704,89818879,0,0x0,8
tick,0x7ff86ea82704,89821306,0,0x0,8
tick,0x7ff86ea82704,89822882,0,0x0,8
tick,0x7ff86ea82704,89824801,0,0x0,8
tick,0x7ff86ea82704,89826987,0,0x0,8
tick,0x7ff86ea82704,89828810,0,0x0,8
tick,0x7ff86ea82704,89830740,0,0x0,8
tick,0x7ff86ea82704,89832857,0,0x0,8
tick,0x7ff86ea82704,89834853,0,0x0,8
tick,0x7ff86ea82704,89836706,0,0x0,8
tick,0x7ff86ea82704,89838681,0,0x0,8
tick,0x7ff86ea82704,89840703,0,0x0,8
tick,0x7ff86ea82704,89842682,0,0x0,8
tick,0x7ff86ea82704,89844806,0,0x0,8
tick,0x7ff86ea82704,89846692,0,0x0,8
tick,0x7ff86ea82704,89848753,0,0x0,8
tick,0x7ff86ea82704,89850818,0,0x0,8
tick,0x7ff86ea82704,89852935,0,0x0,8
tick,0x7ff86ea82704,89854702,0,0x0,8
tick,0x7ff86ea82704,89856792,0,0x0,8
tick,0x7ff86ea82704,89858784,0,0x0,8
tick,0x7ff86ea82704,89860746,0,0x0,8
tick,0x7ff86ea82704,89863000,0,0x0,8
tick,0x7ff86ea82704,89864653,0,0x0,8
tick,0x7ff86ea82704,89866678,0,0x0,8
tick,0x7ff86ea82704,89868721,0,0x0,8
tick,0x7ff86ea82704,89870666,0,0x0,8
tick,0x7ff86ea82704,89872553,0,0x0,8
tick,0x7ff86ea82704,89874768,0,0x0,8
tick,0x7ff86ea82704,89876694,0,0x0,8
tick,0x7ff86ea82704,89878570,0,0x0,8
tick,0x7ff86ea82704,89880648,0,0x0,8
tick,0x7ff86ea82704,89882599,0,0x0,8
tick,0x7ff86ea82704,89884829,0,0x0,8
tick,0x7ff86ea82704,89886700,0,0x0,8
tick,0x7ff86ea82704,89888700,0,0x0,8
tick,0x7ff86ea82704,89890596,0,0x0,8
tick,0x7ff86ea82704,89892784,0,0x0,8
tick,0x7ff86ea82704,89894661,0,0x0,8
tick,0x7ff86ea82704,89896707,0,0x0,8
tick,0x7ff86ea82704,89898553,0,0x0,8
tick,0x7ff86ea82704,89900903,0,0x0,8
tick,0x7ff86ea82704,89902640,0,0x0,8
tick,0x7ff86ea82704,89904602,0,0x0,8
tick,0x7ff86ea82704,89906481,0,0x0,8
tick,0x7ff86ea82704,89908563,0,0x0,8
tick,0x7ff86ea82704,89910431,0,0x0,8
tick,0x7ff86ea82704,89912633,0,0x0,8
tick,0x7ff86ea82704,89914432,0,0x0,8
tick,0x7ff86ea82704,89916736,0,0x0,8
tick,0x7ff86ea82704,89918470,0,0x0,8
tick,0x7ff86ea82704,89920479,0,0x0,8
tick,0x7ff86ea82704,89922538,0,0x0,8
tick,0x7ff86ea82704,89924732,0,0x0,8
tick,0x7ff86ea82704,89926415,0,0x0,8
tick,0x7ff86ea82704,89928517,0,0x0,8
tick,0x7ff86ea82704,89930685,0,0x0,8
tick,0x7ff86ea82704,89932505,0,0x0,8
tick,0x7ff86ea82704,89934575,0,0x0,8
tick,0x7ff86ea82704,89936399,0,0x0,8
tick,0x7ff86ea82704,89938470,0,0x0,8
tick,0x7ff86ea82704,89940459,0,0x0,8
tick,0x7ff86ea82704,89942433,0,0x0,8
tick,0x7ff86ea82704,89944511,0,0x0,8
tick,0x7ff86ea82704,89946374,0,0x0,8
tick,0x7ff86ea82704,89948510,0,0x0,8
tick,0x7ff86ea82704,89950567,0,0x0,8
tick,0x7ff86ea82704,89952840,0,0x0,8
tick,0x7ff86ea82704,89954423,0,0x0,8
tick,0x7ff86ea82704,89956588,0,0x0,8
tick,0x7ff86ea82704,89958390,0,0x0,8
tick,0x7ff86ea82704,89960495,0,0x0,8
tick,0x7ff86ea82704,89962294,0,0x0,8
tick,0x7ff86ea82704,89964364,0,0x0,8
tick,0x7ff86ea82704,89966381,0,0x0,8
tick,0x7ff86ea82704,89968513,0,0x0,8
tick,0x7ff86ea82704,89970348,0,0x0,8
tick,0x7ff86ea82704,89972314,0,0x0,8
tick,0x7ff86ea82704,89974383,0,0x0,8
tick,0x7ff86ea82704,89976355,0,0x0,8
tick,0x7ff86ea82704,89978525,0,0x0,8
tick,0x7ff86ea82704,89980782,0,0x0,8
tick,0x7ff86ea82704,89982361,0,0x0,8
tick,0x7ff86ea82704,89984397,0,0x0,8
tick,0x7ff86ea82704,89986324,0,0x0,8
tick,0x7ff86ea82704,89988253,0,0x0,8
tick,0x7ff86ea82704,89990320,0,0x0,8
tick,0x7ff86ea82704,89992234,0,0x0,8
tick,0x7ff86ea82704,89994398,0,0x0,8
tick,0x7ff86ea82704,89996228,0,0x0,8
tick,0x7ff86ea82704,89998318,0,0x0,8
tick,0x7ff86ea82704,90000177,0,0x0,8
tick,0x7ff86ea82704,90002300,0,0x0,8
tick,0x7ff86ea82704,90004142,0,0x0,8
tick,0x7ff86ea82704,90006304,0,0x0,8
tick,0x7ff86ea82704,90008241,0,0x0,8
tick,0x7ff86ea82704,90010211,0,0x0,8
tick,0x7ff86ea82704,90012217,0,0x0,8
tick,0x7ff86ea82704,90014221,0,0x0,8
tick,0x7ff86ea82704,90016194,0,0x0,8
tick,0x7ff86ea82704,90018208,0,0x0,8
tick,0x7ff86ea82704,90020278,0,0x0,8
tick,0x7ff86ea82704,90022267,0,0x0,8
tick,0x7ff86ea82704,90024194,0,0x0,8
tick,0x7ff86ea82704,90026201,0,0x0,8
tick,0x7ff86ea82704,90028147,0,0x0,8
tick,0x7ff86ea82704,90030258,0,0x0,8
tick,0x7ff86ea82704,90032260,0,0x0,8
tick,0x7ff86ea82704,90034158,0,0x0,8
tick,0x7ff86ea82704,90036340,0,0x0,8
tick,0x7ff86ea82704,90038521,0,0x0,8
tick,0x7ff86ea82704,90040132,0,0x0,8
tick,0x7ff86ea82704,90042182,0,0x0,8
tick,0x7ff86ea82704,90044122,0,0x0,8
tick,0x7ff86ea82704,90046205,0,0x0,8
tick,0x7ff86ea82704,90048076,0,0x0,8
tick,0x7ff86ea82704,90050136,0,0x0,8
tick,0x7ff86ea82704,90052139,0,0x0,8
tick,0x7ff86ea82704,90054374,0,0x0,8
tick,0x7ff86ea82704,90056155,0,0x0,8
tick,0x7ff86ea82704,90058317,0,0x0,8
tick,0x7ff86ea82704,90060201,0,0x0,8
tick,0x7ff86ea82704,90062051,0,0x0,8
tick,0x7ff86ea82704,90064119,0,0x0,8
tick,0x7ff86ea82704,90066128,0,0x0,8
tick,0x7ff86ea82704,90068234,0,0x0,8
tick,0x7ff86ea82704,90070117,0,0x0,8
tick,0x7ff86ea82704,90072196,0,0x0,8
tick,0x7ff86ea82704,90074977,0,0x0,8
tick,0x7ff86ea82704,90077482,0,0x0,8
tick,0x7ff86ea82704,90079118,0,0x0,8
tick,0x7ff86ea82704,90081242,0,0x0,8
tick,0x7ff86ea82704,90083062,0,0x0,8
tick,0x7ff86ea82704,90085172,0,0x0,8
tick,0x7ff86ea82704,90087142,0,0x0,8
tick,0x7ff86ea82704,90089204,0,0x0,8
tick,0x7ff86ea82704,90091171,0,0x0,8
tick,0x7ff86ea82704,90093356,0,0x0,8
tick,0x7ff86ea82704,90095046,0,0x0,8
tick,0x7ff86ea82704,90097138,0,0x0,8
tick,0x7ff86ea82704,90099109,0,0x0,8
tick,0x7ff86ea82704,90101333,0,0x0,8
tick,0x7ff86ea82704,90103251,0,0x0,8
tick,0x7ff86ea82704,90104931,0,0x0,8
tick,0x7ff86ea82704,90107071,0,0x0,8
tick,0x7ff86ea82704,90109025,0,0x0,8
tick,0x7ff86ea82704,90111371,0,0x0,8
tick,0x7ff86ea82704,90113093,0,0x0,8
tick,0x7ff86ea82704,90115050,0,0x0,8
tick,0x7ff86ea82704,90117274,0,0x0,8
tick,0x7ff86ea82704,90119543,0,0x0,8
tick,0x7ff86ea82704,90120946,0,0x0,8
tick,0x7ff86ea82704,90123061,0,0x0,8
tick,0x7ff86ea82704,90124826,0,0x0,8
tick,0x7ff86ea82704,90127141,0,0x0,8
tick,0x7ff86ea82704,90128919,0,0x0,8
tick,0x7ff86ea82704,90131101,0,0x0,8
tick,0x7ff86ea82704,90132809,0,0x0,8
tick,0x7ff86ea82704,90135000,0,0x0,8
tick,0x7ff86ea82704,90136954,0,0x0,8
tick,0x7ff86ea82704,90138942,0,0x0,8
tick,0x7ff86ea82704,90141008,0,0x0,8
tick,0x7ff86ea82704,90142945,0,0x0,8
tick,0x7ff86ea82704,90144913,0,0x0,8
tick,0x7ff86ea82704,90147128,0,0x0,8
tick,0x7ff86ea82704,90148910,0,0x0,8
tick,0x7ff86ea82704,90151373,0,0x0,8
tick,0x7ff86ea82704,90153000,0,0x0,8
tick,0x7ff86ea82704,90154873,0,0x0,8
tick,0x7ff86ea82704,90156930,0,0x0,8
tick,0x7ff86ea82704,90159124,0,0x0,8
tick,0x7ff86ea82704,90161081,0,0x0,8
tick,0x7ff86ea82704,90162933,0,0x0,8
tick,0x7ff86ea82704,90165043,0,0x0,8
tick,0x7ff86ea82704,90166920,0,0x0,8
tick,0x7ff86ea82704,90169189,0,0x0,8
tick,0x7ff86ea82704,90170895,0,0x0,8
tick,0x7ff86ea82704,90173122,0,0x0,8
tick,0x7ff86ea82704,90174798,0,0x0,8
tick,0x7ff86ea82704,90177509,0,0x0,8
tick,0x7ff86ea82704,90178750,0,0x0,8
tick,0x7ff86ea82704,90181021,0,0x0,8
tick,0x7ff86ea82704,90182795,0,0x0,8
tick,0x7ff86ea82704,90185917,0,0x0,8
tick,0x7ff86ea82704,90188009,0,0x0,8
tick,0x7ff86ea82704,90191371,0,0x0,8
tick,0x7ff86ea82704,90192811,0,0x0,8
tick,0x7ff86ea82704,90195027,0,0x0,8
tick,0x7ff86ea82704,90196793,0,0x0,8
tick,0x7ff86ea82704,90199267,0,0x0,8
tick,0x7ff86ea82704,90201116,0,0x0,8
tick,0x7ff86ea82704,90203158,0,0x0,8
tick,0x7ff86ea82704,90204831,0,0x0,8
tick,0x7ff86ea82704,90207211,0,0x0,8
tick,0x7ff86ea82704,90209091,0,0x0,8
tick,0x7ff86ea82704,90210768,0,0x0,8
tick,0x7ff86ea82704,90212830,0,0x0,8
tick,0x7ff86ea82704,90214900,0,0x0,8
tick,0x7ff86ea82704,90216848,0,0x0,8
tick,0x7ff86ea82704,90218758,0,0x0,8
tick,0x7ff86ea82704,90220752,0,0x0,8
tick,0x7ff86ea82704,90222752,0,0x0,8
tick,0x7ff86ea82704,90224690,0,0x0,8
tick,0x7ff86ea82704,90226711,0,0x0,8
tick,0x7ff86ea82704,90228706,0,0x0,8
tick,0x7ff86ea82704,90230888,0,0x0,8
tick,0x7ff86ea82704,90232668,0,0x0,8
tick,0x7ff86ea82704,90234648,0,0x0,8
tick,0x7ff86ea82704,90236711,0,0x0,8
tick,0x7ff86ea82704,90238883,0,0x0,8
tick,0x7ff86ea82704,90240739,0,0x0,8
tick,0x7ff86ea82704,90242786,0,0x0,8
tick,0x7ff86ea82704,90244697,0,0x0,8
tick,0x7ff86ea82704,90246588,0,0x0,8
tick,0x7ff86ea82704,90248729,0,0x0,8
tick,0x7ff86ea82704,90250708,0,0x0,8
tick,0x7ff86ea82704,90252702,0,0x0,8
tick,0x7ff86ea82704,90254687,0,0x0,8
tick,0x7ff86ea82704,90256722,0,0x0,8
tick,0x7ff86ea82704,90258917,0,0x0,8
tick,0x7ff86ea82704,90260681,0,0x0,8
tick,0x7ff86ea82704,90262748,0,0x0,8
tick,0x7ff86ea82704,90264702,0,0x0,8
tick,0x7ff86ea82704,90267025,0,0x0,8
tick,0x7ff86ea82704,90268742,0,0x0,8
tick,0x7ff86ea82704,90271036,0,0x0,8
tick,0x7ff86ea82704,90273236,0,0x0,8
tick,0x7ff86ea82704,90275014,0,0x0,8
tick,0x7ff86ea82704,90276842,0,0x0,8
tick,0x7ff86ea82704,90279848,0,0x0,8
tick,0x7ff86ea82704,90281503,0,0x0,8
tick,0x7ff86ea82704,90282762,0,0x0,8
tick,0x7ff86ea82704,90284887,0,0x0,8
tick,0x7ff86ea82704,90286671,0,0x0,8
tick,0x7ff86ea82704,90288622,0,0x0,8
tick,0x7ff86ea82704,90290717,0,0x0,8
tick,0x7ff86ea82704,90293158,0,0x0,8
tick,0x7ff86ea82704,90294491,0,0x0,8
tick,0x7ff86ea82704,90296628,0,0x0,8
tick,0x7ff86ea82704,90298616,0,0x0,8
tick,0x7ff86ea82704,90300598,0,0x0,8
tick,0x7ff86ea82704,90302693,0,0x0,8
tick,0x7ff86ea82704,90304667,0,0x0,8
tick,0x7ff86ea82704,90306661,0,0x0,8
tick,0x7ff86ea82704,90308605,0,0x0,8
tick,0x7ff86ea82704,90310644,0,0x0,8
tick,0x7ff86ea82704,90312541,0,0x0,8
tick,0x7ff86ea82704,90314548,0,0x0,8
tick,0x7ff86ea82704,90316655,0,0x0,8
tick,0x7ff86ea82704,90318696,0,0x0,8
tick,0x7ff86ea82704,90320579,0,0x0,8
tick,0x7ff86ea82704,90322535,0,0x0,8
tick,0x7ff86ea82704,90324771,0,0x0,8
tick,0x7ff86ea82704,90326583,0,0x0,8
tick,0x7ff86ea82704,90328586,0,0x0,8
tick,0x7ff86ea82704,90330580,0,0x0,8
tick,0x7ff86ea82704,90332456,0,0x0,8
tick,0x7ff86ea82704,90334380,0,0x0,8
tick,0x7ff86ea82704,90336553,0,0x0,8
tick,0x7ff86ea82704,90338596,0,0x0,8
tick,0x7ff86ea82704,90340735,0,0x0,8
tick,0x7ff86ea82704,90342784,0,0x0,8
tick,0x7ff86ea82704,90344818,0,0x0,8
tick,0x7ff86ea82704,90346703,0,0x0,8
tick,0x7ff86ea82704,90348552,0,0x0,8
tick,0x7ff86ea82704,90350400,0,0x0,8
tick,0x7ff86ea82704,90352574,0,0x0,8
tick,0x7ff86ea82704,90354523,0,0x0,8
tick,0x7ff86ea82704,90356772,0,0x0,8
tick,0x7ff86ea82704,90358418,0,0x0,8
tick,0x7ff86ea82704,90360463,0,0x0,8
tick,0x7ff86ea82704,90362757,0,0x0,8
tick,0x7ff86ea82704,90364433,0,0x0,8
tick,0x7ff86ea82704,90366649,0,0x0,8
tick,0x7ff86ea82704,90368579,0,0x0,8
tick,0x7ff86ea82704,90370373,0,0x0,8
tick,0x7ff86ea82704,90372375,0,0x0,8
tick,0x7ff86ea82704,90374608,0,0x0,8
tick,0x7ff86ea82704,90376420,0,0x0,8
tick,0x7ff86ea82704,90378447,0,0x0,8
tick,0x7ff86ea82704,90380479,0,0x0,8
tick,0x7ff86ea82704,90382343,0,0x0,8
tick,0x7ff86ea82704,90384442,0,0x0,8
tick,0x7ff86ea82704,90386291,0,0x0,8
tick,0x7ff86ea82704,90388434,0,0x0,8
tick,0x7ff86ea82704,90390285,0,0x0,8
tick,0x7ff86ea82704,90392581,0,0x0,8
tick,0x7ff86ea82704,90394535,0,0x0,8
tick,0x7ff86ea82704,90396480,0,0x0,8
tick,0x7ff86ea82704,90398799,0,0x0,8
tick,0x7ff86ea82704,90400326,0,0x0,8
tick,0x7ff86ea82704,90402867,0,0x0,8
tick,0x7ff86ea82704,90404836,0,0x0,8
tick,0x7ff86ea82704,90406258,0,0x0,8
tick,0x7ff86ea82704,90408637,0,0x0,8
tick,0x7ff86ea82704,90410275,0,0x0,8
tick,0x7ff86ea82704,90412378,0,0x0,8
tick,0x7ff86ea82704,90414330,0,0x0,8
tick,0x7ff86ea82704,90416127,0,0x0,8
tick,0x7ff86ea82704,90418412,0,0x0,8
tick,0x7ff86ea82704,90420320,0,0x0,8
tick,0x7ff86ea82704,90422196,0,0x0,8
tick,0x7ff86ea82704,90424177,0,0x0,8
tick,0x7ff86ea82704,90426313,0,0x0,8
tick,0x7ff86ea82704,90428259,0,0x0,8
tick,0x7ff86ea82704,90430310,0,0x0,8
tick,0x7ff86ea82704,90432316,0,0x0,8
tick,0x7ff86ea82704,90434162,0,0x0,8
tick,0x7ff86ea82704,90436252,0,0x0,8
tick,0x7ff86ea82704,90438229,0,0x0,8
tick,0x7ff86ea82704,90440102,0,0x0,8
tick,0x7ff86ea82704,90442083,0,0x0,8
tick,0x7ff86ea82704,90444349,0,0x0,8
tick,0x7ff86ea82704,90446670,0,0x0,8
tick,0x7ff86ea82704,90448288,0,0x0,8
tick,0x7ff86ea82704,90450261,0,0x0,8
tick,0x7ff86ea82704,90452161,0,0x0,8
tick,0x7ff86ea82704,90454102,0,0x0,8
tick,0x7ff86ea82704,90456204,0,0x0,8
tick,0x7ff86ea82704,90458087,0,0x0,8
tick,0x7ff86ea82704,90460116,0,0x0,8
tick,0x7ff86ea82704,90462040,0,0x0,8
tick,0x7ff86ea82704,90464146,0,0x0,8
tick,0x7ff86ea82704,90467119,0,0x0,8
tick,0x7ff86ea82704,90468450,0,0x0,8
tick,0x7ff86ea82704,90470197,0,0x0,8
tick,0x7ff86ea82704,90472446,0,0x0,8
tick,0x7ff86ea82704,90474012,0,0x0,8
tick,0x7ff86ea82704,90477075,0,0x0,8
tick,0x7ff86ea82704,90480173,0,0x0,8
tick,0x7ff86ea82704,90482089,0,0x0,8
tick,0x7ff86ea82704,90484115,0,0x0,8
tick,0x7ff86ea82704,90486220,0,0x0,8
tick,0x7ff86ea82704,90487984,0,0x0,8
tick,0x7ff86ea82704,90490173,0,0x0,8
tick,0x7ff86ea82704,90492012,0,0x0,8
tick,0x7ff86ea82704,90494126,0,0x0,8
tick,0x7ff86ea82704,90496543,0,0x0,8
tick,0x7ff86ea82704,90498620,0,0x0,8
tick,0x7ff86ea82704,90500862,0,0x0,8
tick,0x7ff86ea82704,90502105,0,0x0,8
tick,0x7ff86ea82704,90504550,0,0x0,8
tick,0x7ff86ea82704,90506287,0,0x0,8
tick,0x7ff86ea82704,90508499,0,0x0,8
tick,0x7ff86ea82704,90510159,0,0x0,8
tick,0x7ff86ea82704,90512064,0,0x0,8
tick,0x7ff86ea82704,90514216,0,0x0,8
tick,0x7ff86ea82704,90516097,0,0x0,8
tick,0x7ff86ea82704,90517889,0,0x0,8
tick,0x7ff86ea82704,90520194,0,0x0,8
tick,0x7ff86ea82704,90521996,0,0x0,8
tick,0x7ff86ea82704,90524063,0,0x0,8
tick,0x7ff86ea82704,90525925,0,0x0,8
tick,0x7ff86ea82704,90527990,0,0x0,8
tick,0x7ff86ea82704,90530056,0,0x0,8
tick,0x7ff86ea82704,90531834,0,0x0,8
tick,0x7ff86ea82704,90533938,0,0x0,8
tick,0x7ff86ea82704,90535803,0,0x0,8
tick,0x7ff86ea82704,90538087,0,0x0,8
tick,0x7ff86ea82704,90539939,0,0x0,8
tick,0x7ff86ea82704,90542031,0,0x0,8
tick,0x7ff86ea82704,90543986,0,0x0,8
tick,0x7ff86ea82704,90546026,0,0x0,8
tick,0x7ff86ea82704,90550573,0,0x0,8
tick,0x7ff86ea82704,90552139,0,0x0,8
tick,0x7ff86ea82704,90553999,0,0x0,8
tick,0x7ff86ea82704,90556388,0,0x0,8
tick,0x7ff86ea82704,90558164,0,0x0,8
tick,0x7ff86ea82704,90560284,0,0x0,8
tick,0x7ff86ea82704,90562388,0,0x0,8
tick,0x7ff86ea82704,90564816,0,0x0,8
tick,0x7ff86ea82704,90565794,0,0x0,8
tick,0x7ff86ea82704,90568032,0,0x0,8
tick,0x7ff86ea82704,90569764,0,0x0,8
tick,0x7ff86ea82704,90572137,0,0x0,8
tick,0x7ff86ea82704,90573707,0,0x0,8
tick,0x7ff86ea82704,90575970,0,0x0,8
tick,0x7ff86ea82704,90577731,0,0x0,8
tick,0x7ff86ea82704,90580600,0,0x0,8
tick,0x7ff86ea82704,90582116,0,0x0,8
tick,0x7ff86ea82704,90584405,0,0x0,8
tick,0x7ff86ea82704,90586054,0,0x0,8
tick,0x7ff86ea82704,90588280,0,0x0,8
tick,0x7ff86ea82704,90589990,0,0x0,8
tick,0x7ff86ea82704,90592276,0,0x0,8
tick,0x7ff86ea82704,90593681,0,0x0,8
tick,0x7ff86ea82704,90597183,0,0x0,8
tick,0x7ff86ea82704,90599123,0,0x0,8
tick,0x7ff86ea82704,90601511,0,0x0,8
tick,0x7ff86ea82704,90602711,0,0x0,8
tick,0x7ff86ea82704,90605226,0,0x0,8
tick,0x7ff86ea82704,90607061,0,0x0,8
tick,0x7ff86ea82704,90608675,0,0x0,8
tick,0x7ff86ea82704,90610813,0,0x0,8
tick,0x7ff86ea82704,90613295,0,0x0,8
tick,0x7ff86ea82704,90614639,0,0x0,8
tick,0x7ff86ea82704,90616684,0,0x0,8
tick,0x7ff86ea82704,90618749,0,0x0,8
tick,0x7ff86ea82704,90620932,0,0x0,8
tick,0x7ff86ea82704,90622667,0,0x0,8
tick,0x7ff86ea82704,90624733,0,0x0,8
tick,0x7ff86ea82704,90626889,0,0x0,8
tick,0x7ff86ea82704,90628929,0,0x0,8
tick,0x7ff86ea82704,90630676,0,0x0,8
tick,0x7ff86ea82704,90632681,0,0x0,8
tick,0x7ff86ea82704,90634792,0,0x0,8
tick,0x7ff86ea82704,90636643,0,0x0,8
tick,0x7ff86ea82704,90638606,0,0x0,8
tick,0x7ff86ea82704,90640596,0,0x0,8
tick,0x7ff86ea82704,90642618,0,0x0,8
tick,0x7ff86ea82704,90644785,0,0x0,8
tick,0x7ff86ea82704,90646648,0,0x0,8
tick,0x7ff86ea82704,90648504,0,0x0,8
tick,0x7ff86ea82704,90650610,0,0x0,8
tick,0x7ff86ea82704,90652746,0,0x0,8
tick,0x7ff86ea82704,90654497,0,0x0,8
tick,0x7ff86ea82704,90656748,0,0x0,8
tick,0x7ff86ea82704,90658504,0,0x0,8
tick,0x7ff86ea82704,90660645,0,0x0,8
tick,0x7ff86ea82704,90662643,0,0x0,8
tick,0x7ff86ea82704,90664687,0,0x0,8
tick,0x7ff86ea82704,90666655,0,0x0,8
tick,0x7ff86ea82704,90668564,0,0x0,8
tick,0x7ff86ea82704,90670517,0,0x0,8
tick,0x7ff86ea82704,90672631,0,0x0,8
tick,0x7ff86ea82704,90675257,0,0x0,8
tick,0x7ff86ea82704,90676443,0,0x0,8
tick,0x7ff86ea82704,90678694,0,0x0,8
tick,0x7ff86ea82704,90680432,0,0x0,8
tick,0x7ff86ea82704,90683442,0,0x0,8
tick,0x7ff86ea82704,90687499,0,0x0,8
tick,0x7ff86ea82704,90689643,0,0x0,8
tick,0x7ff86ea82704,90691635,0,0x0,8
tick,0x7ff86ea82704,90693473,0,0x0,8
tick,0x7ff86ea82704,90695745,0,0x0,8
tick,0x7ff86ea82704,90700966,0,0x0,8
tick,0x7ff86ea82704,90701614,0,0x0,8
tick,0x7ff86ea82704,90703876,0,0x0,8
tick,0x7ff86ea82704,90705401,0,0x0,8
tick,0x7ff86ea82704,90707604,0,0x0,8
tick,0x7ff86ea82704,90709506,0,0x0,8
tick,0x7ff86ea82704,90711344,0,0x0,8
tick,0x7ff86ea82704,90714092,0,0x0,8
tick,0x7ff86ea82704,90715902,0,0x0,8
tick,0x7ff86ea82704,90719056,0,0x0,8
tick,0x7ff86ea82704,90720436,0,0x0,8
tick,0x7ff86ea82704,90722433,0,0x0,8
tick,0x7ff86ea82704,90724481,0,0x0,8
tick,0x7ff86ea82704,90726296,0,0x0,8
tick,0x7ff86ea82704,90728426,0,0x0,8
tick,0x7ff86ea82704,90733050,0,0x0,8
tick,0x7ff86ea82704,90735050,0,0x0,8
tick,0x7ff86ea82704,90737429,0,0x0,8
tick,0x7ff86ea82704,90739460,0,0x0,8
tick,0x7ff86ea82704,90741327,0,0x0,8
tick,0x7ff86ea82704,90743394,0,0x0,8
tick,0x7ff86ea82704,90745521,0,0x0,8
tick,0x7ff86ea82704,90748429,0,0x0,8
tick,0x7ff86ea82704,90750475,0,0x0,8
tick,0x7ff86ea82704,90752584,0,0x0,8
tick,0x7ff86ea82704,90754829,0,0x0,8
tick,0x7ff86ea82704,90756395,0,0x0,8
tick,0x7ff86ea82704,90758300,0,0x0,8
tick,0x7ff86ea82704,90760396,0,0x0,8
tick,0x7ff86ea82704,90762129,0,0x0,8
tick,0x7ff86ea82704,90765965,0,0x0,8
tick,0x7ff86ea82704,90768480,0,0x0,8
tick,0x7ff86ea82704,90770255,0,0x0,8
tick,0x7ff86ea82704,90772329,0,0x0,8
tick,0x7ff86ea82704,90774470,0,0x0,8
tick,0x7ff86ea82704,90776314,0,0x0,8
tick,0x7ff86ea82704,90778462,0,0x0,8
tick,0x7ff86ea82704,90780576,0,0x0,8
tick,0x7ff86ea82704,90782359,0,0x0,8
tick,0x7ff86ea82704,90784408,0,0x0,8
tick,0x7ff86ea82704,90786250,0,0x0,8
tick,0x7ff86ea82704,90788272,0,0x0,8
tick,0x7ff86ea82704,90790382,0,0x0,8
tick,0x7ff86ea82704,90792177,0,0x0,8
tick,0x7ff86ea82704,90794305,0,0x0,8
tick,0x7ff86ea82704,90796261,0,0x0,8
tick,0x7ff86ea82704,90798314,0,0x0,8
tick,0x7ff86ea82704,90800327,0,0x0,8
tick,0x7ff86ea82704,90802582,0,0x0,8
tick,0x7ff86ea82704,90804200,0,0x0,8
tick,0x7ff86ea82704,90806350,0,0x0,8
tick,0x7ff86ea82704,90808366,0,0x0,8
tick,0x7ff86ea82704,90810344,0,0x0,8
tick,0x7ff86ea82704,90812335,0,0x0,8
tick,0x7ff86ea82704,90814753,0,0x0,8
tick,0x7ff86ea82704,90816395,0,0x0,8
tick,0x7ff86ea82704,90818226,0,0x0,8
tick,0x7ff86ea82704,90820217,0,0x0,8
tick,0x7ff86ea82704,90822167,0,0x0,8
tick,0x7ff86ea82704,90824355,0,0x0,8
tick,0x7ff86ea82704,90826142,0,0x0,8
tick,0x7ff86ea82704,90828147,0,0x0,8
tick,0x7ff86ea82704,90830426,0,0x0,8
tick,0x7ff86ea82704,90832165,0,0x0,8
tick,0x7ff86ea82704,90834650,0,0x0,8
tick,0x7ff86ea82704,90836326,0,0x0,8
tick,0x7ff86ea82704,90838205,0,0x0,8
tick,0x7ff86ea82704,90840308,0,0x0,8
tick,0x7ff86ea82704,90842160,0,0x0,8
tick,0x7ff86ea82704,90844208,0,0x0,8
tick,0x7ff86ea82704,90846634,0,0x0,8
tick,0x7ff86ea82704,90848803,0,0x0,8
tick,0x7ff86ea82704,90850236,0,0x0,8
tick,0x7ff86ea82704,90852219,0,0x0,8
tick,0x7ff86ea82704,90854212,0,0x0,8
tick,0x7ff86ea82704,90856303,0,0x0,8
tick,0x7ff86ea82704,90858041,0,0x0,8
tick,0x7ff86ea82704,90860245,0,0x0,8
tick,0x7ff86ea82704,90862187,0,0x0,8
tick,0x7ff86ea82704,90864486,0,0x0,8
tick,0x7ff86ea82704,90866072,0,0x0,8
tick,0x7ff86ea82704,90868049,0,0x0,8
tick,0x7ff86ea82704,90870007,0,0x0,8
tick,0x7ff86ea82704,90871969,0,0x0,8
tick,0x7ff86ea82704,90873989,0,0x0,8
tick,0x7ff86ea82704,90876030,0,0x0,8
tick,0x7ff86ea82704,90877972,0,0x0,8
tick,0x7ff86ea82704,90880336,0,0x0,8
tick,0x7ff86ea82704,90881886,0,0x0,8
tick,0x7ff86ea82704,90883882,0,0x0,8
tick,0x7ff86ea82704,90886090,0,0x0,8
tick,0x7ff86ea82704,90887871,0,0x0,8
tick,0x7ff86ea82704,90889913,0,0x0,8
tick,0x7ff86ea82704,90891928,0,0x0,8
tick,0x7ff86ea82704,90893838,0,0x0,8
tick,0x7ff86ea82704,90896166,0,0x0,8
tick,0x7ff86ea82704,90897992,0,0x0,8
tick,0x7ff86ea82704,90899900,0,0x0,8
tick,0x7ff86ea82704,90901965,0,0x0,8
tick,0x7ff86ea82704,90903870,0,0x0,8
tick,0x7ff86ea82704,90905815,0,0x0,8
tick,0x7ff86ea82704,90907824,0,0x0,8
tick,0x7ff86ea82704,90909786,0,0x0,8
tick,0x7ff86ea82704,90911811,0,0x0,8
tick,0x7ff86ea82704,90914442,0,0x0,8
tick,0x7ff86ea82704,90915934,0,0x0,8
tick,0x7ff86ea82704,90917834,0,0x0,8
tick,0x7ff86ea82704,90919831,0,0x0,8
tick,0x7ff86ea82704,90921823,0,0x0,8
tick,0x7ff86ea82704,90923780,0,0x0,8
tick,0x7ff86ea82704,90925815,0,0x0,8
tick,0x7ff86ea82704,90927736,0,0x0,8
tick,0x7ff86ea82704,90929834,0,0x0,8
tick,0x7ff86ea82704,90931856,0,0x0,8
tick,0x7ff86ea82704,90933718,0,0x0,8
tick,0x7ff86ea82704,90935853,0,0x0,8
tick,0x7ff86ea82704,90937809,0,0x0,8
tick,0x7ff86ea82704,90939789,0,0x0,8
tick,0x7ff86ea82704,90941705,0,0x0,8
tick,0x7ff86ea82704,90943757,0,0x0,8
tick,0x7ff86ea82704,90945770,0,0x0,8
tick,0x7ff86ea82704,90947964,0,0x0,8
tick,0x7ff86ea82704,90949965,0,0x0,8
tick,0x7ff86ea82704,90951793,0,0x0,8
tick,0x7ff86ea82704,90953796,0,0x0,8
tick,0x7ff86ea82704,90955673,0,0x0,8
tick,0x7ff86ea82704,90957819,0,0x0,8
tick,0x7ff86ea82704,90959718,0,0x0,8
tick,0x7ff86ea82704,90961656,0,0x0,8
tick,0x7ff86ea82704,90963907,0,0x0,8
tick,0x7ff86ea82704,90965714,0,0x0,8
tick,0x7ff86ea82704,90967840,0,0x0,8
tick,0x7ff86ea82704,90969694,0,0x0,8
tick,0x7ff86ea82704,90971708,0,0x0,8
tick,0x7ff86ea82704,90973737,0,0x0,8
tick,0x7ff86ea82704,90975693,0,0x0,8
tick,0x7ff86ea82704,90977698,0,0x0,8
tick,0x7ff86ea82704,90979730,0,0x0,8
tick,0x7ff86ea82704,90981960,0,0x0,8
tick,0x7ff86ea82704,90983672,0,0x0,8
tick,0x7ff86ea82704,90985702,0,0x0,8
tick,0x7ff86ea82704,90987645,0,0x0,8
tick,0x7ff86ea82704,90989941,0,0x0,8
tick,0x7ff86ea82704,90991715,0,0x0,8
tick,0x7ff86ea82704,90993717,0,0x0,8
tick,0x7ff86ea82704,90995638,0,0x0,8
tick,0x7ff86ea82704,90997930,0,0x0,8
tick,0x7ff86ea82704,90999662,0,0x0,8
tick,0x7ff86ea82704,91001722,0,0x0,8
tick,0x7ff86ea82704,91003609,0,0x0,8
tick,0x7ff86ea82704,91005672,0,0x0,8
tick,0x7ff86ea82704,91007536,0,0x0,8
tick,0x7ff86ea82704,91009539,0,0x0,8
tick,0x7ff86ea82704,91011795,0,0x0,8
tick,0x7ff86ea82704,91013824,0,0x0,8
tick,0x7ff86ea82704,91015817,0,0x0,8
tick,0x7ff86ea82704,91017991,0,0x0,8
tick,0x7ff86ea82704,91019688,0,0x0,8
tick,0x7ff86ea82704,91021554,0,0x0,8
tick,0x7ff86ea82704,91023713,0,0x0,8
tick,0x7ff86ea82704,91025659,0,0x0,8
tick,0x7ff86ea82704,91027733,0,0x0,8
tick,0x7ff86ea82704,91030058,0,0x0,8
tick,0x7ff86ea82704,91031775,0,0x0,8
tick,0x7ff86ea82704,91033560,0,0x0,8
tick,0x7ff86ea82704,91035622,0,0x0,8
tick,0x7ff86ea82704,91037624,0,0x0,8
tick,0x7ff86ea82704,91039727,0,0x0,8
tick,0x7ff86ea82704,91041666,0,0x0,8
tick,0x7ff86ea82704,91043613,0,0x0,8
tick,0x7ff86ea82704,91045592,0,0x0,8
tick,0x7ff86ea82704,91048038,0,0x0,8
tick,0x7ff86ea82704,91049649,0,0x0,8
tick,0x7ff86ea82704,91051586,0,0x0,8
tick,0x7ff86ea82704,91053613,0,0x0,8
tick,0x7ff86ea82704,91055728,0,0x0,8
tick,0x7ff86ea82704,91057780,0,0x0,8
tick,0x7ff86ea82704,91059590,0,0x0,8
tick,0x7ff86ea82704,91061566,0,0x0,8
tick,0x7ff86ea82704,91063967,0,0x0,8
tick,0x7ff86ea82704,91065481,0,0x0,8
tick,0x7ff86ea82704,91067526,0,0x0,8
tick,0x7ff86ea82704,91069530,0,0x0,8
tick,0x7ff86ea82704,91071609,0,0x0,8
tick,0x7ff86ea82704,91073535,0,0x0,8
tick,0x7ff86ea82704,91075636,0,0x0,8
tick,0x7ff86ea82704,91077812,0,0x0,8
tick,0x7ff86ea82704,91080072,0,0x0,8
tick,0x7ff86ea82704,91081627,0,0x0,8
tick,0x7ff86ea82704,91083425,0,0x0,8
tick,0x7ff86ea82704,91085444,0,0x0,8
tick,0x7ff86ea82704,91087739,0,0x0,8
tick,0x7ff86ea82704,91089373,0,0x0,8
tick,0x7ff86ea82704,91091407,0,0x0,8
tick,0x7ff86ea82704,91093342,0,0x0,8
tick,0x7ff86ea82704,91095541,0,0x0,8
tick,0x7ff86ea82704,91098017,0,0x0,8
tick,0x7ff86ea82704,91099451,0,0x0,8
tick,0x7ff86ea82704,91101420,0,0x0,8
tick,0x7ff86ea82704,91103524,0,0x0,8
tick,0x7ff86ea82704,91105373,0,0x0,8
tick,0x7ff86ea82704,91107345,0,0x0,8
tick,0x7ff86ea82704,91109396,0,0x0,8
tick,0x7ff86ea82704,91111250,0,0x0,8
tick,0x7ff86ea82704,91113707,0,0x0,8
tick,0x7ff86ea82704,91115541,0,0x0,8
tick,0x7ff86ea82704,91117404,0,0x0,8
tick,0x7ff86ea82704,91119480,0,0x0,8
tick,0x7ff86ea82704,91121413,0,0x0,8
tick,0x7ff86ea82704,91123308,0,0x0,8
tick,0x7ff86ea82704,91125339,0,0x0,8
tick,0x7ff86ea82704,91127398,0,0x0,8
tick,0x7ff86ea82704,91130735,0,0x0,8
tick,0x7ff86ea82704,91132256,0,0x0,8
tick,0x7ff86ea82704,91134253,0,0x0,8
tick,0x7ff86ea82704,91136331,0,0x0,8
tick,0x7ff86ea82704,91138372,0,0x0,8
tick,0x7ff86ea82704,91140174,0,0x0,8
tick,0x7ff86ea82704,91142330,0,0x0,8
tick,0x7ff86ea82704,91144287,0,0x0,8
tick,0x7ff86ea82704,91147522,0,0x0,8
tick,0x7ff86ea82704,91149261,0,0x0,8
tick,0x7ff86ea82704,91151216,0,0x0,8
tick,0x7ff86ea82704,91153326,0,0x0,8
tick,0x7ff86ea82704,91155309,0,0x0,8
tick,0x7ff86ea82704,91157529,0,0x0,8
tick,0x7ff86ea82704,91159418,0,0x0,8
tick,0x7ff86ea82704,91161384,0,0x0,8
tick,0x7ff86ea82704,91164580,0,0x0,8
tick,0x7ff86ea82704,91166955,0,0x0,8
tick,0x7ff86ea82704,91168418,0,0x0,8
tick,0x7ff86ea82704,91170866,0,0x0,8
tick,0x7ff86ea82704,91173375,0,0x0,8
tick,0x7ff86ea82704,91175268,0,0x0,8
tick,0x7ff86ea82704,91177229,0,0x0,8
tick,0x7ff86ea82704,91179243,0,0x0,8
tick,0x7ff86ea82704,91181409,0,0x0,8
tick,0x7ff86ea82704,91183247,0,0x0,8
tick,0x7ff86ea82704,91185166,0,0x0,8
tick,0x7ff86ea82704,91187206,0,0x0,8
tick,0x7ff86ea82704,91189269,0,0x0,8
tick,0x7ff86ea82704,91191367,0,0x0,8
tick,0x7ff86ea82704,91193196,0,0x0,8
tick,0x7ff86ea82704,91195098,0,0x0,8
tick,0x7ff86ea82704,91197640,0,0x0,8
tick,0x7ff86ea82704,91199044,0,0x0,8
tick,0x7ff86ea82704,91201193,0,0x0,8
tick,0x7ff86ea82704,91203080,0,0x0,8
tick,0x7ff86ea82704,91205029,0,0x0,8
tick,0x7ff86ea82704,91207140,0,0x0,8
tick,0x7ff86ea82704,91209244,0,0x0,8
tick,0x7ff86ea82704,91211120,0,0x0,8
tick,0x7ff86ea82704,91214028,0,0x0,8
tick,0x7ff86ea82704,91214945,0,0x0,8
tick,0x7ff86ea82704,91217010,0,0x0,8
tick,0x7ff86ea82704,91219105,0,0x0,8
tick,0x7ff86ea82704,91221065,0,0x0,8
tick,0x7ff86ea82704,91223033,0,0x0,8
tick,0x7ff86ea82704,91225095,0,0x0,8
tick,0x7ff86ea82704,91226951,0,0x0,8
tick,0x7ff86ea82704,91228983,0,0x0,8
tick,0x7ff86ea82704,91231241,0,0x0,8
tick,0x7ff86ea82704,91233075,0,0x0,8
tick,0x7ff86ea82704,91234993,0,0x0,8
tick,0x7ff86ea82704,91237155,0,0x0,8
tick,0x7ff86ea82704,91239167,0,0x0,8
tick,0x7ff86ea82704,91241154,0,0x0,8
tick,0x7ff86ea82704,91243069,0,0x0,8
tick,0x7ff86ea82704,91245034,0,0x0,8
tick,0x7ff86ea82704,91248216,0,0x0,8
tick,0x7ff86ea82704,91249989,0,0x0,8
tick,0x7ff86ea82704,91252104,0,0x0,8
tick,0x7ff86ea82704,91254099,0,0x0,8
tick,0x7ff86ea82704,91256100,0,0x0,8
tick,0x7ff86ea82704,91257985,0,0x0,8
tick,0x7ff86ea82704,91260003,0,0x0,8
tick,0x7ff86ea82704,91262093,0,0x0,8
tick,0x7ff86ea82704,91264291,0,0x0,8
tick,0x7ff86ea82704,91266024,0,0x0,8
tick,0x7ff86ea82704,91267898,0,0x0,8
tick,0x7ff86ea82704,91269834,0,0x0,8
tick,0x7ff86ea82704,91271859,0,0x0,8
tick,0x7ff86ea82704,91273828,0,0x0,8
tick,0x7ff86ea82704,91275902,0,0x0,8
tick,0x7ff86ea82704,91277802,0,0x0,8
tick,0x7ff86ea82704,91280184,0,0x0,8
tick,0x7ff86ea82704,91282031,0,0x0,8
tick,0x7ff86ea82704,91284017,0,0x0,8
tick,0x7ff86ea82704,91286069,0,0x0,8
tick,0x7ff86ea82704,91287896,0,0x0,8
tick,0x7ff86ea82704,91289873,0,0x0,8
tick,0x7ff86ea82704,91291982,0,0x0,8
tick,0x7ff86ea82704,91293995,0,0x0,8
tick,0x7ff86ea82704,91296288,0,0x0,8
tick,0x7ff86ea82704,91298690,0,0x0,8
tick,0x7ff86ea82704,91300647,0,0x0,8
tick,0x7ff86ea82704,91302649,0,0x0,8
tick,0x7ff86ea82704,91304668,0,0x0,8
tick,0x7ff86ea82704,91306606,0,0x0,8
tick,0x7ff86ea82704,91308684,0,0x0,8
tick,0x7ff86ea82704,91310589,0,0x0,8
tick,0x7ff86ea82704,91312934,0,0x0,8
tick,0x7ff86ea82704,91315291,0,0x0,8
tick,0x7ff86ea82704,91316755,0,0x0,8
tick,0x7ff86ea82704,91319261,0,0x0,8
tick,0x7ff86ea82704,91320786,0,0x0,8
tick,0x7ff86ea82704,91322692,0,0x0,8
tick,0x7ff86ea82704,91324785,0,0x0,8
tick,0x7ff86ea82704,91326731,0,0x0,8
tick,0x7ff86ea82704,91328688,0,0x0,8
tick,0x7ff86ea82704,91331773,0,0x0,8
tick,0x7ff86ea82704,91334136,0,0x0,8
tick,0x7ff86ea82704,91335812,0,0x0,8
tick,0x7ff86ea82704,91337796,0,0x0,8
tick,0x7ff86ea82704,91339807,0,0x0,8
tick,0x7ff86ea82704,91341709,0,0x0,8
tick,0x7ff86ea82704,91343719,0,0x0,8
tick,0x7ff86ea82704,91345735,0,0x0,8
tick,0x7ff86ea82704,91351035,0,0x0,8
tick,0x7ff86ea82704,91352887,0,0x0,8
tick,0x7ff86ea82704,91354996,0,0x0,8
tick,0x7ff86ea82704,91356921,0,0x0,8
tick,0x7ff86ea82704,91358803,0,0x0,8
tick,0x7ff86ea82704,91360884,0,0x0,8
tick,0x7ff86ea82704,91363051,0,0x0,8
tick,0x7ff86ea82704,91365271,0,0x0,8
tick,0x7ff86ea82704,91366573,0,0x0,8
tick,0x7ff86ea82704,91368735,0,0x0,8
tick,0x7ff86ea82704,91370681,0,0x0,8
tick,0x7ff86ea82704,91372792,0,0x0,8
tick,0x7ff86ea82704,91374678,0,0x0,8
tick,0x7ff86ea82704,91376803,0,0x0,8
tick,0x7ff86ea82704,91378724,0,0x0,8
tick,0x7ff86ea82704,91383178,0,0x0,8
tick,0x7ff86ea82704,91385109,0,0x0,8
tick,0x7ff86ea82704,91386762,0,0x0,8
tick,0x7ff86ea82704,91388729,0,0x0,8
tick,0x7ff86ea82704,91390981,0,0x0,8
tick,0x7ff86ea82704,91393111,0,0x0,8
tick,0x7ff86ea82704,91394782,0,0x0,8
tick,0x7ff86ea82704,91397381,0,0x0,8
tick,0x7ff86ea82704,91398950,0,0x0,8
tick,0x7ff86ea82704,91400860,0,0x0,8
tick,0x7ff86ea82704,91402979,0,0x0,8
tick,0x7ff86ea82704,91404886,0,0x0,8
tick,0x7ff86ea82704,91406689,0,0x0,8
tick,0x7ff86ea82704,91408668,0,0x0,8
tick,0x7ff86ea82704,91410583,0,0x0,8
tick,0x7ff86ea82704,91412673,0,0x0,8
tick,0x7ff86ea82704,91415635,0,0x0,8
tick,0x7ff86ea82704,91417583,0,0x0,8
tick,0x7ff86ea82704,91419525,0,0x0,8
tick,0x7ff86ea82704,91421691,0,0x0,8
tick,0x7ff86ea82704,91423520,0,0x0,8
tick,0x7ff86ea82704,91425540,0,0x0,8
tick,0x7ff86ea82704,91427514,0,0x0,8
tick,0x7ff86ea82704,91429878,0,0x0,8
tick,0x7ff86ea82704,91431916,0,0x0,8
tick,0x7ff86ea82704,91433517,0,0x0,8
tick,0x7ff86ea82704,91435426,0,0x0,8
tick,0x7ff86ea82704,91437518,0,0x0,8
tick,0x7ff86ea82704,91439543,0,0x0,8
tick,0x7ff86ea82704,91441535,0,0x0,8
tick,0x7ff86ea82704,91443429,0,0x0,8
tick,0x7ff86ea82704,91445382,0,0x0,8
tick,0x7ff86ea82704,91448059,0,0x0,8
tick,0x7ff86ea82704,91449598,0,0x0,8
tick,0x7ff86ea82704,91451572,0,0x0,8
tick,0x7ff86ea82704,91453513,0,0x0,8
tick,0x7ff86ea82704,91455567,0,0x0,8
tick,0x7ff86ea82704,91457354,0,0x0,8
tick,0x7ff86ea82704,91459589,0,0x0,8
tick,0x7ff86ea82704,91461389,0,0x0,8
tick,0x7ff86ea82704,91464731,0,0x0,8
tick,0x7ff86ea82704,91466087,0,0x0,8
tick,0x7ff86ea82704,91467390,0,0x0,8
tick,0x7ff86ea82704,91469304,0,0x0,8
tick,0x7ff86ea82704,91471439,0,0x0,8
tick,0x7ff86ea82704,91473364,0,0x0,8
tick,0x7ff86ea82704,91475392,0,0x0,8
tick,0x7ff86ea82704,91477353,0,0x0,8
tick,0x7ff86ea82704,91479694,0,0x0,8
tick,0x7ff86ea82704,91482876,0,0x0,8
tick,0x7ff86ea82704,91484415,0,0x0,8
tick,0x7ff86ea82704,91486499,0,0x0,8
tick,0x7ff86ea82704,91488381,0,0x0,8
tick,0x7ff86ea82704,91490335,0,0x0,8
tick,0x7ff86ea82704,91492338,0,0x0,8
tick,0x7ff86ea82704,91494411,0,0x0,8
tick,0x7ff86ea82704,91497277,0,0x0,8
tick,0x7ff86ea82704,91499036,0,0x0,8
tick,0x7ff86ea82704,91500577,0,0x0,8
tick,0x7ff86ea82704,91502304,0,0x0,8
tick,0x7ff86ea82704,91504433,0,0x0,8
tick,0x7ff86ea82704,91506185,0,0x0,8
tick,0x7ff86ea82704,91508416,0,0x0,8
tick,0x7ff86ea82704,91510230,0,0x0,8
tick,0x7ff86ea82704,91512349,0,0x0,8
tick,0x7ff86ea82704,91515148,0,0x0,8
tick,0x7ff86ea82704,91517392,0,0x0,8
tick,0x7ff86ea82704,91519463,0,0x0,8
tick,0x7ff86ea82704,91521401,0,0x0,8
tick,0x7ff86ea82704,91523659,0,0x0,8
tick,0x7ff86ea82704,91525272,0,0x0,8
tick,0x7ff86ea82704,91527207,0,0x0,8
tick,0x7ff86ea82704,91530431,0,0x0,8
tick,0x7ff86ea82704,91531960,0,0x0,8
tick,0x7ff86ea82704,91534115,0,0x0,8
tick,0x7ff86ea82704,91536210,0,0x0,8
tick,0x7ff86ea82704,91538297,0,0x0,8
tick,0x7ff86ea82704,91540116,0,0x0,8
tick,0x7ff86ea82704,91542094,0,0x0,8
tick,0x7ff86ea82704,91544120,0,0x0,8
tick,0x7ff86ea82704,91547258,0,0x0,8
tick,0x7ff86ea82704,91548992,0,0x0,8
tick,0x7ff86ea82704,91550203,0,0x0,8
tick,0x7ff86ea82704,91552323,0,0x0,8
tick,0x7ff86ea82704,91554228,0,0x0,8
tick,0x7ff86ea82704,91556081,0,0x0,8
tick,0x7ff86ea82704,91558293,0,0x0,8
tick,0x7ff86ea82704,91560521,0,0x0,8
tick,0x7ff86ea82704,91562151,0,0x0,8
tick,0x7ff86ea82704,91564567,0,0x0,8
tick,0x7ff86ea82704,91566107,0,0x0,8
tick,0x7ff86ea82704,91568080,0,0x0,8
tick,0x7ff86ea82704,91570221,0,0x0,8
tick,0x7ff86ea82704,91572241,0,0x0,8
tick,0x7ff86ea82704,91574018,0,0x0,8
tick,0x7ff86ea82704,91576192,0,0x0,8
tick,0x7ff86ea82704,91577992,0,0x0,8
tick,0x7ff86ea82704,91580717,0,0x0,8
tick,0x7ff86ea82704,91581950,0,0x0,8
tick,0x7ff86ea82704,91584226,0,0x0,8
tick,0x7ff86ea82704,91586031,0,0x0,8
tick,0x7ff86ea82704,91588099,0,0x0,8
tick,0x7ff86ea82704,91590063,0,0x0,8
tick,0x7ff86ea82704,91592080,0,0x0,8
tick,0x7ff86ea82704,91594013,0,0x0,8
tick,0x7ff86ea82704,91596066,0,0x0,8
tick,0x7ff86ea82704,91598406,0,0x0,8
tick,0x7ff86ea82704,91599985,0,0x0,8
tick,0x7ff86ea82704,91602017,0,0x0,8
tick,0x7ff86ea82704,91603947,0,0x0,8
tick,0x7ff86ea82704,91605903,0,0x0,8
tick,0x7ff86ea82704,91607989,0,0x0,8
tick,0x7ff86ea82704,91610008,0,0x0,8
tick,0x7ff86ea82704,91612273,0,0x0,8
tick,0x7ff86ea82704,91615801,0,0x0,8
tick,0x7ff86ea82704,91617524,0,0x0,8
tick,0x7ff86ea82704,91619043,0,0x0,8
tick,0x7ff86ea82704,91621048,0,0x0,8
tick,0x7ff86ea82704,91623271,0,0x0,8
tick,0x7ff86ea82704,91625055,0,0x0,8
tick,0x7ff86ea82704,91627164,0,0x0,8
tick,0x7ff86ea82704,91628906,0,0x0,8
tick,0x7ff86ea82704,91631963,0,0x0,8
tick,0x7ff86ea82704,91634015,0,0x0,8
tick,0x7ff86ea82704,91635936,0,0x0,8
tick,0x7ff86ea82704,91638056,0,0x0,8
tick,0x7ff86ea82704,91640089,0,0x0,8
tick,0x7ff86ea82704,91641973,0,0x0,8
tick,0x7ff86ea82704,91644072,0,0x0,8
tick,0x7ff86ea82704,91646255,0,0x0,8
tick,0x7ff86ea82704,91648288,0,0x0,8
tick,0x7ff86ea82704,91649959,0,0x0,8
tick,0x7ff86ea82704,91652013,0,0x0,8
tick,0x7ff86ea82704,91653987,0,0x0,8
tick,0x7ff86ea82704,91655978,0,0x0,8
tick,0x7ff86ea82704,91657958,0,0x0,8
tick,0x7ff86ea82704,91659955,0,0x0,8
tick,0x7ff86ea82704,91661919,0,0x0,8
tick,0x7ff86ea82704,91665369,0,0x0,8
tick,0x7ff86ea82704,91666928,0,0x0,8
tick,0x7ff86ea82704,91668981,0,0x0,8
tick,0x7ff86ea82704,91671212,0,0x0,8
tick,0x7ff86ea82704,91672940,0,0x0,8
tick,0x7ff86ea82704,91674931,0,0x0,8
tick,0x7ff86ea82704,91676836,0,0x0,8
tick,0x7ff86ea82704,91680132,0,0x0,8
tick,0x7ff86ea82704,91682101,0,0x0,8
tick,0x7ff86ea82704,91683964,0,0x0,8
tick,0x7ff86ea82704,91685779,0,0x0,8
tick,0x7ff86ea82704,91687773,0,0x0,8
tick,0x7ff86ea82704,91689760,0,0x0,8
tick,0x7ff86ea82704,91691765,0,0x0,8
tick,0x7ff86ea82704,91693809,0,0x0,8
tick,0x7ff86ea82704,91695663,0,0x0,8
tick,0x7ff86ea82704,91699003,0,0x0,8
tick,0x7ff86ea82704,91700929,0,0x0,8
tick,0x7ff86ea82704,91702678,0,0x0,8
tick,0x7ff86ea82704,91704956,0,0x0,8
tick,0x7ff86ea82704,91706786,0,0x0,8
tick,0x7ff86ea82704,91708793,0,0x0,8
tick,0x7ff86ea82704,91710727,0,0x0,8
tick,0x7ff86ea82704,91713873,0,0x0,8
tick,0x7ff86ea82704,91715020,0,0x0,8
tick,0x7ff86ea82704,91716696,0,0x0,8
tick,0x7ff86ea82704,91719077,0,0x0,8
tick,0x7ff86ea82704,91720721,0,0x0,8
tick,0x7ff86ea82704,91722743,0,0x0,8
tick,0x7ff86ea82704,91724658,0,0x0,8
tick,0x7ff86ea82704,91726930,0,0x0,8
tick,0x7ff86ea82704,91728899,0,0x0,8
tick,0x7ff86ea82704,91731093,0,0x0,8
tick,0x7ff86ea82704,91732593,0,0x0,8
tick,0x7ff86ea82704,91734955,0,0x0,8
tick,0x7ff86ea82704,91736750,0,0x0,8
tick,0x7ff86ea82704,91738701,0,0x0,8
tick,0x7ff86ea82704,91740661,0,0x0,8
tick,0x7ff86ea82704,91742876,0,0x0,8
tick,0x7ff86ea82704,91744607,0,0x0,8
tick,0x7ff86ea82704,91746953,0,0x0,8
tick,0x7ff86ea82704,91748573,0,0x0,8
tick,0x7ff86ea82704,91750887,0,0x0,8
tick,0x7ff86ea82704,91752778,0,0x0,8
tick,0x7ff86ea82704,91754724,0,0x0,8
tick,0x7ff86ea82704,91756682,0,0x0,8
tick,0x7ff86ea82704,91758915,0,0x0,8
tick,0x7ff86ea82704,91760668,0,0x0,8
tick,0x7ff86ea82704,91762594,0,0x0,8
tick,0x7ff86ea82704,91765023,0,0x0,8
tick,0x7ff86ea82704,91766744,0,0x0,8
tick,0x7ff86ea82704,91768504,0,0x0,8
tick,0x7ff86ea82704,91770571,0,0x0,8
tick,0x7ff86ea82704,91772432,0,0x0,8
tick,0x7ff86ea82704,91774912,0,0x0,8
tick,0x7ff86ea82704,91776573,0,0x0,8
tick,0x7ff86ea82704,91778518,0,0x0,8
tick,0x7ff86ea82704,91780882,0,0x0,8
tick,0x7ff86ea82704,91782773,0,0x0,8
tick,0x7ff86ea82704,91784618,0,0x0,8
tick,0x7ff86ea82704,91786452,0,0x0,8
tick,0x7ff86ea82704,91788583,0,0x0,8
tick,0x7ff86ea82704,91790473,0,0x0,8
tick,0x7ff86ea82704,91792473,0,0x0,8
tick,0x7ff86ea82704,91794623,0,0x0,8
tick,0x7ff86ea82704,91796656,0,0x0,8
tick,0x7ff86ea82704,91798689,0,0x0,8
tick,0x7ff86ea82704,91800418,0,0x0,8
tick,0x7ff86ea82704,91802526,0,0x0,8
tick,0x7ff86ea82704,91804557,0,0x0,8
tick,0x7ff86ea82704,91806543,0,0x0,8
tick,0x7ff86ea82704,91808591,0,0x0,8
tick,0x7ff86ea82704,91810385,0,0x0,8
tick,0x7ff86ea82704,91812542,0,0x0,8
tick,0x7ff86ea82704,91815287,0,0x0,8
tick,0x7ff86ea82704,91817625,0,0x0,8
tick,0x7ff86ea82704,91819378,0,0x0,8
tick,0x7ff86ea82704,91821432,0,0x0,8
tick,0x7ff86ea82704,91823377,0,0x0,8
tick,0x7ff86ea82704,91825377,0,0x0,8
tick,0x7ff86ea82704,91827461,0,0x0,8
tick,0x7ff86ea82704,91829797,0,0x0,8
tick,0x7ff86ea82704,91831630,0,0x0,8
tick,0x7ff86ea82704,91833385,0,0x0,8
tick,0x7ff86ea82704,91835381,0,0x0,8
tick,0x7ff86ea82704,91837458,0,0x0,8
tick,0x7ff86ea82704,91839405,0,0x0,8
tick,0x7ff86ea82704,91841452,0,0x0,8
tick,0x7ff86ea82704,91843418,0,0x0,8
tick,0x7ff86ea82704,91845459,0,0x0,8
tick,0x7ff86ea82704,91847694,0,0x0,8
tick,0x7ff86ea82704,91849393,0,0x0,8
tick,0x7ff86ea82704,91851286,0,0x0,8
tick,0x7ff86ea82704,91853428,0,0x0,8
tick,0x7ff86ea82704,91855424,0,0x0,8
tick,0x7ff86ea82704,91857403,0,0x0,8
tick,0x7ff86ea82704,91859409,0,0x0,8
tick,0x7ff86ea82704,91861342,0,0x0,8
tick,0x7ff86ea82704,91863383,0,0x0,8
tick,0x7ff86ea82704,91865298,0,0x0,8
tick,0x7ff86ea82704,91867250,0,0x0,8
tick,0x7ff86ea82704,91869343,0,0x0,8
tick,0x7ff86ea82704,91871264,0,0x0,8
tick,0x7ff86ea82704,91873282,0,0x0,8
tick,0x7ff86ea82704,91875379,0,0x0,8
tick,0x7ff86ea82704,91877236,0,0x0,8
tick,0x7ff86ea82704,91879638,0,0x0,8
tick,0x7ff86ea82704,91881579,0,0x0,8
tick,0x7ff86ea82704,91883253,0,0x0,8
tick,0x7ff86ea82704,91885360,0,0x0,8
tick,0x7ff86ea82704,91887205,0,0x0,8
tick,0x7ff86ea82704,91889275,0,0x0,8
tick,0x7ff86ea82704,91891336,0,0x0,8
tick,0x7ff86ea82704,91893247,0,0x0,8
tick,0x7ff86ea82704,91895201,0,0x0,8
tick,0x7ff86ea82704,91897485,0,0x0,8
tick,0x7ff86ea82704,91899314,0,0x0,8
tick,0x7ff86ea82704,91901253,0,0x0,8
tick,0x7ff86ea82704,91903194,0,0x0,8
tick,0x7ff86ea82704,91905152,0,0x0,8
tick,0x7ff86ea82704,91907211,0,0x0,8
tick,0x7ff86ea82704,91909358,0,0x0,8
tick,0x7ff86ea82704,91911168,0,0x0,8
tick,0x7ff86ea82704,91913436,0,0x0,8
tick,0x7ff86ea82704,91915450,0,0x0,8
tick,0x7ff86ea82704,91917218,0,0x0,8
tick,0x7ff86ea82704,91919172,0,0x0,8
tick,0x7ff86ea82704,91921234,0,0x0,8
tick,0x7ff86ea82704,91923231,0,0x0,8
tick,0x7ff86ea82704,91925304,0,0x0,8
tick,0x7ff86ea82704,91927219,0,0x0,8
tick,0x7ff86ea82704,91929160,0,0x0,8
tick,0x7ff86ea82704,91931514,0,0x0,8
tick,0x7ff86ea82704,91933091,0,0x0,8
tick,0x7ff86ea82704,91935090,0,0x0,8
tick,0x7ff86ea82704,91937075,0,0x0,8
tick,0x7ff86ea82704,91939183,0,0x0,8
tick,0x7ff86ea82704,91941179,0,0x0,8
tick,0x7ff86ea82704,91943115,0,0x0,8
tick,0x7ff86ea82704,91945055,0,0x0,8
tick,0x7ff86ea82704,91947406,0,0x0,8
tick,0x7ff86ea82704,91949290,0,0x0,8
tick,0x7ff86ea82704,91951128,0,0x0,8
tick,0x7ff86ea82704,91953179,0,0x0,8
tick,0x7ff86ea82704,91955101,0,0x0,8
tick,0x7ff86ea82704,91957073,0,0x0,8
tick,0x7ff86ea82704,91959286,0,0x0,8
tick,0x7ff86ea82704,91961360,0,0x0,8
tick,0x7ff86ea82704,91964781,0,0x0,8
tick,0x7ff86ea82704,91966659,0,0x0,8
tick,0x7ff86ea82704,91967934,0,0x0,8
tick,0x7ff86ea82704,91970551,0,0x0,8
tick,0x7ff86ea82704,91972046,0,0x0,8
tick,0x7ff86ea82704,91974109,0,0x0,8
tick,0x7ff86ea82704,91976311,0,0x0,8
tick,0x7ff86ea82704,91978050,0,0x0,8
tick,0x7ff86ea82704,91980051,0,0x0,8
tick,0x7ff86ea82704,91982037,0,0x0,8
tick,0x7ff86ea82704,91983979,0,0x0,8
tick,0x7ff86ea82704,91986289,0,0x0,8
tick,0x7ff86ea82704,91988033,0,0x0,8
tick,0x7ff86ea82704,91990067,0,0x0,8
tick,0x7ff86ea82704,91992162,0,0x0,8
tick,0x7ff86ea82704,91994272,0,0x0,8
tick,0x7ff86ea82704,91996174,0,0x0,8
tick,0x7ff86ea82704,91998072,0,0x0,8
tick,0x7ff86ea82704,92000065,0,0x0,8
tick,0x7ff86ea82704,92001968,0,0x0,8
tick,0x7ff86ea82704,92004012,0,0x0,8
tick,0x7ff86ea82704,92005895,0,0x0,8
tick,0x7ff86ea82704,92008177,0,0x0,8
tick,0x7ff86ea82704,92010615,0,0x0,8
tick,0x7ff86ea82704,92013307,0,0x0,8
tick,0x7ff86ea82704,92015462,0,0x0,8
tick,0x7ff86ea82704,92016985,0,0x0,8
tick,0x7ff86ea82704,92019170,0,0x0,8
tick,0x7ff86ea82704,92020988,0,0x0,8
tick,0x7ff86ea82704,92023011,0,0x0,8
tick,0x7ff86ea82704,92024952,0,0x0,8
tick,0x7ff86ea82704,92026925,0,0x0,8
tick,0x7ff86ea82704,92028853,0,0x0,8
tick,0x7ff86ea82704,92031190,0,0x0,8
tick,0x7ff86ea82704,92033213,0,0x0,8
tick,0x7ff86ea82704,92034916,0,0x0,8
tick,0x7ff86ea82704,92036818,0,0x0,8
tick,0x7ff86ea82704,92038872,0,0x0,8
tick,0x7ff86ea82704,92041022,0,0x0,8
tick,0x7ff86ea82704,92042989,0,0x0,8
tick,0x7ff86ea82704,92045006,0,0x0,8
tick,0x7ff86ea82704,92047413,0,0x0,8
tick,0x7ff86ea82704,92049269,0,0x0,8
tick,0x7ff86ea82704,92050822,0,0x0,8
tick,0x7ff86ea82704,92052858,0,0x0,8
tick,0x7ff86ea82704,92054809,0,0x0,8
tick,0x7ff86ea82704,92057183,0,0x0,8
tick,0x7ff86ea82704,92058759,0,0x0,8
tick,0x7ff86ea82704,92060835,0,0x0,8
tick,0x7ff86ea82704,92063043,0,0x0,8
tick,0x7ff86ea82704,92065274,0,0x0,8
tick,0x7ff86ea82704,92066954,0,0x0,8
tick,0x7ff86ea82704,92068868,0,0x0,8
tick,0x7ff86ea82704,92070758,0,0x0,8
tick,0x7ff86ea82704,92072972,0,0x0,8
tick,0x7ff86ea82704,92074702,0,0x0,8
tick,0x7ff86ea82704,92076769,0,0x0,8
tick,0x7ff86ea82704,92078946,0,0x0,8
tick,0x7ff86ea82704,92081448,0,0x0,8
tick,0x7ff86ea82704,92082784,0,0x0,8
tick,0x7ff86ea82704,92084862,0,0x0,8
tick,0x7ff86ea82704,92086836,0,0x0,8
tick,0x7ff86ea82704,92088760,0,0x0,8
tick,0x7ff86ea82704,92090678,0,0x0,8
tick,0x7ff86ea82704,92092765,0,0x0,8
tick,0x7ff86ea82704,92094738,0,0x0,8
tick,0x7ff86ea82704,92097925,0,0x0,8
tick,0x7ff86ea82704,92098840,0,0x0,8
tick,0x7ff86ea82704,92101514,0,0x0,8
tick,0x7ff86ea82704,92104822,0,0x0,8
tick,0x7ff86ea82704,92106030,0,0x0,8
tick,0x7ff86ea82704,92107838,0,0x0,8
tick,0x7ff86ea82704,92109781,0,0x0,8
tick,0x7ff86ea82704,92111896,0,0x0,8
tick,0x7ff86ea82704,92114695,0,0x0,8
tick,0x7ff86ea82704,92117211,0,0x0,8
tick,0x7ff86ea82704,92119066,0,0x0,8
tick,0x7ff86ea82704,92121209,0,0x0,8
tick,0x7ff86ea82704,92123110,0,0x0,8
tick,0x7ff86ea82704,92125171,0,0x0,8
tick,0x7ff86ea82704,92126991,0,0x0,8
tick,0x7ff86ea82704,92129369,0,0x0,8
tick,0x7ff86ea82704,92131143,0,0x0,8
tick,0x7ff86ea82704,92133020,0,0x0,8
tick,0x7ff86ea82704,92135287,0,0x0,8
tick,0x7ff86ea82704,92136984,0,0x0,8
tick,0x7ff86ea82704,92138994,0,0x0,8
tick,0x7ff86ea82704,92140582,0,0x0,8
tick,0x7ff86ea82704,92142635,0,0x0,8
tick,0x7ff86ea82704,92144545,0,0x0,8
tick,0x7ff86ea82704,92146764,0,0x0,8
tick,0x7ff86ea82704,92148915,0,0x0,8
tick,0x7ff86ea82704,92150882,0,0x0,8
tick,0x7ff86ea82704,92152578,0,0x0,8
tick,0x7ff86ea82704,92154569,0,0x0,8
tick,0x7ff86ea82704,92156659,0,0x0,8
tick,0x7ff86ea82704,92158629,0,0x0,8
tick,0x7ff86ea82704,92160657,0,0x0,8
tick,0x7ff86ea82704,92162481,0,0x0,8
tick,0x7ff86ea82704,92164756,0,0x0,8
tick,0x7ff86ea82704,92166873,0,0x0,8
tick,0x7ff86ea82704,92168451,0,0x0,8
tick,0x7ff86ea82704,92170655,0,0x0,8
tick,0x7ff86ea82704,92172552,0,0x0,8
tick,0x7ff86ea82704,92174781,0,0x0,8
tick,0x7ff86ea82704,92176605,0,0x0,8
tick,0x7ff86ea82704,92178724,0,0x0,8
tick,0x7ff86ea82704,92180392,0,0x0,8
tick,0x7ff86ea82704,92182576,0,0x0,8
tick,0x7ff86ea82704,92184392,0,0x0,8
tick,0x7ff86ea82704,92186473,0,0x0,8
tick,0x7ff86ea82704,92188579,0,0x0,8
tick,0x7ff86ea82704,92190594,0,0x0,8
tick,0x7ff86ea82704,92192499,0,0x0,8
tick,0x7ff86ea82704,92194527,0,0x0,8
tick,0x7ff86ea82704,92196492,0,0x0,8
tick,0x7ff86ea82704,92198773,0,0x0,8
tick,0x7ff86ea82704,92200400,0,0x0,8
tick,0x7ff86ea82704,92202528,0,0x0,8
tick,0x7ff86ea82704,92204479,0,0x0,8
tick,0x7ff86ea82704,92206531,0,0x0,8
tick,0x7ff86ea82704,92208436,0,0x0,8
tick,0x7ff86ea82704,92210461,0,0x0,8
tick,0x7ff86ea82704,92212421,0,0x0,8
tick,0x7ff86ea82704,92214542,0,0x0,8
tick,0x7ff86ea82704,92216352,0,0x0,8
tick,0x7ff86ea82704,92218330,0,0x0,8
tick,0x7ff86ea82704,92220336,0,0x0,8
tick,0x7ff86ea82704,92222417,0,0x0,8
tick,0x7ff86ea82704,92224349,0,0x0,8
tick,0x7ff86ea82704,92258757,0,0x0,8
tick,0x7ff86ea82704,92260491,0,0x0,8
tick,0x7ff86ea82704,92262631,0,0x0,8
tick,0x7ff86ea82704,92266120,0,0x0,8
tick,0x7ff86ea82704,92267020,0,0x0,8
tick,0x7ff86ea82704,92269042,0,0x0,8
tick,0x7ff86ea82704,92270981,0,0x0,8
tick,0x7ff86ea82704,92273204,0,0x0,8
tick,0x7ff86ea82704,92274993,0,0x0,8
tick,0x7ff86ea82704,92276959,0,0x0,8
tick,0x7ff86ea82704,92279070,0,0x0,8
tick,0x7ff86ea82704,92281021,0,0x0,8
tick,0x7ff86ea82704,92282964,0,0x0,8
tick,0x7ff86ea82704,92284964,0,0x0,8
tick,0x7ff86ea82704,92286976,0,0x0,8
tick,0x7ff86ea82704,92288988,0,0x0,8
tick,0x7ff86ea82704,92290918,0,0x0,8
tick,0x7ff86ea82704,92292973,0,0x0,8
tick,0x7ff86ea82704,92295058,0,0x0,8
tick,0x7ff86ea82704,92297278,0,0x0,8
tick,0x7ff86ea82704,92299035,0,0x0,8
tick,0x7ff86ea82704,92301261,0,0x0,8
tick,0x7ff86ea82704,92303099,0,0x0,8
tick,0x7ff86ea82704,92305098,0,0x0,8
tick,0x7ff86ea82704,92307074,0,0x0,8
tick,0x7ff86ea82704,92309286,0,0x0,8
tick,0x7ff86ea82704,92311059,0,0x0,8
tick,0x7ff86ea82704,92313102,0,0x0,8
tick,0x7ff86ea82704,92315063,0,0x0,8
tick,0x7ff86ea82704,92317181,0,0x0,8
tick,0x7ff86ea82704,92319174,0,0x0,8
tick,0x7ff86ea82704,92321014,0,0x0,8
tick,0x7ff86ea82704,92322993,0,0x0,8
tick,0x7ff86ea82704,92324995,0,0x0,8
tick,0x7ff86ea82704,92326949,0,0x0,8
tick,0x7ff86ea82704,92328940,0,0x0,8
tick,0x7ff86ea82704,92331006,0,0x0,8
tick,0x7ff86ea82704,92333278,0,0x0,8
tick,0x7ff86ea82704,92335389,0,0x0,8
tick,0x7ff86ea82704,92337053,0,0x0,8
tick,0x7ff86ea82704,92339028,0,0x0,8
tick,0x7ff86ea82704,92341273,0,0x0,8
tick,0x7ff86ea82704,92342923,0,0x0,8
tick,0x7ff86ea82704,92345065,0,0x0,8
tick,0x7ff86ea82704,92347211,0,0x0,8
tick,0x7ff86ea82704,92349086,0,0x0,8
tick,0x7ff86ea82704,92350998,0,0x0,8
tick,0x7ff86ea82704,92353200,0,0x0,8
tick,0x7ff86ea82704,92355053,0,0x0,8
tick,0x7ff86ea82704,92356944,0,0x0,8
tick,0x7ff86ea82704,92358879,0,0x0,8
tick,0x7ff86ea82704,92361051,0,0x0,8
tick,0x7ff86ea82704,92363017,0,0x0,8
tick,0x7ff86ea82704,92364908,0,0x0,8
tick,0x7ff86ea82704,92366996,0,0x0,8
tick,0x7ff86ea82704,92368889,0,0x0,8
tick,0x7ff86ea82704,92371085,0,0x0,8
tick,0x7ff86ea82704,92372987,0,0x0,8
tick,0x7ff86ea82704,92374931,0,0x0,8
tick,0x7ff86ea82704,92377005,0,0x0,8
tick,0x7ff86ea82704,92379022,0,0x0,8
tick,0x7ff86ea82704,92380863,0,0x0,8
tick,0x7ff86ea82704,92384586,0,0x0,8
tick,0x7ff86ea82704,92385969,0,0x0,8
tick,0x7ff86ea82704,92388042,0,0x0,8
tick,0x7ff86ea82704,92389897,0,0x0,8
tick,0x7ff86ea82704,92391980,0,0x0,8
tick,0x7ff86ea82704,92393774,0,0x0,8
tick,0x7ff86ea82704,92396064,0,0x0,8
tick,0x7ff86ea82704,92398149,0,0x0,8
tick,0x7ff86ea82704,92399953,0,0x0,8
tick,0x7ff86ea82704,92401777,0,0x0,8
tick,0x7ff86ea82704,92403926,0,0x0,8
tick,0x7ff86ea82704,92406018,0,0x0,8
tick,0x7ff86ea82704,92407961,0,0x0,8
tick,0x7ff86ea82704,92409872,0,0x0,8
tick,0x7ff86ea82704,92412785,0,0x0,8
tick,0x7ff86ea82704,92414701,0,0x0,8
tick,0x7ff86ea82704,92416610,0,0x0,8
tick,0x7ff86ea82704,92418717,0,0x0,8
tick,0x7ff86ea82704,92420632,0,0x0,8
tick,0x7ff86ea82704,92422681,0,0x0,8
tick,0x7ff86ea82704,92424650,0,0x0,8
tick,0x7ff86ea82704,92426665,0,0x0,8
tick,0x7ff86ea82704,92428665,0,0x0,8
tick,0x7ff86ea82704,92430673,0,0x0,8
tick,0x7ff86ea82704,92432983,0,0x0,8
tick,0x7ff86ea82704,92434648,0,0x0,8
tick,0x7ff86ea82704,92436661,0,0x0,8
tick,0x7ff86ea82704,92438691,0,0x0,8
tick,0x7ff86ea82704,92440648,0,0x0,8
tick,0x7ff86ea82704,92442605,0,0x0,8
tick,0x7ff86ea82704,92444675,0,0x0,8
tick,0x7ff86ea82704,92446666,0,0x0,8
tick,0x7ff86ea82704,92448685,0,0x0,8
tick,0x7ff86ea82704,92450609,0,0x0,8
tick,0x7ff86ea82704,92452596,0,0x0,8
tick,0x7ff86ea82704,92454674,0,0x0,8
tick,0x7ff86ea82704,92456629,0,0x0,8
tick,0x7ff86ea82704,92458747,0,0x0,8
tick,0x7ff86ea82704,92460543,0,0x0,8
tick,0x7ff86ea82704,92462753,0,0x0,8
tick,0x7ff86ea82704,92464572,0,0x0,8
tick,0x7ff86ea82704,92466569,0,0x0,8
tick,0x7ff86ea82704,92468595,0,0x0,8
tick,0x7ff86ea82704,92470545,0,0x0,8
tick,0x7ff86ea82704,92472571,0,0x0,8
tick,0x7ff86ea82704,92474517,0,0x0,8
tick,0x7ff86ea82704,92476580,0,0x0,8
tick,0x7ff86ea82704,92478593,0,0x0,8
tick,0x7ff86ea82704,92480591,0,0x0,8
tick,0x7ff86ea82704,92482471,0,0x0,8
tick,0x7ff86ea82704,92484493,0,0x0,8
tick,0x7ff86ea82704,92486520,0,0x0,8
tick,0x7ff86ea82704,92488477,0,0x0,8
tick,0x7ff86ea82704,92490550,0,0x0,8
tick,0x7ff86ea82704,92492490,0,0x0,8
tick,0x7ff86ea82704,92494521,0,0x0,8
tick,0x7ff86ea82704,92496542,0,0x0,8
tick,0x7ff86ea82704,92498538,0,0x0,8
tick,0x7ff86ea82704,92500474,0,0x0,8
tick,0x7ff86ea82704,92502522,0,0x0,8
tick,0x7ff86ea82704,92504534,0,0x0,8
tick,0x7ff86ea82704,92506730,0,0x0,8
tick,0x7ff86ea82704,92508524,0,0x0,8
tick,0x7ff86ea82704,92510476,0,0x0,8
tick,0x7ff86ea82704,92512544,0,0x0,8
tick,0x7ff86ea82704,92514438,0,0x0,8
tick,0x7ff86ea82704,92516454,0,0x0,8
tick,0x7ff86ea82704,92518452,0,0x0,8
tick,0x7ff86ea82704,92520444,0,0x0,8
tick,0x7ff86ea82704,92522449,0,0x0,8
tick,0x7ff86ea82704,92524370,0,0x0,8
tick,0x7ff86ea82704,92526449,0,0x0,8
tick,0x7ff86ea82704,92528533,0,0x0,8
tick,0x7ff86ea82704,92530362,0,0x0,8
tick,0x7ff86ea82704,92532450,0,0x0,8
tick,0x7ff86ea82704,92534374,0,0x0,8
tick,0x7ff86ea82704,92536361,0,0x0,8
tick,0x7ff86ea82704,92538368,0,0x0,8
tick,0x7ff86ea82704,92540633,0,0x0,8
tick,0x7ff86ea82704,92542426,0,0x0,8
tick,0x7ff86ea82704,92544411,0,0x0,8
tick,0x7ff86ea82704,92546435,0,0x0,8
tick,0x7ff86ea82704,92548391,0,0x0,8
tick,0x7ff86ea82704,92550433,0,0x0,8
tick,0x7ff86ea82704,92552418,0,0x0,8
tick,0x7ff86ea82704,92554449,0,0x0,8
tick,0x7ff86ea82704,92556323,0,0x0,8
tick,0x7ff86ea82704,92558314,0,0x0,8
tick,0x7ff86ea82704,92560326,0,0x0,8
tick,0x7ff86ea82704,92562355,0,0x0,8
tick,0x7ff86ea82704,92564381,0,0x0,8
tick,0x7ff86ea82704,92566316,0,0x0,8
tick,0x7ff86ea82704,92568357,0,0x0,8
tick,0x7ff86ea82704,92570356,0,0x0,8
tick,0x7ff86ea82704,92572410,0,0x0,8
tick,0x7ff86ea82704,92574313,0,0x0,8
tick,0x7ff86ea82704,92576408,0,0x0,8
tick,0x7ff86ea82704,92578233,0,0x0,8
tick,0x7ff86ea82704,92580351,0,0x0,8
tick,0x7ff86ea82704,92582291,0,0x0,8
tick,0x7ff86ea82704,92584411,0,0x0,8
tick,0x7ff86ea82704,92586255,0,0x0,8
tick,0x7ff86ea82704,92588323,0,0x0,8
tick,0x7ff86ea82704,92590188,0,0x0,8
tick,0x7ff86ea82704,92592228,0,0x0,8
tick,0x7ff86ea82704,92594220,0,0x0,8
tick,0x7ff86ea82704,92596328,0,0x0,8
tick,0x7ff86ea82704,92598237,0,0x0,8
tick,0x7ff86ea82704,92600230,0,0x0,8
tick,0x7ff86ea82704,92602257,0,0x0,8
tick,0x7ff86ea82704,92604240,0,0x0,8
tick,0x7ff86ea82704,92606374,0,0x0,8
tick,0x7ff86ea82704,92608218,0,0x0,8
tick,0x7ff86ea82704,92610231,0,0x0,8
tick,0x7ff86ea82704,92612190,0,0x0,8
tick,0x7ff86ea82704,92614159,0,0x0,8
tick,0x7ff86ea82704,92616317,0,0x0,8
tick,0x7ff86ea82704,92618211,0,0x0,8
tick,0x7ff86ea82704,92620531,0,0x0,8
tick,0x7ff86ea82704,92623155,0,0x0,8
tick,0x7ff86ea82704,92625302,0,0x0,8
tick,0x7ff86ea82704,92636817,0,0x0,8
tick,0x7ff86ea82704,92636845,0,0x0,8
tick,0x7ff86ea82704,92636866,0,0x0,8
tick,0x7ff86ea82704,92636884,0,0x0,8
tick,0x7ff86ea82704,92636903,0,0x0,8
tick,0x7ff86ea82704,92636922,0,0x0,8
tick,0x7ff86ea82704,92638216,0,0x0,8
tick,0x7ff86ea82704,92640374,0,0x0,8
tick,0x7ff86ea82704,92642642,0,0x0,8
tick,0x7ff86ea82704,92644504,0,0x0,8
tick,0x7ff86ea82704,92646344,0,0x0,8
tick,0x7ff86ea82704,92648080,0,0x0,8
tick,0x7ff86ea82704,92650192,0,0x0,8
tick,0x7ff86ea82704,92652044,0,0x0,8
tick,0x7ff86ea82704,92654147,0,0x0,8
tick,0x7ff86ea82704,92656005,0,0x0,8
tick,0x7ff86ea82704,92658096,0,0x0,8
tick,0x7ff86ea82704,92660150,0,0x0,8
tick,0x7ff86ea82704,92662172,0,0x0,8
tick,0x7ff86ea82704,92664030,0,0x0,8
tick,0x7ff86ea82704,92666113,0,0x0,8
tick,0x7ff86ea82704,92668087,0,0x0,8
tick,0x7ff86ea82704,92670133,0,0x0,8
tick,0x7ff86ea82704,92672012,0,0x0,8
tick,0x7ff86ea82704,92674261,0,0x0,8
tick,0x7ff86ea82704,92675991,0,0x0,8
tick,0x7ff86ea82704,92678240,0,0x0,8
tick,0x7ff86ea82704,92680066,0,0x0,8
tick,0x7ff86ea82704,92682267,0,0x0,8
tick,0x7ff86ea82704,92684197,0,0x0,8
tick,0x7ff86ea82704,92686195,0,0x0,8
tick,0x7ff86ea82704,92688154,0,0x0,8
tick,0x7ff86ea82704,92690543,0,0x0,8
tick,0x7ff86ea82704,92692231,0,0x0,8
tick,0x7ff86ea82704,92694244,0,0x0,8
tick,0x7ff86ea82704,92696551,0,0x0,8
tick,0x7ff86ea82704,92698078,0,0x0,8
tick,0x7ff86ea82704,92700109,0,0x0,8
tick,0x7ff86ea82704,92701986,0,0x0,8
tick,0x7ff86ea82704,92704043,0,0x0,8
tick,0x7ff86ea82704,92706076,0,0x0,8
tick,0x7ff86ea82704,92708009,0,0x0,8
tick,0x7ff86ea82704,92710412,0,0x0,8
tick,0x7ff86ea82704,92711900,0,0x0,8
tick,0x7ff86ea82704,92714082,0,0x0,8
tick,0x7ff86ea82704,92716047,0,0x0,8
tick,0x7ff86ea82704,92718014,0,0x0,8
tick,0x7ff86ea82704,92719970,0,0x0,8
tick,0x7ff86ea82704,92722005,0,0x0,8
tick,0x7ff86ea82704,92724026,0,0x0,8
tick,0x7ff86ea82704,92725937,0,0x0,8
tick,0x7ff86ea82704,92727981,0,0x0,8
tick,0x7ff86ea82704,92730094,0,0x0,8
tick,0x7ff86ea82704,92731971,0,0x0,8
tick,0x7ff86ea82704,92733948,0,0x0,8
tick,0x7ff86ea82704,92735799,0,0x0,8
tick,0x7ff86ea82704,92737963,0,0x0,8
tick,0x7ff86ea82704,92740326,0,0x0,8
tick,0x7ff86ea82704,92742004,0,0x0,8
tick,0x7ff86ea82704,92743788,0,0x0,8
tick,0x7ff86ea82704,92745952,0,0x0,8
tick,0x7ff86ea82704,92747908,0,0x0,8
tick,0x7ff86ea82704,92749935,0,0x0,8
tick,0x7ff86ea82704,92751774,0,0x0,8
tick,0x7ff86ea82704,92753921,0,0x0,8
tick,0x7ff86ea82704,92755759,0,0x0,8
tick,0x7ff86ea82704,92757891,0,0x0,8
tick,0x7ff86ea82704,92759820,0,0x0,8
tick,0x7ff86ea82704,92761802,0,0x0,8
tick,0x7ff86ea82704,92763854,0,0x0,8
tick,0x7ff86ea82704,92765890,0,0x0,8
tick,0x7ff86ea82704,92767818,0,0x0,8
tick,0x7ff86ea82704,92769823,0,0x0,8
tick,0x7ff86ea82704,92771816,0,0x0,8
tick,0x7ff86ea82704,92773882,0,0x0,8
tick,0x7ff86ea82704,92775736,0,0x0,8
tick,0x7ff86ea82704,92777842,0,0x0,8
tick,0x7ff86ea82704,92780574,0,0x0,8
tick,0x7ff86ea82704,92782309,0,0x0,8
tick,0x7ff86ea82704,92784343,0,0x0,8
tick,0x7ff86ea82704,92786245,0,0x0,8
tick,0x7ff86ea82704,92787929,0,0x0,8
tick,0x7ff86ea82704,92790713,0,0x0,8
tick,0x7ff86ea82704,92791919,0,0x0,8
tick,0x7ff86ea82704,92794211,0,0x0,8
tick,0x7ff86ea82704,92796698,0,0x0,8
tick,0x7ff86ea82704,92798903,0,0x0,8
tick,0x7ff86ea82704,92800753,0,0x0,8
tick,0x7ff86ea82704,92802856,0,0x0,8
tick,0x7ff86ea82704,92804829,0,0x0,8
tick,0x7ff86ea82704,92807422,0,0x0,8
tick,0x7ff86ea82704,92808687,0,0x0,8
tick,0x7ff86ea82704,92810698,0,0x0,8
tick,0x7ff86ea82704,92812622,0,0x0,8
tick,0x7ff86ea82704,92815392,0,0x0,8
tick,0x7ff86ea82704,92816788,0,0x0,8
tick,0x7ff86ea82704,92819829,0,0x0,8
tick,0x7ff86ea82704,92821659,0,0x0,8
tick,0x7ff86ea82704,92823737,0,0x0,8
tick,0x7ff86ea82704,92825686,0,0x0,8
tick,0x7ff86ea82704,92827711,0,0x0,8
tick,0x7ff86ea82704,92829826,0,0x0,8
tick,0x7ff86ea82704,92831687,0,0x0,8
tick,0x7ff86ea82704,92833719,0,0x0,8
tick,0x7ff86ea82704,92835598,0,0x0,8
tick,0x7ff86ea82704,92837659,0,0x0,8
tick,0x7ff86ea82704,92839724,0,0x0,8
tick,0x7ff86ea82704,92841656,0,0x0,8
tick,0x7ff86ea82704,92843640,0,0x0,8
tick,0x7ff86ea82704,92845670,0,0x0,8
tick,0x7ff86ea82704,92847593,0,0x0,8
tick,0x7ff86ea82704,92849689,0,0x0,8
tick,0x7ff86ea82704,92851518,0,0x0,8
tick,0x7ff86ea82704,92853728,0,0x0,8
tick,0x7ff86ea82704,92855584,0,0x0,8
tick,0x7ff86ea82704,92857614,0,0x0,8
tick,0x7ff86ea82704,92859618,0,0x0,8
tick,0x7ff86ea82704,92861646,0,0x0,8
tick,0x7ff86ea82704,92863603,0,0x0,8
tick,0x7ff86ea82704,92865629,0,0x0,8
tick,0x7ff86ea82704,92867609,0,0x0,8
tick,0x7ff86ea82704,92869562,0,0x0,8
tick,0x7ff86ea82704,92871516,0,0x0,8
tick,0x7ff86ea82704,92873532,0,0x0,8
tick,0x7ff86ea82704,92875459,0,0x0,8
tick,0x7ff86ea82704,92877560,0,0x0,8
tick,0x7ff86ea82704,92879598,0,0x0,8
tick,0x7ff86ea82704,92881502,0,0x0,8
tick,0x7ff86ea82704,92883886,0,0x0,8
tick,0x7ff86ea82704,92885532,0,0x0,8
tick,0x7ff86ea82704,92888315,0,0x0,8
tick,0x7ff86ea82704,92889578,0,0x0,8
tick,0x7ff86ea82704,92891884,0,0x0,8
tick,0x7ff86ea82704,92893588,0,0x0,8
tick,0x7ff86ea82704,92895527,0,0x0,8
tick,0x7ff86ea82704,92897523,0,0x0,8
tick,0x7ff86ea82704,92899543,0,0x0,8
tick,0x7ff86ea82704,92901729,0,0x0,8
tick,0x7ff86ea82704,92903427,0,0x0,8
tick,0x7ff86ea82704,92906176,0,0x0,8
tick,0x7ff86ea82704,92907391,0,0x0,8
tick,0x7ff86ea82704,92909477,0,0x0,8
tick,0x7ff86ea82704,92911511,0,0x0,8
tick,0x7ff86ea82704,92913533,0,0x0,8
tick,0x7ff86ea82704,92915690,0,0x0,8
tick,0x7ff86ea82704,92917601,0,0x0,8
tick,0x7ff86ea82704,92919358,0,0x0,8
tick,0x7ff86ea82704,92921507,0,0x0,8
tick,0x7ff86ea82704,92923307,0,0x0,8
tick,0x7ff86ea82704,92925474,0,0x0,8
tick,0x7ff86ea82704,92927346,0,0x0,8
tick,0x7ff86ea82704,92929610,0,0x0,8
tick,0x7ff86ea82704,92931277,0,0x0,8
tick,0x7ff86ea82704,92933314,0,0x0,8
tick,0x7ff86ea82704,92935308,0,0x0,8
tick,0x7ff86ea82704,92937435,0,0x0,8
tick,0x7ff86ea82704,92939360,0,0x0,8
tick,0x7ff86ea82704,92941346,0,0x0,8
tick,0x7ff86ea82704,92943341,0,0x0,8
tick,0x7ff86ea82704,92945283,0,0x0,8
tick,0x7ff86ea82704,92947362,0,0x0,8
tick,0x7ff86ea82704,92949284,0,0x0,8
tick,0x7ff86ea82704,92951293,0,0x0,8
tick,0x7ff86ea82704,92953309,0,0x0,8
tick,0x7ff86ea82704,92955259,0,0x0,8
tick,0x7ff86ea82704,92957333,0,0x0,8
tick,0x7ff86ea82704,92959218,0,0x0,8
tick,0x7ff86ea82704,92961316,0,0x0,8
tick,0x7ff86ea82704,92963283,0,0x0,8
tick,0x7ff86ea82704,92965272,0,0x0,8
tick,0x7ff86ea82704,92967284,0,0x0,8
tick,0x7ff86ea82704,92969165,0,0x0,8
tick,0x7ff86ea82704,92971349,0,0x0,8
tick,0x7ff86ea82704,92973168,0,0x0,8
tick,0x7ff86ea82704,92975287,0,0x0,8
tick,0x7ff86ea82704,92977119,0,0x0,8
tick,0x7ff86ea82704,92979246,0,0x0,8
tick,0x7ff86ea82704,92981155,0,0x0,8
tick,0x7ff86ea82704,92983237,0,0x0,8
tick,0x7ff86ea82704,92985133,0,0x0,8
tick,0x7ff86ea82704,92987260,0,0x0,8
tick,0x7ff86ea82704,92989173,0,0x0,8
tick,0x7ff86ea82704,92991243,0,0x0,8
tick,0x7ff86ea82704,92993157,0,0x0,8
tick,0x7ff86ea82704,92995144,0,0x0,8
tick,0x7ff86ea82704,92997212,0,0x0,8
tick,0x7ff86ea82704,92999209,0,0x0,8
tick,0x7ff86ea82704,93001110,0,0x0,8
tick,0x7ff86ea82704,93003224,0,0x0,8
tick,0x7ff86ea82704,93005079,0,0x0,8
tick,0x7ff86ea82704,93007215,0,0x0,8
tick,0x7ff86ea82704,93009068,0,0x0,8
tick,0x7ff86ea82704,93011192,0,0x0,8
tick,0x7ff86ea82704,93013166,0,0x0,8
tick,0x7ff86ea82704,93015261,0,0x0,8
tick,0x7ff86ea82704,93017109,0,0x0,8
tick,0x7ff86ea82704,93019128,0,0x0,8
tick,0x7ff86ea82704,93021036,0,0x0,8
tick,0x7ff86ea82704,93023168,0,0x0,8
tick,0x7ff86ea82704,93025094,0,0x0,8
tick,0x7ff86ea82704,93027077,0,0x0,8
tick,0x7ff86ea82704,93029052,0,0x0,8
tick,0x7ff86ea82704,93031164,0,0x0,8
tick,0x7ff86ea82704,93033030,0,0x0,8
tick,0x7ff86ea82704,93035088,0,0x0,8
tick,0x7ff86ea82704,93037036,0,0x0,8
tick,0x7ff86ea82704,93039229,0,0x0,8
tick,0x7ff86ea82704,93041056,0,0x0,8
tick,0x7ff86ea82704,93043062,0,0x0,8
tick,0x7ff86ea82704,93045071,0,0x0,8
tick,0x7ff86ea82704,93047012,0,0x0,8
tick,0x7ff86ea82704,93049053,0,0x0,8
tick,0x7ff86ea82704,93051034,0,0x0,8
tick,0x7ff86ea82704,93053076,0,0x0,8
tick,0x7ff86ea82704,93054979,0,0x0,8
tick,0x7ff86ea82704,93057083,0,0x0,8
tick,0x7ff86ea82704,93058931,0,0x0,8
tick,0x7ff86ea82704,93061007,0,0x0,8
tick,0x7ff86ea82704,93062990,0,0x0,8
tick,0x7ff86ea82704,93065075,0,0x0,8
tick,0x7ff86ea82704,93066976,0,0x0,8
tick,0x7ff86ea82704,93068974,0,0x0,8
tick,0x7ff86ea82704,93071028,0,0x0,8
tick,0x7ff86ea82704,93073024,0,0x0,8
tick,0x7ff86ea82704,93075022,0,0x0,8
tick,0x7ff86ea82704,93076948,0,0x0,8
tick,0x7ff86ea82704,93078962,0,0x0,8
tick,0x7ff86ea82704,93081026,0,0x0,8
tick,0x7ff86ea82704,93082932,0,0x0,8
tick,0x7ff86ea82704,93084995,0,0x0,8
tick,0x7ff86ea82704,93086956,0,0x0,8
tick,0x7ff86ea82704,93089003,0,0x0,8
tick,0x7ff86ea82704,93090911,0,0x0,8
tick,0x7ff86ea82704,93092955,0,0x0,8
tick,0x7ff86ea82704,93094895,0,0x0,8
tick,0x7ff86ea82704,93096983,0,0x0,8
tick,0x7ff86ea82704,93098884,0,0x0,8
tick,0x7ff86ea82704,93100941,0,0x0,8
tick,0x7ff86ea82704,93102870,0,0x0,8
tick,0x7ff86ea82704,93104831,0,0x0,8
tick,0x7ff86ea82704,93106963,0,0x0,8
tick,0x7ff86ea82704,93108884,0,0x0,8
tick,0x7ff86ea82704,93110876,0,0x0,8
tick,0x7ff86ea82704,93112977,0,0x0,8
tick,0x7ff86ea82704,93114902,0,0x0,8
tick,0x7ff86ea82704,93117014,0,0x0,8
tick,0x7ff86ea82704,93118844,0,0x0,8
tick,0x7ff86ea82704,93120944,0,0x0,8
tick,0x7ff86ea82704,93122871,0,0x0,8
tick,0x7ff86ea82704,93124801,0,0x0,8
tick,0x7ff86ea82704,93126889,0,0x0,8
tick,0x7ff86ea82704,93128932,0,0x0,8
tick,0x7ff86ea82704,93130774,0,0x0,8
tick,0x7ff86ea82704,93132969,0,0x0,8
tick,0x7ff86ea82704,93135148,0,0x0,8
tick,0x7ff86ea82704,93139906,0,0x0,8
tick,0x7ff86ea82704,93142218,0,0x0,8
tick,0x7ff86ea82704,93143920,0,0x0,8
tick,0x7ff86ea82704,93146420,0,0x0,8
tick,0x7ff86ea82704,93147964,0,0x0,8
tick,0x7ff86ea82704,93150050,0,0x0,8
tick,0x7ff86ea82704,93154159,0,0x0,8
tick,0x7ff86ea82704,93155996,0,0x0,8
tick,0x7ff86ea82704,93158377,0,0x0,8
tick,0x7ff86ea82704,93159831,0,0x0,8
tick,0x7ff86ea82704,93162128,0,0x0,8
tick,0x7ff86ea82704,93163939,0,0x0,8
tick,0x7ff86ea82704,93166251,0,0x0,8
tick,0x7ff86ea82704,93167899,0,0x0,8
tick,0x7ff86ea82704,93171793,0,0x0,8
tick,0x7ff86ea82704,93172800,0,0x0,8
tick,0x7ff86ea82704,93175092,0,0x0,8
tick,0x7ff86ea82704,93176917,0,0x0,8
tick,0x7ff86ea82704,93179062,0,0x0,8
tick,0x7ff86ea82704,93182800,0,0x0,8
tick,0x7ff86ea82704,93183941,0,0x0,8
tick,0x7ff86ea82704,93184553,0,0x0,8
tick,0x7ff86ea82704,93186673,0,0x0,8
tick,0x7ff86ea82704,93188588,0,0x0,8
tick,0x7ff86ea82704,93190663,0,0x0,8
tick,0x7ff86ea82704,93192644,0,0x0,8
tick,0x7ff86ea82704,93194764,0,0x0,8
tick,0x7ff86ea82704,93199288,0,0x0,8
tick,0x7ff86ea82704,93200882,0,0x0,8
tick,0x7ff86ea82704,93202981,0,0x0,8
tick,0x7ff86ea82704,93204885,0,0x0,8
tick,0x7ff86ea82704,93206733,0,0x0,8
tick,0x7ff86ea82704,93208852,0,0x0,8
tick,0x7ff86ea82704,93210942,0,0x0,8
tick,0x7ff86ea82704,93213880,0,0x0,8
tick,0x7ff86ea82704,93215877,0,0x0,8
tick,0x7ff86ea82704,93216777,0,0x0,8
tick,0x7ff86ea82704,93218723,0,0x0,8
tick,0x7ff86ea82704,93220646,0,0x0,8
tick,0x7ff86ea82704,93222583,0,0x0,8
tick,0x7ff86ea82704,93224726,0,0x0,8
tick,0x7ff86ea82704,93226689,0,0x0,8
tick,0x7ff86ea82704,93228773,0,0x0,8
tick,0x7ff86ea82704,93231716,0,0x0,8
tick,0x7ff86ea82704,93233071,0,0x0,8
tick,0x7ff86ea82704,93234603,0,0x0,8
tick,0x7ff86ea82704,93236642,0,0x0,8
tick,0x7ff86ea82704,93238664,0,0x0,8
tick,0x7ff86ea82704,93240695,0,0x0,8
tick,0x7ff86ea82704,93242706,0,0x0,8
tick,0x7ff86ea82704,93244626,0,0x0,8
tick,0x7ff86ea82704,93246708,0,0x0,8
tick,0x7ff86ea82704,93249065,0,0x0,8
tick,0x7ff86ea82704,93250557,0,0x0,8
tick,0x7ff86ea82704,93252615,0,0x0,8
tick,0x7ff86ea82704,93254601,0,0x0,8
tick,0x7ff86ea82704,93256680,0,0x0,8
tick,0x7ff86ea82704,93258623,0,0x0,8
tick,0x7ff86ea82704,93260622,0,0x0,8
tick,0x7ff86ea82704,93262647,0,0x0,8
tick,0x7ff86ea82704,93264886,0,0x0,8
tick,0x7ff86ea82704,93266733,0,0x0,8
tick,0x7ff86ea82704,93268564,0,0x0,8
tick,0x7ff86ea82704,93270585,0,0x0,8
tick,0x7ff86ea82704,93272523,0,0x0,8
tick,0x7ff86ea82704,93275426,0,0x0,8
tick,0x7ff86ea82704,93276641,0,0x0,8
tick,0x7ff86ea82704,93279661,0,0x0,8
tick,0x7ff86ea82704,93281743,0,0x0,8
tick,0x7ff86ea82704,93283988,0,0x0,8
tick,0x7ff86ea82704,93285642,0,0x0,8
tick,0x7ff86ea82704,93287731,0,0x0,8
tick,0x7ff86ea82704,93289574,0,0x0,8
tick,0x7ff86ea82704,93291668,0,0x0,8
tick,0x7ff86ea82704,93293460,0,0x0,8
tick,0x7ff86ea82704,93295674,0,0x0,8
tick,0x7ff86ea82704,93297881,0,0x0,8
tick,0x7ff86ea82704,93299478,0,0x0,8
tick,0x7ff86ea82704,93301614,0,0x0,8
tick,0x7ff86ea82704,93303510,0,0x0,8
tick,0x7ff86ea82704,93305558,0,0x0,8
tick,0x7ff86ea82704,93307807,0,0x0,8
tick,0x7ff86ea82704,93309443,0,0x0,8
tick,0x7ff86ea82704,93311484,0,0x0,8
tick,0x7ff86ea82704,93313519,0,0x0,8
tick,0x7ff86ea82704,93315954,0,0x0,8
tick,0x7ff86ea82704,93317308,0,0x0,8
tick,0x7ff86ea82704,93319553,0,0x0,8
tick,0x7ff86ea82704,93321614,0,0x0,8
tick,0x7ff86ea82704,93323450,0,0x0,8
tick,0x7ff86ea82704,93325489,0,0x0,8
tick,0x7ff86ea82704,93327487,0,0x0,8
tick,0x7ff86ea82704,93329374,0,0x0,8
tick,0x7ff86ea82704,93331344,0,0x0,8
tick,0x7ff86ea82704,93333534,0,0x0,8
tick,0x7ff86ea82704,93335454,0,0x0,8
tick,0x7ff86ea82704,93337364,0,0x0,8
tick,0x7ff86ea82704,93339341,0,0x0,8
tick,0x7ff86ea82704,93341303,0,0x0,8
tick,0x7ff86ea82704,93343300,0,0x0,8
tick,0x7ff86ea82704,93345418,0,0x0,8
tick,0x7ff86ea82704,93347281,0,0x0,8
tick,0x7ff86ea82704,93349518,0,0x0,8
tick,0x7ff86ea82704,93351459,0,0x0,8
tick,0x7ff86ea82704,93353252,0,0x0,8
tick,0x7ff86ea82704,93355313,0,0x0,8
tick,0x7ff86ea82704,93357360,0,0x0,8
tick,0x7ff86ea82704,93359391,0,0x0,8
tick,0x7ff86ea82704,93361394,0,0x0,8
tick,0x7ff86ea82704,93363356,0,0x0,8
tick,0x7ff86ea82704,93365219,0,0x0,8
tick,0x7ff86ea82704,93367572,0,0x0,8
tick,0x7ff86ea82704,93369447,0,0x0,8
tick,0x7ff86ea82704,93371256,0,0x0,8
tick,0x7ff86ea82704,93375194,0,0x0,8
tick,0x7ff86ea82704,93378107,0,0x0,8
tick,0x7ff86ea82704,93380177,0,0x0,8
tick,0x7ff86ea82704,93382208,0,0x0,8
tick,0x7ff86ea82704,93384628,0,0x0,8
tick,0x7ff86ea82704,93386282,0,0x0,8
tick,0x7ff86ea82704,93388171,0,0x0,8
tick,0x7ff86ea82704,93390443,0,0x0,8
tick,0x7ff86ea82704,93392218,0,0x0,8
tick,0x7ff86ea82704,93394370,0,0x0,8
tick,0x7ff86ea82704,93396279,0,0x0,8
tick,0x7ff86ea82704,93398321,0,0x0,8
tick,0x7ff86ea82704,93400678,0,0x0,8
tick,0x7ff86ea82704,93402593,0,0x0,8
tick,0x7ff86ea82704,93404495,0,0x0,8
tick,0x7ff86ea82704,93406415,0,0x0,8
tick,0x7ff86ea82704,93408545,0,0x0,8
tick,0x7ff86ea82704,93410307,0,0x0,8
tick,0x7ff86ea82704,93412270,0,0x0,8
tick,0x7ff86ea82704,93414246,0,0x0,8
tick,0x7ff86ea82704,93416258,0,0x0,8
tick,0x7ff86ea82704,93418774,0,0x0,8
tick,0x7ff86ea82704,93420217,0,0x0,8
tick,0x7ff86ea82704,93422127,0,0x0,8
tick,0x7ff86ea82704,93424234,0,0x0,8
tick,0x7ff86ea82704,93426684,0,0x0,8
tick,0x7ff86ea82704,93428120,0,0x0,8
tick,0x7ff86ea82704,93430417,0,0x0,8
tick,0x7ff86ea82704,93432179,0,0x0,8
tick,0x7ff86ea82704,93434130,0,0x0,8
tick,0x7ff86ea82704,93435988,0,0x0,8
tick,0x7ff86ea82704,93438091,0,0x0,8
tick,0x7ff86ea82704,93439945,0,0x0,8
tick,0x7ff86ea82704,93442028,0,0x0,8
tick,0x7ff86ea82704,93444036,0,0x0,8
tick,0x7ff86ea82704,93446015,0,0x0,8
tick,0x7ff86ea82704,93447973,0,0x0,8
tick,0x7ff86ea82704,93450087,0,0x0,8
tick,0x7ff86ea82704,93452017,0,0x0,8
tick,0x7ff86ea82704,93454101,0,0x0,8
tick,0x7ff86ea82704,93456026,0,0x0,8
tick,0x7ff86ea82704,93458934,0,0x0,8
tick,0x7ff86ea82704,93459914,0,0x0,8
tick,0x7ff86ea82704,93462017,0,0x0,8
tick,0x7ff86ea82704,93463943,0,0x0,8
tick,0x7ff86ea82704,93465916,0,0x0,8
tick,0x7ff86ea82704,93468012,0,0x0,8
tick,0x7ff86ea82704,93469958,0,0x0,8
tick,0x7ff86ea82704,93471903,0,0x0,8
tick,0x7ff86ea82704,93474116,0,0x0,8
tick,0x7ff86ea82704,93475946,0,0x0,8
tick,0x7ff86ea82704,93478146,0,0x0,8
tick,0x7ff86ea82704,93480122,0,0x0,8
tick,0x7ff86ea82704,93482091,0,0x0,8
tick,0x7ff86ea82704,93484035,0,0x0,8
tick,0x7ff86ea82704,93486030,0,0x0,8
tick,0x7ff86ea82704,93488096,0,0x0,8
tick,0x7ff86ea82704,93489991,0,0x0,8
tick,0x7ff86ea82704,93492097,0,0x0,8
tick,0x7ff86ea82704,93494030,0,0x0,8
tick,0x7ff86ea82704,93496032,0,0x0,8
tick,0x7ff86ea82704,93498134,0,0x0,8
tick,0x7ff86ea82704,93499943,0,0x0,8
tick,0x7ff86ea82704,93502249,0,0x0,8
tick,0x7ff86ea82704,93504090,0,0x0,8
tick,0x7ff86ea82704,93508160,0,0x0,8
tick,0x7ff86ea82704,93509641,0,0x0,8
tick,0x7ff86ea82704,93511839,0,0x0,8
tick,0x7ff86ea82704,93514740,0,0x0,8
tick,0x7ff86ea82704,93515263,0,0x0,8
tick,0x7ff86ea82704,93517315,0,0x0,8
tick,0x7ff86ea82704,93519292,0,0x0,8
tick,0x7ff86ea82704,93521391,0,0x0,8
tick,0x7ff86ea82704,93523211,0,0x0,8
tick,0x7ff86ea82704,93525058,0,0x0,8
tick,0x7ff86ea82704,93527529,0,0x0,8
tick,0x7ff86ea82704,93528937,0,0x0,8
tick,0x7ff86ea82704,93531178,0,0x0,8
tick,0x7ff86ea82704,93533459,0,0x0,8
tick,0x7ff86ea82704,93534843,0,0x0,8
tick,0x7ff86ea82704,93536881,0,0x0,8
tick,0x7ff86ea82704,93538851,0,0x0,8
tick,0x7ff86ea82704,93540803,0,0x0,8
tick,0x7ff86ea82704,93542812,0,0x0,8
tick,0x7ff86ea82704,93544920,0,0x0,8
tick,0x7ff86ea82704,93547466,0,0x0,8
tick,0x7ff86ea82704,93549387,0,0x0,8
tick,0x7ff86ea82704,93550806,0,0x0,8
tick,0x7ff86ea82704,93552912,0,0x0,8
tick,0x7ff86ea82704,93555000,0,0x0,8
tick,0x7ff86ea82704,93557229,0,0x0,8
tick,0x7ff86ea82704,93558749,0,0x0,8
tick,0x7ff86ea82704,93560809,0,0x0,8
tick,0x7ff86ea82704,93563432,0,0x0,8
tick,0x7ff86ea82704,93564689,0,0x0,8
tick,0x7ff86ea82704,93566979,0,0x0,8
tick,0x7ff86ea82704,93568883,0,0x0,8
tick,0x7ff86ea82704,93570916,0,0x0,8
tick,0x7ff86ea82704,93572677,0,0x0,8
tick,0x7ff86ea82704,93575092,0,0x0,8
tick,0x7ff86ea82704,93576910,0,0x0,8
tick,0x7ff86ea82704,93578703,0,0x0,8
tick,0x7ff86ea82704,93580696,0,0x0,8
tick,0x7ff86ea82704,93582815,0,0x0,8
tick,0x7ff86ea82704,93584705,0,0x0,8
tick,0x7ff86ea82704,93586858,0,0x0,8
tick,0x7ff86ea82704,93589100,0,0x0,8
tick,0x7ff86ea82704,93590855,0,0x0,8
tick,0x7ff86ea82704,93592652,0,0x0,8
tick,0x7ff86ea82704,93594708,0,0x0,8
tick,0x7ff86ea82704,93596814,0,0x0,8
tick,0x7ff86ea82704,93598662,0,0x0,8
tick,0x7ff86ea82704,93600700,0,0x0,8
tick,0x7ff86ea82704,93602712,0,0x0,8
tick,0x7ff86ea82704,93604923,0,0x0,8
tick,0x7ff86ea82704,93606808,0,0x0,8
tick,0x7ff86ea82704,93608591,0,0x0,8
tick,0x7ff86ea82704,93610645,0,0x0,8
tick,0x7ff86ea82704,93612708,0,0x0,8
tick,0x7ff86ea82704,93614731,0,0x0,8
tick,0x7ff86ea82704,93616585,0,0x0,8
tick,0x7ff86ea82704,93619311,0,0x0,8
tick,0x7ff86ea82704,93623935,0,0x0,8
tick,0x7ff86ea82704,93626209,0,0x0,8
tick,0x7ff86ea82704,93627728,0,0x0,8
tick,0x7ff86ea82704,93629854,0,0x0,8
tick,0x7ff86ea82704,93631630,0,0x0,8
tick,0x7ff86ea82704,93633669,0,0x0,8
tick,0x7ff86ea82704,93635537,0,0x0,8
tick,0x7ff86ea82704,93637795,0,0x0,8
tick,0x7ff86ea82704,93640106,0,0x0,8
tick,0x7ff86ea82704,93642101,0,0x0,8
tick,0x7ff86ea82704,93643649,0,0x0,8
tick,0x7ff86ea82704,93645980,0,0x0,8
tick,0x7ff86ea82704,93649476,0,0x0,8
tick,0x7ff86ea82704,93649548,0,0x0,8
tick,0x7ff86ea82704,93651887,0,0x0,8
tick,0x7ff86ea82704,93653574,0,0x0,8
tick,0x7ff86ea82704,93655822,0,0x0,8
tick,0x7ff86ea82704,93657581,0,0x0,8
tick,0x7ff86ea82704,93659574,0,0x0,8
tick,0x7ff86ea82704,93661484,0,0x0,8
tick,0x7ff86ea82704,93663478,0,0x0,8
tick,0x7ff86ea82704,93665649,0,0x0,8
tick,0x7ff86ea82704,93667714,0,0x0,8
tick,0x7ff86ea82704,93669575,0,0x0,8
tick,0x7ff86ea82704,93671895,0,0x0,8
tick,0x7ff86ea82704,93673496,0,0x0,8
tick,0x7ff86ea82704,93675565,0,0x0,8
tick,0x7ff86ea82704,93677539,0,0x0,8
tick,0x7ff86ea82704,93679891,0,0x0,8
tick,0x7ff86ea82704,93681587,0,0x0,8
tick,0x7ff86ea82704,93683458,0,0x0,8
tick,0x7ff86ea82704,93685538,0,0x0,8
tick,0x7ff86ea82704,93687542,0,0x0,8
tick,0x7ff86ea82704,93689492,0,0x0,8
tick,0x7ff86ea82704,93691606,0,0x0,8
tick,0x7ff86ea82704,93693483,0,0x0,8
tick,0x7ff86ea82704,93695375,0,0x0,8
tick,0x7ff86ea82704,93697349,0,0x0,8
tick,0x7ff86ea82704,93699507,0,0x0,8
tick,0x7ff86ea82704,93701464,0,0x0,8
tick,0x7ff86ea82704,93703807,0,0x0,8
tick,0x7ff86ea82704,93705531,0,0x0,8
tick,0x7ff86ea82704,93707656,0,0x0,8
tick,0x7ff86ea82704,93709675,0,0x0,8
tick,0x7ff86ea82704,93711652,0,0x0,8
tick,0x7ff86ea82704,93713643,0,0x0,8
tick,0x7ff86ea82704,93715379,0,0x0,8
tick,0x7ff86ea82704,93717364,0,0x0,8
tick,0x7ff86ea82704,93719393,0,0x0,8
tick,0x7ff86ea82704,93721413,0,0x0,8
tick,0x7ff86ea82704,93723394,0,0x0,8
tick,0x7ff86ea82704,93725240,0,0x0,8
tick,0x7ff86ea82704,93727466,0,0x0,8
tick,0x7ff86ea82704,93729357,0,0x0,8
tick,0x7ff86ea82704,93731398,0,0x0,8
tick,0x7ff86ea82704,93733465,0,0x0,8
tick,0x7ff86ea82704,93735333,0,0x0,8
tick,0x7ff86ea82704,93737311,0,0x0,8
tick,0x7ff86ea82704,93739401,0,0x0,8
tick,0x7ff86ea82704,93741282,0,0x0,8
tick,0x7ff86ea82704,93743826,0,0x0,8
tick,0x7ff86ea82704,93745795,0,0x0,8
tick,0x7ff86ea82704,93748755,0,0x0,8
tick,0x7ff86ea82704,93750321,0,0x0,8
tick,0x7ff86ea82704,93752698,0,0x0,8
tick,0x7ff86ea82704,93754277,0,0x0,8
tick,0x7ff86ea82704,93756507,0,0x0,8
tick,0x7ff86ea82704,93758628,0,0x0,8
tick,0x7ff86ea82704,93760403,0,0x0,8
tick,0x7ff86ea82704,93762208,0,0x0,8
tick,0x7ff86ea82704,93764350,0,0x0,8
tick,0x7ff86ea82704,93766476,0,0x0,8
tick,0x7ff86ea82704,93768165,0,0x0,8
tick,0x7ff86ea82704,93770093,0,0x0,8
tick,0x7ff86ea82704,93772159,0,0x0,8
tick,0x7ff86ea82704,93774143,0,0x0,8
tick,0x7ff86ea82704,93776092,0,0x0,8
tick,0x7ff86ea82704,93778215,0,0x0,8
tick,0x7ff86ea82704,93780159,0,0x0,8
tick,0x7ff86ea82704,93782598,0,0x0,8
tick,0x7ff86ea82704,93784229,0,0x0,8
tick,0x7ff86ea82704,93786096,0,0x0,8
tick,0x7ff86ea82704,93788071,0,0x0,8
tick,0x7ff86ea82704,93790257,0,0x0,8
tick,0x7ff86ea82704,93792203,0,0x0,8
tick,0x7ff86ea82704,93794147,0,0x0,8
tick,0x7ff86ea82704,93796257,0,0x0,8
tick,0x7ff86ea82704,93798095,0,0x0,8
tick,0x7ff86ea82704,93800120,0,0x0,8
tick,0x7ff86ea82704,93802110,0,0x0,8
tick,0x7ff86ea82704,93804054,0,0x0,8
tick,0x7ff86ea82704,93806211,0,0x0,8
tick,0x7ff86ea82704,93808070,0,0x0,8
tick,0x7ff86ea82704,93810050,0,0x0,8
tick,0x7ff86ea82704,93812170,0,0x0,8
tick,0x7ff86ea82704,93814027,0,0x0,8
tick,0x7ff86ea82704,93816087,0,0x0,8
tick,0x7ff86ea82704,93817998,0,0x0,8
tick,0x7ff86ea82704,93819978,0,0x0,8
tick,0x7ff86ea82704,93822014,0,0x0,8
tick,0x7ff86ea82704,93823931,0,0x0,8
tick,0x7ff86ea82704,93826155,0,0x0,8
tick,0x7ff86ea82704,93828057,0,0x0,8
tick,0x7ff86ea82704,93830035,0,0x0,8
tick,0x7ff86ea82704,93832352,0,0x0,8
tick,0x7ff86ea82704,93834201,0,0x0,8
tick,0x7ff86ea82704,93836759,0,0x0,8
tick,0x7ff86ea82704,93838197,0,0x0,8
tick,0x7ff86ea82704,93840283,0,0x0,8
tick,0x7ff86ea82704,93842228,0,0x0,8
tick,0x7ff86ea82704,93844032,0,0x0,8
tick,0x7ff86ea82704,93846125,0,0x0,8
tick,0x7ff86ea82704,93848282,0,0x0,8
tick,0x7ff86ea82704,93850388,0,0x0,8
tick,0x7ff86ea82704,93852222,0,0x0,8
tick,0x7ff86ea82704,93854325,0,0x0,8
tick,0x7ff86ea82704,93855914,0,0x0,8
tick,0x7ff86ea82704,93857973,0,0x0,8
tick,0x7ff86ea82704,93859916,0,0x0,8
tick,0x7ff86ea82704,93861967,0,0x0,8
tick,0x7ff86ea82704,93864081,0,0x0,8
tick,0x7ff86ea82704,93865970,0,0x0,8
tick,0x7ff86ea82704,93868000,0,0x0,8
tick,0x7ff86ea82704,93869815,0,0x0,8
tick,0x7ff86ea82704,93871894,0,0x0,8
tick,0x7ff86ea82704,93873801,0,0x0,8
tick,0x7ff86ea82704,93875966,0,0x0,8
tick,0x7ff86ea82704,93877827,0,0x0,8
tick,0x7ff86ea82704,93880279,0,0x0,8
tick,0x7ff86ea82704,93881897,0,0x0,8
tick,0x7ff86ea82704,93883795,0,0x0,8
tick,0x7ff86ea82704,93885879,0,0x0,8
tick,0x7ff86ea82704,93887770,0,0x0,8
tick,0x7ff86ea82704,93889929,0,0x0,8
tick,0x7ff86ea82704,93891800,0,0x0,8
tick,0x7ff86ea82704,93893949,0,0x0,8
tick,0x7ff86ea82704,93895917,0,0x0,8
tick,0x7ff86ea82704,93898383,0,0x0,8
tick,0x7ff86ea82704,93899825,0,0x0,8
tick,0x7ff86ea82704,93902023,0,0x0,8
tick,0x7ff86ea82704,93903840,0,0x0,8
tick,0x7ff86ea82704,93905854,0,0x0,8
tick,0x7ff86ea82704,93907780,0,0x0,8
tick,0x7ff86ea82704,93909981,0,0x0,8
tick,0x7ff86ea82704,93911835,0,0x0,8
tick,0x7ff86ea82704,93913883,0,0x0,8
tick,0x7ff86ea82704,93915832,0,0x0,8
tick,0x7ff86ea82704,93917822,0,0x0,8
tick,0x7ff86ea82704,93919828,0,0x0,8
tick,0x7ff86ea82704,93921899,0,0x0,8
tick,0x7ff86ea82704,93923847,0,0x0,8
tick,0x7ff86ea82704,93925827,0,0x0,8
tick,0x7ff86ea82704,93927773,0,0x0,8
tick,0x7ff86ea82704,93929906,0,0x0,8
tick,0x7ff86ea82704,93931865,0,0x0,8
tick,0x7ff86ea82704,93933756,0,0x0,8
tick,0x7ff86ea82704,93935738,0,0x0,8
tick,0x7ff86ea82704,93937721,0,0x0,8
tick,0x7ff86ea82704,93939839,0,0x0,8
tick,0x7ff86ea82704,93941688,0,0x0,8
tick,0x7ff86ea82704,93943807,0,0x0,8
tick,0x7ff86ea82704,93945742,0,0x0,8
tick,0x7ff86ea82704,93947722,0,0x0,8
tick,0x7ff86ea82704,93949864,0,0x0,8
tick,0x7ff86ea82704,93951989,0,0x0,8
tick,0x7ff86ea82704,93953667,0,0x0,8
tick,0x7ff86ea82704,93955696,0,0x0,8
tick,0x7ff86ea82704,93957691,0,0x0,8
tick,0x7ff86ea82704,93959843,0,0x0,8
tick,0x7ff86ea82704,93961740,0,0x0,8
tick,0x7ff86ea82704,93963964,0,0x0,8
tick,0x7ff86ea82704,93965655,0,0x0,8
tick,0x7ff86ea82704,93967794,0,0x0,8
tick,0x7ff86ea82704,93969584,0,0x0,8
tick,0x7ff86ea82704,93971738,0,0x0,8
tick,0x7ff86ea82704,93973606,0,0x0,8
tick,0x7ff86ea82704,93975904,0,0x0,8
tick,0x7ff86ea82704,93977677,0,0x0,8
tick,0x7ff86ea82704,93979965,0,0x0,8
tick,0x7ff86ea82704,93981577,0,0x0,8
tick,0x7ff86ea82704,93983848,0,0x0,8
tick,0x7ff86ea82704,93985574,0,0x0,8
tick,0x7ff86ea82704,93987810,0,0x0,8
tick,0x7ff86ea82704,93989556,0,0x0,8
tick,0x7ff86ea82704,93991660,0,0x0,8
tick,0x7ff86ea82704,93993557,0,0x0,8
tick,0x7ff86ea82704,93995952,0,0x0,8
tick,0x7ff86ea82704,93997516,0,0x0,8
tick,0x7ff86ea82704,93999660,0,0x0,8
tick,0x7ff86ea82704,94001578,0,0x0,8
tick,0x7ff86ea82704,94003726,0,0x0,8
tick,0x7ff86ea82704,94005506,0,0x0,8
tick,0x7ff86ea82704,94007603,0,0x0,8
tick,0x7ff86ea82704,94009506,0,0x0,8
tick,0x7ff86ea82704,94011562,0,0x0,8
tick,0x7ff86ea82704,94013543,0,0x0,8
tick,0x7ff86ea82704,94015493,0,0x0,8
tick,0x7ff86ea82704,94017563,0,0x0,8
tick,0x7ff86ea82704,94019557,0,0x0,8
tick,0x7ff86ea82704,94021482,0,0x0,8
tick,0x7ff86ea82704,94023484,0,0x0,8
tick,0x7ff86ea82704,94025491,0,0x0,8
tick,0x7ff86ea82704,94027423,0,0x0,8
tick,0x7ff86ea82704,94029630,0,0x0,8
tick,0x7ff86ea82704,94031454,0,0x0,8
tick,0x7ff86ea82704,94033490,0,0x0,8
tick,0x7ff86ea82704,94035422,0,0x0,8
tick,0x7ff86ea82704,94037760,0,0x0,8
tick,0x7ff86ea82704,94039852,0,0x0,8
tick,0x7ff86ea82704,94042658,0,0x0,8
tick,0x7ff86ea82704,94044717,0,0x0,8
tick,0x7ff86ea82704,94046897,0,0x0,8
tick,0x7ff86ea82704,94049617,0,0x0,8
tick,0x7ff86ea82704,94051698,0,0x0,8
tick,0x7ff86ea82704,94053506,0,0x0,8
tick,0x7ff86ea82704,94055635,0,0x0,8
tick,0x7ff86ea82704,94057735,0,0x0,8
tick,0x7ff86ea82704,94059793,0,0x0,8
tick,0x7ff86ea82704,94062071,0,0x0,8
tick,0x7ff86ea82704,94065047,0,0x0,8
tick,0x7ff86ea82704,94066483,0,0x0,8
tick,0x7ff86ea82704,94069090,0,0x0,8
tick,0x7ff86ea82704,94070791,0,0x0,8
tick,0x7ff86ea82704,94072495,0,0x0,8
tick,0x7ff86ea82704,94075030,0,0x0,8
tick,0x7ff86ea82704,94076356,0,0x0,8
tick,0x7ff86ea82704,94078556,0,0x0,8
tick,0x7ff86ea82704,94084601,0,0x0,8
tick,0x7ff86ea82704,94084625,0,0x0,8
tick,0x7ff86ea82704,94086423,0,0x0,8
tick,0x7ff86ea82704,94088429,0,0x0,8
tick,0x7ff86ea82704,94090622,0,0x0,8
tick,0x7ff86ea82704,94092519,0,0x0,8
tick,0x7ff86ea82704,94094461,0,0x0,8
tick,0x7ff86ea82704,94097052,0,0x0,8
tick,0x7ff86ea82704,94098900,0,0x0,8
tick,0x7ff86ea82704,94100393,0,0x0,8
tick,0x7ff86ea82704,94102960,0,0x0,8
tick,0x7ff86ea82704,94104379,0,0x0,8
tick,0x7ff86ea82704,94106433,0,0x0,8
tick,0x7ff86ea82704,94108220,0,0x0,8
tick,0x7ff86ea82704,94110372,0,0x0,8
tick,0x7ff86ea82704,94112269,0,0x0,8
tick,0x7ff86ea82704,94115260,0,0x0,8
tick,0x7ff86ea82704,94116331,0,0x0,8
tick,0x7ff86ea82704,94118425,0,0x0,8
tick,0x7ff86ea82704,94120227,0,0x0,8
tick,0x7ff86ea82704,94122203,0,0x0,8
tick,0x7ff86ea82704,94124307,0,0x0,8
tick,0x7ff86ea82704,94126246,0,0x0,8
tick,0x7ff86ea82704,94128245,0,0x0,8
tick,0x7ff86ea82704,94130358,0,0x0,8
tick,0x7ff86ea82704,94132186,0,0x0,8
tick,0x7ff86ea82704,94134248,0,0x0,8
tick,0x7ff86ea82704,94136166,0,0x0,8
tick,0x7ff86ea82704,94138329,0,0x0,8
tick,0x7ff86ea82704,94140262,0,0x0,8
tick,0x7ff86ea82704,94142898,0,0x0,8
tick,0x7ff86ea82704,94144182,0,0x0,8
tick,0x7ff86ea82704,94147331,0,0x0,8
tick,0x7ff86ea82704,94149367,0,0x0,8
tick,0x7ff86ea82704,94151388,0,0x0,8
tick,0x7ff86ea82704,94153776,0,0x0,8
tick,0x7ff86ea82704,94155413,0,0x0,8
tick,0x7ff86ea82704,94157303,0,0x0,8
tick,0x7ff86ea82704,94159644,0,0x0,8
tick,0x7ff86ea82704,94163028,0,0x0,8
tick,0x7ff86ea82704,94163761,0,0x0,8
tick,0x7ff86ea82704,94166269,0,0x0,8
tick,0x7ff86ea82704,94168207,0,0x0,8
tick,0x7ff86ea82704,94170181,0,0x0,8
tick,0x7ff86ea82704,94172302,0,0x0,8
tick,0x7ff86ea82704,94174219,0,0x0,8
tick,0x7ff86ea82704,94176095,0,0x0,8
tick,0x7ff86ea82704,94178299,0,0x0,8
tick,0x7ff86ea82704,94180406,0,0x0,8
tick,0x7ff86ea82704,94182194,0,0x0,8
tick,0x7ff86ea82704,94184248,0,0x0,8
tick,0x7ff86ea82704,94186227,0,0x0,8
tick,0x7ff86ea82704,94188073,0,0x0,8
tick,0x7ff86ea82704,94190094,0,0x0,8
tick,0x7ff86ea82704,94192306,0,0x0,8
tick,0x7ff86ea82704,94194493,0,0x0,8
tick,0x7ff86ea82704,94198375,0,0x0,8
tick,0x7ff86ea82704,94199590,0,0x0,8
tick,0x7ff86ea82704,94201349,0,0x0,8
tick,0x7ff86ea82704,94203393,0,0x0,8
tick,0x7ff86ea82704,94204935,0,0x0,8
tick,0x7ff86ea82704,94207105,0,0x0,8
tick,0x7ff86ea82704,94209253,0,0x0,8
tick,0x7ff86ea82704,94211249,0,0x0,8
tick,0x7ff86ea82704,94213751,0,0x0,8
tick,0x7ff86ea82704,94217769,0,0x0,8
tick,0x7ff86ea82704,94219024,0,0x0,8
tick,0x7ff86ea82704,94220949,0,0x0,8
tick,0x7ff86ea82704,94223015,0,0x0,8
tick,0x7ff86ea82704,94225085,0,0x0,8
tick,0x7ff86ea82704,94226928,0,0x0,8
tick,0x7ff86ea82704,94228936,0,0x0,8
tick,0x7ff86ea82704,94233352,0,0x0,8
tick,0x7ff86ea82704,94233381,0,0x0,8
tick,0x7ff86ea82704,94234896,0,0x0,8
tick,0x7ff86ea82704,94236794,0,0x0,8
tick,0x7ff86ea82704,94238832,0,0x0,8
tick,0x7ff86ea82704,94240883,0,0x0,8
tick,0x7ff86ea82704,94242849,0,0x0,8
tick,0x7ff86ea82704,94244794,0,0x0,8
tick,0x7ff86ea82704,94247667,0,0x0,8
tick,0x7ff86ea82704,94250137,0,0x0,8
tick,0x7ff86ea82704,94251775,0,0x0,8
tick,0x7ff86ea82704,94253733,0,0x0,8
tick,0x7ff86ea82704,94255781,0,0x0,8
tick,0x7ff86ea82704,94257781,0,0x0,8
tick,0x7ff86ea82704,94259768,0,0x0,8
tick,0x7ff86ea82704,94261761,0,0x0,8
tick,0x7ff86ea82704,94264472,0,0x0,8
tick,0x7ff86ea82704,94265896,0,0x0,8
tick,0x7ff86ea82704,94267952,0,0x0,8
tick,0x7ff86ea82704,94269816,0,0x0,8
tick,0x7ff86ea82704,94271891,0,0x0,8
tick,0x7ff86ea82704,94273845,0,0x0,8
tick,0x7ff86ea82704,94275774,0,0x0,8
tick,0x7ff86ea82704,94277922,0,0x0,8
tick,0x7ff86ea82704,94281007,0,0x0,8
tick,0x7ff86ea82704,94282406,0,0x0,8
tick,0x7ff86ea82704,94283896,0,0x0,8
tick,0x7ff86ea82704,94285809,0,0x0,8
tick,0x7ff86ea82704,94287810,0,0x0,8
tick,0x7ff86ea82704,94289793,0,0x0,8
tick,0x7ff86ea82704,94291854,0,0x0,8
tick,0x7ff86ea82704,94293686,0,0x0,8
tick,0x7ff86ea82704,94295863,0,0x0,8
tick,0x7ff86ea82704,94298253,0,0x0,8
tick,0x7ff86ea82704,94301124,0,0x0,8
tick,0x7ff86ea82704,94301965,0,0x0,8
tick,0x7ff86ea82704,94303820,0,0x0,8
tick,0x7ff86ea82704,94305859,0,0x0,8
tick,0x7ff86ea82704,94307656,0,0x0,8
tick,0x7ff86ea82704,94309781,0,0x0,8
tick,0x7ff86ea82704,94311737,0,0x0,8
tick,0x7ff86ea82704,94314302,0,0x0,8
tick,0x7ff86ea82704,94316055,0,0x0,8
tick,0x7ff86ea82704,94318222,0,0x0,8
tick,0x7ff86ea82704,94319762,0,0x0,8
tick,0x7ff86ea82704,94321725,0,0x0,8
tick,0x7ff86ea82704,94323623,0,0x0,8
tick,0x7ff86ea82704,94325752,0,0x0,8
tick,0x7ff86ea82704,94327612,0,0x0,8
tick,0x7ff86ea82704,94329895,0,0x0,8
tick,0x7ff86ea82704,94332596,0,0x0,8
tick,0x7ff86ea82704,94334196,0,0x0,8
tick,0x7ff86ea82704,94335722,0,0x0,8
tick,0x7ff86ea82704,94337666,0,0x0,8
tick,0x7ff86ea82704,94339640,0,0x0,8
tick,0x7ff86ea82704,94341629,0,0x0,8
tick,0x7ff86ea82704,94343759,0,0x0,8
tick,0x7ff86ea82704,94345583,0,0x0,8
tick,0x7ff86ea82704,94348007,0,0x0,8
tick,0x7ff86ea82704,94350132,0,0x0,8
tick,0x7ff86ea82704,94351795,0,0x0,8
tick,0x7ff86ea82704,94353611,0,0x0,8
tick,0x7ff86ea82704,94355581,0,0x0,8
tick,0x7ff86ea82704,94357658,0,0x0,8
tick,0x7ff86ea82704,94359728,0,0x0,8
tick,0x7ff86ea82704,94361641,0,0x0,8
tick,0x7ff86ea82704,94364263,0,0x0,8
tick,0x7ff86ea82704,94366196,0,0x0,8
tick,0x7ff86ea82704,94367617,0,0x0,8
tick,0x7ff86ea82704,94369492,0,0x0,8
tick,0x7ff86ea82704,94371545,0,0x0,8
tick,0x7ff86ea82704,94373503,0,0x0,8
tick,0x7ff86ea82704,94375679,0,0x0,8
tick,0x7ff86ea82704,94377777,0,0x0,8
tick,0x7ff86ea82704,94379479,0,0x0,8
tick,0x7ff86ea82704,94383121,0,0x0,8
tick,0x7ff86ea82704,94384484,0,0x0,8
tick,0x7ff86ea82704,94386583,0,0x0,8
tick,0x7ff86ea82704,94388405,0,0x0,8
tick,0x7ff86ea82704,94390505,0,0x0,8
tick,0x7ff86ea82704,94392434,0,0x0,8
tick,0x7ff86ea82704,94394540,0,0x0,8
tick,0x7ff86ea82704,94396966,0,0x0,8
tick,0x7ff86ea82704,94399756,0,0x0,8
tick,0x7ff86ea82704,94401528,0,0x0,8
tick,0x7ff86ea82704,94403410,0,0x0,8
tick,0x7ff86ea82704,94405484,0,0x0,8
tick,0x7ff86ea82704,94407398,0,0x0,8
tick,0x7ff86ea82704,94409545,0,0x0,8
tick,0x7ff86ea82704,94411376,0,0x0,8
tick,0x7ff86ea82704,94413837,0,0x0,8
tick,0x7ff86ea82704,94415572,0,0x0,8
tick,0x7ff86ea82704,94417410,0,0x0,8
tick,0x7ff86ea82704,94419410,0,0x0,8
tick,0x7ff86ea82704,94421532,0,0x0,8
tick,0x7ff86ea82704,94423334,0,0x0,8
tick,0x7ff86ea82704,94425571,0,0x0,8
tick,0x7ff86ea82704,94427350,0,0x0,8
tick,0x7ff86ea82704,94429404,0,0x0,8
tick,0x7ff86ea82704,94431861,0,0x0,8
tick,0x7ff86ea82704,94433456,0,0x0,8
tick,0x7ff86ea82704,94435294,0,0x0,8
tick,0x7ff86ea82704,94437416,0,0x0,8
tick,0x7ff86ea82704,94439330,0,0x0,8
tick,0x7ff86ea82704,94441488,0,0x0,8
tick,0x7ff86ea82704,94443277,0,0x0,8
tick,0x7ff86ea82704,94445421,0,0x0,8
tick,0x7ff86ea82704,94447648,0,0x0,8
tick,0x7ff86ea82704,94449719,0,0x0,8
tick,0x7ff86ea82704,94451265,0,0x0,8
tick,0x7ff86ea82704,94453315,0,0x0,8
tick,0x7ff86ea82704,94455241,0,0x0,8
tick,0x7ff86ea82704,94457384,0,0x0,8
tick,0x7ff86ea82704,94459243,0,0x0,8
tick,0x7ff86ea82704,94461338,0,0x0,8
tick,0x7ff86ea82704,94464825,0,0x0,8
tick,0x7ff86ea82704,94466753,0,0x0,8
tick,0x7ff86ea82704,94468358,0,0x0,8
tick,0x7ff86ea82704,94470242,0,0x0,8
tick,0x7ff86ea82704,94472362,0,0x0,8
tick,0x7ff86ea82704,94474254,0,0x0,8
tick,0x7ff86ea82704,94476301,0,0x0,8
tick,0x7ff86ea82704,94478174,0,0x0,8
tick,0x7ff86ea82704,94480914,0,0x0,8
tick,0x7ff86ea82704,94482961,0,0x0,8
tick,0x7ff86ea82704,94484112,0,0x0,8
tick,0x7ff86ea82704,94486125,0,0x0,8
tick,0x7ff86ea82704,94488188,0,0x0,8
tick,0x7ff86ea82704,94490119,0,0x0,8
tick,0x7ff86ea82704,94492053,0,0x0,8
tick,0x7ff86ea82704,94494079,0,0x0,8
tick,0x7ff86ea82704,94496117,0,0x0,8
tick,0x7ff86ea82704,94498617,0,0x0,8
tick,0x7ff86ea82704,94500212,0,0x0,8
tick,0x7ff86ea82704,94502124,0,0x0,8
tick,0x7ff86ea82704,94504133,0,0x0,8
tick,0x7ff86ea82704,94506187,0,0x0,8
tick,0x7ff86ea82704,94508087,0,0x0,8
tick,0x7ff86ea82704,94510065,0,0x0,8
tick,0x7ff86ea82704,94512106,0,0x0,8
tick,0x7ff86ea82704,94514603,0,0x0,8
tick,0x7ff86ea82704,94516426,0,0x0,8
tick,0x7ff86ea82704,94518070,0,0x0,8
tick,0x7ff86ea82704,94520056,0,0x0,8
tick,0x7ff86ea82704,94522079,0,0x0,8
tick,0x7ff86ea82704,94524032,0,0x0,8
tick,0x7ff86ea82704,94526147,0,0x0,8
tick,0x7ff86ea82704,94528064,0,0x0,8
tick,0x7ff86ea82704,94530125,0,0x0,8
tick,0x7ff86ea82704,94532762,0,0x0,8
tick,0x7ff86ea82704,94533965,0,0x0,8
tick,0x7ff86ea82704,94535932,0,0x0,8
tick,0x7ff86ea82704,94537927,0,0x0,8
tick,0x7ff86ea82704,94539937,0,0x0,8
tick,0x7ff86ea82704,94541982,0,0x0,8
tick,0x7ff86ea82704,94543927,0,0x0,8
tick,0x7ff86ea82704,94545938,0,0x0,8
tick,0x7ff86ea82704,94548794,0,0x0,8
tick,0x7ff86ea82704,94550266,0,0x0,8
tick,0x7ff86ea82704,94552029,0,0x0,8
tick,0x7ff86ea82704,94554055,0,0x0,8
tick,0x7ff86ea82704,94555993,0,0x0,8
tick,0x7ff86ea82704,94558032,0,0x0,8
tick,0x7ff86ea82704,94559967,0,0x0,8
tick,0x7ff86ea82704,94562044,0,0x0,8
tick,0x7ff86ea82704,94564355,0,0x0,8
tick,0x7ff86ea82704,94566316,0,0x0,8
tick,0x7ff86ea82704,94568123,0,0x0,8
tick,0x7ff86ea82704,94569922,0,0x0,8
tick,0x7ff86ea82704,94571887,0,0x0,8
tick,0x7ff86ea82704,94574004,0,0x0,8
tick,0x7ff86ea82704,94578260,0,0x0,8
tick,0x7ff86ea82704,94580651,0,0x0,8
tick,0x7ff86ea82704,94583868,0,0x0,8
tick,0x7ff86ea82704,94586281,0,0x0,8
tick,0x7ff86ea82704,94587932,0,0x0,8
tick,0x7ff86ea82704,94590026,0,0x0,8
tick,0x7ff86ea82704,94591938,0,0x0,8
tick,0x7ff86ea82704,94594041,0,0x0,8
tick,0x7ff86ea82704,94595973,0,0x0,8
tick,0x7ff86ea82704,94598473,0,0x0,8
tick,0x7ff86ea82704,94600123,0,0x0,8
tick,0x7ff86ea82704,94601928,0,0x0,8
tick,0x7ff86ea82704,94604074,0,0x0,8
tick,0x7ff86ea82704,94605970,0,0x0,8
tick,0x7ff86ea82704,94608015,0,0x0,8
tick,0x7ff86ea82704,94609902,0,0x0,8
tick,0x7ff86ea82704,94611925,0,0x0,8
tick,0x7ff86ea82704,94615132,0,0x0,8
tick,0x7ff86ea82704,94616168,0,0x0,8
tick,0x7ff86ea82704,94617782,0,0x0,8
tick,0x7ff86ea82704,94619819,0,0x0,8
tick,0x7ff86ea82704,94621940,0,0x0,8
tick,0x7ff86ea82704,94623832,0,0x0,8
tick,0x7ff86ea82704,94626040,0,0x0,8
tick,0x7ff86ea82704,94627891,0,0x0,8
tick,0x7ff86ea82704,94632623,0,0x0,8
tick,0x7ff86ea82704,94633576,0,0x0,8
tick,0x7ff86ea82704,94635073,0,0x0,8
tick,0x7ff86ea82704,94637167,0,0x0,8
tick,0x7ff86ea82704,94638920,0,0x0,8
tick,0x7ff86ea82704,94640866,0,0x0,8
tick,0x7ff86ea82704,94643169,0,0x0,8
tick,0x7ff86ea82704,94644958,0,0x0,8
tick,0x7ff86ea82704,94647685,0,0x0,8
tick,0x7ff86ea82704,94649192,0,0x0,8
tick,0x7ff86ea82704,94650883,0,0x0,8
tick,0x7ff86ea82704,94652841,0,0x0,8
tick,0x7ff86ea82704,94655046,0,0x0,8
tick,0x7ff86ea82704,94656756,0,0x0,8
tick,0x7ff86ea82704,94658931,0,0x0,8
tick,0x7ff86ea82704,94660826,0,0x0,8
tick,0x7ff86ea82704,94662839,0,0x0,8
tick,0x7ff86ea82704,94665513,0,0x0,8
tick,0x7ff86ea82704,94667170,0,0x0,8
tick,0x7ff86ea82704,94668738,0,0x0,8
tick,0x7ff86ea82704,94670751,0,0x0,8
tick,0x7ff86ea82704,94672752,0,0x0,8
tick,0x7ff86ea82704,94674666,0,0x0,8
tick,0x7ff86ea82704,94676794,0,0x0,8
tick,0x7ff86ea82704,94678753,0,0x0,8
tick,0x7ff86ea82704,94681065,0,0x0,8
tick,0x7ff86ea82704,94683087,0,0x0,8
tick,0x7ff86ea82704,94684704,0,0x0,8
tick,0x7ff86ea82704,94686703,0,0x0,8
tick,0x7ff86ea82704,94688703,0,0x0,8
tick,0x7ff86ea82704,94690794,0,0x0,8
tick,0x7ff86ea82704,94692711,0,0x0,8
tick,0x7ff86ea82704,94694872,0,0x0,8
tick,0x7ff86ea82704,94697677,0,0x0,8
tick,0x7ff86ea82704,94699207,0,0x0,8
tick,0x7ff86ea82704,94700783,0,0x0,8
tick,0x7ff86ea82704,94702733,0,0x0,8
tick,0x7ff86ea82704,94704792,0,0x0,8
tick,0x7ff86ea82704,94706711,0,0x0,8
tick,0x7ff86ea82704,94708731,0,0x0,8
tick,0x7ff86ea82704,94710728,0,0x0,8
tick,0x7ff86ea82704,94712781,0,0x0,8
tick,0x7ff86ea82704,94715254,0,0x0,8
tick,0x7ff86ea82704,94716884,0,0x0,8
tick,0x7ff86ea82704,94718719,0,0x0,8
tick,0x7ff86ea82704,94720673,0,0x0,8
tick,0x7ff86ea82704,94722648,0,0x0,8
tick,0x7ff86ea82704,94724647,0,0x0,8
tick,0x7ff86ea82704,94726657,0,0x0,8
tick,0x7ff86ea82704,94728690,0,0x0,8
tick,0x7ff86ea82704,94731152,0,0x0,8
tick,0x7ff86ea82704,94733284,0,0x0,8
tick,0x7ff86ea82704,94734580,0,0x0,8
tick,0x7ff86ea82704,94736575,0,0x0,8
tick,0x7ff86ea82704,94738546,0,0x0,8
tick,0x7ff86ea82704,94740595,0,0x0,8
tick,0x7ff86ea82704,94742671,0,0x0,8
tick,0x7ff86ea82704,94744711,0,0x0,8
tick,0x7ff86ea82704,94748429,0,0x0,8
tick,0x7ff86ea82704,94750118,0,0x0,8
tick,0x7ff86ea82704,94751608,0,0x0,8
tick,0x7ff86ea82704,94753677,0,0x0,8
tick,0x7ff86ea82704,94755581,0,0x0,8
tick,0x7ff86ea82704,94757836,0,0x0,8
tick,0x7ff86ea82704,94759633,0,0x0,8
tick,0x7ff86ea82704,94761622,0,0x0,8
tick,0x7ff86ea82704,94765183,0,0x0,8
tick,0x7ff86ea82704,94766444,0,0x0,8
tick,0x7ff86ea82704,94767415,0,0x0,8
tick,0x7ff86ea82704,94769591,0,0x0,8
tick,0x7ff86ea82704,94771477,0,0x0,8
tick,0x7ff86ea82704,94773494,0,0x0,8
tick,0x7ff86ea82704,94775432,0,0x0,8
tick,0x7ff86ea82704,94777422,0,0x0,8
tick,0x7ff86ea82704,94779433,0,0x0,8
tick,0x7ff86ea82704,94781989,0,0x0,8
tick,0x7ff86ea82704,94783552,0,0x0,8
tick,0x7ff86ea82704,94785496,0,0x0,8
tick,0x7ff86ea82704,94787390,0,0x0,8
tick,0x7ff86ea82704,94789458,0,0x0,8
tick,0x7ff86ea82704,94791511,0,0x0,8
tick,0x7ff86ea82704,94793514,0,0x0,8
tick,0x7ff86ea82704,94795607,0,0x0,8
tick,0x7ff86ea82704,94797877,0,0x0,8
tick,0x7ff86ea82704,94800012,0,0x0,8
tick,0x7ff86ea82704,94801330,0,0x0,8
tick,0x7ff86ea82704,94803325,0,0x0,8
tick,0x7ff86ea82704,94805317,0,0x0,8
tick,0x7ff86ea82704,94807471,0,0x0,8
tick,0x7ff86ea82704,94809226,0,0x0,8
tick,0x7ff86ea82704,94811387,0,0x0,8
tick,0x7ff86ea82704,94813503,0,0x0,8
tick,0x7ff86ea82704,94815578,0,0x0,8
tick,0x7ff86ea82704,94817402,0,0x0,8
tick,0x7ff86ea82704,94819435,0,0x0,8
tick,0x7ff86ea82704,94821448,0,0x0,8
tick,0x7ff86ea82704,94823424,0,0x0,8
tick,0x7ff86ea82704,94825422,0,0x0,8
tick,0x7ff86ea82704,94827316,0,0x0,8
tick,0x7ff86ea82704,94829490,0,0x0,8
tick,0x7ff86ea82704,94833408,0,0x0,8
tick,0x7ff86ea82704,94834470,0,0x0,8
tick,0x7ff86ea82704,94836269,0,0x0,8
tick,0x7ff86ea82704,94838359,0,0x0,8
tick,0x7ff86ea82704,94840265,0,0x0,8
tick,0x7ff86ea82704,94842305,0,0x0,8
tick,0x7ff86ea82704,94844263,0,0x0,8
tick,0x7ff86ea82704,94846432,0,0x0,8
tick,0x7ff86ea82704,94848607,0,0x0,8
tick,0x7ff86ea82704,94850529,0,0x0,8
tick,0x7ff86ea82704,94852353,0,0x0,8
tick,0x7ff86ea82704,94854377,0,0x0,8
tick,0x7ff86ea82704,94856556,0,0x0,8
tick,0x7ff86ea82704,94858555,0,0x0,8
tick,0x7ff86ea82704,94860274,0,0x0,8
tick,0x7ff86ea82704,94862291,0,0x0,8
tick,0x7ff86ea82704,94865744,0,0x0,8
tick,0x7ff86ea82704,94867035,0,0x0,8
tick,0x7ff86ea82704,94868409,0,0x0,8
tick,0x7ff86ea82704,94870293,0,0x0,8
tick,0x7ff86ea82704,94872322,0,0x0,8
tick,0x7ff86ea82704,94874149,0,0x0,8
tick,0x7ff86ea82704,94876364,0,0x0,8
tick,0x7ff86ea82704,94878271,0,0x0,8
tick,0x7ff86ea82704,94880745,0,0x0,8
tick,0x7ff86ea82704,94882330,0,0x0,8
tick,0x7ff86ea82704,94884299,0,0x0,8
tick,0x7ff86ea82704,94886206,0,0x0,8
tick,0x7ff86ea82704,94888328,0,0x0,8
tick,0x7ff86ea82704,94890175,0,0x0,8
tick,0x7ff86ea82704,94892253,0,0x0,8
tick,0x7ff86ea82704,94894288,0,0x0,8
tick,0x7ff86ea82704,94896557,0,0x0,8
tick,0x7ff86ea82704,94898954,0,0x0,8
tick,0x7ff86ea82704,94900271,0,0x0,8
tick,0x7ff86ea82704,94902146,0,0x0,8
tick,0x7ff86ea82704,94904208,0,0x0,8
tick,0x7ff86ea82704,94906208,0,0x0,8
tick,0x7ff86ea82704,94908180,0,0x0,8
tick,0x7ff86ea82704,94910126,0,0x0,8
tick,0x7ff86ea82704,94912226,0,0x0,8
tick,0x7ff86ea82704,94914493,0,0x0,8
tick,0x7ff86ea82704,94916613,0,0x0,8
tick,0x7ff86ea82704,94918027,0,0x0,8
tick,0x7ff86ea82704,94920264,0,0x0,8
tick,0x7ff86ea82704,94922030,0,0x0,8
tick,0x7ff86ea82704,94924180,0,0x0,8
tick,0x7ff86ea82704,94926023,0,0x0,8
tick,0x7ff86ea82704,94928222,0,0x0,8
tick,0x7ff86ea82704,94930247,0,0x0,8
tick,0x7ff86ea82704,94932406,0,0x0,8
tick,0x7ff86ea82704,94934047,0,0x0,8
tick,0x7ff86ea82704,94936087,0,0x0,8
tick,0x7ff86ea82704,94937948,0,0x0,8
tick,0x7ff86ea82704,94940111,0,0x0,8
tick,0x7ff86ea82704,94941948,0,0x0,8
tick,0x7ff86ea82704,94944197,0,0x0,8
tick,0x7ff86ea82704,94946113,0,0x0,8
tick,0x7ff86ea82704,94948684,0,0x0,8
tick,0x7ff86ea82704,94950280,0,0x0,8
tick,0x7ff86ea82704,94952026,0,0x0,8
tick,0x7ff86ea82704,94953986,0,0x0,8
tick,0x7ff86ea82704,94956003,0,0x0,8
tick,0x7ff86ea82704,94958007,0,0x0,8
tick,0x7ff86ea82704,94960026,0,0x0,8
tick,0x7ff86ea82704,94962067,0,0x0,8
tick,0x7ff86ea82704,94964471,0,0x0,8
tick,0x7ff86ea82704,94966961,0,0x0,8
tick,0x7ff86ea82704,94969095,0,0x0,8
tick,0x7ff86ea82704,94971016,0,0x0,8
tick,0x7ff86ea82704,94973157,0,0x0,8
tick,0x7ff86ea82704,94974982,0,0x0,8
tick,0x7ff86ea82704,94977067,0,0x0,8
tick,0x7ff86ea82704,94979042,0,0x0,8
tick,0x7ff86ea82704,94981169,0,0x0,8
tick,0x7ff86ea82704,94983300,0,0x0,8
tick,0x7ff86ea82704,94985175,0,0x0,8
tick,0x7ff86ea82704,94986881,0,0x0,8
tick,0x7ff86ea82704,94988992,0,0x0,8
tick,0x7ff86ea82704,94990886,0,0x0,8
tick,0x7ff86ea82704,94992972,0,0x0,8
tick,0x7ff86ea82704,94994867,0,0x0,8
tick,0x7ff86ea82704,94997557,0,0x0,8
tick,0x7ff86ea82704,94999635,0,0x0,8
tick,0x7ff86ea82704,95000985,0,0x0,8
tick,0x7ff86ea82704,95002873,0,0x0,8
tick,0x7ff86ea82704,95004925,0,0x0,8
tick,0x7ff86ea82704,95006857,0,0x0,8
tick,0x7ff86ea82704,95008891,0,0x0,8
tick,0x7ff86ea82704,95010773,0,0x0,8
tick,0x7ff86ea82704,95012996,0,0x0,8
tick,0x7ff86ea82704,95015298,0,0x0,8
tick,0x7ff86ea82704,95017161,0,0x0,8
tick,0x7ff86ea82704,95018878,0,0x0,8
tick,0x7ff86ea82704,95021193,0,0x0,8
tick,0x7ff86ea82704,95022917,0,0x0,8
tick,0x7ff86ea82704,95024883,0,0x0,8
tick,0x7ff86ea82704,95026849,0,0x0,8
tick,0x7ff86ea82704,95028855,0,0x0,8
tick,0x7ff86ea82704,95031176,0,0x0,8
tick,0x7ff86ea82704,95033386,0,0x0,8
tick,0x7ff86ea82704,95034866,0,0x0,8
tick,0x7ff86ea82704,95036737,0,0x0,8
tick,0x7ff86ea82704,95038738,0,0x0,8
tick,0x7ff86ea82704,95040679,0,0x0,8
tick,0x7ff86ea82704,95043041,0,0x0,8
tick,0x7ff86ea82704,95044714,0,0x0,8
tick,0x7ff86ea82704,95047419,0,0x0,8
tick,0x7ff86ea82704,95049487,0,0x0,8
tick,0x7ff86ea82704,95050656,0,0x0,8
tick,0x7ff86ea82704,95052670,0,0x0,8
tick,0x7ff86ea82704,95054598,0,0x0,8
tick,0x7ff86ea82704,95056608,0,0x0,8
tick,0x7ff86ea82704,95058707,0,0x0,8
tick,0x7ff86ea82704,95060595,0,0x0,8
tick,0x7ff86ea82704,95062664,0,0x0,8
tick,0x7ff86ea82704,95065394,0,0x0,8
tick,0x7ff86ea82704,95066664,0,0x0,8
tick,0x7ff86ea82704,95068575,0,0x0,8
tick,0x7ff86ea82704,95070662,0,0x0,8
tick,0x7ff86ea82704,95072838,0,0x0,8
tick,0x7ff86ea82704,95074597,0,0x0,8
tick,0x7ff86ea82704,95076553,0,0x0,8
tick,0x7ff86ea82704,95078571,0,0x0,8
tick,0x7ff86ea82704,95081173,0,0x0,8
tick,0x7ff86ea82704,95082658,0,0x0,8
tick,0x7ff86ea82704,95084564,0,0x0,8
tick,0x7ff86ea82704,95086583,0,0x0,8
tick,0x7ff86ea82704,95088586,0,0x0,8
tick,0x7ff86ea82704,95090560,0,0x0,8
tick,0x7ff86ea82704,95092557,0,0x0,8
tick,0x7ff86ea82704,95094484,0,0x0,8
tick,0x7ff86ea82704,95096748,0,0x0,8
tick,0x7ff86ea82704,95098553,0,0x0,8
tick,0x7ff86ea82704,95100531,0,0x0,8
tick,0x7ff86ea82704,95102507,0,0x0,8
tick,0x7ff86ea82704,95104512,0,0x0,8
tick,0x7ff86ea82704,95106470,0,0x0,8
tick,0x7ff86ea82704,95108481,0,0x0,8
tick,0x7ff86ea82704,95110497,0,0x0,8
tick,0x7ff86ea82704,95112473,0,0x0,8
tick,0x7ff86ea82704,95114548,0,0x0,8
tick,0x7ff86ea82704,95116628,0,0x0,8
tick,0x7ff86ea82704,95118521,0,0x0,8
tick,0x7ff86ea82704,95120441,0,0x0,8
tick,0x7ff86ea82704,95122495,0,0x0,8
tick,0x7ff86ea82704,95124423,0,0x0,8
tick,0x7ff86ea82704,95126446,0,0x0,8
tick,0x7ff86ea82704,95128547,0,0x0,8
tick,0x7ff86ea82704,95130429,0,0x0,8
tick,0x7ff86ea82704,95132441,0,0x0,8
tick,0x7ff86ea82704,95134467,0,0x0,8
tick,0x7ff86ea82704,95136423,0,0x0,8
tick,0x7ff86ea82704,95138471,0,0x0,8
tick,0x7ff86ea82704,95140409,0,0x0,8
tick,0x7ff86ea82704,95142485,0,0x0,8
tick,0x7ff86ea82704,95144565,0,0x0,8
tick,0x7ff86ea82704,95146860,0,0x0,8
tick,0x7ff86ea82704,95148652,0,0x0,8
tick,0x7ff86ea82704,95150601,0,0x0,8
tick,0x7ff86ea82704,95152598,0,0x0,8
tick,0x7ff86ea82704,95154628,0,0x0,8
tick,0x7ff86ea82704,95156572,0,0x0,8
tick,0x7ff86ea82704,95158547,0,0x0,8
tick,0x7ff86ea82704,95160586,0,0x0,8
tick,0x7ff86ea82704,95162620,0,0x0,8
tick,0x7ff86ea82704,95164480,0,0x0,8
tick,0x7ff86ea82704,95166463,0,0x0,8
tick,0x7ff86ea82704,95168769,0,0x0,8
tick,0x7ff86ea82704,95170612,0,0x0,8
tick,0x7ff86ea82704,95172565,0,0x0,8
tick,0x7ff86ea82704,95174627,0,0x0,8
tick,0x7ff86ea82704,95176578,0,0x0,8
tick,0x7ff86ea82704,95178485,0,0x0,8
tick,0x7ff86ea82704,95180506,0,0x0,8
tick,0x7ff86ea82704,95182520,0,0x0,8
tick,0x7ff86ea82704,95184527,0,0x0,8
tick,0x7ff86ea82704,95186509,0,0x0,8
tick,0x7ff86ea82704,95188444,0,0x0,8
tick,0x7ff86ea82704,95190538,0,0x0,8
tick,0x7ff86ea82704,95192481,0,0x0,8
tick,0x7ff86ea82704,95194553,0,0x0,8
tick,0x7ff86ea82704,95196486,0,0x0,8
tick,0x7ff86ea82704,95198522,0,0x0,8
tick,0x7ff86ea82704,95200458,0,0x0,8
tick,0x7ff86ea82704,95202499,0,0x0,8
tick,0x7ff86ea82704,95204549,0,0x0,8
tick,0x7ff86ea82704,95206420,0,0x0,8
tick,0x7ff86ea82704,95208420,0,0x0,8
tick,0x7ff86ea82704,95210360,0,0x0,8
tick,0x7ff86ea82704,95212460,0,0x0,8
tick,0x7ff86ea82704,95214395,0,0x0,8
tick,0x7ff86ea82704,95216425,0,0x0,8
tick,0x7ff86ea82704,95218315,0,0x0,8
tick,0x7ff86ea82704,95220446,0,0x0,8
tick,0x7ff86ea82704,95222303,0,0x0,8
tick,0x7ff86ea82704,95224341,0,0x0,8
tick,0x7ff86ea82704,95226333,0,0x0,8
tick,0x7ff86ea82704,95228318,0,0x0,8
tick,0x7ff86ea82704,95230319,0,0x0,8
tick,0x7ff86ea82704,95232373,0,0x0,8
tick,0x7ff86ea82704,95234307,0,0x0,8
tick,0x7ff86ea82704,95236331,0,0x0,8
tick,0x7ff86ea82704,95238345,0,0x0,8
tick,0x7ff86ea82704,95240355,0,0x0,8
tick,0x7ff86ea82704,95242425,0,0x0,8
tick,0x7ff86ea82704,95244326,0,0x0,8
tick,0x7ff86ea82704,95246214,0,0x0,8
tick,0x7ff86ea82704,95248229,0,0x0,8
tick,0x7ff86ea82704,95250288,0,0x0,8
tick,0x7ff86ea82704,95252267,0,0x0,8
tick,0x7ff86ea82704,95254191,0,0x0,8
tick,0x7ff86ea82704,95256257,0,0x0,8
tick,0x7ff86ea82704,95258332,0,0x0,8
tick,0x7ff86ea82704,95260246,0,0x0,8
tick,0x7ff86ea82704,95262300,0,0x0,8
tick,0x7ff86ea82704,95264205,0,0x0,8
tick,0x7ff86ea82704,95266272,0,0x0,8
tick,0x7ff86ea82704,95268160,0,0x0,8
tick,0x7ff86ea82704,95270234,0,0x0,8
tick,0x7ff86ea82704,95272279,0,0x0,8
tick,0x7ff86ea82704,95274246,0,0x0,8
tick,0x7ff86ea82704,95276258,0,0x0,8
tick,0x7ff86ea82704,95278214,0,0x0,8
tick,0x7ff86ea82704,95280314,0,0x0,8
tick,0x7ff86ea82704,95282246,0,0x0,8
tick,0x7ff86ea82704,95284247,0,0x0,8
tick,0x7ff86ea82704,95286145,0,0x0,8
tick,0x7ff86ea82704,95288276,0,0x0,8
tick,0x7ff86ea82704,95290201,0,0x0,8
tick,0x7ff86ea82704,95292156,0,0x0,8
tick,0x7ff86ea82704,95294093,0,0x0,8
tick,0x7ff86ea82704,95296175,0,0x0,8
tick,0x7ff86ea82704,95298120,0,0x0,8
tick,0x7ff86ea82704,95300133,0,0x0,8
tick,0x7ff86ea82704,95302320,0,0x0,8
tick,0x7ff86ea82704,95304152,0,0x0,8
tick,0x7ff86ea82704,95306530,0,0x0,8
tick,0x7ff86ea82704,95308205,0,0x0,8
tick,0x7ff86ea82704,95310117,0,0x0,8
tick,0x7ff86ea82704,95312070,0,0x0,8
tick,0x7ff86ea82704,95314261,0,0x0,8
tick,0x7ff86ea82704,95316110,0,0x0,8
tick,0x7ff86ea82704,95318280,0,0x0,8
tick,0x7ff86ea82704,95320058,0,0x0,8
tick,0x7ff86ea82704,95322039,0,0x0,8
tick,0x7ff86ea82704,95324053,0,0x0,8
tick,0x7ff86ea82704,95326085,0,0x0,8
tick,0x7ff86ea82704,95328084,0,0x0,8
tick,0x7ff86ea82704,95330228,0,0x0,8
tick,0x7ff86ea82704,95332136,0,0x0,8
tick,0x7ff86ea82704,95334293,0,0x0,8
tick,0x7ff86ea82704,95336147,0,0x0,8
tick,0x7ff86ea82704,95338221,0,0x0,8
tick,0x7ff86ea82704,95340211,0,0x0,8
tick,0x7ff86ea82704,95341975,0,0x0,8
tick,0x7ff86ea82704,95344182,0,0x0,8
tick,0x7ff86ea82704,95346092,0,0x0,8
tick,0x7ff86ea82704,95347984,0,0x0,8
tick,0x7ff86ea82704,95350011,0,0x0,8
tick,0x7ff86ea82704,95352078,0,0x0,8
tick,0x7ff86ea82704,95354206,0,0x0,8
tick,0x7ff86ea82704,95355995,0,0x0,8
tick,0x7ff86ea82704,95358192,0,0x0,8
tick,0x7ff86ea82704,95360135,0,0x0,8
tick,0x7ff86ea82704,95362145,0,0x0,8
tick,0x7ff86ea82704,95363964,0,0x0,8
tick,0x7ff86ea82704,95366222,0,0x0,8
tick,0x7ff86ea82704,95368019,0,0x0,8
tick,0x7ff86ea82704,95369998,0,0x0,8
tick,0x7ff86ea82704,95371992,0,0x0,8
tick,0x7ff86ea82704,95374111,0,0x0,8
tick,0x7ff86ea82704,95375985,0,0x0,8
tick,0x7ff86ea82704,95378051,0,0x0,8
tick,0x7ff86ea82704,95379964,0,0x0,8
tick,0x7ff86ea82704,95381938,0,0x0,8
tick,0x7ff86ea82704,95384047,0,0x0,8
tick,0x7ff86ea82704,95385907,0,0x0,8
tick,0x7ff86ea82704,95387943,0,0x0,8
tick,0x7ff86ea82704,95389890,0,0x0,8
tick,0x7ff86ea82704,95391995,0,0x0,8
tick,0x7ff86ea82704,95393915,0,0x0,8
tick,0x7ff86ea82704,95396060,0,0x0,8
tick,0x7ff86ea82704,95397870,0,0x0,8
tick,0x7ff86ea82704,95399882,0,0x0,8
tick,0x7ff86ea82704,95401882,0,0x0,8
tick,0x7ff86ea82704,95403870,0,0x0,8
tick,0x7ff86ea82704,95405865,0,0x0,8
tick,0x7ff86ea82704,95408022,0,0x0,8
tick,0x7ff86ea82704,95409912,0,0x0,8
tick,0x7ff86ea82704,95411962,0,0x0,8
tick,0x7ff86ea82704,95413869,0,0x0,8
tick,0x7ff86ea82704,95415893,0,0x0,8
tick,0x7ff86ea82704,95417763,0,0x0,8
tick,0x7ff86ea82704,95419891,0,0x0,8
tick,0x7ff86ea82704,95421783,0,0x0,8
tick,0x7ff86ea82704,95423875,0,0x0,8
tick,0x7ff86ea82704,95425777,0,0x0,8
tick,0x7ff86ea82704,95428029,0,0x0,8
tick,0x7ff86ea82704,95429723,0,0x0,8
tick,0x7ff86ea82704,95431779,0,0x0,8
tick,0x7ff86ea82704,95433767,0,0x0,8
tick,0x7ff86ea82704,95435786,0,0x0,8
tick,0x7ff86ea82704,95437836,0,0x0,8
tick,0x7ff86ea82704,95439976,0,0x0,8
tick,0x7ff86ea82704,95441801,0,0x0,8
tick,0x7ff86ea82704,95443888,0,0x0,8
tick,0x7ff86ea82704,95445720,0,0x0,8
tick,0x7ff86ea82704,95447680,0,0x0,8
tick,0x7ff86ea82704,95449976,0,0x0,8
tick,0x7ff86ea82704,95451710,0,0x0,8
tick,0x7ff86ea82704,95453883,0,0x0,8
tick,0x7ff86ea82704,95455692,0,0x0,8
tick,0x7ff86ea82704,95457773,0,0x0,8
tick,0x7ff86ea82704,95459749,0,0x0,8
tick,0x7ff86ea82704,95461926,0,0x0,8
tick,0x7ff86ea82704,95463701,0,0x0,8
tick,0x7ff86ea82704,95465777,0,0x0,8
tick,0x7ff86ea82704,95467669,0,0x0,8
tick,0x7ff86ea82704,95469917,0,0x0,8
tick,0x7ff86ea82704,95471740,0,0x0,8
tick,0x7ff86ea82704,95473670,0,0x0,8
tick,0x7ff86ea82704,95475824,0,0x0,8
tick,0x7ff86ea82704,95477715,0,0x0,8
tick,0x7ff86ea82704,95479787,0,0x0,8
tick,0x7ff86ea82704,95481698,0,0x0,8
tick,0x7ff86ea82704,95483537,0,0x0,8
tick,0x7ff86ea82704,95485735,0,0x0,8
tick,0x7ff86ea82704,95487588,0,0x0,8
tick,0x7ff86ea82704,95489776,0,0x0,8
tick,0x7ff86ea82704,95491596,0,0x0,8
tick,0x7ff86ea82704,95493698,0,0x0,8
tick,0x7ff86ea82704,95495652,0,0x0,8
tick,0x7ff86ea82704,95497765,0,0x0,8
tick,0x7ff86ea82704,95499564,0,0x0,8
tick,0x7ff86ea82704,95501826,0,0x0,8
tick,0x7ff86ea82704,95503623,0,0x0,8
tick,0x7ff86ea82704,95505449,0,0x0,8
tick,0x7ff86ea82704,95507779,0,0x0,8
tick,0x7ff86ea82704,95509842,0,0x0,8
tick,0x7ff86ea82704,95511733,0,0x0,8
tick,0x7ff86ea82704,95513556,0,0x0,8
tick,0x7ff86ea82704,95515650,0,0x0,8
tick,0x7ff86ea82704,95517654,0,0x0,8
tick,0x7ff86ea82704,95519585,0,0x0,8
tick,0x7ff86ea82704,95521676,0,0x0,8
tick,0x7ff86ea82704,95523660,0,0x0,8
tick,0x7ff86ea82704,95525506,0,0x0,8
tick,0x7ff86ea82704,95527603,0,0x0,8
tick,0x7ff86ea82704,95529549,0,0x0,8
tick,0x7ff86ea82704,95531671,0,0x0,8
tick,0x7ff86ea82704,95533523,0,0x0,8
tick,0x7ff86ea82704,95535596,0,0x0,8
tick,0x7ff86ea82704,95537468,0,0x0,8
tick,0x7ff86ea82704,95539582,0,0x0,8
tick,0x7ff86ea82704,95541381,0,0x0,8
tick,0x7ff86ea82704,95543571,0,0x0,8
tick,0x7ff86ea82704,95545766,0,0x0,8
tick,0x7ff86ea82704,95547496,0,0x0,8
tick,0x7ff86ea82704,95549446,0,0x0,8
tick,0x7ff86ea82704,95551456,0,0x0,8
tick,0x7ff86ea82704,95553455,0,0x0,8
tick,0x7ff86ea82704,95555500,0,0x0,8
tick,0x7ff86ea82704,95557523,0,0x0,8
tick,0x7ff86ea82704,95559521,0,0x0,8
tick,0x7ff86ea82704,95561487,0,0x0,8
tick,0x7ff86ea82704,95563404,0,0x0,8
tick,0x7ff86ea82704,95565534,0,0x0,8
tick,0x7ff86ea82704,95567624,0,0x0,8
tick,0x7ff86ea82704,95569528,0,0x0,8
tick,0x7ff86ea82704,95571677,0,0x0,8
tick,0x7ff86ea82704,95573407,0,0x0,8
tick,0x7ff86ea82704,95575640,0,0x0,8
tick,0x7ff86ea82704,95577375,0,0x0,8
tick,0x7ff86ea82704,95579482,0,0x0,8
tick,0x7ff86ea82704,95581417,0,0x0,8
tick,0x7ff86ea82704,95583425,0,0x0,8
tick,0x7ff86ea82704,95585413,0,0x0,8
tick,0x7ff86ea82704,95587453,0,0x0,8
tick,0x7ff86ea82704,95589471,0,0x0,8
tick,0x7ff86ea82704,95591412,0,0x0,8
tick,0x7ff86ea82704,95593290,0,0x0,8
tick,0x7ff86ea82704,95595481,0,0x0,8
tick,0x7ff86ea82704,95599389,0,0x0,8
tick,0x7ff86ea82704,95601537,0,0x0,8
tick,0x7ff86ea82704,95603435,0,0x0,8
tick,0x7ff86ea82704,95605372,0,0x0,8
tick,0x7ff86ea82704,95607425,0,0x0,8
tick,0x7ff86ea82704,95609376,0,0x0,8
tick,0x7ff86ea82704,95611434,0,0x0,8
tick,0x7ff86ea82704,95613327,0,0x0,8
tick,0x7ff86ea82704,95615434,0,0x0,8
tick,0x7ff86ea82704,95617522,0,0x0,8
tick,0x7ff86ea82704,95619463,0,0x0,8
tick,0x7ff86ea82704,95621386,0,0x0,8
tick,0x7ff86ea82704,95623491,0,0x0,8
tick,0x7ff86ea82704,95625395,0,0x0,8
tick,0x7ff86ea82704,95627399,0,0x0,8
tick,0x7ff86ea82704,95629767,0,0x0,8
tick,0x7ff86ea82704,95631368,0,0x0,8
tick,0x7ff86ea82704,95633471,0,0x0,8
tick,0x7ff86ea82704,95635348,0,0x0,8
tick,0x7ff86ea82704,95637540,0,0x0,8
tick,0x7ff86ea82704,95639719,0,0x0,8
tick,0x7ff86ea82704,95641612,0,0x0,8
tick,0x7ff86ea82704,95643573,0,0x0,8
tick,0x7ff86ea82704,95645357,0,0x0,8
tick,0x7ff86ea82704,95647427,0,0x0,8
tick,0x7ff86ea82704,95649280,0,0x0,8
tick,0x7ff86ea82704,95651275,0,0x0,8
tick,0x7ff86ea82704,95653289,0,0x0,8
tick,0x7ff86ea82704,95655418,0,0x0,8
tick,0x7ff86ea82704,95657303,0,0x0,8
tick,0x7ff86ea82704,95659334,0,0x0,8
tick,0x7ff86ea82704,95661277,0,0x0,8
tick,0x7ff86ea82704,95663280,0,0x0,8
tick,0x7ff86ea82704,95665282,0,0x0,8
tick,0x7ff86ea82704,95667235,0,0x0,8
tick,0x7ff86ea82704,95669365,0,0x0,8
tick,0x7ff86ea82704,95671201,0,0x0,8
tick,0x7ff86ea82704,95673195,0,0x0,8
tick,0x7ff86ea82704,95675189,0,0x0,8
tick,0x7ff86ea82704,95677321,0,0x0,8
tick,0x7ff86ea82704,95679329,0,0x0,8
tick,0x7ff86ea82704,95681218,0,0x0,8
tick,0x7ff86ea82704,95683174,0,0x0,8
tick,0x7ff86ea82704,95685170,0,0x0,8
tick,0x7ff86ea82704,95687294,0,0x0,8
tick,0x7ff86ea82704,95689278,0,0x0,8
tick,0x7ff86ea82704,95691328,0,0x0,8
tick,0x7ff86ea82704,95693251,0,0x0,8
tick,0x7ff86ea82704,95695285,0,0x0,8
tick,0x7ff86ea82704,95697151,0,0x0,8
tick,0x7ff86ea82704,95699171,0,0x0,8
tick,0x7ff86ea82704,95701146,0,0x0,8
tick,0x7ff86ea82704,95703205,0,0x0,8
tick,0x7ff86ea82704,95705292,0,0x0,8
tick,0x7ff86ea82704,95707206,0,0x0,8
tick,0x7ff86ea82704,95709191,0,0x0,8
tick,0x7ff86ea82704,95711207,0,0x0,8
tick,0x7ff86ea82704,95713182,0,0x0,8
tick,0x7ff86ea82704,95715134,0,0x0,8
tick,0x7ff86ea82704,95717250,0,0x0,8
tick,0x7ff86ea82704,95719218,0,0x0,8
tick,0x7ff86ea82704,95721290,0,0x0,8
tick,0x7ff86ea82704,95722984,0,0x0,8
tick,0x7ff86ea82704,95725405,0,0x0,8
tick,0x7ff86ea82704,95727021,0,0x0,8
tick,0x7ff86ea82704,95729279,0,0x0,8
tick,0x7ff86ea82704,95731022,0,0x0,8
tick,0x7ff86ea82704,95733163,0,0x0,8
tick,0x7ff86ea82704,95734993,0,0x0,8
tick,0x7ff86ea82704,95737044,0,0x0,8
tick,0x7ff86ea82704,95739022,0,0x0,8
tick,0x7ff86ea82704,95741144,0,0x0,8
tick,0x7ff86ea82704,95742974,0,0x0,8
tick,0x7ff86ea82704,95745089,0,0x0,8
tick,0x7ff86ea82704,95746965,0,0x0,8
tick,0x7ff86ea82704,95749272,0,0x0,8
tick,0x7ff86ea82704,95751051,0,0x0,8
tick,0x7ff86ea82704,95753088,0,0x0,8
tick,0x7ff86ea82704,95755012,0,0x0,8
tick,0x7ff86ea82704,95756997,0,0x0,8
tick,0x7ff86ea82704,95758974,0,0x0,8
tick,0x7ff86ea82704,95761087,0,0x0,8
tick,0x7ff86ea82704,95763195,0,0x0,8
tick,0x7ff86ea82704,95764998,0,0x0,8
tick,0x7ff86ea82704,95767061,0,0x0,8
tick,0x7ff86ea82704,95769133,0,0x0,8
tick,0x7ff86ea82704,95770927,0,0x0,8
tick,0x7ff86ea82704,95772960,0,0x0,8
tick,0x7ff86ea82704,95774973,0,0x0,8
tick,0x7ff86ea82704,95776865,0,0x0,8
tick,0x7ff86ea82704,95778879,0,0x0,8
tick,0x7ff86ea82704,95781025,0,0x0,8
tick,0x7ff86ea82704,95782933,0,0x0,8
tick,0x7ff86ea82704,95784918,0,0x0,8
tick,0x7ff86ea82704,95786965,0,0x0,8
tick,0x7ff86ea82704,95788959,0,0x0,8
tick,0x7ff86ea82704,95791123,0,0x0,8
tick,0x7ff86ea82704,95792911,0,0x0,8
tick,0x7ff86ea82704,95794949,0,0x0,8
tick,0x7ff86ea82704,95796849,0,0x0,8
tick,0x7ff86ea82704,95799009,0,0x0,8
tick,0x7ff86ea82704,95800890,0,0x0,8
tick,0x7ff86ea82704,95803044,0,0x0,8
tick,0x7ff86ea82704,95804992,0,0x0,8
tick,0x7ff86ea82704,95806963,0,0x0,8
tick,0x7ff86ea82704,95808871,0,0x0,8
tick,0x7ff86ea82704,95811073,0,0x0,8
tick,0x7ff86ea82704,95812780,0,0x0,8
tick,0x7ff86ea82704,95815001,0,0x0,8
tick,0x7ff86ea82704,95816797,0,0x0,8
tick,0x7ff86ea82704,95818892,0,0x0,8
tick,0x7ff86ea82704,95820781,0,0x0,8
tick,0x7ff86ea82704,95822921,0,0x0,8
tick,0x7ff86ea82704,95824776,0,0x0,8
tick,0x7ff86ea82704,95826850,0,0x0,8
tick,0x7ff86ea82704,95828791,0,0x0,8
tick,0x7ff86ea82704,95830862,0,0x0,8
tick,0x7ff86ea82704,95832663,0,0x0,8
tick,0x7ff86ea82704,95835034,0,0x0,8
tick,0x7ff86ea82704,95836783,0,0x0,8
tick,0x7ff86ea82704,95838982,0,0x0,8
tick,0x7ff86ea82704,95840853,0,0x0,8
tick,0x7ff86ea82704,95842898,0,0x0,8
tick,0x7ff86ea82704,95844706,0,0x0,8
tick,0x7ff86ea82704,95846771,0,0x0,8
tick,0x7ff86ea82704,95848699,0,0x0,8
tick,0x7ff86ea82704,95850763,0,0x0,8
tick,0x7ff86ea82704,95852673,0,0x0,8
tick,0x7ff86ea82704,95854770,0,0x0,8
tick,0x7ff86ea82704,95856730,0,0x0,8
tick,0x7ff86ea82704,95858768,0,0x0,8
tick,0x7ff86ea82704,95860755,0,0x0,8
tick,0x7ff86ea82704,95862677,0,0x0,8
tick,0x7ff86ea82704,95864822,0,0x0,8
tick,0x7ff86ea82704,95866706,0,0x0,8
tick,0x7ff86ea82704,95868774,0,0x0,8
tick,0x7ff86ea82704,95870672,0,0x0,8
tick,0x7ff86ea82704,95872699,0,0x0,8
tick,0x7ff86ea82704,95874661,0,0x0,8
tick,0x7ff86ea82704,95876710,0,0x0,8
tick,0x7ff86ea82704,95878581,0,0x0,8
tick,0x7ff86ea82704,95880729,0,0x0,8
tick,0x7ff86ea82704,95882624,0,0x0,8
tick,0x7ff86ea82704,95884724,0,0x0,8
tick,0x7ff86ea82704,95886653,0,0x0,8
tick,0x7ff86ea82704,95888811,0,0x0,8
tick,0x7ff86ea82704,95890683,0,0x0,8
tick,0x7ff86ea82704,95892610,0,0x0,8
tick,0x7ff86ea82704,95894696,0,0x0,8
tick,0x7ff86ea82704,95896692,0,0x0,8
tick,0x7ff86ea82704,95898743,0,0x0,8
tick,0x7ff86ea82704,95900609,0,0x0,8
tick,0x7ff86ea82704,95902698,0,0x0,8
tick,0x7ff86ea82704,95904602,0,0x0,8
tick,0x7ff86ea82704,95906635,0,0x0,8
tick,0x7ff86ea82704,95908533,0,0x0,8
tick,0x7ff86ea82704,95910704,0,0x0,8
tick,0x7ff86ea82704,95912574,0,0x0,8
tick,0x7ff86ea82704,95914592,0,0x0,8
tick,0x7ff86ea82704,95916540,0,0x0,8
tick,0x7ff86ea82704,95918627,0,0x0,8
tick,0x7ff86ea82704,95920584,0,0x0,8
tick,0x7ff86ea82704,95922607,0,0x0,8
tick,0x7ff86ea82704,95924545,0,0x0,8
tick,0x7ff86ea82704,95926525,0,0x0,8
tick,0x7ff86ea82704,95928535,0,0x0,8
tick,0x7ff86ea82704,95930442,0,0x0,8
tick,0x7ff86ea82704,95932539,0,0x0,8
tick,0x7ff86ea82704,95934475,0,0x0,8
tick,0x7ff86ea82704,95936582,0,0x0,8
tick,0x7ff86ea82704,95938443,0,0x0,8
tick,0x7ff86ea82704,95940561,0,0x0,8
tick,0x7ff86ea82704,95942427,0,0x0,8
tick,0x7ff86ea82704,95944541,0,0x0,8
tick,0x7ff86ea82704,95946494,0,0x0,8
tick,0x7ff86ea82704,95948582,0,0x0,8
tick,0x7ff86ea82704,95950542,0,0x0,8
tick,0x7ff86ea82704,95952513,0,0x0,8
tick,0x7ff86ea82704,95954481,0,0x0,8
tick,0x7ff86ea82704,95956566,0,0x0,8
tick,0x7ff86ea82704,95958465,0,0x0,8
tick,0x7ff86ea82704,95960623,0,0x0,8
tick,0x7ff86ea82704,95962455,0,0x0,8
tick,0x7ff86ea82704,95964501,0,0x0,8
tick,0x7ff86ea82704,95966434,0,0x0,8
tick,0x7ff86ea82704,95968530,0,0x0,8
tick,0x7ff86ea82704,95970443,0,0x0,8
tick,0x7ff86ea82704,95972430,0,0x0,8
tick,0x7ff86ea82704,95974430,0,0x0,8
tick,0x7ff86ea82704,95976464,0,0x0,8
tick,0x7ff86ea82704,95978279,0,0x0,8
tick,0x7ff86ea82704,95980457,0,0x0,8
tick,0x7ff86ea82704,95982373,0,0x0,8
tick,0x7ff86ea82704,95984605,0,0x0,8
tick,0x7ff86ea82704,95986377,0,0x0,8
tick,0x7ff86ea82704,95988459,0,0x0,8
tick,0x7ff86ea82704,95990341,0,0x0,8
tick,0x7ff86ea82704,95992519,0,0x0,8
tick,0x7ff86ea82704,95994247,0,0x0,8
tick,0x7ff86ea82704,95996428,0,0x0,8
tick,0x7ff86ea82704,95998243,0,0x0,8
tick,0x7ff86ea82704,96000404,0,0x0,8
tick,0x7ff86ea82704,96002247,0,0x0,8
tick,0x7ff86ea82704,96004431,0,0x0,8
tick,0x7ff86ea82704,96006265,0,0x0,8
tick,0x7ff86ea82704,96008338,0,0x0,8
tick,0x7ff86ea82704,96010296,0,0x0,8
tick,0x7ff86ea82704,96012356,0,0x0,8
tick,0x7ff86ea82704,96014305,0,0x0,8
tick,0x7ff86ea82704,96016252,0,0x0,8
tick,0x7ff86ea82704,96018323,0,0x0,8
tick,0x7ff86ea82704,96020313,0,0x0,8
tick,0x7ff86ea82704,96022225,0,0x0,8
tick,0x7ff86ea82704,96024212,0,0x0,8
tick,0x7ff86ea82704,96026306,0,0x0,8
tick,0x7ff86ea82704,96028286,0,0x0,8
tick,0x7ff86ea82704,96030278,0,0x0,8
tick,0x7ff86ea82704,96032252,0,0x0,8
tick,0x7ff86ea82704,96034228,0,0x0,8
tick,0x7ff86ea82704,96036241,0,0x0,8
tick,0x7ff86ea82704,96038247,0,0x0,8
tick,0x7ff86ea82704,96040143,0,0x0,8
tick,0x7ff86ea82704,96042216,0,0x0,8
tick,0x7ff86ea82704,96044208,0,0x0,8
tick,0x7ff86ea82704,96046225,0,0x0,8
tick,0x7ff86ea82704,96048197,0,0x0,8
tick,0x7ff86ea82704,96050227,0,0x0,8
tick,0x7ff86ea82704,96052288,0,0x0,8
tick,0x7ff86ea82704,96054113,0,0x0,8
tick,0x7ff86ea82704,96056278,0,0x0,8
tick,0x7ff86ea82704,96058150,0,0x0,8
tick,0x7ff86ea82704,96060264,0,0x0,8
tick,0x7ff86ea82704,96062116,0,0x0,8
tick,0x7ff86ea82704,96064298,0,0x0,8
tick,0x7ff86ea82704,96066483,0,0x0,8
tick,0x7ff86ea82704,96068232,0,0x0,8
tick,0x7ff86ea82704,96070591,0,0x0,8
tick,0x7ff86ea82704,96072264,0,0x0,8
tick,0x7ff86ea82704,96074185,0,0x0,8
tick,0x7ff86ea82704,96076296,0,0x0,8
tick,0x7ff86ea82704,96078099,0,0x0,8
tick,0x7ff86ea82704,96080046,0,0x0,8
tick,0x7ff86ea82704,96082217,0,0x0,8
tick,0x7ff86ea82704,96084226,0,0x0,8
tick,0x7ff86ea82704,96086039,0,0x0,8
tick,0x7ff86ea82704,96088330,0,0x0,8
tick,0x7ff86ea82704,96090118,0,0x0,8
tick,0x7ff86ea82704,96092407,0,0x0,8
tick,0x7ff86ea82704,96094212,0,0x0,8
tick,0x7ff86ea82704,96096447,0,0x0,8
tick,0x7ff86ea82704,96098236,0,0x0,8
tick,0x7ff86ea82704,96100261,0,0x0,8
tick,0x7ff86ea82704,96102233,0,0x0,8
tick,0x7ff86ea82704,96104084,0,0x0,8
tick,0x7ff86ea82704,96106332,0,0x0,8
tick,0x7ff86ea82704,96111079,0,0x0,8
tick,0x7ff86ea82704,96113480,0,0x0,8
tick,0x7ff86ea82704,96115116,0,0x0,8
tick,0x7ff86ea82704,96117382,0,0x0,8
tick,0x7ff86ea82704,96119519,0,0x0,8
tick,0x7ff86ea82704,96121467,0,0x0,8
tick,0x7ff86ea82704,96123375,0,0x0,8
tick,0x7ff86ea82704,96125348,0,0x0,8
tick,0x7ff86ea82704,96127422,0,0x0,8
tick,0x7ff86ea82704,96129740,0,0x0,8
tick,0x7ff86ea82704,96130903,0,0x0,8
tick,0x7ff86ea82704,96133050,0,0x0,8
tick,0x7ff86ea82704,96134904,0,0x0,8
tick,0x7ff86ea82704,96137070,0,0x0,8
tick,0x7ff86ea82704,96139122,0,0x0,8
tick,0x7ff86ea82704,96141202,0,0x0,8
tick,0x7ff86ea82704,96142878,0,0x0,8
tick,0x7ff86ea82704,96145134,0,0x0,8
tick,0x7ff86ea82704,96147130,0,0x0,8
tick,0x7ff86ea82704,96148949,0,0x0,8
tick,0x7ff86ea82704,96151036,0,0x0,8
tick,0x7ff86ea82704,96153037,0,0x0,8
tick,0x7ff86ea82704,96155137,0,0x0,8
tick,0x7ff86ea82704,96157191,0,0x0,8
tick,0x7ff86ea82704,96159478,0,0x0,8
tick,0x7ff86ea82704,96161134,0,0x0,8
tick,0x7ff86ea82704,96163098,0,0x0,8
tick,0x7ff86ea82704,96165126,0,0x0,8
tick,0x7ff86ea82704,96167048,0,0x0,8
tick,0x7ff86ea82704,96169111,0,0x0,8
tick,0x7ff86ea82704,96171165,0,0x0,8
tick,0x7ff86ea82704,96173254,0,0x0,8
tick,0x7ff86ea82704,96175145,0,0x0,8
tick,0x7ff86ea82704,96176909,0,0x0,8
tick,0x7ff86ea82704,96179038,0,0x0,8
tick,0x7ff86ea82704,96180943,0,0x0,8
tick,0x7ff86ea82704,96182882,0,0x0,8
tick,0x7ff86ea82704,96184814,0,0x0,8
tick,0x7ff86ea82704,96187036,0,0x0,8
tick,0x7ff86ea82704,96188729,0,0x0,8
tick,0x7ff86ea82704,96190990,0,0x0,8
tick,0x7ff86ea82704,96192855,0,0x0,8
tick,0x7ff86ea82704,96195068,0,0x0,8
tick,0x7ff86ea82704,96196696,0,0x0,8
tick,0x7ff86ea82704,96198995,0,0x0,8
tick,0x7ff86ea82704,96200741,0,0x0,8
tick,0x7ff86ea82704,96202893,0,0x0,8
tick,0x7ff86ea82704,96204864,0,0x0,8
tick,0x7ff86ea82704,96206848,0,0x0,8
tick,0x7ff86ea82704,96208735,0,0x0,8
tick,0x7ff86ea82704,96210787,0,0x0,8
tick,0x7ff86ea82704,96212613,0,0x0,8
tick,0x7ff86ea82704,96214884,0,0x0,8
tick,0x7ff86ea82704,96216704,0,0x0,8
tick,0x7ff86ea82704,96218832,0,0x0,8
tick,0x7ff86ea82704,96220681,0,0x0,8
tick,0x7ff86ea82704,96222739,0,0x0,8
tick,0x7ff86ea82704,96224585,0,0x0,8
tick,0x7ff86ea82704,96226785,0,0x0,8
tick,0x7ff86ea82704,96228822,0,0x0,8
tick,0x7ff86ea82704,96230674,0,0x0,8
tick,0x7ff86ea82704,96232662,0,0x0,8
tick,0x7ff86ea82704,96234762,0,0x0,8
tick,0x7ff86ea82704,96236637,0,0x0,8
tick,0x7ff86ea82704,96238791,0,0x0,8
tick,0x7ff86ea82704,96240683,0,0x0,8
tick,0x7ff86ea82704,96242825,0,0x0,8
tick,0x7ff86ea82704,96244779,0,0x0,8
tick,0x7ff86ea82704,96246854,0,0x0,8
tick,0x7ff86ea82704,96248790,0,0x0,8
tick,0x7ff86ea82704,96250819,0,0x0,8
tick,0x7ff86ea82704,96252606,0,0x0,8
tick,0x7ff86ea82704,96254748,0,0x0,8
tick,0x7ff86ea82704,96256778,0,0x0,8
tick,0x7ff86ea82704,96258607,0,0x0,8
tick,0x7ff86ea82704,96260872,0,0x0,8
tick,0x7ff86ea82704,96262790,0,0x0,8
tick,0x7ff86ea82704,96264559,0,0x0,8
tick,0x7ff86ea82704,96266717,0,0x0,8
tick,0x7ff86ea82704,96268516,0,0x0,8
tick,0x7ff86ea82704,96270831,0,0x0,8
tick,0x7ff86ea82704,96272487,0,0x0,8
tick,0x7ff86ea82704,96274666,0,0x0,8
tick,0x7ff86ea82704,96276722,0,0x0,8
tick,0x7ff86ea82704,96278811,0,0x0,8
tick,0x7ff86ea82704,96280618,0,0x0,8
tick,0x7ff86ea82704,96282546,0,0x0,8
tick,0x7ff86ea82704,96284637,0,0x0,8
tick,0x7ff86ea82704,96286903,0,0x0,8
tick,0x7ff86ea82704,96288968,0,0x0,8
tick,0x7ff86ea82704,96290704,0,0x0,8
tick,0x7ff86ea82704,96292546,0,0x0,8
tick,0x7ff86ea82704,96294937,0,0x0,8
tick,0x7ff86ea82704,96296812,0,0x0,8
tick,0x7ff86ea82704,96298562,0,0x0,8
tick,0x7ff86ea82704,96300958,0,0x0,8
tick,0x7ff86ea82704,96302581,0,0x0,8
tick,0x7ff86ea82704,96304755,0,0x0,8
tick,0x7ff86ea82704,96306587,0,0x0,8
tick,0x7ff86ea82704,96308570,0,0x0,8
tick,0x7ff86ea82704,96310661,0,0x0,8
tick,0x7ff86ea82704,96312711,0,0x0,8
tick,0x7ff86ea82704,96314509,0,0x0,8
tick,0x7ff86ea82704,96316780,0,0x0,8
tick,0x7ff86ea82704,96318774,0,0x0,8
tick,0x7ff86ea82704,96320742,0,0x0,8
tick,0x7ff86ea82704,96322715,0,0x0,8
tick,0x7ff86ea82704,96324437,0,0x0,8
tick,0x7ff86ea82704,96326703,0,0x0,8
tick,0x7ff86ea82704,96328469,0,0x0,8
tick,0x7ff86ea82704,96330640,0,0x0,8
tick,0x7ff86ea82704,96332656,0,0x0,8
tick,0x7ff86ea82704,96334553,0,0x0,8
tick,0x7ff86ea82704,96336510,0,0x0,8
tick,0x7ff86ea82704,96338498,0,0x0,8
tick,0x7ff86ea82704,96340538,0,0x0,8
tick,0x7ff86ea82704,96342597,0,0x0,8
tick,0x7ff86ea82704,96344573,0,0x0,8
tick,0x7ff86ea82704,96346617,0,0x0,8
tick,0x7ff86ea82704,96348478,0,0x0,8
tick,0x7ff86ea82704,96350425,0,0x0,8
tick,0x7ff86ea82704,96352525,0,0x0,8
tick,0x7ff86ea82704,96354764,0,0x0,8
tick,0x7ff86ea82704,96356827,0,0x0,8
tick,0x7ff86ea82704,96358682,0,0x0,8
tick,0x7ff86ea82704,96360767,0,0x0,8
tick,0x7ff86ea82704,96362574,0,0x0,8
tick,0x7ff86ea82704,96364614,0,0x0,8
tick,0x7ff86ea82704,96366467,0,0x0,8
tick,0x7ff86ea82704,96368871,0,0x0,8
tick,0x7ff86ea82704,96370458,0,0x0,8
tick,0x7ff86ea82704,96372598,0,0x0,8
tick,0x7ff86ea82704,96374271,0,0x0,8
tick,0x7ff86ea82704,96376418,0,0x0,8
tick,0x7ff86ea82704,96378420,0,0x0,8
tick,0x7ff86ea82704,96380354,0,0x0,8
tick,0x7ff86ea82704,96382316,0,0x0,8
tick,0x7ff86ea82704,96384417,0,0x0,8
tick,0x7ff86ea82704,96386514,0,0x0,8
tick,0x7ff86ea82704,96388258,0,0x0,8
tick,0x7ff86ea82704,96390624,0,0x0,8
tick,0x7ff86ea82704,96392374,0,0x0,8
tick,0x7ff86ea82704,96394450,0,0x0,8
tick,0x7ff86ea82704,96396437,0,0x0,8
tick,0x7ff86ea82704,96398192,0,0x0,8
tick,0x7ff86ea82704,96400345,0,0x0,8
tick,0x7ff86ea82704,96402219,0,0x0,8
tick,0x7ff86ea82704,96404407,0,0x0,8
tick,0x7ff86ea82704,96406194,0,0x0,8
tick,0x7ff86ea82704,96408321,0,0x0,8
tick,0x7ff86ea82704,96410348,0,0x0,8
tick,0x7ff86ea82704,96412180,0,0x0,8
tick,0x7ff86ea82704,96414284,0,0x0,8
tick,0x7ff86ea82704,96416333,0,0x0,8
tick,0x7ff86ea82704,96418408,0,0x0,8
tick,0x7ff86ea82704,96420890,0,0x0,8
tick,0x7ff86ea82704,96422371,0,0x0,8
tick,0x7ff86ea82704,96424124,0,0x0,8
tick,0x7ff86ea82704,96426381,0,0x0,8
tick,0x7ff86ea82704,96428260,0,0x0,8
tick,0x7ff86ea82704,96430086,0,0x0,8
tick,0x7ff86ea82704,96432392,0,0x0,8
tick,0x7ff86ea82704,96434322,0,0x0,8
tick,0x7ff86ea82704,96436363,0,0x0,8
tick,0x7ff86ea82704,96438144,0,0x0,8
tick,0x7ff86ea82704,96440274,0,0x0,8
tick,0x7ff86ea82704,96442081,0,0x0,8
tick,0x7ff86ea82704,96444285,0,0x0,8
tick,0x7ff86ea82704,96446111,0,0x0,8
tick,0x7ff86ea82704,96448370,0,0x0,8
tick,0x7ff86ea82704,96450241,0,0x0,8
tick,0x7ff86ea82704,96452202,0,0x0,8
tick,0x7ff86ea82704,96454158,0,0x0,8
tick,0x7ff86ea82704,96456517,0,0x0,8
tick,0x7ff86ea82704,96458175,0,0x0,8
tick,0x7ff86ea82704,96460190,0,0x0,8
tick,0x7ff86ea82704,96462094,0,0x0,8
tick,0x7ff86ea82704,96464231,0,0x0,8
tick,0x7ff86ea82704,96466249,0,0x0,8
tick,0x7ff86ea82704,96468323,0,0x0,8
tick,0x7ff86ea82704,96470142,0,0x0,8
tick,0x7ff86ea82704,96472121,0,0x0,8
tick,0x7ff86ea82704,96474121,0,0x0,8
tick,0x7ff86ea82704,96476263,0,0x0,8
tick,0x7ff86ea82704,96478071,0,0x0,8
tick,0x7ff86ea82704,96480212,0,0x0,8
tick,0x7ff86ea82704,96481988,0,0x0,8
tick,0x7ff86ea82704,96484164,0,0x0,8
tick,0x7ff86ea82704,96486207,0,0x0,8
tick,0x7ff86ea82704,96488211,0,0x0,8
tick,0x7ff86ea82704,96489999,0,0x0,8
tick,0x7ff86ea82704,96492211,0,0x0,8
tick,0x7ff86ea82704,96493972,0,0x0,8
tick,0x7ff86ea82704,96496238,0,0x0,8
tick,0x7ff86ea82704,96498097,0,0x0,8
tick,0x7ff86ea82704,96499995,0,0x0,8
tick,0x7ff86ea82704,96502028,0,0x0,8
tick,0x7ff86ea82704,96504164,0,0x0,8
tick,0x7ff86ea82704,96506280,0,0x0,8
tick,0x7ff86ea82704,96508273,0,0x0,8
tick,0x7ff86ea82704,96509948,0,0x0,8
tick,0x7ff86ea82704,96512108,0,0x0,8
tick,0x7ff86ea82704,96514038,0,0x0,8
tick,0x7ff86ea82704,96516115,0,0x0,8
tick,0x7ff86ea82704,96518005,0,0x0,8
tick,0x7ff86ea82704,96520219,0,0x0,8
tick,0x7ff86ea82704,96521978,0,0x0,8
tick,0x7ff86ea82704,96524199,0,0x0,8
tick,0x7ff86ea82704,96525927,0,0x0,8
tick,0x7ff86ea82704,96528403,0,0x0,8
tick,0x7ff86ea82704,96530243,0,0x0,8
tick,0x7ff86ea82704,96532096,0,0x0,8
tick,0x7ff86ea82704,96534035,0,0x0,8
tick,0x7ff86ea82704,96535971,0,0x0,8
tick,0x7ff86ea82704,96538127,0,0x0,8
tick,0x7ff86ea82704,96540151,0,0x0,8
tick,0x7ff86ea82704,96542206,0,0x0,8
tick,0x7ff86ea82704,96544037,0,0x0,8
tick,0x7ff86ea82704,96546133,0,0x0,8
tick,0x7ff86ea82704,96547893,0,0x0,8
tick,0x7ff86ea82704,96550051,0,0x0,8
tick,0x7ff86ea82704,96552134,0,0x0,8
tick,0x7ff86ea82704,96553814,0,0x0,8
tick,0x7ff86ea82704,96556155,0,0x0,8
tick,0x7ff86ea82704,96557939,0,0x0,8
tick,0x7ff86ea82704,96560241,0,0x0,8
tick,0x7ff86ea82704,96562173,0,0x0,8
tick,0x7ff86ea82704,96564151,0,0x0,8
tick,0x7ff86ea82704,96565759,0,0x0,8
tick,0x7ff86ea82704,96567967,0,0x0,8
tick,0x7ff86ea82704,96570033,0,0x0,8
tick,0x7ff86ea82704,96572293,0,0x0,8
tick,0x7ff86ea82704,96574113,0,0x0,8
tick,0x7ff86ea82704,96575987,0,0x0,8
tick,0x7ff86ea82704,96578041,0,0x0,8
tick,0x7ff86ea82704,96579881,0,0x0,8
tick,0x7ff86ea82704,96582200,0,0x0,8
tick,0x7ff86ea82704,96583981,0,0x0,8
tick,0x7ff86ea82704,96586205,0,0x0,8
tick,0x7ff86ea82704,96587762,0,0x0,8
tick,0x7ff86ea82704,96589839,0,0x0,8
tick,0x7ff86ea82704,96592012,0,0x0,8
tick,0x7ff86ea82704,96594027,0,0x0,8
tick,0x7ff86ea82704,96596005,0,0x0,8
tick,0x7ff86ea82704,96597750,0,0x0,8
tick,0x7ff86ea82704,96599607,0,0x0,8
tick,0x7ff86ea82704,96601970,0,0x0,8
tick,0x7ff86ea82704,96603614,0,0x0,8
tick,0x7ff86ea82704,96605947,0,0x0,8
tick,0x7ff86ea82704,96607662,0,0x0,8
tick,0x7ff86ea82704,96609841,0,0x0,8
tick,0x7ff86ea82704,96611767,0,0x0,8
tick,0x7ff86ea82704,96613798,0,0x0,8
tick,0x7ff86ea82704,96615647,0,0x0,8
tick,0x7ff86ea82704,96617909,0,0x0,8
tick,0x7ff86ea82704,96619688,0,0x0,8
tick,0x7ff86ea82704,96621994,0,0x0,8
tick,0x7ff86ea82704,96623829,0,0x0,8
tick,0x7ff86ea82704,96625955,0,0x0,8
tick,0x7ff86ea82704,96627899,0,0x0,8
tick,0x7ff86ea82704,96630035,0,0x0,8
tick,0x7ff86ea82704,96631615,0,0x0,8
tick,0x7ff86ea82704,96633893,0,0x0,8
tick,0x7ff86ea82704,96635706,0,0x0,8
tick,0x7ff86ea82704,96638109,0,0x0,8
tick,0x7ff86ea82704,96639935,0,0x0,8
tick,0x7ff86ea82704,96641578,0,0x0,8
tick,0x7ff86ea82704,96643850,0,0x0,8
tick,0x7ff86ea82704,96646034,0,0x0,8
tick,0x7ff86ea82704,96647598,0,0x0,8
tick,0x7ff86ea82704,96649720,0,0x0,8
tick,0x7ff86ea82704,96651611,0,0x0,8
tick,0x7ff86ea82704,96653695,0,0x0,8
tick,0x7ff86ea82704,96655976,0,0x0,8
tick,0x7ff86ea82704,96657669,0,0x0,8
tick,0x7ff86ea82704,96659677,0,0x0,8
tick,0x7ff86ea82704,96661733,0,0x0,8
tick,0x7ff86ea82704,96663852,0,0x0,8
tick,0x7ff86ea82704,96665602,0,0x0,8
tick,0x7ff86ea82704,96667634,0,0x0,8
tick,0x7ff86ea82704,96669723,0,0x0,8
tick,0x7ff86ea82704,96671639,0,0x0,8
tick,0x7ff86ea82704,96673720,0,0x0,8
tick,0x7ff86ea82704,96675478,0,0x0,8
tick,0x7ff86ea82704,96677813,0,0x0,8
tick,0x7ff86ea82704,96679526,0,0x0,8
tick,0x7ff86ea82704,96681676,0,0x0,8
tick,0x7ff86ea82704,96683546,0,0x0,8
tick,0x7ff86ea82704,96685467,0,0x0,8
tick,0x7ff86ea82704,96687538,0,0x0,8
tick,0x7ff86ea82704,96689635,0,0x0,8
tick,0x7ff86ea82704,96691841,0,0x0,8
tick,0x7ff86ea82704,96693869,0,0x0,8
tick,0x7ff86ea82704,96695548,0,0x0,8
tick,0x7ff86ea82704,96697482,0,0x0,8
tick,0x7ff86ea82704,96699468,0,0x0,8
tick,0x7ff86ea82704,96701623,0,0x0,8
tick,0x7ff86ea82704,96703798,0,0x0,8
tick,0x7ff86ea82704,96705673,0,0x0,8
tick,0x7ff86ea82704,96707833,0,0x0,8
tick,0x7ff86ea82704,96709607,0,0x0,8
tick,0x7ff86ea82704,96711610,0,0x0,8
tick,0x7ff86ea82704,96713768,0,0x0,8
tick,0x7ff86ea82704,96715408,0,0x0,8
tick,0x7ff86ea82704,96717538,0,0x0,8
tick,0x7ff86ea82704,96719525,0,0x0,8
tick,0x7ff86ea82704,96721339,0,0x0,8
tick,0x7ff86ea82704,96723544,0,0x0,8
tick,0x7ff86ea82704,96725366,0,0x0,8
tick,0x7ff86ea82704,96727517,0,0x0,8
tick,0x7ff86ea82704,96729565,0,0x0,8
tick,0x7ff86ea82704,96731456,0,0x0,8
tick,0x7ff86ea82704,96733530,0,0x0,8
tick,0x7ff86ea82704,96735445,0,0x0,8
tick,0x7ff86ea82704,96737404,0,0x0,8
tick,0x7ff86ea82704,96739496,0,0x0,8
tick,0x7ff86ea82704,96741312,0,0x0,8
tick,0x7ff86ea82704,96743350,0,0x0,8
tick,0x7ff86ea82704,96745550,0,0x0,8
tick,0x7ff86ea82704,96747415,0,0x0,8
tick,0x7ff86ea82704,96749471,0,0x0,8
tick,0x7ff86ea82704,96751638,0,0x0,8
tick,0x7ff86ea82704,96753306,0,0x0,8
tick,0x7ff86ea82704,96755425,0,0x0,8
tick,0x7ff86ea82704,96757272,0,0x0,8
tick,0x7ff86ea82704,96759355,0,0x0,8
tick,0x7ff86ea82704,96761293,0,0x0,8
tick,0x7ff86ea82704,96763294,0,0x0,8
tick,0x7ff86ea82704,96765414,0,0x0,8
tick,0x7ff86ea82704,96767366,0,0x0,8
tick,0x7ff86ea82704,96769399,0,0x0,8
tick,0x7ff86ea82704,96771343,0,0x0,8
tick,0x7ff86ea82704,96773446,0,0x0,8
tick,0x7ff86ea82704,96775443,0,0x0,8
tick,0x7ff86ea82704,96777401,0,0x0,8
tick,0x7ff86ea82704,96779338,0,0x0,8
tick,0x7ff86ea82704,96781332,0,0x0,8
tick,0x7ff86ea82704,96783423,0,0x0,8
tick,0x7ff86ea82704,96785312,0,0x0,8
tick,0x7ff86ea82704,96787278,0,0x0,8
tick,0x7ff86ea82704,96789393,0,0x0,8
tick,0x7ff86ea82704,96791500,0,0x0,8
tick,0x7ff86ea82704,96793261,0,0x0,8
tick,0x7ff86ea82704,96795185,0,0x0,8
tick,0x7ff86ea82704,96797247,0,0x0,8
tick,0x7ff86ea82704,96799112,0,0x0,8
tick,0x7ff86ea82704,96801356,0,0x0,8
tick,0x7ff86ea82704,96803292,0,0x0,8
tick,0x7ff86ea82704,96805185,0,0x0,8
tick,0x7ff86ea82704,96807131,0,0x0,8
tick,0x7ff86ea82704,96809181,0,0x0,8
tick,0x7ff86ea82704,96811385,0,0x0,8
tick,0x7ff86ea82704,96813204,0,0x0,8
tick,0x7ff86ea82704,96815271,0,0x0,8
tick,0x7ff86ea82704,96817288,0,0x0,8
tick,0x7ff86ea82704,96819285,0,0x0,8
tick,0x7ff86ea82704,96821275,0,0x0,8
tick,0x7ff86ea82704,96823174,0,0x0,8
tick,0x7ff86ea82704,96825285,0,0x0,8
tick,0x7ff86ea82704,96827207,0,0x0,8
tick,0x7ff86ea82704,96829303,0,0x0,8
tick,0x7ff86ea82704,96831240,0,0x0,8
tick,0x7ff86ea82704,96833228,0,0x0,8
tick,0x7ff86ea82704,96835186,0,0x0,8
tick,0x7ff86ea82704,96837262,0,0x0,8
tick,0x7ff86ea82704,96839091,0,0x0,8
tick,0x7ff86ea82704,96841165,0,0x0,8
tick,0x7ff86ea82704,96843081,0,0x0,8
tick,0x7ff86ea82704,96845282,0,0x0,8
tick,0x7ff86ea82704,96847033,0,0x0,8
tick,0x7ff86ea82704,96849087,0,0x0,8
tick,0x7ff86ea82704,96851255,0,0x0,8
tick,0x7ff86ea82704,96853253,0,0x0,8
tick,0x7ff86ea82704,96855261,0,0x0,8
tick,0x7ff86ea82704,96856962,0,0x0,8
tick,0x7ff86ea82704,96858978,0,0x0,8
tick,0x7ff86ea82704,96861002,0,0x0,8
tick,0x7ff86ea82704,96863153,0,0x0,8
tick,0x7ff86ea82704,96865121,0,0x0,8
tick,0x7ff86ea82704,96866953,0,0x0,8
tick,0x7ff86ea82704,96869065,0,0x0,8
tick,0x7ff86ea82704,96871006,0,0x0,8
tick,0x7ff86ea82704,96873151,0,0x0,8
tick,0x7ff86ea82704,96875091,0,0x0,8
tick,0x7ff86ea82704,96877137,0,0x0,8
tick,0x7ff86ea82704,96879090,0,0x0,8
tick,0x7ff86ea82704,96880988,0,0x0,8
tick,0x7ff86ea82704,96883083,0,0x0,8
tick,0x7ff86ea82704,96885058,0,0x0,8
tick,0x7ff86ea82704,96887149,0,0x0,8
tick,0x7ff86ea82704,96889179,0,0x0,8
tick,0x7ff86ea82704,96891011,0,0x0,8
tick,0x7ff86ea82704,96893138,0,0x0,8
tick,0x7ff86ea82704,96894964,0,0x0,8
tick,0x7ff86ea82704,96896960,0,0x0,8
tick,0x7ff86ea82704,96898892,0,0x0,8
tick,0x7ff86ea82704,96900966,0,0x0,8
tick,0x7ff86ea82704,96902867,0,0x0,8
tick,0x7ff86ea82704,96904898,0,0x0,8
tick,0x7ff86ea82704,96907013,0,0x0,8
tick,0x7ff86ea82704,96908867,0,0x0,8
tick,0x7ff86ea82704,96910892,0,0x0,8
tick,0x7ff86ea82704,96912988,0,0x0,8
tick,0x7ff86ea82704,96914812,0,0x0,8
tick,0x7ff86ea82704,96916809,0,0x0,8
tick,0x7ff86ea82704,96918853,0,0x0,8
tick,0x7ff86ea82704,96920840,0,0x0,8
tick,0x7ff86ea82704,96922782,0,0x0,8
tick,0x7ff86ea82704,96924953,0,0x0,8
tick,0x7ff86ea82704,96926830,0,0x0,8
tick,0x7ff86ea82704,96928804,0,0x0,8
tick,0x7ff86ea82704,96930837,0,0x0,8
tick,0x7ff86ea82704,96932755,0,0x0,8
tick,0x7ff86ea82704,96934931,0,0x0,8
tick,0x7ff86ea82704,96936868,0,0x0,8
tick,0x7ff86ea82704,96939087,0,0x0,8
tick,0x7ff86ea82704,96941021,0,0x0,8
tick,0x7ff86ea82704,96942853,0,0x0,8
tick,0x7ff86ea82704,96944777,0,0x0,8
tick,0x7ff86ea82704,96947121,0,0x0,8
tick,0x7ff86ea82704,96948852,0,0x0,8
tick,0x7ff86ea82704,96950761,0,0x0,8
tick,0x7ff86ea82704,96952867,0,0x0,8
tick,0x7ff86ea82704,96954785,0,0x0,8
tick,0x7ff86ea82704,96956824,0,0x0,8
tick,0x7ff86ea82704,96959007,0,0x0,8
tick,0x7ff86ea82704,96960837,0,0x0,8
tick,0x7ff86ea82704,96962853,0,0x0,8
tick,0x7ff86ea82704,96964871,0,0x0,8
tick,0x7ff86ea82704,96966902,0,0x0,8
tick,0x7ff86ea82704,96968810,0,0x0,8
tick,0x7ff86ea82704,96970847,0,0x0,8
tick,0x7ff86ea82704,96973025,0,0x0,8
tick,0x7ff86ea82704,96974854,0,0x0,8
tick,0x7ff86ea82704,96976808,0,0x0,8
tick,0x7ff86ea82704,96978752,0,0x0,8
tick,0x7ff86ea82704,96980666,0,0x0,8
tick,0x7ff86ea82704,96982858,0,0x0,8
tick,0x7ff86ea82704,96984856,0,0x0,8
tick,0x7ff86ea82704,96986798,0,0x0,8
tick,0x7ff86ea82704,96989071,0,0x0,8
tick,0x7ff86ea82704,96990980,0,0x0,8
tick,0x7ff86ea82704,96992853,0,0x0,8
tick,0x7ff86ea82704,96994726,0,0x0,8
tick,0x7ff86ea82704,96996866,0,0x0,8
tick,0x7ff86ea82704,96998800,0,0x0,8
tick,0x7ff86ea82704,97000984,0,0x0,8
tick,0x7ff86ea82704,97002860,0,0x0,8
tick,0x7ff86ea82704,97004719,0,0x0,8
tick,0x7ff86ea82704,97006725,0,0x0,8
tick,0x7ff86ea82704,97008752,0,0x0,8
tick,0x7ff86ea82704,97010754,0,0x0,8
tick,0x7ff86ea82704,97012524,0,0x0,8
tick,0x7ff86ea82704,97014664,0,0x0,8
tick,0x7ff86ea82704,97016567,0,0x0,8
tick,0x7ff86ea82704,97018637,0,0x0,8
tick,0x7ff86ea82704,97020838,0,0x0,8
tick,0x7ff86ea82704,97022705,0,0x0,8
tick,0x7ff86ea82704,97024736,0,0x0,8
tick,0x7ff86ea82704,97026535,0,0x0,8
tick,0x7ff86ea82704,97028513,0,0x0,8
tick,0x7ff86ea82704,97030631,0,0x0,8
tick,0x7ff86ea82704,97032503,0,0x0,8
tick,0x7ff86ea82704,97034583,0,0x0,8
tick,0x7ff86ea82704,97036539,0,0x0,8
tick,0x7ff86ea82704,97038505,0,0x0,8
tick,0x7ff86ea82704,97040598,0,0x0,8
tick,0x7ff86ea82704,97042569,0,0x0,8
tick,0x7ff86ea82704,97044553,0,0x0,8
tick,0x7ff86ea82704,97046549,0,0x0,8
tick,0x7ff86ea82704,97048638,0,0x0,8
tick,0x7ff86ea82704,97050499,0,0x0,8
tick,0x7ff86ea82704,97052489,0,0x0,8
tick,0x7ff86ea82704,97054582,0,0x0,8
tick,0x7ff86ea82704,97056574,0,0x0,8
tick,0x7ff86ea82704,97058619,0,0x0,8
tick,0x7ff86ea82704,97060484,0,0x0,8
tick,0x7ff86ea82704,97062576,0,0x0,8
tick,0x7ff86ea82704,97064414,0,0x0,8
tick,0x7ff86ea82704,97066500,0,0x0,8
tick,0x7ff86ea82704,97068726,0,0x0,8
tick,0x7ff86ea82704,97072632,0,0x0,8
tick,0x7ff86ea82704,97074410,0,0x0,8
tick,0x7ff86ea82704,97076546,0,0x0,8
tick,0x7ff86ea82704,97078410,0,0x0,8
tick,0x7ff86ea82704,97080638,0,0x0,8
tick,0x7ff86ea82704,97082406,0,0x0,8
tick,0x7ff86ea82704,97084458,0,0x0,8
tick,0x7ff86ea82704,97086540,0,0x0,8
tick,0x7ff86ea82704,97088435,0,0x0,8
tick,0x7ff86ea82704,97090422,0,0x0,8
tick,0x7ff86ea82704,97092629,0,0x0,8
tick,0x7ff86ea82704,97094474,0,0x0,8
tick,0x7ff86ea82704,97096684,0,0x0,8
tick,0x7ff86ea82704,97098617,0,0x0,8
tick,0x7ff86ea82704,97100588,0,0x0,8
tick,0x7ff86ea82704,97103198,0,0x0,8
tick,0x7ff86ea82704,97105526,0,0x0,8
tick,0x7ff86ea82704,97107492,0,0x0,8
tick,0x7ff86ea82704,97109244,0,0x0,8
tick,0x7ff86ea82704,97111050,0,0x0,8
tick,0x7ff86ea82704,97113935,0,0x0,8
tick,0x7ff86ea82704,97116306,0,0x0,8
tick,0x7ff86ea82704,97117317,0,0x0,8
tick,0x7ff86ea82704,97119303,0,0x0,8
tick,0x7ff86ea82704,97121409,0,0x0,8
tick,0x7ff86ea82704,97123287,0,0x0,8
tick,0x7ff86ea82704,97125365,0,0x0,8
tick,0x7ff86ea82704,97127163,0,0x0,8
tick,0x7ff86ea82704,97129263,0,0x0,8
tick,0x7ff86ea82704,97131116,0,0x0,8
tick,0x7ff86ea82704,97133459,0,0x0,8
tick,0x7ff86ea82704,97135466,0,0x0,8
tick,0x7ff86ea82704,97137162,0,0x0,8
tick,0x7ff86ea82704,97139228,0,0x0,8
tick,0x7ff86ea82704,97141333,0,0x0,8
tick,0x7ff86ea82704,97143141,0,0x0,8
tick,0x7ff86ea82704,97145146,0,0x0,8
tick,0x7ff86ea82704,97147397,0,0x0,8
tick,0x7ff86ea82704,97149169,0,0x0,8
tick,0x7ff86ea82704,97151166,0,0x0,8
tick,0x7ff86ea82704,97153289,0,0x0,8
tick,0x7ff86ea82704,97155027,0,0x0,8
tick,0x7ff86ea82704,97157273,0,0x0,8
tick,0x7ff86ea82704,97159085,0,0x0,8
tick,0x7ff86ea82704,97161232,0,0x0,8
tick,0x7ff86ea82704,97163146,0,0x0,8
tick,0x7ff86ea82704,97165196,0,0x0,8
tick,0x7ff86ea82704,97167243,0,0x0,8
tick,0x7ff86ea82704,97169066,0,0x0,8
tick,0x7ff86ea82704,97171297,0,0x0,8
tick,0x7ff86ea82704,97173021,0,0x0,8
tick,0x7ff86ea82704,97175162,0,0x0,8
tick,0x7ff86ea82704,97177288,0,0x0,8
tick,0x7ff86ea82704,97179318,0,0x0,8
tick,0x7ff86ea82704,97181159,0,0x0,8
tick,0x7ff86ea82704,97183089,0,0x0,8
tick,0x7ff86ea82704,97185028,0,0x0,8
tick,0x7ff86ea82704,97187090,0,0x0,8
tick,0x7ff86ea82704,97188982,0,0x0,8
tick,0x7ff86ea82704,97191168,0,0x0,8
tick,0x7ff86ea82704,97193046,0,0x0,8
tick,0x7ff86ea82704,97194988,0,0x0,8
tick,0x7ff86ea82704,97197123,0,0x0,8
tick,0x7ff86ea82704,97199197,0,0x0,8
tick,0x7ff86ea82704,97200895,0,0x0,8
tick,0x7ff86ea82704,97203154,0,0x0,8
tick,0x7ff86ea82704,97205018,0,0x0,8
tick,0x7ff86ea82704,97207099,0,0x0,8
tick,0x7ff86ea82704,97208928,0,0x0,8
tick,0x7ff86ea82704,97211058,0,0x0,8
tick,0x7ff86ea82704,97212894,0,0x0,8
tick,0x7ff86ea82704,97215068,0,0x0,8
tick,0x7ff86ea82704,97216892,0,0x0,8
tick,0x7ff86ea82704,97219050,0,0x0,8
tick,0x7ff86ea82704,97220968,0,0x0,8
tick,0x7ff86ea82704,97222925,0,0x0,8
tick,0x7ff86ea82704,97225020,0,0x0,8
tick,0x7ff86ea82704,97226811,0,0x0,8
tick,0x7ff86ea82704,97228960,0,0x0,8
tick,0x7ff86ea82704,97230950,0,0x0,8
tick,0x7ff86ea82704,97232911,0,0x0,8
tick,0x7ff86ea82704,97235107,0,0x0,8
tick,0x7ff86ea82704,97236857,0,0x0,8
tick,0x7ff86ea82704,97238913,0,0x0,8
tick,0x7ff86ea82704,97240901,0,0x0,8
tick,0x7ff86ea82704,97242992,0,0x0,8
tick,0x7ff86ea82704,97244897,0,0x0,8
tick,0x7ff86ea82704,97246979,0,0x0,8
tick,0x7ff86ea82704,97249050,0,0x0,8
tick,0x7ff86ea82704,97250881,0,0x0,8
tick,0x7ff86ea82704,97253098,0,0x0,8
tick,0x7ff86ea82704,97254880,0,0x0,8
tick,0x7ff86ea82704,97256900,0,0x0,8
tick,0x7ff86ea82704,97258788,0,0x0,8
tick,0x7ff86ea82704,97260851,0,0x0,8
tick,0x7ff86ea82704,97262781,0,0x0,8
tick,0x7ff86ea82704,97264887,0,0x0,8
tick,0x7ff86ea82704,97266915,0,0x0,8
tick,0x7ff86ea82704,97268775,0,0x0,8
tick,0x7ff86ea82704,97270870,0,0x0,8
tick,0x7ff86ea82704,97272795,0,0x0,8
tick,0x7ff86ea82704,97275016,0,0x0,8
tick,0x7ff86ea82704,97276770,0,0x0,8
tick,0x7ff86ea82704,97278871,0,0x0,8
tick,0x7ff86ea82704,97280770,0,0x0,8
tick,0x7ff86ea82704,97282863,0,0x0,8
tick,0x7ff86ea82704,97284828,0,0x0,8
tick,0x7ff86ea82704,97286782,0,0x0,8
tick,0x7ff86ea82704,97288802,0,0x0,8
tick,0x7ff86ea82704,97290793,0,0x0,8
tick,0x7ff86ea82704,97292701,0,0x0,8
tick,0x7ff86ea82704,97294728,0,0x0,8
tick,0x7ff86ea82704,97296741,0,0x0,8
tick,0x7ff86ea82704,97298697,0,0x0,8
tick,0x7ff86ea82704,97300757,0,0x0,8
tick,0x7ff86ea82704,97302639,0,0x0,8
tick,0x7ff86ea82704,97304791,0,0x0,8
tick,0x7ff86ea82704,97306626,0,0x0,8
tick,0x7ff86ea82704,97308746,0,0x0,8
tick,0x7ff86ea82704,97310644,0,0x0,8
tick,0x7ff86ea82704,97312816,0,0x0,8
tick,0x7ff86ea82704,97314581,0,0x0,8
tick,0x7ff86ea82704,97316775,0,0x0,8
tick,0x7ff86ea82704,97318592,0,0x0,8
tick,0x7ff86ea82704,97320679,0,0x0,8
tick,0x7ff86ea82704,97322624,0,0x0,8
tick,0x7ff86ea82704,97324878,0,0x0,8
tick,0x7ff86ea82704,97326706,0,0x0,8
tick,0x7ff86ea82704,97328699,0,0x0,8
tick,0x7ff86ea82704,97330542,0,0x0,8
tick,0x7ff86ea82704,97332669,0,0x0,8
tick,0x7ff86ea82704,97334608,0,0x0,8
tick,0x7ff86ea82704,97336739,0,0x0,8
tick,0x7ff86ea82704,97338560,0,0x0,8
tick,0x7ff86ea82704,97340814,0,0x0,8
tick,0x7ff86ea82704,97342601,0,0x0,8
tick,0x7ff86ea82704,97344669,0,0x0,8
tick,0x7ff86ea82704,97346606,0,0x0,8
tick,0x7ff86ea82704,97348605,0,0x0,8
tick,0x7ff86ea82704,97350579,0,0x0,8
tick,0x7ff86ea82704,97352638,0,0x0,8
tick,0x7ff86ea82704,97354553,0,0x0,8
tick,0x7ff86ea82704,97356794,0,0x0,8
tick,0x7ff86ea82704,97358543,0,0x0,8
tick,0x7ff86ea82704,97360599,0,0x0,8
tick,0x7ff86ea82704,97362490,0,0x0,8
tick,0x7ff86ea82704,97364597,0,0x0,8
tick,0x7ff86ea82704,97366581,0,0x0,8
tick,0x7ff86ea82704,97368796,0,0x0,8
tick,0x7ff86ea82704,97370594,0,0x0,8
tick,0x7ff86ea82704,97372610,0,0x0,8
tick,0x7ff86ea82704,97374720,0,0x0,8
tick,0x7ff86ea82704,97376691,0,0x0,8
tick,0x7ff86ea82704,97378601,0,0x0,8
tick,0x7ff86ea82704,97380569,0,0x0,8
tick,0x7ff86ea82704,97382657,0,0x0,8
tick,0x7ff86ea82704,97384509,0,0x0,8
tick,0x7ff86ea82704,97386701,0,0x0,8
tick,0x7ff86ea82704,97388712,0,0x0,8
tick,0x7ff86ea82704,97390534,0,0x0,8
tick,0x7ff86ea82704,97392678,0,0x0,8
tick,0x7ff86ea82704,97394746,0,0x0,8
tick,0x7ff86ea82704,97396499,0,0x0,8
tick,0x7ff86ea82704,97398520,0,0x0,8
tick,0x7ff86ea82704,97400395,0,0x0,8
tick,0x7ff86ea82704,97402573,0,0x0,8
tick,0x7ff86ea82704,97404363,0,0x0,8
tick,0x7ff86ea82704,97406523,0,0x0,8
tick,0x7ff86ea82704,97408442,0,0x0,8
tick,0x7ff86ea82704,97410534,0,0x0,8
tick,0x7ff86ea82704,97412388,0,0x0,8
tick,0x7ff86ea82704,97414988,0,0x0,8
tick,0x7ff86ea82704,97416481,0,0x0,8
tick,0x7ff86ea82704,97418467,0,0x0,8
tick,0x7ff86ea82704,97420414,0,0x0,8
tick,0x7ff86ea82704,97422461,0,0x0,8
tick,0x7ff86ea82704,97424421,0,0x0,8
tick,0x7ff86ea82704,97426343,0,0x0,8
tick,0x7ff86ea82704,97428428,0,0x0,8
tick,0x7ff86ea82704,97430435,0,0x0,8
tick,0x7ff86ea82704,97432485,0,0x0,8
tick,0x7ff86ea82704,97434358,0,0x0,8
tick,0x7ff86ea82704,97436364,0,0x0,8
tick,0x7ff86ea82704,97438458,0,0x0,8
tick,0x7ff86ea82704,97440468,0,0x0,8
tick,0x7ff86ea82704,97442272,0,0x0,8
tick,0x7ff86ea82704,97444469,0,0x0,8
tick,0x7ff86ea82704,97446313,0,0x0,8
tick,0x7ff86ea82704,97448460,0,0x0,8
tick,0x7ff86ea82704,97450364,0,0x0,8
tick,0x7ff86ea82704,97452448,0,0x0,8
tick,0x7ff86ea82704,97454277,0,0x0,8
tick,0x7ff86ea82704,97456340,0,0x0,8
tick,0x7ff86ea82704,97458358,0,0x0,8
tick,0x7ff86ea82704,97460396,0,0x0,8
tick,0x7ff86ea82704,97462338,0,0x0,8
tick,0x7ff86ea82704,97464338,0,0x0,8
tick,0x7ff86ea82704,97466340,0,0x0,8
tick,0x7ff86ea82704,97468506,0,0x0,8
tick,0x7ff86ea82704,97470355,0,0x0,8
tick,0x7ff86ea82704,97472311,0,0x0,8
tick,0x7ff86ea82704,97474209,0,0x0,8
tick,0x7ff86ea82704,97476243,0,0x0,8
tick,0x7ff86ea82704,97478298,0,0x0,8
tick,0x7ff86ea82704,97480214,0,0x0,8
tick,0x7ff86ea82704,97482135,0,0x0,8
tick,0x7ff86ea82704,97484196,0,0x0,8
tick,0x7ff86ea82704,97486282,0,0x0,8
tick,0x7ff86ea82704,97488246,0,0x0,8
tick,0x7ff86ea82704,97490267,0,0x0,8
tick,0x7ff86ea82704,97492142,0,0x0,8
tick,0x7ff86ea82704,97494332,0,0x0,8
tick,0x7ff86ea82704,97496127,0,0x0,8
tick,0x7ff86ea82704,97498199,0,0x0,8
tick,0x7ff86ea82704,97500169,0,0x0,8
tick,0x7ff86ea82704,97502202,0,0x0,8
tick,0x7ff86ea82704,97504083,0,0x0,8
tick,0x7ff86ea82704,97506239,0,0x0,8
tick,0x7ff86ea82704,97508098,0,0x0,8
tick,0x7ff86ea82704,97510116,0,0x0,8
tick,0x7ff86ea82704,97512250,0,0x0,8
tick,0x7ff86ea82704,97514089,0,0x0,8
tick,0x7ff86ea82704,97516229,0,0x0,8
tick,0x7ff86ea82704,97518064,0,0x0,8
tick,0x7ff86ea82704,97520151,0,0x0,8
tick,0x7ff86ea82704,97522113,0,0x0,8
tick,0x7ff86ea82704,97524262,0,0x0,8
tick,0x7ff86ea82704,97526183,0,0x0,8
tick,0x7ff86ea82704,97528166,0,0x0,8
tick,0x7ff86ea82704,97530117,0,0x0,8
tick,0x7ff86ea82704,97532120,0,0x0,8
tick,0x7ff86ea82704,97534071,0,0x0,8
tick,0x7ff86ea82704,97536076,0,0x0,8
tick,0x7ff86ea82704,97538003,0,0x0,8
tick,0x7ff86ea82704,97540198,0,0x0,8
tick,0x7ff86ea82704,97542060,0,0x0,8
tick,0x7ff86ea82704,97544205,0,0x0,8
tick,0x7ff86ea82704,97546066,0,0x0,8
tick,0x7ff86ea82704,97548113,0,0x0,8
tick,0x7ff86ea82704,97550010,0,0x0,8
tick,0x7ff86ea82704,97552240,0,0x0,8
tick,0x7ff86ea82704,97554053,0,0x0,8
tick,0x7ff86ea82704,97556095,0,0x0,8
tick,0x7ff86ea82704,97557949,0,0x0,8
tick,0x7ff86ea82704,97560194,0,0x0,8
tick,0x7ff86ea82704,97561957,0,0x0,8
tick,0x7ff86ea82704,97564037,0,0x0,8
tick,0x7ff86ea82704,97565960,0,0x0,8
tick,0x7ff86ea82704,97568097,0,0x0,8
tick,0x7ff86ea82704,97569941,0,0x0,8
tick,0x7ff86ea82704,97572112,0,0x0,8
tick,0x7ff86ea82704,97573920,0,0x0,8
tick,0x7ff86ea82704,97576103,0,0x0,8
tick,0x7ff86ea82704,97578010,0,0x0,8
tick,0x7ff86ea82704,97580266,0,0x0,8
tick,0x7ff86ea82704,97581873,0,0x0,8
tick,0x7ff86ea82704,97586009,0,0x0,8
tick,0x7ff86ea82704,97587990,0,0x0,8
tick,0x7ff86ea82704,97590278,0,0x0,8
tick,0x7ff86ea82704,97592169,0,0x0,8
tick,0x7ff86ea82704,97594208,0,0x0,8
tick,0x7ff86ea82704,97596098,0,0x0,8
tick,0x7ff86ea82704,97598216,0,0x0,8
tick,0x7ff86ea82704,97599980,0,0x0,8
tick,0x7ff86ea82704,97602221,0,0x0,8
tick,0x7ff86ea82704,97603949,0,0x0,8
tick,0x7ff86ea82704,97606159,0,0x0,8
tick,0x7ff86ea82704,97608007,0,0x0,8
tick,0x7ff86ea82704,97610118,0,0x0,8
tick,0x7ff86ea82704,97612323,0,0x0,8
tick,0x7ff86ea82704,97614008,0,0x0,8
tick,0x7ff86ea82704,97616144,0,0x0,8
tick,0x7ff86ea82704,97618306,0,0x0,8
tick,0x7ff86ea82704,97620372,0,0x0,8
tick,0x7ff86ea82704,97622329,0,0x0,8
tick,0x7ff86ea82704,97624343,0,0x0,8
tick,0x7ff86ea82704,97626145,0,0x0,8
tick,0x7ff86ea82704,97628296,0,0x0,8
tick,0x7ff86ea82704,97630287,0,0x0,8
tick,0x7ff86ea82704,97631938,0,0x0,8
tick,0x7ff86ea82704,97634211,0,0x0,8
tick,0x7ff86ea82704,97636114,0,0x0,8
tick,0x7ff86ea82704,97638093,0,0x0,8
tick,0x7ff86ea82704,97640068,0,0x0,8
tick,0x7ff86ea82704,97642119,0,0x0,8
tick,0x7ff86ea82704,97644050,0,0x0,8
tick,0x7ff86ea82704,97646147,0,0x0,8
tick,0x7ff86ea82704,97648183,0,0x0,8
tick,0x7ff86ea82704,97650107,0,0x0,8
tick,0x7ff86ea82704,97651902,0,0x0,8
tick,0x7ff86ea82704,97654126,0,0x0,8
tick,0x7ff86ea82704,97655999,0,0x0,8
tick,0x7ff86ea82704,97658063,0,0x0,8
tick,0x7ff86ea82704,97659845,0,0x0,8
tick,0x7ff86ea82704,97661969,0,0x0,8
tick,0x7ff86ea82704,97663946,0,0x0,8
tick,0x7ff86ea82704,97665961,0,0x0,8
tick,0x7ff86ea82704,97667962,0,0x0,8
tick,0x7ff86ea82704,97669822,0,0x0,8
tick,0x7ff86ea82704,97671924,0,0x0,8
tick,0x7ff86ea82704,97673932,0,0x0,8
tick,0x7ff86ea82704,97675852,0,0x0,8
tick,0x7ff86ea82704,97677910,0,0x0,8
tick,0x7ff86ea82704,97680109,0,0x0,8
tick,0x7ff86ea82704,97681896,0,0x0,8
tick,0x7ff86ea82704,97684125,0,0x0,8
tick,0x7ff86ea82704,97685969,0,0x0,8
tick,0x7ff86ea82704,97687862,0,0x0,8
tick,0x7ff86ea82704,97689906,0,0x0,8
tick,0x7ff86ea82704,97691769,0,0x0,8
tick,0x7ff86ea82704,97693819,0,0x0,8
tick,0x7ff86ea82704,97696095,0,0x0,8
tick,0x7ff86ea82704,97697852,0,0x0,8
tick,0x7ff86ea82704,97699891,0,0x0,8
tick,0x7ff86ea82704,97702338,0,0x0,8
tick,0x7ff86ea82704,97703869,0,0x0,8
tick,0x7ff86ea82704,97705998,0,0x0,8
tick,0x7ff86ea82704,97707836,0,0x0,8
tick,0x7ff86ea82704,97709883,0,0x0,8
tick,0x7ff86ea82704,97711864,0,0x0,8
tick,0x7ff86ea82704,97713796,0,0x0,8
tick,0x7ff86ea82704,97715841,0,0x0,8
tick,0x7ff86ea82704,97717736,0,0x0,8
tick,0x7ff86ea82704,97719884,0,0x0,8
tick,0x7ff86ea82704,97721752,0,0x0,8
tick,0x7ff86ea82704,97723733,0,0x0,8
tick,0x7ff86ea82704,97725653,0,0x0,8
tick,0x7ff86ea82704,97727850,0,0x0,8
tick,0x7ff86ea82704,97729696,0,0x0,8
tick,0x7ff86ea82704,97731873,0,0x0,8
tick,0x7ff86ea82704,97733812,0,0x0,8
tick,0x7ff86ea82704,97735815,0,0x0,8
tick,0x7ff86ea82704,97737822,0,0x0,8
tick,0x7ff86ea82704,97739793,0,0x0,8
tick,0x7ff86ea82704,97741943,0,0x0,8
tick,0x7ff86ea82704,97743689,0,0x0,8
tick,0x7ff86ea82704,97745707,0,0x0,8
tick,0x7ff86ea82704,97747862,0,0x0,8
tick,0x7ff86ea82704,97749859,0,0x0,8
tick,0x7ff86ea82704,97751688,0,0x0,8
tick,0x7ff86ea82704,97753631,0,0x0,8
tick,0x7ff86ea82704,97755666,0,0x0,8
tick,0x7ff86ea82704,97757714,0,0x0,8
tick,0x7ff86ea82704,97759648,0,0x0,8
tick,0x7ff86ea82704,97762250,0,0x0,8
tick,0x7ff86ea82704,97763583,0,0x0,8
tick,0x7ff86ea82704,97765628,0,0x0,8
tick,0x7ff86ea82704,97767761,0,0x0,8
tick,0x7ff86ea82704,97769673,0,0x0,8
tick,0x7ff86ea82704,97771509,0,0x0,8
tick,0x7ff86ea82704,97773685,0,0x0,8
tick,0x7ff86ea82704,97775737,0,0x0,8
tick,0x7ff86ea82704,97777675,0,0x0,8
tick,0x7ff86ea82704,97779591,0,0x0,8
tick,0x7ff86ea82704,97781648,0,0x0,8
tick,0x7ff86ea82704,97783632,0,0x0,8
tick,0x7ff86ea82704,97785615,0,0x0,8
tick,0x7ff86ea82704,97787486,0,0x0,8
tick,0x7ff86ea82704,97789543,0,0x0,8
tick,0x7ff86ea82704,97791455,0,0x0,8
tick,0x7ff86ea82704,97793528,0,0x0,8
tick,0x7ff86ea82704,97795434,0,0x0,8
tick,0x7ff86ea82704,97797430,0,0x0,8
tick,0x7ff86ea82704,97799417,0,0x0,8
tick,0x7ff86ea82704,97801542,0,0x0,8
tick,0x7ff86ea82704,97803379,0,0x0,8
tick,0x7ff86ea82704,97805500,0,0x0,8
tick,0x7ff86ea82704,97807434,0,0x0,8
tick,0x7ff86ea82704,97809577,0,0x0,8
tick,0x7ff86ea82704,97811426,0,0x0,8
tick,0x7ff86ea82704,97813454,0,0x0,8
tick,0x7ff86ea82704,97815444,0,0x0,8
tick,0x7ff86ea82704,97817459,0,0x0,8
tick,0x7ff86ea82704,97819480,0,0x0,8
tick,0x7ff86ea82704,97821440,0,0x0,8
tick,0x7ff86ea82704,97823421,0,0x0,8
tick,0x7ff86ea82704,97825594,0,0x0,8
tick,0x7ff86ea82704,97827502,0,0x0,8
tick,0x7ff86ea82704,97829513,0,0x0,8
tick,0x7ff86ea82704,97831591,0,0x0,8
tick,0x7ff86ea82704,97833396,0,0x0,8
tick,0x7ff86ea82704,97835474,0,0x0,8
tick,0x7ff86ea82704,97837428,0,0x0,8
tick,0x7ff86ea82704,97839306,0,0x0,8
tick,0x7ff86ea82704,97841424,0,0x0,8
tick,0x7ff86ea82704,97843330,0,0x0,8
tick,0x7ff86ea82704,97845627,0,0x0,8
tick,0x7ff86ea82704,97847501,0,0x0,8
tick,0x7ff86ea82704,97849708,0,0x0,8
tick,0x7ff86ea82704,97851483,0,0x0,8
tick,0x7ff86ea82704,97853316,0,0x0,8
tick,0x7ff86ea82704,97855401,0,0x0,8
tick,0x7ff86ea82704,97857361,0,0x0,8
tick,0x7ff86ea82704,97859440,0,0x0,8
tick,0x7ff86ea82704,97861345,0,0x0,8
tick,0x7ff86ea82704,97863876,0,0x0,8
tick,0x7ff86ea82704,97865371,0,0x0,8
tick,0x7ff86ea82704,97867373,0,0x0,8
tick,0x7ff86ea82704,97869336,0,0x0,8
tick,0x7ff86ea82704,97871577,0,0x0,8
tick,0x7ff86ea82704,97873328,0,0x0,8
tick,0x7ff86ea82704,97875407,0,0x0,8
tick,0x7ff86ea82704,97877235,0,0x0,8
tick,0x7ff86ea82704,97879254,0,0x0,8
tick,0x7ff86ea82704,97881220,0,0x0,8
tick,0x7ff86ea82704,97883361,0,0x0,8
tick,0x7ff86ea82704,97885376,0,0x0,8
tick,0x7ff86ea82704,97887398,0,0x0,8
tick,0x7ff86ea82704,97889328,0,0x0,8
tick,0x7ff86ea82704,97891278,0,0x0,8
tick,0x7ff86ea82704,97893299,0,0x0,8
tick,0x7ff86ea82704,97895268,0,0x0,8
tick,0x7ff86ea82704,97897291,0,0x0,8
tick,0x7ff86ea82704,97899235,0,0x0,8
tick,0x7ff86ea82704,97901225,0,0x0,8
tick,0x7ff86ea82704,97903451,0,0x0,8
tick,0x7ff86ea82704,97905219,0,0x0,8
tick,0x7ff86ea82704,97907097,0,0x0,8
tick,0x7ff86ea82704,97909347,0,0x0,8
tick,0x7ff86ea82704,97911358,0,0x0,8
tick,0x7ff86ea82704,97913380,0,0x0,8
tick,0x7ff86ea82704,97915126,0,0x0,8
tick,0x7ff86ea82704,97917290,0,0x0,8
tick,0x7ff86ea82704,97919213,0,0x0,8
tick,0x7ff86ea82704,97921208,0,0x0,8
tick,0x7ff86ea82704,97923405,0,0x0,8
tick,0x7ff86ea82704,97925273,0,0x0,8
tick,0x7ff86ea82704,97927131,0,0x0,8
tick,0x7ff86ea82704,97929066,0,0x0,8
tick,0x7ff86ea82704,97931030,0,0x0,8
tick,0x7ff86ea82704,97933153,0,0x0,8
tick,0x7ff86ea82704,97935032,0,0x0,8
tick,0x7ff86ea82704,97937069,0,0x0,8
tick,0x7ff86ea82704,97938976,0,0x0,8
tick,0x7ff86ea82704,97941175,0,0x0,8
tick,0x7ff86ea82704,97942915,0,0x0,8
tick,0x7ff86ea82704,97945026,0,0x0,8
tick,0x7ff86ea82704,97946989,0,0x0,8
tick,0x7ff86ea82704,97949057,0,0x0,8
tick,0x7ff86ea82704,97950987,0,0x0,8
tick,0x7ff86ea82704,97953113,0,0x0,8
tick,0x7ff86ea82704,97955240,0,0x0,8
tick,0x7ff86ea82704,97957055,0,0x0,8
tick,0x7ff86ea82704,97958941,0,0x0,8
tick,0x7ff86ea82704,97960995,0,0x0,8
tick,0x7ff86ea82704,97962929,0,0x0,8
tick,0x7ff86ea82704,97965039,0,0x0,8
tick,0x7ff86ea82704,97966901,0,0x0,8
tick,0x7ff86ea82704,97969030,0,0x0,8
tick,0x7ff86ea82704,97970984,0,0x0,8
tick,0x7ff86ea82704,97972939,0,0x0,8
tick,0x7ff86ea82704,97974926,0,0x0,8
tick,0x7ff86ea82704,97977010,0,0x0,8
tick,0x7ff86ea82704,97978906,0,0x0,8
tick,0x7ff86ea82704,97980973,0,0x0,8
tick,0x7ff86ea82704,97982847,0,0x0,8
tick,0x7ff86ea82704,97985203,0,0x0,8
tick,0x7ff86ea82704,97987009,0,0x0,8
tick,0x7ff86ea82704,97989379,0,0x0,8
tick,0x7ff86ea82704,97990916,0,0x0,8
tick,0x7ff86ea82704,97992876,0,0x0,8
tick,0x7ff86ea82704,97994877,0,0x0,8
tick,0x7ff86ea82704,97997201,0,0x0,8
tick,0x7ff86ea82704,97999117,0,0x0,8
tick,0x7ff86ea82704,98001266,0,0x0,8
tick,0x7ff86ea82704,98003060,0,0x0,8
tick,0x7ff86ea82704,98004996,0,0x0,8
tick,0x7ff86ea82704,98007151,0,0x0,8
tick,0x7ff86ea82704,98009018,0,0x0,8
tick,0x7ff86ea82704,98011046,0,0x0,8
tick,0x7ff86ea82704,98013048,0,0x0,8
tick,0x7ff86ea82704,98014874,0,0x0,8
tick,0x7ff86ea82704,98016957,0,0x0,8
tick,0x7ff86ea82704,98019222,0,0x0,8
tick,0x7ff86ea82704,98022139,0,0x0,8
tick,0x7ff86ea82704,98023144,0,0x0,8
tick,0x7ff86ea82704,98025529,0,0x0,8
tick,0x7ff86ea82704,98026900,0,0x0,8
tick,0x7ff86ea82704,98029116,0,0x0,8
tick,0x7ff86ea82704,98031472,0,0x0,8
tick,0x7ff86ea82704,98032800,0,0x0,8
tick,0x7ff86ea82704,98035041,0,0x0,8
tick,0x7ff86ea82704,98036904,0,0x0,8
tick,0x7ff86ea82704,98039172,0,0x0,8
tick,0x7ff86ea82704,98040855,0,0x0,8
tick,0x7ff86ea82704,98042777,0,0x0,8
tick,0x7ff86ea82704,98045030,0,0x0,8
tick,0x7ff86ea82704,98047303,0,0x0,8
tick,0x7ff86ea82704,98048767,0,0x0,8
tick,0x7ff86ea82704,98050909,0,0x0,8
tick,0x7ff86ea82704,98052770,0,0x0,8
tick,0x7ff86ea82704,98054832,0,0x0,8
tick,0x7ff86ea82704,98056748,0,0x0,8
tick,0x7ff86ea82704,98058750,0,0x0,8
tick,0x7ff86ea82704,98060828,0,0x0,8
tick,0x7ff86ea82704,98062792,0,0x0,8
tick,0x7ff86ea82704,98064668,0,0x0,8
tick,0x7ff86ea82704,98066897,0,0x0,8
tick,0x7ff86ea82704,98068953,0,0x0,8
tick,0x7ff86ea82704,98071045,0,0x0,8
tick,0x7ff86ea82704,98072752,0,0x0,8
tick,0x7ff86ea82704,98074691,0,0x0,8
tick,0x7ff86ea82704,98076801,0,0x0,8
tick,0x7ff86ea82704,98078923,0,0x0,8
tick,0x7ff86ea82704,98080885,0,0x0,8
tick,0x7ff86ea82704,98082832,0,0x0,8
tick,0x7ff86ea82704,98084653,0,0x0,8
tick,0x7ff86ea82704,98086833,0,0x0,8
tick,0x7ff86ea82704,98088945,0,0x0,8
tick,0x7ff86ea82704,98090928,0,0x0,8
tick,0x7ff86ea82704,98092681,0,0x0,8
tick,0x7ff86ea82704,98094770,0,0x0,8
tick,0x7ff86ea82704,98097975,0,0x0,8
tick,0x7ff86ea82704,98100069,0,0x0,8
tick,0x7ff86ea82704,98102415,0,0x0,8
tick,0x7ff86ea82704,98105046,0,0x0,8
tick,0x7ff86ea82704,98106510,0,0x0,8
tick,0x7ff86ea82704,98108549,0,0x0,8
tick,0x7ff86ea82704,98110568,0,0x0,8
tick,0x7ff86ea82704,98112838,0,0x0,8
tick,0x7ff86ea82704,98115250,0,0x0,8
tick,0x7ff86ea82704,98117055,0,0x0,8
tick,0x7ff86ea82704,98118540,0,0x0,8
tick,0x7ff86ea82704,98120558,0,0x0,8
tick,0x7ff86ea82704,98122551,0,0x0,8
tick,0x7ff86ea82704,98124565,0,0x0,8
tick,0x7ff86ea82704,98126907,0,0x0,8
tick,0x7ff86ea82704,98128625,0,0x0,8
tick,0x7ff86ea82704,98130715,0,0x0,8
tick,0x7ff86ea82704,98132444,0,0x0,8
tick,0x7ff86ea82704,98134725,0,0x0,8
tick,0x7ff86ea82704,98136572,0,0x0,8
tick,0x7ff86ea82704,98138530,0,0x0,8
tick,0x7ff86ea82704,98140615,0,0x0,8
tick,0x7ff86ea82704,98142639,0,0x0,8
tick,0x7ff86ea82704,98144571,0,0x0,8
tick,0x7ff86ea82704,98146567,0,0x0,8
tick,0x7ff86ea82704,98148770,0,0x0,8
tick,0x7ff86ea82704,98150569,0,0x0,8
tick,0x7ff86ea82704,98152496,0,0x0,8
tick,0x7ff86ea82704,98154426,0,0x0,8
tick,0x7ff86ea82704,98156655,0,0x0,8
tick,0x7ff86ea82704,98158582,0,0x0,8
tick,0x7ff86ea82704,98160765,0,0x0,8
tick,0x7ff86ea82704,98162474,0,0x0,8
tick,0x7ff86ea82704,98164526,0,0x0,8
tick,0x7ff86ea82704,98167123,0,0x0,8
tick,0x7ff86ea82704,98168391,0,0x0,8
tick,0x7ff86ea82704,98170398,0,0x0,8
tick,0x7ff86ea82704,98172379,0,0x0,8
tick,0x7ff86ea82704,98174322,0,0x0,8
tick,0x7ff86ea82704,98176339,0,0x0,8
tick,0x7ff86ea82704,98178355,0,0x0,8
tick,0x7ff86ea82704,98181057,0,0x0,8
tick,0x7ff86ea82704,98182968,0,0x0,8
tick,0x7ff86ea82704,98184295,0,0x0,8
tick,0x7ff86ea82704,98186427,0,0x0,8
tick,0x7ff86ea82704,98188360,0,0x0,8
tick,0x7ff86ea82704,98190617,0,0x0,8
tick,0x7ff86ea82704,98192985,0,0x0,8
tick,0x7ff86ea82704,98194384,0,0x0,8
tick,0x7ff86ea82704,98196723,0,0x0,8
tick,0x7ff86ea82704,98198899,0,0x0,8
tick,0x7ff86ea82704,98200762,0,0x0,8
tick,0x7ff86ea82704,98202633,0,0x0,8
tick,0x7ff86ea82704,98204513,0,0x0,8
tick,0x7ff86ea82704,98207012,0,0x0,8
tick,0x7ff86ea82704,98209427,0,0x0,8
tick,0x7ff86ea82704,98211683,0,0x0,8
tick,0x7ff86ea82704,98213404,0,0x0,8
tick,0x7ff86ea82704,98215988,0,0x0,8
tick,0x7ff86ea82704,98217168,0,0x0,8
tick,0x7ff86ea82704,98219176,0,0x0,8
tick,0x7ff86ea82704,98221755,0,0x0,8
tick,0x7ff86ea82704,98223234,0,0x0,8
tick,0x7ff86ea82704,98225171,0,0x0,8
tick,0x7ff86ea82704,98227195,0,0x0,8
tick,0x7ff86ea82704,98229415,0,0x0,8
tick,0x7ff86ea82704,98231462,0,0x0,8
tick,0x7ff86ea82704,98233183,0,0x0,8
tick,0x7ff86ea82704,98235432,0,0x0,8
tick,0x7ff86ea82704,98237543,0,0x0,8
tick,0x7ff86ea82704,98239234,0,0x0,8
tick,0x7ff86ea82704,98241542,0,0x0,8
tick,0x7ff86ea82704,98243358,0,0x0,8
tick,0x7ff86ea82704,98245462,0,0x0,8
tick,0x7ff86ea82704,98247647,0,0x0,8
tick,0x7ff86ea82704,98249256,0,0x0,8
tick,0x7ff86ea82704,98251304,0,0x0,8
tick,0x7ff86ea82704,98253580,0,0x0,8
tick,0x7ff86ea82704,98255266,0,0x0,8
tick,0x7ff86ea82704,98257220,0,0x0,8
tick,0x7ff86ea82704,98259442,0,0x0,8
tick,0x7ff86ea82704,98261584,0,0x0,8
tick,0x7ff86ea82704,98263469,0,0x0,8
tick,0x7ff86ea82704,98265687,0,0x0,8
tick,0x7ff86ea82704,98267190,0,0x0,8
tick,0x7ff86ea82704,98269395,0,0x0,8
tick,0x7ff86ea82704,98271060,0,0x0,8
tick,0x7ff86ea82704,98273159,0,0x0,8
tick,0x7ff86ea82704,98275214,0,0x0,8
tick,0x7ff86ea82704,98277314,0,0x0,8
tick,0x7ff86ea82704,98279137,0,0x0,8
tick,0x7ff86ea82704,98281242,0,0x0,8
tick,0x7ff86ea82704,98283223,0,0x0,8
tick,0x7ff86ea82704,98285180,0,0x0,8
tick,0x7ff86ea82704,98287269,0,0x0,8
tick,0x7ff86ea82704,98289269,0,0x0,8
tick,0x7ff86ea82704,98291142,0,0x0,8
tick,0x7ff86ea82704,98293330,0,0x0,8
tick,0x7ff86ea82704,98295017,0,0x0,8
tick,0x7ff86ea82704,98297104,0,0x0,8
tick,0x7ff86ea82704,98299064,0,0x0,8
tick,0x7ff86ea82704,98301342,0,0x0,8
tick,0x7ff86ea82704,98303066,0,0x0,8
tick,0x7ff86ea82704,98305186,0,0x0,8
tick,0x7ff86ea82704,98307199,0,0x0,8
tick,0x7ff86ea82704,98309361,0,0x0,8
tick,0x7ff86ea82704,98311011,0,0x0,8
tick,0x7ff86ea82704,98313099,0,0x0,8
tick,0x7ff86ea82704,98315014,0,0x0,8
tick,0x7ff86ea82704,98317187,0,0x0,8
tick,0x7ff86ea82704,98319053,0,0x0,8
tick,0x7ff86ea82704,98320950,0,0x0,8
tick,0x7ff86ea82704,98322985,0,0x0,8
tick,0x7ff86ea82704,98325131,0,0x0,8
tick,0x7ff86ea82704,98330259,0,0x0,8
tick,0x7ff86ea82704,98330299,0,0x0,8
tick,0x7ff86ea82704,98332015,0,0x0,8
tick,0x7ff86ea82704,98333981,0,0x0,8
tick,0x7ff86ea82704,98335914,0,0x0,8
tick,0x7ff86ea82704,98337939,0,0x0,8
tick,0x7ff86ea82704,98339966,0,0x0,8
tick,0x7ff86ea82704,98341854,0,0x0,8
tick,0x7ff86ea82704,98344035,0,0x0,8
tick,0x7ff86ea82704,98345969,0,0x0,8
tick,0x7ff86ea82704,98348670,0,0x0,8
tick,0x7ff86ea82704,98350229,0,0x0,8
tick,0x7ff86ea82704,98352661,0,0x0,8
tick,0x7ff86ea82704,98354170,0,0x0,8
tick,0x7ff86ea82704,98356498,0,0x0,8
tick,0x7ff86ea82704,98358166,0,0x0,8
tick,0x7ff86ea82704,98360499,0,0x0,8
tick,0x7ff86ea82704,98362062,0,0x0,8
tick,0x7ff86ea82704,98364311,0,0x0,8
tick,0x7ff86ea82704,98366217,0,0x0,8
tick,0x7ff86ea82704,98368100,0,0x0,8
tick,0x7ff86ea82704,98369965,0,0x0,8
tick,0x7ff86ea82704,98372091,0,0x0,8
tick,0x7ff86ea82704,98374129,0,0x0,8
tick,0x7ff86ea82704,98375967,0,0x0,8
tick,0x7ff86ea82704,98377965,0,0x0,8
tick,0x7ff86ea82704,98380136,0,0x0,8
tick,0x7ff86ea82704,98382154,0,0x0,8
tick,0x7ff86ea82704,98383976,0,0x0,8
tick,0x7ff86ea82704,98385941,0,0x0,8
tick,0x7ff86ea82704,98388066,0,0x0,8
tick,0x7ff86ea82704,98389954,0,0x0,8
tick,0x7ff86ea82704,98392101,0,0x0,8
tick,0x7ff86ea82704,98394137,0,0x0,8
tick,0x7ff86ea82704,98396004,0,0x0,8
tick,0x7ff86ea82704,98398218,0,0x0,8
tick,0x7ff86ea82704,98399932,0,0x0,8
tick,0x7ff86ea82704,98402176,0,0x0,8
tick,0x7ff86ea82704,98404295,0,0x0,8
tick,0x7ff86ea82704,98406066,0,0x0,8
tick,0x7ff86ea82704,98407772,0,0x0,8
tick,0x7ff86ea82704,98409941,0,0x0,8
tick,0x7ff86ea82704,98411872,0,0x0,8
tick,0x7ff86ea82704,98414467,0,0x0,8
tick,0x7ff86ea82704,98416039,0,0x0,8
tick,0x7ff86ea82704,98418228,0,0x0,8
tick,0x7ff86ea82704,98419968,0,0x0,8
tick,0x7ff86ea82704,98422108,0,0x0,8
tick,0x7ff86ea82704,98423945,0,0x0,8
tick,0x7ff86ea82704,98425948,0,0x0,8
tick,0x7ff86ea82704,98427892,0,0x0,8
tick,0x7ff86ea82704,98430086,0,0x0,8
tick,0x7ff86ea82704,98431785,0,0x0,8
tick,0x7ff86ea82704,98434990,0,0x0,8
tick,0x7ff86ea82704,98436002,0,0x0,8
tick,0x7ff86ea82704,98438102,0,0x0,8
tick,0x7ff86ea82704,98439806,0,0x0,8
tick,0x7ff86ea82704,98441963,0,0x0,8
tick,0x7ff86ea82704,98443934,0,0x0,8
tick,0x7ff86ea82704,98446033,0,0x0,8
tick,0x7ff86ea82704,98447949,0,0x0,8
tick,0x7ff86ea82704,98449839,0,0x0,8
tick,0x7ff86ea82704,98451989,0,0x0,8
tick,0x7ff86ea82704,98453972,0,0x0,8
tick,0x7ff86ea82704,98456316,0,0x0,8
tick,0x7ff86ea82704,98457831,0,0x0,8
tick,0x7ff86ea82704,98460043,0,0x0,8
tick,0x7ff86ea82704,98461685,0,0x0,8
tick,0x7ff86ea82704,98464152,0,0x0,8
tick,0x7ff86ea82704,98465868,0,0x0,8
tick,0x7ff86ea82704,98467946,0,0x0,8
tick,0x7ff86ea82704,98469747,0,0x0,8
tick,0x7ff86ea82704,98471770,0,0x0,8
tick,0x7ff86ea82704,98473945,0,0x0,8
tick,0x7ff86ea82704,98475828,0,0x0,8
tick,0x7ff86ea82704,98477670,0,0x0,8
tick,0x7ff86ea82704,98479729,0,0x0,8
tick,0x7ff86ea82704,98481907,0,0x0,8
tick,0x7ff86ea82704,98483956,0,0x0,8
tick,0x7ff86ea82704,98485633,0,0x0,8
tick,0x7ff86ea82704,98488171,0,0x0,8
tick,0x7ff86ea82704,98489675,0,0x0,8
tick,0x7ff86ea82704,98491721,0,0x0,8
tick,0x7ff86ea82704,98493723,0,0x0,8
tick,0x7ff86ea82704,98495638,0,0x0,8
tick,0x7ff86ea82704,98497633,0,0x0,8
tick,0x7ff86ea82704,98499713,0,0x0,8
tick,0x7ff86ea82704,98501929,0,0x0,8
tick,0x7ff86ea82704,98503909,0,0x0,8
tick,0x7ff86ea82704,98505669,0,0x0,8
tick,0x7ff86ea82704,98507591,0,0x0,8
tick,0x7ff86ea82704,98509711,0,0x0,8
tick,0x7ff86ea82704,98512017,0,0x0,8
tick,0x7ff86ea82704,98513802,0,0x0,8
tick,0x7ff86ea82704,98515593,0,0x0,8
tick,0x7ff86ea82704,98517941,0,0x0,8
tick,0x7ff86ea82704,98519670,0,0x0,8
tick,0x7ff86ea82704,98521605,0,0x0,8
tick,0x7ff86ea82704,98523438,0,0x0,8
tick,0x7ff86ea82704,98525976,0,0x0,8
tick,0x7ff86ea82704,98527865,0,0x0,8
tick,0x7ff86ea82704,98529742,0,0x0,8
tick,0x7ff86ea82704,98531921,0,0x0,8
tick,0x7ff86ea82704,98533660,0,0x0,8
tick,0x7ff86ea82704,98535010,0,0x0,8
tick,0x7ff86ea82704,98537050,0,0x0,8
tick,0x7ff86ea82704,98538995,0,0x0,8
tick,0x7ff86ea82704,98541025,0,0x0,8
tick,0x7ff86ea82704,98543157,0,0x0,8
tick,0x7ff86ea82704,98544930,0,0x0,8
tick,0x7ff86ea82704,98547170,0,0x0,8
tick,0x7ff86ea82704,98548947,0,0x0,8
tick,0x7ff86ea82704,98551338,0,0x0,8
tick,0x7ff86ea82704,98553237,0,0x0,8
tick,0x7ff86ea82704,98554965,0,0x0,8
tick,0x7ff86ea82704,98557043,0,0x0,8
tick,0x7ff86ea82704,98559083,0,0x0,8
tick,0x7ff86ea82704,98560970,0,0x0,8
tick,0x7ff86ea82704,98563235,0,0x0,8
tick,0x7ff86ea82704,98564967,0,0x0,8
tick,0x7ff86ea82704,98567358,0,0x0,8
tick,0x7ff86ea82704,98569092,0,0x0,8
tick,0x7ff86ea82704,98571151,0,0x0,8
tick,0x7ff86ea82704,98572905,0,0x0,8
tick,0x7ff86ea82704,98574960,0,0x0,8
tick,0x7ff86ea82704,98577086,0,0x0,8
tick,0x7ff86ea82704,98578943,0,0x0,8
tick,0x7ff86ea82704,98581353,0,0x0,8
tick,0x7ff86ea82704,98582928,0,0x0,8
tick,0x7ff86ea82704,98585028,0,0x0,8
tick,0x7ff86ea82704,98586880,0,0x0,8
tick,0x7ff86ea82704,98589032,0,0x0,8
tick,0x7ff86ea82704,98590969,0,0x0,8
tick,0x7ff86ea82704,98593315,0,0x0,8
tick,0x7ff86ea82704,98594933,0,0x0,8
tick,0x7ff86ea82704,98597130,0,0x0,8
tick,0x7ff86ea82704,98599269,0,0x0,8
tick,0x7ff86ea82704,98600917,0,0x0,8
tick,0x7ff86ea82704,98603074,0,0x0,8
tick,0x7ff86ea82704,98604819,0,0x0,8
tick,0x7ff86ea82704,98606984,0,0x0,8
tick,0x7ff86ea82704,98608807,0,0x0,8
tick,0x7ff86ea82704,98610891,0,0x0,8
tick,0x7ff86ea82704,98612870,0,0x0,8
tick,0x7ff86ea82704,98615212,0,0x0,8
tick,0x7ff86ea82704,98616920,0,0x0,8
tick,0x7ff86ea82704,98619035,0,0x0,8
tick,0x7ff86ea82704,98620953,0,0x0,8
tick,0x7ff86ea82704,98622812,0,0x0,8
tick,0x7ff86ea82704,98624778,0,0x0,8
tick,0x7ff86ea82704,98626768,0,0x0,8
tick,0x7ff86ea82704,98628840,0,0x0,8
tick,0x7ff86ea82704,98630719,0,0x0,8
tick,0x7ff86ea82704,98632895,0,0x0,8
tick,0x7ff86ea82704,98634712,0,0x0,8
tick,0x7ff86ea82704,98636834,0,0x0,8
tick,0x7ff86ea82704,98638691,0,0x0,8
tick,0x7ff86ea82704,98640693,0,0x0,8
tick,0x7ff86ea82704,98642676,0,0x0,8
tick,0x7ff86ea82704,98644720,0,0x0,8
tick,0x7ff86ea82704,98646847,0,0x0,8
tick,0x7ff86ea82704,98648689,0,0x0,8
tick,0x7ff86ea82704,98650845,0,0x0,8
tick,0x7ff86ea82704,98652695,0,0x0,8
tick,0x7ff86ea82704,98654819,0,0x0,8
tick,0x7ff86ea82704,98656667,0,0x0,8
tick,0x7ff86ea82704,98658715,0,0x0,8
tick,0x7ff86ea82704,98660851,0,0x0,8
tick,0x7ff86ea82704,98662790,0,0x0,8
tick,0x7ff86ea82704,98664740,0,0x0,8
tick,0x7ff86ea82704,98666731,0,0x0,8
tick,0x7ff86ea82704,98668853,0,0x0,8
tick,0x7ff86ea82704,98670703,0,0x0,8
tick,0x7ff86ea82704,98672746,0,0x0,8
tick,0x7ff86ea82704,98674630,0,0x0,8
tick,0x7ff86ea82704,98676726,0,0x0,8
tick,0x7ff86ea82704,98678504,0,0x0,8
tick,0x7ff86ea82704,98680648,0,0x0,8
tick,0x7ff86ea82704,98682657,0,0x0,8
tick,0x7ff86ea82704,98684945,0,0x0,8
tick,0x7ff86ea82704,98686541,0,0x0,8
tick,0x7ff86ea82704,98688626,0,0x0,8
tick,0x7ff86ea82704,98690615,0,0x0,8
tick,0x7ff86ea82704,98693161,0,0x0,8
tick,0x7ff86ea82704,98694606,0,0x0,8
tick,0x7ff86ea82704,98696722,0,0x0,8
tick,0x7ff86ea82704,98698698,0,0x0,8
tick,0x7ff86ea82704,98700873,0,0x0,8
tick,0x7ff86ea82704,98702672,0,0x0,8
tick,0x7ff86ea82704,98705061,0,0x0,8
tick,0x7ff86ea82704,98706838,0,0x0,8
tick,0x7ff86ea82704,98708670,0,0x0,8
tick,0x7ff86ea82704,98710501,0,0x0,8
tick,0x7ff86ea82704,98713209,0,0x0,8
tick,0x7ff86ea82704,98714735,0,0x0,8
tick,0x7ff86ea82704,98717614,0,0x0,8
tick,0x7ff86ea82704,98719390,0,0x0,8
tick,0x7ff86ea82704,98721611,0,0x0,8
tick,0x7ff86ea82704,98723514,0,0x0,8
tick,0x7ff86ea82704,98725417,0,0x0,8
tick,0x7ff86ea82704,98727512,0,0x0,8
tick,0x7ff86ea82704,98729347,0,0x0,8
tick,0x7ff86ea82704,98731848,0,0x0,8
tick,0x7ff86ea82704,98733332,0,0x0,8
tick,0x7ff86ea82704,98735450,0,0x0,8
tick,0x7ff86ea82704,98737370,0,0x0,8
tick,0x7ff86ea82704,98739362,0,0x0,8
tick,0x7ff86ea82704,98741443,0,0x0,8
tick,0x7ff86ea82704,98743462,0,0x0,8
tick,0x7ff86ea82704,98745330,0,0x0,8
tick,0x7ff86ea82704,98747293,0,0x0,8
tick,0x7ff86ea82704,98749353,0,0x0,8
tick,0x7ff86ea82704,98751385,0,0x0,8
tick,0x7ff86ea82704,98753595,0,0x0,8
tick,0x7ff86ea82704,98755219,0,0x0,8
tick,0x7ff86ea82704,98757236,0,0x0,8
tick,0x7ff86ea82704,98759414,0,0x0,8
tick,0x7ff86ea82704,98761238,0,0x0,8
tick,0x7ff86ea82704,98763396,0,0x0,8
tick,0x7ff86ea82704,98765429,0,0x0,8
tick,0x7ff86ea82704,98767495,0,0x0,8
tick,0x7ff86ea82704,98769387,0,0x0,8
tick,0x7ff86ea82704,98771442,0,0x0,8
tick,0x7ff86ea82704,98773226,0,0x0,8
tick,0x7ff86ea82704,98775280,0,0x0,8
tick,0x7ff86ea82704,98777303,0,0x0,8
tick,0x7ff86ea82704,98779477,0,0x0,8
tick,0x7ff86ea82704,98781408,0,0x0,8
tick,0x7ff86ea82704,98783194,0,0x0,8
tick,0x7ff86ea82704,98785158,0,0x0,8
tick,0x7ff86ea82704,98787190,0,0x0,8
tick,0x7ff86ea82704,98789228,0,0x0,8
tick,0x7ff86ea82704,98791203,0,0x0,8
tick,0x7ff86ea82704,98793178,0,0x0,8
tick,0x7ff86ea82704,98795141,0,0x0,8
tick,0x7ff86ea82704,98797165,0,0x0,8
tick,0x7ff86ea82704,98799221,0,0x0,8
tick,0x7ff86ea82704,98801101,0,0x0,8
tick,0x7ff86ea82704,98803236,0,0x0,8
tick,0x7ff86ea82704,98805169,0,0x0,8
tick,0x7ff86ea82704,98807208,0,0x0,8
tick,0x7ff86ea82704,98809114,0,0x0,8
tick,0x7ff86ea82704,98811239,0,0x0,8
tick,0x7ff86ea82704,98813136,0,0x0,8
tick,0x7ff86ea82704,98815203,0,0x0,8
tick,0x7ff86ea82704,98817275,0,0x0,8
tick,0x7ff86ea82704,98819168,0,0x0,8
tick,0x7ff86ea82704,98821092,0,0x0,8
tick,0x7ff86ea82704,98823069,0,0x0,8
tick,0x7ff86ea82704,98825156,0,0x0,8
tick,0x7ff86ea82704,98827225,0,0x0,8
tick,0x7ff86ea82704,98829544,0,0x0,8
tick,0x7ff86ea82704,98831049,0,0x0,8
tick,0x7ff86ea82704,98833212,0,0x0,8
tick,0x7ff86ea82704,98835091,0,0x0,8
tick,0x7ff86ea82704,98837146,0,0x0,8
tick,0x7ff86ea82704,98839101,0,0x0,8
tick,0x7ff86ea82704,98841076,0,0x0,8
tick,0x7ff86ea82704,98843021,0,0x0,8
tick,0x7ff86ea82704,98845086,0,0x0,8
tick,0x7ff86ea82704,98847023,0,0x0,8
tick,0x7ff86ea82704,98849082,0,0x0,8
tick,0x7ff86ea82704,98851057,0,0x0,8
tick,0x7ff86ea82704,98853042,0,0x0,8
tick,0x7ff86ea82704,98854983,0,0x0,8
tick,0x7ff86ea82704,98857039,0,0x0,8
tick,0x7ff86ea82704,98858941,0,0x0,8
tick,0x7ff86ea82704,98860995,0,0x0,8
tick,0x7ff86ea82704,98862989,0,0x0,8
tick,0x7ff86ea82704,98865015,0,0x0,8
tick,0x7ff86ea82704,98866923,0,0x0,8
tick,0x7ff86ea82704,98869019,0,0x0,8
tick,0x7ff86ea82704,98871004,0,0x0,8
tick,0x7ff86ea82704,98872973,0,0x0,8
tick,0x7ff86ea82704,98874933,0,0x0,8
tick,0x7ff86ea82704,98876942,0,0x0,8
tick,0x7ff86ea82704,98878989,0,0x0,8
tick,0x7ff86ea82704,98881080,0,0x0,8
tick,0x7ff86ea82704,98882976,0,0x0,8
tick,0x7ff86ea82704,98885150,0,0x0,8
tick,0x7ff86ea82704,98886987,0,0x0,8
tick,0x7ff86ea82704,98888913,0,0x0,8
tick,0x7ff86ea82704,98891069,0,0x0,8
tick,0x7ff86ea82704,98892919,0,0x0,8
tick,0x7ff86ea82704,98894933,0,0x0,8
tick,0x7ff86ea82704,98896878,0,0x0,8
tick,0x7ff86ea82704,98899007,0,0x0,8
tick,0x7ff86ea82704,98900865,0,0x0,8
tick,0x7ff86ea82704,98902894,0,0x0,8
tick,0x7ff86ea82704,98904847,0,0x0,8
tick,0x7ff86ea82704,98906896,0,0x0,8
tick,0x7ff86ea82704,98908970,0,0x0,8
tick,0x7ff86ea82704,98910853,0,0x0,8
tick,0x7ff86ea82704,98912810,0,0x0,8
tick,0x7ff86ea82704,98914942,0,0x0,8
tick,0x7ff86ea82704,98916835,0,0x0,8
tick,0x7ff86ea82704,98918802,0,0x0,8
tick,0x7ff86ea82704,98920851,0,0x0,8
tick,0x7ff86ea82704,98922915,0,0x0,8
tick,0x7ff86ea82704,98924826,0,0x0,8
tick,0x7ff86ea82704,98926807,0,0x0,8
tick,0x7ff86ea82704,98928795,0,0x0,8
tick,0x7ff86ea82704,98930803,0,0x0,8
tick,0x7ff86ea82704,98932783,0,0x0,8
tick,0x7ff86ea82704,98934892,0,0x0,8
tick,0x7ff86ea82704,98936875,0,0x0,8
tick,0x7ff86ea82704,98938908,0,0x0,8
tick,0x7ff86ea82704,98940891,0,0x0,8
tick,0x7ff86ea82704,98942970,0,0x0,8
tick,0x7ff86ea82704,98944847,0,0x0,8
tick,0x7ff86ea82704,98946948,0,0x0,8
tick,0x7ff86ea82704,98948726,0,0x0,8
tick,0x7ff86ea82704,98950823,0,0x0,8
tick,0x7ff86ea82704,98952701,0,0x0,8
tick,0x7ff86ea82704,98954839,0,0x0,8
tick,0x7ff86ea82704,98956720,0,0x0,8
tick,0x7ff86ea82704,98958695,0,0x0,8
tick,0x7ff86ea82704,98960717,0,0x0,8
tick,0x7ff86ea82704,98962725,0,0x0,8
tick,0x7ff86ea82704,98964770,0,0x0,8
tick,0x7ff86ea82704,98966669,0,0x0,8
tick,0x7ff86ea82704,98968750,0,0x0,8
tick,0x7ff86ea82704,98970629,0,0x0,8
tick,0x7ff86ea82704,98972781,0,0x0,8
tick,0x7ff86ea82704,98974631,0,0x0,8
tick,0x7ff86ea82704,98976674,0,0x0,8
tick,0x7ff86ea82704,98978729,0,0x0,8
tick,0x7ff86ea82704,98980616,0,0x0,8
tick,0x7ff86ea82704,98982654,0,0x0,8
tick,0x7ff86ea82704,98984596,0,0x0,8
tick,0x7ff86ea82704,98986734,0,0x0,8
tick,0x7ff86ea82704,98988648,0,0x0,8
tick,0x7ff86ea82704,98990601,0,0x0,8
tick,0x7ff86ea82704,98992649,0,0x0,8
tick,0x7ff86ea82704,98994708,0,0x0,8
tick,0x7ff86ea82704,98996612,0,0x0,8
tick,0x7ff86ea82704,98998626,0,0x0,8
tick,0x7ff86ea82704,99000602,0,0x0,8
tick,0x7ff86ea82704,99002625,0,0x0,8
tick,0x7ff86ea82704,99004652,0,0x0,8
tick,0x7ff86ea82704,99006513,0,0x0,8
tick,0x7ff86ea82704,99008573,0,0x0,8
tick,0x7ff86ea82704,99010538,0,0x0,8
tick,0x7ff86ea82704,99012518,0,0x0,8
tick,0x7ff86ea82704,99014638,0,0x0,8
tick,0x7ff86ea82704,99016680,0,0x0,8
tick,0x7ff86ea82704,99018575,0,0x0,8
tick,0x7ff86ea82704,99020543,0,0x0,8
tick,0x7ff86ea82704,99022537,0,0x0,8
tick,0x7ff86ea82704,99024596,0,0x0,8
tick,0x7ff86ea82704,99026534,0,0x0,8
tick,0x7ff86ea82704,99028549,0,0x0,8
tick,0x7ff86ea82704,99030469,0,0x0,8
tick,0x7ff86ea82704,99032514,0,0x0,8
tick,0x7ff86ea82704,99034542,0,0x0,8
tick,0x7ff86ea82704,99036479,0,0x0,8
tick,0x7ff86ea82704,99038629,0,0x0,8
tick,0x7ff86ea82704,99040687,0,0x0,8
tick,0x7ff86ea82704,99042448,0,0x0,8
tick,0x7ff86ea82704,99044471,0,0x0,8
tick,0x7ff86ea82704,99046609,0,0x0,8
tick,0x7ff86ea82704,99048743,0,0x0,8
tick,0x7ff86ea82704,99050487,0,0x0,8
tick,0x7ff86ea82704,99052451,0,0x0,8
tick,0x7ff86ea82704,99054468,0,0x0,8
tick,0x7ff86ea82704,99056695,0,0x0,8
tick,0x7ff86ea82704,99058479,0,0x0,8
tick,0x7ff86ea82704,99060408,0,0x0,8
tick,0x7ff86ea82704,99062460,0,0x0,8
tick,0x7ff86ea82704,99064480,0,0x0,8
tick,0x7ff86ea82704,99066440,0,0x0,8
tick,0x7ff86ea82704,99068493,0,0x0,8
tick,0x7ff86ea82704,99070449,0,0x0,8
tick,0x7ff86ea82704,99072417,0,0x0,8
tick,0x7ff86ea82704,99074381,0,0x0,8
tick,0x7ff86ea82704,99076459,0,0x0,8
tick,0x7ff86ea82704,99078519,0,0x0,8
tick,0x7ff86ea82704,99080441,0,0x0,8
tick,0x7ff86ea82704,99082401,0,0x0,8
tick,0x7ff86ea82704,99084391,0,0x0,8
tick,0x7ff86ea82704,99086363,0,0x0,8
tick,0x7ff86ea82704,99088397,0,0x0,8
tick,0x7ff86ea82704,99090576,0,0x0,8
tick,0x7ff86ea82704,99092405,0,0x0,8
tick,0x7ff86ea82704,99094387,0,0x0,8
tick,0x7ff86ea82704,99096312,0,0x0,8
tick,0x7ff86ea82704,99098372,0,0x0,8
tick,0x7ff86ea82704,99100377,0,0x0,8
tick,0x7ff86ea82704,99102360,0,0x0,8
tick,0x7ff86ea82704,99104320,0,0x0,8
tick,0x7ff86ea82704,99106275,0,0x0,8
tick,0x7ff86ea82704,99108297,0,0x0,8
tick,0x7ff86ea82704,99110367,0,0x0,8
tick,0x7ff86ea82704,99112267,0,0x0,8
tick,0x7ff86ea82704,99114341,0,0x0,8
tick,0x7ff86ea82704,99116244,0,0x0,8
tick,0x7ff86ea82704,99118348,0,0x0,8
tick,0x7ff86ea82704,99120242,0,0x0,8
tick,0x7ff86ea82704,99122229,0,0x0,8
tick,0x7ff86ea82704,99124228,0,0x0,8
tick,0x7ff86ea82704,99126330,0,0x0,8
tick,0x7ff86ea82704,99128284,0,0x0,8
tick,0x7ff86ea82704,99130271,0,0x0,8
tick,0x7ff86ea82704,99132279,0,0x0,8
tick,0x7ff86ea82704,99134358,0,0x0,8
tick,0x7ff86ea82704,99136397,0,0x0,8
tick,0x7ff86ea82704,99138194,0,0x0,8
tick,0x7ff86ea82704,99140181,0,0x0,8
tick,0x7ff86ea82704,99142214,0,0x0,8
tick,0x7ff86ea82704,99144179,0,0x0,8
tick,0x7ff86ea82704,99146211,0,0x0,8
tick,0x7ff86ea82704,99148254,0,0x0,8
tick,0x7ff86ea82704,99150191,0,0x0,8
tick,0x7ff86ea82704,99152184,0,0x0,8
tick,0x7ff86ea82704,99154320,0,0x0,8
tick,0x7ff86ea82704,99156413,0,0x0,8
tick,0x7ff86ea82704,99158149,0,0x0,8
tick,0x7ff86ea82704,99160243,0,0x0,8
tick,0x7ff86ea82704,99162234,0,0x0,8
tick,0x7ff86ea82704,99164297,0,0x0,8
tick,0x7ff86ea82704,99166162,0,0x0,8
tick,0x7ff86ea82704,99168127,0,0x0,8
tick,0x7ff86ea82704,99170146,0,0x0,8
tick,0x7ff86ea82704,99172095,0,0x0,8
tick,0x7ff86ea82704,99174142,0,0x0,8
tick,0x7ff86ea82704,99176130,0,0x0,8
tick,0x7ff86ea82704,99178214,0,0x0,8
tick,0x7ff86ea82704,99180324,0,0x0,8
tick,0x7ff86ea82704,99182156,0,0x0,8
tick,0x7ff86ea82704,99184149,0,0x0,8
tick,0x7ff86ea82704,99186126,0,0x0,8
tick,0x7ff86ea82704,99188180,0,0x0,8
tick,0x7ff86ea82704,99190185,0,0x0,8
tick,0x7ff86ea82704,99192232,0,0x0,8
tick,0x7ff86ea82704,99194392,0,0x0,8
tick,0x7ff86ea82704,99196142,0,0x0,8
tick,0x7ff86ea82704,99198086,0,0x0,8
tick,0x7ff86ea82704,99200069,0,0x0,8
tick,0x7ff86ea82704,99202196,0,0x0,8
tick,0x7ff86ea82704,99204153,0,0x0,8
tick,0x7ff86ea82704,99206029,0,0x0,8
tick,0x7ff86ea82704,99208133,0,0x0,8
tick,0x7ff86ea82704,99210184,0,0x0,8
tick,0x7ff86ea82704,99212088,0,0x0,8
tick,0x7ff86ea82704,99214242,0,0x0,8
tick,0x7ff86ea82704,99216000,0,0x0,8
tick,0x7ff86ea82704,99218076,0,0x0,8
tick,0x7ff86ea82704,99220077,0,0x0,8
tick,0x7ff86ea82704,99222051,0,0x0,8
tick,0x7ff86ea82704,99224143,0,0x0,8
tick,0x7ff86ea82704,99226070,0,0x0,8
tick,0x7ff86ea82704,99228037,0,0x0,8
tick,0x7ff86ea82704,99230059,0,0x0,8
tick,0x7ff86ea82704,99235051,0,0x0,8
tick,0x7ff86ea82704,99236975,0,0x0,8
tick,0x7ff86ea82704,99238953,0,0x0,8
tick,0x7ff86ea82704,99240956,0,0x0,8
tick,0x7ff86ea82704,99242989,0,0x0,8
tick,0x7ff86ea82704,99244885,0,0x0,8
tick,0x7ff86ea82704,99246905,0,0x0,8
tick,0x7ff86ea82704,99248845,0,0x0,8
tick,0x7ff86ea82704,99250848,0,0x0,8
tick,0x7ff86ea82704,99252866,0,0x0,8
tick,0x7ff86ea82704,99254836,0,0x0,8
tick,0x7ff86ea82704,99256868,0,0x0,8
tick,0x7ff86ea82704,99258819,0,0x0,8
tick,0x7ff86ea82704,99260865,0,0x0,8
tick,0x7ff86ea82704,99262813,0,0x0,8
tick,0x7ff86ea82704,99264847,0,0x0,8
tick,0x7ff86ea82704,99266845,0,0x0,8
tick,0x7ff86ea82704,99268862,0,0x0,8
tick,0x7ff86ea82704,99270800,0,0x0,8
tick,0x7ff86ea82704,99272884,0,0x0,8
tick,0x7ff86ea82704,99274819,0,0x0,8
tick,0x7ff86ea82704,99276836,0,0x0,8
tick,0x7ff86ea82704,99278887,0,0x0,8
tick,0x7ff86ea82704,99280818,0,0x0,8
tick,0x7ff86ea82704,99282783,0,0x0,8
tick,0x7ff86ea82704,99284783,0,0x0,8
tick,0x7ff86ea82704,99286878,0,0x0,8
tick,0x7ff86ea82704,99288791,0,0x0,8
tick,0x7ff86ea82704,99290750,0,0x0,8
tick,0x7ff86ea82704,99292784,0,0x0,8
tick,0x7ff86ea82704,99294814,0,0x0,8
tick,0x7ff86ea82704,99296884,0,0x0,8
tick,0x7ff86ea82704,99298725,0,0x0,8
tick,0x7ff86ea82704,99300852,0,0x0,8
tick,0x7ff86ea82704,99302776,0,0x0,8
tick,0x7ff86ea82704,99304765,0,0x0,8
tick,0x7ff86ea82704,99306843,0,0x0,8
tick,0x7ff86ea82704,99308692,0,0x0,8
tick,0x7ff86ea82704,99310781,0,0x0,8
tick,0x7ff86ea82704,99312743,0,0x0,8
tick,0x7ff86ea82704,99314760,0,0x0,8
tick,0x7ff86ea82704,99316671,0,0x0,8
tick,0x7ff86ea82704,99318732,0,0x0,8
tick,0x7ff86ea82704,99320757,0,0x0,8
tick,0x7ff86ea82704,99322715,0,0x0,8
tick,0x7ff86ea82704,99324670,0,0x0,8
tick,0x7ff86ea82704,99326736,0,0x0,8
tick,0x7ff86ea82704,99328736,0,0x0,8
tick,0x7ff86ea82704,99330737,0,0x0,8
tick,0x7ff86ea82704,99332636,0,0x0,8
tick,0x7ff86ea82704,99334788,0,0x0,8
tick,0x7ff86ea82704,99336652,0,0x0,8
tick,0x7ff86ea82704,99338799,0,0x0,8
tick,0x7ff86ea82704,99340724,0,0x0,8
tick,0x7ff86ea82704,99342675,0,0x0,8
tick,0x7ff86ea82704,99344660,0,0x0,8
tick,0x7ff86ea82704,99346709,0,0x0,8
tick,0x7ff86ea82704,99348612,0,0x0,8
tick,0x7ff86ea82704,99350612,0,0x0,8
tick,0x7ff86ea82704,99352646,0,0x0,8
tick,0x7ff86ea82704,99354627,0,0x0,8
tick,0x7ff86ea82704,99356714,0,0x0,8
tick,0x7ff86ea82704,99358661,0,0x0,8
tick,0x7ff86ea82704,99361085,0,0x0,8
tick,0x7ff86ea82704,99362680,0,0x0,8
tick,0x7ff86ea82704,99364612,0,0x0,8
tick,0x7ff86ea82704,99366581,0,0x0,8
tick,0x7ff86ea82704,99368707,0,0x0,8
tick,0x7ff86ea82704,99370732,0,0x0,8
tick,0x7ff86ea82704,99372624,0,0x0,8
tick,0x7ff86ea82704,99374669,0,0x0,8
tick,0x7ff86ea82704,99376622,0,0x0,8
tick,0x7ff86ea82704,99378556,0,0x0,8
tick,0x7ff86ea82704,99380659,0,0x0,8
tick,0x7ff86ea82704,99382582,0,0x0,8
tick,0x7ff86ea82704,99384625,0,0x0,8
tick,0x7ff86ea82704,99386623,0,0x0,8
tick,0x7ff86ea82704,99388572,0,0x0,8
tick,0x7ff86ea82704,99390678,0,0x0,8
tick,0x7ff86ea82704,99392558,0,0x0,8
tick,0x7ff86ea82704,99394628,0,0x0,8
tick,0x7ff86ea82704,99396529,0,0x0,8
tick,0x7ff86ea82704,99398671,0,0x0,8
tick,0x7ff86ea82704,99400546,0,0x0,8
tick,0x7ff86ea82704,99402528,0,0x0,8
tick,0x7ff86ea82704,99404552,0,0x0,8
tick,0x7ff86ea82704,99406814,0,0x0,8
tick,0x7ff86ea82704,99408442,0,0x0,8
tick,0x7ff86ea82704,99410511,0,0x0,8
tick,0x7ff86ea82704,99412454,0,0x0,8
tick,0x7ff86ea82704,99414997,0,0x0,8
tick,0x7ff86ea82704,99416573,0,0x0,8
tick,0x7ff86ea82704,99418651,0,0x0,8
tick,0x7ff86ea82704,99420663,0,0x0,8
tick,0x7ff86ea82704,99422542,0,0x0,8
tick,0x7ff86ea82704,99424516,0,0x0,8
tick,0x7ff86ea82704,99426473,0,0x0,8
tick,0x7ff86ea82704,99428566,0,0x0,8
tick,0x7ff86ea82704,99430461,0,0x0,8
tick,0x7ff86ea82704,99432559,0,0x0,8
tick,0x7ff86ea82704,99434477,0,0x0,8
tick,0x7ff86ea82704,99436462,0,0x0,8
tick,0x7ff86ea82704,99438602,0,0x0,8
tick,0x7ff86ea82704,99440533,0,0x0,8
tick,0x7ff86ea82704,99442392,0,0x0,8
tick,0x7ff86ea82704,99444565,0,0x0,8
tick,0x7ff86ea82704,99446585,0,0x0,8
tick,0x7ff86ea82704,99448684,0,0x0,8
tick,0x7ff86ea82704,99450469,0,0x0,8
tick,0x7ff86ea82704,99452422,0,0x0,8
tick,0x7ff86ea82704,99454549,0,0x0,8
tick,0x7ff86ea82704,99456441,0,0x0,8
tick,0x7ff86ea82704,99458533,0,0x0,8
tick,0x7ff86ea82704,99460407,0,0x0,8
tick,0x7ff86ea82704,99462452,0,0x0,8
tick,0x7ff86ea82704,99464471,0,0x0,8
tick,0x7ff86ea82704,99466365,0,0x0,8
tick,0x7ff86ea82704,99468331,0,0x0,8
tick,0x7ff86ea82704,99470437,0,0x0,8
tick,0x7ff86ea82704,99472451,0,0x0,8
tick,0x7ff86ea82704,99474402,0,0x0,8
tick,0x7ff86ea82704,99476420,0,0x0,8
tick,0x7ff86ea82704,99478529,0,0x0,8
tick,0x7ff86ea82704,99480308,0,0x0,8
tick,0x7ff86ea82704,99482391,0,0x0,8
tick,0x7ff86ea82704,99484343,0,0x0,8
tick,0x7ff86ea82704,99486607,0,0x0,8
tick,0x7ff86ea82704,99488380,0,0x0,8
tick,0x7ff86ea82704,99490341,0,0x0,8
tick,0x7ff86ea82704,99492265,0,0x0,8
tick,0x7ff86ea82704,99494252,0,0x0,8
tick,0x7ff86ea82704,99496256,0,0x0,8
tick,0x7ff86ea82704,99498359,0,0x0,8
tick,0x7ff86ea82704,99500684,0,0x0,8
tick,0x7ff86ea82704,99502413,0,0x0,8
tick,0x7ff86ea82704,99504274,0,0x0,8
tick,0x7ff86ea82704,99506476,0,0x0,8
tick,0x7ff86ea82704,99508733,0,0x0,8
tick,0x7ff86ea82704,99510292,0,0x0,8
tick,0x7ff86ea82704,99512196,0,0x0,8
tick,0x7ff86ea82704,99514204,0,0x0,8
tick,0x7ff86ea82704,99516301,0,0x0,8
tick,0x7ff86ea82704,99518204,0,0x0,8
tick,0x7ff86ea82704,99520262,0,0x0,8
tick,0x7ff86ea82704,99522131,0,0x0,8
tick,0x7ff86ea82704,99524212,0,0x0,8
tick,0x7ff86ea82704,99526236,0,0x0,8
tick,0x7ff86ea82704,99528139,0,0x0,8
tick,0x7ff86ea82704,99530399,0,0x0,8
tick,0x7ff86ea82704,99532645,0,0x0,8
tick,0x7ff86ea82704,99534246,0,0x0,8
tick,0x7ff86ea82704,99536259,0,0x0,8
tick,0x7ff86ea82704,99538138,0,0x0,8
tick,0x7ff86ea82704,99540197,0,0x0,8
tick,0x7ff86ea82704,99542171,0,0x0,8
tick,0x7ff86ea82704,99544163,0,0x0,8
tick,0x7ff86ea82704,99546141,0,0x0,8
tick,0x7ff86ea82704,99548097,0,0x0,8
tick,0x7ff86ea82704,99550159,0,0x0,8
tick,0x7ff86ea82704,99552091,0,0x0,8
tick,0x7ff86ea82704,99554139,0,0x0,8
tick,0x7ff86ea82704,99556088,0,0x0,8
tick,0x7ff86ea82704,99558085,0,0x0,8
tick,0x7ff86ea82704,99560103,0,0x0,8
tick,0x7ff86ea82704,99562063,0,0x0,8
tick,0x7ff86ea82704,99565178,0,0x0,8
tick,0x7ff86ea82704,99566109,0,0x0,8
tick,0x7ff86ea82704,99568149,0,0x0,8
tick,0x7ff86ea82704,99570082,0,0x0,8
tick,0x7ff86ea82704,99572102,0,0x0,8
tick,0x7ff86ea82704,99574005,0,0x0,8
tick,0x7ff86ea82704,99576036,0,0x0,8
tick,0x7ff86ea82704,99577985,0,0x0,8
tick,0x7ff86ea82704,99580011,0,0x0,8
tick,0x7ff86ea82704,99582085,0,0x0,8
tick,0x7ff86ea82704,99583959,0,0x0,8
tick,0x7ff86ea82704,99585989,0,0x0,8
tick,0x7ff86ea82704,99587945,0,0x0,8
tick,0x7ff86ea82704,99589971,0,0x0,8
tick,0x7ff86ea82704,99592042,0,0x0,8
tick,0x7ff86ea82704,99593910,0,0x0,8
tick,0x7ff86ea82704,99596023,0,0x0,8
tick,0x7ff86ea82704,99599102,0,0x0,8
tick,0x7ff86ea82704,99600222,0,0x0,8
tick,0x7ff86ea82704,99602063,0,0x0,8
tick,0x7ff86ea82704,99604128,0,0x0,8
tick,0x7ff86ea82704,99605986,0,0x0,8
tick,0x7ff86ea82704,99608130,0,0x0,8
tick,0x7ff86ea82704,99609955,0,0x0,8
tick,0x7ff86ea82704,99611970,0,0x0,8
tick,0x7ff86ea82704,99614875,0,0x0,8
tick,0x7ff86ea82704,99615908,0,0x0,8
tick,0x7ff86ea82704,99617898,0,0x0,8
tick,0x7ff86ea82704,99619993,0,0x0,8
tick,0x7ff86ea82704,99621961,0,0x0,8
tick,0x7ff86ea82704,99624385,0,0x0,8
tick,0x7ff86ea82704,99625909,0,0x0,8
tick,0x7ff86ea82704,99628080,0,0x0,8
tick,0x7ff86ea82704,99629942,0,0x0,8
tick,0x7ff86ea82704,99632127,0,0x0,8
tick,0x7ff86ea82704,99633884,0,0x0,8
tick,0x7ff86ea82704,99635933,0,0x0,8
tick,0x7ff86ea82704,99637891,0,0x0,8
tick,0x7ff86ea82704,99640081,0,0x0,8
tick,0x7ff86ea82704,99641882,0,0x0,8
tick,0x7ff86ea82704,99643967,0,0x0,8
tick,0x7ff86ea82704,99645865,0,0x0,8
tick,0x7ff86ea82704,99648023,0,0x0,8
tick,0x7ff86ea82704,99649856,0,0x0,8
tick,0x7ff86ea82704,99652013,0,0x0,8
tick,0x7ff86ea82704,99653908,0,0x0,8
tick,0x7ff86ea82704,99656007,0,0x0,8
tick,0x7ff86ea82704,99657959,0,0x0,8
tick,0x7ff86ea82704,99659991,0,0x0,8
tick,0x7ff86ea82704,99661986,0,0x0,8
tick,0x7ff86ea82704,99663912,0,0x0,8
tick,0x7ff86ea82704,99665848,0,0x0,8
tick,0x7ff86ea82704,99667817,0,0x0,8
tick,0x7ff86ea82704,99669838,0,0x0,8
tick,0x7ff86ea82704,99671897,0,0x0,8
tick,0x7ff86ea82704,99673843,0,0x0,8
tick,0x7ff86ea82704,99675874,0,0x0,8
tick,0x7ff86ea82704,99678018,0,0x0,8
tick,0x7ff86ea82704,99679808,0,0x0,8
tick,0x7ff86ea82704,99681962,0,0x0,8
tick,0x7ff86ea82704,99684008,0,0x0,8
tick,0x7ff86ea82704,99685859,0,0x0,8
tick,0x7ff86ea82704,99687790,0,0x0,8
tick,0x7ff86ea82704,99689806,0,0x0,8
tick,0x7ff86ea82704,99691723,0,0x0,8
tick,0x7ff86ea82704,99693741,0,0x0,8
tick,0x7ff86ea82704,99695930,0,0x0,8
tick,0x7ff86ea82704,99697920,0,0x0,8
tick,0x7ff86ea82704,99699907,0,0x0,8
tick,0x7ff86ea82704,99701811,0,0x0,8
tick,0x7ff86ea82704,99703907,0,0x0,8
tick,0x7ff86ea82704,99705729,0,0x0,8
tick,0x7ff86ea82704,99707878,0,0x0,8
tick,0x7ff86ea82704,99709737,0,0x0,8
tick,0x7ff86ea82704,99712006,0,0x0,8
tick,0x7ff86ea82704,99713893,0,0x0,8
tick,0x7ff86ea82704,99715997,0,0x0,8
tick,0x7ff86ea82704,99717794,0,0x0,8
tick,0x7ff86ea82704,99719798,0,0x0,8
tick,0x7ff86ea82704,99721738,0,0x0,8
tick,0x7ff86ea82704,99723942,0,0x0,8
tick,0x7ff86ea82704,99725671,0,0x0,8
tick,0x7ff86ea82704,99727718,0,0x0,8
tick,0x7ff86ea82704,99729826,0,0x0,8
tick,0x7ff86ea82704,99732014,0,0x0,8
tick,0x7ff86ea82704,99733620,0,0x0,8
tick,0x7ff86ea82704,99735709,0,0x0,8
tick,0x7ff86ea82704,99737674,0,0x0,8
tick,0x7ff86ea82704,99739685,0,0x0,8
tick,0x7ff86ea82704,99741708,0,0x0,8
tick,0x7ff86ea82704,99743683,0,0x0,8
tick,0x7ff86ea82704,99745768,0,0x0,8
tick,0x7ff86ea82704,99747823,0,0x0,8
tick,0x7ff86ea82704,99749589,0,0x0,8
tick,0x7ff86ea82704,99751777,0,0x0,8
tick,0x7ff86ea82704,99753702,0,0x0,8
tick,0x7ff86ea82704,99755717,0,0x0,8
tick,0x7ff86ea82704,99757572,0,0x0,8
tick,0x7ff86ea82704,99759802,0,0x0,8
tick,0x7ff86ea82704,99761697,0,0x0,8
tick,0x7ff86ea82704,99763831,0,0x0,8
tick,0x7ff86ea82704,99765764,0,0x0,8
tick,0x7ff86ea82704,99767721,0,0x0,8
tick,0x7ff86ea82704,99769575,0,0x0,8
tick,0x7ff86ea82704,99771694,0,0x0,8
tick,0x7ff86ea82704,99774163,0,0x0,8
tick,0x7ff86ea82704,99775894,0,0x0,8
tick,0x7ff86ea82704,99777661,0,0x0,8
tick,0x7ff86ea82704,99779549,0,0x0,8
tick,0x7ff86ea82704,99781593,0,0x0,8
tick,0x7ff86ea82704,99783587,0,0x0,8
tick,0x7ff86ea82704,99785937,0,0x0,8
tick,0x7ff86ea82704,99787593,0,0x0,8
tick,0x7ff86ea82704,99789465,0,0x0,8
tick,0x7ff86ea82704,99791637,0,0x0,8
tick,0x7ff86ea82704,99793593,0,0x0,8
tick,0x7ff86ea82704,99795551,0,0x0,8
tick,0x7ff86ea82704,99797719,0,0x0,8
tick,0x7ff86ea82704,99799548,0,0x0,8
tick,0x7ff86ea82704,99800773,0,0x0,8
tick,0x7ff86ea82704,99802865,0,0x0,8
tick,0x7ff86ea82704,99804515,0,0x0,8
tick,0x7ff86ea82704,99806658,0,0x0,8
tick,0x7ff86ea82704,99809002,0,0x0,8
tick,0x7ff86ea82704,99810645,0,0x0,8
tick,0x7ff86ea82704,99812694,0,0x0,8
tick,0x7ff86ea82704,99814592,0,0x0,8
tick,0x7ff86ea82704,99816738,0,0x0,8
tick,0x7ff86ea82704,99818757,0,0x0,8
tick,0x7ff86ea82704,99820725,0,0x0,8
tick,0x7ff86ea82704,99822578,0,0x0,8
tick,0x7ff86ea82704,99824563,0,0x0,8
tick,0x7ff86ea82704,99826594,0,0x0,8
tick,0x7ff86ea82704,99828557,0,0x0,8
tick,0x7ff86ea82704,99831002,0,0x0,8
tick,0x7ff86ea82704,99832624,0,0x0,8
tick,0x7ff86ea82704,99834520,0,0x0,8
tick,0x7ff86ea82704,99836493,0,0x0,8
tick,0x7ff86ea82704,99838500,0,0x0,8
tick,0x7ff86ea82704,99840548,0,0x0,8
tick,0x7ff86ea82704,99842428,0,0x0,8
tick,0x7ff86ea82704,99844432,0,0x0,8
tick,0x7ff86ea82704,99846470,0,0x0,8
tick,0x7ff86ea82704,99848844,0,0x0,8
tick,0x7ff86ea82704,99850551,0,0x0,8
tick,0x7ff86ea82704,99852467,0,0x0,8
tick,0x7ff86ea82704,99854484,0,0x0,8
tick,0x7ff86ea82704,99856482,0,0x0,8
tick,0x7ff86ea82704,99858494,0,0x0,8
tick,0x7ff86ea82704,99860683,0,0x0,8
tick,0x7ff86ea82704,99862450,0,0x0,8
tick,0x7ff86ea82704,99864313,0,0x0,8
tick,0x7ff86ea82704,99866352,0,0x0,8
tick,0x7ff86ea82704,99868355,0,0x0,8
tick,0x7ff86ea82704,99870622,0,0x0,8
tick,0x7ff86ea82704,99872425,0,0x0,8
tick,0x7ff86ea82704,99874496,0,0x0,8
tick,0x7ff86ea82704,99876409,0,0x0,8
tick,0x7ff86ea82704,99878437,0,0x0,8
tick,0x7ff86ea82704,99880547,0,0x0,8
tick,0x7ff86ea82704,99882529,0,0x0,8
tick,0x7ff86ea82704,99884422,0,0x0,8
tick,0x7ff86ea82704,99886442,0,0x0,8
tick,0x7ff86ea82704,99888383,0,0x0,8
tick,0x7ff86ea82704,99890415,0,0x0,8
tick,0x7ff86ea82704,99892381,0,0x0,8
tick,0x7ff86ea82704,99894445,0,0x0,8
tick,0x7ff86ea82704,99896306,0,0x0,8
tick,0x7ff86ea82704,99898287,0,0x0,8
tick,0x7ff86ea82704,99900277,0,0x0,8
tick,0x7ff86ea82704,99902273,0,0x0,8
tick,0x7ff86ea82704,99904353,0,0x0,8
tick,0x7ff86ea82704,99906271,0,0x0,8
tick,0x7ff86ea82704,99908247,0,0x0,8
tick,0x7ff86ea82704,99910309,0,0x0,8
tick,0x7ff86ea82704,99912298,0,0x0,8
tick,0x7ff86ea82704,99914250,0,0x0,8
tick,0x7ff86ea82704,99916296,0,0x0,8
tick,0x7ff86ea82704,99918429,0,0x0,8
tick,0x7ff86ea82704,99920265,0,0x0,8
tick,0x7ff86ea82704,99922233,0,0x0,8
tick,0x7ff86ea82704,99924219,0,0x0,8
tick,0x7ff86ea82704,99926180,0,0x0,8
tick,0x7ff86ea82704,99928254,0,0x0,8
tick,0x7ff86ea82704,99930200,0,0x0,8
tick,0x7ff86ea82704,99932158,0,0x0,8
tick,0x7ff86ea82704,99934228,0,0x0,8
tick,0x7ff86ea82704,99936232,0,0x0,8
tick,0x7ff86ea82704,99938168,0,0x0,8
tick,0x7ff86ea82704,99940116,0,0x0,8
tick,0x7ff86ea82704,99942257,0,0x0,8
tick,0x7ff86ea82704,99944164,0,0x0,8
tick,0x7ff86ea82704,99946228,0,0x0,8
tick,0x7ff86ea82704,99948140,0,0x0,8
tick,0x7ff86ea82704,99950091,0,0x0,8
tick,0x7ff86ea82704,99952121,0,0x0,8
tick,0x7ff86ea82704,99954098,0,0x0,8
tick,0x7ff86ea82704,99956089,0,0x0,8
tick,0x7ff86ea82704,99958096,0,0x0,8
tick,0x7ff86ea82704,99960081,0,0x0,8
tick,0x7ff86ea82704,99962072,0,0x0,8
tick,0x7ff86ea82704,99964158,0,0x0,8
tick,0x7ff86ea82704,99966138,0,0x0,8
tick,0x7ff86ea82704,99968053,0,0x0,8
tick,0x7ff86ea82704,99970139,0,0x0,8
tick,0x7ff86ea82704,99972072,0,0x0,8
tick,0x7ff86ea82704,99974109,0,0x0,8
tick,0x7ff86ea82704,99976123,0,0x0,8
tick,0x7ff86ea82704,99978105,0,0x0,8
tick,0x7ff86ea82704,99980175,0,0x0,8
tick,0x7ff86ea82704,99982089,0,0x0,8
tick,0x7ff86ea82704,99984091,0,0x0,8
tick,0x7ff86ea82704,99986081,0,0x0,8
tick,0x7ff86ea82704,99988335,0,0x0,8
tick,0x7ff86ea82704,99990088,0,0x0,8
tick,0x7ff86ea82704,99992178,0,0x0,8
tick,0x7ff86ea82704,99993996,0,0x0,8
tick,0x7ff86ea82704,99996135,0,0x0,8
tick,0x7ff86ea82704,99997996,0,0x0,8
tick,0x7ff86ea82704,100000001,0,0x0,8
tick,0x7ff86ea82704,100002146,0,0x0,8
tick,0x7ff86ea82704,100004074,0,0x0,8
tick,0x7ff86ea82704,100006056,0,0x0,8
tick,0x7ff86ea82704,100007980,0,0x0,8
tick,0x7ff86ea82704,100009992,0,0x0,8
tick,0x7ff86ea82704,100011932,0,0x0,8
tick,0x7ff86ea82704,100014014,0,0x0,8
tick,0x7ff86ea82704,100015964,0,0x0,8
tick,0x7ff86ea82704,100017983,0,0x0,8
tick,0x7ff86ea82704,100020011,0,0x0,8
tick,0x7ff86ea82704,100021859,0,0x0,8
tick,0x7ff86ea82704,100023980,0,0x0,8
tick,0x7ff86ea82704,100026081,0,0x0,8
tick,0x7ff86ea82704,100027994,0,0x0,8
tick,0x7ff86ea82704,100029893,0,0x0,8
tick,0x7ff86ea82704,100031986,0,0x0,8
tick,0x7ff86ea82704,100033896,0,0x0,8
tick,0x7ff86ea82704,100035943,0,0x0,8
tick,0x7ff86ea82704,100037845,0,0x0,8
tick,0x7ff86ea82704,100039849,0,0x0,8
tick,0x7ff86ea82704,100041804,0,0x0,8
tick,0x7ff86ea82704,100043982,0,0x0,8
tick,0x7ff86ea82704,100045830,0,0x0,8
tick,0x7ff86ea82704,100047979,0,0x0,8
tick,0x7ff86ea82704,100049939,0,0x0,8
tick,0x7ff86ea82704,100052021,0,0x0,8
tick,0x7ff86ea82704,100053812,0,0x0,8
tick,0x7ff86ea82704,100055845,0,0x0,8
tick,0x7ff86ea82704,100057932,0,0x0,8
tick,0x7ff86ea82704,100059863,0,0x0,8
tick,0x7ff86ea82704,100061842,0,0x0,8
tick,0x7ff86ea82704,100063826,0,0x0,8
tick,0x7ff86ea82704,100065821,0,0x0,8
tick,0x7ff86ea82704,100067824,0,0x0,8
tick,0x7ff86ea82704,100069846,0,0x0,8
tick,0x7ff86ea82704,100071803,0,0x0,8
tick,0x7ff86ea82704,100073815,0,0x0,8
tick,0x7ff86ea82704,100075831,0,0x0,8
tick,0x7ff86ea82704,100077774,0,0x0,8
tick,0x7ff86ea82704,100079683,0,0x0,8
tick,0x7ff86ea82704,100081854,0,0x0,8
tick,0x7ff86ea82704,100083828,0,0x0,8
tick,0x7ff86ea82704,100085864,0,0x0,8
tick,0x7ff86ea82704,100087783,0,0x0,8
tick,0x7ff86ea82704,100089801,0,0x0,8
tick,0x7ff86ea82704,100091660,0,0x0,8
tick,0x7ff86ea82704,100093881,0,0x0,8
tick,0x7ff86ea82704,100095717,0,0x0,8
tick,0x7ff86ea82704,100097751,0,0x0,8
tick,0x7ff86ea82704,100099667,0,0x0,8
tick,0x7ff86ea82704,100101730,0,0x0,8
tick,0x7ff86ea82704,100103680,0,0x0,8
tick,0x7ff86ea82704,100105710,0,0x0,8
tick,0x7ff86ea82704,100107757,0,0x0,8
tick,0x7ff86ea82704,100109788,0,0x0,8
tick,0x7ff86ea82704,100111757,0,0x0,8
tick,0x7ff86ea82704,100113728,0,0x0,8
tick,0x7ff86ea82704,100115703,0,0x0,8
tick,0x7ff86ea82704,100117867,0,0x0,8
tick,0x7ff86ea82704,100119863,0,0x0,8
tick,0x7ff86ea82704,100121668,0,0x0,8
tick,0x7ff86ea82704,100123835,0,0x0,8
tick,0x7ff86ea82704,100125739,0,0x0,8
tick,0x7ff86ea82704,100127719,0,0x0,8
tick,0x7ff86ea82704,100129647,0,0x0,8
tick,0x7ff86ea82704,100131725,0,0x0,8
tick,0x7ff86ea82704,100133703,0,0x0,8
tick,0x7ff86ea82704,100135614,0,0x0,8
tick,0x7ff86ea82704,100137622,0,0x0,8
tick,0x7ff86ea82704,100139662,0,0x0,8
tick,0x7ff86ea82704,100141659,0,0x0,8
tick,0x7ff86ea82704,100143538,0,0x0,8
tick,0x7ff86ea82704,100145659,0,0x0,8
tick,0x7ff86ea82704,100147569,0,0x0,8
tick,0x7ff86ea82704,100149645,0,0x0,8
tick,0x7ff86ea82704,100151546,0,0x0,8
tick,0x7ff86ea82704,100153599,0,0x0,8
tick,0x7ff86ea82704,100155565,0,0x0,8
tick,0x7ff86ea82704,100157686,0,0x0,8
tick,0x7ff86ea82704,100159497,0,0x0,8
tick,0x7ff86ea82704,100161614,0,0x0,8
tick,0x7ff86ea82704,100163764,0,0x0,8
tick,0x7ff86ea82704,100165619,0,0x0,8
tick,0x7ff86ea82704,100167571,0,0x0,8
tick,0x7ff86ea82704,100169568,0,0x0,8
tick,0x7ff86ea82704,100171535,0,0x0,8
tick,0x7ff86ea82704,100173498,0,0x0,8
tick,0x7ff86ea82704,100175630,0,0x0,8
tick,0x7ff86ea82704,100177501,0,0x0,8
tick,0x7ff86ea82704,100179649,0,0x0,8
tick,0x7ff86ea82704,100181818,0,0x0,8
tick,0x7ff86ea82704,100184579,0,0x0,8
tick,0x7ff86ea82704,100186603,0,0x0,8
tick,0x7ff86ea82704,100188556,0,0x0,8
tick,0x7ff86ea82704,100190597,0,0x0,8
tick,0x7ff86ea82704,100192572,0,0x0,8
tick,0x7ff86ea82704,100194734,0,0x0,8
tick,0x7ff86ea82704,100196893,0,0x0,8
tick,0x7ff86ea82704,100198732,0,0x0,8
tick,0x7ff86ea82704,100200520,0,0x0,8
tick,0x7ff86ea82704,100202549,0,0x0,8
tick,0x7ff86ea82704,100204448,0,0x0,8
tick,0x7ff86ea82704,100206627,0,0x0,8
tick,0x7ff86ea82704,100208499,0,0x0,8
tick,0x7ff86ea82704,100210444,0,0x0,8
tick,0x7ff86ea82704,100212450,0,0x0,8
tick,0x7ff86ea82704,100214600,0,0x0,8
tick,0x7ff86ea82704,100216496,0,0x0,8
tick,0x7ff86ea82704,100218496,0,0x0,8
tick,0x7ff86ea82704,100220455,0,0x0,8
tick,0x7ff86ea82704,100222618,0,0x0,8
tick,0x7ff86ea82704,100224435,0,0x0,8
tick,0x7ff86ea82704,100226519,0,0x0,8
tick,0x7ff86ea82704,100228456,0,0x0,8
tick,0x7ff86ea82704,100230574,0,0x0,8
tick,0x7ff86ea82704,100232392,0,0x0,8
tick,0x7ff86ea82704,100234525,0,0x0,8
tick,0x7ff86ea82704,100236253,0,0x0,8
tick,0x7ff86ea82704,100238475,0,0x0,8
tick,0x7ff86ea82704,100240359,0,0x0,8
tick,0x7ff86ea82704,100242413,0,0x0,8
tick,0x7ff86ea82704,100244322,0,0x0,8
tick,0x7ff86ea82704,100246423,0,0x0,8
tick,0x7ff86ea82704,100248461,0,0x0,8
tick,0x7ff86ea82704,100250368,0,0x0,8
tick,0x7ff86ea82704,100252382,0,0x0,8
tick,0x7ff86ea82704,100254363,0,0x0,8
tick,0x7ff86ea82704,100256402,0,0x0,8
tick,0x7ff86ea82704,100258261,0,0x0,8
tick,0x7ff86ea82704,100260462,0,0x0,8
tick,0x7ff86ea82704,100262344,0,0x0,8
tick,0x7ff86ea82704,100264322,0,0x0,8
tick,0x7ff86ea82704,100266332,0,0x0,8
tick,0x7ff86ea82704,100268352,0,0x0,8
tick,0x7ff86ea82704,100270277,0,0x0,8
tick,0x7ff86ea82704,100272302,0,0x0,8
tick,0x7ff86ea82704,100274331,0,0x0,8
tick,0x7ff86ea82704,100276303,0,0x0,8
tick,0x7ff86ea82704,100278339,0,0x0,8
tick,0x7ff86ea82704,100280206,0,0x0,8
tick,0x7ff86ea82704,100282270,0,0x0,8
tick,0x7ff86ea82704,100284192,0,0x0,8
tick,0x7ff86ea82704,100286267,0,0x0,8
tick,0x7ff86ea82704,100288227,0,0x0,8
tick,0x7ff86ea82704,100290372,0,0x0,8
tick,0x7ff86ea82704,100292178,0,0x0,8
tick,0x7ff86ea82704,100294354,0,0x0,8
tick,0x7ff86ea82704,100296232,0,0x0,8
tick,0x7ff86ea82704,100298240,0,0x0,8
tick,0x7ff86ea82704,100300151,0,0x0,8
tick,0x7ff86ea82704,100302277,0,0x0,8
tick,0x7ff86ea82704,100304235,0,0x0,8
tick,0x7ff86ea82704,100306339,0,0x0,8
tick,0x7ff86ea82704,100308166,0,0x0,8
tick,0x7ff86ea82704,100310244,0,0x0,8
tick,0x7ff86ea82704,100312316,0,0x0,8
tick,0x7ff86ea82704,100314147,0,0x0,8
tick,0x7ff86ea82704,100316309,0,0x0,8
tick,0x7ff86ea82704,100318137,0,0x0,8
tick,0x7ff86ea82704,100320267,0,0x0,8
tick,0x7ff86ea82704,100322046,0,0x0,8
tick,0x7ff86ea82704,100324228,0,0x0,8
tick,0x7ff86ea82704,100326116,0,0x0,8
tick,0x7ff86ea82704,100328115,0,0x0,8
tick,0x7ff86ea82704,100330124,0,0x0,8
tick,0x7ff86ea82704,100332172,0,0x0,8
tick,0x7ff86ea82704,100334108,0,0x0,8
tick,0x7ff86ea82704,100336140,0,0x0,8
tick,0x7ff86ea82704,100338121,0,0x0,8
tick,0x7ff86ea82704,100340084,0,0x0,8
tick,0x7ff86ea82704,100342013,0,0x0,8
tick,0x7ff86ea82704,100344167,0,0x0,8
tick,0x7ff86ea82704,100346184,0,0x0,8
tick,0x7ff86ea82704,100348219,0,0x0,8
tick,0x7ff86ea82704,100350187,0,0x0,8
tick,0x7ff86ea82704,100352305,0,0x0,8
tick,0x7ff86ea82704,100354115,0,0x0,8
tick,0x7ff86ea82704,100356169,0,0x0,8
tick,0x7ff86ea82704,100358140,0,0x0,8
tick,0x7ff86ea82704,100360208,0,0x0,8
tick,0x7ff86ea82704,100361981,0,0x0,8
tick,0x7ff86ea82704,100363990,0,0x0,8
tick,0x7ff86ea82704,100366118,0,0x0,8
tick,0x7ff86ea82704,100368066,0,0x0,8
tick,0x7ff86ea82704,100370136,0,0x0,8
tick,0x7ff86ea82704,100372094,0,0x0,8
tick,0x7ff86ea82704,100374010,0,0x0,8
tick,0x7ff86ea82704,100376245,0,0x0,8
tick,0x7ff86ea82704,100378000,0,0x0,8
tick,0x7ff86ea82704,100380376,0,0x0,8
tick,0x7ff86ea82704,100382217,0,0x0,8
tick,0x7ff86ea82704,100384168,0,0x0,8
tick,0x7ff86ea82704,100386111,0,0x0,8
tick,0x7ff86ea82704,100388048,0,0x0,8
tick,0x7ff86ea82704,100389983,0,0x0,8
tick,0x7ff86ea82704,100392148,0,0x0,8
tick,0x7ff86ea82704,100393896,0,0x0,8
tick,0x7ff86ea82704,100396078,0,0x0,8
tick,0x7ff86ea82704,100398034,0,0x0,8
tick,0x7ff86ea82704,100400133,0,0x0,8
tick,0x7ff86ea82704,100401969,0,0x0,8
tick,0x7ff86ea82704,100404037,0,0x0,8
tick,0x7ff86ea82704,100405870,0,0x0,8
tick,0x7ff86ea82704,100408007,0,0x0,8
tick,0x7ff86ea82704,100409895,0,0x0,8
tick,0x7ff86ea82704,100411988,0,0x0,8
tick,0x7ff86ea82704,100414110,0,0x0,8
tick,0x7ff86ea82704,100416017,0,0x0,8
tick,0x7ff86ea82704,100417959,0,0x0,8
tick,0x7ff86ea82704,100420181,0,0x0,8
tick,0x7ff86ea82704,100421860,0,0x0,8
tick,0x7ff86ea82704,100424018,0,0x0,8
tick,0x7ff86ea82704,100425917,0,0x0,8
tick,0x7ff86ea82704,100428101,0,0x0,8
tick,0x7ff86ea82704,100429819,0,0x0,8
tick,0x7ff86ea82704,100431916,0,0x0,8
tick,0x7ff86ea82704,100433856,0,0x0,8
tick,0x7ff86ea82704,100435899,0,0x0,8
tick,0x7ff86ea82704,100437771,0,0x0,8
tick,0x7ff86ea82704,100439914,0,0x0,8
tick,0x7ff86ea82704,100441813,0,0x0,8
tick,0x7ff86ea82704,100443937,0,0x0,8
tick,0x7ff86ea82704,100446059,0,0x0,8
tick,0x7ff86ea82704,100447876,0,0x0,8
tick,0x7ff86ea82704,100449831,0,0x0,8
tick,0x7ff86ea82704,100451936,0,0x0,8
tick,0x7ff86ea82704,100453785,0,0x0,8
tick,0x7ff86ea82704,100455918,0,0x0,8
tick,0x7ff86ea82704,100457745,0,0x0,8
tick,0x7ff86ea82704,100459786,0,0x0,8
tick,0x7ff86ea82704,100461741,0,0x0,8
tick,0x7ff86ea82704,100463787,0,0x0,8
tick,0x7ff86ea82704,100465752,0,0x0,8
tick,0x7ff86ea82704,100467857,0,0x0,8
tick,0x7ff86ea82704,100469766,0,0x0,8
tick,0x7ff86ea82704,100471827,0,0x0,8
tick,0x7ff86ea82704,100473786,0,0x0,8
tick,0x7ff86ea82704,100475844,0,0x0,8
tick,0x7ff86ea82704,100477903,0,0x0,8
tick,0x7ff86ea82704,100479651,0,0x0,8
tick,0x7ff86ea82704,100481785,0,0x0,8
tick,0x7ff86ea82704,100483771,0,0x0,8
tick,0x7ff86ea82704,100485686,0,0x0,8
tick,0x7ff86ea82704,100487746,0,0x0,8
tick,0x7ff86ea82704,100489691,0,0x0,8
tick,0x7ff86ea82704,100491682,0,0x0,8
tick,0x7ff86ea82704,100493652,0,0x0,8
tick,0x7ff86ea82704,100495822,0,0x0,8
tick,0x7ff86ea82704,100497755,0,0x0,8
tick,0x7ff86ea82704,100499777,0,0x0,8
tick,0x7ff86ea82704,100501741,0,0x0,8
tick,0x7ff86ea82704,100503599,0,0x0,8
tick,0x7ff86ea82704,100505727,0,0x0,8
tick,0x7ff86ea82704,100507550,0,0x0,8
tick,0x7ff86ea82704,100509703,0,0x0,8
tick,0x7ff86ea82704,100511708,0,0x0,8
tick,0x7ff86ea82704,100513772,0,0x0,8
tick,0x7ff86ea82704,100515758,0,0x0,8
tick,0x7ff86ea82704,100517702,0,0x0,8
tick,0x7ff86ea82704,100519607,0,0x0,8
tick,0x7ff86ea82704,100521688,0,0x0,8
tick,0x7ff86ea82704,100523729,0,0x0,8
tick,0x7ff86ea82704,100525628,0,0x0,8
tick,0x7ff86ea82704,100527711,0,0x0,8
tick,0x7ff86ea82704,100529567,0,0x0,8
tick,0x7ff86ea82704,100531717,0,0x0,8
tick,0x7ff86ea82704,100533565,0,0x0,8
tick,0x7ff86ea82704,100535601,0,0x0,8
tick,0x7ff86ea82704,100537571,0,0x0,8
tick,0x7ff86ea82704,100539665,0,0x0,8
tick,0x7ff86ea82704,100541626,0,0x0,8
tick,0x7ff86ea82704,100543621,0,0x0,8
tick,0x7ff86ea82704,100545539,0,0x0,8
tick,0x7ff86ea82704,100547628,0,0x0,8
tick,0x7ff86ea82704,100549621,0,0x0,8
tick,0x7ff86ea82704,100551596,0,0x0,8
tick,0x7ff86ea82704,100553621,0,0x0,8
tick,0x7ff86ea82704,100555515,0,0x0,8
tick,0x7ff86ea82704,100557516,0,0x0,8
tick,0x7ff86ea82704,100559743,0,0x0,8
tick,0x7ff86ea82704,100561509,0,0x0,8
tick,0x7ff86ea82704,100563607,0,0x0,8
tick,0x7ff86ea82704,100565519,0,0x0,8
tick,0x7ff86ea82704,100567548,0,0x0,8
tick,0x7ff86ea82704,100569489,0,0x0,8
tick,0x7ff86ea82704,100571551,0,0x0,8
tick,0x7ff86ea82704,100573442,0,0x0,8
tick,0x7ff86ea82704,100575492,0,0x0,8
tick,0x7ff86ea82704,100577429,0,0x0,8
tick,0x7ff86ea82704,100579490,0,0x0,8
tick,0x7ff86ea82704,100581518,0,0x0,8
tick,0x7ff86ea82704,100583371,0,0x0,8
tick,0x7ff86ea82704,100585619,0,0x0,8
tick,0x7ff86ea82704,100587391,0,0x0,8
tick,0x7ff86ea82704,100589472,0,0x0,8
tick,0x7ff86ea82704,100591459,0,0x0,8
tick,0x7ff86ea82704,100593373,0,0x0,8
tick,0x7ff86ea82704,100598431,0,0x0,8
tick,0x7ff86ea82704,100600818,0,0x0,8
tick,0x7ff86ea82704,100602632,0,0x0,8
tick,0x7ff86ea82704,100605070,0,0x0,8
tick,0x7ff86ea82704,100606580,0,0x0,8
tick,0x7ff86ea82704,100608594,0,0x0,8
tick,0x7ff86ea82704,100610584,0,0x0,8
tick,0x7ff86ea82704,100612668,0,0x0,8
tick,0x7ff86ea82704,100614641,0,0x0,8
tick,0x7ff86ea82704,100616709,0,0x0,8
tick,0x7ff86ea82704,100618422,0,0x0,8
tick,0x7ff86ea82704,100620678,0,0x0,8
tick,0x7ff86ea82704,100622510,0,0x0,8
tick,0x7ff86ea82704,100624678,0,0x0,8
tick,0x7ff86ea82704,100626478,0,0x0,8
tick,0x7ff86ea82704,100628541,0,0x0,8
tick,0x7ff86ea82704,100630320,0,0x0,8
tick,0x7ff86ea82704,100632768,0,0x0,8
tick,0x7ff86ea82704,100634422,0,0x0,8
tick,0x7ff86ea82704,100636586,0,0x0,8
tick,0x7ff86ea82704,100638569,0,0x0,8
tick,0x7ff86ea82704,100640414,0,0x0,8
tick,0x7ff86ea82704,100642468,0,0x0,8
tick,0x7ff86ea82704,100644531,0,0x0,8
tick,0x7ff86ea82704,100646402,0,0x0,8
tick,0x7ff86ea82704,100648442,0,0x0,8
tick,0x7ff86ea82704,100650425,0,0x0,8
tick,0x7ff86ea82704,100652558,0,0x0,8
tick,0x7ff86ea82704,100654410,0,0x0,8
tick,0x7ff86ea82704,100656510,0,0x0,8
tick,0x7ff86ea82704,100658404,0,0x0,8
tick,0x7ff86ea82704,100660371,0,0x0,8
tick,0x7ff86ea82704,100662510,0,0x0,8
tick,0x7ff86ea82704,100664394,0,0x0,8
tick,0x7ff86ea82704,100666518,0,0x0,8
tick,0x7ff86ea82704,100668455,0,0x0,8
tick,0x7ff86ea82704,100670605,0,0x0,8
tick,0x7ff86ea82704,100672573,0,0x0,8
tick,0x7ff86ea82704,100674399,0,0x0,8
tick,0x7ff86ea82704,100676411,0,0x0,8
tick,0x7ff86ea82704,100678552,0,0x0,8
tick,0x7ff86ea82704,100680337,0,0x0,8
tick,0x7ff86ea82704,100682431,0,0x0,8
tick,0x7ff86ea82704,100684352,0,0x0,8
tick,0x7ff86ea82704,100686523,0,0x0,8
tick,0x7ff86ea82704,100688346,0,0x0,8
tick,0x7ff86ea82704,100690448,0,0x0,8
tick,0x7ff86ea82704,100692396,0,0x0,8
tick,0x7ff86ea82704,100694432,0,0x0,8
tick,0x7ff86ea82704,100696292,0,0x0,8
tick,0x7ff86ea82704,100698304,0,0x0,8
tick,0x7ff86ea82704,100700307,0,0x0,8
tick,0x7ff86ea82704,100702519,0,0x0,8
tick,0x7ff86ea82704,100704168,0,0x0,8
tick,0x7ff86ea82704,100706423,0,0x0,8
tick,0x7ff86ea82704,100708182,0,0x0,8
tick,0x7ff86ea82704,100710273,0,0x0,8
tick,0x7ff86ea82704,100712321,0,0x0,8
tick,0x7ff86ea82704,100714389,0,0x0,8
tick,0x7ff86ea82704,100716337,0,0x0,8
tick,0x7ff86ea82704,100718482,0,0x0,8
tick,0x7ff86ea82704,100720480,0,0x0,8
tick,0x7ff86ea82704,100722364,0,0x0,8
tick,0x7ff86ea82704,100724394,0,0x0,8
tick,0x7ff86ea82704,100726247,0,0x0,8
tick,0x7ff86ea82704,100728398,0,0x0,8
tick,0x7ff86ea82704,100730282,0,0x0,8
tick,0x7ff86ea82704,100732186,0,0x0,8
tick,0x7ff86ea82704,100734442,0,0x0,8
tick,0x7ff86ea82704,100736223,0,0x0,8
tick,0x7ff86ea82704,100738402,0,0x0,8
tick,0x7ff86ea82704,100740123,0,0x0,8
tick,0x7ff86ea82704,100742315,0,0x0,8
tick,0x7ff86ea82704,100744164,0,0x0,8
tick,0x7ff86ea82704,100746275,0,0x0,8
tick,0x7ff86ea82704,100748145,0,0x0,8
tick,0x7ff86ea82704,100750244,0,0x0,8
tick,0x7ff86ea82704,100752239,0,0x0,8
tick,0x7ff86ea82704,100754266,0,0x0,8
tick,0x7ff86ea82704,100756290,0,0x0,8
tick,0x7ff86ea82704,100758088,0,0x0,8
tick,0x7ff86ea82704,100760250,0,0x0,8
tick,0x7ff86ea82704,100762133,0,0x0,8
tick,0x7ff86ea82704,100764226,0,0x0,8
tick,0x7ff86ea82704,100766248,0,0x0,8
tick,0x7ff86ea82704,100768205,0,0x0,8
tick,0x7ff86ea82704,100769998,0,0x0,8
tick,0x7ff86ea82704,100772159,0,0x0,8
tick,0x7ff86ea82704,100774125,0,0x0,8
tick,0x7ff86ea82704,100776162,0,0x0,8
tick,0x7ff86ea82704,100778000,0,0x0,8
tick,0x7ff86ea82704,100780194,0,0x0,8
tick,0x7ff86ea82704,100782024,0,0x0,8
tick,0x7ff86ea82704,100784241,0,0x0,8
tick,0x7ff86ea82704,100785945,0,0x0,8
tick,0x7ff86ea82704,100788221,0,0x0,8
tick,0x7ff86ea82704,100789951,0,0x0,8
tick,0x7ff86ea82704,100792182,0,0x0,8
tick,0x7ff86ea82704,100794077,0,0x0,8
tick,0x7ff86ea82704,100796093,0,0x0,8
tick,0x7ff86ea82704,100798033,0,0x0,8
tick,0x7ff86ea82704,100800208,0,0x0,8
tick,0x7ff86ea82704,100801965,0,0x0,8
tick,0x7ff86ea82704,100804180,0,0x0,8
tick,0x7ff86ea82704,100806009,0,0x0,8
tick,0x7ff86ea82704,100808083,0,0x0,8
tick,0x7ff86ea82704,100810061,0,0x0,8
tick,0x7ff86ea82704,100811992,0,0x0,8
tick,0x7ff86ea82704,100814025,0,0x0,8
tick,0x7ff86ea82704,100815960,0,0x0,8
tick,0x7ff86ea82704,100817945,0,0x0,8
tick,0x7ff86ea82704,100820023,0,0x0,8
tick,0x7ff86ea82704,100821935,0,0x0,8
tick,0x7ff86ea82704,100824001,0,0x0,8
tick,0x7ff86ea82704,100825939,0,0x0,8
tick,0x7ff86ea82704,100828006,0,0x0,8
tick,0x7ff86ea82704,100829991,0,0x0,8
tick,0x7ff86ea82704,100832048,0,0x0,8
tick,0x7ff86ea82704,100834040,0,0x0,8
tick,0x7ff86ea82704,100836041,0,0x0,8
tick,0x7ff86ea82704,100838131,0,0x0,8
tick,0x7ff86ea82704,100839982,0,0x0,8
tick,0x7ff86ea82704,100842035,0,0x0,8
tick,0x7ff86ea82704,100843895,0,0x0,8
tick,0x7ff86ea82704,100845939,0,0x0,8
tick,0x7ff86ea82704,100847965,0,0x0,8
tick,0x7ff86ea82704,100849840,0,0x0,8
tick,0x7ff86ea82704,100851986,0,0x0,8
tick,0x7ff86ea82704,100853908,0,0x0,8
tick,0x7ff86ea82704,100855957,0,0x0,8
tick,0x7ff86ea82704,100857852,0,0x0,8
tick,0x7ff86ea82704,100860151,0,0x0,8
tick,0x7ff86ea82704,100861747,0,0x0,8
tick,0x7ff86ea82704,100864044,0,0x0,8
tick,0x7ff86ea82704,100865802,0,0x0,8
tick,0x7ff86ea82704,100867971,0,0x0,8
tick,0x7ff86ea82704,100869856,0,0x0,8
tick,0x7ff86ea82704,100871934,0,0x0,8
tick,0x7ff86ea82704,100873733,0,0x0,8
tick,0x7ff86ea82704,100875931,0,0x0,8
tick,0x7ff86ea82704,100877757,0,0x0,8
tick,0x7ff86ea82704,100879803,0,0x0,8
tick,0x7ff86ea82704,100881729,0,0x0,8
tick,0x7ff86ea82704,100883754,0,0x0,8
tick,0x7ff86ea82704,100885816,0,0x0,8
tick,0x7ff86ea82704,100887796,0,0x0,8
tick,0x7ff86ea82704,100889923,0,0x0,8
tick,0x7ff86ea82704,100891916,0,0x0,8
tick,0x7ff86ea82704,100893744,0,0x0,8
tick,0x7ff86ea82704,100895769,0,0x0,8
tick,0x7ff86ea82704,100897777,0,0x0,8
tick,0x7ff86ea82704,100899818,0,0x0,8
tick,0x7ff86ea82704,100901797,0,0x0,8
tick,0x7ff86ea82704,100903998,0,0x0,8
tick,0x7ff86ea82704,100905816,0,0x0,8
tick,0x7ff86ea82704,100907815,0,0x0,8
tick,0x7ff86ea82704,100909809,0,0x0,8
tick,0x7ff86ea82704,100911904,0,0x0,8
tick,0x7ff86ea82704,100913854,0,0x0,8
tick,0x7ff86ea82704,100915837,0,0x0,8
tick,0x7ff86ea82704,100917694,0,0x0,8
tick,0x7ff86ea82704,100919789,0,0x0,8
tick,0x7ff86ea82704,100921706,0,0x0,8
tick,0x7ff86ea82704,100923980,0,0x0,8
tick,0x7ff86ea82704,100925690,0,0x0,8
tick,0x7ff86ea82704,100927741,0,0x0,8
tick,0x7ff86ea82704,100929621,0,0x0,8
tick,0x7ff86ea82704,100931794,0,0x0,8
tick,0x7ff86ea82704,100933698,0,0x0,8
tick,0x7ff86ea82704,100935816,0,0x0,8
tick,0x7ff86ea82704,100937612,0,0x0,8
tick,0x7ff86ea82704,100939708,0,0x0,8
tick,0x7ff86ea82704,100941572,0,0x0,8
tick,0x7ff86ea82704,100943642,0,0x0,8
tick,0x7ff86ea82704,100945736,0,0x0,8
tick,0x7ff86ea82704,100947618,0,0x0,8
tick,0x7ff86ea82704,100949512,0,0x0,8
tick,0x7ff86ea82704,100951715,0,0x0,8
tick,0x7ff86ea82704,100953622,0,0x0,8
tick,0x7ff86ea82704,100955598,0,0x0,8
tick,0x7ff86ea82704,100957559,0,0x0,8
tick,0x7ff86ea82704,100959706,0,0x0,8
tick,0x7ff86ea82704,100961590,0,0x0,8
tick,0x7ff86ea82704,100963675,0,0x0,8
tick,0x7ff86ea82704,100965463,0,0x0,8
tick,0x7ff86ea82704,100967812,0,0x0,8
tick,0x7ff86ea82704,100969562,0,0x0,8
tick,0x7ff86ea82704,100971571,0,0x0,8
tick,0x7ff86ea82704,100973545,0,0x0,8
tick,0x7ff86ea82704,100975565,0,0x0,8
tick,0x7ff86ea82704,100977543,0,0x0,8
tick,0x7ff86ea82704,100979673,0,0x0,8
tick,0x7ff86ea82704,100981548,0,0x0,8
tick,0x7ff86ea82704,100983577,0,0x0,8
tick,0x7ff86ea82704,100985441,0,0x0,8
tick,0x7ff86ea82704,100987563,0,0x0,8
tick,0x7ff86ea82704,100989474,0,0x0,8
tick,0x7ff86ea82704,100991479,0,0x0,8
tick,0x7ff86ea82704,100993433,0,0x0,8
tick,0x7ff86ea82704,100995644,0,0x0,8
tick,0x7ff86ea82704,100997472,0,0x0,8
tick,0x7ff86ea82704,100999687,0,0x0,8
tick,0x7ff86ea82704,101001498,0,0x0,8
tick,0x7ff86ea82704,101003484,0,0x0,8
tick,0x7ff86ea82704,101005448,0,0x0,8
tick,0x7ff86ea82704,101007598,0,0x0,8
tick,0x7ff86ea82704,101009511,0,0x0,8
tick,0x7ff86ea82704,101011463,0,0x0,8
tick,0x7ff86ea82704,101013460,0,0x0,8
tick,0x7ff86ea82704,101015556,0,0x0,8
tick,0x7ff86ea82704,101017387,0,0x0,8
tick,0x7ff86ea82704,101019435,0,0x0,8
tick,0x7ff86ea82704,101021308,0,0x0,8
tick,0x7ff86ea82704,101023483,0,0x0,8
tick,0x7ff86ea82704,101025285,0,0x0,8
tick,0x7ff86ea82704,101027482,0,0x0,8
tick,0x7ff86ea82704,101029438,0,0x0,8
tick,0x7ff86ea82704,101031549,0,0x0,8
tick,0x7ff86ea82704,101033396,0,0x0,8
tick,0x7ff86ea82704,101035592,0,0x0,8
tick,0x7ff86ea82704,101037214,0,0x0,8
tick,0x7ff86ea82704,101039410,0,0x0,8
tick,0x7ff86ea82704,101041496,0,0x0,8
tick,0x7ff86ea82704,101043392,0,0x0,8
tick,0x7ff86ea82704,101045514,0,0x0,8
tick,0x7ff86ea82704,101047343,0,0x0,8
tick,0x7ff86ea82704,101049408,0,0x0,8
tick,0x7ff86ea82704,101051330,0,0x0,8
tick,0x7ff86ea82704,101053402,0,0x0,8
tick,0x7ff86ea82704,101055230,0,0x0,8
tick,0x7ff86ea82704,101057546,0,0x0,8
tick,0x7ff86ea82704,101059264,0,0x0,8
tick,0x7ff86ea82704,101061452,0,0x0,8
tick,0x7ff86ea82704,101063215,0,0x0,8
tick,0x7ff86ea82704,101065378,0,0x0,8
tick,0x7ff86ea82704,101067321,0,0x0,8
tick,0x7ff86ea82704,101069403,0,0x0,8
tick,0x7ff86ea82704,101071200,0,0x0,8
tick,0x7ff86ea82704,101073481,0,0x0,8
tick,0x7ff86ea82704,101075248,0,0x0,8
tick,0x7ff86ea82704,101077419,0,0x0,8
tick,0x7ff86ea82704,101079223,0,0x0,8
tick,0x7ff86ea82704,101081385,0,0x0,8
tick,0x7ff86ea82704,101083360,0,0x0,8
tick,0x7ff86ea82704,101085409,0,0x0,8
tick,0x7ff86ea82704,101087343,0,0x0,8
tick,0x7ff86ea82704,101089309,0,0x0,8
tick,0x7ff86ea82704,101091258,0,0x0,8
tick,0x7ff86ea82704,101093253,0,0x0,8
tick,0x7ff86ea82704,101095245,0,0x0,8
tick,0x7ff86ea82704,101097395,0,0x0,8
tick,0x7ff86ea82704,101099187,0,0x0,8
tick,0x7ff86ea82704,101101266,0,0x0,8
tick,0x7ff86ea82704,101103142,0,0x0,8
tick,0x7ff86ea82704,101105348,0,0x0,8
tick,0x7ff86ea82704,101107160,0,0x0,8
tick,0x7ff86ea82704,101109277,0,0x0,8
tick,0x7ff86ea82704,101111186,0,0x0,8
tick,0x7ff86ea82704,101113329,0,0x0,8
tick,0x7ff86ea82704,101115288,0,0x0,8
tick,0x7ff86ea82704,101117438,0,0x0,8
tick,0x7ff86ea82704,101119141,0,0x0,8
tick,0x7ff86ea82704,101121249,0,0x0,8
tick,0x7ff86ea82704,101123334,0,0x0,8
tick,0x7ff86ea82704,101125413,0,0x0,8
tick,0x7ff86ea82704,101127199,0,0x0,8
tick,0x7ff86ea82704,101129109,0,0x0,8
tick,0x7ff86ea82704,101131316,0,0x0,8
tick,0x7ff86ea82704,101133147,0,0x0,8
tick,0x7ff86ea82704,101135246,0,0x0,8
tick,0x7ff86ea82704,101137081,0,0x0,8
tick,0x7ff86ea82704,101139212,0,0x0,8
tick,0x7ff86ea82704,101141218,0,0x0,8
tick,0x7ff86ea82704,101143377,0,0x0,8
tick,0x7ff86ea82704,101145277,0,0x0,8
tick,0x7ff86ea82704,101147089,0,0x0,8
tick,0x7ff86ea82704,101149299,0,0x0,8
tick,0x7ff86ea82704,101151124,0,0x0,8
tick,0x7ff86ea82704,101153270,0,0x0,8
tick,0x7ff86ea82704,101155184,0,0x0,8
tick,0x7ff86ea82704,101157031,0,0x0,8
tick,0x7ff86ea82704,101159071,0,0x0,8
tick,0x7ff86ea82704,101161311,0,0x0,8
tick,0x7ff86ea82704,101163334,0,0x0,8
tick,0x7ff86ea82704,101165065,0,0x0,8
tick,0x7ff86ea82704,101167119,0,0x0,8
tick,0x7ff86ea82704,101169054,0,0x0,8
tick,0x7ff86ea82704,101171200,0,0x0,8
tick,0x7ff86ea82704,101173063,0,0x0,8
tick,0x7ff86ea82704,101175179,0,0x0,8
tick,0x7ff86ea82704,101177069,0,0x0,8
tick,0x7ff86ea82704,101179300,0,0x0,8
tick,0x7ff86ea82704,101181313,0,0x0,8
tick,0x7ff86ea82704,101183205,0,0x0,8
tick,0x7ff86ea82704,101185322,0,0x0,8
tick,0x7ff86ea82704,101187092,0,0x0,8
tick,0x7ff86ea82704,101189119,0,0x0,8
tick,0x7ff86ea82704,101191008,0,0x0,8
tick,0x7ff86ea82704,101193069,0,0x0,8
tick,0x7ff86ea82704,101195237,0,0x0,8
tick,0x7ff86ea82704,101197042,0,0x0,8
tick,0x7ff86ea82704,101199053,0,0x0,8
tick,0x7ff86ea82704,101201185,0,0x0,8
tick,0x7ff86ea82704,101203006,0,0x0,8
tick,0x7ff86ea82704,101204867,0,0x0,8
tick,0x7ff86ea82704,101206930,0,0x0,8
tick,0x7ff86ea82704,101208913,0,0x0,8
tick,0x7ff86ea82704,101210933,0,0x0,8
tick,0x7ff86ea82704,101212897,0,0x0,8
tick,0x7ff86ea82704,101215110,0,0x0,8
tick,0x7ff86ea82704,101216911,0,0x0,8
tick,0x7ff86ea82704,101218935,0,0x0,8
tick,0x7ff86ea82704,101220866,0,0x0,8
tick,0x7ff86ea82704,101223095,0,0x0,8
tick,0x7ff86ea82704,101224931,0,0x0,8
tick,0x7ff86ea82704,101227152,0,0x0,8
tick,0x7ff86ea82704,101228932,0,0x0,8
tick,0x7ff86ea82704,101231001,0,0x0,8
tick,0x7ff86ea82704,101232959,0,0x0,8
tick,0x7ff86ea82704,101234930,0,0x0,8
tick,0x7ff86ea82704,101236848,0,0x0,8
tick,0x7ff86ea82704,101238995,0,0x0,8
tick,0x7ff86ea82704,101240641,0,0x0,8
tick,0x7ff86ea82704,101242853,0,0x0,8
tick,0x7ff86ea82704,101244832,0,0x0,8
tick,0x7ff86ea82704,101246928,0,0x0,8
tick,0x7ff86ea82704,101248811,0,0x0,8
tick,0x7ff86ea82704,101250767,0,0x0,8
tick,0x7ff86ea82704,101252895,0,0x0,8
tick,0x7ff86ea82704,101254947,0,0x0,8
tick,0x7ff86ea82704,101256876,0,0x0,8
tick,0x7ff86ea82704,101259056,0,0x0,8
tick,0x7ff86ea82704,101260720,0,0x0,8
tick,0x7ff86ea82704,101262786,0,0x0,8
tick,0x7ff86ea82704,101264860,0,0x0,8
tick,0x7ff86ea82704,101266778,0,0x0,8
tick,0x7ff86ea82704,101268785,0,0x0,8
tick,0x7ff86ea82704,101270752,0,0x0,8
tick,0x7ff86ea82704,101272820,0,0x0,8
tick,0x7ff86ea82704,101274792,0,0x0,8
tick,0x7ff86ea82704,101276732,0,0x0,8
tick,0x7ff86ea82704,101278804,0,0x0,8
tick,0x7ff86ea82704,101280725,0,0x0,8
tick,0x7ff86ea82704,101282747,0,0x0,8
tick,0x7ff86ea82704,101284773,0,0x0,8
tick,0x7ff86ea82704,101286759,0,0x0,8
tick,0x7ff86ea82704,101288654,0,0x0,8
tick,0x7ff86ea82704,101290693,0,0x0,8
tick,0x7ff86ea82704,101292738,0,0x0,8
tick,0x7ff86ea82704,101294772,0,0x0,8
tick,0x7ff86ea82704,101296797,0,0x0,8
tick,0x7ff86ea82704,101298605,0,0x0,8
tick,0x7ff86ea82704,101300636,0,0x0,8
tick,0x7ff86ea82704,101302661,0,0x0,8
tick,0x7ff86ea82704,101304846,0,0x0,8
tick,0x7ff86ea82704,101306532,0,0x0,8
tick,0x7ff86ea82704,101308782,0,0x0,8
tick,0x7ff86ea82704,101310660,0,0x0,8
tick,0x7ff86ea82704,101312809,0,0x0,8
tick,0x7ff86ea82704,101314612,0,0x0,8
tick,0x7ff86ea82704,101316610,0,0x0,8
tick,0x7ff86ea82704,101318711,0,0x0,8
tick,0x7ff86ea82704,101320727,0,0x0,8
tick,0x7ff86ea82704,101322725,0,0x0,8
tick,0x7ff86ea82704,101324656,0,0x0,8
tick,0x7ff86ea82704,101329837,0,0x0,8
tick,0x7ff86ea82704,101331938,0,0x0,8
tick,0x7ff86ea82704,101334003,0,0x0,8
tick,0x7ff86ea82704,101335619,0,0x0,8
tick,0x7ff86ea82704,101337694,0,0x0,8
tick,0x7ff86ea82704,101340084,0,0x0,8
tick,0x7ff86ea82704,101341920,0,0x0,8
tick,0x7ff86ea82704,101343989,0,0x0,8
tick,0x7ff86ea82704,101345752,0,0x0,8
tick,0x7ff86ea82704,101347785,0,0x0,8
tick,0x7ff86ea82704,101349713,0,0x0,8
tick,0x7ff86ea82704,101352031,0,0x0,8
tick,0x7ff86ea82704,101353696,0,0x0,8
tick,0x7ff86ea82704,101355612,0,0x0,8
tick,0x7ff86ea82704,101357717,0,0x0,8
tick,0x7ff86ea82704,101359639,0,0x0,8
tick,0x7ff86ea82704,101361763,0,0x0,8
tick,0x7ff86ea82704,101363715,0,0x0,8
tick,0x7ff86ea82704,101365775,0,0x0,8
tick,0x7ff86ea82704,101367781,0,0x0,8
tick,0x7ff86ea82704,101369848,0,0x0,8
tick,0x7ff86ea82704,101371638,0,0x0,8
tick,0x7ff86ea82704,101373622,0,0x0,8
tick,0x7ff86ea82704,101375966,0,0x0,8
tick,0x7ff86ea82704,101377941,0,0x0,8
tick,0x7ff86ea82704,101379684,0,0x0,8
tick,0x7ff86ea82704,101381646,0,0x0,8
tick,0x7ff86ea82704,101383743,0,0x0,8
tick,0x7ff86ea82704,101385509,0,0x0,8
tick,0x7ff86ea82704,101387586,0,0x0,8
tick,0x7ff86ea82704,101389416,0,0x0,8
tick,0x7ff86ea82704,101391774,0,0x0,8
tick,0x7ff86ea82704,101393901,0,0x0,8
tick,0x7ff86ea82704,101395454,0,0x0,8
tick,0x7ff86ea82704,101397527,0,0x0,8
tick,0x7ff86ea82704,101399467,0,0x0,8
tick,0x7ff86ea82704,101401885,0,0x0,8
tick,0x7ff86ea82704,101403689,0,0x0,8
tick,0x7ff86ea82704,101405552,0,0x0,8
tick,0x7ff86ea82704,101407466,0,0x0,8
tick,0x7ff86ea82704,101409739,0,0x0,8
tick,0x7ff86ea82704,101411387,0,0x0,8
tick,0x7ff86ea82704,101413701,0,0x0,8
tick,0x7ff86ea82704,101415765,0,0x0,8
tick,0x7ff86ea82704,101417569,0,0x0,8
tick,0x7ff86ea82704,101419561,0,0x0,8
tick,0x7ff86ea82704,101421472,0,0x0,8
tick,0x7ff86ea82704,101423661,0,0x0,8
tick,0x7ff86ea82704,101425817,0,0x0,8
tick,0x7ff86ea82704,101427815,0,0x0,8
tick,0x7ff86ea82704,101429446,0,0x0,8
tick,0x7ff86ea82704,101431540,0,0x0,8
tick,0x7ff86ea82704,101433747,0,0x0,8
tick,0x7ff86ea82704,101435985,0,0x0,8
tick,0x7ff86ea82704,101437869,0,0x0,8
tick,0x7ff86ea82704,101439311,0,0x0,8
tick,0x7ff86ea82704,101441543,0,0x0,8
tick,0x7ff86ea82704,101443368,0,0x0,8
tick,0x7ff86ea82704,101445231,0,0x0,8
tick,0x7ff86ea82704,101447506,0,0x0,8
tick,0x7ff86ea82704,101449273,0,0x0,8
tick,0x7ff86ea82704,101451348,0,0x0,8
tick,0x7ff86ea82704,101453173,0,0x0,8
tick,0x7ff86ea82704,101455477,0,0x0,8
tick,0x7ff86ea82704,101457359,0,0x0,8
tick,0x7ff86ea82704,101459505,0,0x0,8
tick,0x7ff86ea82704,101461455,0,0x0,8
tick,0x7ff86ea82704,101463348,0,0x0,8
tick,0x7ff86ea82704,101465184,0,0x0,8
tick,0x7ff86ea82704,101467373,0,0x0,8
tick,0x7ff86ea82704,101469229,0,0x0,8
tick,0x7ff86ea82704,101471586,0,0x0,8
tick,0x7ff86ea82704,101473309,0,0x0,8
tick,0x7ff86ea82704,101475245,0,0x0,8
tick,0x7ff86ea82704,101477235,0,0x0,8
tick,0x7ff86ea82704,101479205,0,0x0,8
tick,0x7ff86ea82704,101481249,0,0x0,8
tick,0x7ff86ea82704,101483294,0,0x0,8
tick,0x7ff86ea82704,101485456,0,0x0,8
tick,0x7ff86ea82704,101487161,0,0x0,8
tick,0x7ff86ea82704,101489373,0,0x0,8
tick,0x7ff86ea82704,101491099,0,0x0,8
tick,0x7ff86ea82704,101493266,0,0x0,8
tick,0x7ff86ea82704,101495007,0,0x0,8
tick,0x7ff86ea82704,101497197,0,0x0,8
tick,0x7ff86ea82704,101499116,0,0x0,8
tick,0x7ff86ea82704,101501248,0,0x0,8
tick,0x7ff86ea82704,101503186,0,0x0,8
tick,0x7ff86ea82704,101505211,0,0x0,8
tick,0x7ff86ea82704,101507214,0,0x0,8
tick,0x7ff86ea82704,101509201,0,0x0,8
tick,0x7ff86ea82704,101511201,0,0x0,8
tick,0x7ff86ea82704,101513236,0,0x0,8
tick,0x7ff86ea82704,101515106,0,0x0,8
tick,0x7ff86ea82704,101517153,0,0x0,8
tick,0x7ff86ea82704,101519143,0,0x0,8
tick,0x7ff86ea82704,101521327,0,0x0,8
tick,0x7ff86ea82704,101523248,0,0x0,8
tick,0x7ff86ea82704,101525101,0,0x0,8
tick,0x7ff86ea82704,101527149,0,0x0,8
tick,0x7ff86ea82704,101529001,0,0x0,8
tick,0x7ff86ea82704,101531283,0,0x0,8
tick,0x7ff86ea82704,101533048,0,0x0,8
tick,0x7ff86ea82704,101535238,0,0x0,8
tick,0x7ff86ea82704,101537381,0,0x0,8
tick,0x7ff86ea82704,101538994,0,0x0,8
tick,0x7ff86ea82704,101541234,0,0x0,8
tick,0x7ff86ea82704,101543168,0,0x0,8
tick,0x7ff86ea82704,101545069,0,0x0,8
tick,0x7ff86ea82704,101547057,0,0x0,8
tick,0x7ff86ea82704,101549150,0,0x0,8
tick,0x7ff86ea82704,101551041,0,0x0,8
tick,0x7ff86ea82704,101553430,0,0x0,8
tick,0x7ff86ea82704,101555064,0,0x0,8
tick,0x7ff86ea82704,101556871,0,0x0,8
tick,0x7ff86ea82704,101559297,0,0x0,8
tick,0x7ff86ea82704,101561182,0,0x0,8
tick,0x7ff86ea82704,101562981,0,0x0,8
tick,0x7ff86ea82704,101565188,0,0x0,8
tick,0x7ff86ea82704,101567009,0,0x0,8
tick,0x7ff86ea82704,101569292,0,0x0,8
tick,0x7ff86ea82704,101571085,0,0x0,8
tick,0x7ff86ea82704,101573125,0,0x0,8
tick,0x7ff86ea82704,101575112,0,0x0,8
tick,0x7ff86ea82704,101576990,0,0x0,8
tick,0x7ff86ea82704,101579118,0,0x0,8
tick,0x7ff86ea82704,101581157,0,0x0,8
tick,0x7ff86ea82704,101583007,0,0x0,8
tick,0x7ff86ea82704,101585014,0,0x0,8
tick,0x7ff86ea82704,101587037,0,0x0,8
tick,0x7ff86ea82704,101589089,0,0x0,8
tick,0x7ff86ea82704,101590834,0,0x0,8
tick,0x7ff86ea82704,101593054,0,0x0,8
tick,0x7ff86ea82704,101595084,0,0x0,8
tick,0x7ff86ea82704,101597087,0,0x0,8
tick,0x7ff86ea82704,101599250,0,0x0,8
tick,0x7ff86ea82704,101601098,0,0x0,8
tick,0x7ff86ea82704,101606096,0,0x0,8
tick,0x7ff86ea82704,101608416,0,0x0,8
tick,0x7ff86ea82704,101609841,0,0x0,8
tick,0x7ff86ea82704,101612003,0,0x0,8
tick,0x7ff86ea82704,101613889,0,0x0,8
tick,0x7ff86ea82704,101616231,0,0x0,8
tick,0x7ff86ea82704,101617915,0,0x0,8
tick,0x7ff86ea82704,101619919,0,0x0,8
tick,0x7ff86ea82704,101622026,0,0x0,8
tick,0x7ff86ea82704,101624026,0,0x0,8
tick,0x7ff86ea82704,101626178,0,0x0,8
tick,0x7ff86ea82704,101627835,0,0x0,8
tick,0x7ff86ea82704,101629986,0,0x0,8
tick,0x7ff86ea82704,101631779,0,0x0,8
tick,0x7ff86ea82704,101633911,0,0x0,8
tick,0x7ff86ea82704,101636025,0,0x0,8
tick,0x7ff86ea82704,101637946,0,0x0,8
tick,0x7ff86ea82704,101640106,0,0x0,8
tick,0x7ff86ea82704,101641946,0,0x0,8
tick,0x7ff86ea82704,101644125,0,0x0,8
tick,0x7ff86ea82704,101645779,0,0x0,8
tick,0x7ff86ea82704,101647947,0,0x0,8
tick,0x7ff86ea82704,101649756,0,0x0,8
tick,0x7ff86ea82704,101652131,0,0x0,8
tick,0x7ff86ea82704,101653793,0,0x0,8
tick,0x7ff86ea82704,101656073,0,0x0,8
tick,0x7ff86ea82704,101657656,0,0x0,8
tick,0x7ff86ea82704,101659942,0,0x0,8
tick,0x7ff86ea82704,101661768,0,0x0,8
tick,0x7ff86ea82704,101663986,0,0x0,8
tick,0x7ff86ea82704,101665694,0,0x0,8
tick,0x7ff86ea82704,101667782,0,0x0,8
tick,0x7ff86ea82704,101669771,0,0x0,8
tick,0x7ff86ea82704,101671783,0,0x0,8
tick,0x7ff86ea82704,101673886,0,0x0,8
tick,0x7ff86ea82704,101675732,0,0x0,8
tick,0x7ff86ea82704,101677749,0,0x0,8
tick,0x7ff86ea82704,101679805,0,0x0,8
tick,0x7ff86ea82704,101681744,0,0x0,8
tick,0x7ff86ea82704,101683751,0,0x0,8
tick,0x7ff86ea82704,101685792,0,0x0,8
tick,0x7ff86ea82704,101687757,0,0x0,8
tick,0x7ff86ea82704,101689775,0,0x0,8
tick,0x7ff86ea82704,101691729,0,0x0,8
tick,0x7ff86ea82704,101693898,0,0x0,8
tick,0x7ff86ea82704,101695604,0,0x0,8
tick,0x7ff86ea82704,101697924,0,0x0,8
tick,0x7ff86ea82704,101699669,0,0x0,8
tick,0x7ff86ea82704,101701811,0,0x0,8
tick,0x7ff86ea82704,101703727,0,0x0,8
tick,0x7ff86ea82704,101705897,0,0x0,8
tick,0x7ff86ea82704,101707775,0,0x0,8
tick,0x7ff86ea82704,101709609,0,0x0,8
tick,0x7ff86ea82704,101711758,0,0x0,8
tick,0x7ff86ea82704,101713662,0,0x0,8
tick,0x7ff86ea82704,101715701,0,0x0,8
tick,0x7ff86ea82704,101717804,0,0x0,8
tick,0x7ff86ea82704,101719610,0,0x0,8
tick,0x7ff86ea82704,101721708,0,0x0,8
tick,0x7ff86ea82704,101723707,0,0x0,8
tick,0x7ff86ea82704,101725749,0,0x0,8
tick,0x7ff86ea82704,101727701,0,0x0,8
tick,0x7ff86ea82704,101729617,0,0x0,8
tick,0x7ff86ea82704,101731872,0,0x0,8
tick,0x7ff86ea82704,101733760,0,0x0,8
tick,0x7ff86ea82704,101735605,0,0x0,8
tick,0x7ff86ea82704,101737420,0,0x0,8
tick,0x7ff86ea82704,101739774,0,0x0,8
tick,0x7ff86ea82704,101741657,0,0x0,8
tick,0x7ff86ea82704,101743415,0,0x0,8
tick,0x7ff86ea82704,101745603,0,0x0,8
tick,0x7ff86ea82704,101747552,0,0x0,8
tick,0x7ff86ea82704,101749700,0,0x0,8
tick,0x7ff86ea82704,101751550,0,0x0,8
tick,0x7ff86ea82704,101753502,0,0x0,8
tick,0x7ff86ea82704,101755635,0,0x0,8
tick,0x7ff86ea82704,101757604,0,0x0,8
tick,0x7ff86ea82704,101759706,0,0x0,8
tick,0x7ff86ea82704,101761539,0,0x0,8
tick,0x7ff86ea82704,101763641,0,0x0,8
tick,0x7ff86ea82704,101765543,0,0x0,8
tick,0x7ff86ea82704,101767622,0,0x0,8
tick,0x7ff86ea82704,101769489,0,0x0,8
tick,0x7ff86ea82704,101771495,0,0x0,8
tick,0x7ff86ea82704,101773558,0,0x0,8
tick,0x7ff86ea82704,101775451,0,0x0,8
tick,0x7ff86ea82704,101777589,0,0x0,8
tick,0x7ff86ea82704,101779616,0,0x0,8
tick,0x7ff86ea82704,101781501,0,0x0,8
tick,0x7ff86ea82704,101783348,0,0x0,8
tick,0x7ff86ea82704,101785469,0,0x0,8
tick,0x7ff86ea82704,101787456,0,0x0,8
tick,0x7ff86ea82704,101789602,0,0x0,8
tick,0x7ff86ea82704,101791446,0,0x0,8
tick,0x7ff86ea82704,101793426,0,0x0,8
tick,0x7ff86ea82704,101795482,0,0x0,8
tick,0x7ff86ea82704,101797390,0,0x0,8
tick,0x7ff86ea82704,101799521,0,0x0,8
tick,0x7ff86ea82704,101801401,0,0x0,8
tick,0x7ff86ea82704,101803562,0,0x0,8
tick,0x7ff86ea82704,101805466,0,0x0,8
tick,0x7ff86ea82704,101807409,0,0x0,8
tick,0x7ff86ea82704,101809435,0,0x0,8
tick,0x7ff86ea82704,101811474,0,0x0,8
tick,0x7ff86ea82704,101813347,0,0x0,8
tick,0x7ff86ea82704,101815368,0,0x0,8
tick,0x7ff86ea82704,101817389,0,0x0,8
tick,0x7ff86ea82704,101819378,0,0x0,8
tick,0x7ff86ea82704,101821512,0,0x0,8
tick,0x7ff86ea82704,101823498,0,0x0,8
tick,0x7ff86ea82704,101825498,0,0x0,8
tick,0x7ff86ea82704,101827320,0,0x0,8
tick,0x7ff86ea82704,101829264,0,0x0,8
tick,0x7ff86ea82704,101831230,0,0x0,8
tick,0x7ff86ea82704,101833439,0,0x0,8
tick,0x7ff86ea82704,101835450,0,0x0,8
tick,0x7ff86ea82704,101837316,0,0x0,8
tick,0x7ff86ea82704,101839319,0,0x0,8
tick,0x7ff86ea82704,101841365,0,0x0,8
tick,0x7ff86ea82704,101843437,0,0x0,8
tick,0x7ff86ea82704,101845154,0,0x0,8
tick,0x7ff86ea82704,101847623,0,0x0,8
tick,0x7ff86ea82704,101849376,0,0x0,8
tick,0x7ff86ea82704,101851375,0,0x0,8
tick,0x7ff86ea82704,101853365,0,0x0,8
tick,0x7ff86ea82704,101855222,0,0x0,8
tick,0x7ff86ea82704,101857271,0,0x0,8
tick,0x7ff86ea82704,101859372,0,0x0,8
tick,0x7ff86ea82704,101861274,0,0x0,8
tick,0x7ff86ea82704,101863399,0,0x0,8
tick,0x7ff86ea82704,101865420,0,0x0,8
tick,0x7ff86ea82704,101867384,0,0x0,8
tick,0x7ff86ea82704,101869191,0,0x0,8
tick,0x7ff86ea82704,101871340,0,0x0,8
tick,0x7ff86ea82704,101873221,0,0x0,8
tick,0x7ff86ea82704,101875225,0,0x0,8
tick,0x7ff86ea82704,101877160,0,0x0,8
tick,0x7ff86ea82704,101879379,0,0x0,8
tick,0x7ff86ea82704,101881176,0,0x0,8
tick,0x7ff86ea82704,101883178,0,0x0,8
tick,0x7ff86ea82704,101885320,0,0x0,8
tick,0x7ff86ea82704,101887063,0,0x0,8
tick,0x7ff86ea82704,101889311,0,0x0,8
tick,0x7ff86ea82704,101891204,0,0x0,8
tick,0x7ff86ea82704,101893358,0,0x0,8
tick,0x7ff86ea82704,101895015,0,0x0,8
tick,0x7ff86ea82704,101897280,0,0x0,8
tick,0x7ff86ea82704,101899231,0,0x0,8
tick,0x7ff86ea82704,101901213,0,0x0,8
tick,0x7ff86ea82704,101903097,0,0x0,8
tick,0x7ff86ea82704,101905223,0,0x0,8
tick,0x7ff86ea82704,101907051,0,0x0,8
tick,0x7ff86ea82704,101909191,0,0x0,8
tick,0x7ff86ea82704,101911049,0,0x0,8
tick,0x7ff86ea82704,101913272,0,0x0,8
tick,0x7ff86ea82704,101914973,0,0x0,8
tick,0x7ff86ea82704,101917203,0,0x0,8
tick,0x7ff86ea82704,101919058,0,0x0,8
tick,0x7ff86ea82704,101921144,0,0x0,8
tick,0x7ff86ea82704,101923277,0,0x0,8
tick,0x7ff86ea82704,101924945,0,0x0,8
tick,0x7ff86ea82704,101927177,0,0x0,8
tick,0x7ff86ea82704,101929095,0,0x0,8
tick,0x7ff86ea82704,101931203,0,0x0,8
tick,0x7ff86ea82704,101933103,0,0x0,8
tick,0x7ff86ea82704,101934965,0,0x0,8
tick,0x7ff86ea82704,101937081,0,0x0,8
tick,0x7ff86ea82704,101939115,0,0x0,8
tick,0x7ff86ea82704,101940936,0,0x0,8
tick,0x7ff86ea82704,101943118,0,0x0,8
tick,0x7ff86ea82704,101944892,0,0x0,8
tick,0x7ff86ea82704,101947037,0,0x0,8
tick,0x7ff86ea82704,101949088,0,0x0,8
tick,0x7ff86ea82704,101951113,0,0x0,8
tick,0x7ff86ea82704,101952980,0,0x0,8
tick,0x7ff86ea82704,101955118,0,0x0,8
tick,0x7ff86ea82704,101956875,0,0x0,8
tick,0x7ff86ea82704,101959146,0,0x0,8
tick,0x7ff86ea82704,101960794,0,0x0,8
tick,0x7ff86ea82704,101963171,0,0x0,8
tick,0x7ff86ea82704,101964956,0,0x0,8
tick,0x7ff86ea82704,101967061,0,0x0,8
tick,0x7ff86ea82704,101968918,0,0x0,8
tick,0x7ff86ea82704,101971037,0,0x0,8
tick,0x7ff86ea82704,101972810,0,0x0,8
tick,0x7ff86ea82704,101974995,0,0x0,8
tick,0x7ff86ea82704,101976817,0,0x0,8
tick,0x7ff86ea82704,101978954,0,0x0,8
tick,0x7ff86ea82704,101980988,0,0x0,8
tick,0x7ff86ea82704,101983039,0,0x0,8
tick,0x7ff86ea82704,101984870,0,0x0,8
tick,0x7ff86ea82704,101987010,0,0x0,8
tick,0x7ff86ea82704,101988931,0,0x0,8
tick,0x7ff86ea82704,101990949,0,0x0,8
tick,0x7ff86ea82704,101992968,0,0x0,8
tick,0x7ff86ea82704,101994926,0,0x0,8
tick,0x7ff86ea82704,101996736,0,0x0,8
tick,0x7ff86ea82704,101998878,0,0x0,8
tick,0x7ff86ea82704,102000720,0,0x0,8
tick,0x7ff86ea82704,102003000,0,0x0,8
tick,0x7ff86ea82704,102004817,0,0x0,8
tick,0x7ff86ea82704,102006915,0,0x0,8
tick,0x7ff86ea82704,102008790,0,0x0,8
tick,0x7ff86ea82704,102010912,0,0x0,8
tick,0x7ff86ea82704,102012766,0,0x0,8
tick,0x7ff86ea82704,102014956,0,0x0,8
tick,0x7ff86ea82704,102016852,0,0x0,8
tick,0x7ff86ea82704,102018734,0,0x0,8
tick,0x7ff86ea82704,102020856,0,0x0,8
tick,0x7ff86ea82704,102022761,0,0x0,8
tick,0x7ff86ea82704,102024969,0,0x0,8
tick,0x7ff86ea82704,102026990,0,0x0,8
tick,0x7ff86ea82704,102028966,0,0x0,8
tick,0x7ff86ea82704,102030897,0,0x0,8
tick,0x7ff86ea82704,102032890,0,0x0,8
tick,0x7ff86ea82704,102034900,0,0x0,8
tick,0x7ff86ea82704,102036906,0,0x0,8
tick,0x7ff86ea82704,102038664,0,0x0,8
tick,0x7ff86ea82704,102040921,0,0x0,8
tick,0x7ff86ea82704,102042875,0,0x0,8
tick,0x7ff86ea82704,102044903,0,0x0,8
tick,0x7ff86ea82704,102046645,0,0x0,8
tick,0x7ff86ea82704,102048797,0,0x0,8
tick,0x7ff86ea82704,102050593,0,0x0,8
tick,0x7ff86ea82704,102052755,0,0x0,8
tick,0x7ff86ea82704,102054666,0,0x0,8
tick,0x7ff86ea82704,102056790,0,0x0,8
tick,0x7ff86ea82704,102058659,0,0x0,8
tick,0x7ff86ea82704,102060790,0,0x0,8
tick,0x7ff86ea82704,102062744,0,0x0,8
tick,0x7ff86ea82704,102064761,0,0x0,8
tick,0x7ff86ea82704,102067147,0,0x0,8
tick,0x7ff86ea82704,102068836,0,0x0,8
tick,0x7ff86ea82704,102071036,0,0x0,8
tick,0x7ff86ea82704,102072748,0,0x0,8
tick,0x7ff86ea82704,102074714,0,0x0,8
tick,0x7ff86ea82704,102076801,0,0x0,8
tick,0x7ff86ea82704,102078565,0,0x0,8
tick,0x7ff86ea82704,102080831,0,0x0,8
tick,0x7ff86ea82704,102082696,0,0x0,8
tick,0x7ff86ea82704,102084866,0,0x0,8
tick,0x7ff86ea82704,102086627,0,0x0,8
tick,0x7ff86ea82704,102088749,0,0x0,8
tick,0x7ff86ea82704,102090799,0,0x0,8
tick,0x7ff86ea82704,102092830,0,0x0,8
tick,0x7ff86ea82704,102094637,0,0x0,8
tick,0x7ff86ea82704,102096792,0,0x0,8
tick,0x7ff86ea82704,102098511,0,0x0,8
tick,0x7ff86ea82704,102100780,0,0x0,8
tick,0x7ff86ea82704,102102560,0,0x0,8
tick,0x7ff86ea82704,102104840,0,0x0,8
tick,0x7ff86ea82704,102106463,0,0x0,8
tick,0x7ff86ea82704,102108800,0,0x0,8
tick,0x7ff86ea82704,102110724,0,0x0,8
tick,0x7ff86ea82704,102112743,0,0x0,8
tick,0x7ff86ea82704,102114741,0,0x0,8
tick,0x7ff86ea82704,102116562,0,0x0,8
tick,0x7ff86ea82704,102118665,0,0x0,8
tick,0x7ff86ea82704,102120795,0,0x0,8
tick,0x7ff86ea82704,102122785,0,0x0,8
tick,0x7ff86ea82704,102124507,0,0x0,8
tick,0x7ff86ea82704,102126683,0,0x0,8
tick,0x7ff86ea82704,102128628,0,0x0,8
tick,0x7ff86ea82704,102130653,0,0x0,8
tick,0x7ff86ea82704,102132636,0,0x0,8
tick,0x7ff86ea82704,102134612,0,0x0,8
tick,0x7ff86ea82704,102136625,0,0x0,8
tick,0x7ff86ea82704,102138550,0,0x0,8
tick,0x7ff86ea82704,102140543,0,0x0,8
tick,0x7ff86ea82704,102142349,0,0x0,8
tick,0x7ff86ea82704,102144534,0,0x0,8
tick,0x7ff86ea82704,102146508,0,0x0,8
tick,0x7ff86ea82704,102148441,0,0x0,8
tick,0x7ff86ea82704,102150426,0,0x0,8
tick,0x7ff86ea82704,102152523,0,0x0,8
tick,0x7ff86ea82704,102154506,0,0x0,8
tick,0x7ff86ea82704,102156318,0,0x0,8
tick,0x7ff86ea82704,102158460,0,0x0,8
tick,0x7ff86ea82704,102160310,0,0x0,8
tick,0x7ff86ea82704,102162830,0,0x0,8
tick,0x7ff86ea82704,102164892,0,0x0,8
tick,0x7ff86ea82704,102166488,0,0x0,8
tick,0x7ff86ea82704,102168684,0,0x0,8
tick,0x7ff86ea82704,102170484,0,0x0,8
tick,0x7ff86ea82704,102172517,0,0x0,8
tick,0x7ff86ea82704,102174357,0,0x0,8
tick,0x7ff86ea82704,102176506,0,0x0,8
tick,0x7ff86ea82704,102178314,0,0x0,8
tick,0x7ff86ea82704,102180458,0,0x0,8
tick,0x7ff86ea82704,102182510,0,0x0,8
tick,0x7ff86ea82704,102184403,0,0x0,8
tick,0x7ff86ea82704,102186466,0,0x0,8
tick,0x7ff86ea82704,102188388,0,0x0,8
tick,0x7ff86ea82704,102190373,0,0x0,8
tick,0x7ff86ea82704,102192458,0,0x0,8
tick,0x7ff86ea82704,102194293,0,0x0,8
tick,0x7ff86ea82704,102196319,0,0x0,8
tick,0x7ff86ea82704,102198426,0,0x0,8
tick,0x7ff86ea82704,102200401,0,0x0,8
tick,0x7ff86ea82704,102202404,0,0x0,8
tick,0x7ff86ea82704,102204526,0,0x0,8
tick,0x7ff86ea82704,102206334,0,0x0,8
tick,0x7ff86ea82704,102208457,0,0x0,8
tick,0x7ff86ea82704,102210300,0,0x0,8
tick,0x7ff86ea82704,102212269,0,0x0,8
tick,0x7ff86ea82704,102214309,0,0x0,8
tick,0x7ff86ea82704,102216275,0,0x0,8
tick,0x7ff86ea82704,102218435,0,0x0,8
tick,0x7ff86ea82704,102220297,0,0x0,8
tick,0x7ff86ea82704,102222339,0,0x0,8
tick,0x7ff86ea82704,102224368,0,0x0,8
tick,0x7ff86ea82704,102226230,0,0x0,8
tick,0x7ff86ea82704,102228312,0,0x0,8
tick,0x7ff86ea82704,102230287,0,0x0,8
tick,0x7ff86ea82704,102232285,0,0x0,8
tick,0x7ff86ea82704,102234246,0,0x0,8
tick,0x7ff86ea82704,102236250,0,0x0,8
tick,0x7ff86ea82704,102238190,0,0x0,8
tick,0x7ff86ea82704,102240337,0,0x0,8
tick,0x7ff86ea82704,102242296,0,0x0,8
tick,0x7ff86ea82704,102244108,0,0x0,8
tick,0x7ff86ea82704,102246230,0,0x0,8
tick,0x7ff86ea82704,102248064,0,0x0,8
tick,0x7ff86ea82704,102250230,0,0x0,8
tick,0x7ff86ea82704,102252248,0,0x0,8
tick,0x7ff86ea82704,102254204,0,0x0,8
tick,0x7ff86ea82704,102256228,0,0x0,8
tick,0x7ff86ea82704,102258563,0,0x0,8
tick,0x7ff86ea82704,102260183,0,0x0,8
tick,0x7ff86ea82704,102262226,0,0x0,8
tick,0x7ff86ea82704,102264200,0,0x0,8
tick,0x7ff86ea82704,102266098,0,0x0,8
tick,0x7ff86ea82704,102268148,0,0x0,8
tick,0x7ff86ea82704,102270096,0,0x0,8
tick,0x7ff86ea82704,102272179,0,0x0,8
tick,0x7ff86ea82704,102274076,0,0x0,8
tick,0x7ff86ea82704,102276171,0,0x0,8
tick,0x7ff86ea82704,102277978,0,0x0,8
tick,0x7ff86ea82704,102280085,0,0x0,8
tick,0x7ff86ea82704,102282055,0,0x0,8
tick,0x7ff86ea82704,102284160,0,0x0,8
tick,0x7ff86ea82704,102286148,0,0x0,8
tick,0x7ff86ea82704,102288134,0,0x0,8
tick,0x7ff86ea82704,102290213,0,0x0,8
tick,0x7ff86ea82704,102292084,0,0x0,8
tick,0x7ff86ea82704,102295077,0,0x0,8
tick,0x7ff86ea82704,102297138,0,0x0,8
tick,0x7ff86ea82704,102298941,0,0x0,8
tick,0x7ff86ea82704,102300934,0,0x0,8
tick,0x7ff86ea82704,102302980,0,0x0,8
tick,0x7ff86ea82704,102304925,0,0x0,8
tick,0x7ff86ea82704,102307267,0,0x0,8
tick,0x7ff86ea82704,102308846,0,0x0,8
tick,0x7ff86ea82704,102310191,0,0x0,8
tick,0x7ff86ea82704,102312086,0,0x0,8
tick,0x7ff86ea82704,102314009,0,0x0,8
tick,0x7ff86ea82704,102316281,0,0x0,8
tick,0x7ff86ea82704,102318209,0,0x0,8
tick,0x7ff86ea82704,102320134,0,0x0,8
tick,0x7ff86ea82704,102322929,0,0x0,8
tick,0x7ff86ea82704,102325788,0,0x0,8
tick,0x7ff86ea82704,102327640,0,0x0,8
tick,0x7ff86ea82704,102330098,0,0x0,8
tick,0x7ff86ea82704,102331620,0,0x0,8
tick,0x7ff86ea82704,102333698,0,0x0,8
tick,0x7ff86ea82704,102335646,0,0x0,8
tick,0x7ff86ea82704,102337677,0,0x0,8
tick,0x7ff86ea82704,102339631,0,0x0,8
tick,0x7ff86ea82704,102341675,0,0x0,8
tick,0x7ff86ea82704,102343590,0,0x0,8
tick,0x7ff86ea82704,102345662,0,0x0,8
tick,0x7ff86ea82704,102347599,0,0x0,8
tick,0x7ff86ea82704,102349547,0,0x0,8
tick,0x7ff86ea82704,102351581,0,0x0,8
tick,0x7ff86ea82704,102353537,0,0x0,8
tick,0x7ff86ea82704,102355599,0,0x0,8
tick,0x7ff86ea82704,102357532,0,0x0,8
tick,0x7ff86ea82704,102359535,0,0x0,8
tick,0x7ff86ea82704,102361576,0,0x0,8
tick,0x7ff86ea82704,102363516,0,0x0,8
tick,0x7ff86ea82704,102365602,0,0x0,8
tick,0x7ff86ea82704,102367635,0,0x0,8
tick,0x7ff86ea82704,102369568,0,0x0,8
tick,0x7ff86ea82704,102371492,0,0x0,8
tick,0x7ff86ea82704,102373555,0,0x0,8
tick,0x7ff86ea82704,102375935,0,0x0,8
tick,0x7ff86ea82704,102377539,0,0x0,8
tick,0x7ff86ea82704,102379607,0,0x0,8
tick,0x7ff86ea82704,102381594,0,0x0,8
tick,0x7ff86ea82704,102383506,0,0x0,8
tick,0x7ff86ea82704,102385564,0,0x0,8
tick,0x7ff86ea82704,102387632,0,0x0,8
tick,0x7ff86ea82704,102389548,0,0x0,8
tick,0x7ff86ea82704,102391475,0,0x0,8
tick,0x7ff86ea82704,102393494,0,0x0,8
tick,0x7ff86ea82704,102395491,0,0x0,8
tick,0x7ff86ea82704,102397596,0,0x0,8
tick,0x7ff86ea82704,102399519,0,0x0,8
tick,0x7ff86ea82704,102401493,0,0x0,8
tick,0x7ff86ea82704,102403522,0,0x0,8
tick,0x7ff86ea82704,102405424,0,0x0,8
tick,0x7ff86ea82704,102407458,0,0x0,8
tick,0x7ff86ea82704,102409401,0,0x0,8
tick,0x7ff86ea82704,102411482,0,0x0,8
tick,0x7ff86ea82704,102413399,0,0x0,8
tick,0x7ff86ea82704,102415410,0,0x0,8
tick,0x7ff86ea82704,102417458,0,0x0,8
tick,0x7ff86ea82704,102419469,0,0x0,8
tick,0x7ff86ea82704,102421438,0,0x0,8
tick,0x7ff86ea82704,102423467,0,0x0,8
tick,0x7ff86ea82704,102425403,0,0x0,8
tick,0x7ff86ea82704,102427369,0,0x0,8
tick,0x7ff86ea82704,102429386,0,0x0,8
tick,0x7ff86ea82704,102431339,0,0x0,8
tick,0x7ff86ea82704,102433368,0,0x0,8
tick,0x7ff86ea82704,102435341,0,0x0,8
tick,0x7ff86ea82704,102437389,0,0x0,8
tick,0x7ff86ea82704,102439333,0,0x0,8
tick,0x7ff86ea82704,102441401,0,0x0,8
tick,0x7ff86ea82704,102443334,0,0x0,8
tick,0x7ff86ea82704,102445434,0,0x0,8
tick,0x7ff86ea82704,102447440,0,0x0,8
tick,0x7ff86ea82704,102449408,0,0x0,8
tick,0x7ff86ea82704,102451348,0,0x0,8
tick,0x7ff86ea82704,102453756,0,0x0,8
tick,0x7ff86ea82704,102455417,0,0x0,8
tick,0x7ff86ea82704,102457396,0,0x0,8
tick,0x7ff86ea82704,102459427,0,0x0,8
tick,0x7ff86ea82704,102461400,0,0x0,8
tick,0x7ff86ea82704,102463338,0,0x0,8
tick,0x7ff86ea82704,102465477,0,0x0,8
tick,0x7ff86ea82704,102467452,0,0x0,8
tick,0x7ff86ea82704,102469453,0,0x0,8
tick,0x7ff86ea82704,102471301,0,0x0,8
tick,0x7ff86ea82704,102473345,0,0x0,8
tick,0x7ff86ea82704,102475470,0,0x0,8
tick,0x7ff86ea82704,102477346,0,0x0,8
tick,0x7ff86ea82704,102479361,0,0x0,8
tick,0x7ff86ea82704,102481300,0,0x0,8
tick,0x7ff86ea82704,102483386,0,0x0,8
tick,0x7ff86ea82704,102485270,0,0x0,8
tick,0x7ff86ea82704,102487378,0,0x0,8
tick,0x7ff86ea82704,102489318,0,0x0,8
tick,0x7ff86ea82704,102491427,0,0x0,8
tick,0x7ff86ea82704,102493256,0,0x0,8
tick,0x7ff86ea82704,102495371,0,0x0,8
tick,0x7ff86ea82704,102497288,0,0x0,8
tick,0x7ff86ea82704,102499407,0,0x0,8
tick,0x7ff86ea82704,102501277,0,0x0,8
tick,0x7ff86ea82704,102503277,0,0x0,8
tick,0x7ff86ea82704,102505423,0,0x0,8
tick,0x7ff86ea82704,102507375,0,0x0,8
tick,0x7ff86ea82704,102509298,0,0x0,8
tick,0x7ff86ea82704,102511209,0,0x0,8
tick,0x7ff86ea82704,102513193,0,0x0,8
tick,0x7ff86ea82704,102515259,0,0x0,8
tick,0x7ff86ea82704,102517192,0,0x0,8
tick,0x7ff86ea82704,102519345,0,0x0,8
tick,0x7ff86ea82704,102521238,0,0x0,8
tick,0x7ff86ea82704,102523134,0,0x0,8
tick,0x7ff86ea82704,102525228,0,0x0,8
tick,0x7ff86ea82704,102527325,0,0x0,8
tick,0x7ff86ea82704,102529204,0,0x0,8
tick,0x7ff86ea82704,102531152,0,0x0,8
tick,0x7ff86ea82704,102533193,0,0x0,8
tick,0x7ff86ea82704,102535149,0,0x0,8
tick,0x7ff86ea82704,102537153,0,0x0,8
tick,0x7ff86ea82704,102539190,0,0x0,8
tick,0x7ff86ea82704,102541080,0,0x0,8
tick,0x7ff86ea82704,102543433,0,0x0,8
tick,0x7ff86ea82704,102545276,0,0x0,8
tick,0x7ff86ea82704,102547180,0,0x0,8
tick,0x7ff86ea82704,102549374,0,0x0,8
tick,0x7ff86ea82704,102551230,0,0x0,8
tick,0x7ff86ea82704,102553137,0,0x0,8
tick,0x7ff86ea82704,102555065,0,0x0,8
tick,0x7ff86ea82704,102557176,0,0x0,8
tick,0x7ff86ea82704,102559431,0,0x0,8
tick,0x7ff86ea82704,102561068,0,0x0,8
tick,0x7ff86ea82704,102563206,0,0x0,8
tick,0x7ff86ea82704,102565864,0,0x0,8
tick,0x7ff86ea82704,102567104,0,0x0,8
tick,0x7ff86ea82704,102569075,0,0x0,8
tick,0x7ff86ea82704,102571148,0,0x0,8
tick,0x7ff86ea82704,102573334,0,0x0,8
tick,0x7ff86ea82704,102575180,0,0x0,8
tick,0x7ff86ea82704,102577268,0,0x0,8
tick,0x7ff86ea82704,102579019,0,0x0,8
tick,0x7ff86ea82704,102581121,0,0x0,8
tick,0x7ff86ea82704,102582998,0,0x0,8
tick,0x7ff86ea82704,102585699,0,0x0,8
tick,0x7ff86ea82704,102587255,0,0x0,8
tick,0x7ff86ea82704,102589216,0,0x0,8
tick,0x7ff86ea82704,102591105,0,0x0,8
tick,0x7ff86ea82704,102593261,0,0x0,8
tick,0x7ff86ea82704,102595197,0,0x0,8
tick,0x7ff86ea82704,102597378,0,0x0,8
tick,0x7ff86ea82704,102599348,0,0x0,8
tick,0x7ff86ea82704,102601418,0,0x0,8
tick,0x7ff86ea82704,102603255,0,0x0,8
tick,0x7ff86ea82704,102605139,0,0x0,8
tick,0x7ff86ea82704,102607035,0,0x0,8
tick,0x7ff86ea82704,102609029,0,0x0,8
tick,0x7ff86ea82704,102611045,0,0x0,8
tick,0x7ff86ea82704,102613162,0,0x0,8
tick,0x7ff86ea82704,102615051,0,0x0,8
tick,0x7ff86ea82704,102617051,0,0x0,8
tick,0x7ff86ea82704,102618983,0,0x0,8
tick,0x7ff86ea82704,102621059,0,0x0,8
tick,0x7ff86ea82704,102622979,0,0x0,8
tick,0x7ff86ea82704,102624999,0,0x0,8
tick,0x7ff86ea82704,102626952,0,0x0,8
tick,0x7ff86ea82704,102629066,0,0x0,8
tick,0x7ff86ea82704,102631339,0,0x0,8
tick,0x7ff86ea82704,102633029,0,0x0,8
tick,0x7ff86ea82704,102634929,0,0x0,8
tick,0x7ff86ea82704,102637019,0,0x0,8
tick,0x7ff86ea82704,102638905,0,0x0,8
tick,0x7ff86ea82704,102640992,0,0x0,8
tick,0x7ff86ea82704,102642894,0,0x0,8
tick,0x7ff86ea82704,102644988,0,0x0,8
tick,0x7ff86ea82704,102647155,0,0x0,8
tick,0x7ff86ea82704,102649003,0,0x0,8
tick,0x7ff86ea82704,102650837,0,0x0,8
tick,0x7ff86ea82704,102653015,0,0x0,8
tick,0x7ff86ea82704,102657338,0,0x0,8
tick,0x7ff86ea82704,102659207,0,0x0,8
tick,0x7ff86ea82704,102661004,0,0x0,8
tick,0x7ff86ea82704,102663120,0,0x0,8
tick,0x7ff86ea82704,102664991,0,0x0,8
tick,0x7ff86ea82704,102667193,0,0x0,8
tick,0x7ff86ea82704,102669099,0,0x0,8
tick,0x7ff86ea82704,102671161,0,0x0,8
tick,0x7ff86ea82704,102673116,0,0x0,8
tick,0x7ff86ea82704,102675115,0,0x0,8
tick,0x7ff86ea82704,102677158,0,0x0,8
tick,0x7ff86ea82704,102679061,0,0x0,8
tick,0x7ff86ea82704,102681029,0,0x0,8
tick,0x7ff86ea82704,102683126,0,0x0,8
tick,0x7ff86ea82704,102685270,0,0x0,8
tick,0x7ff86ea82704,102687011,0,0x0,8
tick,0x7ff86ea82704,102689145,0,0x0,8
tick,0x7ff86ea82704,102691033,0,0x0,8
tick,0x7ff86ea82704,102693088,0,0x0,8
tick,0x7ff86ea82704,102694927,0,0x0,8
tick,0x7ff86ea82704,102697172,0,0x0,8
tick,0x7ff86ea82704,102698964,0,0x0,8
tick,0x7ff86ea82704,102701103,0,0x0,8
tick,0x7ff86ea82704,102703074,0,0x0,8
tick,0x7ff86ea82704,102705132,0,0x0,8
tick,0x7ff86ea82704,102707023,0,0x0,8
tick,0x7ff86ea82704,102708979,0,0x0,8
tick,0x7ff86ea82704,102711147,0,0x0,8
tick,0x7ff86ea82704,102713027,0,0x0,8
tick,0x7ff86ea82704,102715094,0,0x0,8
tick,0x7ff86ea82704,102717010,0,0x0,8
tick,0x7ff86ea82704,102719002,0,0x0,8
tick,0x7ff86ea82704,102720981,0,0x0,8
tick,0x7ff86ea82704,102723040,0,0x0,8
tick,0x7ff86ea82704,102724939,0,0x0,8
tick,0x7ff86ea82704,102727062,0,0x0,8
tick,0x7ff86ea82704,102728937,0,0x0,8
tick,0x7ff86ea82704,102731024,0,0x0,8
tick,0x7ff86ea82704,102732912,0,0x0,8
tick,0x7ff86ea82704,102734866,0,0x0,8
tick,0x7ff86ea82704,102736921,0,0x0,8
tick,0x7ff86ea82704,102738880,0,0x0,8
tick,0x7ff86ea82704,102740705,0,0x0,8
tick,0x7ff86ea82704,102743183,0,0x0,8
tick,0x7ff86ea82704,102744807,0,0x0,8
tick,0x7ff86ea82704,102747009,0,0x0,8
tick,0x7ff86ea82704,102748727,0,0x0,8
tick,0x7ff86ea82704,102750993,0,0x0,8
tick,0x7ff86ea82704,102752760,0,0x0,8
tick,0x7ff86ea82704,102755067,0,0x0,8
tick,0x7ff86ea82704,102756750,0,0x0,8
tick,0x7ff86ea82704,102758946,0,0x0,8
tick,0x7ff86ea82704,102760812,0,0x0,8
tick,0x7ff86ea82704,102762909,0,0x0,8
tick,0x7ff86ea82704,102764925,0,0x0,8
tick,0x7ff86ea82704,102766903,0,0x0,8
tick,0x7ff86ea82704,102768740,0,0x0,8
tick,0x7ff86ea82704,102771115,0,0x0,8
tick,0x7ff86ea82704,102772853,0,0x0,8
tick,0x7ff86ea82704,102775021,0,0x0,8
tick,0x7ff86ea82704,102776689,0,0x0,8
tick,0x7ff86ea82704,102779072,0,0x0,8
tick,0x7ff86ea82704,102780835,0,0x0,8
tick,0x7ff86ea82704,102782908,0,0x0,8
tick,0x7ff86ea82704,102784658,0,0x0,8
tick,0x7ff86ea82704,102786714,0,0x0,8
tick,0x7ff86ea82704,102788693,0,0x0,8
tick,0x7ff86ea82704,102790683,0,0x0,8
tick,0x7ff86ea82704,102792767,0,0x0,8
tick,0x7ff86ea82704,102794737,0,0x0,8
tick,0x7ff86ea82704,102796843,0,0x0,8
tick,0x7ff86ea82704,102798851,0,0x0,8
tick,0x7ff86ea82704,102800638,0,0x0,8
tick,0x7ff86ea82704,102802748,0,0x0,8
tick,0x7ff86ea82704,102804758,0,0x0,8
tick,0x7ff86ea82704,102806612,0,0x0,8
tick,0x7ff86ea82704,102808640,0,0x0,8
tick,0x7ff86ea82704,102810696,0,0x0,8
tick,0x7ff86ea82704,102812848,0,0x0,8
tick,0x7ff86ea82704,102814512,0,0x0,8
tick,0x7ff86ea82704,102816714,0,0x0,8
tick,0x7ff86ea82704,102818593,0,0x0,8
tick,0x7ff86ea82704,102820722,0,0x0,8
tick,0x7ff86ea82704,102822561,0,0x0,8
tick,0x7ff86ea82704,102824684,0,0x0,8
tick,0x7ff86ea82704,102826576,0,0x0,8
tick,0x7ff86ea82704,102828599,0,0x0,8
tick,0x7ff86ea82704,102830600,0,0x0,8
tick,0x7ff86ea82704,102832667,0,0x0,8
tick,0x7ff86ea82704,102834497,0,0x0,8
tick,0x7ff86ea82704,102836593,0,0x0,8
tick,0x7ff86ea82704,102838572,0,0x0,8
tick,0x7ff86ea82704,102840582,0,0x0,8
tick,0x7ff86ea82704,102842643,0,0x0,8
tick,0x7ff86ea82704,102844619,0,0x0,8
tick,0x7ff86ea82704,102846611,0,0x0,8
tick,0x7ff86ea82704,102848619,0,0x0,8
tick,0x7ff86ea82704,102850548,0,0x0,8
tick,0x7ff86ea82704,102852642,0,0x0,8
tick,0x7ff86ea82704,102854522,0,0x0,8
tick,0x7ff86ea82704,102856720,0,0x0,8
tick,0x7ff86ea82704,102858598,0,0x0,8
tick,0x7ff86ea82704,102860549,0,0x0,8
tick,0x7ff86ea82704,102862536,0,0x0,8
tick,0x7ff86ea82704,102864522,0,0x0,8
tick,0x7ff86ea82704,102866430,0,0x0,8
tick,0x7ff86ea82704,102868542,0,0x0,8
tick,0x7ff86ea82704,102870473,0,0x0,8
tick,0x7ff86ea82704,102872574,0,0x0,8
tick,0x7ff86ea82704,102874392,0,0x0,8
tick,0x7ff86ea82704,102876593,0,0x0,8
tick,0x7ff86ea82704,102878473,0,0x0,8
tick,0x7ff86ea82704,102880622,0,0x0,8
tick,0x7ff86ea82704,102882396,0,0x0,8
tick,0x7ff86ea82704,102884598,0,0x0,8
tick,0x7ff86ea82704,102886386,0,0x0,8
tick,0x7ff86ea82704,102888605,0,0x0,8
tick,0x7ff86ea82704,102890368,0,0x0,8
tick,0x7ff86ea82704,102892449,0,0x0,8
tick,0x7ff86ea82704,102894533,0,0x0,8
tick,0x7ff86ea82704,102896496,0,0x0,8
tick,0x7ff86ea82704,102898321,0,0x0,8
tick,0x7ff86ea82704,102900354,0,0x0,8
tick,0x7ff86ea82704,102902410,0,0x0,8
tick,0x7ff86ea82704,102904312,0,0x0,8
tick,0x7ff86ea82704,102906422,0,0x0,8
tick,0x7ff86ea82704,102908299,0,0x0,8
tick,0x7ff86ea82704,102910401,0,0x0,8
tick,0x7ff86ea82704,102912328,0,0x0,8
tick,0x7ff86ea82704,102914485,0,0x0,8
tick,0x7ff86ea82704,102916333,0,0x0,8
tick,0x7ff86ea82704,102918441,0,0x0,8
tick,0x7ff86ea82704,102920250,0,0x0,8
tick,0x7ff86ea82704,102922391,0,0x0,8
tick,0x7ff86ea82704,102924261,0,0x0,8
tick,0x7ff86ea82704,102926336,0,0x0,8
tick,0x7ff86ea82704,102928297,0,0x0,8
tick,0x7ff86ea82704,102930285,0,0x0,8
tick,0x7ff86ea82704,102932307,0,0x0,8
tick,0x7ff86ea82704,102934464,0,0x0,8
tick,0x7ff86ea82704,102936416,0,0x0,8
tick,0x7ff86ea82704,102938329,0,0x0,8
tick,0x7ff86ea82704,102940371,0,0x0,8
tick,0x7ff86ea82704,102942352,0,0x0,8
tick,0x7ff86ea82704,102944330,0,0x0,8
tick,0x7ff86ea82704,102946299,0,0x0,8
tick,0x7ff86ea82704,102948346,0,0x0,8
tick,0x7ff86ea82704,102950326,0,0x0,8
tick,0x7ff86ea82704,102952225,0,0x0,8
tick,0x7ff86ea82704,102954387,0,0x0,8
tick,0x7ff86ea82704,102956265,0,0x0,8
tick,0x7ff86ea82704,102958375,0,0x0,8
tick,0x7ff86ea82704,102960295,0,0x0,8
tick,0x7ff86ea82704,102962179,0,0x0,8
tick,0x7ff86ea82704,102964287,0,0x0,8
tick,0x7ff86ea82704,102966321,0,0x0,8
tick,0x7ff86ea82704,102968232,0,0x0,8
tick,0x7ff86ea82704,102970245,0,0x0,8
tick,0x7ff86ea82704,102972144,0,0x0,8
tick,0x7ff86ea82704,102974238,0,0x0,8
tick,0x7ff86ea82704,102976155,0,0x0,8
tick,0x7ff86ea82704,102978363,0,0x0,8
tick,0x7ff86ea82704,102980210,0,0x0,8
tick,0x7ff86ea82704,102982243,0,0x0,8
tick,0x7ff86ea82704,102984260,0,0x0,8
tick,0x7ff86ea82704,102986138,0,0x0,8
tick,0x7ff86ea82704,102988220,0,0x0,8
tick,0x7ff86ea82704,102990129,0,0x0,8
tick,0x7ff86ea82704,102992103,0,0x0,8
tick,0x7ff86ea82704,102994068,0,0x0,8
tick,0x7ff86ea82704,102996131,0,0x0,8
tick,0x7ff86ea82704,102998218,0,0x0,8
tick,0x7ff86ea82704,103000286,0,0x0,8
tick,0x7ff86ea82704,103002126,0,0x0,8
tick,0x7ff86ea82704,103004170,0,0x0,8
tick,0x7ff86ea82704,103006185,0,0x0,8
tick,0x7ff86ea82704,103008284,0,0x0,8
tick,0x7ff86ea82704,103010274,0,0x0,8
tick,0x7ff86ea82704,103012086,0,0x0,8
tick,0x7ff86ea82704,103014200,0,0x0,8
tick,0x7ff86ea82704,103016120,0,0x0,8
tick,0x7ff86ea82704,103018311,0,0x0,8
tick,0x7ff86ea82704,103020125,0,0x0,8
tick,0x7ff86ea82704,103022223,0,0x0,8
tick,0x7ff86ea82704,103024076,0,0x0,8
tick,0x7ff86ea82704,103026115,0,0x0,8
tick,0x7ff86ea82704,103028054,0,0x0,8
tick,0x7ff86ea82704,103030118,0,0x0,8
tick,0x7ff86ea82704,103031896,0,0x0,8
tick,0x7ff86ea82704,103034171,0,0x0,8
tick,0x7ff86ea82704,103036007,0,0x0,8
tick,0x7ff86ea82704,103038023,0,0x0,8
tick,0x7ff86ea82704,103040027,0,0x0,8
tick,0x7ff86ea82704,103042122,0,0x0,8
tick,0x7ff86ea82704,103044129,0,0x0,8
tick,0x7ff86ea82704,103046153,0,0x0,8
tick,0x7ff86ea82704,103047900,0,0x0,8
tick,0x7ff86ea82704,103050158,0,0x0,8
tick,0x7ff86ea82704,103052003,0,0x0,8
tick,0x7ff86ea82704,103054186,0,0x0,8
tick,0x7ff86ea82704,103055945,0,0x0,8
tick,0x7ff86ea82704,103058108,0,0x0,8
tick,0x7ff86ea82704,103060018,0,0x0,8
tick,0x7ff86ea82704,103062108,0,0x0,8
tick,0x7ff86ea82704,103064081,0,0x0,8
tick,0x7ff86ea82704,103066183,0,0x0,8
tick,0x7ff86ea82704,103068045,0,0x0,8
tick,0x7ff86ea82704,103070369,0,0x0,8
tick,0x7ff86ea82704,103072276,0,0x0,8
tick,0x7ff86ea82704,103074381,0,0x0,8
tick,0x7ff86ea82704,103076073,0,0x0,8
tick,0x7ff86ea82704,103078242,0,0x0,8
tick,0x7ff86ea82704,103080231,0,0x0,8
tick,0x7ff86ea82704,103082075,0,0x0,8
tick,0x7ff86ea82704,103083907,0,0x0,8
tick,0x7ff86ea82704,103086080,0,0x0,8
tick,0x7ff86ea82704,103087943,0,0x0,8
tick,0x7ff86ea82704,103089944,0,0x0,8
tick,0x7ff86ea82704,103091990,0,0x0,8
tick,0x7ff86ea82704,103093872,0,0x0,8
tick,0x7ff86ea82704,103095975,0,0x0,8
tick,0x7ff86ea82704,103098019,0,0x0,8
tick,0x7ff86ea82704,103099914,0,0x0,8
tick,0x7ff86ea82704,103101866,0,0x0,8
tick,0x7ff86ea82704,103103966,0,0x0,8
tick,0x7ff86ea82704,103105849,0,0x0,8
tick,0x7ff86ea82704,103107885,0,0x0,8
tick,0x7ff86ea82704,103109838,0,0x0,8
tick,0x7ff86ea82704,103111882,0,0x0,8
tick,0x7ff86ea82704,103113998,0,0x0,8
tick,0x7ff86ea82704,103115912,0,0x0,8
tick,0x7ff86ea82704,103117847,0,0x0,8
tick,0x7ff86ea82704,103119940,0,0x0,8
tick,0x7ff86ea82704,103121814,0,0x0,8
tick,0x7ff86ea82704,103124133,0,0x0,8
tick,0x7ff86ea82704,103125860,0,0x0,8
tick,0x7ff86ea82704,103127843,0,0x0,8
tick,0x7ff86ea82704,103129998,0,0x0,8
tick,0x7ff86ea82704,103131880,0,0x0,8
tick,0x7ff86ea82704,103134296,0,0x0,8
tick,0x7ff86ea82704,103135843,0,0x0,8
tick,0x7ff86ea82704,103137782,0,0x0,8
tick,0x7ff86ea82704,103139807,0,0x0,8
tick,0x7ff86ea82704,103141783,0,0x0,8
tick,0x7ff86ea82704,103143739,0,0x0,8
tick,0x7ff86ea82704,103146056,0,0x0,8
tick,0x7ff86ea82704,103147968,0,0x0,8
tick,0x7ff86ea82704,103150026,0,0x0,8
tick,0x7ff86ea82704,103151778,0,0x0,8
tick,0x7ff86ea82704,103153770,0,0x0,8
tick,0x7ff86ea82704,103155888,0,0x0,8
tick,0x7ff86ea82704,103157693,0,0x0,8
tick,0x7ff86ea82704,103159743,0,0x0,8
tick,0x7ff86ea82704,103161741,0,0x0,8
tick,0x7ff86ea82704,103163779,0,0x0,8
tick,0x7ff86ea82704,103165868,0,0x0,8
tick,0x7ff86ea82704,103167789,0,0x0,8
tick,0x7ff86ea82704,103170049,0,0x0,8
tick,0x7ff86ea82704,103171829,0,0x0,8
tick,0x7ff86ea82704,103173685,0,0x0,8
tick,0x7ff86ea82704,103175750,0,0x0,8
tick,0x7ff86ea82704,103177686,0,0x0,8
tick,0x7ff86ea82704,103179977,0,0x0,8
tick,0x7ff86ea82704,103181611,0,0x0,8
tick,0x7ff86ea82704,103183816,0,0x0,8
tick,0x7ff86ea82704,103185616,0,0x0,8
tick,0x7ff86ea82704,103187633,0,0x0,8
tick,0x7ff86ea82704,103189701,0,0x0,8
tick,0x7ff86ea82704,103191690,0,0x0,8
tick,0x7ff86ea82704,103193725,0,0x0,8
tick,0x7ff86ea82704,103195688,0,0x0,8
tick,0x7ff86ea82704,103197610,0,0x0,8
tick,0x7ff86ea82704,103199682,0,0x0,8
tick,0x7ff86ea82704,103201605,0,0x0,8
tick,0x7ff86ea82704,103203685,0,0x0,8
tick,0x7ff86ea82704,103205581,0,0x0,8
tick,0x7ff86ea82704,103207551,0,0x0,8
tick,0x7ff86ea82704,103209606,0,0x0,8
tick,0x7ff86ea82704,103211682,0,0x0,8
tick,0x7ff86ea82704,103213632,0,0x0,8
tick,0x7ff86ea82704,103215620,0,0x0,8
tick,0x7ff86ea82704,103217820,0,0x0,8
tick,0x7ff86ea82704,103219411,0,0x0,8
tick,0x7ff86ea82704,103221423,0,0x0,8
tick,0x7ff86ea82704,103223637,0,0x0,8
tick,0x7ff86ea82704,103225564,0,0x0,8
tick,0x7ff86ea82704,103227442,0,0x0,8
tick,0x7ff86ea82704,103229396,0,0x0,8
tick,0x7ff86ea82704,103231459,0,0x0,8
tick,0x7ff86ea82704,103233613,0,0x0,8
tick,0x7ff86ea82704,103235471,0,0x0,8
tick,0x7ff86ea82704,103237461,0,0x0,8
tick,0x7ff86ea82704,103239487,0,0x0,8
tick,0x7ff86ea82704,103241535,0,0x0,8
tick,0x7ff86ea82704,103243419,0,0x0,8
tick,0x7ff86ea82704,103245556,0,0x0,8
tick,0x7ff86ea82704,103247327,0,0x0,8
tick,0x7ff86ea82704,103249405,0,0x0,8
tick,0x7ff86ea82704,103251302,0,0x0,8
tick,0x7ff86ea82704,103253410,0,0x0,8
tick,0x7ff86ea82704,103255355,0,0x0,8
tick,0x7ff86ea82704,103257624,0,0x0,8
tick,0x7ff86ea82704,103259430,0,0x0,8
tick,0x7ff86ea82704,103261469,0,0x0,8
tick,0x7ff86ea82704,103263329,0,0x0,8
tick,0x7ff86ea82704,103265449,0,0x0,8
tick,0x7ff86ea82704,103267365,0,0x0,8
tick,0x7ff86ea82704,103269465,0,0x0,8
tick,0x7ff86ea82704,103271375,0,0x0,8
tick,0x7ff86ea82704,103273289,0,0x0,8
tick,0x7ff86ea82704,103275333,0,0x0,8
tick,0x7ff86ea82704,103277416,0,0x0,8
tick,0x7ff86ea82704,103279328,0,0x0,8
tick,0x7ff86ea82704,103281348,0,0x0,8
tick,0x7ff86ea82704,103283296,0,0x0,8
tick,0x7ff86ea82704,103285346,0,0x0,8
tick,0x7ff86ea82704,103287360,0,0x0,8
tick,0x7ff86ea82704,103289282,0,0x0,8
tick,0x7ff86ea82704,103291313,0,0x0,8
tick,0x7ff86ea82704,103293284,0,0x0,8
tick,0x7ff86ea82704,103295321,0,0x0,8
tick,0x7ff86ea82704,103297187,0,0x0,8
tick,0x7ff86ea82704,103299328,0,0x0,8
tick,0x7ff86ea82704,103301220,0,0x0,8
tick,0x7ff86ea82704,103303362,0,0x0,8
tick,0x7ff86ea82704,103305249,0,0x0,8
tick,0x7ff86ea82704,103307336,0,0x0,8
tick,0x7ff86ea82704,103309247,0,0x0,8
tick,0x7ff86ea82704,103311353,0,0x0,8
tick,0x7ff86ea82704,103313227,0,0x0,8
tick,0x7ff86ea82704,103315367,0,0x0,8
tick,0x7ff86ea82704,103317272,0,0x0,8
tick,0x7ff86ea82704,103319252,0,0x0,8
tick,0x7ff86ea82704,103321306,0,0x0,8
tick,0x7ff86ea82704,103325138,0,0x0,8
tick,0x7ff86ea82704,103327393,0,0x0,8
tick,0x7ff86ea82704,103329344,0,0x0,8
tick,0x7ff86ea82704,103331247,0,0x0,8
tick,0x7ff86ea82704,103333303,0,0x0,8
tick,0x7ff86ea82704,103335337,0,0x0,8
tick,0x7ff86ea82704,103337335,0,0x0,8
tick,0x7ff86ea82704,103339197,0,0x0,8
tick,0x7ff86ea82704,103341215,0,0x0,8
tick,0x7ff86ea82704,103343336,0,0x0,8
tick,0x7ff86ea82704,103345172,0,0x0,8
tick,0x7ff86ea82704,103347233,0,0x0,8
tick,0x7ff86ea82704,103349291,0,0x0,8
tick,0x7ff86ea82704,103351307,0,0x0,8
tick,0x7ff86ea82704,103353221,0,0x0,8
tick,0x7ff86ea82704,103355425,0,0x0,8
tick,0x7ff86ea82704,103357300,0,0x0,8
tick,0x7ff86ea82704,103359325,0,0x0,8
tick,0x7ff86ea82704,103361336,0,0x0,8
tick,0x7ff86ea82704,103363290,0,0x0,8
tick,0x7ff86ea82704,103365164,0,0x0,8
tick,0x7ff86ea82704,103367207,0,0x0,8
tick,0x7ff86ea82704,103369270,0,0x0,8
tick,0x7ff86ea82704,103371319,0,0x0,8
tick,0x7ff86ea82704,103373305,0,0x0,8
tick,0x7ff86ea82704,103375177,0,0x0,8
tick,0x7ff86ea82704,103377201,0,0x0,8
tick,0x7ff86ea82704,103379194,0,0x0,8
tick,0x7ff86ea82704,103381165,0,0x0,8
tick,0x7ff86ea82704,103383161,0,0x0,8
tick,0x7ff86ea82704,103385245,0,0x0,8
tick,0x7ff86ea82704,103387251,0,0x0,8
tick,0x7ff86ea82704,103389130,0,0x0,8
tick,0x7ff86ea82704,103391173,0,0x0,8
tick,0x7ff86ea82704,103393171,0,0x0,8
tick,0x7ff86ea82704,103395069,0,0x0,8
tick,0x7ff86ea82704,103397072,0,0x0,8
tick,0x7ff86ea82704,103399078,0,0x0,8
tick,0x7ff86ea82704,103401123,0,0x0,8
tick,0x7ff86ea82704,103403120,0,0x0,8
tick,0x7ff86ea82704,103405118,0,0x0,8
tick,0x7ff86ea82704,103407121,0,0x0,8
tick,0x7ff86ea82704,103408952,0,0x0,8
tick,0x7ff86ea82704,103411161,0,0x0,8
tick,0x7ff86ea82704,103413165,0,0x0,8
tick,0x7ff86ea82704,103415237,0,0x0,8
tick,0x7ff86ea82704,103417027,0,0x0,8
tick,0x7ff86ea82704,103419301,0,0x0,8
tick,0x7ff86ea82704,103420902,0,0x0,8
tick,0x7ff86ea82704,103423066,0,0x0,8
tick,0x7ff86ea82704,103425019,0,0x0,8
tick,0x7ff86ea82704,103427002,0,0x0,8
tick,0x7ff86ea82704,103429064,0,0x0,8
tick,0x7ff86ea82704,103431136,0,0x0,8
tick,0x7ff86ea82704,103432999,0,0x0,8
tick,0x7ff86ea82704,103434961,0,0x0,8
tick,0x7ff86ea82704,103436941,0,0x0,8
tick,0x7ff86ea82704,103438893,0,0x0,8
tick,0x7ff86ea82704,103441041,0,0x0,8
tick,0x7ff86ea82704,103443098,0,0x0,8
tick,0x7ff86ea82704,103445142,0,0x0,8
tick,0x7ff86ea82704,103447114,0,0x0,8
tick,0x7ff86ea82704,103449188,0,0x0,8
tick,0x7ff86ea82704,103451045,0,0x0,8
tick,0x7ff86ea82704,103453140,0,0x0,8
tick,0x7ff86ea82704,103454991,0,0x0,8
tick,0x7ff86ea82704,103456968,0,0x0,8
tick,0x7ff86ea82704,103458946,0,0x0,8
tick,0x7ff86ea82704,103460986,0,0x0,8
tick,0x7ff86ea82704,103462927,0,0x0,8
tick,0x7ff86ea82704,103465037,0,0x0,8
tick,0x7ff86ea82704,103466870,0,0x0,8
tick,0x7ff86ea82704,103468860,0,0x0,8
tick,0x7ff86ea82704,103471062,0,0x0,8
tick,0x7ff86ea82704,103472769,0,0x0,8
tick,0x7ff86ea82704,103475019,0,0x0,8
tick,0x7ff86ea82704,103476803,0,0x0,8
tick,0x7ff86ea82704,103479009,0,0x0,8
tick,0x7ff86ea82704,103480765,0,0x0,8
tick,0x7ff86ea82704,103482905,0,0x0,8
tick,0x7ff86ea82704,103485017,0,0x0,8
tick,0x7ff86ea82704,103487021,0,0x0,8
tick,0x7ff86ea82704,103489057,0,0x0,8
tick,0x7ff86ea82704,103490945,0,0x0,8
tick,0x7ff86ea82704,103492821,0,0x0,8
tick,0x7ff86ea82704,103494763,0,0x0,8
tick,0x7ff86ea82704,103496935,0,0x0,8
tick,0x7ff86ea82704,103498783,0,0x0,8
tick,0x7ff86ea82704,103500971,0,0x0,8
tick,0x7ff86ea82704,103502763,0,0x0,8
tick,0x7ff86ea82704,103504828,0,0x0,8
tick,0x7ff86ea82704,103506830,0,0x0,8
tick,0x7ff86ea82704,103508779,0,0x0,8
tick,0x7ff86ea82704,103510750,0,0x0,8
tick,0x7ff86ea82704,103512766,0,0x0,8
tick,0x7ff86ea82704,103514728,0,0x0,8
tick,0x7ff86ea82704,103516771,0,0x0,8
tick,0x7ff86ea82704,103518776,0,0x0,8
tick,0x7ff86ea82704,103520695,0,0x0,8
tick,0x7ff86ea82704,103522691,0,0x0,8
tick,0x7ff86ea82704,103524735,0,0x0,8
tick,0x7ff86ea82704,103526629,0,0x0,8
tick,0x7ff86ea82704,103528738,0,0x0,8
tick,0x7ff86ea82704,103531021,0,0x0,8
tick,0x7ff86ea82704,103532716,0,0x0,8
tick,0x7ff86ea82704,103534672,0,0x0,8
tick,0x7ff86ea82704,103536758,0,0x0,8
tick,0x7ff86ea82704,103538551,0,0x0,8
tick,0x7ff86ea82704,103540673,0,0x0,8
tick,0x7ff86ea82704,103542839,0,0x0,8
tick,0x7ff86ea82704,103544717,0,0x0,8
tick,0x7ff86ea82704,103546533,0,0x0,8
tick,0x7ff86ea82704,103548831,0,0x0,8
tick,0x7ff86ea82704,103550697,0,0x0,8
tick,0x7ff86ea82704,103552604,0,0x0,8
tick,0x7ff86ea82704,103554647,0,0x0,8
tick,0x7ff86ea82704,103556779,0,0x0,8
tick,0x7ff86ea82704,103558574,0,0x0,8
tick,0x7ff86ea82704,103560573,0,0x0,8
tick,0x7ff86ea82704,103562887,0,0x0,8
tick,0x7ff86ea82704,103564750,0,0x0,8
tick,0x7ff86ea82704,103566809,0,0x0,8
tick,0x7ff86ea82704,103569015,0,0x0,8
tick,0x7ff86ea82704,103570715,0,0x0,8
tick,0x7ff86ea82704,103572632,0,0x0,8
tick,0x7ff86ea82704,103574686,0,0x0,8
tick,0x7ff86ea82704,103576433,0,0x0,8
tick,0x7ff86ea82704,103578579,0,0x0,8
tick,0x7ff86ea82704,103580919,0,0x0,8
tick,0x7ff86ea82704,103582793,0,0x0,8
tick,0x7ff86ea82704,103584434,0,0x0,8
tick,0x7ff86ea82704,103586489,0,0x0,8
tick,0x7ff86ea82704,103588418,0,0x0,8
tick,0x7ff86ea82704,103590593,0,0x0,8
tick,0x7ff86ea82704,103592418,0,0x0,8
tick,0x7ff86ea82704,103594547,0,0x0,8
tick,0x7ff86ea82704,103596474,0,0x0,8
tick,0x7ff86ea82704,103598492,0,0x0,8
tick,0x7ff86ea82704,103600456,0,0x0,8
tick,0x7ff86ea82704,103602469,0,0x0,8
tick,0x7ff86ea82704,103604783,0,0x0,8
tick,0x7ff86ea82704,103606297,0,0x0,8
tick,0x7ff86ea82704,103608416,0,0x0,8
tick,0x7ff86ea82704,103610366,0,0x0,8
tick,0x7ff86ea82704,103612865,0,0x0,8
tick,0x7ff86ea82704,103614363,0,0x0,8
tick,0x7ff86ea82704,103616382,0,0x0,8
tick,0x7ff86ea82704,103618636,0,0x0,8
tick,0x7ff86ea82704,103620587,0,0x0,8
tick,0x7ff86ea82704,103622474,0,0x0,8
tick,0x7ff86ea82704,103624487,0,0x0,8
tick,0x7ff86ea82704,103626519,0,0x0,8
tick,0x7ff86ea82704,103628414,0,0x0,8
tick,0x7ff86ea82704,103630652,0,0x0,8
tick,0x7ff86ea82704,103632575,0,0x0,8
tick,0x7ff86ea82704,103634556,0,0x0,8
tick,0x7ff86ea82704,103636293,0,0x0,8
tick,0x7ff86ea82704,103638580,0,0x0,8
tick,0x7ff86ea82704,103640274,0,0x0,8
tick,0x7ff86ea82704,103642377,0,0x0,8
tick,0x7ff86ea82704,103644349,0,0x0,8
tick,0x7ff86ea82704,103646269,0,0x0,8
tick,0x7ff86ea82704,103648376,0,0x0,8
tick,0x7ff86ea82704,103650343,0,0x0,8
tick,0x7ff86ea82704,103652255,0,0x0,8
tick,0x7ff86ea82704,103654379,0,0x0,8
tick,0x7ff86ea82704,103656337,0,0x0,8
tick,0x7ff86ea82704,103658313,0,0x0,8
tick,0x7ff86ea82704,103660245,0,0x0,8
tick,0x7ff86ea82704,103662311,0,0x0,8
tick,0x7ff86ea82704,103664323,0,0x0,8
tick,0x7ff86ea82704,103666295,0,0x0,8
tick,0x7ff86ea82704,103668281,0,0x0,8
tick,0x7ff86ea82704,103670221,0,0x0,8
tick,0x7ff86ea82704,103672302,0,0x0,8
tick,0x7ff86ea82704,103674240,0,0x0,8
tick,0x7ff86ea82704,103676361,0,0x0,8
tick,0x7ff86ea82704,103678219,0,0x0,8
tick,0x7ff86ea82704,103680233,0,0x0,8
tick,0x7ff86ea82704,103682413,0,0x0,8
tick,0x7ff86ea82704,103684192,0,0x0,8
tick,0x7ff86ea82704,103686197,0,0x0,8
tick,0x7ff86ea82704,103688188,0,0x0,8
tick,0x7ff86ea82704,103690216,0,0x0,8
tick,0x7ff86ea82704,103692189,0,0x0,8
tick,0x7ff86ea82704,103694139,0,0x0,8
tick,0x7ff86ea82704,103696162,0,0x0,8
tick,0x7ff86ea82704,103698172,0,0x0,8
tick,0x7ff86ea82704,103700107,0,0x0,8
tick,0x7ff86ea82704,103702139,0,0x0,8
tick,0x7ff86ea82704,103704153,0,0x0,8
tick,0x7ff86ea82704,103706315,0,0x0,8
tick,0x7ff86ea82704,103708156,0,0x0,8
tick,0x7ff86ea82704,103710157,0,0x0,8
tick,0x7ff86ea82704,103712339,0,0x0,8
tick,0x7ff86ea82704,103714056,0,0x0,8
tick,0x7ff86ea82704,103716122,0,0x0,8
tick,0x7ff86ea82704,103718056,0,0x0,8
tick,0x7ff86ea82704,103720068,0,0x0,8
tick,0x7ff86ea82704,103722121,0,0x0,8
tick,0x7ff86ea82704,103724137,0,0x0,8
tick,0x7ff86ea82704,103726069,0,0x0,8
tick,0x7ff86ea82704,103728120,0,0x0,8
tick,0x7ff86ea82704,103730007,0,0x0,8
tick,0x7ff86ea82704,103732192,0,0x0,8
tick,0x7ff86ea82704,103734038,0,0x0,8
tick,0x7ff86ea82704,103736111,0,0x0,8
tick,0x7ff86ea82704,103738006,0,0x0,8
tick,0x7ff86ea82704,103740135,0,0x0,8
tick,0x7ff86ea82704,103742044,0,0x0,8
tick,0x7ff86ea82704,103744027,0,0x0,8
tick,0x7ff86ea82704,103746049,0,0x0,8
tick,0x7ff86ea82704,103747992,0,0x0,8
tick,0x7ff86ea82704,103750027,0,0x0,8
tick,0x7ff86ea82704,103752045,0,0x0,8
tick,0x7ff86ea82704,103753963,0,0x0,8
tick,0x7ff86ea82704,103756084,0,0x0,8
tick,0x7ff86ea82704,103757982,0,0x0,8
tick,0x7ff86ea82704,103760087,0,0x0,8
tick,0x7ff86ea82704,103761938,0,0x0,8
tick,0x7ff86ea82704,103764093,0,0x0,8
tick,0x7ff86ea82704,103765913,0,0x0,8
tick,0x7ff86ea82704,103768012,0,0x0,8
tick,0x7ff86ea82704,103769900,0,0x0,8
tick,0x7ff86ea82704,103772036,0,0x0,8
tick,0x7ff86ea82704,103773951,0,0x0,8
tick,0x7ff86ea82704,103775928,0,0x0,8
tick,0x7ff86ea82704,103777930,0,0x0,8
tick,0x7ff86ea82704,103779961,0,0x0,8
tick,0x7ff86ea82704,103781969,0,0x0,8
tick,0x7ff86ea82704,103783903,0,0x0,8
tick,0x7ff86ea82704,103785949,0,0x0,8
tick,0x7ff86ea82704,103787890,0,0x0,8
tick,0x7ff86ea82704,103789844,0,0x0,8
tick,0x7ff86ea82704,103791937,0,0x0,8
tick,0x7ff86ea82704,103793870,0,0x0,8
tick,0x7ff86ea82704,103795914,0,0x0,8
tick,0x7ff86ea82704,103797817,0,0x0,8
tick,0x7ff86ea82704,103799955,0,0x0,8
tick,0x7ff86ea82704,103801828,0,0x0,8
tick,0x7ff86ea82704,103803913,0,0x0,8
tick,0x7ff86ea82704,103805865,0,0x0,8
tick,0x7ff86ea82704,103807885,0,0x0,8
tick,0x7ff86ea82704,103809867,0,0x0,8
tick,0x7ff86ea82704,103811785,0,0x0,8
tick,0x7ff86ea82704,103813990,0,0x0,8
tick,0x7ff86ea82704,103815821,0,0x0,8
tick,0x7ff86ea82704,103817763,0,0x0,8
tick,0x7ff86ea82704,103819884,0,0x0,8
tick,0x7ff86ea82704,103821819,0,0x0,8
tick,0x7ff86ea82704,103823764,0,0x0,8
tick,0x7ff86ea82704,103825773,0,0x0,8
tick,0x7ff86ea82704,103827756,0,0x0,8
tick,0x7ff86ea82704,103829811,0,0x0,8
tick,0x7ff86ea82704,103831873,0,0x0,8
tick,0x7ff86ea82704,103833819,0,0x0,8
tick,0x7ff86ea82704,103835825,0,0x0,8
tick,0x7ff86ea82704,103837861,0,0x0,8
tick,0x7ff86ea82704,103839723,0,0x0,8
tick,0x7ff86ea82704,103841807,0,0x0,8
tick,0x7ff86ea82704,103843762,0,0x0,8
tick,0x7ff86ea82704,103845771,0,0x0,8
tick,0x7ff86ea82704,103847811,0,0x0,8
tick,0x7ff86ea82704,103849853,0,0x0,8
tick,0x7ff86ea82704,103851728,0,0x0,8
tick,0x7ff86ea82704,103853834,0,0x0,8
tick,0x7ff86ea82704,103855754,0,0x0,8
tick,0x7ff86ea82704,103857805,0,0x0,8
tick,0x7ff86ea82704,103859724,0,0x0,8
tick,0x7ff86ea82704,103861715,0,0x0,8
tick,0x7ff86ea82704,103863827,0,0x0,8
tick,0x7ff86ea82704,103865668,0,0x0,8
tick,0x7ff86ea82704,103867708,0,0x0,8
tick,0x7ff86ea82704,103869731,0,0x0,8
tick,0x7ff86ea82704,103871743,0,0x0,8
tick,0x7ff86ea82704,103873693,0,0x0,8
tick,0x7ff86ea82704,103875659,0,0x0,8
tick,0x7ff86ea82704,103877748,0,0x0,8
tick,0x7ff86ea82704,103879656,0,0x0,8
tick,0x7ff86ea82704,103881743,0,0x0,8
tick,0x7ff86ea82704,103883645,0,0x0,8
tick,0x7ff86ea82704,103885759,0,0x0,8
tick,0x7ff86ea82704,103887690,0,0x0,8
tick,0x7ff86ea82704,103889757,0,0x0,8
tick,0x7ff86ea82704,103891667,0,0x0,8
tick,0x7ff86ea82704,103893726,0,0x0,8
tick,0x7ff86ea82704,103895653,0,0x0,8
tick,0x7ff86ea82704,103897657,0,0x0,8
tick,0x7ff86ea82704,103899587,0,0x0,8
tick,0x7ff86ea82704,103901628,0,0x0,8
tick,0x7ff86ea82704,103903552,0,0x0,8
tick,0x7ff86ea82704,103905624,0,0x0,8
tick,0x7ff86ea82704,103907516,0,0x0,8
tick,0x7ff86ea82704,103909631,0,0x0,8
tick,0x7ff86ea82704,103911483,0,0x0,8
tick,0x7ff86ea82704,103913563,0,0x0,8
tick,0x7ff86ea82704,103915462,0,0x0,8
tick,0x7ff86ea82704,103917683,0,0x0,8
tick,0x7ff86ea82704,103919484,0,0x0,8
tick,0x7ff86ea82704,103921602,0,0x0,8
tick,0x7ff86ea82704,103923494,0,0x0,8
tick,0x7ff86ea82704,103925692,0,0x0,8
tick,0x7ff86ea82704,103927565,0,0x0,8
tick,0x7ff86ea82704,103929651,0,0x0,8
tick,0x7ff86ea82704,103931466,0,0x0,8
tick,0x7ff86ea82704,103933610,0,0x0,8
tick,0x7ff86ea82704,103935482,0,0x0,8
tick,0x7ff86ea82704,103937455,0,0x0,8
tick,0x7ff86ea82704,103939619,0,0x0,8
tick,0x7ff86ea82704,103941422,0,0x0,8
tick,0x7ff86ea82704,103943576,0,0x0,8
tick,0x7ff86ea82704,103945542,0,0x0,8
tick,0x7ff86ea82704,103947518,0,0x0,8
tick,0x7ff86ea82704,103949540,0,0x0,8
tick,0x7ff86ea82704,103951542,0,0x0,8
tick,0x7ff86ea82704,103953437,0,0x0,8
tick,0x7ff86ea82704,103955459,0,0x0,8
tick,0x7ff86ea82704,103957493,0,0x0,8
tick,0x7ff86ea82704,103959366,0,0x0,8
tick,0x7ff86ea82704,103961449,0,0x0,8
tick,0x7ff86ea82704,103963447,0,0x0,8
tick,0x7ff86ea82704,103965460,0,0x0,8
tick,0x7ff86ea82704,103967506,0,0x0,8
tick,0x7ff86ea82704,103969402,0,0x0,8
tick,0x7ff86ea82704,103971426,0,0x0,8
tick,0x7ff86ea82704,103973446,0,0x0,8
tick,0x7ff86ea82704,103975378,0,0x0,8
tick,0x7ff86ea82704,103977469,0,0x0,8
tick,0x7ff86ea82704,103979405,0,0x0,8
tick,0x7ff86ea82704,103981397,0,0x0,8
tick,0x7ff86ea82704,103983384,0,0x0,8
tick,0x7ff86ea82704,103985498,0,0x0,8
tick,0x7ff86ea82704,103987327,0,0x0,8
tick,0x7ff86ea82704,103989344,0,0x0,8
tick,0x7ff86ea82704,103991352,0,0x0,8
tick,0x7ff86ea82704,103993378,0,0x0,8
tick,0x7ff86ea82704,103995245,0,0x0,8
tick,0x7ff86ea82704,103997457,0,0x0,8
tick,0x7ff86ea82704,103999373,0,0x0,8
tick,0x7ff86ea82704,104001420,0,0x0,8
tick,0x7ff86ea82704,104003390,0,0x0,8
tick,0x7ff86ea82704,104005339,0,0x0,8
tick,0x7ff86ea82704,104007397,0,0x0,8
tick,0x7ff86ea82704,104009315,0,0x0,8
tick,0x7ff86ea82704,104011301,0,0x0,8
tick,0x7ff86ea82704,104013313,0,0x0,8
tick,0x7ff86ea82704,104015321,0,0x0,8
tick,0x7ff86ea82704,104017253,0,0x0,8
tick,0x7ff86ea82704,104019304,0,0x0,8
tick,0x7ff86ea82704,104021245,0,0x0,8
tick,0x7ff86ea82704,104023294,0,0x0,8
tick,0x7ff86ea82704,104025436,0,0x0,8
tick,0x7ff86ea82704,104027283,0,0x0,8
tick,0x7ff86ea82704,104029271,0,0x0,8
tick,0x7ff86ea82704,104031257,0,0x0,8
tick,0x7ff86ea82704,104033308,0,0x0,8
tick,0x7ff86ea82704,104035169,0,0x0,8
tick,0x7ff86ea82704,104037203,0,0x0,8
tick,0x7ff86ea82704,104039228,0,0x0,8
tick,0x7ff86ea82704,104041337,0,0x0,8
tick,0x7ff86ea82704,104043219,0,0x0,8
tick,0x7ff86ea82704,104045196,0,0x0,8
tick,0x7ff86ea82704,104047302,0,0x0,8
tick,0x7ff86ea82704,104049141,0,0x0,8
tick,0x7ff86ea82704,104051268,0,0x0,8
tick,0x7ff86ea82704,104053209,0,0x0,8
tick,0x7ff86ea82704,104055280,0,0x0,8
tick,0x7ff86ea82704,104057100,0,0x0,8
tick,0x7ff86ea82704,104059209,0,0x0,8
tick,0x7ff86ea82704,104061134,0,0x0,8
tick,0x7ff86ea82704,104063322,0,0x0,8
tick,0x7ff86ea82704,104065075,0,0x0,8
tick,0x7ff86ea82704,104067184,0,0x0,8
tick,0x7ff86ea82704,104069077,0,0x0,8
tick,0x7ff86ea82704,104071121,0,0x0,8
tick,0x7ff86ea82704,104073076,0,0x0,8
tick,0x7ff86ea82704,104075241,0,0x0,8
tick,0x7ff86ea82704,104077195,0,0x0,8
tick,0x7ff86ea82704,104079212,0,0x0,8
tick,0x7ff86ea82704,104081073,0,0x0,8
tick,0x7ff86ea82704,104083137,0,0x0,8
tick,0x7ff86ea82704,104085006,0,0x0,8
tick,0x7ff86ea82704,104087278,0,0x0,8
tick,0x7ff86ea82704,104089031,0,0x0,8
tick,0x7ff86ea82704,104091218,0,0x0,8
tick,0x7ff86ea82704,104093145,0,0x0,8
tick,0x7ff86ea82704,104095111,0,0x0,8
tick,0x7ff86ea82704,104097085,0,0x0,8
tick,0x7ff86ea82704,104099102,0,0x0,8
tick,0x7ff86ea82704,104101060,0,0x0,8
tick,0x7ff86ea82704,104103123,0,0x0,8
tick,0x7ff86ea82704,104105056,0,0x0,8
tick,0x7ff86ea82704,104107044,0,0x0,8
tick,0x7ff86ea82704,104109024,0,0x0,8
tick,0x7ff86ea82704,104110999,0,0x0,8
tick,0x7ff86ea82704,104112987,0,0x0,8
tick,0x7ff86ea82704,104115138,0,0x0,8
tick,0x7ff86ea82704,104117163,0,0x0,8
tick,0x7ff86ea82704,104119164,0,0x0,8
tick,0x7ff86ea82704,104121212,0,0x0,8
tick,0x7ff86ea82704,104123162,0,0x0,8
tick,0x7ff86ea82704,104124980,0,0x0,8
tick,0x7ff86ea82704,104127125,0,0x0,8
tick,0x7ff86ea82704,104129011,0,0x0,8
tick,0x7ff86ea82704,104131047,0,0x0,8
tick,0x7ff86ea82704,104133019,0,0x0,8
tick,0x7ff86ea82704,104135121,0,0x0,8
tick,0x7ff86ea82704,104137118,0,0x0,8
tick,0x7ff86ea82704,104139063,0,0x0,8
tick,0x7ff86ea82704,104141088,0,0x0,8
tick,0x7ff86ea82704,104142980,0,0x0,8
tick,0x7ff86ea82704,104145081,0,0x0,8
tick,0x7ff86ea82704,104147104,0,0x0,8
tick,0x7ff86ea82704,104149014,0,0x0,8
tick,0x7ff86ea82704,104151037,0,0x0,8
tick,0x7ff86ea82704,104152996,0,0x0,8
tick,0x7ff86ea82704,104154954,0,0x0,8
tick,0x7ff86ea82704,104156899,0,0x0,8
tick,0x7ff86ea82704,104159002,0,0x0,8
tick,0x7ff86ea82704,104161244,0,0x0,8
tick,0x7ff86ea82704,104162971,0,0x0,8
tick,0x7ff86ea82704,104164916,0,0x0,8
tick,0x7ff86ea82704,104166837,0,0x0,8
tick,0x7ff86ea82704,104168878,0,0x0,8
tick,0x7ff86ea82704,104170885,0,0x0,8
tick,0x7ff86ea82704,104173017,0,0x0,8
tick,0x7ff86ea82704,104174966,0,0x0,8
tick,0x7ff86ea82704,104176974,0,0x0,8
tick,0x7ff86ea82704,104178970,0,0x0,8
tick,0x7ff86ea82704,104180925,0,0x0,8
tick,0x7ff86ea82704,104183015,0,0x0,8
tick,0x7ff86ea82704,104184951,0,0x0,8
tick,0x7ff86ea82704,104187007,0,0x0,8
tick,0x7ff86ea82704,104188875,0,0x0,8
tick,0x7ff86ea82704,104190869,0,0x0,8
tick,0x7ff86ea82704,104192845,0,0x0,8
tick,0x7ff86ea82704,104194941,0,0x0,8
tick,0x7ff86ea82704,104196938,0,0x0,8
tick,0x7ff86ea82704,104198951,0,0x0,8
tick,0x7ff86ea82704,104200760,0,0x0,8
tick,0x7ff86ea82704,104202869,0,0x0,8
tick,0x7ff86ea82704,104204727,0,0x0,8
tick,0x7ff86ea82704,104206942,0,0x0,8
tick,0x7ff86ea82704,104208840,0,0x0,8
tick,0x7ff86ea82704,104210701,0,0x0,8
tick,0x7ff86ea82704,104212746,0,0x0,8
tick,0x7ff86ea82704,104214740,0,0x0,8
tick,0x7ff86ea82704,104216697,0,0x0,8
tick,0x7ff86ea82704,104218812,0,0x0,8
tick,0x7ff86ea82704,104220669,0,0x0,8
tick,0x7ff86ea82704,104222769,0,0x0,8
tick,0x7ff86ea82704,104224705,0,0x0,8
tick,0x7ff86ea82704,104226684,0,0x0,8
tick,0x7ff86ea82704,104228710,0,0x0,8
tick,0x7ff86ea82704,104230936,0,0x0,8
tick,0x7ff86ea82704,104232703,0,0x0,8
tick,0x7ff86ea82704,104234760,0,0x0,8
tick,0x7ff86ea82704,104239593,0,0x0,8
tick,0x7ff86ea82704,104241856,0,0x0,8
tick,0x7ff86ea82704,104243744,0,0x0,8
tick,0x7ff86ea82704,104245809,0,0x0,8
tick,0x7ff86ea82704,104247853,0,0x0,8
tick,0x7ff86ea82704,104249699,0,0x0,8
tick,0x7ff86ea82704,104251714,0,0x0,8
tick,0x7ff86ea82704,104253757,0,0x0,8
tick,0x7ff86ea82704,104255699,0,0x0,8
tick,0x7ff86ea82704,104257630,0,0x0,8
tick,0x7ff86ea82704,104259737,0,0x0,8
tick,0x7ff86ea82704,104261675,0,0x0,8
tick,0x7ff86ea82704,104263680,0,0x0,8
tick,0x7ff86ea82704,104265724,0,0x0,8
tick,0x7ff86ea82704,104267899,0,0x0,8
tick,0x7ff86ea82704,104269743,0,0x0,8
tick,0x7ff86ea82704,104271662,0,0x0,8
tick,0x7ff86ea82704,104273695,0,0x0,8
tick,0x7ff86ea82704,104275653,0,0x0,8
tick,0x7ff86ea82704,104277993,0,0x0,8
tick,0x7ff86ea82704,104279588,0,0x0,8
tick,0x7ff86ea82704,104281733,0,0x0,8
tick,0x7ff86ea82704,104283686,0,0x0,8
tick,0x7ff86ea82704,104285857,0,0x0,8
tick,0x7ff86ea82704,104287617,0,0x0,8
tick,0x7ff86ea82704,104289578,0,0x0,8
tick,0x7ff86ea82704,104291676,0,0x0,8
tick,0x7ff86ea82704,104293740,0,0x0,8
tick,0x7ff86ea82704,104295660,0,0x0,8
tick,0x7ff86ea82704,104298083,0,0x0,8
tick,0x7ff86ea82704,104299948,0,0x0,8
tick,0x7ff86ea82704,104301639,0,0x0,8
tick,0x7ff86ea82704,104303796,0,0x0,8
tick,0x7ff86ea82704,104305681,0,0x0,8
tick,0x7ff86ea82704,104307807,0,0x0,8
tick,0x7ff86ea82704,104309669,0,0x0,8
tick,0x7ff86ea82704,104312031,0,0x0,8
tick,0x7ff86ea82704,104313624,0,0x0,8
tick,0x7ff86ea82704,104316109,0,0x0,8
tick,0x7ff86ea82704,104317458,0,0x0,8
tick,0x7ff86ea82704,104319552,0,0x0,8
tick,0x7ff86ea82704,104321500,0,0x0,8
tick,0x7ff86ea82704,104323542,0,0x0,8
tick,0x7ff86ea82704,104325540,0,0x0,8
tick,0x7ff86ea82704,104327572,0,0x0,8
tick,0x7ff86ea82704,104329424,0,0x0,8
tick,0x7ff86ea82704,104331765,0,0x0,8
tick,0x7ff86ea82704,104333470,0,0x0,8
tick,0x7ff86ea82704,104335634,0,0x0,8
tick,0x7ff86ea82704,104337401,0,0x0,8
tick,0x7ff86ea82704,104339562,0,0x0,8
tick,0x7ff86ea82704,104341574,0,0x0,8
tick,0x7ff86ea82704,104343445,0,0x0,8
tick,0x7ff86ea82704,104345452,0,0x0,8
tick,0x7ff86ea82704,104347774,0,0x0,8
tick,0x7ff86ea82704,104349747,0,0x0,8
tick,0x7ff86ea82704,104351470,0,0x0,8
tick,0x7ff86ea82704,104353413,0,0x0,8
tick,0x7ff86ea82704,104355832,0,0x0,8
tick,0x7ff86ea82704,104357703,0,0x0,8
tick,0x7ff86ea82704,104359942,0,0x0,8
tick,0x7ff86ea82704,104361397,0,0x0,8
tick,0x7ff86ea82704,104363493,0,0x0,8
tick,0x7ff86ea82704,104365416,0,0x0,8
tick,0x7ff86ea82704,104367388,0,0x0,8
tick,0x7ff86ea82704,104369398,0,0x0,8
tick,0x7ff86ea82704,104371456,0,0x0,8
tick,0x7ff86ea82704,104373362,0,0x0,8
tick,0x7ff86ea82704,104375494,0,0x0,8
tick,0x7ff86ea82704,104377369,0,0x0,8
tick,0x7ff86ea82704,104379438,0,0x0,8
tick,0x7ff86ea82704,104381392,0,0x0,8
tick,0x7ff86ea82704,104383366,0,0x0,8
tick,0x7ff86ea82704,104385395,0,0x0,8
tick,0x7ff86ea82704,104387420,0,0x0,8
tick,0x7ff86ea82704,104389351,0,0x0,8
tick,0x7ff86ea82704,104391313,0,0x0,8
tick,0x7ff86ea82704,104393315,0,0x0,8
tick,0x7ff86ea82704,104395301,0,0x0,8
tick,0x7ff86ea82704,104397644,0,0x0,8
tick,0x7ff86ea82704,104399239,0,0x0,8
tick,0x7ff86ea82704,104401338,0,0x0,8
tick,0x7ff86ea82704,104403715,0,0x0,8
tick,0x7ff86ea82704,104405318,0,0x0,8
tick,0x7ff86ea82704,104407283,0,0x0,8
tick,0x7ff86ea82704,104409278,0,0x0,8
tick,0x7ff86ea82704,104411428,0,0x0,8
tick,0x7ff86ea82704,104413233,0,0x0,8
tick,0x7ff86ea82704,104415350,0,0x0,8
tick,0x7ff86ea82704,104417343,0,0x0,8
tick,0x7ff86ea82704,104419310,0,0x0,8
tick,0x7ff86ea82704,104421196,0,0x0,8
tick,0x7ff86ea82704,104423279,0,0x0,8
tick,0x7ff86ea82704,104425474,0,0x0,8
tick,0x7ff86ea82704,104427299,0,0x0,8
tick,0x7ff86ea82704,104429261,0,0x0,8
tick,0x7ff86ea82704,104431428,0,0x0,8
tick,0x7ff86ea82704,104433311,0,0x0,8
tick,0x7ff86ea82704,104435295,0,0x0,8
tick,0x7ff86ea82704,104437145,0,0x0,8
tick,0x7ff86ea82704,104439266,0,0x0,8
tick,0x7ff86ea82704,104441532,0,0x0,8
tick,0x7ff86ea82704,104443139,0,0x0,8
tick,0x7ff86ea82704,104445252,0,0x0,8
tick,0x7ff86ea82704,104447171,0,0x0,8
tick,0x7ff86ea82704,104449622,0,0x0,8
tick,0x7ff86ea82704,104451209,0,0x0,8
tick,0x7ff86ea82704,104453192,0,0x0,8
tick,0x7ff86ea82704,104455216,0,0x0,8
tick,0x7ff86ea82704,104457299,0,0x0,8
tick,0x7ff86ea82704,104459172,0,0x0,8
tick,0x7ff86ea82704,104461181,0,0x0,8
tick,0x7ff86ea82704,104463260,0,0x0,8
tick,0x7ff86ea82704,104465590,0,0x0,8
tick,0x7ff86ea82704,104467147,0,0x0,8
tick,0x7ff86ea82704,104469304,0,0x0,8
tick,0x7ff86ea82704,104471122,0,0x0,8
tick,0x7ff86ea82704,104473376,0,0x0,8
tick,0x7ff86ea82704,104475209,0,0x0,8
tick,0x7ff86ea82704,104477319,0,0x0,8
tick,0x7ff86ea82704,104479138,0,0x0,8
tick,0x7ff86ea82704,104481378,0,0x0,8
tick,0x7ff86ea82704,104483335,0,0x0,8
tick,0x7ff86ea82704,104485131,0,0x0,8
tick,0x7ff86ea82704,104487162,0,0x0,8
tick,0x7ff86ea82704,104489430,0,0x0,8
tick,0x7ff86ea82704,104491182,0,0x0,8
tick,0x7ff86ea82704,104493373,0,0x0,8
tick,0x7ff86ea82704,104495071,0,0x0,8
tick,0x7ff86ea82704,104497488,0,0x0,8
tick,0x7ff86ea82704,104499236,0,0x0,8
tick,0x7ff86ea82704,104501092,0,0x0,8
tick,0x7ff86ea82704,104503185,0,0x0,8
tick,0x7ff86ea82704,104505429,0,0x0,8
tick,0x7ff86ea82704,104507077,0,0x0,8
tick,0x7ff86ea82704,104509042,0,0x0,8
tick,0x7ff86ea82704,104511225,0,0x0,8
tick,0x7ff86ea82704,104513302,0,0x0,8
tick,0x7ff86ea82704,104515088,0,0x0,8
tick,0x7ff86ea82704,104516894,0,0x0,8
tick,0x7ff86ea82704,104519154,0,0x0,8
tick,0x7ff86ea82704,104521145,0,0x0,8
tick,0x7ff86ea82704,104523100,0,0x0,8
tick,0x7ff86ea82704,104525135,0,0x0,8
tick,0x7ff86ea82704,104527260,0,0x0,8
tick,0x7ff86ea82704,104529155,0,0x0,8
tick,0x7ff86ea82704,104531108,0,0x0,8
tick,0x7ff86ea82704,104533220,0,0x0,8
tick,0x7ff86ea82704,104534967,0,0x0,8
tick,0x7ff86ea82704,104536903,0,0x0,8
tick,0x7ff86ea82704,104538899,0,0x0,8
tick,0x7ff86ea82704,104540895,0,0x0,8
tick,0x7ff86ea82704,104543171,0,0x0,8
tick,0x7ff86ea82704,104544982,0,0x0,8
tick,0x7ff86ea82704,104546905,0,0x0,8
tick,0x7ff86ea82704,104549003,0,0x0,8
tick,0x7ff86ea82704,104551037,0,0x0,8
tick,0x7ff86ea82704,104553020,0,0x0,8
tick,0x7ff86ea82704,104554989,0,0x0,8
tick,0x7ff86ea82704,104556949,0,0x0,8
tick,0x7ff86ea82704,104558955,0,0x0,8
tick,0x7ff86ea82704,104560904,0,0x0,8
tick,0x7ff86ea82704,104562847,0,0x0,8
tick,0x7ff86ea82704,104564881,0,0x0,8
tick,0x7ff86ea82704,104567137,0,0x0,8
tick,0x7ff86ea82704,104568799,0,0x0,8
tick,0x7ff86ea82704,104570742,0,0x0,8
tick,0x7ff86ea82704,104572982,0,0x0,8
tick,0x7ff86ea82704,104575407,0,0x0,8
tick,0x7ff86ea82704,104576868,0,0x0,8
tick,0x7ff86ea82704,104578798,0,0x0,8
tick,0x7ff86ea82704,104581036,0,0x0,8
tick,0x7ff86ea82704,104582899,0,0x0,8
tick,0x7ff86ea82704,104584724,0,0x0,8
tick,0x7ff86ea82704,104586818,0,0x0,8
tick,0x7ff86ea82704,104588743,0,0x0,8
tick,0x7ff86ea82704,104590704,0,0x0,8
tick,0x7ff86ea82704,104592785,0,0x0,8
tick,0x7ff86ea82704,104594640,0,0x0,8
tick,0x7ff86ea82704,104596796,0,0x0,8
tick,0x7ff86ea82704,104598657,0,0x0,8
tick,0x7ff86ea82704,104600696,0,0x0,8
tick,0x7ff86ea82704,104602782,0,0x0,8
tick,0x7ff86ea82704,104604679,0,0x0,8
tick,0x7ff86ea82704,104606585,0,0x0,8
tick,0x7ff86ea82704,104608663,0,0x0,8
tick,0x7ff86ea82704,104610677,0,0x0,8
tick,0x7ff86ea82704,104612654,0,0x0,8
tick,0x7ff86ea82704,104614777,0,0x0,8
tick,0x7ff86ea82704,104616760,0,0x0,8
tick,0x7ff86ea82704,104618744,0,0x0,8
tick,0x7ff86ea82704,104620667,0,0x0,8
tick,0x7ff86ea82704,104622978,0,0x0,8
tick,0x7ff86ea82704,104624834,0,0x0,8
tick,0x7ff86ea82704,104627171,0,0x0,8
tick,0x7ff86ea82704,104628804,0,0x0,8
tick,0x7ff86ea82704,104631159,0,0x0,8
tick,0x7ff86ea82704,104633022,0,0x0,8
tick,0x7ff86ea82704,104634796,0,0x0,8
tick,0x7ff86ea82704,104636927,0,0x0,8
tick,0x7ff86ea82704,104638703,0,0x0,8
tick,0x7ff86ea82704,104640800,0,0x0,8
tick,0x7ff86ea82704,104642676,0,0x0,8
tick,0x7ff86ea82704,104644679,0,0x0,8
tick,0x7ff86ea82704,104646774,0,0x0,8
tick,0x7ff86ea82704,104648727,0,0x0,8
tick,0x7ff86ea82704,104650567,0,0x0,8
tick,0x7ff86ea82704,104652568,0,0x0,8
tick,0x7ff86ea82704,104654619,0,0x0,8
tick,0x7ff86ea82704,104656665,0,0x0,8
tick,0x7ff86ea82704,104658660,0,0x0,8
tick,0x7ff86ea82704,104660740,0,0x0,8
tick,0x7ff86ea82704,104661976,0,0x0,8
tick,0x7ff86ea82704,104664244,0,0x0,8
tick,0x7ff86ea82704,104665980,0,0x0,8
tick,0x7ff86ea82704,104667904,0,0x0,8
tick,0x7ff86ea82704,104670031,0,0x0,8
tick,0x7ff86ea82704,104672061,0,0x0,8
tick,0x7ff86ea82704,104673977,0,0x0,8
tick,0x7ff86ea82704,104675945,0,0x0,8
tick,0x7ff86ea82704,104678099,0,0x0,8
tick,0x7ff86ea82704,104680024,0,0x0,8
tick,0x7ff86ea82704,104682106,0,0x0,8
tick,0x7ff86ea82704,104684252,0,0x0,8
tick,0x7ff86ea82704,104686112,0,0x0,8
tick,0x7ff86ea82704,104688221,0,0x0,8
tick,0x7ff86ea82704,104690007,0,0x0,8
tick,0x7ff86ea82704,104692273,0,0x0,8
tick,0x7ff86ea82704,104694285,0,0x0,8
tick,0x7ff86ea82704,104696056,0,0x0,8
tick,0x7ff86ea82704,104698199,0,0x0,8
tick,0x7ff86ea82704,104700316,0,0x0,8
tick,0x7ff86ea82704,104702153,0,0x0,8
tick,0x7ff86ea82704,104704163,0,0x0,8
tick,0x7ff86ea82704,104706045,0,0x0,8
tick,0x7ff86ea82704,104708096,0,0x0,8
tick,0x7ff86ea82704,104709929,0,0x0,8
tick,0x7ff86ea82704,104712021,0,0x0,8
tick,0x7ff86ea82704,104714096,0,0x0,8
tick,0x7ff86ea82704,104716111,0,0x0,8
tick,0x7ff86ea82704,104718065,0,0x0,8
tick,0x7ff86ea82704,104719846,0,0x0,8
tick,0x7ff86ea82704,104721982,0,0x0,8
tick,0x7ff86ea82704,104723884,0,0x0,8
tick,0x7ff86ea82704,104726040,0,0x0,8
tick,0x7ff86ea82704,104727822,0,0x0,8
tick,0x7ff86ea82704,104729956,0,0x0,8
tick,0x7ff86ea82704,104731931,0,0x0,8
tick,0x7ff86ea82704,104733936,0,0x0,8
tick,0x7ff86ea82704,104735822,0,0x0,8
tick,0x7ff86ea82704,104737879,0,0x0,8
tick,0x7ff86ea82704,104739925,0,0x0,8
tick,0x7ff86ea82704,104741886,0,0x0,8
tick,0x7ff86ea82704,104743881,0,0x0,8
tick,0x7ff86ea82704,104745908,0,0x0,8
tick,0x7ff86ea82704,104748065,0,0x0,8
tick,0x7ff86ea82704,104749901,0,0x0,8
tick,0x7ff86ea82704,104751792,0,0x0,8
tick,0x7ff86ea82704,104753947,0,0x0,8
tick,0x7ff86ea82704,104755934,0,0x0,8
tick,0x7ff86ea82704,104757941,0,0x0,8
tick,0x7ff86ea82704,104759861,0,0x0,8
tick,0x7ff86ea82704,104761811,0,0x0,8
tick,0x7ff86ea82704,104763753,0,0x0,8
tick,0x7ff86ea82704,104766104,0,0x0,8
tick,0x7ff86ea82704,104767664,0,0x0,8
tick,0x7ff86ea82704,104769683,0,0x0,8
tick,0x7ff86ea82704,104771863,0,0x0,8
tick,0x7ff86ea82704,104773720,0,0x0,8
tick,0x7ff86ea82704,104776017,0,0x0,8
tick,0x7ff86ea82704,104777816,0,0x0,8
tick,0x7ff86ea82704,104779956,0,0x0,8
tick,0x7ff86ea82704,104781923,0,0x0,8
tick,0x7ff86ea82704,104783836,0,0x0,8
tick,0x7ff86ea82704,104785536,0,0x0,8
tick,0x7ff86ea82704,104787925,0,0x0,8
tick,0x7ff86ea82704,104789668,0,0x0,8
tick,0x7ff86ea82704,104791916,0,0x0,8
tick,0x7ff86ea82704,104793705,0,0x0,8
tick,0x7ff86ea82704,104795779,0,0x0,8
tick,0x7ff86ea82704,104797766,0,0x0,8
tick,0x7ff86ea82704,104799819,0,0x0,8
tick,0x7ff86ea82704,104801700,0,0x0,8
tick,0x7ff86ea82704,104803873,0,0x0,8
tick,0x7ff86ea82704,104805696,0,0x0,8
tick,0x7ff86ea82704,104807780,0,0x0,8
tick,0x7ff86ea82704,104809769,0,0x0,8
tick,0x7ff86ea82704,104811893,0,0x0,8
tick,0x7ff86ea82704,104813741,0,0x0,8
tick,0x7ff86ea82704,104816611,0,0x0,8
tick,0x7ff86ea82704,104817577,0,0x0,8
tick,0x7ff86ea82704,104819696,0,0x0,8
tick,0x7ff86ea82704,104821465,0,0x0,8
tick,0x7ff86ea82704,104823574,0,0x0,8
tick,0x7ff86ea82704,104825459,0,0x0,8
tick,0x7ff86ea82704,104827664,0,0x0,8
tick,0x7ff86ea82704,104829531,0,0x0,8
tick,0x7ff86ea82704,104831758,0,0x0,8
tick,0x7ff86ea82704,104833535,0,0x0,8
tick,0x7ff86ea82704,104835633,0,0x0,8
tick,0x7ff86ea82704,104837495,0,0x0,8
tick,0x7ff86ea82704,104839675,0,0x0,8
tick,0x7ff86ea82704,104841474,0,0x0,8
tick,0x7ff86ea82704,104843528,0,0x0,8
tick,0x7ff86ea82704,104845439,0,0x0,8
tick,0x7ff86ea82704,104847661,0,0x0,8
tick,0x7ff86ea82704,104849743,0,0x0,8
tick,0x7ff86ea82704,104851505,0,0x0,8
tick,0x7ff86ea82704,104853495,0,0x0,8
tick,0x7ff86ea82704,104855494,0,0x0,8
tick,0x7ff86ea82704,104857484,0,0x0,8
tick,0x7ff86ea82704,104859433,0,0x0,8
tick,0x7ff86ea82704,104861556,0,0x0,8
tick,0x7ff86ea82704,104863588,0,0x0,8
tick,0x7ff86ea82704,104865420,0,0x0,8
tick,0x7ff86ea82704,104867458,0,0x0,8
tick,0x7ff86ea82704,104869462,0,0x0,8
tick,0x7ff86ea82704,104871434,0,0x0,8
tick,0x7ff86ea82704,104873462,0,0x0,8
tick,0x7ff86ea82704,104875418,0,0x0,8
tick,0x7ff86ea82704,104877385,0,0x0,8
tick,0x7ff86ea82704,104879377,0,0x0,8
tick,0x7ff86ea82704,104881484,0,0x0,8
tick,0x7ff86ea82704,104883336,0,0x0,8
tick,0x7ff86ea82704,104885297,0,0x0,8
tick,0x7ff86ea82704,104887484,0,0x0,8
tick,0x7ff86ea82704,104889335,0,0x0,8
tick,0x7ff86ea82704,104891402,0,0x0,8
tick,0x7ff86ea82704,104893360,0,0x0,8
tick,0x7ff86ea82704,104895413,0,0x0,8
tick,0x7ff86ea82704,104897402,0,0x0,8
tick,0x7ff86ea82704,104899337,0,0x0,8
tick,0x7ff86ea82704,104901365,0,0x0,8
tick,0x7ff86ea82704,104903302,0,0x0,8
tick,0x7ff86ea82704,104905298,0,0x0,8
tick,0x7ff86ea82704,104907369,0,0x0,8
tick,0x7ff86ea82704,104909346,0,0x0,8
tick,0x7ff86ea82704,104911286,0,0x0,8
tick,0x7ff86ea82704,104913342,0,0x0,8
tick,0x7ff86ea82704,104915637,0,0x0,8
tick,0x7ff86ea82704,104917303,0,0x0,8
tick,0x7ff86ea82704,104919316,0,0x0,8
tick,0x7ff86ea82704,104921245,0,0x0,8
tick,0x7ff86ea82704,104923260,0,0x0,8
tick,0x7ff86ea82704,104925209,0,0x0,8
tick,0x7ff86ea82704,104927325,0,0x0,8
tick,0x7ff86ea82704,104929432,0,0x0,8
tick,0x7ff86ea82704,104931282,0,0x0,8
tick,0x7ff86ea82704,104933285,0,0x0,8
tick,0x7ff86ea82704,104935260,0,0x0,8
tick,0x7ff86ea82704,104937227,0,0x0,8
tick,0x7ff86ea82704,104939260,0,0x0,8
tick,0x7ff86ea82704,104941198,0,0x0,8
tick,0x7ff86ea82704,104943228,0,0x0,8
tick,0x7ff86ea82704,104945145,0,0x0,8
tick,0x7ff86ea82704,104947288,0,0x0,8
tick,0x7ff86ea82704,104949235,0,0x0,8
tick,0x7ff86ea82704,104951372,0,0x0,8
tick,0x7ff86ea82704,104953258,0,0x0,8
tick,0x7ff86ea82704,104955250,0,0x0,8
tick,0x7ff86ea82704,104957224,0,0x0,8
tick,0x7ff86ea82704,104959181,0,0x0,8
tick,0x7ff86ea82704,104961128,0,0x0,8
tick,0x7ff86ea82704,104963262,0,0x0,8
tick,0x7ff86ea82704,104965184,0,0x0,8
tick,0x7ff86ea82704,104967205,0,0x0,8
tick,0x7ff86ea82704,104969190,0,0x0,8
tick,0x7ff86ea82704,104971123,0,0x0,8
tick,0x7ff86ea82704,104973165,0,0x0,8
tick,0x7ff86ea82704,104975170,0,0x0,8
tick,0x7ff86ea82704,104977113,0,0x0,8
tick,0x7ff86ea82704,104979211,0,0x0,8
tick,0x7ff86ea82704,104981211,0,0x0,8
tick,0x7ff86ea82704,104983121,0,0x0,8
tick,0x7ff86ea82704,104985061,0,0x0,8
tick,0x7ff86ea82704,104987100,0,0x0,8
tick,0x7ff86ea82704,104989069,0,0x0,8
tick,0x7ff86ea82704,104991141,0,0x0,8
tick,0x7ff86ea82704,104993087,0,0x0,8
tick,0x7ff86ea82704,104995129,0,0x0,8
tick,0x7ff86ea82704,104997219,0,0x0,8
tick,0x7ff86ea82704,104999108,0,0x0,8
tick,0x7ff86ea82704,105001010,0,0x0,8
tick,0x7ff86ea82704,105003139,0,0x0,8
tick,0x7ff86ea82704,105004955,0,0x0,8
tick,0x7ff86ea82704,105007120,0,0x0,8
tick,0x7ff86ea82704,105008981,0,0x0,8
tick,0x7ff86ea82704,105011019,0,0x0,8
tick,0x7ff86ea82704,105013073,0,0x0,8
tick,0x7ff86ea82704,105015103,0,0x0,8
tick,0x7ff86ea82704,105016993,0,0x0,8
tick,0x7ff86ea82704,105019070,0,0x0,8
tick,0x7ff86ea82704,105021001,0,0x0,8
tick,0x7ff86ea82704,105023028,0,0x0,8
tick,0x7ff86ea82704,105025079,0,0x0,8
tick,0x7ff86ea82704,105027042,0,0x0,8
tick,0x7ff86ea82704,105028983,0,0x0,8
tick,0x7ff86ea82704,105031044,0,0x0,8
tick,0x7ff86ea82704,105033051,0,0x0,8
tick,0x7ff86ea82704,105034985,0,0x0,8
tick,0x7ff86ea82704,105036970,0,0x0,8
tick,0x7ff86ea82704,105038977,0,0x0,8
tick,0x7ff86ea82704,105040985,0,0x0,8
tick,0x7ff86ea82704,105042952,0,0x0,8
tick,0x7ff86ea82704,105044912,0,0x0,8
tick,0x7ff86ea82704,105046981,0,0x0,8
tick,0x7ff86ea82704,105048871,0,0x0,8
tick,0x7ff86ea82704,105051011,0,0x0,8
tick,0x7ff86ea82704,105052958,0,0x0,8
tick,0x7ff86ea82704,105054949,0,0x0,8
tick,0x7ff86ea82704,105056930,0,0x0,8
tick,0x7ff86ea82704,105058931,0,0x0,8
tick,0x7ff86ea82704,105060893,0,0x0,8
tick,0x7ff86ea82704,105062817,0,0x0,8
tick,0x7ff86ea82704,105064874,0,0x0,8
tick,0x7ff86ea82704,105066888,0,0x0,8
tick,0x7ff86ea82704,105068912,0,0x0,8
tick,0x7ff86ea82704,105070834,0,0x0,8
tick,0x7ff86ea82704,105072800,0,0x0,8
tick,0x7ff86ea82704,105074899,0,0x0,8
tick,0x7ff86ea82704,105076795,0,0x0,8
tick,0x7ff86ea82704,105078776,0,0x0,8
tick,0x7ff86ea82704,105080970,0,0x0,8
tick,0x7ff86ea82704,105082801,0,0x0,8
tick,0x7ff86ea82704,105084789,0,0x0,8
tick,0x7ff86ea82704,105086886,0,0x0,8
tick,0x7ff86ea82704,105088813,0,0x0,8
tick,0x7ff86ea82704,105090883,0,0x0,8
tick,0x7ff86ea82704,105092757,0,0x0,8
tick,0x7ff86ea82704,105094895,0,0x0,8
tick,0x7ff86ea82704,105096774,0,0x0,8
tick,0x7ff86ea82704,105098793,0,0x0,8
tick,0x7ff86ea82704,105100839,0,0x0,8
tick,0x7ff86ea82704,105102847,0,0x0,8
tick,0x7ff86ea82704,105104871,0,0x0,8
tick,0x7ff86ea82704,105106880,0,0x0,8
tick,0x7ff86ea82704,105108816,0,0x0,8
tick,0x7ff86ea82704,105110887,0,0x0,8
tick,0x7ff86ea82704,105112878,0,0x0,8
tick,0x7ff86ea82704,105114843,0,0x0,8
tick,0x7ff86ea82704,105116875,0,0x0,8
tick,0x7ff86ea82704,105118824,0,0x0,8
tick,0x7ff86ea82704,105120664,0,0x0,8
tick,0x7ff86ea82704,105122895,0,0x0,8
tick,0x7ff86ea82704,105124620,0,0x0,8
tick,0x7ff86ea82704,105126968,0,0x0,8
tick,0x7ff86ea82704,105128734,0,0x0,8
tick,0x7ff86ea82704,105130945,0,0x0,8
tick,0x7ff86ea82704,105132848,0,0x0,8
tick,0x7ff86ea82704,105134701,0,0x0,8
tick,0x7ff86ea82704,105136718,0,0x0,8
tick,0x7ff86ea82704,105138613,0,0x0,8
tick,0x7ff86ea82704,105140762,0,0x0,8
tick,0x7ff86ea82704,105142648,0,0x0,8
tick,0x7ff86ea82704,105144741,0,0x0,8
tick,0x7ff86ea82704,105146727,0,0x0,8
tick,0x7ff86ea82704,105148611,0,0x0,8
tick,0x7ff86ea82704,105150768,0,0x0,8
tick,0x7ff86ea82704,105152496,0,0x0,8
tick,0x7ff86ea82704,105154791,0,0x0,8
tick,0x7ff86ea82704,105156640,0,0x0,8
tick,0x7ff86ea82704,105158925,0,0x0,8
tick,0x7ff86ea82704,105160661,0,0x0,8
tick,0x7ff86ea82704,105162720,0,0x0,8
tick,0x7ff86ea82704,105164820,0,0x0,8
tick,0x7ff86ea82704,105166823,0,0x0,8
tick,0x7ff86ea82704,105168557,0,0x0,8
tick,0x7ff86ea82704,105170688,0,0x0,8
tick,0x7ff86ea82704,105172680,0,0x0,8
tick,0x7ff86ea82704,105174669,0,0x0,8
tick,0x7ff86ea82704,105176676,0,0x0,8
tick,0x7ff86ea82704,105178651,0,0x0,8
tick,0x7ff86ea82704,105181029,0,0x0,8
tick,0x7ff86ea82704,105182772,0,0x0,8
tick,0x7ff86ea82704,105184662,0,0x0,8
tick,0x7ff86ea82704,105186720,0,0x0,8
tick,0x7ff86ea82704,105188588,0,0x0,8
tick,0x7ff86ea82704,105190651,0,0x0,8
tick,0x7ff86ea82704,105192524,0,0x0,8
tick,0x7ff86ea82704,105194565,0,0x0,8
tick,0x7ff86ea82704,105196667,0,0x0,8
tick,0x7ff86ea82704,105198634,0,0x0,8
tick,0x7ff86ea82704,105200538,0,0x0,8
tick,0x7ff86ea82704,105202691,0,0x0,8
tick,0x7ff86ea82704,105204447,0,0x0,8
tick,0x7ff86ea82704,105206588,0,0x0,8
tick,0x7ff86ea82704,105208460,0,0x0,8
tick,0x7ff86ea82704,105210498,0,0x0,8
tick,0x7ff86ea82704,105212512,0,0x0,8
tick,0x7ff86ea82704,105214533,0,0x0,8
tick,0x7ff86ea82704,105216481,0,0x0,8
tick,0x7ff86ea82704,105218527,0,0x0,8
tick,0x7ff86ea82704,105220559,0,0x0,8
tick,0x7ff86ea82704,105222476,0,0x0,8
tick,0x7ff86ea82704,105224537,0,0x0,8
tick,0x7ff86ea82704,105226555,0,0x0,8
tick,0x7ff86ea82704,105228430,0,0x0,8
tick,0x7ff86ea82704,105230517,0,0x0,8
tick,0x7ff86ea82704,105232452,0,0x0,8
tick,0x7ff86ea82704,105234652,0,0x0,8
tick,0x7ff86ea82704,105236407,0,0x0,8
tick,0x7ff86ea82704,105240631,0,0x0,8
tick,0x7ff86ea82704,105242591,0,0x0,8
tick,0x7ff86ea82704,105244720,0,0x0,8
tick,0x7ff86ea82704,105246911,0,0x0,8
tick,0x7ff86ea82704,105248582,0,0x0,8
tick,0x7ff86ea82704,105250609,0,0x0,8
tick,0x7ff86ea82704,105252587,0,0x0,8
tick,0x7ff86ea82704,105254496,0,0x0,8
tick,0x7ff86ea82704,105256498,0,0x0,8
tick,0x7ff86ea82704,105258530,0,0x0,8
tick,0x7ff86ea82704,105260416,0,0x0,8
tick,0x7ff86ea82704,105262468,0,0x0,8
tick,0x7ff86ea82704,105264926,0,0x0,8
tick,0x7ff86ea82704,105266490,0,0x0,8
tick,0x7ff86ea82704,105268518,0,0x0,8
tick,0x7ff86ea82704,105270409,0,0x0,8
tick,0x7ff86ea82704,105272417,0,0x0,8
tick,0x7ff86ea82704,105274431,0,0x0,8
tick,0x7ff86ea82704,105276356,0,0x0,8
tick,0x7ff86ea82704,105278494,0,0x0,8
tick,0x7ff86ea82704,105280646,0,0x0,8
tick,0x7ff86ea82704,105282544,0,0x0,8
tick,0x7ff86ea82704,105284518,0,0x0,8
tick,0x7ff86ea82704,105286623,0,0x0,8
tick,0x7ff86ea82704,105288744,0,0x0,8
tick,0x7ff86ea82704,105290447,0,0x0,8
tick,0x7ff86ea82704,105292417,0,0x0,8
tick,0x7ff86ea82704,105294416,0,0x0,8
tick,0x7ff86ea82704,105296360,0,0x0,8
tick,0x7ff86ea82704,105298424,0,0x0,8
tick,0x7ff86ea82704,105300399,0,0x0,8
tick,0x7ff86ea82704,105302379,0,0x0,8
tick,0x7ff86ea82704,105304444,0,0x0,8
tick,0x7ff86ea82704,105306221,0,0x0,8
tick,0x7ff86ea82704,105308402,0,0x0,8
tick,0x7ff86ea82704,105310258,0,0x0,8
tick,0x7ff86ea82704,105312327,0,0x0,8
tick,0x7ff86ea82704,105314569,0,0x0,8
tick,0x7ff86ea82704,105316348,0,0x0,8
tick,0x7ff86ea82704,105318331,0,0x0,8
tick,0x7ff86ea82704,105320466,0,0x0,8
tick,0x7ff86ea82704,105322253,0,0x0,8
tick,0x7ff86ea82704,105324399,0,0x0,8
tick,0x7ff86ea82704,105326199,0,0x0,8
tick,0x7ff86ea82704,105328468,0,0x0,8
tick,0x7ff86ea82704,105330370,0,0x0,8
tick,0x7ff86ea82704,105332595,0,0x0,8
tick,0x7ff86ea82704,105334367,0,0x0,8
tick,0x7ff86ea82704,105336264,0,0x0,8
tick,0x7ff86ea82704,105338272,0,0x0,8
tick,0x7ff86ea82704,105340378,0,0x0,8
tick,0x7ff86ea82704,105342228,0,0x0,8
tick,0x7ff86ea82704,105344431,0,0x0,8
tick,0x7ff86ea82704,105346323,0,0x0,8
tick,0x7ff86ea82704,105348326,0,0x0,8
tick,0x7ff86ea82704,105350330,0,0x0,8
tick,0x7ff86ea82704,105352498,0,0x0,8
tick,0x7ff86ea82704,105354312,0,0x0,8
tick,0x7ff86ea82704,105356242,0,0x0,8
tick,0x7ff86ea82704,105358167,0,0x0,8
tick,0x7ff86ea82704,105360231,0,0x0,8
tick,0x7ff86ea82704,105362322,0,0x0,8
tick,0x7ff86ea82704,105364202,0,0x0,8
tick,0x7ff86ea82704,105366283,0,0x0,8
tick,0x7ff86ea82704,105368340,0,0x0,8
tick,0x7ff86ea82704,105370197,0,0x0,8
tick,0x7ff86ea82704,105372159,0,0x0,8
tick,0x7ff86ea82704,105374214,0,0x0,8
tick,0x7ff86ea82704,105376220,0,0x0,8
tick,0x7ff86ea82704,105378219,0,0x0,8
tick,0x7ff86ea82704,105380222,0,0x0,8
tick,0x7ff86ea82704,105382265,0,0x0,8
tick,0x7ff86ea82704,105384340,0,0x0,8
tick,0x7ff86ea82704,105386256,0,0x0,8
tick,0x7ff86ea82704,105388087,0,0x0,8
tick,0x7ff86ea82704,105390091,0,0x0,8
tick,0x7ff86ea82704,105392153,0,0x0,8
tick,0x7ff86ea82704,105394241,0,0x0,8
tick,0x7ff86ea82704,105396008,0,0x0,8
tick,0x7ff86ea82704,105398553,0,0x0,8
tick,0x7ff86ea82704,105400094,0,0x0,8
tick,0x7ff86ea82704,105402155,0,0x0,8
tick,0x7ff86ea82704,105404065,0,0x0,8
tick,0x7ff86ea82704,105406018,0,0x0,8
tick,0x7ff86ea82704,105408130,0,0x0,8
tick,0x7ff86ea82704,105410086,0,0x0,8
tick,0x7ff86ea82704,105412230,0,0x0,8
tick,0x7ff86ea82704,105414098,0,0x0,8
tick,0x7ff86ea82704,105416197,0,0x0,8
tick,0x7ff86ea82704,105418230,0,0x0,8
tick,0x7ff86ea82704,105420060,0,0x0,8
tick,0x7ff86ea82704,105422149,0,0x0,8
tick,0x7ff86ea82704,105423890,0,0x0,8
tick,0x7ff86ea82704,105426115,0,0x0,8
tick,0x7ff86ea82704,105427869,0,0x0,8
tick,0x7ff86ea82704,105430034,0,0x0,8
tick,0x7ff86ea82704,105431968,0,0x0,8
tick,0x7ff86ea82704,105433947,0,0x0,8
tick,0x7ff86ea82704,105436006,0,0x0,8
tick,0x7ff86ea82704,105438033,0,0x0,8
tick,0x7ff86ea82704,105440178,0,0x0,8
tick,0x7ff86ea82704,105441989,0,0x0,8
tick,0x7ff86ea82704,105444010,0,0x0,8
tick,0x7ff86ea82704,105445999,0,0x0,8
tick,0x7ff86ea82704,105448186,0,0x0,8
tick,0x7ff86ea82704,105449884,0,0x0,8
tick,0x7ff86ea82704,105452047,0,0x0,8
tick,0x7ff86ea82704,105453883,0,0x0,8
tick,0x7ff86ea82704,105456055,0,0x0,8
tick,0x7ff86ea82704,105457916,0,0x0,8
tick,0x7ff86ea82704,105460041,0,0x0,8
tick,0x7ff86ea82704,105461857,0,0x0,8
tick,0x7ff86ea82704,105463879,0,0x0,8
tick,0x7ff86ea82704,105465954,0,0x0,8
tick,0x7ff86ea82704,105467966,0,0x0,8
tick,0x7ff86ea82704,105469859,0,0x0,8
tick,0x7ff86ea82704,105472017,0,0x0,8
tick,0x7ff86ea82704,105474035,0,0x0,8
tick,0x7ff86ea82704,105476273,0,0x0,8
tick,0x7ff86ea82704,105477938,0,0x0,8
tick,0x7ff86ea82704,105480176,0,0x0,8
tick,0x7ff86ea82704,105482138,0,0x0,8
tick,0x7ff86ea82704,105483972,0,0x0,8
tick,0x7ff86ea82704,105486004,0,0x0,8
tick,0x7ff86ea82704,105487742,0,0x0,8
tick,0x7ff86ea82704,105489835,0,0x0,8
tick,0x7ff86ea82704,105491693,0,0x0,8
tick,0x7ff86ea82704,105493903,0,0x0,8
tick,0x7ff86ea82704,105495803,0,0x0,8
tick,0x7ff86ea82704,105497934,0,0x0,8
tick,0x7ff86ea82704,105500232,0,0x0,8
tick,0x7ff86ea82704,105502185,0,0x0,8
tick,0x7ff86ea82704,105503930,0,0x0,8
tick,0x7ff86ea82704,105505757,0,0x0,8
tick,0x7ff86ea82704,105508088,0,0x0,8
tick,0x7ff86ea82704,105509768,0,0x0,8
tick,0x7ff86ea82704,105512120,0,0x0,8
tick,0x7ff86ea82704,105513950,0,0x0,8
tick,0x7ff86ea82704,105515829,0,0x0,8
tick,0x7ff86ea82704,105517821,0,0x0,8
tick,0x7ff86ea82704,105519765,0,0x0,8
tick,0x7ff86ea82704,105522177,0,0x0,8
tick,0x7ff86ea82704,105523701,0,0x0,8
tick,0x7ff86ea82704,105525775,0,0x0,8
tick,0x7ff86ea82704,105527753,0,0x0,8
tick,0x7ff86ea82704,105529781,0,0x0,8
tick,0x7ff86ea82704,105532653,0,0x0,8
tick,0x7ff86ea82704,105533665,0,0x0,8
tick,0x7ff86ea82704,105535723,0,0x0,8
tick,0x7ff86ea82704,105537544,0,0x0,8
tick,0x7ff86ea82704,105539735,0,0x0,8
tick,0x7ff86ea82704,105541619,0,0x0,8
tick,0x7ff86ea82704,105543746,0,0x0,8
tick,0x7ff86ea82704,105545669,0,0x0,8
tick,0x7ff86ea82704,105547853,0,0x0,8
tick,0x7ff86ea82704,105549736,0,0x0,8
tick,0x7ff86ea82704,105551648,0,0x0,8
tick,0x7ff86ea82704,105553541,0,0x0,8
tick,0x7ff86ea82704,105555532,0,0x0,8
tick,0x7ff86ea82704,105557643,0,0x0,8
tick,0x7ff86ea82704,105559551,0,0x0,8
tick,0x7ff86ea82704,105561604,0,0x0,8
tick,0x7ff86ea82704,105563569,0,0x0,8
tick,0x7ff86ea82704,105566045,0,0x0,8
tick,0x7ff86ea82704,105567616,0,0x0,8
tick,0x7ff86ea82704,105569551,0,0x0,8
tick,0x7ff86ea82704,105571569,0,0x0,8
tick,0x7ff86ea82704,105573512,0,0x0,8
tick,0x7ff86ea82704,105575610,0,0x0,8
tick,0x7ff86ea82704,105577480,0,0x0,8
tick,0x7ff86ea82704,105579594,0,0x0,8
tick,0x7ff86ea82704,105581466,0,0x0,8
tick,0x7ff86ea82704,105583504,0,0x0,8
tick,0x7ff86ea82704,105585506,0,0x0,8
tick,0x7ff86ea82704,105587631,0,0x0,8
tick,0x7ff86ea82704,105589630,0,0x0,8
tick,0x7ff86ea82704,105591484,0,0x0,8
tick,0x7ff86ea82704,105593440,0,0x0,8
tick,0x7ff86ea82704,105595567,0,0x0,8
tick,0x7ff86ea82704,105597559,0,0x0,8
tick,0x7ff86ea82704,105599559,0,0x0,8
tick,0x7ff86ea82704,105601527,0,0x0,8
tick,0x7ff86ea82704,105603606,0,0x0,8
tick,0x7ff86ea82704,105605527,0,0x0,8
tick,0x7ff86ea82704,105607384,0,0x0,8
tick,0x7ff86ea82704,105609378,0,0x0,8
tick,0x7ff86ea82704,105611427,0,0x0,8
tick,0x7ff86ea82704,105613486,0,0x0,8
tick,0x7ff86ea82704,105615506,0,0x0,8
tick,0x7ff86ea82704,105617508,0,0x0,8
tick,0x7ff86ea82704,105619399,0,0x0,8
tick,0x7ff86ea82704,105621421,0,0x0,8
tick,0x7ff86ea82704,105623555,0,0x0,8
tick,0x7ff86ea82704,105625414,0,0x0,8
tick,0x7ff86ea82704,105627527,0,0x0,8
tick,0x7ff86ea82704,105629678,0,0x0,8
tick,0x7ff86ea82704,105631443,0,0x0,8
tick,0x7ff86ea82704,105633358,0,0x0,8
tick,0x7ff86ea82704,105635606,0,0x0,8
tick,0x7ff86ea82704,105637375,0,0x0,8
tick,0x7ff86ea82704,105639531,0,0x0,8
tick,0x7ff86ea82704,105641473,0,0x0,8
tick,0x7ff86ea82704,105643588,0,0x0,8
tick,0x7ff86ea82704,105645247,0,0x0,8
tick,0x7ff86ea82704,105647510,0,0x0,8
tick,0x7ff86ea82704,105649505,0,0x0,8
tick,0x7ff86ea82704,105651537,0,0x0,8
tick,0x7ff86ea82704,105653494,0,0x0,8
tick,0x7ff86ea82704,105655297,0,0x0,8
tick,0x7ff86ea82704,105657282,0,0x0,8
tick,0x7ff86ea82704,105659369,0,0x0,8
tick,0x7ff86ea82704,105661345,0,0x0,8
tick,0x7ff86ea82704,105663410,0,0x0,8
tick,0x7ff86ea82704,105665359,0,0x0,8
tick,0x7ff86ea82704,105667281,0,0x0,8
tick,0x7ff86ea82704,105669267,0,0x0,8
tick,0x7ff86ea82704,105671240,0,0x0,8
tick,0x7ff86ea82704,105673299,0,0x0,8
tick,0x7ff86ea82704,105675232,0,0x0,8
tick,0x7ff86ea82704,105677312,0,0x0,8
tick,0x7ff86ea82704,105679324,0,0x0,8
tick,0x7ff86ea82704,105681211,0,0x0,8
tick,0x7ff86ea82704,105683359,0,0x0,8
tick,0x7ff86ea82704,105685219,0,0x0,8
tick,0x7ff86ea82704,105687323,0,0x0,8
tick,0x7ff86ea82704,105689250,0,0x0,8
tick,0x7ff86ea82704,105691199,0,0x0,8
tick,0x7ff86ea82704,105693240,0,0x0,8
tick,0x7ff86ea82704,105695300,0,0x0,8
tick,0x7ff86ea82704,105697187,0,0x0,8
tick,0x7ff86ea82704,105699246,0,0x0,8
tick,0x7ff86ea82704,105701215,0,0x0,8
tick,0x7ff86ea82704,105703206,0,0x0,8
tick,0x7ff86ea82704,105705162,0,0x0,8
tick,0x7ff86ea82704,105707426,0,0x0,8
tick,0x7ff86ea82704,105709223,0,0x0,8
tick,0x7ff86ea82704,105711199,0,0x0,8
tick,0x7ff86ea82704,105713080,0,0x0,8
tick,0x7ff86ea82704,105715202,0,0x0,8
tick,0x7ff86ea82704,105717156,0,0x0,8
tick,0x7ff86ea82704,105719301,0,0x0,8
tick,0x7ff86ea82704,105721181,0,0x0,8
tick,0x7ff86ea82704,105723121,0,0x0,8
tick,0x7ff86ea82704,105725013,0,0x0,8
tick,0x7ff86ea82704,105727186,0,0x0,8
tick,0x7ff86ea82704,105729138,0,0x0,8
tick,0x7ff86ea82704,105731220,0,0x0,8
tick,0x7ff86ea82704,105733089,0,0x0,8
tick,0x7ff86ea82704,105735121,0,0x0,8
tick,0x7ff86ea82704,105737093,0,0x0,8
tick,0x7ff86ea82704,105739083,0,0x0,8
tick,0x7ff86ea82704,105741060,0,0x0,8
tick,0x7ff86ea82704,105743159,0,0x0,8
tick,0x7ff86ea82704,105745045,0,0x0,8
tick,0x7ff86ea82704,105746931,0,0x0,8
tick,0x7ff86ea82704,105749057,0,0x0,8
tick,0x7ff86ea82704,105751103,0,0x0,8
tick,0x7ff86ea82704,105752901,0,0x0,8
tick,0x7ff86ea82704,105755095,0,0x0,8
tick,0x7ff86ea82704,105757100,0,0x0,8
tick,0x7ff86ea82704,105759053,0,0x0,8
tick,0x7ff86ea82704,105761002,0,0x0,8
tick,0x7ff86ea82704,105763200,0,0x0,8
tick,0x7ff86ea82704,105764969,0,0x0,8
tick,0x7ff86ea82704,105767086,0,0x0,8
tick,0x7ff86ea82704,105768997,0,0x0,8
tick,0x7ff86ea82704,105771296,0,0x0,8
tick,0x7ff86ea82704,105773007,0,0x0,8
tick,0x7ff86ea82704,105775097,0,0x0,8
tick,0x7ff86ea82704,105776898,0,0x0,8
tick,0x7ff86ea82704,105779063,0,0x0,8
tick,0x7ff86ea82704,105780977,0,0x0,8
tick,0x7ff86ea82704,105783162,0,0x0,8
tick,0x7ff86ea82704,105784965,0,0x0,8
tick,0x7ff86ea82704,105786954,0,0x0,8
tick,0x7ff86ea82704,105788870,0,0x0,8
tick,0x7ff86ea82704,105791106,0,0x0,8
tick,0x7ff86ea82704,105792918,0,0x0,8
tick,0x7ff86ea82704,105794960,0,0x0,8
tick,0x7ff86ea82704,105796891,0,0x0,8
tick,0x7ff86ea82704,105799149,0,0x0,8
tick,0x7ff86ea82704,105800983,0,0x0,8
tick,0x7ff86ea82704,105802943,0,0x0,8
tick,0x7ff86ea82704,105804884,0,0x0,8
tick,0x7ff86ea82704,105807069,0,0x0,8
tick,0x7ff86ea82704,105808833,0,0x0,8
tick,0x7ff86ea82704,105810936,0,0x0,8
tick,0x7ff86ea82704,105812781,0,0x0,8
tick,0x7ff86ea82704,105814898,0,0x0,8
tick,0x7ff86ea82704,105816885,0,0x0,8
tick,0x7ff86ea82704,105819073,0,0x0,8
tick,0x7ff86ea82704,105820836,0,0x0,8
tick,0x7ff86ea82704,105823277,0,0x0,8
tick,0x7ff86ea82704,105825293,0,0x0,8
tick,0x7ff86ea82704,105826989,0,0x0,8
tick,0x7ff86ea82704,105828844,0,0x0,8
tick,0x7ff86ea82704,105831524,0,0x0,8
tick,0x7ff86ea82704,105832871,0,0x0,8
tick,0x7ff86ea82704,105834818,0,0x0,8
tick,0x7ff86ea82704,105836850,0,0x0,8
tick,0x7ff86ea82704,105838826,0,0x0,8
tick,0x7ff86ea82704,105840811,0,0x0,8
tick,0x7ff86ea82704,105842881,0,0x0,8
tick,0x7ff86ea82704,105844745,0,0x0,8
tick,0x7ff86ea82704,105846881,0,0x0,8
tick,0x7ff86ea82704,105848875,0,0x0,8
tick,0x7ff86ea82704,105850774,0,0x0,8
tick,0x7ff86ea82704,105852842,0,0x0,8
tick,0x7ff86ea82704,105854779,0,0x0,8
tick,0x7ff86ea82704,105856751,0,0x0,8
tick,0x7ff86ea82704,105858770,0,0x0,8
tick,0x7ff86ea82704,105860712,0,0x0,8
tick,0x7ff86ea82704,105862781,0,0x0,8
tick,0x7ff86ea82704,105864610,0,0x0,8
tick,0x7ff86ea82704,105866729,0,0x0,8
tick,0x7ff86ea82704,105868705,0,0x0,8
tick,0x7ff86ea82704,105870660,0,0x0,8
tick,0x7ff86ea82704,105872687,0,0x0,8
tick,0x7ff86ea82704,105874687,0,0x0,8
tick,0x7ff86ea82704,105876647,0,0x0,8
tick,0x7ff86ea82704,105878701,0,0x0,8
tick,0x7ff86ea82704,105880743,0,0x0,8
tick,0x7ff86ea82704,105882628,0,0x0,8
tick,0x7ff86ea82704,105884684,0,0x0,8
tick,0x7ff86ea82704,105886735,0,0x0,8
tick,0x7ff86ea82704,105888599,0,0x0,8
tick,0x7ff86ea82704,105890760,0,0x0,8
tick,0x7ff86ea82704,105892758,0,0x0,8
tick,0x7ff86ea82704,105894763,0,0x0,8
tick,0x7ff86ea82704,105896610,0,0x0,8
tick,0x7ff86ea82704,105898708,0,0x0,8
tick,0x7ff86ea82704,105900609,0,0x0,8
tick,0x7ff86ea82704,105902696,0,0x0,8
tick,0x7ff86ea82704,105904596,0,0x0,8
tick,0x7ff86ea82704,105906545,0,0x0,8
tick,0x7ff86ea82704,105908621,0,0x0,8
tick,0x7ff86ea82704,105910671,0,0x0,8
tick,0x7ff86ea82704,105912600,0,0x0,8
tick,0x7ff86ea82704,105914513,0,0x0,8
tick,0x7ff86ea82704,105916612,0,0x0,8
tick,0x7ff86ea82704,105918538,0,0x0,8
tick,0x7ff86ea82704,105920688,0,0x0,8
tick,0x7ff86ea82704,105922509,0,0x0,8
tick,0x7ff86ea82704,105924560,0,0x0,8
tick,0x7ff86ea82704,105926557,0,0x0,8
tick,0x7ff86ea82704,105928617,0,0x0,8
tick,0x7ff86ea82704,105930557,0,0x0,8
tick,0x7ff86ea82704,105932604,0,0x0,8
tick,0x7ff86ea82704,105934553,0,0x0,8
tick,0x7ff86ea82704,105936518,0,0x0,8
tick,0x7ff86ea82704,105938536,0,0x0,8
tick,0x7ff86ea82704,105940474,0,0x0,8
tick,0x7ff86ea82704,105942492,0,0x0,8
tick,0x7ff86ea82704,105944498,0,0x0,8
tick,0x7ff86ea82704,105946531,0,0x0,8
tick,0x7ff86ea82704,105948561,0,0x0,8
tick,0x7ff86ea82704,105950525,0,0x0,8
tick,0x7ff86ea82704,105952460,0,0x0,8
tick,0x7ff86ea82704,105954554,0,0x0,8
tick,0x7ff86ea82704,105956435,0,0x0,8
tick,0x7ff86ea82704,105958539,0,0x0,8
tick,0x7ff86ea82704,105960443,0,0x0,8
tick,0x7ff86ea82704,105962469,0,0x0,8
tick,0x7ff86ea82704,105964481,0,0x0,8
tick,0x7ff86ea82704,105966449,0,0x0,8
tick,0x7ff86ea82704,105968455,0,0x0,8
tick,0x7ff86ea82704,105970417,0,0x0,8
tick,0x7ff86ea82704,105972626,0,0x0,8
tick,0x7ff86ea82704,105974632,0,0x0,8
tick,0x7ff86ea82704,105976601,0,0x0,8
tick,0x7ff86ea82704,105978591,0,0x0,8
tick,0x7ff86ea82704,105980713,0,0x0,8
tick,0x7ff86ea82704,105982508,0,0x0,8
tick,0x7ff86ea82704,105984440,0,0x0,8
tick,0x7ff86ea82704,105986452,0,0x0,8
tick,0x7ff86ea82704,105988383,0,0x0,8
tick,0x7ff86ea82704,105990494,0,0x0,8
tick,0x7ff86ea82704,105992628,0,0x0,8
tick,0x7ff86ea82704,105994713,0,0x0,8
tick,0x7ff86ea82704,105996694,0,0x0,8
tick,0x7ff86ea82704,105998498,0,0x0,8
tick,0x7ff86ea82704,106000775,0,0x0,8
tick,0x7ff86ea82704,106002319,0,0x0,8
tick,0x7ff86ea82704,106004976,0,0x0,8
tick,0x7ff86ea82704,106006350,0,0x0,8
tick,0x7ff86ea82704,106008417,0,0x0,8
tick,0x7ff86ea82704,106010349,0,0x0,8
tick,0x7ff86ea82704,106012223,0,0x0,8
tick,0x7ff86ea82704,106014728,0,0x0,8
tick,0x7ff86ea82704,106016459,0,0x0,8
tick,0x7ff86ea82704,106018482,0,0x0,8
tick,0x7ff86ea82704,106020239,0,0x0,8
tick,0x7ff86ea82704,106022344,0,0x0,8
tick,0x7ff86ea82704,106024268,0,0x0,8
tick,0x7ff86ea82704,106026426,0,0x0,8
tick,0x7ff86ea82704,106028280,0,0x0,8
tick,0x7ff86ea82704,106030309,0,0x0,8
tick,0x7ff86ea82704,106032246,0,0x0,8
tick,0x7ff86ea82704,106034262,0,0x0,8
tick,0x7ff86ea82704,106036289,0,0x0,8
tick,0x7ff86ea82704,106038241,0,0x0,8
tick,0x7ff86ea82704,106040287,0,0x0,8
tick,0x7ff86ea82704,106042303,0,0x0,8
tick,0x7ff86ea82704,106044317,0,0x0,8
tick,0x7ff86ea82704,106046117,0,0x0,8
tick,0x7ff86ea82704,106050903,0,0x0,8
tick,0x7ff86ea82704,106052293,0,0x0,8
tick,0x7ff86ea82704,106054495,0,0x0,8
tick,0x7ff86ea82704,106056277,0,0x0,8
tick,0x7ff86ea82704,106058418,0,0x0,8
tick,0x7ff86ea82704,106060189,0,0x0,8
tick,0x7ff86ea82704,106062416,0,0x0,8
tick,0x7ff86ea82704,106064326,0,0x0,8
tick,0x7ff86ea82704,106066290,0,0x0,8
tick,0x7ff86ea82704,106068252,0,0x0,8
tick,0x7ff86ea82704,106070289,0,0x0,8
tick,0x7ff86ea82704,106072167,0,0x0,8
tick,0x7ff86ea82704,106074236,0,0x0,8
tick,0x7ff86ea82704,106076300,0,0x0,8
tick,0x7ff86ea82704,106078257,0,0x0,8
tick,0x7ff86ea82704,106080307,0,0x0,8
tick,0x7ff86ea82704,106082271,0,0x0,8
tick,0x7ff86ea82704,106084241,0,0x0,8
tick,0x7ff86ea82704,106086229,0,0x0,8
tick,0x7ff86ea82704,106088208,0,0x0,8
tick,0x7ff86ea82704,106090140,0,0x0,8
tick,0x7ff86ea82704,106092212,0,0x0,8
tick,0x7ff86ea82704,106094185,0,0x0,8
tick,0x7ff86ea82704,106096253,0,0x0,8
tick,0x7ff86ea82704,106098158,0,0x0,8
tick,0x7ff86ea82704,106100262,0,0x0,8
tick,0x7ff86ea82704,106102148,0,0x0,8
tick,0x7ff86ea82704,106104224,0,0x0,8
tick,0x7ff86ea82704,106106135,0,0x0,8
tick,0x7ff86ea82704,106108167,0,0x0,8
tick,0x7ff86ea82704,106110212,0,0x0,8
tick,0x7ff86ea82704,106112187,0,0x0,8
tick,0x7ff86ea82704,106114249,0,0x0,8
tick,0x7ff86ea82704,106116319,0,0x0,8
tick,0x7ff86ea82704,106118296,0,0x0,8
tick,0x7ff86ea82704,106120193,0,0x0,8
tick,0x7ff86ea82704,106122250,0,0x0,8
tick,0x7ff86ea82704,106124236,0,0x0,8
tick,0x7ff86ea82704,106126203,0,0x0,8
tick,0x7ff86ea82704,106128163,0,0x0,8
tick,0x7ff86ea82704,106130120,0,0x0,8
tick,0x7ff86ea82704,106132194,0,0x0,8
tick,0x7ff86ea82704,106134154,0,0x0,8
tick,0x7ff86ea82704,106136179,0,0x0,8
tick,0x7ff86ea82704,106138240,0,0x0,8
tick,0x7ff86ea82704,106140124,0,0x0,8
tick,0x7ff86ea82704,106142228,0,0x0,8
tick,0x7ff86ea82704,106144126,0,0x0,8
tick,0x7ff86ea82704,106146050,0,0x0,8
tick,0x7ff86ea82704,106148100,0,0x0,8
tick,0x7ff86ea82704,106150235,0,0x0,8
tick,0x7ff86ea82704,106152069,0,0x0,8
tick,0x7ff86ea82704,106154078,0,0x0,8
tick,0x7ff86ea82704,106155993,0,0x0,8
tick,0x7ff86ea82704,106158116,0,0x0,8
tick,0x7ff86ea82704,106160024,0,0x0,8
tick,0x7ff86ea82704,106162187,0,0x0,8
tick,0x7ff86ea82704,106163967,0,0x0,8
tick,0x7ff86ea82704,106166176,0,0x0,8
tick,0x7ff86ea82704,106168167,0,0x0,8
tick,0x7ff86ea82704,106170066,0,0x0,8
tick,0x7ff86ea82704,106172131,0,0x0,8
tick,0x7ff86ea82704,106174093,0,0x0,8
tick,0x7ff86ea82704,106175992,0,0x0,8
tick,0x7ff86ea82704,106178136,0,0x0,8
tick,0x7ff86ea82704,106180054,0,0x0,8
tick,0x7ff86ea82704,106182087,0,0x0,8
tick,0x7ff86ea82704,106184154,0,0x0,8
tick,0x7ff86ea82704,106186110,0,0x0,8
tick,0x7ff86ea82704,106188079,0,0x0,8
tick,0x7ff86ea82704,106190013,0,0x0,8
tick,0x7ff86ea82704,106192063,0,0x0,8
tick,0x7ff86ea82704,106193955,0,0x0,8
tick,0x7ff86ea82704,106195997,0,0x0,8
tick,0x7ff86ea82704,106197954,0,0x0,8
tick,0x7ff86ea82704,106199977,0,0x0,8
tick,0x7ff86ea82704,106201958,0,0x0,8
tick,0x7ff86ea82704,106204082,0,0x0,8
tick,0x7ff86ea82704,106205869,0,0x0,8
tick,0x7ff86ea82704,106207947,0,0x0,8
tick,0x7ff86ea82704,106209918,0,0x0,8
tick,0x7ff86ea82704,106211933,0,0x0,8
tick,0x7ff86ea82704,106213794,0,0x0,8
tick,0x7ff86ea82704,106215891,0,0x0,8
tick,0x7ff86ea82704,106217871,0,0x0,8
tick,0x7ff86ea82704,106220032,0,0x0,8
tick,0x7ff86ea82704,106221704,0,0x0,8
tick,0x7ff86ea82704,106223880,0,0x0,8
tick,0x7ff86ea82704,106225814,0,0x0,8
tick,0x7ff86ea82704,106227966,0,0x0,8
tick,0x7ff86ea82704,106229779,0,0x0,8
tick,0x7ff86ea82704,106231952,0,0x0,8
tick,0x7ff86ea82704,106233817,0,0x0,8
tick,0x7ff86ea82704,106235832,0,0x0,8
tick,0x7ff86ea82704,106237714,0,0x0,8
tick,0x7ff86ea82704,106239801,0,0x0,8
tick,0x7ff86ea82704,106241850,0,0x0,8
tick,0x7ff86ea82704,106243827,0,0x0,8
tick,0x7ff86ea82704,106245783,0,0x0,8
tick,0x7ff86ea82704,106247856,0,0x0,8
tick,0x7ff86ea82704,106249728,0,0x0,8
tick,0x7ff86ea82704,106251851,0,0x0,8
tick,0x7ff86ea82704,106253737,0,0x0,8
tick,0x7ff86ea82704,106255782,0,0x0,8
tick,0x7ff86ea82704,106257807,0,0x0,8
tick,0x7ff86ea82704,106259755,0,0x0,8
tick,0x7ff86ea82704,106261683,0,0x0,8
tick,0x7ff86ea82704,106263672,0,0x0,8
tick,0x7ff86ea82704,106265797,0,0x0,8
tick,0x7ff86ea82704,106267623,0,0x0,8
tick,0x7ff86ea82704,106269800,0,0x0,8
tick,0x7ff86ea82704,106271661,0,0x0,8
tick,0x7ff86ea82704,106273727,0,0x0,8
tick,0x7ff86ea82704,106275766,0,0x0,8
tick,0x7ff86ea82704,106277613,0,0x0,8
tick,0x7ff86ea82704,106279627,0,0x0,8
tick,0x7ff86ea82704,106281732,0,0x0,8
tick,0x7ff86ea82704,106283767,0,0x0,8
tick,0x7ff86ea82704,106285724,0,0x0,8
tick,0x7ff86ea82704,106287691,0,0x0,8
tick,0x7ff86ea82704,106289664,0,0x0,8
tick,0x7ff86ea82704,106291622,0,0x0,8
tick,0x7ff86ea82704,106293570,0,0x0,8
tick,0x7ff86ea82704,106295745,0,0x0,8
tick,0x7ff86ea82704,106297735,0,0x0,8
tick,0x7ff86ea82704,106299529,0,0x0,8
tick,0x7ff86ea82704,106301806,0,0x0,8
tick,0x7ff86ea82704,106303674,0,0x0,8
tick,0x7ff86ea82704,106305683,0,0x0,8
tick,0x7ff86ea82704,106307655,0,0x0,8
tick,0x7ff86ea82704,106309575,0,0x0,8
tick,0x7ff86ea82704,106311602,0,0x0,8
tick,0x7ff86ea82704,106313577,0,0x0,8
tick,0x7ff86ea82704,106315766,0,0x0,8
tick,0x7ff86ea82704,106317722,0,0x0,8
tick,0x7ff86ea82704,106319456,0,0x0,8
tick,0x7ff86ea82704,106321711,0,0x0,8
tick,0x7ff86ea82704,106323550,0,0x0,8
tick,0x7ff86ea82704,106325612,0,0x0,8
tick,0x7ff86ea82704,106327650,0,0x0,8
tick,0x7ff86ea82704,106329680,0,0x0,8
tick,0x7ff86ea82704,106331615,0,0x0,8
tick,0x7ff86ea82704,106333683,0,0x0,8
tick,0x7ff86ea82704,106335999,0,0x0,8
tick,0x7ff86ea82704,106337505,0,0x0,8
tick,0x7ff86ea82704,106339590,0,0x0,8
tick,0x7ff86ea82704,106341573,0,0x0,8
tick,0x7ff86ea82704,106343702,0,0x0,8
tick,0x7ff86ea82704,106345579,0,0x0,8
tick,0x7ff86ea82704,106347633,0,0x0,8
tick,0x7ff86ea82704,106349665,0,0x0,8
tick,0x7ff86ea82704,106351676,0,0x0,8
tick,0x7ff86ea82704,106353841,0,0x0,8
tick,0x7ff86ea82704,106355773,0,0x0,8
tick,0x7ff86ea82704,106357850,0,0x0,8
tick,0x7ff86ea82704,106359620,0,0x0,8
tick,0x7ff86ea82704,106361604,0,0x0,8
tick,0x7ff86ea82704,106363563,0,0x0,8
tick,0x7ff86ea82704,106365924,0,0x0,8
tick,0x7ff86ea82704,106367435,0,0x0,8
tick,0x7ff86ea82704,106369599,0,0x0,8
tick,0x7ff86ea82704,106371368,0,0x0,8
tick,0x7ff86ea82704,106373449,0,0x0,8
tick,0x7ff86ea82704,106375556,0,0x0,8
tick,0x7ff86ea82704,106377716,0,0x0,8
tick,0x7ff86ea82704,106379559,0,0x0,8
tick,0x7ff86ea82704,106381463,0,0x0,8
tick,0x7ff86ea82704,106383433,0,0x0,8
tick,0x7ff86ea82704,106385307,0,0x0,8
tick,0x7ff86ea82704,106387406,0,0x0,8
tick,0x7ff86ea82704,106389386,0,0x0,8
tick,0x7ff86ea82704,106391479,0,0x0,8
tick,0x7ff86ea82704,106393425,0,0x0,8
tick,0x7ff86ea82704,106395380,0,0x0,8
tick,0x7ff86ea82704,106397357,0,0x0,8
tick,0x7ff86ea82704,106399335,0,0x0,8
tick,0x7ff86ea82704,106401328,0,0x0,8
tick,0x7ff86ea82704,106403496,0,0x0,8
tick,0x7ff86ea82704,106405442,0,0x0,8
tick,0x7ff86ea82704,106407521,0,0x0,8
tick,0x7ff86ea82704,106409417,0,0x0,8
tick,0x7ff86ea82704,106411360,0,0x0,8
tick,0x7ff86ea82704,106413392,0,0x0,8
tick,0x7ff86ea82704,106415631,0,0x0,8
tick,0x7ff86ea82704,106417695,0,0x0,8
tick,0x7ff86ea82704,106420050,0,0x0,8
tick,0x7ff86ea82704,106422131,0,0x0,8
tick,0x7ff86ea82704,106424293,0,0x0,8
tick,0x7ff86ea82704,106426085,0,0x0,8
tick,0x7ff86ea82704,106428145,0,0x0,8
tick,0x7ff86ea82704,106430094,0,0x0,8
tick,0x7ff86ea82704,106432697,0,0x0,8
tick,0x7ff86ea82704,106434079,0,0x0,8
tick,0x7ff86ea82704,106436105,0,0x0,8
tick,0x7ff86ea82704,106438040,0,0x0,8
tick,0x7ff86ea82704,106440598,0,0x0,8
tick,0x7ff86ea82704,106442013,0,0x0,8
tick,0x7ff86ea82704,106444046,0,0x0,8
tick,0x7ff86ea82704,106445987,0,0x0,8
tick,0x7ff86ea82704,106448140,0,0x0,8
tick,0x7ff86ea82704,106450015,0,0x0,8
tick,0x7ff86ea82704,106452037,0,0x0,8
tick,0x7ff86ea82704,106454129,0,0x0,8
tick,0x7ff86ea82704,106456058,0,0x0,8
tick,0x7ff86ea82704,106458040,0,0x0,8
tick,0x7ff86ea82704,106460029,0,0x0,8
tick,0x7ff86ea82704,106461993,0,0x0,8
tick,0x7ff86ea82704,106464042,0,0x0,8
tick,0x7ff86ea82704,106465976,0,0x0,8
tick,0x7ff86ea82704,106467933,0,0x0,8
tick,0x7ff86ea82704,106470008,0,0x0,8
tick,0x7ff86ea82704,106472003,0,0x0,8
tick,0x7ff86ea82704,106474174,0,0x0,8
tick,0x7ff86ea82704,106476074,0,0x0,8
tick,0x7ff86ea82704,106478080,0,0x0,8
tick,0x7ff86ea82704,106480173,0,0x0,8
tick,0x7ff86ea82704,106482100,0,0x0,8
tick,0x7ff86ea82704,106484206,0,0x0,8
tick,0x7ff86ea82704,106486185,0,0x0,8
tick,0x7ff86ea82704,106488056,0,0x0,8
tick,0x7ff86ea82704,106490141,0,0x0,8
tick,0x7ff86ea82704,106492108,0,0x0,8
tick,0x7ff86ea82704,106494285,0,0x0,8
tick,0x7ff86ea82704,106495995,0,0x0,8
tick,0x7ff86ea82704,106497954,0,0x0,8
tick,0x7ff86ea82704,106500087,0,0x0,8
tick,0x7ff86ea82704,106501900,0,0x0,8
tick,0x7ff86ea82704,106503986,0,0x0,8
tick,0x7ff86ea82704,106505932,0,0x0,8
tick,0x7ff86ea82704,106507840,0,0x0,8
tick,0x7ff86ea82704,106509894,0,0x0,8
tick,0x7ff86ea82704,106511840,0,0x0,8
tick,0x7ff86ea82704,106513836,0,0x0,8
tick,0x7ff86ea82704,106515921,0,0x0,8
tick,0x7ff86ea82704,106517899,0,0x0,8
tick,0x7ff86ea82704,106519925,0,0x0,8
tick,0x7ff86ea82704,106521837,0,0x0,8
tick,0x7ff86ea82704,106523960,0,0x0,8
tick,0x7ff86ea82704,106525860,0,0x0,8
tick,0x7ff86ea82704,106527855,0,0x0,8
tick,0x7ff86ea82704,106529874,0,0x0,8
tick,0x7ff86ea82704,106531899,0,0x0,8
tick,0x7ff86ea82704,106533834,0,0x0,8
tick,0x7ff86ea82704,106535859,0,0x0,8
tick,0x7ff86ea82704,106537852,0,0x0,8
tick,0x7ff86ea82704,106539813,0,0x0,8
tick,0x7ff86ea82704,106541901,0,0x0,8
tick,0x7ff86ea82704,106543983,0,0x0,8
tick,0x7ff86ea82704,106545912,0,0x0,8
tick,0x7ff86ea82704,106547783,0,0x0,8
tick,0x7ff86ea82704,106549805,0,0x0,8
tick,0x7ff86ea82704,106551814,0,0x0,8
tick,0x7ff86ea82704,106553861,0,0x0,8
tick,0x7ff86ea82704,106555817,0,0x0,8
tick,0x7ff86ea82704,106557897,0,0x0,8
tick,0x7ff86ea82704,106559762,0,0x0,8
tick,0x7ff86ea82704,106561815,0,0x0,8
tick,0x7ff86ea82704,106563901,0,0x0,8
tick,0x7ff86ea82704,106565778,0,0x0,8
tick,0x7ff86ea82704,106567818,0,0x0,8
tick,0x7ff86ea82704,106569733,0,0x0,8
tick,0x7ff86ea82704,106571765,0,0x0,8
tick,0x7ff86ea82704,106573764,0,0x0,8
tick,0x7ff86ea82704,106575722,0,0x0,8
tick,0x7ff86ea82704,106577874,0,0x0,8
tick,0x7ff86ea82704,106579757,0,0x0,8
tick,0x7ff86ea82704,106581764,0,0x0,8
tick,0x7ff86ea82704,106583706,0,0x0,8
tick,0x7ff86ea82704,106585736,0,0x0,8
tick,0x7ff86ea82704,106587707,0,0x0,8
tick,0x7ff86ea82704,106589673,0,0x0,8
tick,0x7ff86ea82704,106591773,0,0x0,8
tick,0x7ff86ea82704,106593666,0,0x0,8
tick,0x7ff86ea82704,106595690,0,0x0,8
tick,0x7ff86ea82704,106597874,0,0x0,8
tick,0x7ff86ea82704,106599733,0,0x0,8
tick,0x7ff86ea82704,106601638,0,0x0,8
tick,0x7ff86ea82704,106603740,0,0x0,8
tick,0x7ff86ea82704,106605637,0,0x0,8
tick,0x7ff86ea82704,106607720,0,0x0,8
tick,0x7ff86ea82704,106609810,0,0x0,8
tick,0x7ff86ea82704,106611608,0,0x0,8
tick,0x7ff86ea82704,106613753,0,0x0,8
tick,0x7ff86ea82704,106615798,0,0x0,8
tick,0x7ff86ea82704,106617706,0,0x0,8
tick,0x7ff86ea82704,106619721,0,0x0,8
tick,0x7ff86ea82704,106621679,0,0x0,8
tick,0x7ff86ea82704,106623618,0,0x0,8
tick,0x7ff86ea82704,106625718,0,0x0,8
tick,0x7ff86ea82704,106628187,0,0x0,8
tick,0x7ff86ea82704,106629563,0,0x0,8
tick,0x7ff86ea82704,106631706,0,0x0,8
tick,0x7ff86ea82704,106633876,0,0x0,8
tick,0x7ff86ea82704,106635569,0,0x0,8
tick,0x7ff86ea82704,106637728,0,0x0,8
tick,0x7ff86ea82704,106639617,0,0x0,8
tick,0x7ff86ea82704,106641750,0,0x0,8
tick,0x7ff86ea82704,106643772,0,0x0,8
tick,0x7ff86ea82704,106645692,0,0x0,8
tick,0x7ff86ea82704,106647738,0,0x0,8
tick,0x7ff86ea82704,106649940,0,0x0,8
tick,0x7ff86ea82704,106651575,0,0x0,8
tick,0x7ff86ea82704,106653670,0,0x0,8
tick,0x7ff86ea82704,106655634,0,0x0,8
tick,0x7ff86ea82704,106657527,0,0x0,8
tick,0x7ff86ea82704,106659532,0,0x0,8
tick,0x7ff86ea82704,106661475,0,0x0,8
tick,0x7ff86ea82704,106663584,0,0x0,8
tick,0x7ff86ea82704,106665527,0,0x0,8
tick,0x7ff86ea82704,106667498,0,0x0,8
tick,0x7ff86ea82704,106669573,0,0x0,8
tick,0x7ff86ea82704,106671681,0,0x0,8
tick,0x7ff86ea82704,106673425,0,0x0,8
tick,0x7ff86ea82704,106675428,0,0x0,8
tick,0x7ff86ea82704,106677478,0,0x0,8
tick,0x7ff86ea82704,106679815,0,0x0,8
tick,0x7ff86ea82704,106681645,0,0x0,8
tick,0x7ff86ea82704,106683424,0,0x0,8
tick,0x7ff86ea82704,106685433,0,0x0,8
tick,0x7ff86ea82704,106687471,0,0x0,8
tick,0x7ff86ea82704,106689429,0,0x0,8
tick,0x7ff86ea82704,106691476,0,0x0,8
tick,0x7ff86ea82704,106693423,0,0x0,8
tick,0x7ff86ea82704,106695439,0,0x0,8
tick,0x7ff86ea82704,106697351,0,0x0,8
tick,0x7ff86ea82704,106699505,0,0x0,8
tick,0x7ff86ea82704,106701355,0,0x0,8
tick,0x7ff86ea82704,106703441,0,0x0,8
tick,0x7ff86ea82704,106705354,0,0x0,8
tick,0x7ff86ea82704,106707342,0,0x0,8
tick,0x7ff86ea82704,106709394,0,0x0,8
tick,0x7ff86ea82704,106711351,0,0x0,8
tick,0x7ff86ea82704,106713383,0,0x0,8
tick,0x7ff86ea82704,106715326,0,0x0,8
tick,0x7ff86ea82704,106717392,0,0x0,8
tick,0x7ff86ea82704,106719485,0,0x0,8
tick,0x7ff86ea82704,106721344,0,0x0,8
tick,0x7ff86ea82704,106723276,0,0x0,8
tick,0x7ff86ea82704,106725395,0,0x0,8
tick,0x7ff86ea82704,106727463,0,0x0,8
tick,0x7ff86ea82704,106729352,0,0x0,8
tick,0x7ff86ea82704,106731425,0,0x0,8
tick,0x7ff86ea82704,106733355,0,0x0,8
tick,0x7ff86ea82704,106735408,0,0x0,8
tick,0x7ff86ea82704,106737299,0,0x0,8
tick,0x7ff86ea82704,106739291,0,0x0,8
tick,0x7ff86ea82704,106741345,0,0x0,8
tick,0x7ff86ea82704,106743280,0,0x0,8
tick,0x7ff86ea82704,106745332,0,0x0,8
tick,0x7ff86ea82704,106747220,0,0x0,8
tick,0x7ff86ea82704,106749554,0,0x0,8
tick,0x7ff86ea82704,106751287,0,0x0,8
tick,0x7ff86ea82704,106753218,0,0x0,8
tick,0x7ff86ea82704,106755230,0,0x0,8
tick,0x7ff86ea82704,106757305,0,0x0,8
tick,0x7ff86ea82704,106759190,0,0x0,8
tick,0x7ff86ea82704,106761196,0,0x0,8
tick,0x7ff86ea82704,106763314,0,0x0,8
tick,0x7ff86ea82704,106765236,0,0x0,8
tick,0x7ff86ea82704,106767315,0,0x0,8
tick,0x7ff86ea82704,106769243,0,0x0,8
tick,0x7ff86ea82704,106771287,0,0x0,8
tick,0x7ff86ea82704,106773358,0,0x0,8
tick,0x7ff86ea82704,106775258,0,0x0,8
tick,0x7ff86ea82704,106777176,0,0x0,8
tick,0x7ff86ea82704,106779182,0,0x0,8
tick,0x7ff86ea82704,106781183,0,0x0,8
tick,0x7ff86ea82704,106783263,0,0x0,8
tick,0x7ff86ea82704,106785569,0,0x0,8
tick,0x7ff86ea82704,106787317,0,0x0,8
tick,0x7ff86ea82704,106789349,0,0x0,8
tick,0x7ff86ea82704,106791487,0,0x0,8
tick,0x7ff86ea82704,106793275,0,0x0,8
tick,0x7ff86ea82704,106795219,0,0x0,8
tick,0x7ff86ea82704,106797211,0,0x0,8
tick,0x7ff86ea82704,106799358,0,0x0,8
tick,0x7ff86ea82704,106801512,0,0x0,8
tick,0x7ff86ea82704,106803312,0,0x0,8
tick,0x7ff86ea82704,106805215,0,0x0,8
tick,0x7ff86ea82704,106807297,0,0x0,8
tick,0x7ff86ea82704,106809259,0,0x0,8
tick,0x7ff86ea82704,106811268,0,0x0,8
tick,0x7ff86ea82704,106813106,0,0x0,8
tick,0x7ff86ea82704,106815312,0,0x0,8
tick,0x7ff86ea82704,106817101,0,0x0,8
tick,0x7ff86ea82704,106819192,0,0x0,8
tick,0x7ff86ea82704,106821087,0,0x0,8
tick,0x7ff86ea82704,106823206,0,0x0,8
tick,0x7ff86ea82704,106825144,0,0x0,8
tick,0x7ff86ea82704,106827163,0,0x0,8
tick,0x7ff86ea82704,106829134,0,0x0,8
tick,0x7ff86ea82704,106831216,0,0x0,8
tick,0x7ff86ea82704,106833090,0,0x0,8
tick,0x7ff86ea82704,106835236,0,0x0,8
tick,0x7ff86ea82704,106838670,0,0x0,8
tick,0x7ff86ea82704,106840419,0,0x0,8
tick,0x7ff86ea82704,106842616,0,0x0,8
tick,0x7ff86ea82704,106844812,0,0x0,8
tick,0x7ff86ea82704,106846676,0,0x0,8
tick,0x7ff86ea82704,106848776,0,0x0,8
tick,0x7ff86ea82704,106850264,0,0x0,8
tick,0x7ff86ea82704,106852373,0,0x0,8
tick,0x7ff86ea82704,106854428,0,0x0,8
tick,0x7ff86ea82704,106856374,0,0x0,8
tick,0x7ff86ea82704,106858242,0,0x0,8
tick,0x7ff86ea82704,106860199,0,0x0,8
tick,0x7ff86ea82704,106862508,0,0x0,8
tick,0x7ff86ea82704,106864326,0,0x0,8
tick,0x7ff86ea82704,106866509,0,0x0,8
tick,0x7ff86ea82704,106868322,0,0x0,8
tick,0x7ff86ea82704,106870449,0,0x0,8
tick,0x7ff86ea82704,106872101,0,0x0,8
tick,0x7ff86ea82704,106874370,0,0x0,8
tick,0x7ff86ea82704,106876134,0,0x0,8
tick,0x7ff86ea82704,106878343,0,0x0,8
tick,0x7ff86ea82704,106880219,0,0x0,8
tick,0x7ff86ea82704,106882247,0,0x0,8
tick,0x7ff86ea82704,106884070,0,0x0,8
tick,0x7ff86ea82704,106886017,0,0x0,8
tick,0x7ff86ea82704,106888147,0,0x0,8
tick,0x7ff86ea82704,106890136,0,0x0,8
tick,0x7ff86ea82704,106892173,0,0x0,8
tick,0x7ff86ea82704,106894213,0,0x0,8
tick,0x7ff86ea82704,106896161,0,0x0,8
tick,0x7ff86ea82704,106898058,0,0x0,8
tick,0x7ff86ea82704,106900355,0,0x0,8
tick,0x7ff86ea82704,106902105,0,0x0,8
tick,0x7ff86ea82704,106904161,0,0x0,8
tick,0x7ff86ea82704,106906162,0,0x0,8
tick,0x7ff86ea82704,106908108,0,0x0,8
tick,0x7ff86ea82704,106910025,0,0x0,8
tick,0x7ff86ea82704,106912103,0,0x0,8
tick,0x7ff86ea82704,106914106,0,0x0,8
tick,0x7ff86ea82704,106916104,0,0x0,8
tick,0x7ff86ea82704,106918128,0,0x0,8
tick,0x7ff86ea82704,106919971,0,0x0,8
tick,0x7ff86ea82704,106922008,0,0x0,8
tick,0x7ff86ea82704,106924022,0,0x0,8
tick,0x7ff86ea82704,106926099,0,0x0,8
tick,0x7ff86ea82704,106928332,0,0x0,8
tick,0x7ff86ea82704,106930279,0,0x0,8
tick,0x7ff86ea82704,106932159,0,0x0,8
tick,0x7ff86ea82704,106934492,0,0x0,8
tick,0x7ff86ea82704,106936320,0,0x0,8
tick,0x7ff86ea82704,106938004,0,0x0,8
tick,0x7ff86ea82704,106940126,0,0x0,8
tick,0x7ff86ea82704,106942064,0,0x0,8
tick,0x7ff86ea82704,106943981,0,0x0,8
tick,0x7ff86ea82704,106945900,0,0x0,8
tick,0x7ff86ea82704,106948461,0,0x0,8
tick,0x7ff86ea82704,106950166,0,0x0,8
tick,0x7ff86ea82704,106952027,0,0x0,8
tick,0x7ff86ea82704,106954016,0,0x0,8
tick,0x7ff86ea82704,106955845,0,0x0,8
tick,0x7ff86ea82704,106958042,0,0x0,8
tick,0x7ff86ea82704,106960068,0,0x0,8
tick,0x7ff86ea82704,106961965,0,0x0,8
tick,0x7ff86ea82704,106963960,0,0x0,8
tick,0x7ff86ea82704,106966043,0,0x0,8
tick,0x7ff86ea82704,106967972,0,0x0,8
tick,0x7ff86ea82704,106969943,0,0x0,8
tick,0x7ff86ea82704,106971910,0,0x0,8
tick,0x7ff86ea82704,106973867,0,0x0,8
tick,0x7ff86ea82704,106975956,0,0x0,8
tick,0x7ff86ea82704,106977818,0,0x0,8
tick,0x7ff86ea82704,106979806,0,0x0,8
tick,0x7ff86ea82704,106981963,0,0x0,8
tick,0x7ff86ea82704,106983930,0,0x0,8
tick,0x7ff86ea82704,106985811,0,0x0,8
tick,0x7ff86ea82704,106987833,0,0x0,8
tick,0x7ff86ea82704,106989802,0,0x0,8
tick,0x7ff86ea82704,106991936,0,0x0,8
tick,0x7ff86ea82704,106993857,0,0x0,8
tick,0x7ff86ea82704,106995933,0,0x0,8
tick,0x7ff86ea82704,106998028,0,0x0,8
tick,0x7ff86ea82704,106999955,0,0x0,8
tick,0x7ff86ea82704,107001838,0,0x0,8
tick,0x7ff86ea82704,107003801,0,0x0,8
tick,0x7ff86ea82704,107005838,0,0x0,8
tick,0x7ff86ea82704,107007975,0,0x0,8
tick,0x7ff86ea82704,107009836,0,0x0,8
tick,0x7ff86ea82704,107011843,0,0x0,8
tick,0x7ff86ea82704,107013814,0,0x0,8
tick,0x7ff86ea82704,107015721,0,0x0,8
tick,0x7ff86ea82704,107017859,0,0x0,8
tick,0x7ff86ea82704,107019787,0,0x0,8
tick,0x7ff86ea82704,107021749,0,0x0,8
tick,0x7ff86ea82704,107023668,0,0x0,8
tick,0x7ff86ea82704,107025751,0,0x0,8
tick,0x7ff86ea82704,107027785,0,0x0,8
tick,0x7ff86ea82704,107029660,0,0x0,8
tick,0x7ff86ea82704,107031839,0,0x0,8
tick,0x7ff86ea82704,107033848,0,0x0,8
tick,0x7ff86ea82704,107035758,0,0x0,8
tick,0x7ff86ea82704,107037664,0,0x0,8
tick,0x7ff86ea82704,107039712,0,0x0,8
tick,0x7ff86ea82704,107041677,0,0x0,8
tick,0x7ff86ea82704,107043698,0,0x0,8
tick,0x7ff86ea82704,107045634,0,0x0,8
tick,0x7ff86ea82704,107047768,0,0x0,8
tick,0x7ff86ea82704,107049632,0,0x0,8
tick,0x7ff86ea82704,107051718,0,0x0,8
tick,0x7ff86ea82704,107053586,0,0x0,8
tick,0x7ff86ea82704,107055627,0,0x0,8
tick,0x7ff86ea82704,107057545,0,0x0,8
tick,0x7ff86ea82704,107059633,0,0x0,8
tick,0x7ff86ea82704,107061595,0,0x0,8
tick,0x7ff86ea82704,107063695,0,0x0,8
tick,0x7ff86ea82704,107065608,0,0x0,8
tick,0x7ff86ea82704,107067732,0,0x0,8
tick,0x7ff86ea82704,107069655,0,0x0,8
tick,0x7ff86ea82704,107071547,0,0x0,8
tick,0x7ff86ea82704,107073666,0,0x0,8
tick,0x7ff86ea82704,107075527,0,0x0,8
tick,0x7ff86ea82704,107077624,0,0x0,8
tick,0x7ff86ea82704,107079498,0,0x0,8
tick,0x7ff86ea82704,107081549,0,0x0,8
tick,0x7ff86ea82704,107083504,0,0x0,8
tick,0x7ff86ea82704,107085590,0,0x0,8
tick,0x7ff86ea82704,107087653,0,0x0,8
tick,0x7ff86ea82704,107089498,0,0x0,8
tick,0x7ff86ea82704,107091573,0,0x0,8
tick,0x7ff86ea82704,107093469,0,0x0,8
tick,0x7ff86ea82704,107095603,0,0x0,8
tick,0x7ff86ea82704,107097502,0,0x0,8
tick,0x7ff86ea82704,107099556,0,0x0,8
tick,0x7ff86ea82704,107101400,0,0x0,8
tick,0x7ff86ea82704,107103928,0,0x0,8
tick,0x7ff86ea82704,107105715,0,0x0,8
tick,0x7ff86ea82704,107107582,0,0x0,8
tick,0x7ff86ea82704,107109423,0,0x0,8
tick,0x7ff86ea82704,107111602,0,0x0,8
tick,0x7ff86ea82704,107113478,0,0x0,8
tick,0x7ff86ea82704,107115482,0,0x0,8
tick,0x7ff86ea82704,107117436,0,0x0,8
tick,0x7ff86ea82704,107119631,0,0x0,8
tick,0x7ff86ea82704,107121468,0,0x0,8
tick,0x7ff86ea82704,107123551,0,0x0,8
tick,0x7ff86ea82704,107125583,0,0x0,8
tick,0x7ff86ea82704,107127688,0,0x0,8
tick,0x7ff86ea82704,107129571,0,0x0,8
tick,0x7ff86ea82704,107131505,0,0x0,8
tick,0x7ff86ea82704,107133487,0,0x0,8
tick,0x7ff86ea82704,107135466,0,0x0,8
tick,0x7ff86ea82704,107137454,0,0x0,8
tick,0x7ff86ea82704,107139517,0,0x0,8
tick,0x7ff86ea82704,107141662,0,0x0,8
tick,0x7ff86ea82704,107143723,0,0x0,8
tick,0x7ff86ea82704,107145550,0,0x0,8
tick,0x7ff86ea82704,107147445,0,0x0,8
tick,0x7ff86ea82704,107149938,0,0x0,8
tick,0x7ff86ea82704,107151440,0,0x0,8
tick,0x7ff86ea82704,107153339,0,0x0,8
tick,0x7ff86ea82704,107155348,0,0x0,8
tick,0x7ff86ea82704,107157386,0,0x0,8
tick,0x7ff86ea82704,107159330,0,0x0,8
tick,0x7ff86ea82704,107161512,0,0x0,8
tick,0x7ff86ea82704,107163397,0,0x0,8
tick,0x7ff86ea82704,107165393,0,0x0,8
tick,0x7ff86ea82704,107167579,0,0x0,8
tick,0x7ff86ea82704,107169539,0,0x0,8
tick,0x7ff86ea82704,107171566,0,0x0,8
tick,0x7ff86ea82704,107173471,0,0x0,8
tick,0x7ff86ea82704,107175681,0,0x0,8
tick,0x7ff86ea82704,107177307,0,0x0,8
tick,0x7ff86ea82704,107179493,0,0x0,8
tick,0x7ff86ea82704,107182114,0,0x0,8
tick,0x7ff86ea82704,107184103,0,0x0,8
tick,0x7ff86ea82704,107186067,0,0x0,8
tick,0x7ff86ea82704,107188457,0,0x0,8
tick,0x7ff86ea82704,107190040,0,0x0,8
tick,0x7ff86ea82704,107192099,0,0x0,8
tick,0x7ff86ea82704,107194010,0,0x0,8
tick,0x7ff86ea82704,107196076,0,0x0,8
tick,0x7ff86ea82704,107198114,0,0x0,8
tick,0x7ff86ea82704,107200093,0,0x0,8
tick,0x7ff86ea82704,107201996,0,0x0,8
tick,0x7ff86ea82704,107204038,0,0x0,8
tick,0x7ff86ea82704,107205988,0,0x0,8
tick,0x7ff86ea82704,107208031,0,0x0,8
tick,0x7ff86ea82704,107210029,0,0x0,8
tick,0x7ff86ea82704,107212055,0,0x0,8
tick,0x7ff86ea82704,107213995,0,0x0,8
tick,0x7ff86ea82704,107216074,0,0x0,8
tick,0x7ff86ea82704,107217929,0,0x0,8
tick,0x7ff86ea82704,107219988,0,0x0,8
tick,0x7ff86ea82704,107221910,0,0x0,8
tick,0x7ff86ea82704,107223936,0,0x0,8
tick,0x7ff86ea82704,107225978,0,0x0,8
tick,0x7ff86ea82704,107228414,0,0x0,8
tick,0x7ff86ea82704,107230025,0,0x0,8
tick,0x7ff86ea82704,107231903,0,0x0,8
tick,0x7ff86ea82704,107234003,0,0x0,8
tick,0x7ff86ea82704,107235903,0,0x0,8
tick,0x7ff86ea82704,107237919,0,0x0,8
tick,0x7ff86ea82704,107239895,0,0x0,8
tick,0x7ff86ea82704,107241916,0,0x0,8
tick,0x7ff86ea82704,107243896,0,0x0,8
tick,0x7ff86ea82704,107245944,0,0x0,8
tick,0x7ff86ea82704,107247956,0,0x0,8
tick,0x7ff86ea82704,107249915,0,0x0,8
tick,0x7ff86ea82704,107251857,0,0x0,8
tick,0x7ff86ea82704,107253892,0,0x0,8
tick,0x7ff86ea82704,107255861,0,0x0,8
tick,0x7ff86ea82704,107257869,0,0x0,8
tick,0x7ff86ea82704,107259845,0,0x0,8
tick,0x7ff86ea82704,107261957,0,0x0,8
tick,0x7ff86ea82704,107263839,0,0x0,8
tick,0x7ff86ea82704,107266004,0,0x0,8
tick,0x7ff86ea82704,107267806,0,0x0,8
tick,0x7ff86ea82704,107269979,0,0x0,8
tick,0x7ff86ea82704,107271857,0,0x0,8
tick,0x7ff86ea82704,107273873,0,0x0,8
tick,0x7ff86ea82704,107275800,0,0x0,8
tick,0x7ff86ea82704,107277817,0,0x0,8
tick,0x7ff86ea82704,107279904,0,0x0,8
tick,0x7ff86ea82704,107281850,0,0x0,8
tick,0x7ff86ea82704,107283871,0,0x0,8
tick,0x7ff86ea82704,107285963,0,0x0,8
tick,0x7ff86ea82704,107287971,0,0x0,8
tick,0x7ff86ea82704,107289897,0,0x0,8
tick,0x7ff86ea82704,107291948,0,0x0,8
tick,0x7ff86ea82704,107293890,0,0x0,8
tick,0x7ff86ea82704,107295829,0,0x0,8
tick,0x7ff86ea82704,107298061,0,0x0,8
tick,0x7ff86ea82704,107299812,0,0x0,8
tick,0x7ff86ea82704,107301859,0,0x0,8
tick,0x7ff86ea82704,107303793,0,0x0,8
tick,0x7ff86ea82704,107305806,0,0x0,8
tick,0x7ff86ea82704,107307795,0,0x0,8
tick,0x7ff86ea82704,107309756,0,0x0,8
tick,0x7ff86ea82704,107311781,0,0x0,8
tick,0x7ff86ea82704,107313770,0,0x0,8
tick,0x7ff86ea82704,107315828,0,0x0,8
tick,0x7ff86ea82704,107317845,0,0x0,8
tick,0x7ff86ea82704,107319874,0,0x0,8
tick,0x7ff86ea82704,107321820,0,0x0,8
tick,0x7ff86ea82704,107323742,0,0x0,8
tick,0x7ff86ea82704,107326046,0,0x0,8
tick,0x7ff86ea82704,107330679,0,0x0,8
tick,0x7ff86ea82704,107332819,0,0x0,8
tick,0x7ff86ea82704,107334784,0,0x0,8
tick,0x7ff86ea82704,107336718,0,0x0,8
tick,0x7ff86ea82704,107338732,0,0x0,8
tick,0x7ff86ea82704,107340780,0,0x0,8
tick,0x7ff86ea82704,107342702,0,0x0,8
tick,0x7ff86ea82704,107344723,0,0x0,8
tick,0x7ff86ea82704,107346894,0,0x0,8
tick,0x7ff86ea82704,107348805,0,0x0,8
tick,0x7ff86ea82704,107350779,0,0x0,8
tick,0x7ff86ea82704,107352685,0,0x0,8
tick,0x7ff86ea82704,107354738,0,0x0,8
tick,0x7ff86ea82704,107356606,0,0x0,8
tick,0x7ff86ea82704,107358681,0,0x0,8
tick,0x7ff86ea82704,107360593,0,0x0,8
tick,0x7ff86ea82704,107362805,0,0x0,8
tick,0x7ff86ea82704,107364779,0,0x0,8
tick,0x7ff86ea82704,107366656,0,0x0,8
tick,0x7ff86ea82704,107368625,0,0x0,8
tick,0x7ff86ea82704,107370575,0,0x0,8
tick,0x7ff86ea82704,107372618,0,0x0,8
tick,0x7ff86ea82704,107374621,0,0x0,8
tick,0x7ff86ea82704,107376847,0,0x0,8
tick,0x7ff86ea82704,107378746,0,0x0,8
tick,0x7ff86ea82704,107380648,0,0x0,8
tick,0x7ff86ea82704,107382863,0,0x0,8
tick,0x7ff86ea82704,107384606,0,0x0,8
tick,0x7ff86ea82704,107386628,0,0x0,8
tick,0x7ff86ea82704,107388609,0,0x0,8
tick,0x7ff86ea82704,107390493,0,0x0,8
tick,0x7ff86ea82704,107392555,0,0x0,8
tick,0x7ff86ea82704,107394624,0,0x0,8
tick,0x7ff86ea82704,107396722,0,0x0,8
tick,0x7ff86ea82704,107398553,0,0x0,8
tick,0x7ff86ea82704,107400612,0,0x0,8
tick,0x7ff86ea82704,107402536,0,0x0,8
tick,0x7ff86ea82704,107404604,0,0x0,8
tick,0x7ff86ea82704,107406490,0,0x0,8
tick,0x7ff86ea82704,107408542,0,0x0,8
tick,0x7ff86ea82704,107410413,0,0x0,8
tick,0x7ff86ea82704,107412681,0,0x0,8
tick,0x7ff86ea82704,107414520,0,0x0,8
tick,0x7ff86ea82704,107416727,0,0x0,8
tick,0x7ff86ea82704,107418454,0,0x0,8
tick,0x7ff86ea82704,107420559,0,0x0,8
tick,0x7ff86ea82704,107422451,0,0x0,8
tick,0x7ff86ea82704,107424613,0,0x0,8
tick,0x7ff86ea82704,107426403,0,0x0,8
tick,0x7ff86ea82704,107428658,0,0x0,8
tick,0x7ff86ea82704,107430387,0,0x0,8
tick,0x7ff86ea82704,107432530,0,0x0,8
tick,0x7ff86ea82704,107434506,0,0x0,8
tick,0x7ff86ea82704,107436503,0,0x0,8
tick,0x7ff86ea82704,107438405,0,0x0,8
tick,0x7ff86ea82704,107440510,0,0x0,8
tick,0x7ff86ea82704,107442355,0,0x0,8
tick,0x7ff86ea82704,107444464,0,0x0,8
tick,0x7ff86ea82704,107446610,0,0x0,8
tick,0x7ff86ea82704,107448515,0,0x0,8
tick,0x7ff86ea82704,107450383,0,0x0,8
tick,0x7ff86ea82704,107452517,0,0x0,8
tick,0x7ff86ea82704,107454421,0,0x0,8
tick,0x7ff86ea82704,107456500,0,0x0,8
tick,0x7ff86ea82704,107458385,0,0x0,8
tick,0x7ff86ea82704,107460390,0,0x0,8
tick,0x7ff86ea82704,107462318,0,0x0,8
tick,0x7ff86ea82704,107464958,0,0x0,8
tick,0x7ff86ea82704,107466353,0,0x0,8
tick,0x7ff86ea82704,107468402,0,0x0,8
tick,0x7ff86ea82704,107470399,0,0x0,8
tick,0x7ff86ea82704,107472570,0,0x0,8
tick,0x7ff86ea82704,107474369,0,0x0,8
tick,0x7ff86ea82704,107476313,0,0x0,8
tick,0x7ff86ea82704,107478404,0,0x0,8
tick,0x7ff86ea82704,107480539,0,0x0,8
tick,0x7ff86ea82704,107482461,0,0x0,8
tick,0x7ff86ea82704,107484925,0,0x0,8
tick,0x7ff86ea82704,107486537,0,0x0,8
tick,0x7ff86ea82704,107488861,0,0x0,8
tick,0x7ff86ea82704,107490357,0,0x0,8
tick,0x7ff86ea82704,107492598,0,0x0,8
tick,0x7ff86ea82704,107494455,0,0x0,8
tick,0x7ff86ea82704,107496401,0,0x0,8
tick,0x7ff86ea82704,107498362,0,0x0,8
tick,0x7ff86ea82704,107500300,0,0x0,8
tick,0x7ff86ea82704,107502339,0,0x0,8
tick,0x7ff86ea82704,107504236,0,0x0,8
tick,0x7ff86ea82704,107506467,0,0x0,8
tick,0x7ff86ea82704,107508442,0,0x0,8
tick,0x7ff86ea82704,107510342,0,0x0,8
tick,0x7ff86ea82704,107512205,0,0x0,8
tick,0x7ff86ea82704,107514393,0,0x0,8
tick,0x7ff86ea82704,107518317,0,0x0,8
tick,0x7ff86ea82704,107520426,0,0x0,8
tick,0x7ff86ea82704,107522330,0,0x0,8
tick,0x7ff86ea82704,107524484,0,0x0,8
tick,0x7ff86ea82704,107526269,0,0x0,8
tick,0x7ff86ea82704,107528186,0,0x0,8
tick,0x7ff86ea82704,107530244,0,0x0,8
tick,0x7ff86ea82704,107532184,0,0x0,8
tick,0x7ff86ea82704,107534330,0,0x0,8
tick,0x7ff86ea82704,107536479,0,0x0,8
tick,0x7ff86ea82704,107538314,0,0x0,8
tick,0x7ff86ea82704,107540383,0,0x0,8
tick,0x7ff86ea82704,107542331,0,0x0,8
tick,0x7ff86ea82704,107544239,0,0x0,8
tick,0x7ff86ea82704,107546096,0,0x0,8
tick,0x7ff86ea82704,107548318,0,0x0,8
tick,0x7ff86ea82704,107550258,0,0x0,8
tick,0x7ff86ea82704,107552206,0,0x0,8
tick,0x7ff86ea82704,107554459,0,0x0,8
tick,0x7ff86ea82704,107556360,0,0x0,8
tick,0x7ff86ea82704,107558356,0,0x0,8
tick,0x7ff86ea82704,107560208,0,0x0,8
tick,0x7ff86ea82704,107562244,0,0x0,8
tick,0x7ff86ea82704,107564531,0,0x0,8
tick,0x7ff86ea82704,107566501,0,0x0,8
tick,0x7ff86ea82704,107568227,0,0x0,8
tick,0x7ff86ea82704,107570225,0,0x0,8
tick,0x7ff86ea82704,107572102,0,0x0,8
tick,0x7ff86ea82704,107574259,0,0x0,8
tick,0x7ff86ea82704,107576245,0,0x0,8
tick,0x7ff86ea82704,107578341,0,0x0,8
tick,0x7ff86ea82704,107580499,0,0x0,8
tick,0x7ff86ea82704,107582192,0,0x0,8
tick,0x7ff86ea82704,107584204,0,0x0,8
tick,0x7ff86ea82704,107586181,0,0x0,8
tick,0x7ff86ea82704,107588100,0,0x0,8
tick,0x7ff86ea82704,107590214,0,0x0,8
tick,0x7ff86ea82704,107592177,0,0x0,8
tick,0x7ff86ea82704,107594283,0,0x0,8
tick,0x7ff86ea82704,107596207,0,0x0,8
tick,0x7ff86ea82704,107598229,0,0x0,8
tick,0x7ff86ea82704,107600056,0,0x0,8
tick,0x7ff86ea82704,107602113,0,0x0,8
tick,0x7ff86ea82704,107604153,0,0x0,8
tick,0x7ff86ea82704,107606181,0,0x0,8
tick,0x7ff86ea82704,107608125,0,0x0,8
tick,0x7ff86ea82704,107610194,0,0x0,8
tick,0x7ff86ea82704,107612003,0,0x0,8
tick,0x7ff86ea82704,107614346,0,0x0,8
tick,0x7ff86ea82704,107616111,0,0x0,8
tick,0x7ff86ea82704,107618022,0,0x0,8
tick,0x7ff86ea82704,107620196,0,0x0,8
tick,0x7ff86ea82704,107622224,0,0x0,8
tick,0x7ff86ea82704,107624133,0,0x0,8
tick,0x7ff86ea82704,107626049,0,0x0,8
tick,0x7ff86ea82704,107628036,0,0x0,8
tick,0x7ff86ea82704,107630015,0,0x0,8
tick,0x7ff86ea82704,107632051,0,0x0,8
tick,0x7ff86ea82704,107634057,0,0x0,8
tick,0x7ff86ea82704,107636008,0,0x0,8
tick,0x7ff86ea82704,107638092,0,0x0,8
tick,0x7ff86ea82704,107640099,0,0x0,8
tick,0x7ff86ea82704,107642199,0,0x0,8
tick,0x7ff86ea82704,107644144,0,0x0,8
tick,0x7ff86ea82704,107646135,0,0x0,8
tick,0x7ff86ea82704,107648087,0,0x0,8
tick,0x7ff86ea82704,107649989,0,0x0,8
tick,0x7ff86ea82704,107652090,0,0x0,8
tick,0x7ff86ea82704,107653933,0,0x0,8
tick,0x7ff86ea82704,107655915,0,0x0,8
tick,0x7ff86ea82704,107657966,0,0x0,8
tick,0x7ff86ea82704,107659954,0,0x0,8
tick,0x7ff86ea82704,107662063,0,0x0,8
tick,0x7ff86ea82704,107663912,0,0x0,8
tick,0x7ff86ea82704,107665894,0,0x0,8
tick,0x7ff86ea82704,107667910,0,0x0,8
tick,0x7ff86ea82704,107669918,0,0x0,8
tick,0x7ff86ea82704,107671856,0,0x0,8
tick,0x7ff86ea82704,107674014,0,0x0,8
tick,0x7ff86ea82704,107675825,0,0x0,8
tick,0x7ff86ea82704,107677983,0,0x0,8
tick,0x7ff86ea82704,107679900,0,0x0,8
tick,0x7ff86ea82704,107681944,0,0x0,8
tick,0x7ff86ea82704,107683931,0,0x0,8
tick,0x7ff86ea82704,107685901,0,0x0,8
tick,0x7ff86ea82704,107687946,0,0x0,8
tick,0x7ff86ea82704,107689812,0,0x0,8
tick,0x7ff86ea82704,107691966,0,0x0,8
tick,0x7ff86ea82704,107693769,0,0x0,8
tick,0x7ff86ea82704,107695822,0,0x0,8
tick,0x7ff86ea82704,107697869,0,0x0,8
tick,0x7ff86ea82704,107699868,0,0x0,8
tick,0x7ff86ea82704,107701731,0,0x0,8
tick,0x7ff86ea82704,107703918,0,0x0,8
tick,0x7ff86ea82704,107705822,0,0x0,8
tick,0x7ff86ea82704,107707762,0,0x0,8
tick,0x7ff86ea82704,107709846,0,0x0,8
tick,0x7ff86ea82704,107711786,0,0x0,8
tick,0x7ff86ea82704,107713869,0,0x0,8
tick,0x7ff86ea82704,107715871,0,0x0,8
tick,0x7ff86ea82704,107717878,0,0x0,8
tick,0x7ff86ea82704,107719793,0,0x0,8
tick,0x7ff86ea82704,107721809,0,0x0,8
tick,0x7ff86ea82704,107723691,0,0x0,8
tick,0x7ff86ea82704,107725856,0,0x0,8
tick,0x7ff86ea82704,107727666,0,0x0,8
tick,0x7ff86ea82704,107729807,0,0x0,8
tick,0x7ff86ea82704,107731796,0,0x0,8
tick,0x7ff86ea82704,107733691,0,0x0,8
tick,0x7ff86ea82704,107735796,0,0x0,8
tick,0x7ff86ea82704,107737643,0,0x0,8
tick,0x7ff86ea82704,107739744,0,0x0,8
tick,0x7ff86ea82704,107741765,0,0x0,8
tick,0x7ff86ea82704,107743695,0,0x0,8
tick,0x7ff86ea82704,107745685,0,0x0,8
tick,0x7ff86ea82704,107747757,0,0x0,8
tick,0x7ff86ea82704,107749668,0,0x0,8
tick,0x7ff86ea82704,107751638,0,0x0,8
tick,0x7ff86ea82704,107753710,0,0x0,8
tick,0x7ff86ea82704,107755672,0,0x0,8
tick,0x7ff86ea82704,107757658,0,0x0,8
tick,0x7ff86ea82704,107759707,0,0x0,8
tick,0x7ff86ea82704,107761579,0,0x0,8
tick,0x7ff86ea82704,107763692,0,0x0,8
tick,0x7ff86ea82704,107765743,0,0x0,8
tick,0x7ff86ea82704,107767765,0,0x0,8
tick,0x7ff86ea82704,107769603,0,0x0,8
tick,0x7ff86ea82704,107771620,0,0x0,8
tick,0x7ff86ea82704,107773673,0,0x0,8
tick,0x7ff86ea82704,107775543,0,0x0,8
tick,0x7ff86ea82704,107777698,0,0x0,8
tick,0x7ff86ea82704,107779680,0,0x0,8
tick,0x7ff86ea82704,107781631,0,0x0,8
tick,0x7ff86ea82704,107783618,0,0x0,8
tick,0x7ff86ea82704,107785549,0,0x0,8
tick,0x7ff86ea82704,107787678,0,0x0,8
tick,0x7ff86ea82704,107789747,0,0x0,8
tick,0x7ff86ea82704,107791621,0,0x0,8
tick,0x7ff86ea82704,107793571,0,0x0,8
tick,0x7ff86ea82704,107795747,0,0x0,8
tick,0x7ff86ea82704,107797671,0,0x0,8
tick,0x7ff86ea82704,107799722,0,0x0,8
tick,0x7ff86ea82704,107801683,0,0x0,8
tick,0x7ff86ea82704,107803911,0,0x0,8
tick,0x7ff86ea82704,107805626,0,0x0,8
tick,0x7ff86ea82704,107807449,0,0x0,8
tick,0x7ff86ea82704,107809661,0,0x0,8
tick,0x7ff86ea82704,107811657,0,0x0,8
tick,0x7ff86ea82704,107813496,0,0x0,8
tick,0x7ff86ea82704,107815561,0,0x0,8
tick,0x7ff86ea82704,107817612,0,0x0,8
tick,0x7ff86ea82704,107819339,0,0x0,8
tick,0x7ff86ea82704,107821561,0,0x0,8
tick,0x7ff86ea82704,107823545,0,0x0,8
tick,0x7ff86ea82704,107825438,0,0x0,8
tick,0x7ff86ea82704,107827565,0,0x0,8
tick,0x7ff86ea82704,107829430,0,0x0,8
tick,0x7ff86ea82704,107831524,0,0x0,8
tick,0x7ff86ea82704,107833432,0,0x0,8
tick,0x7ff86ea82704,107835582,0,0x0,8
tick,0x7ff86ea82704,107837433,0,0x0,8
tick,0x7ff86ea82704,107839662,0,0x0,8
tick,0x7ff86ea82704,107841600,0,0x0,8
tick,0x7ff86ea82704,107843464,0,0x0,8
tick,0x7ff86ea82704,107845554,0,0x0,8
tick,0x7ff86ea82704,107847406,0,0x0,8
tick,0x7ff86ea82704,107849463,0,0x0,8
tick,0x7ff86ea82704,107851503,0,0x0,8
tick,0x7ff86ea82704,107853542,0,0x0,8
tick,0x7ff86ea82704,107855408,0,0x0,8
tick,0x7ff86ea82704,107857364,0,0x0,8
tick,0x7ff86ea82704,107859495,0,0x0,8
tick,0x7ff86ea82704,107861433,0,0x0,8
tick,0x7ff86ea82704,107863411,0,0x0,8
tick,0x7ff86ea82704,107865378,0,0x0,8
tick,0x7ff86ea82704,107867527,0,0x0,8
tick,0x7ff86ea82704,107869281,0,0x0,8
tick,0x7ff86ea82704,107871451,0,0x0,8
tick,0x7ff86ea82704,107873289,0,0x0,8
tick,0x7ff86ea82704,107875469,0,0x0,8
tick,0x7ff86ea82704,107877435,0,0x0,8
tick,0x7ff86ea82704,107879413,0,0x0,8
tick,0x7ff86ea82704,107881485,0,0x0,8
tick,0x7ff86ea82704,107883348,0,0x0,8
tick,0x7ff86ea82704,107885415,0,0x0,8
tick,0x7ff86ea82704,107887380,0,0x0,8
tick,0x7ff86ea82704,107889258,0,0x0,8
tick,0x7ff86ea82704,107891268,0,0x0,8
tick,0x7ff86ea82704,107893335,0,0x0,8
tick,0x7ff86ea82704,107895230,0,0x0,8
tick,0x7ff86ea82704,107897487,0,0x0,8
tick,0x7ff86ea82704,107899426,0,0x0,8
tick,0x7ff86ea82704,107901357,0,0x0,8
tick,0x7ff86ea82704,107903161,0,0x0,8
tick,0x7ff86ea82704,107905335,0,0x0,8
tick,0x7ff86ea82704,107907349,0,0x0,8
tick,0x7ff86ea82704,107909335,0,0x0,8
tick,0x7ff86ea82704,107911226,0,0x0,8
tick,0x7ff86ea82704,107913358,0,0x0,8
tick,0x7ff86ea82704,107915161,0,0x0,8
tick,0x7ff86ea82704,107917276,0,0x0,8
tick,0x7ff86ea82704,107919210,0,0x0,8
tick,0x7ff86ea82704,107921205,0,0x0,8
tick,0x7ff86ea82704,107923289,0,0x0,8
tick,0x7ff86ea82704,107925173,0,0x0,8
tick,0x7ff86ea82704,107927257,0,0x0,8
tick,0x7ff86ea82704,107929329,0,0x0,8
tick,0x7ff86ea82704,107931601,0,0x0,8
tick,0x7ff86ea82704,107933403,0,0x0,8
tick,0x7ff86ea82704,107935395,0,0x0,8
tick,0x7ff86ea82704,107937405,0,0x0,8
tick,0x7ff86ea82704,107939563,0,0x0,8
tick,0x7ff86ea82704,107941363,0,0x0,8
tick,0x7ff86ea82704,107943287,0,0x0,8
tick,0x7ff86ea82704,107945259,0,0x0,8
tick,0x7ff86ea82704,107947383,0,0x0,8
tick,0x7ff86ea82704,107949544,0,0x0,8
tick,0x7ff86ea82704,107951137,0,0x0,8
tick,0x7ff86ea82704,107953118,0,0x0,8
tick,0x7ff86ea82704,107955196,0,0x0,8
tick,0x7ff86ea82704,107957141,0,0x0,8
tick,0x7ff86ea82704,107959239,0,0x0,8
tick,0x7ff86ea82704,107961196,0,0x0,8
tick,0x7ff86ea82704,107963335,0,0x0,8
tick,0x7ff86ea82704,107965176,0,0x0,8
tick,0x7ff86ea82704,107967057,0,0x0,8
tick,0x7ff86ea82704,107969362,0,0x0,8
tick,0x7ff86ea82704,107971064,0,0x0,8
tick,0x7ff86ea82704,107973232,0,0x0,8
tick,0x7ff86ea82704,107975326,0,0x0,8
tick,0x7ff86ea82704,107977157,0,0x0,8
tick,0x7ff86ea82704,107979087,0,0x0,8
tick,0x7ff86ea82704,107981653,0,0x0,8
tick,0x7ff86ea82704,107983554,0,0x0,8
tick,0x7ff86ea82704,107985057,0,0x0,8
tick,0x7ff86ea82704,107987177,0,0x0,8
tick,0x7ff86ea82704,107989142,0,0x0,8
tick,0x7ff86ea82704,107991231,0,0x0,8
tick,0x7ff86ea82704,107993253,0,0x0,8
tick,0x7ff86ea82704,107995152,0,0x0,8
tick,0x7ff86ea82704,107997323,0,0x0,8
tick,0x7ff86ea82704,107999757,0,0x0,8
tick,0x7ff86ea82704,108000982,0,0x0,8
tick,0x7ff86ea82704,108003101,0,0x0,8
tick,0x7ff86ea82704,108004919,0,0x0,8
tick,0x7ff86ea82704,108007055,0,0x0,8
tick,0x7ff86ea82704,108008922,0,0x0,8
tick,0x7ff86ea82704,108010948,0,0x0,8
tick,0x7ff86ea82704,108013005,0,0x0,8
tick,0x7ff86ea82704,108014966,0,0x0,8
tick,0x7ff86ea82704,108017009,0,0x0,8
tick,0x7ff86ea82704,108018871,0,0x0,8
tick,0x7ff86ea82704,108020870,0,0x0,8
tick,0x7ff86ea82704,108022931,0,0x0,8
tick,0x7ff86ea82704,108025063,0,0x0,8
tick,0x7ff86ea82704,108027036,0,0x0,8
tick,0x7ff86ea82704,108028955,0,0x0,8
tick,0x7ff86ea82704,108031316,0,0x0,8
tick,0x7ff86ea82704,108032824,0,0x0,8
tick,0x7ff86ea82704,108034941,0,0x0,8
tick,0x7ff86ea82704,108036944,0,0x0,8
tick,0x7ff86ea82704,108038927,0,0x0,8
tick,0x7ff86ea82704,108040820,0,0x0,8
tick,0x7ff86ea82704,108042832,0,0x0,8
tick,0x7ff86ea82704,108044922,0,0x0,8
tick,0x7ff86ea82704,108046906,0,0x0,8
tick,0x7ff86ea82704,108048880,0,0x0,8
tick,0x7ff86ea82704,108050976,0,0x0,8
tick,0x7ff86ea82704,108052774,0,0x0,8
tick,0x7ff86ea82704,108054883,0,0x0,8
tick,0x7ff86ea82704,108056743,0,0x0,8
tick,0x7ff86ea82704,108058825,0,0x0,8
tick,0x7ff86ea82704,108060792,0,0x0,8
tick,0x7ff86ea82704,108062780,0,0x0,8
tick,0x7ff86ea82704,108064901,0,0x0,8
tick,0x7ff86ea82704,108066820,0,0x0,8
tick,0x7ff86ea82704,108069085,0,0x0,8
tick,0x7ff86ea82704,108070985,0,0x0,8
tick,0x7ff86ea82704,108072826,0,0x0,8
tick,0x7ff86ea82704,108074792,0,0x0,8
tick,0x7ff86ea82704,108076866,0,0x0,8
tick,0x7ff86ea82704,108078831,0,0x0,8
tick,0x7ff86ea82704,108080877,0,0x0,8
tick,0x7ff86ea82704,108082735,0,0x0,8
tick,0x7ff86ea82704,108084937,0,0x0,8
tick,0x7ff86ea82704,108086724,0,0x0,8
tick,0x7ff86ea82704,108088804,0,0x0,8
tick,0x7ff86ea82704,108090839,0,0x0,8
tick,0x7ff86ea82704,108092855,0,0x0,8
tick,0x7ff86ea82704,108094846,0,0x0,8
tick,0x7ff86ea82704,108096933,0,0x0,8
tick,0x7ff86ea82704,108098878,0,0x0,8
tick,0x7ff86ea82704,108100802,0,0x0,8
tick,0x7ff86ea82704,108102889,0,0x0,8
tick,0x7ff86ea82704,108104798,0,0x0,8
tick,0x7ff86ea82704,108107003,0,0x0,8
tick,0x7ff86ea82704,108108689,0,0x0,8
tick,0x7ff86ea82704,108110768,0,0x0,8
tick,0x7ff86ea82704,108112799,0,0x0,8
tick,0x7ff86ea82704,108114757,0,0x0,8
tick,0x7ff86ea82704,108116871,0,0x0,8
tick,0x7ff86ea82704,108118745,0,0x0,8
tick,0x7ff86ea82704,108120765,0,0x0,8
tick,0x7ff86ea82704,108122728,0,0x0,8
tick,0x7ff86ea82704,108124860,0,0x0,8
tick,0x7ff86ea82704,108126741,0,0x0,8
tick,0x7ff86ea82704,108128852,0,0x0,8
tick,0x7ff86ea82704,108130986,0,0x0,8
tick,0x7ff86ea82704,108132766,0,0x0,8
tick,0x7ff86ea82704,108134730,0,0x0,8
tick,0x7ff86ea82704,108136731,0,0x0,8
tick,0x7ff86ea82704,108138864,0,0x0,8
tick,0x7ff86ea82704,108140829,0,0x0,8
tick,0x7ff86ea82704,108142573,0,0x0,8
tick,0x7ff86ea82704,108144731,0,0x0,8
tick,0x7ff86ea82704,108146672,0,0x0,8
tick,0x7ff86ea82704,108148719,0,0x0,8
tick,0x7ff86ea82704,108150612,0,0x0,8
tick,0x7ff86ea82704,108152636,0,0x0,8
tick,0x7ff86ea82704,108154629,0,0x0,8
tick,0x7ff86ea82704,108156661,0,0x0,8
tick,0x7ff86ea82704,108158655,0,0x0,8
tick,0x7ff86ea82704,108160668,0,0x0,8
tick,0x7ff86ea82704,108162847,0,0x0,8
tick,0x7ff86ea82704,108164642,0,0x0,8
tick,0x7ff86ea82704,108166718,0,0x0,8
tick,0x7ff86ea82704,108168801,0,0x0,8
tick,0x7ff86ea82704,108170655,0,0x0,8
tick,0x7ff86ea82704,108172530,0,0x0,8
tick,0x7ff86ea82704,108174687,0,0x0,8
tick,0x7ff86ea82704,108176573,0,0x0,8
tick,0x7ff86ea82704,108178547,0,0x0,8
tick,0x7ff86ea82704,108180659,0,0x0,8
tick,0x7ff86ea82704,108182512,0,0x0,8
tick,0x7ff86ea82704,108184506,0,0x0,8
tick,0x7ff86ea82704,108186473,0,0x0,8
tick,0x7ff86ea82704,108188607,0,0x0,8
tick,0x7ff86ea82704,108190433,0,0x0,8
tick,0x7ff86ea82704,108192610,0,0x0,8
tick,0x7ff86ea82704,108194526,0,0x0,8
tick,0x7ff86ea82704,108196722,0,0x0,8
tick,0x7ff86ea82704,108198612,0,0x0,8
tick,0x7ff86ea82704,108200735,0,0x0,8
tick,0x7ff86ea82704,108202621,0,0x0,8
tick,0x7ff86ea82704,108204533,0,0x0,8
tick,0x7ff86ea82704,108206708,0,0x0,8
tick,0x7ff86ea82704,108208712,0,0x0,8
tick,0x7ff86ea82704,108210462,0,0x0,8
tick,0x7ff86ea82704,108212504,0,0x0,8
tick,0x7ff86ea82704,108214553,0,0x0,8
tick,0x7ff86ea82704,108216532,0,0x0,8
tick,0x7ff86ea82704,108218474,0,0x0,8
tick,0x7ff86ea82704,108220550,0,0x0,8
tick,0x7ff86ea82704,108222505,0,0x0,8
tick,0x7ff86ea82704,108224431,0,0x0,8
tick,0x7ff86ea82704,108226418,0,0x0,8
tick,0x7ff86ea82704,108228632,0,0x0,8
tick,0x7ff86ea82704,108230551,0,0x0,8
tick,0x7ff86ea82704,108232725,0,0x0,8
tick,0x7ff86ea82704,108234443,0,0x0,8
tick,0x7ff86ea82704,108236448,0,0x0,8
tick,0x7ff86ea82704,108238423,0,0x0,8
tick,0x7ff86ea82704,108240293,0,0x0,8
tick,0x7ff86ea82704,108242466,0,0x0,8
tick,0x7ff86ea82704,108244345,0,0x0,8
tick,0x7ff86ea82704,108246438,0,0x0,8
tick,0x7ff86ea82704,108248437,0,0x0,8
tick,0x7ff86ea82704,108250425,0,0x0,8
tick,0x7ff86ea82704,108252315,0,0x0,8
tick,0x7ff86ea82704,108254355,0,0x0,8
tick,0x7ff86ea82704,108256424,0,0x0,8
tick,0x7ff86ea82704,108258388,0,0x0,8
tick,0x7ff86ea82704,108260325,0,0x0,8
tick,0x7ff86ea82704,108262298,0,0x0,8
tick,0x7ff86ea82704,108264202,0,0x0,8
tick,0x7ff86ea82704,108266312,0,0x0,8
tick,0x7ff86ea82704,108268269,0,0x0,8
tick,0x7ff86ea82704,108270359,0,0x0,8
tick,0x7ff86ea82704,108272179,0,0x0,8
tick,0x7ff86ea82704,108274340,0,0x0,8
tick,0x7ff86ea82704,108276233,0,0x0,8
tick,0x7ff86ea82704,108278375,0,0x0,8
tick,0x7ff86ea82704,108280391,0,0x0,8
tick,0x7ff86ea82704,108282198,0,0x0,8
tick,0x7ff86ea82704,108284306,0,0x0,8
tick,0x7ff86ea82704,108286251,0,0x0,8
tick,0x7ff86ea82704,108288363,0,0x0,8
tick,0x7ff86ea82704,108290234,0,0x0,8
tick,0x7ff86ea82704,108292390,0,0x0,8
tick,0x7ff86ea82704,108294209,0,0x0,8
tick,0x7ff86ea82704,108296665,0,0x0,8
tick,0x7ff86ea82704,108298336,0,0x0,8
tick,0x7ff86ea82704,108300352,0,0x0,8
tick,0x7ff86ea82704,108302173,0,0x0,8
tick,0x7ff86ea82704,108304219,0,0x0,8
tick,0x7ff86ea82704,108306253,0,0x0,8
tick,0x7ff86ea82704,108308339,0,0x0,8
tick,0x7ff86ea82704,108310207,0,0x0,8
tick,0x7ff86ea82704,108312084,0,0x0,8
tick,0x7ff86ea82704,108314282,0,0x0,8
tick,0x7ff86ea82704,108316089,0,0x0,8
tick,0x7ff86ea82704,108318289,0,0x0,8
tick,0x7ff86ea82704,108320352,0,0x0,8
tick,0x7ff86ea82704,108322336,0,0x0,8
tick,0x7ff86ea82704,108324166,0,0x0,8
tick,0x7ff86ea82704,108326390,0,0x0,8
tick,0x7ff86ea82704,108328085,0,0x0,8
tick,0x7ff86ea82704,108330151,0,0x0,8
tick,0x7ff86ea82704,108332277,0,0x0,8
tick,0x7ff86ea82704,108334121,0,0x0,8
tick,0x7ff86ea82704,108336360,0,0x0,8
tick,0x7ff86ea82704,108338093,0,0x0,8
tick,0x7ff86ea82704,108340248,0,0x0,8
tick,0x7ff86ea82704,108342413,0,0x0,8
tick,0x7ff86ea82704,108344157,0,0x0,8
tick,0x7ff86ea82704,108346189,0,0x0,8
tick,0x7ff86ea82704,108348191,0,0x0,8
tick,0x7ff86ea82704,108350297,0,0x0,8
tick,0x7ff86ea82704,108352195,0,0x0,8
tick,0x7ff86ea82704,108354326,0,0x0,8
tick,0x7ff86ea82704,108355973,0,0x0,8
tick,0x7ff86ea82704,108358122,0,0x0,8
tick,0x7ff86ea82704,108360089,0,0x0,8
tick,0x7ff86ea82704,108362118,0,0x0,8
tick,0x7ff86ea82704,108364167,0,0x0,8
tick,0x7ff86ea82704,108366109,0,0x0,8
tick,0x7ff86ea82704,108368082,0,0x0,8
tick,0x7ff86ea82704,108370216,0,0x0,8
tick,0x7ff86ea82704,108372195,0,0x0,8
tick,0x7ff86ea82704,108374141,0,0x0,8
tick,0x7ff86ea82704,108376063,0,0x0,8
tick,0x7ff86ea82704,108378091,0,0x0,8
tick,0x7ff86ea82704,108380437,0,0x0,8
tick,0x7ff86ea82704,108382228,0,0x0,8
tick,0x7ff86ea82704,108383863,0,0x0,8
tick,0x7ff86ea82704,108386012,0,0x0,8
tick,0x7ff86ea82704,108387899,0,0x0,8
tick,0x7ff86ea82704,108389938,0,0x0,8
tick,0x7ff86ea82704,108391931,0,0x0,8
tick,0x7ff86ea82704,108394082,0,0x0,8
tick,0x7ff86ea82704,108396022,0,0x0,8
tick,0x7ff86ea82704,108398087,0,0x0,8
tick,0x7ff86ea82704,108399885,0,0x0,8
tick,0x7ff86ea82704,108402003,0,0x0,8
tick,0x7ff86ea82704,108403855,0,0x0,8
tick,0x7ff86ea82704,108405972,0,0x0,8
tick,0x7ff86ea82704,108407887,0,0x0,8
tick,0x7ff86ea82704,108409961,0,0x0,8
tick,0x7ff86ea82704,108411911,0,0x0,8
tick,0x7ff86ea82704,108413879,0,0x0,8
tick,0x7ff86ea82704,108415911,0,0x0,8
tick,0x7ff86ea82704,108417923,0,0x0,8
tick,0x7ff86ea82704,108419747,0,0x0,8
tick,0x7ff86ea82704,108421899,0,0x0,8
tick,0x7ff86ea82704,108423861,0,0x0,8
tick,0x7ff86ea82704,108426033,0,0x0,8
tick,0x7ff86ea82704,108428205,0,0x0,8
tick,0x7ff86ea82704,108429986,0,0x0,8
tick,0x7ff86ea82704,108431952,0,0x0,8
tick,0x7ff86ea82704,108433811,0,0x0,8
tick,0x7ff86ea82704,108435866,0,0x0,8
tick,0x7ff86ea82704,108437809,0,0x0,8
tick,0x7ff86ea82704,108439827,0,0x0,8
tick,0x7ff86ea82704,108442044,0,0x0,8
tick,0x7ff86ea82704,108443790,0,0x0,8
tick,0x7ff86ea82704,108445899,0,0x0,8
tick,0x7ff86ea82704,108448093,0,0x0,8
tick,0x7ff86ea82704,108449856,0,0x0,8
tick,0x7ff86ea82704,108451897,0,0x0,8
tick,0x7ff86ea82704,108454100,0,0x0,8
tick,0x7ff86ea82704,108455879,0,0x0,8
tick,0x7ff86ea82704,108457914,0,0x0,8
tick,0x7ff86ea82704,108460162,0,0x0,8
tick,0x7ff86ea82704,108461752,0,0x0,8
tick,0x7ff86ea82704,108463944,0,0x0,8
tick,0x7ff86ea82704,108465842,0,0x0,8
tick,0x7ff86ea82704,108468119,0,0x0,8
tick,0x7ff86ea82704,108470004,0,0x0,8
tick,0x7ff86ea82704,108471867,0,0x0,8
tick,0x7ff86ea82704,108473804,0,0x0,8
tick,0x7ff86ea82704,108476215,0,0x0,8
tick,0x7ff86ea82704,108477834,0,0x0,8
tick,0x7ff86ea82704,108480003,0,0x0,8
tick,0x7ff86ea82704,108482003,0,0x0,8
tick,0x7ff86ea82704,108484525,0,0x0,8
tick,0x7ff86ea82704,108487317,0,0x0,8
tick,0x7ff86ea82704,108488843,0,0x0,8
tick,0x7ff86ea82704,108491167,0,0x0,8
tick,0x7ff86ea82704,108495455,0,0x0,8
tick,0x7ff86ea82704,108496112,0,0x0,8
tick,0x7ff86ea82704,108498305,0,0x0,8
tick,0x7ff86ea82704,108500310,0,0x0,8
tick,0x7ff86ea82704,108502073,0,0x0,8
tick,0x7ff86ea82704,108504104,0,0x0,8
tick,0x7ff86ea82704,108506061,0,0x0,8
tick,0x7ff86ea82704,108508193,0,0x0,8
tick,0x7ff86ea82704,108509755,0,0x0,8
tick,0x7ff86ea82704,108511978,0,0x0,8
tick,0x7ff86ea82704,108513756,0,0x0,8
tick,0x7ff86ea82704,108515973,0,0x0,8
tick,0x7ff86ea82704,108517834,0,0x0,8
tick,0x7ff86ea82704,108519727,0,0x0,8
tick,0x7ff86ea82704,108521754,0,0x0,8
tick,0x7ff86ea82704,108523747,0,0x0,8
tick,0x7ff86ea82704,108525695,0,0x0,8
tick,0x7ff86ea82704,108527636,0,0x0,8
tick,0x7ff86ea82704,108529921,0,0x0,8
tick,0x7ff86ea82704,108531808,0,0x0,8
tick,0x7ff86ea82704,108534015,0,0x0,8
tick,0x7ff86ea82704,108535703,0,0x0,8
tick,0x7ff86ea82704,108537719,0,0x0,8
tick,0x7ff86ea82704,108539956,0,0x0,8
tick,0x7ff86ea82704,108541941,0,0x0,8
tick,0x7ff86ea82704,108543673,0,0x0,8
tick,0x7ff86ea82704,108546003,0,0x0,8
tick,0x7ff86ea82704,108547781,0,0x0,8
tick,0x7ff86ea82704,108549822,0,0x0,8
tick,0x7ff86ea82704,108552810,0,0x0,8
tick,0x7ff86ea82704,108553705,0,0x0,8
tick,0x7ff86ea82704,108556070,0,0x0,8
tick,0x7ff86ea82704,108557688,0,0x0,8
tick,0x7ff86ea82704,108559611,0,0x0,8
tick,0x7ff86ea82704,108561744,0,0x0,8
tick,0x7ff86ea82704,108563726,0,0x0,8
tick,0x7ff86ea82704,108566189,0,0x0,8
tick,0x7ff86ea82704,108567801,0,0x0,8
tick,0x7ff86ea82704,108569670,0,0x0,8
tick,0x7ff86ea82704,108571550,0,0x0,8
tick,0x7ff86ea82704,108573698,0,0x0,8
tick,0x7ff86ea82704,108575504,0,0x0,8
tick,0x7ff86ea82704,108577572,0,0x0,8
tick,0x7ff86ea82704,108579816,0,0x0,8
tick,0x7ff86ea82704,108581701,0,0x0,8
tick,0x7ff86ea82704,108583597,0,0x0,8
tick,0x7ff86ea82704,108585488,0,0x0,8
tick,0x7ff86ea82704,108587682,0,0x0,8
tick,0x7ff86ea82704,108589545,0,0x0,8
tick,0x7ff86ea82704,108591507,0,0x0,8
tick,0x7ff86ea82704,108593756,0,0x0,8
tick,0x7ff86ea82704,108596134,0,0x0,8
tick,0x7ff86ea82704,108597754,0,0x0,8
tick,0x7ff86ea82704,108599359,0,0x0,8
tick,0x7ff86ea82704,108601606,0,0x0,8
tick,0x7ff86ea82704,108603579,0,0x0,8
tick,0x7ff86ea82704,108605459,0,0x0,8
tick,0x7ff86ea82704,108607800,0,0x0,8
tick,0x7ff86ea82704,108609542,0,0x0,8
tick,0x7ff86ea82704,108611530,0,0x0,8
tick,0x7ff86ea82704,108613461,0,0x0,8
tick,0x7ff86ea82704,108615407,0,0x0,8
tick,0x7ff86ea82704,108619381,0,0x0,8
tick,0x7ff86ea82704,108621271,0,0x0,8
tick,0x7ff86ea82704,108623217,0,0x0,8
tick,0x7ff86ea82704,108625228,0,0x0,8
tick,0x7ff86ea82704,108629734,0,0x0,8
tick,0x7ff86ea82704,108631820,0,0x0,8
tick,0x7ff86ea82704,108633933,0,0x0,8
tick,0x7ff86ea82704,108633952,0,0x0,8
tick,0x7ff86ea82704,108635627,0,0x0,8
tick,0x7ff86ea82704,108637551,0,0x0,8
tick,0x7ff86ea82704,108639480,0,0x0,8
tick,0x7ff86ea82704,108641759,0,0x0,8
tick,0x7ff86ea82704,108644337,0,0x0,8
tick,0x7ff86ea82704,108646717,0,0x0,8
tick,0x7ff86ea82704,108649317,0,0x0,8
tick,0x7ff86ea82704,108650652,0,0x0,8
tick,0x7ff86ea82704,108653383,0,0x0,8
tick,0x7ff86ea82704,108655829,0,0x0,8
tick,0x7ff86ea82704,108657612,0,0x0,8
tick,0x7ff86ea82704,108659531,0,0x0,8
tick,0x7ff86ea82704,108661627,0,0x0,8
tick,0x7ff86ea82704,108663223,0,0x0,8
tick,0x7ff86ea82704,108665992,0,0x0,8
tick,0x7ff86ea82704,108667674,0,0x0,8
tick,0x7ff86ea82704,108669553,0,0x0,8
tick,0x7ff86ea82704,108671628,0,0x0,8
tick,0x7ff86ea82704,108673575,0,0x0,8
tick,0x7ff86ea82704,108675489,0,0x0,8
tick,0x7ff86ea82704,108677428,0,0x0,8
tick,0x7ff86ea82704,108679698,0,0x0,8
tick,0x7ff86ea82704,108681597,0,0x0,8
tick,0x7ff86ea82704,108683416,0,0x0,8
tick,0x7ff86ea82704,108685452,0,0x0,8
tick,0x7ff86ea82704,108687235,0,0x0,8
tick,0x7ff86ea82704,108689329,0,0x0,8
tick,0x7ff86ea82704,108691277,0,0x0,8
tick,0x7ff86ea82704,108693307,0,0x0,8
tick,0x7ff86ea82704,108695238,0,0x0,8
tick,0x7ff86ea82704,108697416,0,0x0,8
tick,0x7ff86ea82704,108699649,0,0x0,8
tick,0x7ff86ea82704,108701563,0,0x0,8
tick,0x7ff86ea82704,108703522,0,0x0,8
tick,0x7ff86ea82704,108705669,0,0x0,8
tick,0x7ff86ea82704,108707686,0,0x0,8
tick,0x7ff86ea82704,108709730,0,0x0,8
tick,0x7ff86ea82704,108711412,0,0x0,8
tick,0x7ff86ea82704,108713618,0,0x0,8
tick,0x7ff86ea82704,108715633,0,0x0,8
tick,0x7ff86ea82704,108718133,0,0x0,8
tick,0x7ff86ea82704,108720227,0,0x0,8
tick,0x7ff86ea82704,108722245,0,0x0,8
tick,0x7ff86ea82704,108724386,0,0x0,8
tick,0x7ff86ea82704,108726159,0,0x0,8
tick,0x7ff86ea82704,108728096,0,0x0,8
tick,0x7ff86ea82704,108729956,0,0x0,8
tick,0x7ff86ea82704,108732385,0,0x0,8
tick,0x7ff86ea82704,108734019,0,0x0,8
tick,0x7ff86ea82704,108736192,0,0x0,8
tick,0x7ff86ea82704,108737985,0,0x0,8
tick,0x7ff86ea82704,108740132,0,0x0,8
tick,0x7ff86ea82704,108741966,0,0x0,8
tick,0x7ff86ea82704,108744035,0,0x0,8
tick,0x7ff86ea82704,108745962,0,0x0,8
tick,0x7ff86ea82704,108748021,0,0x0,8
tick,0x7ff86ea82704,108749866,0,0x0,8
tick,0x7ff86ea82704,108752206,0,0x0,8
tick,0x7ff86ea82704,108753959,0,0x0,8
tick,0x7ff86ea82704,108756001,0,0x0,8
tick,0x7ff86ea82704,108757937,0,0x0,8
tick,0x7ff86ea82704,108759963,0,0x0,8
tick,0x7ff86ea82704,108761874,0,0x0,8
tick,0x7ff86ea82704,108763934,0,0x0,8
tick,0x7ff86ea82704,108765915,0,0x0,8
tick,0x7ff86ea82704,108768033,0,0x0,8
tick,0x7ff86ea82704,108769940,0,0x0,8
tick,0x7ff86ea82704,108771957,0,0x0,8
tick,0x7ff86ea82704,108773921,0,0x0,8
tick,0x7ff86ea82704,108776003,0,0x0,8
tick,0x7ff86ea82704,108777856,0,0x0,8
tick,0x7ff86ea82704,108779971,0,0x0,8
tick,0x7ff86ea82704,108781799,0,0x0,8
tick,0x7ff86ea82704,108783979,0,0x0,8
tick,0x7ff86ea82704,108786062,0,0x0,8
tick,0x7ff86ea82704,108787868,0,0x0,8
tick,0x7ff86ea82704,108789936,0,0x0,8
tick,0x7ff86ea82704,108791890,0,0x0,8
tick,0x7ff86ea82704,108793909,0,0x0,8
tick,0x7ff86ea82704,108796078,0,0x0,8
tick,0x7ff86ea82704,108798312,0,0x0,8
tick,0x7ff86ea82704,108800117,0,0x0,8
tick,0x7ff86ea82704,108801766,0,0x0,8
tick,0x7ff86ea82704,108803968,0,0x0,8
tick,0x7ff86ea82704,108806108,0,0x0,8
tick,0x7ff86ea82704,108807767,0,0x0,8
tick,0x7ff86ea82704,108809983,0,0x0,8
tick,0x7ff86ea82704,108811848,0,0x0,8
tick,0x7ff86ea82704,108813993,0,0x0,8
tick,0x7ff86ea82704,108816016,0,0x0,8
tick,0x7ff86ea82704,108817877,0,0x0,8
tick,0x7ff86ea82704,108819905,0,0x0,8
tick,0x7ff86ea82704,108821977,0,0x0,8
tick,0x7ff86ea82704,108823975,0,0x0,8
tick,0x7ff86ea82704,108825757,0,0x0,8
tick,0x7ff86ea82704,108827859,0,0x0,8
tick,0x7ff86ea82704,108829856,0,0x0,8
tick,0x7ff86ea82704,108831737,0,0x0,8
tick,0x7ff86ea82704,108833786,0,0x0,8
tick,0x7ff86ea82704,108835772,0,0x0,8
tick,0x7ff86ea82704,108837760,0,0x0,8
tick,0x7ff86ea82704,108839832,0,0x0,8
tick,0x7ff86ea82704,108841765,0,0x0,8
tick,0x7ff86ea82704,108843712,0,0x0,8
tick,0x7ff86ea82704,108845817,0,0x0,8
tick,0x7ff86ea82704,108847784,0,0x0,8
tick,0x7ff86ea82704,108849807,0,0x0,8
tick,0x7ff86ea82704,108851761,0,0x0,8
tick,0x7ff86ea82704,108853793,0,0x0,8
tick,0x7ff86ea82704,108855726,0,0x0,8
tick,0x7ff86ea82704,108857759,0,0x0,8
tick,0x7ff86ea82704,108859692,0,0x0,8
tick,0x7ff86ea82704,108861992,0,0x0,8
tick,0x7ff86ea82704,108863763,0,0x0,8
tick,0x7ff86ea82704,108865687,0,0x0,8
tick,0x7ff86ea82704,108867701,0,0x0,8
tick,0x7ff86ea82704,108869768,0,0x0,8
tick,0x7ff86ea82704,108871844,0,0x0,8
tick,0x7ff86ea82704,108873817,0,0x0,8
tick,0x7ff86ea82704,108875878,0,0x0,8
tick,0x7ff86ea82704,108877564,0,0x0,8
tick,0x7ff86ea82704,108879808,0,0x0,8
tick,0x7ff86ea82704,108881682,0,0x0,8
tick,0x7ff86ea82704,108883624,0,0x0,8
tick,0x7ff86ea82704,108885558,0,0x0,8
tick,0x7ff86ea82704,108887998,0,0x0,8
tick,0x7ff86ea82704,108889817,0,0x0,8
tick,0x7ff86ea82704,108892010,0,0x0,8
tick,0x7ff86ea82704,108893720,0,0x0,8
tick,0x7ff86ea82704,108895761,0,0x0,8
tick,0x7ff86ea82704,108897459,0,0x0,8
tick,0x7ff86ea82704,108899601,0,0x0,8
tick,0x7ff86ea82704,108901505,0,0x0,8
tick,0x7ff86ea82704,108903737,0,0x0,8
tick,0x7ff86ea82704,108905550,0,0x0,8
tick,0x7ff86ea82704,108907743,0,0x0,8
tick,0x7ff86ea82704,108909712,0,0x0,8
tick,0x7ff86ea82704,108911591,0,0x0,8
tick,0x7ff86ea82704,108913573,0,0x0,8
tick,0x7ff86ea82704,108915637,0,0x0,8
tick,0x7ff86ea82704,108917660,0,0x0,8
tick,0x7ff86ea82704,108919580,0,0x0,8
tick,0x7ff86ea82704,108921532,0,0x0,8
tick,0x7ff86ea82704,108923611,0,0x0,8
tick,0x7ff86ea82704,108925558,0,0x0,8
tick,0x7ff86ea82704,108927658,0,0x0,8
tick,0x7ff86ea82704,108929723,0,0x0,8
tick,0x7ff86ea82704,108931612,0,0x0,8
tick,0x7ff86ea82704,108933614,0,0x0,8
tick,0x7ff86ea82704,108935448,0,0x0,8
tick,0x7ff86ea82704,108937544,0,0x0,8
tick,0x7ff86ea82704,108939643,0,0x0,8
tick,0x7ff86ea82704,108941542,0,0x0,8
tick,0x7ff86ea82704,108943548,0,0x0,8
tick,0x7ff86ea82704,108945597,0,0x0,8
tick,0x7ff86ea82704,108947495,0,0x0,8
tick,0x7ff86ea82704,108949441,0,0x0,8
tick,0x7ff86ea82704,108951679,0,0x0,8
tick,0x7ff86ea82704,108953592,0,0x0,8
tick,0x7ff86ea82704,108955446,0,0x0,8
tick,0x7ff86ea82704,108957377,0,0x0,8
tick,0x7ff86ea82704,108959482,0,0x0,8
tick,0x7ff86ea82704,108961488,0,0x0,8
tick,0x7ff86ea82704,108963420,0,0x0,8
tick,0x7ff86ea82704,108965327,0,0x0,8
tick,0x7ff86ea82704,108967456,0,0x0,8
tick,0x7ff86ea82704,108969356,0,0x0,8
tick,0x7ff86ea82704,108971469,0,0x0,8
tick,0x7ff86ea82704,108973338,0,0x0,8
tick,0x7ff86ea82704,108975381,0,0x0,8
tick,0x7ff86ea82704,108977428,0,0x0,8
tick,0x7ff86ea82704,108979464,0,0x0,8
tick,0x7ff86ea82704,108981304,0,0x0,8
tick,0x7ff86ea82704,108983386,0,0x0,8
tick,0x7ff86ea82704,108985445,0,0x0,8
tick,0x7ff86ea82704,108987365,0,0x0,8
tick,0x7ff86ea82704,108989406,0,0x0,8
tick,0x7ff86ea82704,108991275,0,0x0,8
tick,0x7ff86ea82704,108993254,0,0x0,8
tick,0x7ff86ea82704,108995378,0,0x0,8
tick,0x7ff86ea82704,108997325,0,0x0,8
tick,0x7ff86ea82704,108999338,0,0x0,8
tick,0x7ff86ea82704,109001336,0,0x0,8
tick,0x7ff86ea82704,109003329,0,0x0,8
tick,0x7ff86ea82704,109005391,0,0x0,8
tick,0x7ff86ea82704,109007347,0,0x0,8
tick,0x7ff86ea82704,109009455,0,0x0,8
tick,0x7ff86ea82704,109011498,0,0x0,8
tick,0x7ff86ea82704,109013232,0,0x0,8
tick,0x7ff86ea82704,109015369,0,0x0,8
tick,0x7ff86ea82704,109017176,0,0x0,8
tick,0x7ff86ea82704,109019382,0,0x0,8
tick,0x7ff86ea82704,109021144,0,0x0,8
tick,0x7ff86ea82704,109023306,0,0x0,8
tick,0x7ff86ea82704,109025112,0,0x0,8
tick,0x7ff86ea82704,109027295,0,0x0,8
tick,0x7ff86ea82704,109029712,0,0x0,8
tick,0x7ff86ea82704,109031475,0,0x0,8
tick,0x7ff86ea82704,109033172,0,0x0,8
tick,0x7ff86ea82704,109035156,0,0x0,8
tick,0x7ff86ea82704,109037244,0,0x0,8
tick,0x7ff86ea82704,109039229,0,0x0,8
tick,0x7ff86ea82704,109041136,0,0x0,8
tick,0x7ff86ea82704,109043162,0,0x0,8
tick,0x7ff86ea82704,109045052,0,0x0,8
tick,0x7ff86ea82704,109047206,0,0x0,8
tick,0x7ff86ea82704,109049120,0,0x0,8
tick,0x7ff86ea82704,109051138,0,0x0,8
tick,0x7ff86ea82704,109053093,0,0x0,8
tick,0x7ff86ea82704,109055212,0,0x0,8
tick,0x7ff86ea82704,109057169,0,0x0,8
tick,0x7ff86ea82704,109059138,0,0x0,8
tick,0x7ff86ea82704,109061095,0,0x0,8
tick,0x7ff86ea82704,109063210,0,0x0,8
tick,0x7ff86ea82704,109065238,0,0x0,8
tick,0x7ff86ea82704,109067154,0,0x0,8
tick,0x7ff86ea82704,109069326,0,0x0,8
tick,0x7ff86ea82704,109071072,0,0x0,8
tick,0x7ff86ea82704,109073190,0,0x0,8
tick,0x7ff86ea82704,109075050,0,0x0,8
tick,0x7ff86ea82704,109077116,0,0x0,8
tick,0x7ff86ea82704,109079154,0,0x0,8
tick,0x7ff86ea82704,109081296,0,0x0,8
tick,0x7ff86ea82704,109083141,0,0x0,8
tick,0x7ff86ea82704,109085282,0,0x0,8
tick,0x7ff86ea82704,109086951,0,0x0,8
tick,0x7ff86ea82704,109089164,0,0x0,8
tick,0x7ff86ea82704,109092635,0,0x0,8
tick,0x7ff86ea82704,109094366,0,0x0,8
tick,0x7ff86ea82704,109096205,0,0x0,8
tick,0x7ff86ea82704,109098335,0,0x0,8
tick,0x7ff86ea82704,109101183,0,0x0,8
tick,0x7ff86ea82704,109103028,0,0x0,8
tick,0x7ff86ea82704,109104930,0,0x0,8
tick,0x7ff86ea82704,109106921,0,0x0,8
tick,0x7ff86ea82704,109108915,0,0x0,8
tick,0x7ff86ea82704,109111046,0,0x0,8
tick,0x7ff86ea82704,109112911,0,0x0,8
tick,0x7ff86ea82704,109114919,0,0x0,8
tick,0x7ff86ea82704,109116954,0,0x0,8
tick,0x7ff86ea82704,109118886,0,0x0,8
tick,0x7ff86ea82704,109121173,0,0x0,8
tick,0x7ff86ea82704,109123235,0,0x0,8
tick,0x7ff86ea82704,109124897,0,0x0,8
tick,0x7ff86ea82704,109127134,0,0x0,8
tick,0x7ff86ea82704,109129381,0,0x0,8
tick,0x7ff86ea82704,109133214,0,0x0,8
tick,0x7ff86ea82704,109133241,0,0x0,8
tick,0x7ff86ea82704,109135247,0,0x0,8
tick,0x7ff86ea82704,109137004,0,0x0,8
tick,0x7ff86ea82704,109139412,0,0x0,8
tick,0x7ff86ea82704,109140937,0,0x0,8
tick,0x7ff86ea82704,109142993,0,0x0,8
tick,0x7ff86ea82704,109145084,0,0x0,8
tick,0x7ff86ea82704,109147333,0,0x0,8
tick,0x7ff86ea82704,109149035,0,0x0,8
tick,0x7ff86ea82704,109150906,0,0x0,8
tick,0x7ff86ea82704,109153064,0,0x0,8
tick,0x7ff86ea82704,109155033,0,0x0,8
tick,0x7ff86ea82704,109157013,0,0x0,8
tick,0x7ff86ea82704,109158988,0,0x0,8
tick,0x7ff86ea82704,109160888,0,0x0,8
tick,0x7ff86ea82704,109162955,0,0x0,8
tick,0x7ff86ea82704,109165292,0,0x0,8
tick,0x7ff86ea82704,109166900,0,0x0,8
tick,0x7ff86ea82704,109169094,0,0x0,8
tick,0x7ff86ea82704,109170977,0,0x0,8
tick,0x7ff86ea82704,109172912,0,0x0,8
tick,0x7ff86ea82704,109174982,0,0x0,8
tick,0x7ff86ea82704,109177109,0,0x0,8
tick,0x7ff86ea82704,109178927,0,0x0,8
tick,0x7ff86ea82704,109181040,0,0x0,8
tick,0x7ff86ea82704,109182812,0,0x0,8
tick,0x7ff86ea82704,109184893,0,0x0,8
tick,0x7ff86ea82704,109186950,0,0x0,8
tick,0x7ff86ea82704,109188798,0,0x0,8
tick,0x7ff86ea82704,109190910,0,0x0,8
tick,0x7ff86ea82704,109193024,0,0x0,8
tick,0x7ff86ea82704,109194893,0,0x0,8
tick,0x7ff86ea82704,109196930,0,0x0,8
tick,0x7ff86ea82704,109198808,0,0x0,8
tick,0x7ff86ea82704,109201015,0,0x0,8
tick,0x7ff86ea82704,109202852,0,0x0,8
tick,0x7ff86ea82704,109204950,0,0x0,8
tick,0x7ff86ea82704,109206941,0,0x0,8
tick,0x7ff86ea82704,109208863,0,0x0,8
tick,0x7ff86ea82704,109210824,0,0x0,8
tick,0x7ff86ea82704,109212738,0,0x0,8
tick,0x7ff86ea82704,109214823,0,0x0,8
tick,0x7ff86ea82704,109216858,0,0x0,8
tick,0x7ff86ea82704,109218860,0,0x0,8
tick,0x7ff86ea82704,109220691,0,0x0,8
tick,0x7ff86ea82704,109223063,0,0x0,8
tick,0x7ff86ea82704,109225049,0,0x0,8
tick,0x7ff86ea82704,109226933,0,0x0,8
tick,0x7ff86ea82704,109228708,0,0x0,8
tick,0x7ff86ea82704,109230813,0,0x0,8
tick,0x7ff86ea82704,109232746,0,0x0,8
tick,0x7ff86ea82704,109234795,0,0x0,8
tick,0x7ff86ea82704,109236778,0,0x0,8
tick,0x7ff86ea82704,109238971,0,0x0,8
tick,0x7ff86ea82704,109240987,0,0x0,8
tick,0x7ff86ea82704,109243144,0,0x0,8
tick,0x7ff86ea82704,109244789,0,0x0,8
tick,0x7ff86ea82704,109246979,0,0x0,8
tick,0x7ff86ea82704,109248897,0,0x0,8
tick,0x7ff86ea82704,109251103,0,0x0,8
tick,0x7ff86ea82704,109253042,0,0x0,8
tick,0x7ff86ea82704,109255416,0,0x0,8
tick,0x7ff86ea82704,109257025,0,0x0,8
tick,0x7ff86ea82704,109259022,0,0x0,8
tick,0x7ff86ea82704,109260733,0,0x0,8
tick,0x7ff86ea82704,109262717,0,0x0,8
tick,0x7ff86ea82704,109266177,0,0x0,8
tick,0x7ff86ea82704,109266992,0,0x0,8
tick,0x7ff86ea82704,109268954,0,0x0,8
tick,0x7ff86ea82704,109270733,0,0x0,8
tick,0x7ff86ea82704,109272888,0,0x0,8
tick,0x7ff86ea82704,109275040,0,0x0,8
tick,0x7ff86ea82704,109277247,0,0x0,8
tick,0x7ff86ea82704,109278794,0,0x0,8
tick,0x7ff86ea82704,109281598,0,0x0,8
tick,0x7ff86ea82704,109285043,0,0x0,8
tick,0x7ff86ea82704,109287239,0,0x0,8
tick,0x7ff86ea82704,109289049,0,0x0,8
tick,0x7ff86ea82704,109290854,0,0x0,8
tick,0x7ff86ea82704,109292850,0,0x0,8
tick,0x7ff86ea82704,109294945,0,0x0,8
tick,0x7ff86ea82704,109296591,0,0x0,8
tick,0x7ff86ea82704,109298810,0,0x0,8
tick,0x7ff86ea82704,109300549,0,0x0,8
tick,0x7ff86ea82704,109302612,0,0x0,8
tick,0x7ff86ea82704,109304461,0,0x0,8
tick,0x7ff86ea82704,109306590,0,0x0,8
tick,0x7ff86ea82704,109308468,0,0x0,8
tick,0x7ff86ea82704,109310732,0,0x0,8
tick,0x7ff86ea82704,109312406,0,0x0,8
tick,0x7ff86ea82704,109314734,0,0x0,8
tick,0x7ff86ea82704,109316441,0,0x0,8
tick,0x7ff86ea82704,109318575,0,0x0,8
tick,0x7ff86ea82704,109320483,0,0x0,8
tick,0x7ff86ea82704,109322675,0,0x0,8
tick,0x7ff86ea82704,109324726,0,0x0,8
tick,0x7ff86ea82704,109326574,0,0x0,8
tick,0x7ff86ea82704,109328573,0,0x0,8
tick,0x7ff86ea82704,109330451,0,0x0,8
tick,0x7ff86ea82704,109332589,0,0x0,8
tick,0x7ff86ea82704,109334463,0,0x0,8
tick,0x7ff86ea82704,109336589,0,0x0,8
tick,0x7ff86ea82704,109338639,0,0x0,8
tick,0x7ff86ea82704,109340698,0,0x0,8
tick,0x7ff86ea82704,109342811,0,0x0,8
tick,0x7ff86ea82704,109344782,0,0x0,8
tick,0x7ff86ea82704,109346615,0,0x0,8
tick,0x7ff86ea82704,109348747,0,0x0,8
tick,0x7ff86ea82704,109350534,0,0x0,8
tick,0x7ff86ea82704,109352392,0,0x0,8
tick,0x7ff86ea82704,109354567,0,0x0,8
tick,0x7ff86ea82704,109356585,0,0x0,8
tick,0x7ff86ea82704,109358599,0,0x0,8
tick,0x7ff86ea82704,109360557,0,0x0,8
tick,0x7ff86ea82704,109363336,0,0x0,8
tick,0x7ff86ea82704,109365471,0,0x0,8
tick,0x7ff86ea82704,109367458,0,0x0,8
tick,0x7ff86ea82704,109369678,0,0x0,8
tick,0x7ff86ea82704,109371459,0,0x0,8
tick,0x7ff86ea82704,109373593,0,0x0,8
tick,0x7ff86ea82704,109375366,0,0x0,8
tick,0x7ff86ea82704,109377524,0,0x0,8
tick,0x7ff86ea82704,109379490,0,0x0,8
tick,0x7ff86ea82704,109381693,0,0x0,8
tick,0x7ff86ea82704,109383361,0,0x0,8
tick,0x7ff86ea82704,109385367,0,0x0,8
tick,0x7ff86ea82704,109387450,0,0x0,8
tick,0x7ff86ea82704,109389459,0,0x0,8
tick,0x7ff86ea82704,109392230,0,0x0,8
tick,0x7ff86ea82704,109393689,0,0x0,8
tick,0x7ff86ea82704,109395572,0,0x0,8
tick,0x7ff86ea82704,109397545,0,0x0,8
tick,0x7ff86ea82704,109399440,0,0x0,8
tick,0x7ff86ea82704,109401469,0,0x0,8
tick,0x7ff86ea82704,109404494,0,0x0,8
tick,0x7ff86ea82704,109406406,0,0x0,8
tick,0x7ff86ea82704,109408475,0,0x0,8
tick,0x7ff86ea82704,109410375,0,0x0,8
tick,0x7ff86ea82704,109412513,0,0x0,8
tick,0x7ff86ea82704,109415427,0,0x0,8
tick,0x7ff86ea82704,109417177,0,0x0,8
tick,0x7ff86ea82704,109419084,0,0x0,8
tick,0x7ff86ea82704,109421091,0,0x0,8
tick,0x7ff86ea82704,109423100,0,0x0,8
tick,0x7ff86ea82704,109425143,0,0x0,8
tick,0x7ff86ea82704,109427189,0,0x0,8
tick,0x7ff86ea82704,109429203,0,0x0,8
tick,0x7ff86ea82704,109431420,0,0x0,8
tick,0x7ff86ea82704,109433178,0,0x0,8
tick,0x7ff86ea82704,109435063,0,0x0,8
tick,0x7ff86ea82704,109437108,0,0x0,8
tick,0x7ff86ea82704,109439031,0,0x0,8
tick,0x7ff86ea82704,109441224,0,0x0,8
tick,0x7ff86ea82704,109443051,0,0x0,8
tick,0x7ff86ea82704,109445162,0,0x0,8
tick,0x7ff86ea82704,109446977,0,0x0,8
tick,0x7ff86ea82704,109449161,0,0x0,8
tick,0x7ff86ea82704,109451011,0,0x0,8
tick,0x7ff86ea82704,109453126,0,0x0,8
tick,0x7ff86ea82704,109455395,0,0x0,8
tick,0x7ff86ea82704,109457005,0,0x0,8
tick,0x7ff86ea82704,109459001,0,0x0,8
tick,0x7ff86ea82704,109461029,0,0x0,8
tick,0x7ff86ea82704,109463011,0,0x0,8
tick,0x7ff86ea82704,109464951,0,0x0,8
tick,0x7ff86ea82704,109467068,0,0x0,8
tick,0x7ff86ea82704,109468995,0,0x0,8
tick,0x7ff86ea82704,109470989,0,0x0,8
tick,0x7ff86ea82704,109473110,0,0x0,8
tick,0x7ff86ea82704,109474984,0,0x0,8
tick,0x7ff86ea82704,109477097,0,0x0,8
tick,0x7ff86ea82704,109479003,0,0x0,8
tick,0x7ff86ea82704,109480998,0,0x0,8
tick,0x7ff86ea82704,109482932,0,0x0,8
tick,0x7ff86ea82704,109485051,0,0x0,8
tick,0x7ff86ea82704,109487140,0,0x0,8
tick,0x7ff86ea82704,109488918,0,0x0,8
tick,0x7ff86ea82704,109490955,0,0x0,8
tick,0x7ff86ea82704,109493011,0,0x0,8
tick,0x7ff86ea82704,109495147,0,0x0,8
tick,0x7ff86ea82704,109497080,0,0x0,8
tick,0x7ff86ea82704,109498873,0,0x0,8
tick,0x7ff86ea82704,109500919,0,0x0,8
tick,0x7ff86ea82704,109502889,0,0x0,8
tick,0x7ff86ea82704,109504849,0,0x0,8
tick,0x7ff86ea82704,109506952,0,0x0,8
tick,0x7ff86ea82704,109508890,0,0x0,8
tick,0x7ff86ea82704,109510893,0,0x0,8
tick,0x7ff86ea82704,109512920,0,0x0,8
tick,0x7ff86ea82704,109514921,0,0x0,8
tick,0x7ff86ea82704,109516845,0,0x0,8
tick,0x7ff86ea82704,109518941,0,0x0,8
tick,0x7ff86ea82704,109520842,0,0x0,8
tick,0x7ff86ea82704,109522922,0,0x0,8
tick,0x7ff86ea82704,109525080,0,0x0,8
tick,0x7ff86ea82704,109526920,0,0x0,8
tick,0x7ff86ea82704,109528879,0,0x0,8
tick,0x7ff86ea82704,109531284,0,0x0,8
tick,0x7ff86ea82704,109532785,0,0x0,8
tick,0x7ff86ea82704,109534902,0,0x0,8
tick,0x7ff86ea82704,109536794,0,0x0,8
tick,0x7ff86ea82704,109538911,0,0x0,8
tick,0x7ff86ea82704,109540840,0,0x0,8
tick,0x7ff86ea82704,109542878,0,0x0,8
tick,0x7ff86ea82704,109545199,0,0x0,8
tick,0x7ff86ea82704,109546935,0,0x0,8
tick,0x7ff86ea82704,109548811,0,0x0,8
tick,0x7ff86ea82704,109550855,0,0x0,8
tick,0x7ff86ea82704,109552767,0,0x0,8
tick,0x7ff86ea82704,109554818,0,0x0,8
tick,0x7ff86ea82704,109557258,0,0x0,8
tick,0x7ff86ea82704,109558985,0,0x0,8
tick,0x7ff86ea82704,109560992,0,0x0,8
tick,0x7ff86ea82704,109562814,0,0x0,8
tick,0x7ff86ea82704,109564792,0,0x0,8
tick,0x7ff86ea82704,109566718,0,0x0,8
tick,0x7ff86ea82704,109568771,0,0x0,8
tick,0x7ff86ea82704,109570789,0,0x0,8
tick,0x7ff86ea82704,109572791,0,0x0,8
tick,0x7ff86ea82704,109574747,0,0x0,8
tick,0x7ff86ea82704,109576754,0,0x0,8
tick,0x7ff86ea82704,109578692,0,0x0,8
tick,0x7ff86ea82704,109580742,0,0x0,8
tick,0x7ff86ea82704,109582740,0,0x0,8
tick,0x7ff86ea82704,109584758,0,0x0,8
tick,0x7ff86ea82704,109586749,0,0x0,8
tick,0x7ff86ea82704,109588723,0,0x0,8
tick,0x7ff86ea82704,109590699,0,0x0,8
tick,0x7ff86ea82704,109592673,0,0x0,8
tick,0x7ff86ea82704,109594694,0,0x0,8
tick,0x7ff86ea82704,109596855,0,0x0,8
tick,0x7ff86ea82704,109598651,0,0x0,8
tick,0x7ff86ea82704,109600661,0,0x0,8
tick,0x7ff86ea82704,109602702,0,0x0,8
tick,0x7ff86ea82704,109604636,0,0x0,8
tick,0x7ff86ea82704,109606724,0,0x0,8
tick,0x7ff86ea82704,109608592,0,0x0,8
tick,0x7ff86ea82704,109610652,0,0x0,8
tick,0x7ff86ea82704,109612644,0,0x0,8
tick,0x7ff86ea82704,109615010,0,0x0,8
tick,0x7ff86ea82704,109616841,0,0x0,8
tick,0x7ff86ea82704,109618809,0,0x0,8
tick,0x7ff86ea82704,109620614,0,0x0,8
tick,0x7ff86ea82704,109623014,0,0x0,8
tick,0x7ff86ea82704,109624632,0,0x0,8
tick,0x7ff86ea82704,109626701,0,0x0,8
tick,0x7ff86ea82704,109629034,0,0x0,8
tick,0x7ff86ea82704,109630596,0,0x0,8
tick,0x7ff86ea82704,109632865,0,0x0,8
tick,0x7ff86ea82704,109634737,0,0x0,8
tick,0x7ff86ea82704,109636748,0,0x0,8
tick,0x7ff86ea82704,109638798,0,0x0,8
tick,0x7ff86ea82704,109640787,0,0x0,8
tick,0x7ff86ea82704,109642623,0,0x0,8
tick,0x7ff86ea82704,109644540,0,0x0,8
tick,0x7ff86ea82704,109646616,0,0x0,8
tick,0x7ff86ea82704,109648566,0,0x0,8
tick,0x7ff86ea82704,109650503,0,0x0,8
tick,0x7ff86ea82704,109652825,0,0x0,8
tick,0x7ff86ea82704,109654460,0,0x0,8
tick,0x7ff86ea82704,109656516,0,0x0,8
tick,0x7ff86ea82704,109658475,0,0x0,8
tick,0x7ff86ea82704,109660617,0,0x0,8
tick,0x7ff86ea82704,109662468,0,0x0,8
tick,0x7ff86ea82704,109664644,0,0x0,8
tick,0x7ff86ea82704,109666498,0,0x0,8
tick,0x7ff86ea82704,109668508,0,0x0,8
tick,0x7ff86ea82704,109670429,0,0x0,8
tick,0x7ff86ea82704,109672647,0,0x0,8
tick,0x7ff86ea82704,109674440,0,0x0,8
tick,0x7ff86ea82704,109676553,0,0x0,8
tick,0x7ff86ea82704,109678444,0,0x0,8
tick,0x7ff86ea82704,109680531,0,0x0,8
tick,0x7ff86ea82704,109682397,0,0x0,8
tick,0x7ff86ea82704,109686249,0,0x0,8
tick,0x7ff86ea82704,109687541,0,0x0,8
tick,0x7ff86ea82704,109689893,0,0x0,8
tick,0x7ff86ea82704,109691739,0,0x0,8
tick,0x7ff86ea82704,109693548,0,0x0,8
tick,0x7ff86ea82704,109695510,0,0x0,8
tick,0x7ff86ea82704,109697809,0,0x0,8
tick,0x7ff86ea82704,109699540,0,0x0,8
tick,0x7ff86ea82704,109701516,0,0x0,8
tick,0x7ff86ea82704,109703553,0,0x0,8
tick,0x7ff86ea82704,109705555,0,0x0,8
tick,0x7ff86ea82704,109707583,0,0x0,8
tick,0x7ff86ea82704,109709481,0,0x0,8
tick,0x7ff86ea82704,109711507,0,0x0,8
tick,0x7ff86ea82704,109713504,0,0x0,8
tick,0x7ff86ea82704,109715559,0,0x0,8
tick,0x7ff86ea82704,109717454,0,0x0,8
tick,0x7ff86ea82704,109719456,0,0x0,8
tick,0x7ff86ea82704,109721398,0,0x0,8
tick,0x7ff86ea82704,109723425,0,0x0,8
tick,0x7ff86ea82704,109725383,0,0x0,8
tick,0x7ff86ea82704,109727466,0,0x0,8
tick,0x7ff86ea82704,109729438,0,0x0,8
tick,0x7ff86ea82704,109731422,0,0x0,8
tick,0x7ff86ea82704,109733364,0,0x0,8
tick,0x7ff86ea82704,109735434,0,0x0,8
tick,0x7ff86ea82704,109737675,0,0x0,8
tick,0x7ff86ea82704,109739297,0,0x0,8
tick,0x7ff86ea82704,109741545,0,0x0,8
tick,0x7ff86ea82704,109743429,0,0x0,8
tick,0x7ff86ea82704,109745344,0,0x0,8
tick,0x7ff86ea82704,109747322,0,0x0,8
tick,0x7ff86ea82704,109749348,0,0x0,8
tick,0x7ff86ea82704,109751365,0,0x0,8
tick,0x7ff86ea82704,109753313,0,0x0,8
tick,0x7ff86ea82704,109755396,0,0x0,8
tick,0x7ff86ea82704,109757836,0,0x0,8
tick,0x7ff86ea82704,109759377,0,0x0,8
tick,0x7ff86ea82704,109761551,0,0x0,8
tick,0x7ff86ea82704,109763344,0,0x0,8
tick,0x7ff86ea82704,109765380,0,0x0,8
tick,0x7ff86ea82704,109767356,0,0x0,8
tick,0x7ff86ea82704,109769342,0,0x0,8
tick,0x7ff86ea82704,109771272,0,0x0,8
tick,0x7ff86ea82704,109773375,0,0x0,8
tick,0x7ff86ea82704,109775352,0,0x0,8
tick,0x7ff86ea82704,109777280,0,0x0,8
tick,0x7ff86ea82704,109779207,0,0x0,8
tick,0x7ff86ea82704,109781382,0,0x0,8
tick,0x7ff86ea82704,109783210,0,0x0,8
tick,0x7ff86ea82704,109785381,0,0x0,8
tick,0x7ff86ea82704,109787221,0,0x0,8
tick,0x7ff86ea82704,109789218,0,0x0,8
tick,0x7ff86ea82704,109791294,0,0x0,8
tick,0x7ff86ea82704,109793298,0,0x0,8
tick,0x7ff86ea82704,109795299,0,0x0,8
tick,0x7ff86ea82704,109797315,0,0x0,8
tick,0x7ff86ea82704,109799385,0,0x0,8
tick,0x7ff86ea82704,109801331,0,0x0,8
tick,0x7ff86ea82704,109803145,0,0x0,8
tick,0x7ff86ea82704,109805363,0,0x0,8
tick,0x7ff86ea82704,109807204,0,0x0,8
tick,0x7ff86ea82704,109809348,0,0x0,8
tick,0x7ff86ea82704,109811105,0,0x0,8
tick,0x7ff86ea82704,109813311,0,0x0,8
tick,0x7ff86ea82704,109815126,0,0x0,8
tick,0x7ff86ea82704,109817207,0,0x0,8
tick,0x7ff86ea82704,109819124,0,0x0,8
tick,0x7ff86ea82704,109821161,0,0x0,8
tick,0x7ff86ea82704,109823195,0,0x0,8
tick,0x7ff86ea82704,109825143,0,0x0,8
tick,0x7ff86ea82704,109827174,0,0x0,8
tick,0x7ff86ea82704,109829188,0,0x0,8
tick,0x7ff86ea82704,109831197,0,0x0,8
tick,0x7ff86ea82704,109833207,0,0x0,8
tick,0x7ff86ea82704,109835202,0,0x0,8
tick,0x7ff86ea82704,109837327,0,0x0,8
tick,0x7ff86ea82704,109839125,0,0x0,8
tick,0x7ff86ea82704,109841522,0,0x0,8
tick,0x7ff86ea82704,109843160,0,0x0,8
tick,0x7ff86ea82704,109845082,0,0x0,8
tick,0x7ff86ea82704,109847093,0,0x0,8
tick,0x7ff86ea82704,109849083,0,0x0,8
tick,0x7ff86ea82704,109851045,0,0x0,8
tick,0x7ff86ea82704,109853313,0,0x0,8
tick,0x7ff86ea82704,109854958,0,0x0,8
tick,0x7ff86ea82704,109857047,0,0x0,8
tick,0x7ff86ea82704,109859126,0,0x0,8
tick,0x7ff86ea82704,109861270,0,0x0,8
tick,0x7ff86ea82704,109863125,0,0x0,8
tick,0x7ff86ea82704,109865150,0,0x0,8
tick,0x7ff86ea82704,109866991,0,0x0,8
tick,0x7ff86ea82704,109869094,0,0x0,8
tick,0x7ff86ea82704,109871099,0,0x0,8
tick,0x7ff86ea82704,109873187,0,0x0,8
tick,0x7ff86ea82704,109875015,0,0x0,8
tick,0x7ff86ea82704,109877147,0,0x0,8
tick,0x7ff86ea82704,109879129,0,0x0,8
tick,0x7ff86ea82704,109881245,0,0x0,8
tick,0x7ff86ea82704,109882989,0,0x0,8
tick,0x7ff86ea82704,109885024,0,0x0,8
tick,0x7ff86ea82704,109886880,0,0x0,8
tick,0x7ff86ea82704,109889090,0,0x0,8
tick,0x7ff86ea82704,109890976,0,0x0,8
tick,0x7ff86ea82704,109893016,0,0x0,8
tick,0x7ff86ea82704,109894910,0,0x0,8
tick,0x7ff86ea82704,109897034,0,0x0,8
tick,0x7ff86ea82704,109899117,0,0x0,8
tick,0x7ff86ea82704,109901014,0,0x0,8
tick,0x7ff86ea82704,109903049,0,0x0,8
tick,0x7ff86ea82704,109904943,0,0x0,8
tick,0x7ff86ea82704,109907005,0,0x0,8
tick,0x7ff86ea82704,109909384,0,0x0,8
tick,0x7ff86ea82704,109910851,0,0x0,8
tick,0x7ff86ea82704,109913170,0,0x0,8
tick,0x7ff86ea82704,109914942,0,0x0,8
tick,0x7ff86ea82704,109916911,0,0x0,8
tick,0x7ff86ea82704,109918946,0,0x0,8
tick,0x7ff86ea82704,109920933,0,0x0,8
tick,0x7ff86ea82704,109922866,0,0x0,8
tick,0x7ff86ea82704,109925038,0,0x0,8
tick,0x7ff86ea82704,109926859,0,0x0,8
tick,0x7ff86ea82704,109928966,0,0x0,8
tick,0x7ff86ea82704,109930969,0,0x0,8
tick,0x7ff86ea82704,109932921,0,0x0,8
tick,0x7ff86ea82704,109934892,0,0x0,8
tick,0x7ff86ea82704,109936938,0,0x0,8
tick,0x7ff86ea82704,109938947,0,0x0,8
tick,0x7ff86ea82704,109940910,0,0x0,8
tick,0x7ff86ea82704,109942837,0,0x0,8
tick,0x7ff86ea82704,109944919,0,0x0,8
tick,0x7ff86ea82704,109946787,0,0x0,8
tick,0x7ff86ea82704,109948892,0,0x0,8
tick,0x7ff86ea82704,109950846,0,0x0,8
tick,0x7ff86ea82704,109952877,0,0x0,8
tick,0x7ff86ea82704,109954835,0,0x0,8
tick,0x7ff86ea82704,109956899,0,0x0,8
tick,0x7ff86ea82704,109958815,0,0x0,8
tick,0x7ff86ea82704,109961114,0,0x0,8
tick,0x7ff86ea82704,109962761,0,0x0,8
tick,0x7ff86ea82704,109964951,0,0x0,8
tick,0x7ff86ea82704,109966789,0,0x0,8
tick,0x7ff86ea82704,109968896,0,0x0,8
tick,0x7ff86ea82704,109970793,0,0x0,8
tick,0x7ff86ea82704,109972809,0,0x0,8
tick,0x7ff86ea82704,109974716,0,0x0,8
tick,0x7ff86ea82704,109976891,0,0x0,8
tick,0x7ff86ea82704,109978716,0,0x0,8
tick,0x7ff86ea82704,109980769,0,0x0,8
tick,0x7ff86ea82704,109982819,0,0x0,8
tick,0x7ff86ea82704,109984859,0,0x0,8
tick,0x7ff86ea82704,109986651,0,0x0,8
tick,0x7ff86ea82704,109988995,0,0x0,8
tick,0x7ff86ea82704,109990658,0,0x0,8
tick,0x7ff86ea82704,109992949,0,0x0,8
tick,0x7ff86ea82704,109995379,0,0x0,8
tick,0x7ff86ea82704,109996767,0,0x0,8
tick,0x7ff86ea82704,109998860,0,0x0,8
tick,0x7ff86ea82704,110000588,0,0x0,8
tick,0x7ff86ea82704,110003382,0,0x0,8
tick,0x7ff86ea82704,110005605,0,0x0,8
tick,0x7ff86ea82704,110007612,0,0x0,8
tick,0x7ff86ea82704,110009836,0,0x0,8
tick,0x7ff86ea82704,110011758,0,0x0,8
tick,0x7ff86ea82704,110013789,0,0x0,8
tick,0x7ff86ea82704,110015921,0,0x0,8
tick,0x7ff86ea82704,110017671,0,0x0,8
tick,0x7ff86ea82704,110019672,0,0x0,8
tick,0x7ff86ea82704,110021631,0,0x0,8
tick,0x7ff86ea82704,110023562,0,0x0,8
tick,0x7ff86ea82704,110025695,0,0x0,8
tick,0x7ff86ea82704,110027602,0,0x0,8
tick,0x7ff86ea82704,110029626,0,0x0,8
tick,0x7ff86ea82704,110031752,0,0x0,8
tick,0x7ff86ea82704,110033740,0,0x0,8
tick,0x7ff86ea82704,110035561,0,0x0,8
tick,0x7ff86ea82704,110037559,0,0x0,8
tick,0x7ff86ea82704,110039509,0,0x0,8
tick,0x7ff86ea82704,110041462,0,0x0,8
tick,0x7ff86ea82704,110043453,0,0x0,8
tick,0x7ff86ea82704,110045493,0,0x0,8
tick,0x7ff86ea82704,110047503,0,0x0,8
tick,0x7ff86ea82704,110049706,0,0x0,8
tick,0x7ff86ea82704,110051438,0,0x0,8
tick,0x7ff86ea82704,110053465,0,0x0,8
tick,0x7ff86ea82704,110055472,0,0x0,8
tick,0x7ff86ea82704,110057443,0,0x0,8
tick,0x7ff86ea82704,110059410,0,0x0,8
tick,0x7ff86ea82704,110061405,0,0x0,8
tick,0x7ff86ea82704,110063421,0,0x0,8
tick,0x7ff86ea82704,110065491,0,0x0,8
tick,0x7ff86ea82704,110067734,0,0x0,8
tick,0x7ff86ea82704,110069461,0,0x0,8
tick,0x7ff86ea82704,110071387,0,0x0,8
tick,0x7ff86ea82704,110073467,0,0x0,8
tick,0x7ff86ea82704,110075436,0,0x0,8
tick,0x7ff86ea82704,110077457,0,0x0,8
tick,0x7ff86ea82704,110079400,0,0x0,8
tick,0x7ff86ea82704,110081322,0,0x0,8
tick,0x7ff86ea82704,110083411,0,0x0,8
tick,0x7ff86ea82704,110085398,0,0x0,8
tick,0x7ff86ea82704,110087328,0,0x0,8
tick,0x7ff86ea82704,110089318,0,0x0,8
tick,0x7ff86ea82704,110091350,0,0x0,8
tick,0x7ff86ea82704,110093298,0,0x0,8
tick,0x7ff86ea82704,110095339,0,0x0,8
tick,0x7ff86ea82704,110097274,0,0x0,8
tick,0x7ff86ea82704,110099287,0,0x0,8
tick,0x7ff86ea82704,110101354,0,0x0,8
tick,0x7ff86ea82704,110103168,0,0x0,8
tick,0x7ff86ea82704,110104507,0,0x0,8
tick,0x7ff86ea82704,110106542,0,0x0,8
tick,0x7ff86ea82704,110108480,0,0x0,8
tick,0x7ff86ea82704,110110601,0,0x0,8
tick,0x7ff86ea82704,110112549,0,0x0,8
tick,0x7ff86ea82704,110114881,0,0x0,8
tick,0x7ff86ea82704,110116624,0,0x0,8
tick,0x7ff86ea82704,110118706,0,0x0,8
tick,0x7ff86ea82704,110120752,0,0x0,8
tick,0x7ff86ea82704,110122683,0,0x0,8
tick,0x7ff86ea82704,110124649,0,0x0,8
tick,0x7ff86ea82704,110126623,0,0x0,8
tick,0x7ff86ea82704,110128459,0,0x0,8
tick,0x7ff86ea82704,110130697,0,0x0,8
tick,0x7ff86ea82704,110132557,0,0x0,8
tick,0x7ff86ea82704,110134480,0,0x0,8
tick,0x7ff86ea82704,110136730,0,0x0,8
tick,0x7ff86ea82704,110138539,0,0x0,8
tick,0x7ff86ea82704,110140793,0,0x0,8
tick,0x7ff86ea82704,110142779,0,0x0,8
tick,0x7ff86ea82704,110144454,0,0x0,8
tick,0x7ff86ea82704,110146776,0,0x0,8
tick,0x7ff86ea82704,110148637,0,0x0,8
tick,0x7ff86ea82704,110150645,0,0x0,8
tick,0x7ff86ea82704,110152434,0,0x0,8
tick,0x7ff86ea82704,110154495,0,0x0,8
tick,0x7ff86ea82704,110156299,0,0x0,8
tick,0x7ff86ea82704,110158463,0,0x0,8
tick,0x7ff86ea82704,110160303,0,0x0,8
tick,0x7ff86ea82704,110162726,0,0x0,8
tick,0x7ff86ea82704,110164406,0,0x0,8
tick,0x7ff86ea82704,110167532,0,0x0,8
tick,0x7ff86ea82704,110169401,0,0x0,8
tick,0x7ff86ea82704,110171306,0,0x0,8
tick,0x7ff86ea82704,110173231,0,0x0,8
tick,0x7ff86ea82704,110175304,0,0x0,8
tick,0x7ff86ea82704,110177172,0,0x0,8
tick,0x7ff86ea82704,110179219,0,0x0,8
tick,0x7ff86ea82704,110181500,0,0x0,8
tick,0x7ff86ea82704,110183283,0,0x0,8
tick,0x7ff86ea82704,110185177,0,0x0,8
tick,0x7ff86ea82704,110187199,0,0x0,8
tick,0x7ff86ea82704,110189159,0,0x0,8
tick,0x7ff86ea82704,110191394,0,0x0,8
tick,0x7ff86ea82704,110193141,0,0x0,8
tick,0x7ff86ea82704,110195621,0,0x0,8
tick,0x7ff86ea82704,110197042,0,0x0,8
tick,0x7ff86ea82704,110199306,0,0x0,8
tick,0x7ff86ea82704,110201110,0,0x0,8
tick,0x7ff86ea82704,110203275,0,0x0,8
tick,0x7ff86ea82704,110205182,0,0x0,8
tick,0x7ff86ea82704,110207455,0,0x0,8
tick,0x7ff86ea82704,110209257,0,0x0,8
tick,0x7ff86ea82704,110211178,0,0x0,8
tick,0x7ff86ea82704,110213018,0,0x0,8
tick,0x7ff86ea82704,110215250,0,0x0,8
tick,0x7ff86ea82704,110217165,0,0x0,8
tick,0x7ff86ea82704,110219151,0,0x0,8
tick,0x7ff86ea82704,110220973,0,0x0,8
tick,0x7ff86ea82704,110223147,0,0x0,8
tick,0x7ff86ea82704,110225032,0,0x0,8
tick,0x7ff86ea82704,110227001,0,0x0,8
tick,0x7ff86ea82704,110229095,0,0x0,8
tick,0x7ff86ea82704,110231039,0,0x0,8
tick,0x7ff86ea82704,110233157,0,0x0,8
tick,0x7ff86ea82704,110234979,0,0x0,8
tick,0x7ff86ea82704,110237107,0,0x0,8
tick,0x7ff86ea82704,110238981,0,0x0,8
tick,0x7ff86ea82704,110241093,0,0x0,8
tick,0x7ff86ea82704,110243028,0,0x0,8
tick,0x7ff86ea82704,110245160,0,0x0,8
tick,0x7ff86ea82704,110247056,0,0x0,8
tick,0x7ff86ea82704,110249082,0,0x0,8
tick,0x7ff86ea82704,110250924,0,0x0,8
tick,0x7ff86ea82704,110253342,0,0x0,8
tick,0x7ff86ea82704,110254909,0,0x0,8
tick,0x7ff86ea82704,110256976,0,0x0,8
tick,0x7ff86ea82704,110258919,0,0x0,8
tick,0x7ff86ea82704,110260972,0,0x0,8
tick,0x7ff86ea82704,110262912,0,0x0,8
tick,0x7ff86ea82704,110264968,0,0x0,8
tick,0x7ff86ea82704,110266895,0,0x0,8
tick,0x7ff86ea82704,110268998,0,0x0,8
tick,0x7ff86ea82704,110270937,0,0x0,8
tick,0x7ff86ea82704,110272981,0,0x0,8
tick,0x7ff86ea82704,110274920,0,0x0,8
tick,0x7ff86ea82704,110276994,0,0x0,8
tick,0x7ff86ea82704,110278902,0,0x0,8
tick,0x7ff86ea82704,110280857,0,0x0,8
tick,0x7ff86ea82704,110282862,0,0x0,8
tick,0x7ff86ea82704,110284901,0,0x0,8
tick,0x7ff86ea82704,110286929,0,0x0,8
tick,0x7ff86ea82704,110288907,0,0x0,8
tick,0x7ff86ea82704,110290931,0,0x0,8
tick,0x7ff86ea82704,110293068,0,0x0,8
tick,0x7ff86ea82704,110294814,0,0x0,8
tick,0x7ff86ea82704,110296961,0,0x0,8
tick,0x7ff86ea82704,110299178,0,0x0,8
tick,0x7ff86ea82704,110300894,0,0x0,8
tick,0x7ff86ea82704,110302919,0,0x0,8
tick,0x7ff86ea82704,110304845,0,0x0,8
tick,0x7ff86ea82704,110306907,0,0x0,8
tick,0x7ff86ea82704,110308792,0,0x0,8
tick,0x7ff86ea82704,110310981,0,0x0,8
tick,0x7ff86ea82704,110312773,0,0x0,8
tick,0x7ff86ea82704,110315122,0,0x0,8
tick,0x7ff86ea82704,110316964,0,0x0,8
tick,0x7ff86ea82704,110318980,0,0x0,8
tick,0x7ff86ea82704,110321852,0,0x0,8
tick,0x7ff86ea82704,110323852,0,0x0,8
tick,0x7ff86ea82704,110326031,0,0x0,8
tick,0x7ff86ea82704,110327954,0,0x0,8
tick,0x7ff86ea82704,110329772,0,0x0,8
tick,0x7ff86ea82704,110331704,0,0x0,8
tick,0x7ff86ea82704,110333851,0,0x0,8
tick,0x7ff86ea82704,110335866,0,0x0,8
tick,0x7ff86ea82704,110337752,0,0x0,8
tick,0x7ff86ea82704,110339646,0,0x0,8
tick,0x7ff86ea82704,110341716,0,0x0,8
tick,0x7ff86ea82704,110343711,0,0x0,8
tick,0x7ff86ea82704,110345723,0,0x0,8
tick,0x7ff86ea82704,110347699,0,0x0,8
tick,0x7ff86ea82704,110349681,0,0x0,8
tick,0x7ff86ea82704,110351753,0,0x0,8
tick,0x7ff86ea82704,110353847,0,0x0,8
tick,0x7ff86ea82704,110355810,0,0x0,8
tick,0x7ff86ea82704,110357713,0,0x0,8
tick,0x7ff86ea82704,110359656,0,0x0,8
tick,0x7ff86ea82704,110361739,0,0x0,8
tick,0x7ff86ea82704,110363747,0,0x0,8
tick,0x7ff86ea82704,110365857,0,0x0,8
tick,0x7ff86ea82704,110367700,0,0x0,8
tick,0x7ff86ea82704,110369693,0,0x0,8
tick,0x7ff86ea82704,110371664,0,0x0,8
tick,0x7ff86ea82704,110373727,0,0x0,8
tick,0x7ff86ea82704,110375626,0,0x0,8
tick,0x7ff86ea82704,110377710,0,0x0,8
tick,0x7ff86ea82704,110379647,0,0x0,8
tick,0x7ff86ea82704,110381705,0,0x0,8
tick,0x7ff86ea82704,110383938,0,0x0,8
tick,0x7ff86ea82704,110385638,0,0x0,8
tick,0x7ff86ea82704,110387555,0,0x0,8
tick,0x7ff86ea82704,110389636,0,0x0,8
tick,0x7ff86ea82704,110391534,0,0x0,8
tick,0x7ff86ea82704,110393806,0,0x0,8
tick,0x7ff86ea82704,110395744,0,0x0,8
tick,0x7ff86ea82704,110397590,0,0x0,8
tick,0x7ff86ea82704,110399257,0,0x0,8
tick,0x7ff86ea82704,110400748,0,0x0,8
tick,0x7ff86ea82704,110402702,0,0x0,8
tick,0x7ff86ea82704,110404645,0,0x0,8
tick,0x7ff86ea82704,110406622,0,0x0,8
tick,0x7ff86ea82704,110408564,0,0x0,8
tick,0x7ff86ea82704,110410772,0,0x0,8
tick,0x7ff86ea82704,110412618,0,0x0,8
tick,0x7ff86ea82704,110414847,0,0x0,8
tick,0x7ff86ea82704,110416649,0,0x0,8
tick,0x7ff86ea82704,110418882,0,0x0,8
tick,0x7ff86ea82704,110420540,0,0x0,8
tick,0x7ff86ea82704,110422712,0,0x0,8
tick,0x7ff86ea82704,110424490,0,0x0,8
tick,0x7ff86ea82704,110426726,0,0x0,8
tick,0x7ff86ea82704,110428519,0,0x0,8
tick,0x7ff86ea82704,110430567,0,0x0,8
tick,0x7ff86ea82704,110432652,0,0x0,8
tick,0x7ff86ea82704,110434755,0,0x0,8
tick,0x7ff86ea82704,110436832,0,0x0,8
tick,0x7ff86ea82704,110438613,0,0x0,8
tick,0x7ff86ea82704,110440854,0,0x0,8
tick,0x7ff86ea82704,110442572,0,0x0,8
tick,0x7ff86ea82704,110444987,0,0x0,8
tick,0x7ff86ea82704,110446538,0,0x0,8
tick,0x7ff86ea82704,110448613,0,0x0,8
tick,0x7ff86ea82704,110450581,0,0x0,8
tick,0x7ff86ea82704,110452810,0,0x0,8
tick,0x7ff86ea82704,110454487,0,0x0,8
tick,0x7ff86ea82704,110456624,0,0x0,8
tick,0x7ff86ea82704,110458466,0,0x0,8
tick,0x7ff86ea82704,110460597,0,0x0,8
tick,0x7ff86ea82704,110462519,0,0x0,8
tick,0x7ff86ea82704,110464527,0,0x0,8
tick,0x7ff86ea82704,110466424,0,0x0,8
tick,0x7ff86ea82704,110468422,0,0x0,8
tick,0x7ff86ea82704,110470516,0,0x0,8
tick,0x7ff86ea82704,110472423,0,0x0,8
tick,0x7ff86ea82704,110474448,0,0x0,8
tick,0x7ff86ea82704,110476454,0,0x0,8
tick,0x7ff86ea82704,110478440,0,0x0,8
tick,0x7ff86ea82704,110480435,0,0x0,8
tick,0x7ff86ea82704,110482380,0,0x0,8
tick,0x7ff86ea82704,110484410,0,0x0,8
tick,0x7ff86ea82704,110486430,0,0x0,8
tick,0x7ff86ea82704,110488345,0,0x0,8
tick,0x7ff86ea82704,110490412,0,0x0,8
tick,0x7ff86ea82704,110492433,0,0x0,8
tick,0x7ff86ea82704,110494398,0,0x0,8
tick,0x7ff86ea82704,110496372,0,0x0,8
tick,0x7ff86ea82704,110498452,0,0x0,8
tick,0x7ff86ea82704,110500398,0,0x0,8
tick,0x7ff86ea82704,110502410,0,0x0,8
tick,0x7ff86ea82704,110504406,0,0x0,8
tick,0x7ff86ea82704,110506512,0,0x0,8
tick,0x7ff86ea82704,110508539,0,0x0,8
tick,0x7ff86ea82704,110510353,0,0x0,8
tick,0x7ff86ea82704,110512303,0,0x0,8
tick,0x7ff86ea82704,110514476,0,0x0,8
tick,0x7ff86ea82704,110516218,0,0x0,8
tick,0x7ff86ea82704,110518388,0,0x0,8
tick,0x7ff86ea82704,110520430,0,0x0,8
tick,0x7ff86ea82704,110522479,0,0x0,8
tick,0x7ff86ea82704,110524376,0,0x0,8
tick,0x7ff86ea82704,110526491,0,0x0,8
tick,0x7ff86ea82704,110528337,0,0x0,8
tick,0x7ff86ea82704,110530609,0,0x0,8
tick,0x7ff86ea82704,110532564,0,0x0,8
tick,0x7ff86ea82704,110534639,0,0x0,8
tick,0x7ff86ea82704,110536394,0,0x0,8
tick,0x7ff86ea82704,110538439,0,0x0,8
tick,0x7ff86ea82704,110540196,0,0x0,8
tick,0x7ff86ea82704,110542193,0,0x0,8
tick,0x7ff86ea82704,110544251,0,0x0,8
tick,0x7ff86ea82704,110546227,0,0x0,8
tick,0x7ff86ea82704,110548244,0,0x0,8
tick,0x7ff86ea82704,110550167,0,0x0,8
tick,0x7ff86ea82704,110552215,0,0x0,8
tick,0x7ff86ea82704,110554300,0,0x0,8
tick,0x7ff86ea82704,110556161,0,0x0,8
tick,0x7ff86ea82704,110558250,0,0x0,8
tick,0x7ff86ea82704,110560526,0,0x0,8
tick,0x7ff86ea82704,110562267,0,0x0,8
tick,0x7ff86ea82704,110565189,0,0x0,8
tick,0x7ff86ea82704,110567271,0,0x0,8
tick,0x7ff86ea82704,110569205,0,0x0,8
tick,0x7ff86ea82704,110571044,0,0x0,8
tick,0x7ff86ea82704,110573170,0,0x0,8
tick,0x7ff86ea82704,110575156,0,0x0,8
tick,0x7ff86ea82704,110577184,0,0x0,8
tick,0x7ff86ea82704,110579058,0,0x0,8
tick,0x7ff86ea82704,110581352,0,0x0,8
tick,0x7ff86ea82704,110583192,0,0x0,8
tick,0x7ff86ea82704,110585511,0,0x0,8
tick,0x7ff86ea82704,110587075,0,0x0,8
tick,0x7ff86ea82704,110589228,0,0x0,8
tick,0x7ff86ea82704,110591391,0,0x0,8
tick,0x7ff86ea82704,110593134,0,0x0,8
tick,0x7ff86ea82704,110594957,0,0x0,8
tick,0x7ff86ea82704,110597105,0,0x0,8
tick,0x7ff86ea82704,110599052,0,0x0,8
tick,0x7ff86ea82704,110601094,0,0x0,8
tick,0x7ff86ea82704,110602930,0,0x0,8
tick,0x7ff86ea82704,110605033,0,0x0,8
tick,0x7ff86ea82704,110606987,0,0x0,8
tick,0x7ff86ea82704,110609037,0,0x0,8
tick,0x7ff86ea82704,110611071,0,0x0,8
tick,0x7ff86ea82704,110612968,0,0x0,8
tick,0x7ff86ea82704,110615230,0,0x0,8
tick,0x7ff86ea82704,110617101,0,0x0,8
tick,0x7ff86ea82704,110618923,0,0x0,8
tick,0x7ff86ea82704,110621188,0,0x0,8
tick,0x7ff86ea82704,110623093,0,0x0,8
tick,0x7ff86ea82704,110625257,0,0x0,8
tick,0x7ff86ea82704,110627031,0,0x0,8
tick,0x7ff86ea82704,110628969,0,0x0,8
tick,0x7ff86ea82704,110630915,0,0x0,8
tick,0x7ff86ea82704,110633210,0,0x0,8
tick,0x7ff86ea82704,110635165,0,0x0,8
tick,0x7ff86ea82704,110637114,0,0x0,8
tick,0x7ff86ea82704,110639059,0,0x0,8
tick,0x7ff86ea82704,110641073,0,0x0,8
tick,0x7ff86ea82704,110643045,0,0x0,8
tick,0x7ff86ea82704,110644962,0,0x0,8
tick,0x7ff86ea82704,110647219,0,0x0,8
tick,0x7ff86ea82704,110648876,0,0x0,8
tick,0x7ff86ea82704,110651322,0,0x0,8
tick,0x7ff86ea82704,110652938,0,0x0,8
tick,0x7ff86ea82704,110655194,0,0x0,8
tick,0x7ff86ea82704,110656834,0,0x0,8
tick,0x7ff86ea82704,110658910,0,0x0,8
tick,0x7ff86ea82704,110660858,0,0x0,8
tick,0x7ff86ea82704,110662869,0,0x0,8
tick,0x7ff86ea82704,110664952,0,0x0,8
tick,0x7ff86ea82704,110666952,0,0x0,8
tick,0x7ff86ea82704,110668808,0,0x0,8
tick,0x7ff86ea82704,110670889,0,0x0,8
tick,0x7ff86ea82704,110672786,0,0x0,8
tick,0x7ff86ea82704,110674828,0,0x0,8
tick,0x7ff86ea82704,110676826,0,0x0,8
tick,0x7ff86ea82704,110678837,0,0x0,8
tick,0x7ff86ea82704,110680738,0,0x0,8
tick,0x7ff86ea82704,110682861,0,0x0,8
tick,0x7ff86ea82704,110684776,0,0x0,8
tick,0x7ff86ea82704,110686743,0,0x0,8
tick,0x7ff86ea82704,110688812,0,0x0,8
tick,0x7ff86ea82704,110690787,0,0x0,8
tick,0x7ff86ea82704,110692697,0,0x0,8
tick,0x7ff86ea82704,110694728,0,0x0,8
tick,0x7ff86ea82704,110696854,0,0x0,8
tick,0x7ff86ea82704,110698726,0,0x0,8
tick,0x7ff86ea82704,110700644,0,0x0,8
tick,0x7ff86ea82704,110702769,0,0x0,8
tick,0x7ff86ea82704,110704740,0,0x0,8
tick,0x7ff86ea82704,110706704,0,0x0,8
tick,0x7ff86ea82704,110708750,0,0x0,8
tick,0x7ff86ea82704,110710724,0,0x0,8
tick,0x7ff86ea82704,110712748,0,0x0,8
tick,0x7ff86ea82704,110714823,0,0x0,8
tick,0x7ff86ea82704,110716687,0,0x0,8
tick,0x7ff86ea82704,110718752,0,0x0,8
tick,0x7ff86ea82704,110720708,0,0x0,8
tick,0x7ff86ea82704,110722693,0,0x0,8
tick,0x7ff86ea82704,110724666,0,0x0,8
tick,0x7ff86ea82704,110726613,0,0x0,8
tick,0x7ff86ea82704,110728676,0,0x0,8
tick,0x7ff86ea82704,110730677,0,0x0,8
tick,0x7ff86ea82704,110732818,0,0x0,8
tick,0x7ff86ea82704,110734624,0,0x0,8
tick,0x7ff86ea82704,110736717,0,0x0,8
tick,0x7ff86ea82704,110738669,0,0x0,8
tick,0x7ff86ea82704,110740699,0,0x0,8
tick,0x7ff86ea82704,110742572,0,0x0,8
tick,0x7ff86ea82704,110744683,0,0x0,8
tick,0x7ff86ea82704,110746566,0,0x0,8
tick,0x7ff86ea82704,110748618,0,0x0,8
tick,0x7ff86ea82704,110750578,0,0x0,8
tick,0x7ff86ea82704,110752729,0,0x0,8
tick,0x7ff86ea82704,110754608,0,0x0,8
tick,0x7ff86ea82704,110756585,0,0x0,8
tick,0x7ff86ea82704,110758572,0,0x0,8
tick,0x7ff86ea82704,110760594,0,0x0,8
tick,0x7ff86ea82704,110762602,0,0x0,8
tick,0x7ff86ea82704,110764631,0,0x0,8
tick,0x7ff86ea82704,110766641,0,0x0,8
tick,0x7ff86ea82704,110768541,0,0x0,8
tick,0x7ff86ea82704,110770558,0,0x0,8
tick,0x7ff86ea82704,110772592,0,0x0,8
tick,0x7ff86ea82704,110774527,0,0x0,8
tick,0x7ff86ea82704,110776583,0,0x0,8
tick,0x7ff86ea82704,110778529,0,0x0,8
tick,0x7ff86ea82704,110780551,0,0x0,8
tick,0x7ff86ea82704,110782520,0,0x0,8
tick,0x7ff86ea82704,110784534,0,0x0,8
tick,0x7ff86ea82704,110786467,0,0x0,8
tick,0x7ff86ea82704,110788505,0,0x0,8
tick,0x7ff86ea82704,110790478,0,0x0,8
tick,0x7ff86ea82704,110792445,0,0x0,8
tick,0x7ff86ea82704,110794468,0,0x0,8
tick,0x7ff86ea82704,110796462,0,0x0,8
tick,0x7ff86ea82704,110798535,0,0x0,8
tick,0x7ff86ea82704,110800514,0,0x0,8
tick,0x7ff86ea82704,110802499,0,0x0,8
tick,0x7ff86ea82704,110804433,0,0x0,8
tick,0x7ff86ea82704,110806490,0,0x0,8
tick,0x7ff86ea82704,110808427,0,0x0,8
tick,0x7ff86ea82704,110810465,0,0x0,8
tick,0x7ff86ea82704,110812397,0,0x0,8
tick,0x7ff86ea82704,110814451,0,0x0,8
tick,0x7ff86ea82704,110816428,0,0x0,8
tick,0x7ff86ea82704,110818408,0,0x0,8
tick,0x7ff86ea82704,110820431,0,0x0,8
tick,0x7ff86ea82704,110822370,0,0x0,8
tick,0x7ff86ea82704,110824447,0,0x0,8
tick,0x7ff86ea82704,110826314,0,0x0,8
tick,0x7ff86ea82704,110828432,0,0x0,8
tick,0x7ff86ea82704,110830912,0,0x0,8
tick,0x7ff86ea82704,110832360,0,0x0,8
tick,0x7ff86ea82704,110834376,0,0x0,8
tick,0x7ff86ea82704,110836522,0,0x0,8
tick,0x7ff86ea82704,110838281,0,0x0,8
tick,0x7ff86ea82704,110840395,0,0x0,8
tick,0x7ff86ea82704,110842331,0,0x0,8
tick,0x7ff86ea82704,110844393,0,0x0,8
tick,0x7ff86ea82704,110846364,0,0x0,8
tick,0x7ff86ea82704,110848321,0,0x0,8
tick,0x7ff86ea82704,110850356,0,0x0,8
tick,0x7ff86ea82704,110852387,0,0x0,8
tick,0x7ff86ea82704,110854326,0,0x0,8
tick,0x7ff86ea82704,110856264,0,0x0,8
tick,0x7ff86ea82704,110858234,0,0x0,8
tick,0x7ff86ea82704,110860390,0,0x0,8
tick,0x7ff86ea82704,110862333,0,0x0,8
tick,0x7ff86ea82704,110864378,0,0x0,8
tick,0x7ff86ea82704,110866301,0,0x0,8
tick,0x7ff86ea82704,110868327,0,0x0,8
tick,0x7ff86ea82704,110870326,0,0x0,8
tick,0x7ff86ea82704,110872316,0,0x0,8
tick,0x7ff86ea82704,110874314,0,0x0,8
tick,0x7ff86ea82704,110876311,0,0x0,8
tick,0x7ff86ea82704,110878257,0,0x0,8
tick,0x7ff86ea82704,110880172,0,0x0,8
tick,0x7ff86ea82704,110882283,0,0x0,8
tick,0x7ff86ea82704,110884293,0,0x0,8
tick,0x7ff86ea82704,110886200,0,0x0,8
tick,0x7ff86ea82704,110888217,0,0x0,8
tick,0x7ff86ea82704,110890244,0,0x0,8
tick,0x7ff86ea82704,110892233,0,0x0,8
tick,0x7ff86ea82704,110894217,0,0x0,8
tick,0x7ff86ea82704,110896228,0,0x0,8
tick,0x7ff86ea82704,110898198,0,0x0,8
tick,0x7ff86ea82704,110900270,0,0x0,8
tick,0x7ff86ea82704,110902192,0,0x0,8
tick,0x7ff86ea82704,110904214,0,0x0,8
tick,0x7ff86ea82704,110906201,0,0x0,8
tick,0x7ff86ea82704,110908205,0,0x0,8
tick,0x7ff86ea82704,110910129,0,0x0,8
tick,0x7ff86ea82704,110912211,0,0x0,8
tick,0x7ff86ea82704,110914211,0,0x0,8
tick,0x7ff86ea82704,110916173,0,0x0,8
tick,0x7ff86ea82704,110918167,0,0x0,8
tick,0x7ff86ea82704,110920132,0,0x0,8
tick,0x7ff86ea82704,110922236,0,0x0,8
tick,0x7ff86ea82704,110924228,0,0x0,8
tick,0x7ff86ea82704,110926292,0,0x0,8
tick,0x7ff86ea82704,110928216,0,0x0,8
tick,0x7ff86ea82704,110930092,0,0x0,8
tick,0x7ff86ea82704,110932179,0,0x0,8
tick,0x7ff86ea82704,110934193,0,0x0,8
tick,0x7ff86ea82704,110936196,0,0x0,8
tick,0x7ff86ea82704,110938100,0,0x0,8
tick,0x7ff86ea82704,110940213,0,0x0,8
tick,0x7ff86ea82704,110942253,0,0x0,8
tick,0x7ff86ea82704,110944211,0,0x0,8
tick,0x7ff86ea82704,110946119,0,0x0,8
tick,0x7ff86ea82704,110948463,0,0x0,8
tick,0x7ff86ea82704,110950471,0,0x0,8
tick,0x7ff86ea82704,110952347,0,0x0,8
tick,0x7ff86ea82704,110954150,0,0x0,8
tick,0x7ff86ea82704,110956514,0,0x0,8
tick,0x7ff86ea82704,110958083,0,0x0,8
tick,0x7ff86ea82704,110960013,0,0x0,8
tick,0x7ff86ea82704,110962036,0,0x0,8
tick,0x7ff86ea82704,110964086,0,0x0,8
tick,0x7ff86ea82704,110966022,0,0x0,8
tick,0x7ff86ea82704,110968046,0,0x0,8
tick,0x7ff86ea82704,110969942,0,0x0,8
tick,0x7ff86ea82704,110972037,0,0x0,8
tick,0x7ff86ea82704,110973922,0,0x0,8
tick,0x7ff86ea82704,110976016,0,0x0,8
tick,0x7ff86ea82704,110977951,0,0x0,8
tick,0x7ff86ea82704,110979940,0,0x0,8
tick,0x7ff86ea82704,110982053,0,0x0,8
tick,0x7ff86ea82704,110984156,0,0x0,8
tick,0x7ff86ea82704,110985958,0,0x0,8
tick,0x7ff86ea82704,110988037,0,0x0,8
tick,0x7ff86ea82704,110989947,0,0x0,8
tick,0x7ff86ea82704,110991995,0,0x0,8
tick,0x7ff86ea82704,110993983,0,0x0,8
tick,0x7ff86ea82704,110996113,0,0x0,8
tick,0x7ff86ea82704,110997917,0,0x0,8
tick,0x7ff86ea82704,110999950,0,0x0,8
tick,0x7ff86ea82704,111002123,0,0x0,8
tick,0x7ff86ea82704,111004236,0,0x0,8
tick,0x7ff86ea82704,111005937,0,0x0,8
tick,0x7ff86ea82704,111008020,0,0x0,8
tick,0x7ff86ea82704,111009942,0,0x0,8
tick,0x7ff86ea82704,111012041,0,0x0,8
tick,0x7ff86ea82704,111013946,0,0x0,8
tick,0x7ff86ea82704,111016292,0,0x0,8
tick,0x7ff86ea82704,111017935,0,0x0,8
tick,0x7ff86ea82704,111019923,0,0x0,8
tick,0x7ff86ea82704,111021859,0,0x0,8
tick,0x7ff86ea82704,111023831,0,0x0,8
tick,0x7ff86ea82704,111025914,0,0x0,8
tick,0x7ff86ea82704,111027893,0,0x0,8
tick,0x7ff86ea82704,111029958,0,0x0,8
tick,0x7ff86ea82704,111031969,0,0x0,8
tick,0x7ff86ea82704,111033887,0,0x0,8
tick,0x7ff86ea82704,111035876,0,0x0,8
tick,0x7ff86ea82704,111037871,0,0x0,8
tick,0x7ff86ea82704,111039873,0,0x0,8
tick,0x7ff86ea82704,111041839,0,0x0,8
tick,0x7ff86ea82704,111043811,0,0x0,8
tick,0x7ff86ea82704,111045864,0,0x0,8
tick,0x7ff86ea82704,111047831,0,0x0,8
tick,0x7ff86ea82704,111049842,0,0x0,8
tick,0x7ff86ea82704,111051813,0,0x0,8
tick,0x7ff86ea82704,111053819,0,0x0,8
tick,0x7ff86ea82704,111055799,0,0x0,8
tick,0x7ff86ea82704,111057771,0,0x0,8
tick,0x7ff86ea82704,111059798,0,0x0,8
tick,0x7ff86ea82704,111061845,0,0x0,8
tick,0x7ff86ea82704,111063653,0,0x0,8
tick,0x7ff86ea82704,111065898,0,0x0,8
tick,0x7ff86ea82704,111067736,0,0x0,8
tick,0x7ff86ea82704,111069753,0,0x0,8
tick,0x7ff86ea82704,111071747,0,0x0,8
tick,0x7ff86ea82704,111073754,0,0x0,8
tick,0x7ff86ea82704,111075737,0,0x0,8
tick,0x7ff86ea82704,111077732,0,0x0,8
tick,0x7ff86ea82704,111079724,0,0x0,8
tick,0x7ff86ea82704,111081791,0,0x0,8
tick,0x7ff86ea82704,111083756,0,0x0,8
tick,0x7ff86ea82704,111085681,0,0x0,8
tick,0x7ff86ea82704,111087748,0,0x0,8
tick,0x7ff86ea82704,111089676,0,0x0,8
tick,0x7ff86ea82704,111091649,0,0x0,8
tick,0x7ff86ea82704,111093658,0,0x0,8
tick,0x7ff86ea82704,111095605,0,0x0,8
tick,0x7ff86ea82704,111097727,0,0x0,8
tick,0x7ff86ea82704,111099599,0,0x0,8
tick,0x7ff86ea82704,111101682,0,0x0,8
tick,0x7ff86ea82704,111103618,0,0x0,8
tick,0x7ff86ea82704,111105631,0,0x0,8
tick,0x7ff86ea82704,111107634,0,0x0,8
tick,0x7ff86ea82704,111109662,0,0x0,8
tick,0x7ff86ea82704,111111622,0,0x0,8
tick,0x7ff86ea82704,111113695,0,0x0,8
tick,0x7ff86ea82704,111115620,0,0x0,8
tick,0x7ff86ea82704,111117537,0,0x0,8
tick,0x7ff86ea82704,111119713,0,0x0,8
tick,0x7ff86ea82704,111121614,0,0x0,8
tick,0x7ff86ea82704,111123751,0,0x0,8
tick,0x7ff86ea82704,111125622,0,0x0,8
tick,0x7ff86ea82704,111127712,0,0x0,8
tick,0x7ff86ea82704,111129631,0,0x0,8
tick,0x7ff86ea82704,111131652,0,0x0,8
tick,0x7ff86ea82704,111133753,0,0x0,8
tick,0x7ff86ea82704,111135598,0,0x0,8
tick,0x7ff86ea82704,111137627,0,0x0,8
tick,0x7ff86ea82704,111139663,0,0x0,8
tick,0x7ff86ea82704,111141603,0,0x0,8
tick,0x7ff86ea82704,111143573,0,0x0,8
tick,0x7ff86ea82704,111145665,0,0x0,8
tick,0x7ff86ea82704,111147617,0,0x0,8
tick,0x7ff86ea82704,111149596,0,0x0,8
tick,0x7ff86ea82704,111151533,0,0x0,8
tick,0x7ff86ea82704,111153607,0,0x0,8
tick,0x7ff86ea82704,111155525,0,0x0,8
tick,0x7ff86ea82704,111157678,0,0x0,8
tick,0x7ff86ea82704,111159751,0,0x0,8
tick,0x7ff86ea82704,111161766,0,0x0,8
tick,0x7ff86ea82704,111163738,0,0x0,8
tick,0x7ff86ea82704,111165978,0,0x0,8
tick,0x7ff86ea82704,111167565,0,0x0,8
tick,0x7ff86ea82704,111169569,0,0x0,8
tick,0x7ff86ea82704,111171655,0,0x0,8
tick,0x7ff86ea82704,111173640,0,0x0,8
tick,0x7ff86ea82704,111175712,0,0x0,8
tick,0x7ff86ea82704,111177534,0,0x0,8
tick,0x7ff86ea82704,111179532,0,0x0,8
tick,0x7ff86ea82704,111181726,0,0x0,8
tick,0x7ff86ea82704,111183415,0,0x0,8
tick,0x7ff86ea82704,111185672,0,0x0,8
tick,0x7ff86ea82704,111187347,0,0x0,8
tick,0x7ff86ea82704,111189518,0,0x0,8
tick,0x7ff86ea82704,111191588,0,0x0,8
tick,0x7ff86ea82704,111193465,0,0x0,8
tick,0x7ff86ea82704,111195482,0,0x0,8
tick,0x7ff86ea82704,111197494,0,0x0,8
tick,0x7ff86ea82704,111199572,0,0x0,8
tick,0x7ff86ea82704,111201521,0,0x0,8
tick,0x7ff86ea82704,111203357,0,0x0,8
tick,0x7ff86ea82704,111205402,0,0x0,8
tick,0x7ff86ea82704,111207456,0,0x0,8
tick,0x7ff86ea82704,111209407,0,0x0,8
tick,0x7ff86ea82704,111211290,0,0x0,8
tick,0x7ff86ea82704,111213327,0,0x0,8
tick,0x7ff86ea82704,111215291,0,0x0,8
tick,0x7ff86ea82704,111217361,0,0x0,8
tick,0x7ff86ea82704,111219393,0,0x0,8
tick,0x7ff86ea82704,111221328,0,0x0,8
tick,0x7ff86ea82704,111223329,0,0x0,8
tick,0x7ff86ea82704,111225303,0,0x0,8
tick,0x7ff86ea82704,111227320,0,0x0,8
tick,0x7ff86ea82704,111229410,0,0x0,8
tick,0x7ff86ea82704,111231368,0,0x0,8
tick,0x7ff86ea82704,111233332,0,0x0,8
tick,0x7ff86ea82704,111235299,0,0x0,8
tick,0x7ff86ea82704,111237408,0,0x0,8
tick,0x7ff86ea82704,111239287,0,0x0,8
tick,0x7ff86ea82704,111241281,0,0x0,8
tick,0x7ff86ea82704,111243229,0,0x0,8
tick,0x7ff86ea82704,111245223,0,0x0,8
tick,0x7ff86ea82704,111247268,0,0x0,8
tick,0x7ff86ea82704,111249284,0,0x0,8
tick,0x7ff86ea82704,111251288,0,0x0,8
tick,0x7ff86ea82704,111253271,0,0x0,8
tick,0x7ff86ea82704,111255240,0,0x0,8
tick,0x7ff86ea82704,111257278,0,0x0,8
tick,0x7ff86ea82704,111259244,0,0x0,8
tick,0x7ff86ea82704,111261189,0,0x0,8
tick,0x7ff86ea82704,111263219,0,0x0,8
tick,0x7ff86ea82704,111265187,0,0x0,8
tick,0x7ff86ea82704,111267324,0,0x0,8
tick,0x7ff86ea82704,111269370,0,0x0,8
tick,0x7ff86ea82704,111271310,0,0x0,8
tick,0x7ff86ea82704,111273224,0,0x0,8
tick,0x7ff86ea82704,111275297,0,0x0,8
tick,0x7ff86ea82704,111277342,0,0x0,8
tick,0x7ff86ea82704,111279290,0,0x0,8
tick,0x7ff86ea82704,111281142,0,0x0,8
tick,0x7ff86ea82704,111283215,0,0x0,8
tick,0x7ff86ea82704,111285069,0,0x0,8
tick,0x7ff86ea82704,111287166,0,0x0,8
tick,0x7ff86ea82704,111289116,0,0x0,8
tick,0x7ff86ea82704,111291186,0,0x0,8
tick,0x7ff86ea82704,111293287,0,0x0,8
tick,0x7ff86ea82704,111295154,0,0x0,8
tick,0x7ff86ea82704,111297224,0,0x0,8
tick,0x7ff86ea82704,111299178,0,0x0,8
tick,0x7ff86ea82704,111301394,0,0x0,8
tick,0x7ff86ea82704,111303203,0,0x0,8
tick,0x7ff86ea82704,111305155,0,0x0,8
tick,0x7ff86ea82704,111307216,0,0x0,8
tick,0x7ff86ea82704,111309086,0,0x0,8
tick,0x7ff86ea82704,111311167,0,0x0,8
tick,0x7ff86ea82704,111313086,0,0x0,8
tick,0x7ff86ea82704,111315317,0,0x0,8
tick,0x7ff86ea82704,111317134,0,0x0,8
tick,0x7ff86ea82704,111319074,0,0x0,8
tick,0x7ff86ea82704,111320999,0,0x0,8
tick,0x7ff86ea82704,111323170,0,0x0,8
tick,0x7ff86ea82704,111325070,0,0x0,8
tick,0x7ff86ea82704,111327096,0,0x0,8
tick,0x7ff86ea82704,111329010,0,0x0,8
tick,0x7ff86ea82704,111331200,0,0x0,8
tick,0x7ff86ea82704,111333066,0,0x0,8
tick,0x7ff86ea82704,111335203,0,0x0,8
tick,0x7ff86ea82704,111337029,0,0x0,8
tick,0x7ff86ea82704,111339061,0,0x0,8
tick,0x7ff86ea82704,111340998,0,0x0,8
tick,0x7ff86ea82704,111343089,0,0x0,8
tick,0x7ff86ea82704,111345004,0,0x0,8
tick,0x7ff86ea82704,111346904,0,0x0,8
tick,0x7ff86ea82704,111349066,0,0x0,8
tick,0x7ff86ea82704,111351018,0,0x0,8
tick,0x7ff86ea82704,111353017,0,0x0,8
tick,0x7ff86ea82704,111354977,0,0x0,8
tick,0x7ff86ea82704,111357026,0,0x0,8
tick,0x7ff86ea82704,111359226,0,0x0,8
tick,0x7ff86ea82704,111361114,0,0x0,8
tick,0x7ff86ea82704,111362979,0,0x0,8
tick,0x7ff86ea82704,111364869,0,0x0,8
tick,0x7ff86ea82704,111366965,0,0x0,8
tick,0x7ff86ea82704,111368917,0,0x0,8
tick,0x7ff86ea82704,111371029,0,0x0,8
tick,0x7ff86ea82704,111372929,0,0x0,8
tick,0x7ff86ea82704,111374935,0,0x0,8
tick,0x7ff86ea82704,111376930,0,0x0,8
tick,0x7ff86ea82704,111378950,0,0x0,8
tick,0x7ff86ea82704,111380833,0,0x0,8
tick,0x7ff86ea82704,111382923,0,0x0,8
tick,0x7ff86ea82704,111384842,0,0x0,8
tick,0x7ff86ea82704,111386885,0,0x0,8
tick,0x7ff86ea82704,111388865,0,0x0,8
tick,0x7ff86ea82704,111390863,0,0x0,8
tick,0x7ff86ea82704,111392887,0,0x0,8
tick,0x7ff86ea82704,111395045,0,0x0,8
tick,0x7ff86ea82704,111396878,0,0x0,8
tick,0x7ff86ea82704,111398966,0,0x0,8
tick,0x7ff86ea82704,111400832,0,0x0,8
tick,0x7ff86ea82704,111402946,0,0x0,8
tick,0x7ff86ea82704,111404930,0,0x0,8
tick,0x7ff86ea82704,111406894,0,0x0,8
tick,0x7ff86ea82704,111408814,0,0x0,8
tick,0x7ff86ea82704,111410950,0,0x0,8
tick,0x7ff86ea82704,111412838,0,0x0,8
tick,0x7ff86ea82704,111414894,0,0x0,8
tick,0x7ff86ea82704,111416861,0,0x0,8
tick,0x7ff86ea82704,111418818,0,0x0,8
tick,0x7ff86ea82704,111420803,0,0x0,8
tick,0x7ff86ea82704,111422836,0,0x0,8
tick,0x7ff86ea82704,111424829,0,0x0,8
tick,0x7ff86ea82704,111426845,0,0x0,8
tick,0x7ff86ea82704,111428803,0,0x0,8
tick,0x7ff86ea82704,111431369,0,0x0,8
tick,0x7ff86ea82704,111432756,0,0x0,8
tick,0x7ff86ea82704,111434854,0,0x0,8
tick,0x7ff86ea82704,111436730,0,0x0,8
tick,0x7ff86ea82704,111438721,0,0x0,8
tick,0x7ff86ea82704,111440723,0,0x0,8
tick,0x7ff86ea82704,111442765,0,0x0,8
tick,0x7ff86ea82704,111444700,0,0x0,8
tick,0x7ff86ea82704,111446714,0,0x0,8
tick,0x7ff86ea82704,111448691,0,0x0,8
tick,0x7ff86ea82704,111450816,0,0x0,8
tick,0x7ff86ea82704,111452747,0,0x0,8
tick,0x7ff86ea82704,111454694,0,0x0,8
tick,0x7ff86ea82704,111456654,0,0x0,8
tick,0x7ff86ea82704,111458728,0,0x0,8
tick,0x7ff86ea82704,111460734,0,0x0,8
tick,0x7ff86ea82704,111462632,0,0x0,8
tick,0x7ff86ea82704,111464814,0,0x0,8
tick,0x7ff86ea82704,111466698,0,0x0,8
tick,0x7ff86ea82704,111468658,0,0x0,8
tick,0x7ff86ea82704,111470650,0,0x0,8
tick,0x7ff86ea82704,111472717,0,0x0,8
tick,0x7ff86ea82704,111474597,0,0x0,8
tick,0x7ff86ea82704,111476643,0,0x0,8
tick,0x7ff86ea82704,111478719,0,0x0,8
tick,0x7ff86ea82704,111480635,0,0x0,8
tick,0x7ff86ea82704,111482659,0,0x0,8
tick,0x7ff86ea82704,111484666,0,0x0,8
tick,0x7ff86ea82704,111486630,0,0x0,8
tick,0x7ff86ea82704,111488654,0,0x0,8
tick,0x7ff86ea82704,111490595,0,0x0,8
tick,0x7ff86ea82704,111492638,0,0x0,8
tick,0x7ff86ea82704,111494553,0,0x0,8
tick,0x7ff86ea82704,111496833,0,0x0,8
tick,0x7ff86ea82704,111498574,0,0x0,8
tick,0x7ff86ea82704,111500694,0,0x0,8
tick,0x7ff86ea82704,111502611,0,0x0,8
tick,0x7ff86ea82704,111504757,0,0x0,8
tick,0x7ff86ea82704,111506601,0,0x0,8
tick,0x7ff86ea82704,111508662,0,0x0,8
tick,0x7ff86ea82704,111510570,0,0x0,8
tick,0x7ff86ea82704,111512622,0,0x0,8
tick,0x7ff86ea82704,111514548,0,0x0,8
tick,0x7ff86ea82704,111516613,0,0x0,8
tick,0x7ff86ea82704,111518499,0,0x0,8
tick,0x7ff86ea82704,111520471,0,0x0,8
tick,0x7ff86ea82704,111522591,0,0x0,8
tick,0x7ff86ea82704,111524505,0,0x0,8
tick,0x7ff86ea82704,111526559,0,0x0,8
tick,0x7ff86ea82704,111528516,0,0x0,8
tick,0x7ff86ea82704,111530590,0,0x0,8
tick,0x7ff86ea82704,111532447,0,0x0,8
tick,0x7ff86ea82704,111534488,0,0x0,8
tick,0x7ff86ea82704,111536560,0,0x0,8
tick,0x7ff86ea82704,111538478,0,0x0,8
tick,0x7ff86ea82704,111540470,0,0x0,8
tick,0x7ff86ea82704,111542601,0,0x0,8
tick,0x7ff86ea82704,111544523,0,0x0,8
tick,0x7ff86ea82704,111546498,0,0x0,8
tick,0x7ff86ea82704,111548626,0,0x0,8
tick,0x7ff86ea82704,111550476,0,0x0,8
tick,0x7ff86ea82704,111552597,0,0x0,8
tick,0x7ff86ea82704,111554394,0,0x0,8
tick,0x7ff86ea82704,111556396,0,0x0,8
tick,0x7ff86ea82704,111558355,0,0x0,8
tick,0x7ff86ea82704,111560480,0,0x0,8
tick,0x7ff86ea82704,111562399,0,0x0,8
tick,0x7ff86ea82704,111564493,0,0x0,8
tick,0x7ff86ea82704,111566445,0,0x0,8
tick,0x7ff86ea82704,111568567,0,0x0,8
tick,0x7ff86ea82704,111570357,0,0x0,8
tick,0x7ff86ea82704,111572523,0,0x0,8
tick,0x7ff86ea82704,111574440,0,0x0,8
tick,0x7ff86ea82704,111576503,0,0x0,8
tick,0x7ff86ea82704,111578431,0,0x0,8
tick,0x7ff86ea82704,111580521,0,0x0,8
tick,0x7ff86ea82704,111582348,0,0x0,8
tick,0x7ff86ea82704,111584439,0,0x0,8
tick,0x7ff86ea82704,111586434,0,0x0,8
tick,0x7ff86ea82704,111588619,0,0x0,8
tick,0x7ff86ea82704,111590295,0,0x0,8
tick,0x7ff86ea82704,111592543,0,0x0,8
tick,0x7ff86ea82704,111594265,0,0x0,8
tick,0x7ff86ea82704,111596553,0,0x0,8
tick,0x7ff86ea82704,111598413,0,0x0,8
tick,0x7ff86ea82704,111600281,0,0x0,8
tick,0x7ff86ea82704,111602559,0,0x0,8
tick,0x7ff86ea82704,111604297,0,0x0,8
tick,0x7ff86ea82704,111606469,0,0x0,8
tick,0x7ff86ea82704,111608306,0,0x0,8
tick,0x7ff86ea82704,111610398,0,0x0,8
tick,0x7ff86ea82704,111612319,0,0x0,8
tick,0x7ff86ea82704,111614276,0,0x0,8
tick,0x7ff86ea82704,111616402,0,0x0,8
tick,0x7ff86ea82704,111618303,0,0x0,8
tick,0x7ff86ea82704,111620325,0,0x0,8
tick,0x7ff86ea82704,111622312,0,0x0,8
tick,0x7ff86ea82704,111624295,0,0x0,8
tick,0x7ff86ea82704,111626382,0,0x0,8
tick,0x7ff86ea82704,111628351,0,0x0,8
tick,0x7ff86ea82704,111630206,0,0x0,8
tick,0x7ff86ea82704,111632259,0,0x0,8
tick,0x7ff86ea82704,111634356,0,0x0,8
tick,0x7ff86ea82704,111636360,0,0x0,8
tick,0x7ff86ea82704,111638264,0,0x0,8
tick,0x7ff86ea82704,111640196,0,0x0,8
tick,0x7ff86ea82704,111642215,0,0x0,8
tick,0x7ff86ea82704,111644175,0,0x0,8
tick,0x7ff86ea82704,111646153,0,0x0,8
tick,0x7ff86ea82704,111648206,0,0x0,8
tick,0x7ff86ea82704,111650302,0,0x0,8
tick,0x7ff86ea82704,111652221,0,0x0,8
tick,0x7ff86ea82704,111654358,0,0x0,8
tick,0x7ff86ea82704,111656209,0,0x0,8
tick,0x7ff86ea82704,111658161,0,0x0,8
tick,0x7ff86ea82704,111660115,0,0x0,8
tick,0x7ff86ea82704,111662160,0,0x0,8
tick,0x7ff86ea82704,111664426,0,0x0,8
tick,0x7ff86ea82704,111666150,0,0x0,8
tick,0x7ff86ea82704,111668452,0,0x0,8
tick,0x7ff86ea82704,111670169,0,0x0,8
tick,0x7ff86ea82704,111672149,0,0x0,8
tick,0x7ff86ea82704,111674272,0,0x0,8
tick,0x7ff86ea82704,111676128,0,0x0,8
tick,0x7ff86ea82704,111678318,0,0x0,8
tick,0x7ff86ea82704,111680115,0,0x0,8
tick,0x7ff86ea82704,111682139,0,0x0,8
tick,0x7ff86ea82704,111684114,0,0x0,8
tick,0x7ff86ea82704,111686267,0,0x0,8
tick,0x7ff86ea82704,111688136,0,0x0,8
tick,0x7ff86ea82704,111690071,0,0x0,8
tick,0x7ff86ea82704,111692165,0,0x0,8
tick,0x7ff86ea82704,111694153,0,0x0,8
tick,0x7ff86ea82704,111696169,0,0x0,8
tick,0x7ff86ea82704,111698298,0,0x0,8
tick,0x7ff86ea82704,111700112,0,0x0,8
tick,0x7ff86ea82704,111702110,0,0x0,8
tick,0x7ff86ea82704,111704034,0,0x0,8
tick,0x7ff86ea82704,111706183,0,0x0,8
tick,0x7ff86ea82704,111708002,0,0x0,8
tick,0x7ff86ea82704,111710088,0,0x0,8
tick,0x7ff86ea82704,111711992,0,0x0,8
tick,0x7ff86ea82704,111714147,0,0x0,8
tick,0x7ff86ea82704,111715979,0,0x0,8
tick,0x7ff86ea82704,111718150,0,0x0,8
tick,0x7ff86ea82704,111720134,0,0x0,8
tick,0x7ff86ea82704,111721968,0,0x0,8
tick,0x7ff86ea82704,111724106,0,0x0,8
tick,0x7ff86ea82704,111726121,0,0x0,8
tick,0x7ff86ea82704,111728111,0,0x0,8
tick,0x7ff86ea82704,111730031,0,0x0,8
tick,0x7ff86ea82704,111732019,0,0x0,8
tick,0x7ff86ea82704,111733899,0,0x0,8
tick,0x7ff86ea82704,111736105,0,0x0,8
tick,0x7ff86ea82704,111737918,0,0x0,8
tick,0x7ff86ea82704,111740082,0,0x0,8
tick,0x7ff86ea82704,111741886,0,0x0,8
tick,0x7ff86ea82704,111743926,0,0x0,8
tick,0x7ff86ea82704,111746153,0,0x0,8
tick,0x7ff86ea82704,111748095,0,0x0,8
tick,0x7ff86ea82704,111749975,0,0x0,8
tick,0x7ff86ea82704,111751930,0,0x0,8
tick,0x7ff86ea82704,111754025,0,0x0,8
tick,0x7ff86ea82704,111755949,0,0x0,8
tick,0x7ff86ea82704,111757975,0,0x0,8
tick,0x7ff86ea82704,111759872,0,0x0,8
tick,0x7ff86ea82704,111762066,0,0x0,8
tick,0x7ff86ea82704,111763871,0,0x0,8
tick,0x7ff86ea82704,111766011,0,0x0,8
tick,0x7ff86ea82704,111767911,0,0x0,8
tick,0x7ff86ea82704,111770002,0,0x0,8
tick,0x7ff86ea82704,111771864,0,0x0,8
tick,0x7ff86ea82704,111773944,0,0x0,8
tick,0x7ff86ea82704,111775808,0,0x0,8
tick,0x7ff86ea82704,111778046,0,0x0,8
tick,0x7ff86ea82704,111779930,0,0x0,8
tick,0x7ff86ea82704,111781951,0,0x0,8
tick,0x7ff86ea82704,111783958,0,0x0,8
tick,0x7ff86ea82704,111785925,0,0x0,8
tick,0x7ff86ea82704,111788010,0,0x0,8
tick,0x7ff86ea82704,111790106,0,0x0,8
tick,0x7ff86ea82704,111791961,0,0x0,8
tick,0x7ff86ea82704,111794014,0,0x0,8
tick,0x7ff86ea82704,111795910,0,0x0,8
tick,0x7ff86ea82704,111797930,0,0x0,8
tick,0x7ff86ea82704,111800494,0,0x0,8
tick,0x7ff86ea82704,111801757,0,0x0,8
tick,0x7ff86ea82704,111803837,0,0x0,8
tick,0x7ff86ea82704,111805833,0,0x0,8
tick,0x7ff86ea82704,111807825,0,0x0,8
tick,0x7ff86ea82704,111809726,0,0x0,8
tick,0x7ff86ea82704,111811850,0,0x0,8
tick,0x7ff86ea82704,111813707,0,0x0,8
tick,0x7ff86ea82704,111816488,0,0x0,8
tick,0x7ff86ea82704,111817826,0,0x0,8
tick,0x7ff86ea82704,111819949,0,0x0,8
tick,0x7ff86ea82704,111821815,0,0x0,8
tick,0x7ff86ea82704,111823964,0,0x0,8
tick,0x7ff86ea82704,111825866,0,0x0,8
tick,0x7ff86ea82704,111827963,0,0x0,8
tick,0x7ff86ea82704,111829898,0,0x0,8
tick,0x7ff86ea82704,111832315,0,0x0,8
tick,0x7ff86ea82704,111833905,0,0x0,8
tick,0x7ff86ea82704,111835958,0,0x0,8
tick,0x7ff86ea82704,111837874,0,0x0,8
tick,0x7ff86ea82704,111840010,0,0x0,8
tick,0x7ff86ea82704,111841796,0,0x0,8
tick,0x7ff86ea82704,111843995,0,0x0,8
tick,0x7ff86ea82704,111845936,0,0x0,8
tick,0x7ff86ea82704,111847828,0,0x0,8
tick,0x7ff86ea82704,111849786,0,0x0,8
tick,0x7ff86ea82704,111851757,0,0x0,8
tick,0x7ff86ea82704,111853738,0,0x0,8
tick,0x7ff86ea82704,111855790,0,0x0,8
tick,0x7ff86ea82704,111857765,0,0x0,8
tick,0x7ff86ea82704,111859767,0,0x0,8
tick,0x7ff86ea82704,111861865,0,0x0,8
tick,0x7ff86ea82704,111863767,0,0x0,8
tick,0x7ff86ea82704,111866161,0,0x0,8
tick,0x7ff86ea82704,111867660,0,0x0,8
tick,0x7ff86ea82704,111869744,0,0x0,8
tick,0x7ff86ea82704,111871649,0,0x0,8
tick,0x7ff86ea82704,111873742,0,0x0,8
tick,0x7ff86ea82704,111875636,0,0x0,8
tick,0x7ff86ea82704,111877943,0,0x0,8
tick,0x7ff86ea82704,111879677,0,0x0,8
tick,0x7ff86ea82704,111881918,0,0x0,8
tick,0x7ff86ea82704,111883695,0,0x0,8
tick,0x7ff86ea82704,111885608,0,0x0,8
tick,0x7ff86ea82704,111887666,0,0x0,8
tick,0x7ff86ea82704,111889566,0,0x0,8
tick,0x7ff86ea82704,111891941,0,0x0,8
tick,0x7ff86ea82704,111893599,0,0x0,8
tick,0x7ff86ea82704,111895556,0,0x0,8
tick,0x7ff86ea82704,111897580,0,0x0,8
tick,0x7ff86ea82704,111899609,0,0x0,8
tick,0x7ff86ea82704,111901570,0,0x0,8
tick,0x7ff86ea82704,111903482,0,0x0,8
tick,0x7ff86ea82704,111905558,0,0x0,8
tick,0x7ff86ea82704,111907484,0,0x0,8
tick,0x7ff86ea82704,111909576,0,0x0,8
tick,0x7ff86ea82704,111911411,0,0x0,8
tick,0x7ff86ea82704,111913526,0,0x0,8
tick,0x7ff86ea82704,111915463,0,0x0,8
tick,0x7ff86ea82704,111917489,0,0x0,8
tick,0x7ff86ea82704,111919472,0,0x0,8
tick,0x7ff86ea82704,111921680,0,0x0,8
tick,0x7ff86ea82704,111923576,0,0x0,8
tick,0x7ff86ea82704,111925511,0,0x0,8
tick,0x7ff86ea82704,111927446,0,0x0,8
tick,0x7ff86ea82704,111929765,0,0x0,8
tick,0x7ff86ea82704,111932138,0,0x0,8
tick,0x7ff86ea82704,111933651,0,0x0,8
tick,0x7ff86ea82704,111935808,0,0x0,8
tick,0x7ff86ea82704,111937532,0,0x0,8
tick,0x7ff86ea82704,111939702,0,0x0,8
tick,0x7ff86ea82704,111941447,0,0x0,8
tick,0x7ff86ea82704,111943401,0,0x0,8
tick,0x7ff86ea82704,111945468,0,0x0,8
tick,0x7ff86ea82704,111947475,0,0x0,8
tick,0x7ff86ea82704,111949567,0,0x0,8
tick,0x7ff86ea82704,111951365,0,0x0,8
tick,0x7ff86ea82704,111953559,0,0x0,8
tick,0x7ff86ea82704,111955386,0,0x0,8
tick,0x7ff86ea82704,111957401,0,0x0,8
tick,0x7ff86ea82704,111959544,0,0x0,8
tick,0x7ff86ea82704,111961659,0,0x0,8
tick,0x7ff86ea82704,111963621,0,0x0,8
tick,0x7ff86ea82704,111965610,0,0x0,8
tick,0x7ff86ea82704,111967570,0,0x0,8
tick,0x7ff86ea82704,111969350,0,0x0,8
tick,0x7ff86ea82704,111971418,0,0x0,8
tick,0x7ff86ea82704,111973458,0,0x0,8
tick,0x7ff86ea82704,111975300,0,0x0,8
tick,0x7ff86ea82704,111977491,0,0x0,8
tick,0x7ff86ea82704,111979305,0,0x0,8
tick,0x7ff86ea82704,111981352,0,0x0,8
tick,0x7ff86ea82704,111983410,0,0x0,8
tick,0x7ff86ea82704,111985580,0,0x0,8
tick,0x7ff86ea82704,111987299,0,0x0,8
tick,0x7ff86ea82704,111989404,0,0x0,8
tick,0x7ff86ea82704,111991256,0,0x0,8
tick,0x7ff86ea82704,111993501,0,0x0,8
tick,0x7ff86ea82704,111995216,0,0x0,8
tick,0x7ff86ea82704,111997372,0,0x0,8
tick,0x7ff86ea82704,111999294,0,0x0,8
tick,0x7ff86ea82704,112001592,0,0x0,8
tick,0x7ff86ea82704,112003201,0,0x0,8
tick,0x7ff86ea82704,112005564,0,0x0,8
tick,0x7ff86ea82704,112007333,0,0x0,8
tick,0x7ff86ea82704,112009331,0,0x0,8
tick,0x7ff86ea82704,112011580,0,0x0,8
tick,0x7ff86ea82704,112013281,0,0x0,8
tick,0x7ff86ea82704,112015374,0,0x0,8
tick,0x7ff86ea82704,112017432,0,0x0,8
tick,0x7ff86ea82704,112019427,0,0x0,8
tick,0x7ff86ea82704,112021500,0,0x0,8
tick,0x7ff86ea82704,112023227,0,0x0,8
tick,0x7ff86ea82704,112025197,0,0x0,8
tick,0x7ff86ea82704,112027300,0,0x0,8
tick,0x7ff86ea82704,112029266,0,0x0,8
tick,0x7ff86ea82704,112031643,0,0x0,8
tick,0x7ff86ea82704,112033221,0,0x0,8
tick,0x7ff86ea82704,112035265,0,0x0,8
tick,0x7ff86ea82704,112037143,0,0x0,8
tick,0x7ff86ea82704,112039174,0,0x0,8
tick,0x7ff86ea82704,112041230,0,0x0,8
tick,0x7ff86ea82704,112043209,0,0x0,8
tick,0x7ff86ea82704,112045269,0,0x0,8
tick,0x7ff86ea82704,112047187,0,0x0,8
tick,0x7ff86ea82704,112049223,0,0x0,8
tick,0x7ff86ea82704,112051199,0,0x0,8
tick,0x7ff86ea82704,112053132,0,0x0,8
tick,0x7ff86ea82704,112055129,0,0x0,8
tick,0x7ff86ea82704,112057239,0,0x0,8
tick,0x7ff86ea82704,112059073,0,0x0,8
tick,0x7ff86ea82704,112061038,0,0x0,8
tick,0x7ff86ea82704,112063144,0,0x0,8
tick,0x7ff86ea82704,112065114,0,0x0,8
tick,0x7ff86ea82704,112067218,0,0x0,8
tick,0x7ff86ea82704,112069080,0,0x0,8
tick,0x7ff86ea82704,112071073,0,0x0,8
tick,0x7ff86ea82704,112073181,0,0x0,8
tick,0x7ff86ea82704,112075102,0,0x0,8
tick,0x7ff86ea82704,112077023,0,0x0,8
tick,0x7ff86ea82704,112079110,0,0x0,8
tick,0x7ff86ea82704,112081071,0,0x0,8
tick,0x7ff86ea82704,112083096,0,0x0,8
tick,0x7ff86ea82704,112084998,0,0x0,8
tick,0x7ff86ea82704,112087154,0,0x0,8
tick,0x7ff86ea82704,112089013,0,0x0,8
tick,0x7ff86ea82704,112090955,0,0x0,8
tick,0x7ff86ea82704,112093030,0,0x0,8
tick,0x7ff86ea82704,112094958,0,0x0,8
tick,0x7ff86ea82704,112096975,0,0x0,8
tick,0x7ff86ea82704,112098909,0,0x0,8
tick,0x7ff86ea82704,112101040,0,0x0,8
tick,0x7ff86ea82704,112102976,0,0x0,8
tick,0x7ff86ea82704,112104974,0,0x0,8
tick,0x7ff86ea82704,112106920,0,0x0,8
tick,0x7ff86ea82704,112109061,0,0x0,8
tick,0x7ff86ea82704,112110910,0,0x0,8
tick,0x7ff86ea82704,112112945,0,0x0,8
tick,0x7ff86ea82704,112114866,0,0x0,8
tick,0x7ff86ea82704,112117068,0,0x0,8
tick,0x7ff86ea82704,112118968,0,0x0,8
tick,0x7ff86ea82704,112121007,0,0x0,8
tick,0x7ff86ea82704,112122893,0,0x0,8
tick,0x7ff86ea82704,112125011,0,0x0,8
tick,0x7ff86ea82704,112127003,0,0x0,8
tick,0x7ff86ea82704,112129162,0,0x0,8
tick,0x7ff86ea82704,112130954,0,0x0,8
tick,0x7ff86ea82704,112132971,0,0x0,8
tick,0x7ff86ea82704,112135005,0,0x0,8
tick,0x7ff86ea82704,112136979,0,0x0,8
tick,0x7ff86ea82704,112138968,0,0x0,8
tick,0x7ff86ea82704,112141004,0,0x0,8
tick,0x7ff86ea82704,112142804,0,0x0,8
tick,0x7ff86ea82704,112144963,0,0x0,8
tick,0x7ff86ea82704,112146897,0,0x0,8
tick,0x7ff86ea82704,112148885,0,0x0,8
tick,0x7ff86ea82704,112150797,0,0x0,8
tick,0x7ff86ea82704,112152921,0,0x0,8
tick,0x7ff86ea82704,112154836,0,0x0,8
tick,0x7ff86ea82704,112156909,0,0x0,8
tick,0x7ff86ea82704,112158813,0,0x0,8
tick,0x7ff86ea82704,112161115,0,0x0,8
tick,0x7ff86ea82704,112162895,0,0x0,8
tick,0x7ff86ea82704,112164961,0,0x0,8
tick,0x7ff86ea82704,112166843,0,0x0,8
tick,0x7ff86ea82704,112168913,0,0x0,8
tick,0x7ff86ea82704,112170924,0,0x0,8
tick,0x7ff86ea82704,112172839,0,0x0,8
tick,0x7ff86ea82704,112174909,0,0x0,8
tick,0x7ff86ea82704,112176891,0,0x0,8
tick,0x7ff86ea82704,112178833,0,0x0,8
tick,0x7ff86ea82704,112180840,0,0x0,8
tick,0x7ff86ea82704,112182896,0,0x0,8
tick,0x7ff86ea82704,112184876,0,0x0,8
tick,0x7ff86ea82704,112186881,0,0x0,8
tick,0x7ff86ea82704,112188720,0,0x0,8
tick,0x7ff86ea82704,112190695,0,0x0,8
tick,0x7ff86ea82704,112192895,0,0x0,8
tick,0x7ff86ea82704,112194798,0,0x0,8
tick,0x7ff86ea82704,112196754,0,0x0,8
tick,0x7ff86ea82704,112198782,0,0x0,8
tick,0x7ff86ea82704,112200825,0,0x0,8
tick,0x7ff86ea82704,112202706,0,0x0,8
tick,0x7ff86ea82704,112205032,0,0x0,8
tick,0x7ff86ea82704,112206698,0,0x0,8
tick,0x7ff86ea82704,112208739,0,0x0,8
tick,0x7ff86ea82704,112210624,0,0x0,8
tick,0x7ff86ea82704,112212667,0,0x0,8
tick,0x7ff86ea82704,112214713,0,0x0,8
tick,0x7ff86ea82704,112216692,0,0x0,8
tick,0x7ff86ea82704,112218657,0,0x0,8
tick,0x7ff86ea82704,112220696,0,0x0,8
tick,0x7ff86ea82704,112222667,0,0x0,8
tick,0x7ff86ea82704,112224743,0,0x0,8
tick,0x7ff86ea82704,112226718,0,0x0,8
tick,0x7ff86ea82704,112228796,0,0x0,8
tick,0x7ff86ea82704,112230596,0,0x0,8
tick,0x7ff86ea82704,112232810,0,0x0,8
tick,0x7ff86ea82704,112234645,0,0x0,8
tick,0x7ff86ea82704,112236806,0,0x0,8
tick,0x7ff86ea82704,112238686,0,0x0,8
tick,0x7ff86ea82704,112240673,0,0x0,8
tick,0x7ff86ea82704,112242528,0,0x0,8
tick,0x7ff86ea82704,112244668,0,0x0,8
tick,0x7ff86ea82704,112246499,0,0x0,8
tick,0x7ff86ea82704,112248738,0,0x0,8
tick,0x7ff86ea82704,112250578,0,0x0,8
tick,0x7ff86ea82704,112252667,0,0x0,8
tick,0x7ff86ea82704,112254588,0,0x0,8
tick,0x7ff86ea82704,112256708,0,0x0,8
tick,0x7ff86ea82704,112258576,0,0x0,8
tick,0x7ff86ea82704,112260634,0,0x0,8
tick,0x7ff86ea82704,112262606,0,0x0,8
tick,0x7ff86ea82704,112264585,0,0x0,8
tick,0x7ff86ea82704,112266582,0,0x0,8
tick,0x7ff86ea82704,112268657,0,0x0,8
tick,0x7ff86ea82704,112270529,0,0x0,8
tick,0x7ff86ea82704,112272587,0,0x0,8
tick,0x7ff86ea82704,112274482,0,0x0,8
tick,0x7ff86ea82704,112276515,0,0x0,8
tick,0x7ff86ea82704,112278614,0,0x0,8
tick,0x7ff86ea82704,112280503,0,0x0,8
tick,0x7ff86ea82704,112282541,0,0x0,8
tick,0x7ff86ea82704,112284587,0,0x0,8
tick,0x7ff86ea82704,112286465,0,0x0,8
tick,0x7ff86ea82704,112288498,0,0x0,8
tick,0x7ff86ea82704,112290451,0,0x0,8
tick,0x7ff86ea82704,112292474,0,0x0,8
tick,0x7ff86ea82704,112294408,0,0x0,8
tick,0x7ff86ea82704,112296556,0,0x0,8
tick,0x7ff86ea82704,112298601,0,0x0,8
tick,0x7ff86ea82704,112300421,0,0x0,8
tick,0x7ff86ea82704,112302501,0,0x0,8
tick,0x7ff86ea82704,112304421,0,0x0,8
tick,0x7ff86ea82704,112306397,0,0x0,8
tick,0x7ff86ea82704,112308408,0,0x0,8
tick,0x7ff86ea82704,112310461,0,0x0,8
tick,0x7ff86ea82704,112312461,0,0x0,8
tick,0x7ff86ea82704,112314405,0,0x0,8
tick,0x7ff86ea82704,112316386,0,0x0,8
tick,0x7ff86ea82704,112318387,0,0x0,8
tick,0x7ff86ea82704,112320502,0,0x0,8
tick,0x7ff86ea82704,112322462,0,0x0,8
tick,0x7ff86ea82704,112324409,0,0x0,8
tick,0x7ff86ea82704,112326508,0,0x0,8
tick,0x7ff86ea82704,112328330,0,0x0,8
tick,0x7ff86ea82704,112330500,0,0x0,8
tick,0x7ff86ea82704,112332365,0,0x0,8
tick,0x7ff86ea82704,112334418,0,0x0,8
tick,0x7ff86ea82704,112336426,0,0x0,8
tick,0x7ff86ea82704,112338418,0,0x0,8
tick,0x7ff86ea82704,112340430,0,0x0,8
tick,0x7ff86ea82704,112342432,0,0x0,8
tick,0x7ff86ea82704,112344309,0,0x0,8
tick,0x7ff86ea82704,112346614,0,0x0,8
tick,0x7ff86ea82704,112348413,0,0x0,8
tick,0x7ff86ea82704,112350348,0,0x0,8
tick,0x7ff86ea82704,112352425,0,0x0,8
tick,0x7ff86ea82704,112354585,0,0x0,8
tick,0x7ff86ea82704,112356721,0,0x0,8
tick,0x7ff86ea82704,112358262,0,0x0,8
tick,0x7ff86ea82704,112360400,0,0x0,8
tick,0x7ff86ea82704,112362379,0,0x0,8
tick,0x7ff86ea82704,112364263,0,0x0,8
tick,0x7ff86ea82704,112366598,0,0x0,8
tick,0x7ff86ea82704,112368290,0,0x0,8
tick,0x7ff86ea82704,112370410,0,0x0,8
tick,0x7ff86ea82704,112372214,0,0x0,8
tick,0x7ff86ea82704,112374257,0,0x0,8
tick,0x7ff86ea82704,112376273,0,0x0,8
tick,0x7ff86ea82704,112378308,0,0x0,8
tick,0x7ff86ea82704,112380414,0,0x0,8
tick,0x7ff86ea82704,112382302,0,0x0,8
tick,0x7ff86ea82704,112384281,0,0x0,8
tick,0x7ff86ea82704,112386302,0,0x0,8
tick,0x7ff86ea82704,112388274,0,0x0,8
tick,0x7ff86ea82704,112390271,0,0x0,8
tick,0x7ff86ea82704,112392286,0,0x0,8
tick,0x7ff86ea82704,112394276,0,0x0,8
tick,0x7ff86ea82704,112396377,0,0x0,8
tick,0x7ff86ea82704,112398269,0,0x0,8
tick,0x7ff86ea82704,112400334,0,0x0,8
tick,0x7ff86ea82704,112402144,0,0x0,8
tick,0x7ff86ea82704,112404258,0,0x0,8
tick,0x7ff86ea82704,112406137,0,0x0,8
tick,0x7ff86ea82704,112408339,0,0x0,8
tick,0x7ff86ea82704,112410094,0,0x0,8
tick,0x7ff86ea82704,112412169,0,0x0,8
tick,0x7ff86ea82704,112414235,0,0x0,8
tick,0x7ff86ea82704,112416273,0,0x0,8
tick,0x7ff86ea82704,112418226,0,0x0,8
tick,0x7ff86ea82704,112420506,0,0x0,8
tick,0x7ff86ea82704,112422345,0,0x0,8
tick,0x7ff86ea82704,112424589,0,0x0,8
tick,0x7ff86ea82704,112426221,0,0x0,8
tick,0x7ff86ea82704,112428181,0,0x0,8
tick,0x7ff86ea82704,112430521,0,0x0,8
tick,0x7ff86ea82704,112432538,0,0x0,8
tick,0x7ff86ea82704,112434210,0,0x0,8
tick,0x7ff86ea82704,112436135,0,0x0,8
tick,0x7ff86ea82704,112438119,0,0x0,8
tick,0x7ff86ea82704,112440099,0,0x0,8
tick,0x7ff86ea82704,112442181,0,0x0,8
tick,0x7ff86ea82704,112444103,0,0x0,8
tick,0x7ff86ea82704,112446787,0,0x0,8
tick,0x7ff86ea82704,112448445,0,0x0,8
tick,0x7ff86ea82704,112450394,0,0x0,8
tick,0x7ff86ea82704,112452078,0,0x0,8
tick,0x7ff86ea82704,112454204,0,0x0,8
tick,0x7ff86ea82704,112456041,0,0x0,8
tick,0x7ff86ea82704,112458060,0,0x0,8
tick,0x7ff86ea82704,112460205,0,0x0,8
tick,0x7ff86ea82704,112462094,0,0x0,8
tick,0x7ff86ea82704,112464220,0,0x0,8
tick,0x7ff86ea82704,112465980,0,0x0,8
tick,0x7ff86ea82704,112468370,0,0x0,8
tick,0x7ff86ea82704,112470173,0,0x0,8
tick,0x7ff86ea82704,112472058,0,0x0,8
tick,0x7ff86ea82704,112473977,0,0x0,8
tick,0x7ff86ea82704,112476103,0,0x0,8
tick,0x7ff86ea82704,112477924,0,0x0,8
tick,0x7ff86ea82704,112480102,0,0x0,8
tick,0x7ff86ea82704,112482087,0,0x0,8
tick,0x7ff86ea82704,112484043,0,0x0,8
tick,0x7ff86ea82704,112486079,0,0x0,8
tick,0x7ff86ea82704,112487923,0,0x0,8
tick,0x7ff86ea82704,112489948,0,0x0,8
tick,0x7ff86ea82704,112491919,0,0x0,8
tick,0x7ff86ea82704,112493998,0,0x0,8
tick,0x7ff86ea82704,112495919,0,0x0,8
tick,0x7ff86ea82704,112497970,0,0x0,8
tick,0x7ff86ea82704,112499971,0,0x0,8
tick,0x7ff86ea82704,112501818,0,0x0,8
tick,0x7ff86ea82704,112504070,0,0x0,8
tick,0x7ff86ea82704,112505874,0,0x0,8
tick,0x7ff86ea82704,112508101,0,0x0,8
tick,0x7ff86ea82704,112510027,0,0x0,8
tick,0x7ff86ea82704,112512079,0,0x0,8
tick,0x7ff86ea82704,112513862,0,0x0,8
tick,0x7ff86ea82704,112515941,0,0x0,8
tick,0x7ff86ea82704,112517809,0,0x0,8
tick,0x7ff86ea82704,112519988,0,0x0,8
tick,0x7ff86ea82704,112521809,0,0x0,8
tick,0x7ff86ea82704,112523963,0,0x0,8
tick,0x7ff86ea82704,112525813,0,0x0,8
tick,0x7ff86ea82704,112527841,0,0x0,8
tick,0x7ff86ea82704,112529967,0,0x0,8
tick,0x7ff86ea82704,112531832,0,0x0,8
tick,0x7ff86ea82704,112533821,0,0x0,8
tick,0x7ff86ea82704,112535872,0,0x0,8
tick,0x7ff86ea82704,112537866,0,0x0,8
tick,0x7ff86ea82704,112539877,0,0x0,8
tick,0x7ff86ea82704,112541840,0,0x0,8
tick,0x7ff86ea82704,112543826,0,0x0,8
tick,0x7ff86ea82704,112545994,0,0x0,8
tick,0x7ff86ea82704,112547947,0,0x0,8
tick,0x7ff86ea82704,112549875,0,0x0,8
tick,0x7ff86ea82704,112552035,0,0x0,8
tick,0x7ff86ea82704,112554089,0,0x0,8
tick,0x7ff86ea82704,112555842,0,0x0,8
tick,0x7ff86ea82704,112558162,0,0x0,8
tick,0x7ff86ea82704,112560062,0,0x0,8
tick,0x7ff86ea82704,112561846,0,0x0,8
tick,0x7ff86ea82704,112563826,0,0x0,8
tick,0x7ff86ea82704,112565690,0,0x0,8
tick,0x7ff86ea82704,112568043,0,0x0,8
tick,0x7ff86ea82704,112569704,0,0x0,8
tick,0x7ff86ea82704,112571776,0,0x0,8
tick,0x7ff86ea82704,112573767,0,0x0,8
tick,0x7ff86ea82704,112575843,0,0x0,8
tick,0x7ff86ea82704,112577675,0,0x0,8
tick,0x7ff86ea82704,112579792,0,0x0,8
tick,0x7ff86ea82704,112581711,0,0x0,8
tick,0x7ff86ea82704,112583881,0,0x0,8
tick,0x7ff86ea82704,112585690,0,0x0,8
tick,0x7ff86ea82704,112587711,0,0x0,8
tick,0x7ff86ea82704,112589648,0,0x0,8
tick,0x7ff86ea82704,112591805,0,0x0,8
tick,0x7ff86ea82704,112593769,0,0x0,8
tick,0x7ff86ea82704,112595792,0,0x0,8
tick,0x7ff86ea82704,112597697,0,0x0,8
tick,0x7ff86ea82704,112599985,0,0x0,8
tick,0x7ff86ea82704,112601742,0,0x0,8
tick,0x7ff86ea82704,112603729,0,0x0,8
tick,0x7ff86ea82704,112605698,0,0x0,8
tick,0x7ff86ea82704,112607775,0,0x0,8
tick,0x7ff86ea82704,112610003,0,0x0,8
tick,0x7ff86ea82704,112611705,0,0x0,8
tick,0x7ff86ea82704,112613692,0,0x0,8
tick,0x7ff86ea82704,112615825,0,0x0,8
tick,0x7ff86ea82704,112617664,0,0x0,8
tick,0x7ff86ea82704,112619631,0,0x0,8
tick,0x7ff86ea82704,112621644,0,0x0,8
tick,0x7ff86ea82704,112623836,0,0x0,8
tick,0x7ff86ea82704,112625768,0,0x0,8
tick,0x7ff86ea82704,112627648,0,0x0,8
tick,0x7ff86ea82704,112629680,0,0x0,8
tick,0x7ff86ea82704,112632094,0,0x0,8
tick,0x7ff86ea82704,112633549,0,0x0,8
tick,0x7ff86ea82704,112636957,0,0x0,8
tick,0x7ff86ea82704,112637615,0,0x0,8
tick,0x7ff86ea82704,112639564,0,0x0,8
tick,0x7ff86ea82704,112641507,0,0x0,8
tick,0x7ff86ea82704,112643546,0,0x0,8
tick,0x7ff86ea82704,112645517,0,0x0,8
tick,0x7ff86ea82704,112647534,0,0x0,8
tick,0x7ff86ea82704,112649653,0,0x0,8
tick,0x7ff86ea82704,112651568,0,0x0,8
tick,0x7ff86ea82704,112653530,0,0x0,8
tick,0x7ff86ea82704,112656287,0,0x0,8
tick,0x7ff86ea82704,112657560,0,0x0,8
tick,0x7ff86ea82704,112659872,0,0x0,8
tick,0x7ff86ea82704,112661555,0,0x0,8
tick,0x7ff86ea82704,112663772,0,0x0,8
tick,0x7ff86ea82704,112665843,0,0x0,8
tick,0x7ff86ea82704,112667523,0,0x0,8
tick,0x7ff86ea82704,112669854,0,0x0,8
tick,0x7ff86ea82704,112671889,0,0x0,8
tick,0x7ff86ea82704,112674352,0,0x0,8
tick,0x7ff86ea82704,112675671,0,0x0,8
tick,0x7ff86ea82704,112677713,0,0x0,8
tick,0x7ff86ea82704,112679490,0,0x0,8
tick,0x7ff86ea82704,112680779,0,0x0,8
tick,0x7ff86ea82704,112682697,0,0x0,8
tick,0x7ff86ea82704,112684564,0,0x0,8
tick,0x7ff86ea82704,112686452,0,0x0,8
tick,0x7ff86ea82704,112688613,0,0x0,8
tick,0x7ff86ea82704,112690506,0,0x0,8
tick,0x7ff86ea82704,112692576,0,0x0,8
tick,0x7ff86ea82704,112694555,0,0x0,8
tick,0x7ff86ea82704,112696458,0,0x0,8
tick,0x7ff86ea82704,112698512,0,0x0,8
tick,0x7ff86ea82704,112700476,0,0x0,8
tick,0x7ff86ea82704,112702498,0,0x0,8
tick,0x7ff86ea82704,112704479,0,0x0,8
tick,0x7ff86ea82704,112706599,0,0x0,8
tick,0x7ff86ea82704,112708412,0,0x0,8
tick,0x7ff86ea82704,112710501,0,0x0,8
tick,0x7ff86ea82704,112712432,0,0x0,8
tick,0x7ff86ea82704,112714607,0,0x0,8
tick,0x7ff86ea82704,112716653,0,0x0,8
tick,0x7ff86ea82704,112718593,0,0x0,8
tick,0x7ff86ea82704,112720564,0,0x0,8
tick,0x7ff86ea82704,112722494,0,0x0,8
tick,0x7ff86ea82704,112724397,0,0x0,8
tick,0x7ff86ea82704,112726366,0,0x0,8
tick,0x7ff86ea82704,112728417,0,0x0,8
tick,0x7ff86ea82704,112730503,0,0x0,8
tick,0x7ff86ea82704,112732360,0,0x0,8
tick,0x7ff86ea82704,112734470,0,0x0,8
tick,0x7ff86ea82704,112736386,0,0x0,8
tick,0x7ff86ea82704,112738425,0,0x0,8
tick,0x7ff86ea82704,112740379,0,0x0,8
tick,0x7ff86ea82704,112742498,0,0x0,8
tick,0x7ff86ea82704,112744295,0,0x0,8
tick,0x7ff86ea82704,112746520,0,0x0,8
tick,0x7ff86ea82704,112748412,0,0x0,8
tick,0x7ff86ea82704,112750482,0,0x0,8
tick,0x7ff86ea82704,112752338,0,0x0,8
tick,0x7ff86ea82704,112754353,0,0x0,8
tick,0x7ff86ea82704,112756425,0,0x0,8
tick,0x7ff86ea82704,112758399,0,0x0,8
tick,0x7ff86ea82704,112760353,0,0x0,8
tick,0x7ff86ea82704,112762347,0,0x0,8
tick,0x7ff86ea82704,112764341,0,0x0,8
tick,0x7ff86ea82704,112766392,0,0x0,8
tick,0x7ff86ea82704,112768334,0,0x0,8
tick,0x7ff86ea82704,112770392,0,0x0,8
tick,0x7ff86ea82704,112772266,0,0x0,8
tick,0x7ff86ea82704,112774337,0,0x0,8
tick,0x7ff86ea82704,112776401,0,0x0,8
tick,0x7ff86ea82704,112778554,0,0x0,8
tick,0x7ff86ea82704,112780172,0,0x0,8
tick,0x7ff86ea82704,112782356,0,0x0,8
tick,0x7ff86ea82704,112784288,0,0x0,8
tick,0x7ff86ea82704,112786268,0,0x0,8
tick,0x7ff86ea82704,112788244,0,0x0,8
tick,0x7ff86ea82704,112790332,0,0x0,8
tick,0x7ff86ea82704,112792314,0,0x0,8
tick,0x7ff86ea82704,112794389,0,0x0,8
tick,0x7ff86ea82704,112796064,0,0x0,8
tick,0x7ff86ea82704,112798467,0,0x0,8
tick,0x7ff86ea82704,112800285,0,0x0,8
tick,0x7ff86ea82704,112802182,0,0x0,8
tick,0x7ff86ea82704,112804119,0,0x0,8
tick,0x7ff86ea82704,112806251,0,0x0,8
tick,0x7ff86ea82704,112808095,0,0x0,8
tick,0x7ff86ea82704,112810266,0,0x0,8
tick,0x7ff86ea82704,112812131,0,0x0,8
tick,0x7ff86ea82704,112814196,0,0x0,8
tick,0x7ff86ea82704,112816115,0,0x0,8
tick,0x7ff86ea82704,112818169,0,0x0,8
tick,0x7ff86ea82704,112820287,0,0x0,8
tick,0x7ff86ea82704,112822174,0,0x0,8
tick,0x7ff86ea82704,112824139,0,0x0,8
tick,0x7ff86ea82704,112826161,0,0x0,8
tick,0x7ff86ea82704,112828259,0,0x0,8
tick,0x7ff86ea82704,112830218,0,0x0,8
tick,0x7ff86ea82704,112832241,0,0x0,8
tick,0x7ff86ea82704,112834219,0,0x0,8
tick,0x7ff86ea82704,112836191,0,0x0,8
tick,0x7ff86ea82704,112838219,0,0x0,8
tick,0x7ff86ea82704,112840225,0,0x0,8
tick,0x7ff86ea82704,112842270,0,0x0,8
tick,0x7ff86ea82704,112844077,0,0x0,8
tick,0x7ff86ea82704,112846135,0,0x0,8
tick,0x7ff86ea82704,112847984,0,0x0,8
tick,0x7ff86ea82704,112850102,0,0x0,8
tick,0x7ff86ea82704,112852128,0,0x0,8
tick,0x7ff86ea82704,112854168,0,0x0,8
tick,0x7ff86ea82704,112856170,0,0x0,8
tick,0x7ff86ea82704,112858116,0,0x0,8
tick,0x7ff86ea82704,112860095,0,0x0,8
tick,0x7ff86ea82704,112862048,0,0x0,8
tick,0x7ff86ea82704,112864123,0,0x0,8
tick,0x7ff86ea82704,112866026,0,0x0,8
tick,0x7ff86ea82704,112868245,0,0x0,8
tick,0x7ff86ea82704,112870028,0,0x0,8
tick,0x7ff86ea82704,112872126,0,0x0,8
tick,0x7ff86ea82704,112874039,0,0x0,8
tick,0x7ff86ea82704,112876115,0,0x0,8
tick,0x7ff86ea82704,112878117,0,0x0,8
tick,0x7ff86ea82704,112880017,0,0x0,8
tick,0x7ff86ea82704,112881895,0,0x0,8
tick,0x7ff86ea82704,112884042,0,0x0,8
tick,0x7ff86ea82704,112885950,0,0x0,8
tick,0x7ff86ea82704,112888031,0,0x0,8
tick,0x7ff86ea82704,112889926,0,0x0,8
tick,0x7ff86ea82704,112892179,0,0x0,8
tick,0x7ff86ea82704,112894068,0,0x0,8
tick,0x7ff86ea82704,112896120,0,0x0,8
tick,0x7ff86ea82704,112897953,0,0x0,8
tick,0x7ff86ea82704,112899947,0,0x0,8
tick,0x7ff86ea82704,112901993,0,0x0,8
tick,0x7ff86ea82704,112904045,0,0x0,8
tick,0x7ff86ea82704,112905928,0,0x0,8
tick,0x7ff86ea82704,112907971,0,0x0,8
tick,0x7ff86ea82704,112909785,0,0x0,8
tick,0x7ff86ea82704,112912043,0,0x0,8
tick,0x7ff86ea82704,112913887,0,0x0,8
tick,0x7ff86ea82704,112916010,0,0x0,8
tick,0x7ff86ea82704,112917858,0,0x0,8
tick,0x7ff86ea82704,112919955,0,0x0,8
tick,0x7ff86ea82704,112921932,0,0x0,8
tick,0x7ff86ea82704,112923904,0,0x0,8
tick,0x7ff86ea82704,112925725,0,0x0,8
tick,0x7ff86ea82704,112927922,0,0x0,8
tick,0x7ff86ea82704,112930004,0,0x0,8
tick,0x7ff86ea82704,112931885,0,0x0,8
tick,0x7ff86ea82704,112933823,0,0x0,8
tick,0x7ff86ea82704,112935844,0,0x0,8
tick,0x7ff86ea82704,112937996,0,0x0,8
tick,0x7ff86ea82704,112940098,0,0x0,8
tick,0x7ff86ea82704,112941671,0,0x0,8
tick,0x7ff86ea82704,112943937,0,0x0,8
tick,0x7ff86ea82704,112945798,0,0x0,8
tick,0x7ff86ea82704,112947932,0,0x0,8
tick,0x7ff86ea82704,112949884,0,0x0,8
tick,0x7ff86ea82704,112951874,0,0x0,8
tick,0x7ff86ea82704,112953958,0,0x0,8
tick,0x7ff86ea82704,112955820,0,0x0,8
tick,0x7ff86ea82704,112957770,0,0x0,8
tick,0x7ff86ea82704,112959952,0,0x0,8
tick,0x7ff86ea82704,112961861,0,0x0,8
tick,0x7ff86ea82704,112963709,0,0x0,8
tick,0x7ff86ea82704,112965790,0,0x0,8
tick,0x7ff86ea82704,112967622,0,0x0,8
tick,0x7ff86ea82704,112969887,0,0x0,8
tick,0x7ff86ea82704,112971720,0,0x0,8
tick,0x7ff86ea82704,112973878,0,0x0,8
tick,0x7ff86ea82704,112975803,0,0x0,8
tick,0x7ff86ea82704,112977790,0,0x0,8
tick,0x7ff86ea82704,112979789,0,0x0,8
tick,0x7ff86ea82704,112981831,0,0x0,8
tick,0x7ff86ea82704,112983758,0,0x0,8
tick,0x7ff86ea82704,112985907,0,0x0,8
tick,0x7ff86ea82704,112987833,0,0x0,8
tick,0x7ff86ea82704,112989675,0,0x0,8
tick,0x7ff86ea82704,112991819,0,0x0,8
tick,0x7ff86ea82704,112993737,0,0x0,8
tick,0x7ff86ea82704,112995841,0,0x0,8
tick,0x7ff86ea82704,112997657,0,0x0,8
tick,0x7ff86ea82704,112999656,0,0x0,8
tick,0x7ff86ea82704,113001628,0,0x0,8
tick,0x7ff86ea82704,113003806,0,0x0,8
tick,0x7ff86ea82704,113005654,0,0x0,8
tick,0x7ff86ea82704,113007748,0,0x0,8
tick,0x7ff86ea82704,113009817,0,0x0,8
tick,0x7ff86ea82704,113011950,0,0x0,8
tick,0x7ff86ea82704,113013694,0,0x0,8
tick,0x7ff86ea82704,113015634,0,0x0,8
tick,0x7ff86ea82704,113017651,0,0x0,8
tick,0x7ff86ea82704,113019607,0,0x0,8
tick,0x7ff86ea82704,113021785,0,0x0,8
tick,0x7ff86ea82704,113023716,0,0x0,8
tick,0x7ff86ea82704,113025803,0,0x0,8
tick,0x7ff86ea82704,113027570,0,0x0,8
tick,0x7ff86ea82704,113029722,0,0x0,8
tick,0x7ff86ea82704,113031746,0,0x0,8
tick,0x7ff86ea82704,113033729,0,0x0,8
tick,0x7ff86ea82704,113035588,0,0x0,8
tick,0x7ff86ea82704,113037616,0,0x0,8
tick,0x7ff86ea82704,113039706,0,0x0,8
tick,0x7ff86ea82704,113041482,0,0x0,8
tick,0x7ff86ea82704,113043685,0,0x0,8
tick,0x7ff86ea82704,113045624,0,0x0,8
tick,0x7ff86ea82704,113047563,0,0x0,8
tick,0x7ff86ea82704,113049574,0,0x0,8
tick,0x7ff86ea82704,113051662,0,0x0,8
tick,0x7ff86ea82704,113053619,0,0x0,8
tick,0x7ff86ea82704,113055533,0,0x0,8
tick,0x7ff86ea82704,113057685,0,0x0,8
tick,0x7ff86ea82704,113059511,0,0x0,8
tick,0x7ff86ea82704,113061620,0,0x0,8
tick,0x7ff86ea82704,113063595,0,0x0,8
tick,0x7ff86ea82704,113065508,0,0x0,8
tick,0x7ff86ea82704,113067671,0,0x0,8
tick,0x7ff86ea82704,113069648,0,0x0,8
tick,0x7ff86ea82704,113071485,0,0x0,8
tick,0x7ff86ea82704,113073571,0,0x0,8
tick,0x7ff86ea82704,113075495,0,0x0,8
tick,0x7ff86ea82704,113077423,0,0x0,8
tick,0x7ff86ea82704,113079550,0,0x0,8
tick,0x7ff86ea82704,113081506,0,0x0,8
tick,0x7ff86ea82704,113083434,0,0x0,8
tick,0x7ff86ea82704,113085682,0,0x0,8
tick,0x7ff86ea82704,113087498,0,0x0,8
tick,0x7ff86ea82704,113089382,0,0x0,8
tick,0x7ff86ea82704,113091399,0,0x0,8
tick,0x7ff86ea82704,113093469,0,0x0,8
tick,0x7ff86ea82704,113095438,0,0x0,8
tick,0x7ff86ea82704,113097393,0,0x0,8
tick,0x7ff86ea82704,113099310,0,0x0,8
tick,0x7ff86ea82704,113101363,0,0x0,8
tick,0x7ff86ea82704,113103379,0,0x0,8
tick,0x7ff86ea82704,113105380,0,0x0,8
tick,0x7ff86ea82704,113107393,0,0x0,8
tick,0x7ff86ea82704,113109341,0,0x0,8
tick,0x7ff86ea82704,113111328,0,0x0,8
tick,0x7ff86ea82704,113113428,0,0x0,8
tick,0x7ff86ea82704,113115466,0,0x0,8
tick,0x7ff86ea82704,113117453,0,0x0,8
tick,0x7ff86ea82704,113119351,0,0x0,8
tick,0x7ff86ea82704,113121394,0,0x0,8
tick,0x7ff86ea82704,113123372,0,0x0,8
tick,0x7ff86ea82704,113125328,0,0x0,8
tick,0x7ff86ea82704,113127489,0,0x0,8
tick,0x7ff86ea82704,113129305,0,0x0,8
tick,0x7ff86ea82704,113131574,0,0x0,8
tick,0x7ff86ea82704,113133296,0,0x0,8
tick,0x7ff86ea82704,113135446,0,0x0,8
tick,0x7ff86ea82704,113137253,0,0x0,8
tick,0x7ff86ea82704,113139450,0,0x0,8
tick,0x7ff86ea82704,113141393,0,0x0,8
tick,0x7ff86ea82704,113143255,0,0x0,8
tick,0x7ff86ea82704,113145257,0,0x0,8
tick,0x7ff86ea82704,113147343,0,0x0,8
tick,0x7ff86ea82704,113149218,0,0x0,8
tick,0x7ff86ea82704,113151322,0,0x0,8
tick,0x7ff86ea82704,113153243,0,0x0,8
tick,0x7ff86ea82704,113155335,0,0x0,8
tick,0x7ff86ea82704,113157288,0,0x0,8
tick,0x7ff86ea82704,113159321,0,0x0,8
tick,0x7ff86ea82704,113161560,0,0x0,8
tick,0x7ff86ea82704,113163228,0,0x0,8
tick,0x7ff86ea82704,113165276,0,0x0,8
tick,0x7ff86ea82704,113167601,0,0x0,8
tick,0x7ff86ea82704,113169477,0,0x0,8
tick,0x7ff86ea82704,113171650,0,0x0,8
tick,0x7ff86ea82704,113173275,0,0x0,8
tick,0x7ff86ea82704,113175661,0,0x0,8
tick,0x7ff86ea82704,113177256,0,0x0,8
tick,0x7ff86ea82704,113179284,0,0x0,8
tick,0x7ff86ea82704,113181470,0,0x0,8
tick,0x7ff86ea82704,113183511,0,0x0,8
tick,0x7ff86ea82704,113185137,0,0x0,8
tick,0x7ff86ea82704,113187197,0,0x0,8
tick,0x7ff86ea82704,113189631,0,0x0,8
tick,0x7ff86ea82704,113191149,0,0x0,8
tick,0x7ff86ea82704,113193289,0,0x0,8
tick,0x7ff86ea82704,113195121,0,0x0,8
tick,0x7ff86ea82704,113197138,0,0x0,8
tick,0x7ff86ea82704,113199378,0,0x0,8
tick,0x7ff86ea82704,113201151,0,0x0,8
tick,0x7ff86ea82704,113203182,0,0x0,8
tick,0x7ff86ea82704,113205286,0,0x0,8
tick,0x7ff86ea82704,113207145,0,0x0,8
tick,0x7ff86ea82704,113209227,0,0x0,8
tick,0x7ff86ea82704,113211161,0,0x0,8
tick,0x7ff86ea82704,113213165,0,0x0,8
tick,0x7ff86ea82704,113215302,0,0x0,8
tick,0x7ff86ea82704,113217189,0,0x0,8
tick,0x7ff86ea82704,113219220,0,0x0,8
tick,0x7ff86ea82704,113220926,0,0x0,8
tick,0x7ff86ea82704,113223082,0,0x0,8
tick,0x7ff86ea82704,113225007,0,0x0,8
tick,0x7ff86ea82704,113226993,0,0x0,8
tick,0x7ff86ea82704,113229146,0,0x0,8
tick,0x7ff86ea82704,113230964,0,0x0,8
tick,0x7ff86ea82704,113232956,0,0x0,8
tick,0x7ff86ea82704,113235024,0,0x0,8
tick,0x7ff86ea82704,113236963,0,0x0,8
tick,0x7ff86ea82704,113239029,0,0x0,8
tick,0x7ff86ea82704,113240876,0,0x0,8
tick,0x7ff86ea82704,113243151,0,0x0,8
tick,0x7ff86ea82704,113245100,0,0x0,8
tick,0x7ff86ea82704,113247125,0,0x0,8
tick,0x7ff86ea82704,113249117,0,0x0,8
tick,0x7ff86ea82704,113251035,0,0x0,8
tick,0x7ff86ea82704,113253245,0,0x0,8
tick,0x7ff86ea82704,113255118,0,0x0,8
tick,0x7ff86ea82704,113257052,0,0x0,8
tick,0x7ff86ea82704,113259000,0,0x0,8
tick,0x7ff86ea82704,113261260,0,0x0,8
tick,0x7ff86ea82704,113262983,0,0x0,8
tick,0x7ff86ea82704,113265160,0,0x0,8
tick,0x7ff86ea82704,113266991,0,0x0,8
tick,0x7ff86ea82704,113269082,0,0x0,8
tick,0x7ff86ea82704,113271017,0,0x0,8
tick,0x7ff86ea82704,113272970,0,0x0,8
tick,0x7ff86ea82704,113274964,0,0x0,8
tick,0x7ff86ea82704,113277049,0,0x0,8
tick,0x7ff86ea82704,113278916,0,0x0,8
tick,0x7ff86ea82704,113280935,0,0x0,8
tick,0x7ff86ea82704,113283258,0,0x0,8
tick,0x7ff86ea82704,113285084,0,0x0,8
tick,0x7ff86ea82704,113287089,0,0x0,8
tick,0x7ff86ea82704,113288890,0,0x0,8
tick,0x7ff86ea82704,113291049,0,0x0,8
tick,0x7ff86ea82704,113292876,0,0x0,8
tick,0x7ff86ea82704,113294916,0,0x0,8
tick,0x7ff86ea82704,113296927,0,0x0,8
tick,0x7ff86ea82704,113299468,0,0x0,8
tick,0x7ff86ea82704,113301343,0,0x0,8
tick,0x7ff86ea82704,113302840,0,0x0,8
tick,0x7ff86ea82704,113304958,0,0x0,8
tick,0x7ff86ea82704,113307196,0,0x0,8
tick,0x7ff86ea82704,113308837,0,0x0,8
tick,0x7ff86ea82704,113311052,0,0x0,8
tick,0x7ff86ea82704,113312810,0,0x0,8
tick,0x7ff86ea82704,113315511,0,0x0,8
tick,0x7ff86ea82704,113317056,0,0x0,8
tick,0x7ff86ea82704,113319014,0,0x0,8
tick,0x7ff86ea82704,113320768,0,0x0,8
tick,0x7ff86ea82704,113322858,0,0x0,8
tick,0x7ff86ea82704,113325014,0,0x0,8
tick,0x7ff86ea82704,113326932,0,0x0,8
tick,0x7ff86ea82704,113328869,0,0x0,8
tick,0x7ff86ea82704,113331194,0,0x0,8
tick,0x7ff86ea82704,113333065,0,0x0,8
tick,0x7ff86ea82704,113334818,0,0x0,8
tick,0x7ff86ea82704,113337084,0,0x0,8
tick,0x7ff86ea82704,113339093,0,0x0,8
tick,0x7ff86ea82704,113340723,0,0x0,8
tick,0x7ff86ea82704,113342905,0,0x0,8
tick,0x7ff86ea82704,113344813,0,0x0,8
tick,0x7ff86ea82704,113346927,0,0x0,8
tick,0x7ff86ea82704,113348980,0,0x0,8
tick,0x7ff86ea82704,113350955,0,0x0,8
tick,0x7ff86ea82704,113355247,0,0x0,8
tick,0x7ff86ea82704,113357128,0,0x0,8
tick,0x7ff86ea82704,113359083,0,0x0,8
tick,0x7ff86ea82704,113361064,0,0x0,8
tick,0x7ff86ea82704,113362778,0,0x0,8
tick,0x7ff86ea82704,113365103,0,0x0,8
tick,0x7ff86ea82704,113366734,0,0x0,8
tick,0x7ff86ea82704,113369026,0,0x0,8
tick,0x7ff86ea82704,113371178,0,0x0,8
tick,0x7ff86ea82704,113372951,0,0x0,8
tick,0x7ff86ea82704,113374831,0,0x0,8
tick,0x7ff86ea82704,113376829,0,0x0,8
tick,0x7ff86ea82704,113378955,0,0x0,8
tick,0x7ff86ea82704,113380847,0,0x0,8
tick,0x7ff86ea82704,113382943,0,0x0,8
tick,0x7ff86ea82704,113385006,0,0x0,8
tick,0x7ff86ea82704,113387282,0,0x0,8
tick,0x7ff86ea82704,113388877,0,0x0,8
tick,0x7ff86ea82704,113391042,0,0x0,8
tick,0x7ff86ea82704,113392746,0,0x0,8
tick,0x7ff86ea82704,113394715,0,0x0,8
tick,0x7ff86ea82704,113396848,0,0x0,8
tick,0x7ff86ea82704,113398969,0,0x0,8
tick,0x7ff86ea82704,113401076,0,0x0,8
tick,0x7ff86ea82704,113402674,0,0x0,8
tick,0x7ff86ea82704,113404722,0,0x0,8
tick,0x7ff86ea82704,113406774,0,0x0,8
tick,0x7ff86ea82704,113408760,0,0x0,8
tick,0x7ff86ea82704,113410902,0,0x0,8
tick,0x7ff86ea82704,113412747,0,0x0,8
tick,0x7ff86ea82704,113414538,0,0x0,8
tick,0x7ff86ea82704,113417576,0,0x0,8
tick,0x7ff86ea82704,113418538,0,0x0,8
tick,0x7ff86ea82704,113420576,0,0x0,8
tick,0x7ff86ea82704,113422701,0,0x0,8
tick,0x7ff86ea82704,113424498,0,0x0,8
tick,0x7ff86ea82704,113426561,0,0x0,8
tick,0x7ff86ea82704,113428475,0,0x0,8
tick,0x7ff86ea82704,113430669,0,0x0,8
tick,0x7ff86ea82704,113432914,0,0x0,8
tick,0x7ff86ea82704,113434431,0,0x0,8
tick,0x7ff86ea82704,113436576,0,0x0,8
tick,0x7ff86ea82704,113438617,0,0x0,8
tick,0x7ff86ea82704,113440591,0,0x0,8
tick,0x7ff86ea82704,113442594,0,0x0,8
tick,0x7ff86ea82704,113444580,0,0x0,8
tick,0x7ff86ea82704,113446558,0,0x0,8
tick,0x7ff86ea82704,113448504,0,0x0,8
tick,0x7ff86ea82704,113450575,0,0x0,8
tick,0x7ff86ea82704,113452529,0,0x0,8
tick,0x7ff86ea82704,113454511,0,0x0,8
tick,0x7ff86ea82704,113456444,0,0x0,8
tick,0x7ff86ea82704,113458469,0,0x0,8
tick,0x7ff86ea82704,113460443,0,0x0,8
tick,0x7ff86ea82704,113462460,0,0x0,8
tick,0x7ff86ea82704,113464708,0,0x0,8
tick,0x7ff86ea82704,113466654,0,0x0,8
tick,0x7ff86ea82704,113468372,0,0x0,8
tick,0x7ff86ea82704,113470582,0,0x0,8
tick,0x7ff86ea82704,113472400,0,0x0,8
tick,0x7ff86ea82704,113474434,0,0x0,8
tick,0x7ff86ea82704,113476354,0,0x0,8
tick,0x7ff86ea82704,113478475,0,0x0,8
tick,0x7ff86ea82704,113480600,0,0x0,8
tick,0x7ff86ea82704,113482426,0,0x0,8
tick,0x7ff86ea82704,113484751,0,0x0,8
tick,0x7ff86ea82704,113486521,0,0x0,8
tick,0x7ff86ea82704,113488596,0,0x0,8
tick,0x7ff86ea82704,113490662,0,0x0,8
tick,0x7ff86ea82704,113492613,0,0x0,8
tick,0x7ff86ea82704,113495019,0,0x0,8
tick,0x7ff86ea82704,113497568,0,0x0,8
tick,0x7ff86ea82704,113499960,0,0x0,8
tick,0x7ff86ea82704,113501308,0,0x0,8
tick,0x7ff86ea82704,113503415,0,0x0,8
tick,0x7ff86ea82704,113506033,0,0x0,8
tick,0x7ff86ea82704,113507204,0,0x0,8
tick,0x7ff86ea82704,113509289,0,0x0,8
tick,0x7ff86ea82704,113511393,0,0x0,8
tick,0x7ff86ea82704,113513295,0,0x0,8
tick,0x7ff86ea82704,113516721,0,0x0,8
tick,0x7ff86ea82704,113517134,0,0x0,8
tick,0x7ff86ea82704,113519336,0,0x0,8
tick,0x7ff86ea82704,113521119,0,0x0,8
tick,0x7ff86ea82704,113523136,0,0x0,8
tick,0x7ff86ea82704,113525239,0,0x0,8
tick,0x7ff86ea82704,113527155,0,0x0,8
tick,0x7ff86ea82704,113529266,0,0x0,8
tick,0x7ff86ea82704,113531114,0,0x0,8
tick,0x7ff86ea82704,113533211,0,0x0,8
tick,0x7ff86ea82704,113535218,0,0x0,8
tick,0x7ff86ea82704,113537151,0,0x0,8
tick,0x7ff86ea82704,113539108,0,0x0,8
tick,0x7ff86ea82704,113541085,0,0x0,8
tick,0x7ff86ea82704,113543093,0,0x0,8
tick,0x7ff86ea82704,113545148,0,0x0,8
tick,0x7ff86ea82704,113547147,0,0x0,8
tick,0x7ff86ea82704,113549266,0,0x0,8
tick,0x7ff86ea82704,113551084,0,0x0,8
tick,0x7ff86ea82704,113553166,0,0x0,8
tick,0x7ff86ea82704,113555220,0,0x0,8
tick,0x7ff86ea82704,113557048,0,0x0,8
tick,0x7ff86ea82704,113559319,0,0x0,8
tick,0x7ff86ea82704,113561255,0,0x0,8
tick,0x7ff86ea82704,113563258,0,0x0,8
tick,0x7ff86ea82704,113565382,0,0x0,8
tick,0x7ff86ea82704,113567367,0,0x0,8
tick,0x7ff86ea82704,113569182,0,0x0,8
tick,0x7ff86ea82704,113571129,0,0x0,8
tick,0x7ff86ea82704,113573023,0,0x0,8
tick,0x7ff86ea82704,113575244,0,0x0,8
tick,0x7ff86ea82704,113577348,0,0x0,8
tick,0x7ff86ea82704,113579172,0,0x0,8
tick,0x7ff86ea82704,113581035,0,0x0,8
tick,0x7ff86ea82704,113583054,0,0x0,8
tick,0x7ff86ea82704,113585003,0,0x0,8
tick,0x7ff86ea82704,113587110,0,0x0,8
tick,0x7ff86ea82704,113589121,0,0x0,8
tick,0x7ff86ea82704,113591011,0,0x0,8
tick,0x7ff86ea82704,113593045,0,0x0,8
tick,0x7ff86ea82704,113594920,0,0x0,8
tick,0x7ff86ea82704,113597069,0,0x0,8
tick,0x7ff86ea82704,113599196,0,0x0,8
tick,0x7ff86ea82704,113600924,0,0x0,8
tick,0x7ff86ea82704,113603117,0,0x0,8
tick,0x7ff86ea82704,113605103,0,0x0,8
tick,0x7ff86ea82704,113606936,0,0x0,8
tick,0x7ff86ea82704,113609081,0,0x0,8
tick,0x7ff86ea82704,113610986,0,0x0,8
tick,0x7ff86ea82704,113613130,0,0x0,8
tick,0x7ff86ea82704,113614956,0,0x0,8
tick,0x7ff86ea82704,113616886,0,0x0,8
tick,0x7ff86ea82704,113618923,0,0x0,8
tick,0x7ff86ea82704,113620920,0,0x0,8
tick,0x7ff86ea82704,113623002,0,0x0,8
tick,0x7ff86ea82704,113625083,0,0x0,8
tick,0x7ff86ea82704,113626928,0,0x0,8
tick,0x7ff86ea82704,113628957,0,0x0,8
tick,0x7ff86ea82704,113630977,0,0x0,8
tick,0x7ff86ea82704,113632998,0,0x0,8
tick,0x7ff86ea82704,113635202,0,0x0,8
tick,0x7ff86ea82704,113637105,0,0x0,8
tick,0x7ff86ea82704,113638953,0,0x0,8
tick,0x7ff86ea82704,113640875,0,0x0,8
tick,0x7ff86ea82704,113643010,0,0x0,8
tick,0x7ff86ea82704,113644835,0,0x0,8
tick,0x7ff86ea82704,113646939,0,0x0,8
tick,0x7ff86ea82704,113648896,0,0x0,8
tick,0x7ff86ea82704,113650973,0,0x0,8
tick,0x7ff86ea82704,113653188,0,0x0,8
tick,0x7ff86ea82704,113654846,0,0x0,8
tick,0x7ff86ea82704,113656969,0,0x0,8
tick,0x7ff86ea82704,113658897,0,0x0,8
tick,0x7ff86ea82704,113660800,0,0x0,8
tick,0x7ff86ea82704,113662890,0,0x0,8
tick,0x7ff86ea82704,113664382,0,0x0,8
tick,0x7ff86ea82704,113667058,0,0x0,8
tick,0x7ff86ea82704,113667773,0,0x0,8
tick,0x7ff86ea82704,113670012,0,0x0,8
tick,0x7ff86ea82704,113672078,0,0x0,8
tick,0x7ff86ea82704,113673900,0,0x0,8
tick,0x7ff86ea82704,113675888,0,0x0,8
tick,0x7ff86ea82704,113677948,0,0x0,8
tick,0x7ff86ea82704,113679823,0,0x0,8
tick,0x7ff86ea82704,113682560,0,0x0,8
tick,0x7ff86ea82704,113683854,0,0x0,8
tick,0x7ff86ea82704,113685837,0,0x0,8
tick,0x7ff86ea82704,113687663,0,0x0,8
tick,0x7ff86ea82704,113689912,0,0x0,8
tick,0x7ff86ea82704,113691713,0,0x0,8
tick,0x7ff86ea82704,113693925,0,0x0,8
tick,0x7ff86ea82704,113695819,0,0x0,8
tick,0x7ff86ea82704,113697871,0,0x0,8
tick,0x7ff86ea82704,113699736,0,0x0,8
tick,0x7ff86ea82704,113701763,0,0x0,8
tick,0x7ff86ea82704,113703673,0,0x0,8
tick,0x7ff86ea82704,113705712,0,0x0,8
tick,0x7ff86ea82704,113707690,0,0x0,8
tick,0x7ff86ea82704,113709694,0,0x0,8
tick,0x7ff86ea82704,113711705,0,0x0,8
tick,0x7ff86ea82704,113713667,0,0x0,8
tick,0x7ff86ea82704,113715869,0,0x0,8
tick,0x7ff86ea82704,113717758,0,0x0,8
tick,0x7ff86ea82704,113719726,0,0x0,8
tick,0x7ff86ea82704,113721667,0,0x0,8
tick,0x7ff86ea82704,113723762,0,0x0,8
tick,0x7ff86ea82704,113725653,0,0x0,8
tick,0x7ff86ea82704,113727596,0,0x0,8
tick,0x7ff86ea82704,113729739,0,0x0,8
tick,0x7ff86ea82704,113731734,0,0x0,8
tick,0x7ff86ea82704,113733731,0,0x0,8
tick,0x7ff86ea82704,113735531,0,0x0,8
tick,0x7ff86ea82704,113737682,0,0x0,8
tick,0x7ff86ea82704,113739581,0,0x0,8
tick,0x7ff86ea82704,113741705,0,0x0,8
tick,0x7ff86ea82704,113743544,0,0x0,8
tick,0x7ff86ea82704,113745597,0,0x0,8
tick,0x7ff86ea82704,113747881,0,0x0,8
tick,0x7ff86ea82704,113749882,0,0x0,8
tick,0x7ff86ea82704,113751543,0,0x0,8
tick,0x7ff86ea82704,113753620,0,0x0,8
tick,0x7ff86ea82704,113755526,0,0x0,8
tick,0x7ff86ea82704,113757578,0,0x0,8
tick,0x7ff86ea82704,113759606,0,0x0,8
tick,0x7ff86ea82704,113761690,0,0x0,8
tick,0x7ff86ea82704,113763704,0,0x0,8
tick,0x7ff86ea82704,113765563,0,0x0,8
tick,0x7ff86ea82704,113767642,0,0x0,8
tick,0x7ff86ea82704,113769535,0,0x0,8
tick,0x7ff86ea82704,113771638,0,0x0,8
tick,0x7ff86ea82704,113773606,0,0x0,8
tick,0x7ff86ea82704,113775600,0,0x0,8
tick,0x7ff86ea82704,113777707,0,0x0,8
tick,0x7ff86ea82704,113779566,0,0x0,8
tick,0x7ff86ea82704,113781532,0,0x0,8
tick,0x7ff86ea82704,113783465,0,0x0,8
tick,0x7ff86ea82704,113785648,0,0x0,8
tick,0x7ff86ea82704,113787486,0,0x0,8
tick,0x7ff86ea82704,113789536,0,0x0,8
tick,0x7ff86ea82704,113791498,0,0x0,8
tick,0x7ff86ea82704,113793628,0,0x0,8
tick,0x7ff86ea82704,113795498,0,0x0,8
tick,0x7ff86ea82704,113797544,0,0x0,8
tick,0x7ff86ea82704,113799456,0,0x0,8
tick,0x7ff86ea82704,113801549,0,0x0,8
tick,0x7ff86ea82704,113803554,0,0x0,8
tick,0x7ff86ea82704,113805596,0,0x0,8
tick,0x7ff86ea82704,113807420,0,0x0,8
tick,0x7ff86ea82704,113809445,0,0x0,8
tick,0x7ff86ea82704,113811651,0,0x0,8
tick,0x7ff86ea82704,113813458,0,0x0,8
tick,0x7ff86ea82704,113815739,0,0x0,8
tick,0x7ff86ea82704,113817645,0,0x0,8
tick,0x7ff86ea82704,113819470,0,0x0,8
tick,0x7ff86ea82704,113821479,0,0x0,8
tick,0x7ff86ea82704,113823442,0,0x0,8
tick,0x7ff86ea82704,113825437,0,0x0,8
tick,0x7ff86ea82704,113827431,0,0x0,8
tick,0x7ff86ea82704,113829399,0,0x0,8
tick,0x7ff86ea82704,113831427,0,0x0,8
tick,0x7ff86ea82704,113833598,0,0x0,8
tick,0x7ff86ea82704,113835435,0,0x0,8
tick,0x7ff86ea82704,113837338,0,0x0,8
tick,0x7ff86ea82704,113839555,0,0x0,8
tick,0x7ff86ea82704,113841450,0,0x0,8
tick,0x7ff86ea82704,113843367,0,0x0,8
tick,0x7ff86ea82704,113845271,0,0x0,8
tick,0x7ff86ea82704,113847454,0,0x0,8
tick,0x7ff86ea82704,113849303,0,0x0,8
tick,0x7ff86ea82704,113851459,0,0x0,8
tick,0x7ff86ea82704,113853278,0,0x0,8
tick,0x7ff86ea82704,113855422,0,0x0,8
tick,0x7ff86ea82704,113857356,0,0x0,8
tick,0x7ff86ea82704,113859335,0,0x0,8
tick,0x7ff86ea82704,113861306,0,0x0,8
tick,0x7ff86ea82704,113863477,0,0x0,8
tick,0x7ff86ea82704,113865422,0,0x0,8
tick,0x7ff86ea82704,113867494,0,0x0,8
tick,0x7ff86ea82704,113869393,0,0x0,8
tick,0x7ff86ea82704,113871523,0,0x0,8
tick,0x7ff86ea82704,113873382,0,0x0,8
tick,0x7ff86ea82704,113875474,0,0x0,8
tick,0x7ff86ea82704,113877336,0,0x0,8
tick,0x7ff86ea82704,113879374,0,0x0,8
tick,0x7ff86ea82704,113881401,0,0x0,8
tick,0x7ff86ea82704,113883438,0,0x0,8
tick,0x7ff86ea82704,113885189,0,0x0,8
tick,0x7ff86ea82704,113887335,0,0x0,8
tick,0x7ff86ea82704,113889330,0,0x0,8
tick,0x7ff86ea82704,113891217,0,0x0,8
tick,0x7ff86ea82704,113893270,0,0x0,8
tick,0x7ff86ea82704,113895415,0,0x0,8
tick,0x7ff86ea82704,113897172,0,0x0,8
tick,0x7ff86ea82704,113899401,0,0x0,8
tick,0x7ff86ea82704,113901197,0,0x0,8
tick,0x7ff86ea82704,113903295,0,0x0,8
tick,0x7ff86ea82704,113905173,0,0x0,8
tick,0x7ff86ea82704,113907201,0,0x0,8
tick,0x7ff86ea82704,113909153,0,0x0,8
tick,0x7ff86ea82704,113911139,0,0x0,8
tick,0x7ff86ea82704,113913435,0,0x0,8
tick,0x7ff86ea82704,113915317,0,0x0,8
tick,0x7ff86ea82704,113917244,0,0x0,8
tick,0x7ff86ea82704,113919419,0,0x0,8
tick,0x7ff86ea82704,113921129,0,0x0,8
tick,0x7ff86ea82704,113923285,0,0x0,8
tick,0x7ff86ea82704,113925145,0,0x0,8
tick,0x7ff86ea82704,113927285,0,0x0,8
tick,0x7ff86ea82704,113929240,0,0x0,8
tick,0x7ff86ea82704,113931203,0,0x0,8
tick,0x7ff86ea82704,113933285,0,0x0,8
tick,0x7ff86ea82704,113935311,0,0x0,8
tick,0x7ff86ea82704,113937226,0,0x0,8
tick,0x7ff86ea82704,113939162,0,0x0,8
tick,0x7ff86ea82704,113941176,0,0x0,8
tick,0x7ff86ea82704,113943231,0,0x0,8
tick,0x7ff86ea82704,113945120,0,0x0,8
tick,0x7ff86ea82704,113947182,0,0x0,8
tick,0x7ff86ea82704,113949201,0,0x0,8
tick,0x7ff86ea82704,113951273,0,0x0,8
tick,0x7ff86ea82704,113953226,0,0x0,8
tick,0x7ff86ea82704,113955140,0,0x0,8
tick,0x7ff86ea82704,113957152,0,0x0,8
tick,0x7ff86ea82704,113959202,0,0x0,8
tick,0x7ff86ea82704,113961119,0,0x0,8
tick,0x7ff86ea82704,113963024,0,0x0,8
tick,0x7ff86ea82704,113965252,0,0x0,8
tick,0x7ff86ea82704,113967214,0,0x0,8
tick,0x7ff86ea82704,113969109,0,0x0,8
tick,0x7ff86ea82704,113971081,0,0x0,8
tick,0x7ff86ea82704,113972943,0,0x0,8
tick,0x7ff86ea82704,113975224,0,0x0,8
tick,0x7ff86ea82704,113976971,0,0x0,8
tick,0x7ff86ea82704,113979147,0,0x0,8
tick,0x7ff86ea82704,113981032,0,0x0,8
tick,0x7ff86ea82704,113983111,0,0x0,8
tick,0x7ff86ea82704,113985051,0,0x0,8
tick,0x7ff86ea82704,113987070,0,0x0,8
tick,0x7ff86ea82704,113989022,0,0x0,8
tick,0x7ff86ea82704,113991107,0,0x0,8
tick,0x7ff86ea82704,113992948,0,0x0,8
tick,0x7ff86ea82704,113995100,0,0x0,8
tick,0x7ff86ea82704,113997064,0,0x0,8
tick,0x7ff86ea82704,113999545,0,0x0,8
tick,0x7ff86ea82704,114001458,0,0x0,8
tick,0x7ff86ea82704,114003251,0,0x0,8
tick,0x7ff86ea82704,114004845,0,0x0,8
tick,0x7ff86ea82704,114007045,0,0x0,8
tick,0x7ff86ea82704,114008921,0,0x0,8
tick,0x7ff86ea82704,114011075,0,0x0,8
tick,0x7ff86ea82704,114012915,0,0x0,8
tick,0x7ff86ea82704,114015476,0,0x0,8
tick,0x7ff86ea82704,114016974,0,0x0,8
tick,0x7ff86ea82704,114018970,0,0x0,8
tick,0x7ff86ea82704,114020929,0,0x0,8
tick,0x7ff86ea82704,114022998,0,0x0,8
tick,0x7ff86ea82704,114024904,0,0x0,8
tick,0x7ff86ea82704,114026813,0,0x0,8
tick,0x7ff86ea82704,114028842,0,0x0,8
tick,0x7ff86ea82704,114030878,0,0x0,8
tick,0x7ff86ea82704,114032903,0,0x0,8
tick,0x7ff86ea82704,114034930,0,0x0,8
tick,0x7ff86ea82704,114037099,0,0x0,8
tick,0x7ff86ea82704,114038829,0,0x0,8
tick,0x7ff86ea82704,114040822,0,0x0,8
tick,0x7ff86ea82704,114042750,0,0x0,8
tick,0x7ff86ea82704,114045079,0,0x0,8
tick,0x7ff86ea82704,114046769,0,0x0,8
tick,0x7ff86ea82704,114048875,0,0x0,8
tick,0x7ff86ea82704,114050717,0,0x0,8
tick,0x7ff86ea82704,114052915,0,0x0,8
tick,0x7ff86ea82704,114054799,0,0x0,8
tick,0x7ff86ea82704,114056717,0,0x0,8
tick,0x7ff86ea82704,114058816,0,0x0,8
tick,0x7ff86ea82704,114060689,0,0x0,8
tick,0x7ff86ea82704,114062794,0,0x0,8
tick,0x7ff86ea82704,114064654,0,0x0,8
tick,0x7ff86ea82704,114066878,0,0x0,8
tick,0x7ff86ea82704,114068836,0,0x0,8
tick,0x7ff86ea82704,114070747,0,0x0,8
tick,0x7ff86ea82704,114072686,0,0x0,8
tick,0x7ff86ea82704,114074727,0,0x0,8
tick,0x7ff86ea82704,114076772,0,0x0,8
tick,0x7ff86ea82704,114078702,0,0x0,8
tick,0x7ff86ea82704,114080769,0,0x0,8
tick,0x7ff86ea82704,114082696,0,0x0,8
tick,0x7ff86ea82704,114084918,0,0x0,8
tick,0x7ff86ea82704,114086801,0,0x0,8
tick,0x7ff86ea82704,114088695,0,0x0,8
tick,0x7ff86ea82704,114090766,0,0x0,8
tick,0x7ff86ea82704,114092671,0,0x0,8
tick,0x7ff86ea82704,114094770,0,0x0,8
tick,0x7ff86ea82704,114096603,0,0x0,8
tick,0x7ff86ea82704,114098910,0,0x0,8
tick,0x7ff86ea82704,114100674,0,0x0,8
tick,0x7ff86ea82704,114102708,0,0x0,8
tick,0x7ff86ea82704,114104627,0,0x0,8
tick,0x7ff86ea82704,114106642,0,0x0,8
tick,0x7ff86ea82704,114108668,0,0x0,8
tick,0x7ff86ea82704,114110671,0,0x0,8
tick,0x7ff86ea82704,114112681,0,0x0,8
tick,0x7ff86ea82704,114114768,0,0x0,8
tick,0x7ff86ea82704,114117120,0,0x0,8
tick,0x7ff86ea82704,114118664,0,0x0,8
tick,0x7ff86ea82704,114120716,0,0x0,8
tick,0x7ff86ea82704,114122678,0,0x0,8
tick,0x7ff86ea82704,114124536,0,0x0,8
tick,0x7ff86ea82704,114126698,0,0x0,8
tick,0x7ff86ea82704,114128711,0,0x0,8
tick,0x7ff86ea82704,114130654,0,0x0,8
tick,0x7ff86ea82704,114132889,0,0x0,8
tick,0x7ff86ea82704,114134704,0,0x0,8
tick,0x7ff86ea82704,114136564,0,0x0,8
tick,0x7ff86ea82704,114138506,0,0x0,8
tick,0x7ff86ea82704,114140819,0,0x0,8
tick,0x7ff86ea82704,114142536,0,0x0,8
tick,0x7ff86ea82704,114144543,0,0x0,8
tick,0x7ff86ea82704,114146632,0,0x0,8
tick,0x7ff86ea82704,114148778,0,0x0,8
tick,0x7ff86ea82704,114150483,0,0x0,8
tick,0x7ff86ea82704,114152550,0,0x0,8
tick,0x7ff86ea82704,114154936,0,0x0,8
tick,0x7ff86ea82704,114156560,0,0x0,8
tick,0x7ff86ea82704,114158431,0,0x0,8
tick,0x7ff86ea82704,114160573,0,0x0,8
tick,0x7ff86ea82704,114162547,0,0x0,8
tick,0x7ff86ea82704,114164494,0,0x0,8
tick,0x7ff86ea82704,114166561,0,0x0,8
tick,0x7ff86ea82704,114168450,0,0x0,8
tick,0x7ff86ea82704,114170747,0,0x0,8
tick,0x7ff86ea82704,114172465,0,0x0,8
tick,0x7ff86ea82704,114174637,0,0x0,8
tick,0x7ff86ea82704,114176432,0,0x0,8
tick,0x7ff86ea82704,114178647,0,0x0,8
tick,0x7ff86ea82704,114180555,0,0x0,8
tick,0x7ff86ea82704,114182764,0,0x0,8
tick,0x7ff86ea82704,114184409,0,0x0,8
tick,0x7ff86ea82704,114186597,0,0x0,8
tick,0x7ff86ea82704,114188382,0,0x0,8
tick,0x7ff86ea82704,114190442,0,0x0,8
tick,0x7ff86ea82704,114192420,0,0x0,8
tick,0x7ff86ea82704,114194464,0,0x0,8
tick,0x7ff86ea82704,114196451,0,0x0,8
tick,0x7ff86ea82704,114198778,0,0x0,8
tick,0x7ff86ea82704,114200437,0,0x0,8
tick,0x7ff86ea82704,114202408,0,0x0,8
tick,0x7ff86ea82704,114204491,0,0x0,8
tick,0x7ff86ea82704,114206431,0,0x0,8
tick,0x7ff86ea82704,114208365,0,0x0,8
tick,0x7ff86ea82704,114210344,0,0x0,8
tick,0x7ff86ea82704,114212303,0,0x0,8
tick,0x7ff86ea82704,114214376,0,0x0,8
tick,0x7ff86ea82704,114216429,0,0x0,8
tick,0x7ff86ea82704,114218485,0,0x0,8
tick,0x7ff86ea82704,114220349,0,0x0,8
tick,0x7ff86ea82704,114222467,0,0x0,8
tick,0x7ff86ea82704,114224585,0,0x0,8
tick,0x7ff86ea82704,114226320,0,0x0,8
tick,0x7ff86ea82704,114230627,0,0x0,8
tick,0x7ff86ea82704,114232974,0,0x0,8
tick,0x7ff86ea82704,114234429,0,0x0,8
tick,0x7ff86ea82704,114236418,0,0x0,8
tick,0x7ff86ea82704,114238508,0,0x0,8
tick,0x7ff86ea82704,114240524,0,0x0,8
tick,0x7ff86ea82704,114242484,0,0x0,8
tick,0x7ff86ea82704,114244444,0,0x0,8
tick,0x7ff86ea82704,114246420,0,0x0,8
tick,0x7ff86ea82704,114248749,0,0x0,8
tick,0x7ff86ea82704,114250436,0,0x0,8
tick,0x7ff86ea82704,114252406,0,0x0,8
tick,0x7ff86ea82704,114254388,0,0x0,8
tick,0x7ff86ea82704,114257046,0,0x0,8
tick,0x7ff86ea82704,114258380,0,0x0,8
tick,0x7ff86ea82704,114260330,0,0x0,8
tick,0x7ff86ea82704,114262361,0,0x0,8
tick,0x7ff86ea82704,114264292,0,0x0,8
tick,0x7ff86ea82704,114266331,0,0x0,8
tick,0x7ff86ea82704,114268263,0,0x0,8
tick,0x7ff86ea82704,114270157,0,0x0,8
tick,0x7ff86ea82704,114272241,0,0x0,8
tick,0x7ff86ea82704,114274172,0,0x0,8
tick,0x7ff86ea82704,114276392,0,0x0,8
tick,0x7ff86ea82704,114278258,0,0x0,8
tick,0x7ff86ea82704,114280242,0,0x0,8
tick,0x7ff86ea82704,114282375,0,0x0,8
tick,0x7ff86ea82704,114284265,0,0x0,8
tick,0x7ff86ea82704,114286137,0,0x0,8
tick,0x7ff86ea82704,114288269,0,0x0,8
tick,0x7ff86ea82704,114290154,0,0x0,8
tick,0x7ff86ea82704,114292234,0,0x0,8
tick,0x7ff86ea82704,114294341,0,0x0,8
tick,0x7ff86ea82704,114296245,0,0x0,8
tick,0x7ff86ea82704,114298429,0,0x0,8
tick,0x7ff86ea82704,114300161,0,0x0,8
tick,0x7ff86ea82704,114302154,0,0x0,8
tick,0x7ff86ea82704,114304173,0,0x0,8
tick,0x7ff86ea82704,114306207,0,0x0,8
tick,0x7ff86ea82704,114308081,0,0x0,8
tick,0x7ff86ea82704,114310234,0,0x0,8
tick,0x7ff86ea82704,114312071,0,0x0,8
tick,0x7ff86ea82704,114314360,0,0x0,8
tick,0x7ff86ea82704,114316078,0,0x0,8
tick,0x7ff86ea82704,114318340,0,0x0,8
tick,0x7ff86ea82704,114320206,0,0x0,8
tick,0x7ff86ea82704,114322260,0,0x0,8
tick,0x7ff86ea82704,114324142,0,0x0,8
tick,0x7ff86ea82704,114326239,0,0x0,8
tick,0x7ff86ea82704,114328020,0,0x0,8
tick,0x7ff86ea82704,114330157,0,0x0,8
tick,0x7ff86ea82704,114331994,0,0x0,8
tick,0x7ff86ea82704,114334105,0,0x0,8
tick,0x7ff86ea82704,114336028,0,0x0,8
tick,0x7ff86ea82704,114338200,0,0x0,8
tick,0x7ff86ea82704,114340095,0,0x0,8
tick,0x7ff86ea82704,114342056,0,0x0,8
tick,0x7ff86ea82704,114344129,0,0x0,8
tick,0x7ff86ea82704,114346145,0,0x0,8
tick,0x7ff86ea82704,114348035,0,0x0,8
tick,0x7ff86ea82704,114350112,0,0x0,8
tick,0x7ff86ea82704,114352015,0,0x0,8
tick,0x7ff86ea82704,114354047,0,0x0,8
tick,0x7ff86ea82704,114356052,0,0x0,8
tick,0x7ff86ea82704,114358080,0,0x0,8
tick,0x7ff86ea82704,114360061,0,0x0,8
tick,0x7ff86ea82704,114362120,0,0x0,8
tick,0x7ff86ea82704,114364070,0,0x0,8
tick,0x7ff86ea82704,114366063,0,0x0,8
tick,0x7ff86ea82704,114368002,0,0x0,8
tick,0x7ff86ea82704,114370041,0,0x0,8
tick,0x7ff86ea82704,114371980,0,0x0,8
tick,0x7ff86ea82704,114373993,0,0x0,8
tick,0x7ff86ea82704,114376027,0,0x0,8
tick,0x7ff86ea82704,114377996,0,0x0,8
tick,0x7ff86ea82704,114379953,0,0x0,8
tick,0x7ff86ea82704,114381955,0,0x0,8
tick,0x7ff86ea82704,114384299,0,0x0,8
tick,0x7ff86ea82704,114386060,0,0x0,8
tick,0x7ff86ea82704,114388013,0,0x0,8
tick,0x7ff86ea82704,114389985,0,0x0,8
tick,0x7ff86ea82704,114391989,0,0x0,8
tick,0x7ff86ea82704,114394071,0,0x0,8
tick,0x7ff86ea82704,114395917,0,0x0,8
tick,0x7ff86ea82704,114397932,0,0x0,8
tick,0x7ff86ea82704,114400027,0,0x0,8
tick,0x7ff86ea82704,114402109,0,0x0,8
tick,0x7ff86ea82704,114403953,0,0x0,8
tick,0x7ff86ea82704,114406094,0,0x0,8
tick,0x7ff86ea82704,114407935,0,0x0,8
tick,0x7ff86ea82704,114410052,0,0x0,8
tick,0x7ff86ea82704,114411788,0,0x0,8
tick,0x7ff86ea82704,114413964,0,0x0,8
tick,0x7ff86ea82704,114415873,0,0x0,8
tick,0x7ff86ea82704,114417850,0,0x0,8
tick,0x7ff86ea82704,114419894,0,0x0,8
tick,0x7ff86ea82704,114421863,0,0x0,8
tick,0x7ff86ea82704,114424030,0,0x0,8
tick,0x7ff86ea82704,114425804,0,0x0,8
tick,0x7ff86ea82704,114427987,0,0x0,8
tick,0x7ff86ea82704,114429904,0,0x0,8
tick,0x7ff86ea82704,114432065,0,0x0,8
tick,0x7ff86ea82704,114433908,0,0x0,8
tick,0x7ff86ea82704,114435905,0,0x0,8
tick,0x7ff86ea82704,114437882,0,0x0,8
tick,0x7ff86ea82704,114439979,0,0x0,8
tick,0x7ff86ea82704,114441835,0,0x0,8
tick,0x7ff86ea82704,114443898,0,0x0,8
tick,0x7ff86ea82704,114445812,0,0x0,8
tick,0x7ff86ea82704,114447905,0,0x0,8
tick,0x7ff86ea82704,114449817,0,0x0,8
tick,0x7ff86ea82704,114451883,0,0x0,8
tick,0x7ff86ea82704,114453917,0,0x0,8
tick,0x7ff86ea82704,114455838,0,0x0,8
tick,0x7ff86ea82704,114457762,0,0x0,8
tick,0x7ff86ea82704,114459919,0,0x0,8
tick,0x7ff86ea82704,114461727,0,0x0,8
tick,0x7ff86ea82704,114463908,0,0x0,8
tick,0x7ff86ea82704,114465741,0,0x0,8
tick,0x7ff86ea82704,114467792,0,0x0,8
tick,0x7ff86ea82704,114469707,0,0x0,8
tick,0x7ff86ea82704,114471730,0,0x0,8
tick,0x7ff86ea82704,114473684,0,0x0,8
tick,0x7ff86ea82704,114475905,0,0x0,8
tick,0x7ff86ea82704,114477660,0,0x0,8
tick,0x7ff86ea82704,114479908,0,0x0,8
tick,0x7ff86ea82704,114481779,0,0x0,8
tick,0x7ff86ea82704,114483856,0,0x0,8
tick,0x7ff86ea82704,114485615,0,0x0,8
tick,0x7ff86ea82704,114487745,0,0x0,8
tick,0x7ff86ea82704,114489725,0,0x0,8
tick,0x7ff86ea82704,114491643,0,0x0,8
tick,0x7ff86ea82704,114493659,0,0x0,8
tick,0x7ff86ea82704,114495719,0,0x0,8
tick,0x7ff86ea82704,114497791,0,0x0,8
tick,0x7ff86ea82704,114499709,0,0x0,8
tick,0x7ff86ea82704,114501682,0,0x0,8
tick,0x7ff86ea82704,114503706,0,0x0,8
tick,0x7ff86ea82704,114505674,0,0x0,8
tick,0x7ff86ea82704,114507501,0,0x0,8
tick,0x7ff86ea82704,114509716,0,0x0,8
tick,0x7ff86ea82704,114511558,0,0x0,8
tick,0x7ff86ea82704,114513775,0,0x0,8
tick,0x7ff86ea82704,114515591,0,0x0,8
tick,0x7ff86ea82704,114517711,0,0x0,8
tick,0x7ff86ea82704,114519632,0,0x0,8
tick,0x7ff86ea82704,114521853,0,0x0,8
tick,0x7ff86ea82704,114523596,0,0x0,8
tick,0x7ff86ea82704,114525605,0,0x0,8
tick,0x7ff86ea82704,114527619,0,0x0,8
tick,0x7ff86ea82704,114529560,0,0x0,8
tick,0x7ff86ea82704,114531732,0,0x0,8
tick,0x7ff86ea82704,114533556,0,0x0,8
tick,0x7ff86ea82704,114535625,0,0x0,8
tick,0x7ff86ea82704,114537645,0,0x0,8
tick,0x7ff86ea82704,114539662,0,0x0,8
tick,0x7ff86ea82704,114541516,0,0x0,8
tick,0x7ff86ea82704,114543646,0,0x0,8
tick,0x7ff86ea82704,114545527,0,0x0,8
tick,0x7ff86ea82704,114547697,0,0x0,8
tick,0x7ff86ea82704,114549500,0,0x0,8
tick,0x7ff86ea82704,114551684,0,0x0,8
tick,0x7ff86ea82704,114553566,0,0x0,8
tick,0x7ff86ea82704,114555585,0,0x0,8
tick,0x7ff86ea82704,114557582,0,0x0,8
tick,0x7ff86ea82704,114559605,0,0x0,8
tick,0x7ff86ea82704,114561410,0,0x0,8
tick,0x7ff86ea82704,114563810,0,0x0,8
tick,0x7ff86ea82704,114565444,0,0x0,8
tick,0x7ff86ea82704,114567563,0,0x0,8
tick,0x7ff86ea82704,114569594,0,0x0,8
tick,0x7ff86ea82704,114571585,0,0x0,8
tick,0x7ff86ea82704,114573704,0,0x0,8
tick,0x7ff86ea82704,114575663,0,0x0,8
tick,0x7ff86ea82704,114577467,0,0x0,8
tick,0x7ff86ea82704,114579813,0,0x0,8
tick,0x7ff86ea82704,114581639,0,0x0,8
tick,0x7ff86ea82704,114583472,0,0x0,8
tick,0x7ff86ea82704,114585533,0,0x0,8
tick,0x7ff86ea82704,114587478,0,0x0,8
tick,0x7ff86ea82704,114589441,0,0x0,8
tick,0x7ff86ea82704,114591548,0,0x0,8
tick,0x7ff86ea82704,114593463,0,0x0,8
tick,0x7ff86ea82704,114595599,0,0x0,8
tick,0x7ff86ea82704,114597334,0,0x0,8
tick,0x7ff86ea82704,114599490,0,0x0,8
tick,0x7ff86ea82704,114601431,0,0x0,8
tick,0x7ff86ea82704,114603459,0,0x0,8
tick,0x7ff86ea82704,114605306,0,0x0,8
tick,0x7ff86ea82704,114607617,0,0x0,8
tick,0x7ff86ea82704,114609386,0,0x0,8
tick,0x7ff86ea82704,114611512,0,0x0,8
tick,0x7ff86ea82704,114613249,0,0x0,8
tick,0x7ff86ea82704,114615369,0,0x0,8
tick,0x7ff86ea82704,114617339,0,0x0,8
tick,0x7ff86ea82704,114619291,0,0x0,8
tick,0x7ff86ea82704,114621347,0,0x0,8
tick,0x7ff86ea82704,114623403,0,0x0,8
tick,0x7ff86ea82704,114627530,0,0x0,8
tick,0x7ff86ea82704,114629593,0,0x0,8
tick,0x7ff86ea82704,114631534,0,0x0,8
tick,0x7ff86ea82704,114633462,0,0x0,8
tick,0x7ff86ea82704,114635576,0,0x0,8
tick,0x7ff86ea82704,114637411,0,0x0,8
tick,0x7ff86ea82704,114639721,0,0x0,8
tick,0x7ff86ea82704,114641360,0,0x0,8
tick,0x7ff86ea82704,114643362,0,0x0,8
tick,0x7ff86ea82704,114645330,0,0x0,8
tick,0x7ff86ea82704,114647452,0,0x0,8
tick,0x7ff86ea82704,114649498,0,0x0,8
tick,0x7ff86ea82704,114651587,0,0x0,8
tick,0x7ff86ea82704,114653359,0,0x0,8
tick,0x7ff86ea82704,114655302,0,0x0,8
tick,0x7ff86ea82704,114657408,0,0x0,8
tick,0x7ff86ea82704,114659379,0,0x0,8
tick,0x7ff86ea82704,114661338,0,0x0,8
tick,0x7ff86ea82704,114663384,0,0x0,8
tick,0x7ff86ea82704,114665401,0,0x0,8
tick,0x7ff86ea82704,114667346,0,0x0,8
tick,0x7ff86ea82704,114669355,0,0x0,8
tick,0x7ff86ea82704,114671487,0,0x0,8
tick,0x7ff86ea82704,114673311,0,0x0,8
tick,0x7ff86ea82704,114675439,0,0x0,8
tick,0x7ff86ea82704,114677203,0,0x0,8
tick,0x7ff86ea82704,114679374,0,0x0,8
tick,0x7ff86ea82704,114681269,0,0x0,8
tick,0x7ff86ea82704,114683370,0,0x0,8
tick,0x7ff86ea82704,114685161,0,0x0,8
tick,0x7ff86ea82704,114687415,0,0x0,8
tick,0x7ff86ea82704,114689196,0,0x0,8
tick,0x7ff86ea82704,114691354,0,0x0,8
tick,0x7ff86ea82704,114693173,0,0x0,8
tick,0x7ff86ea82704,114695353,0,0x0,8
tick,0x7ff86ea82704,114697202,0,0x0,8
tick,0x7ff86ea82704,114699267,0,0x0,8
tick,0x7ff86ea82704,114701203,0,0x0,8
tick,0x7ff86ea82704,114703159,0,0x0,8
tick,0x7ff86ea82704,114705172,0,0x0,8
tick,0x7ff86ea82704,114707260,0,0x0,8
tick,0x7ff86ea82704,114709166,0,0x0,8
tick,0x7ff86ea82704,114711120,0,0x0,8
tick,0x7ff86ea82704,114713298,0,0x0,8
tick,0x7ff86ea82704,114715371,0,0x0,8
tick,0x7ff86ea82704,114717282,0,0x0,8
tick,0x7ff86ea82704,114719149,0,0x0,8
tick,0x7ff86ea82704,114721143,0,0x0,8
tick,0x7ff86ea82704,114723189,0,0x0,8
tick,0x7ff86ea82704,114725195,0,0x0,8
tick,0x7ff86ea82704,114727139,0,0x0,8
tick,0x7ff86ea82704,114729146,0,0x0,8
tick,0x7ff86ea82704,114731158,0,0x0,8
tick,0x7ff86ea82704,114733132,0,0x0,8
tick,0x7ff86ea82704,114735134,0,0x0,8
tick,0x7ff86ea82704,114737122,0,0x0,8
tick,0x7ff86ea82704,114739158,0,0x0,8
tick,0x7ff86ea82704,114741133,0,0x0,8
tick,0x7ff86ea82704,114743097,0,0x0,8
tick,0x7ff86ea82704,114745205,0,0x0,8
tick,0x7ff86ea82704,114747150,0,0x0,8
tick,0x7ff86ea82704,114749078,0,0x0,8
tick,0x7ff86ea82704,114750972,0,0x0,8
tick,0x7ff86ea82704,114753126,0,0x0,8
tick,0x7ff86ea82704,114754973,0,0x0,8
tick,0x7ff86ea82704,114757100,0,0x0,8
tick,0x7ff86ea82704,114759035,0,0x0,8
tick,0x7ff86ea82704,114761102,0,0x0,8
tick,0x7ff86ea82704,114763116,0,0x0,8
tick,0x7ff86ea82704,114765056,0,0x0,8
tick,0x7ff86ea82704,114767095,0,0x0,8
tick,0x7ff86ea82704,114769128,0,0x0,8
tick,0x7ff86ea82704,114771005,0,0x0,8
tick,0x7ff86ea82704,114773160,0,0x0,8
tick,0x7ff86ea82704,114775151,0,0x0,8
tick,0x7ff86ea82704,114777100,0,0x0,8
tick,0x7ff86ea82704,114778961,0,0x0,8
tick,0x7ff86ea82704,114780926,0,0x0,8
tick,0x7ff86ea82704,114783078,0,0x0,8
tick,0x7ff86ea82704,114784931,0,0x0,8
tick,0x7ff86ea82704,114786933,0,0x0,8
tick,0x7ff86ea82704,114789019,0,0x0,8
tick,0x7ff86ea82704,114790917,0,0x0,8
tick,0x7ff86ea82704,114793030,0,0x0,8
tick,0x7ff86ea82704,114794964,0,0x0,8
tick,0x7ff86ea82704,114797013,0,0x0,8
tick,0x7ff86ea82704,114798969,0,0x0,8
tick,0x7ff86ea82704,114800974,0,0x0,8
tick,0x7ff86ea82704,114802813,0,0x0,8
tick,0x7ff86ea82704,114804990,0,0x0,8
tick,0x7ff86ea82704,114807047,0,0x0,8
tick,0x7ff86ea82704,114808976,0,0x0,8
tick,0x7ff86ea82704,114811001,0,0x0,8
tick,0x7ff86ea82704,114812837,0,0x0,8
tick,0x7ff86ea82704,114815046,0,0x0,8
tick,0x7ff86ea82704,114817078,0,0x0,8
tick,0x7ff86ea82704,114819004,0,0x0,8
tick,0x7ff86ea82704,114821079,0,0x0,8
tick,0x7ff86ea82704,114822938,0,0x0,8
tick,0x7ff86ea82704,114824860,0,0x0,8
tick,0x7ff86ea82704,114826843,0,0x0,8
tick,0x7ff86ea82704,114829003,0,0x0,8
tick,0x7ff86ea82704,114830854,0,0x0,8
tick,0x7ff86ea82704,114832896,0,0x0,8
tick,0x7ff86ea82704,114834873,0,0x0,8
tick,0x7ff86ea82704,114836969,0,0x0,8
tick,0x7ff86ea82704,114838874,0,0x0,8
tick,0x7ff86ea82704,114840920,0,0x0,8
tick,0x7ff86ea82704,114842719,0,0x0,8
tick,0x7ff86ea82704,114844880,0,0x0,8
tick,0x7ff86ea82704,114846802,0,0x0,8
tick,0x7ff86ea82704,114848921,0,0x0,8
tick,0x7ff86ea82704,114850833,0,0x0,8
tick,0x7ff86ea82704,114852941,0,0x0,8
tick,0x7ff86ea82704,114854961,0,0x0,8
tick,0x7ff86ea82704,114857140,0,0x0,8
tick,0x7ff86ea82704,114858760,0,0x0,8
tick,0x7ff86ea82704,114860832,0,0x0,8
tick,0x7ff86ea82704,114862734,0,0x0,8
tick,0x7ff86ea82704,114864753,0,0x0,8
tick,0x7ff86ea82704,114866835,0,0x0,8
tick,0x7ff86ea82704,114868709,0,0x0,8
tick,0x7ff86ea82704,114870841,0,0x0,8
tick,0x7ff86ea82704,114872719,0,0x0,8
tick,0x7ff86ea82704,114874809,0,0x0,8
tick,0x7ff86ea82704,114876826,0,0x0,8
tick,0x7ff86ea82704,114878836,0,0x0,8
tick,0x7ff86ea82704,114880741,0,0x0,8
tick,0x7ff86ea82704,114882942,0,0x0,8
tick,0x7ff86ea82704,114884904,0,0x0,8
tick,0x7ff86ea82704,114886847,0,0x0,8
tick,0x7ff86ea82704,114888734,0,0x0,8
tick,0x7ff86ea82704,114890782,0,0x0,8
tick,0x7ff86ea82704,114892789,0,0x0,8
tick,0x7ff86ea82704,114894695,0,0x0,8
tick,0x7ff86ea82704,114896709,0,0x0,8
tick,0x7ff86ea82704,114898929,0,0x0,8
tick,0x7ff86ea82704,114900809,0,0x0,8
tick,0x7ff86ea82704,114902733,0,0x0,8
tick,0x7ff86ea82704,114904692,0,0x0,8
tick,0x7ff86ea82704,114906798,0,0x0,8
tick,0x7ff86ea82704,114909037,0,0x0,8
tick,0x7ff86ea82704,114910682,0,0x0,8
tick,0x7ff86ea82704,114912595,0,0x0,8
tick,0x7ff86ea82704,114914758,0,0x0,8
tick,0x7ff86ea82704,114916957,0,0x0,8
tick,0x7ff86ea82704,114918633,0,0x0,8
tick,0x7ff86ea82704,114920502,0,0x0,8
tick,0x7ff86ea82704,114922597,0,0x0,8
tick,0x7ff86ea82704,114924601,0,0x0,8
tick,0x7ff86ea82704,114926649,0,0x0,8
tick,0x7ff86ea82704,114928466,0,0x0,8
tick,0x7ff86ea82704,114930542,0,0x0,8
tick,0x7ff86ea82704,114932872,0,0x0,8
tick,0x7ff86ea82704,114934490,0,0x0,8
tick,0x7ff86ea82704,114936572,0,0x0,8
tick,0x7ff86ea82704,114938449,0,0x0,8
tick,0x7ff86ea82704,114940511,0,0x0,8
tick,0x7ff86ea82704,114942587,0,0x0,8
tick,0x7ff86ea82704,114944457,0,0x0,8
tick,0x7ff86ea82704,114946484,0,0x0,8
tick,0x7ff86ea82704,114948642,0,0x0,8
tick,0x7ff86ea82704,114950419,0,0x0,8
tick,0x7ff86ea82704,114952425,0,0x0,8
tick,0x7ff86ea82704,114954458,0,0x0,8
tick,0x7ff86ea82704,114956369,0,0x0,8
tick,0x7ff86ea82704,114958542,0,0x0,8
tick,0x7ff86ea82704,114960404,0,0x0,8
tick,0x7ff86ea82704,114962551,0,0x0,8
tick,0x7ff86ea82704,114964378,0,0x0,8
tick,0x7ff86ea82704,114966461,0,0x0,8
tick,0x7ff86ea82704,114968386,0,0x0,8
tick,0x7ff86ea82704,114970379,0,0x0,8
tick,0x7ff86ea82704,114972410,0,0x0,8
tick,0x7ff86ea82704,114974366,0,0x0,8
tick,0x7ff86ea82704,114976317,0,0x0,8
tick,0x7ff86ea82704,114978357,0,0x0,8
tick,0x7ff86ea82704,114980413,0,0x0,8
tick,0x7ff86ea82704,114982303,0,0x0,8
tick,0x7ff86ea82704,114984413,0,0x0,8
tick,0x7ff86ea82704,114986228,0,0x0,8
tick,0x7ff86ea82704,114988478,0,0x0,8
tick,0x7ff86ea82704,114990319,0,0x0,8
tick,0x7ff86ea82704,114992425,0,0x0,8
tick,0x7ff86ea82704,114994248,0,0x0,8
tick,0x7ff86ea82704,114996408,0,0x0,8
tick,0x7ff86ea82704,114998207,0,0x0,8
tick,0x7ff86ea82704,115000312,0,0x0,8
tick,0x7ff86ea82704,115002232,0,0x0,8
tick,0x7ff86ea82704,115004307,0,0x0,8
tick,0x7ff86ea82704,115006242,0,0x0,8
tick,0x7ff86ea82704,115008360,0,0x0,8
tick,0x7ff86ea82704,115010375,0,0x0,8
tick,0x7ff86ea82704,115012440,0,0x0,8
tick,0x7ff86ea82704,115014345,0,0x0,8
tick,0x7ff86ea82704,115016393,0,0x0,8
tick,0x7ff86ea82704,115018134,0,0x0,8
tick,0x7ff86ea82704,115020342,0,0x0,8
tick,0x7ff86ea82704,115022337,0,0x0,8
tick,0x7ff86ea82704,115024456,0,0x0,8
tick,0x7ff86ea82704,115026469,0,0x0,8
tick,0x7ff86ea82704,115028332,0,0x0,8
tick,0x7ff86ea82704,115030240,0,0x0,8
tick,0x7ff86ea82704,115032286,0,0x0,8
tick,0x7ff86ea82704,115034224,0,0x0,8
tick,0x7ff86ea82704,115036312,0,0x0,8
tick,0x7ff86ea82704,115038366,0,0x0,8
tick,0x7ff86ea82704,115040230,0,0x0,8
tick,0x7ff86ea82704,115042258,0,0x0,8
tick,0x7ff86ea82704,115044184,0,0x0,8
tick,0x7ff86ea82704,115046301,0,0x0,8
tick,0x7ff86ea82704,115048151,0,0x0,8
tick,0x7ff86ea82704,115050342,0,0x0,8
tick,0x7ff86ea82704,115052189,0,0x0,8
tick,0x7ff86ea82704,115054371,0,0x0,8
tick,0x7ff86ea82704,115056151,0,0x0,8
tick,0x7ff86ea82704,115058160,0,0x0,8
tick,0x7ff86ea82704,115060079,0,0x0,8
tick,0x7ff86ea82704,115062236,0,0x0,8
tick,0x7ff86ea82704,115064099,0,0x0,8
tick,0x7ff86ea82704,115066258,0,0x0,8
tick,0x7ff86ea82704,115068249,0,0x0,8
tick,0x7ff86ea82704,115070178,0,0x0,8
tick,0x7ff86ea82704,115072361,0,0x0,8
tick,0x7ff86ea82704,115074183,0,0x0,8
tick,0x7ff86ea82704,115076463,0,0x0,8
tick,0x7ff86ea82704,115078257,0,0x0,8
tick,0x7ff86ea82704,115080228,0,0x0,8
tick,0x7ff86ea82704,115082137,0,0x0,8
tick,0x7ff86ea82704,115084127,0,0x0,8
tick,0x7ff86ea82704,115086090,0,0x0,8
tick,0x7ff86ea82704,115088083,0,0x0,8
tick,0x7ff86ea82704,115090191,0,0x0,8
tick,0x7ff86ea82704,115092118,0,0x0,8
tick,0x7ff86ea82704,115094164,0,0x0,8
tick,0x7ff86ea82704,115096276,0,0x0,8
tick,0x7ff86ea82704,115098266,0,0x0,8
tick,0x7ff86ea82704,115100137,0,0x0,8
tick,0x7ff86ea82704,115102153,0,0x0,8
tick,0x7ff86ea82704,115104102,0,0x0,8
tick,0x7ff86ea82704,115106188,0,0x0,8
tick,0x7ff86ea82704,115108168,0,0x0,8
tick,0x7ff86ea82704,115110339,0,0x0,8
tick,0x7ff86ea82704,115112077,0,0x0,8
tick,0x7ff86ea82704,115116455,0,0x0,8
tick,0x7ff86ea82704,115119353,0,0x0,8
tick,0x7ff86ea82704,115120884,0,0x0,8
tick,0x7ff86ea82704,115123150,0,0x0,8
tick,0x7ff86ea82704,115125228,0,0x0,8
tick,0x7ff86ea82704,115131137,0,0x0,8
tick,0x7ff86ea82704,115133168,0,0x0,8
tick,0x7ff86ea82704,115134857,0,0x0,8
tick,0x7ff86ea82704,115136850,0,0x0,8
tick,0x7ff86ea82704,115138956,0,0x0,8
tick,0x7ff86ea82704,115140954,0,0x0,8
tick,0x7ff86ea82704,115142808,0,0x0,8
tick,0x7ff86ea82704,115144854,0,0x0,8
tick,0x7ff86ea82704,115146767,0,0x0,8
tick,0x7ff86ea82704,115148808,0,0x0,8
tick,0x7ff86ea82704,115150772,0,0x0,8
tick,0x7ff86ea82704,115153014,0,0x0,8
tick,0x7ff86ea82704,115154837,0,0x0,8
tick,0x7ff86ea82704,115156804,0,0x0,8
tick,0x7ff86ea82704,115158811,0,0x0,8
tick,0x7ff86ea82704,115160993,0,0x0,8
tick,0x7ff86ea82704,115162751,0,0x0,8
tick,0x7ff86ea82704,115164933,0,0x0,8
tick,0x7ff86ea82704,115166751,0,0x0,8
tick,0x7ff86ea82704,115168889,0,0x0,8
tick,0x7ff86ea82704,115170879,0,0x0,8
tick,0x7ff86ea82704,115172783,0,0x0,8
tick,0x7ff86ea82704,115174918,0,0x0,8
tick,0x7ff86ea82704,115176759,0,0x0,8
tick,0x7ff86ea82704,115179034,0,0x0,8
tick,0x7ff86ea82704,115181364,0,0x0,8
tick,0x7ff86ea82704,115183042,0,0x0,8
tick,0x7ff86ea82704,115184823,0,0x0,8
tick,0x7ff86ea82704,115186952,0,0x0,8
tick,0x7ff86ea82704,115189277,0,0x0,8
tick,0x7ff86ea82704,115190678,0,0x0,8
tick,0x7ff86ea82704,115192955,0,0x0,8
tick,0x7ff86ea82704,115194733,0,0x0,8
tick,0x7ff86ea82704,115196820,0,0x0,8
tick,0x7ff86ea82704,115198889,0,0x0,8
tick,0x7ff86ea82704,115201000,0,0x0,8
tick,0x7ff86ea82704,115202764,0,0x0,8
tick,0x7ff86ea82704,115204787,0,0x0,8
tick,0x7ff86ea82704,115206801,0,0x0,8
tick,0x7ff86ea82704,115208725,0,0x0,8
tick,0x7ff86ea82704,115211070,0,0x0,8
tick,0x7ff86ea82704,115212682,0,0x0,8
tick,0x7ff86ea82704,115214729,0,0x0,8
tick,0x7ff86ea82704,115216727,0,0x0,8
tick,0x7ff86ea82704,115219055,0,0x0,8
tick,0x7ff86ea82704,115220748,0,0x0,8
tick,0x7ff86ea82704,115222656,0,0x0,8
tick,0x7ff86ea82704,115224621,0,0x0,8
tick,0x7ff86ea82704,115226641,0,0x0,8
tick,0x7ff86ea82704,115228761,0,0x0,8
tick,0x7ff86ea82704,115230742,0,0x0,8
tick,0x7ff86ea82704,115232605,0,0x0,8
tick,0x7ff86ea82704,115234520,0,0x0,8
tick,0x7ff86ea82704,115236673,0,0x0,8
tick,0x7ff86ea82704,115238584,0,0x0,8
tick,0x7ff86ea82704,115240639,0,0x0,8
tick,0x7ff86ea82704,115242583,0,0x0,8
tick,0x7ff86ea82704,115244677,0,0x0,8
tick,0x7ff86ea82704,115246615,0,0x0,8
tick,0x7ff86ea82704,115248583,0,0x0,8
tick,0x7ff86ea82704,115250573,0,0x0,8
tick,0x7ff86ea82704,115252549,0,0x0,8
tick,0x7ff86ea82704,115254607,0,0x0,8
tick,0x7ff86ea82704,115256590,0,0x0,8
tick,0x7ff86ea82704,115258532,0,0x0,8
tick,0x7ff86ea82704,115260611,0,0x0,8
tick,0x7ff86ea82704,115262527,0,0x0,8
tick,0x7ff86ea82704,115264406,0,0x0,8
tick,0x7ff86ea82704,115266553,0,0x0,8
tick,0x7ff86ea82704,115268480,0,0x0,8
tick,0x7ff86ea82704,115270447,0,0x0,8
tick,0x7ff86ea82704,115272548,0,0x0,8
tick,0x7ff86ea82704,115274469,0,0x0,8
tick,0x7ff86ea82704,115276544,0,0x0,8
tick,0x7ff86ea82704,115278499,0,0x0,8
tick,0x7ff86ea82704,115280441,0,0x0,8
tick,0x7ff86ea82704,115282491,0,0x0,8
tick,0x7ff86ea82704,115284512,0,0x0,8
tick,0x7ff86ea82704,115286521,0,0x0,8
tick,0x7ff86ea82704,115288435,0,0x0,8
tick,0x7ff86ea82704,115290519,0,0x0,8
tick,0x7ff86ea82704,115292431,0,0x0,8
tick,0x7ff86ea82704,115294623,0,0x0,8
tick,0x7ff86ea82704,115296449,0,0x0,8
tick,0x7ff86ea82704,115298515,0,0x0,8
tick,0x7ff86ea82704,115300445,0,0x0,8
tick,0x7ff86ea82704,115302391,0,0x0,8
tick,0x7ff86ea82704,115304404,0,0x0,8
tick,0x7ff86ea82704,115306412,0,0x0,8
tick,0x7ff86ea82704,115308416,0,0x0,8
tick,0x7ff86ea82704,115310313,0,0x0,8
tick,0x7ff86ea82704,115312411,0,0x0,8
tick,0x7ff86ea82704,115314340,0,0x0,8
tick,0x7ff86ea82704,115316373,0,0x0,8
tick,0x7ff86ea82704,115318368,0,0x0,8
tick,0x7ff86ea82704,115320391,0,0x0,8
tick,0x7ff86ea82704,115322436,0,0x0,8
tick,0x7ff86ea82704,115324445,0,0x0,8
tick,0x7ff86ea82704,115326338,0,0x0,8
tick,0x7ff86ea82704,115328403,0,0x0,8
tick,0x7ff86ea82704,115330311,0,0x0,8
tick,0x7ff86ea82704,115332430,0,0x0,8
tick,0x7ff86ea82704,115334370,0,0x0,8
tick,0x7ff86ea82704,115336374,0,0x0,8
tick,0x7ff86ea82704,115338416,0,0x0,8
tick,0x7ff86ea82704,115340697,0,0x0,8
tick,0x7ff86ea82704,115342281,0,0x0,8
tick,0x7ff86ea82704,115344329,0,0x0,8
tick,0x7ff86ea82704,115346359,0,0x0,8
tick,0x7ff86ea82704,115348726,0,0x0,8
tick,0x7ff86ea82704,115351867,0,0x0,8
tick,0x7ff86ea82704,115353508,0,0x0,8
tick,0x7ff86ea82704,115355878,0,0x0,8
tick,0x7ff86ea82704,115357542,0,0x0,8
tick,0x7ff86ea82704,115359718,0,0x0,8
tick,0x7ff86ea82704,115361468,0,0x0,8
tick,0x7ff86ea82704,115363710,0,0x0,8
tick,0x7ff86ea82704,115365426,0,0x0,8
tick,0x7ff86ea82704,115367436,0,0x0,8
tick,0x7ff86ea82704,115369735,0,0x0,8
tick,0x7ff86ea82704,115371371,0,0x0,8
tick,0x7ff86ea82704,115373570,0,0x0,8
tick,0x7ff86ea82704,115375895,0,0x0,8
tick,0x7ff86ea82704,115377315,0,0x0,8
tick,0x7ff86ea82704,115379601,0,0x0,8
tick,0x7ff86ea82704,115381433,0,0x0,8
tick,0x7ff86ea82704,115383504,0,0x0,8
tick,0x7ff86ea82704,115385472,0,0x0,8
tick,0x7ff86ea82704,115387399,0,0x0,8
tick,0x7ff86ea82704,115389368,0,0x0,8
tick,0x7ff86ea82704,115391540,0,0x0,8
tick,0x7ff86ea82704,115393382,0,0x0,8
tick,0x7ff86ea82704,115395347,0,0x0,8
tick,0x7ff86ea82704,115397280,0,0x0,8
tick,0x7ff86ea82704,115399312,0,0x0,8
tick,0x7ff86ea82704,115401357,0,0x0,8
tick,0x7ff86ea82704,115403187,0,0x0,8
tick,0x7ff86ea82704,115405387,0,0x0,8
tick,0x7ff86ea82704,115407280,0,0x0,8
tick,0x7ff86ea82704,115409349,0,0x0,8
tick,0x7ff86ea82704,115411203,0,0x0,8
tick,0x7ff86ea82704,115413295,0,0x0,8
tick,0x7ff86ea82704,115415260,0,0x0,8
tick,0x7ff86ea82704,115417391,0,0x0,8
tick,0x7ff86ea82704,115419241,0,0x0,8
tick,0x7ff86ea82704,115421357,0,0x0,8
tick,0x7ff86ea82704,115423160,0,0x0,8
tick,0x7ff86ea82704,115425291,0,0x0,8
tick,0x7ff86ea82704,115427414,0,0x0,8
tick,0x7ff86ea82704,115429300,0,0x0,8
tick,0x7ff86ea82704,115431167,0,0x0,8
tick,0x7ff86ea82704,115433387,0,0x0,8
tick,0x7ff86ea82704,115435210,0,0x0,8
tick,0x7ff86ea82704,115437353,0,0x0,8
tick,0x7ff86ea82704,115439448,0,0x0,8
tick,0x7ff86ea82704,115441177,0,0x0,8
tick,0x7ff86ea82704,115443355,0,0x0,8
tick,0x7ff86ea82704,115445266,0,0x0,8
tick,0x7ff86ea82704,115447257,0,0x0,8
tick,0x7ff86ea82704,115449694,0,0x0,8
tick,0x7ff86ea82704,115451252,0,0x0,8
tick,0x7ff86ea82704,115453566,0,0x0,8
tick,0x7ff86ea82704,115455131,0,0x0,8
tick,0x7ff86ea82704,115457447,0,0x0,8
tick,0x7ff86ea82704,115459057,0,0x0,8
tick,0x7ff86ea82704,115461553,0,0x0,8
tick,0x7ff86ea82704,115463065,0,0x0,8
tick,0x7ff86ea82704,115465414,0,0x0,8
tick,0x7ff86ea82704,115467097,0,0x0,8
tick,0x7ff86ea82704,115469169,0,0x0,8
tick,0x7ff86ea82704,115471438,0,0x0,8
tick,0x7ff86ea82704,115473129,0,0x0,8
tick,0x7ff86ea82704,115475296,0,0x0,8
tick,0x7ff86ea82704,115477190,0,0x0,8
tick,0x7ff86ea82704,115479064,0,0x0,8
tick,0x7ff86ea82704,115481137,0,0x0,8
tick,0x7ff86ea82704,115483361,0,0x0,8
tick,0x7ff86ea82704,115485083,0,0x0,8
tick,0x7ff86ea82704,115487418,0,0x0,8
tick,0x7ff86ea82704,115489096,0,0x0,8
tick,0x7ff86ea82704,115491203,0,0x0,8
tick,0x7ff86ea82704,115493185,0,0x0,8
tick,0x7ff86ea82704,115495151,0,0x0,8
tick,0x7ff86ea82704,115497220,0,0x0,8
tick,0x7ff86ea82704,115499573,0,0x0,8
tick,0x7ff86ea82704,115501126,0,0x0,8
tick,0x7ff86ea82704,115503171,0,0x0,8
tick,0x7ff86ea82704,115505029,0,0x0,8
tick,0x7ff86ea82704,115507248,0,0x0,8
tick,0x7ff86ea82704,115508924,0,0x0,8
tick,0x7ff86ea82704,115511201,0,0x0,8
tick,0x7ff86ea82704,115513032,0,0x0,8
tick,0x7ff86ea82704,115515654,0,0x0,8
tick,0x7ff86ea82704,115517065,0,0x0,8
tick,0x7ff86ea82704,115519024,0,0x0,8
tick,0x7ff86ea82704,115520868,0,0x0,8
tick,0x7ff86ea82704,115522944,0,0x0,8
tick,0x7ff86ea82704,115524864,0,0x0,8
tick,0x7ff86ea82704,115526993,0,0x0,8
tick,0x7ff86ea82704,115528871,0,0x0,8
tick,0x7ff86ea82704,115530930,0,0x0,8
tick,0x7ff86ea82704,115532863,0,0x0,8
tick,0x7ff86ea82704,115535060,0,0x0,8
tick,0x7ff86ea82704,115536844,0,0x0,8
tick,0x7ff86ea82704,115538794,0,0x0,8
tick,0x7ff86ea82704,115540752,0,0x0,8
tick,0x7ff86ea82704,115542782,0,0x0,8
tick,0x7ff86ea82704,115544764,0,0x0,8
tick,0x7ff86ea82704,115546766,0,0x0,8
tick,0x7ff86ea82704,115548804,0,0x0,8
tick,0x7ff86ea82704,115551184,0,0x0,8
tick,0x7ff86ea82704,115553216,0,0x0,8
tick,0x7ff86ea82704,115554724,0,0x0,8
tick,0x7ff86ea82704,115556937,0,0x0,8
tick,0x7ff86ea82704,115559049,0,0x0,8
tick,0x7ff86ea82704,115560790,0,0x0,8
tick,0x7ff86ea82704,115562902,0,0x0,8
tick,0x7ff86ea82704,115564657,0,0x0,8
tick,0x7ff86ea82704,115566832,0,0x0,8
tick,0x7ff86ea82704,115568692,0,0x0,8
tick,0x7ff86ea82704,115570985,0,0x0,8
tick,0x7ff86ea82704,115572797,0,0x0,8
tick,0x7ff86ea82704,115574708,0,0x0,8
tick,0x7ff86ea82704,115576812,0,0x0,8
tick,0x7ff86ea82704,115578851,0,0x0,8
tick,0x7ff86ea82704,115580660,0,0x0,8
tick,0x7ff86ea82704,115582683,0,0x0,8
tick,0x7ff86ea82704,115584980,0,0x0,8
tick,0x7ff86ea82704,115586811,0,0x0,8
tick,0x7ff86ea82704,115589083,0,0x0,8
tick,0x7ff86ea82704,115590970,0,0x0,8
tick,0x7ff86ea82704,115592627,0,0x0,8
tick,0x7ff86ea82704,115595603,0,0x0,8
tick,0x7ff86ea82704,115596669,0,0x0,8
tick,0x7ff86ea82704,115598980,0,0x0,8
tick,0x7ff86ea82704,115600996,0,0x0,8
tick,0x7ff86ea82704,115603042,0,0x0,8
tick,0x7ff86ea82704,115605232,0,0x0,8
tick,0x7ff86ea82704,115606787,0,0x0,8
tick,0x7ff86ea82704,115608639,0,0x0,8
tick,0x7ff86ea82704,115610588,0,0x0,8
tick,0x7ff86ea82704,115612582,0,0x0,8
tick,0x7ff86ea82704,115614599,0,0x0,8
tick,0x7ff86ea82704,115616658,0,0x0,8
tick,0x7ff86ea82704,115618564,0,0x0,8
tick,0x7ff86ea82704,115620608,0,0x0,8
tick,0x7ff86ea82704,115622495,0,0x0,8
tick,0x7ff86ea82704,115624675,0,0x0,8
tick,0x7ff86ea82704,115626505,0,0x0,8
tick,0x7ff86ea82704,115628747,0,0x0,8
tick,0x7ff86ea82704,115630479,0,0x0,8
tick,0x7ff86ea82704,115632700,0,0x0,8
tick,0x7ff86ea82704,115634643,0,0x0,8
tick,0x7ff86ea82704,115636599,0,0x0,8
tick,0x7ff86ea82704,115638478,0,0x0,8
tick,0x7ff86ea82704,115640648,0,0x0,8
tick,0x7ff86ea82704,115642507,0,0x0,8
tick,0x7ff86ea82704,115644693,0,0x0,8
tick,0x7ff86ea82704,115646644,0,0x0,8
tick,0x7ff86ea82704,115648597,0,0x0,8
tick,0x7ff86ea82704,115650574,0,0x0,8
tick,0x7ff86ea82704,115652497,0,0x0,8
tick,0x7ff86ea82704,115654616,0,0x0,8
tick,0x7ff86ea82704,115656566,0,0x0,8
tick,0x7ff86ea82704,115658546,0,0x0,8
tick,0x7ff86ea82704,115660536,0,0x0,8
tick,0x7ff86ea82704,115662433,0,0x0,8
tick,0x7ff86ea82704,115664564,0,0x0,8
tick,0x7ff86ea82704,115666392,0,0x0,8
tick,0x7ff86ea82704,115668511,0,0x0,8
tick,0x7ff86ea82704,115670408,0,0x0,8
tick,0x7ff86ea82704,115672638,0,0x0,8
tick,0x7ff86ea82704,115674466,0,0x0,8
tick,0x7ff86ea82704,115676543,0,0x0,8
tick,0x7ff86ea82704,115678730,0,0x0,8
tick,0x7ff86ea82704,115680477,0,0x0,8
tick,0x7ff86ea82704,115682382,0,0x0,8
tick,0x7ff86ea82704,115684462,0,0x0,8
tick,0x7ff86ea82704,115686501,0,0x0,8
tick,0x7ff86ea82704,115688479,0,0x0,8
tick,0x7ff86ea82704,115690598,0,0x0,8
tick,0x7ff86ea82704,115692451,0,0x0,8
tick,0x7ff86ea82704,115694587,0,0x0,8
tick,0x7ff86ea82704,115696521,0,0x0,8
tick,0x7ff86ea82704,115698649,0,0x0,8
tick,0x7ff86ea82704,115700424,0,0x0,8
tick,0x7ff86ea82704,115702442,0,0x0,8
tick,0x7ff86ea82704,115704506,0,0x0,8
tick,0x7ff86ea82704,115706300,0,0x0,8
tick,0x7ff86ea82704,115708375,0,0x0,8
tick,0x7ff86ea82704,115710314,0,0x0,8
tick,0x7ff86ea82704,115713212,0,0x0,8
tick,0x7ff86ea82704,115715541,0,0x0,8
tick,0x7ff86ea82704,115716585,0,0x0,8
tick,0x7ff86ea82704,115718308,0,0x0,8
tick,0x7ff86ea82704,115720568,0,0x0,8
tick,0x7ff86ea82704,115722604,0,0x0,8
tick,0x7ff86ea82704,115724614,0,0x0,8
tick,0x7ff86ea82704,115726297,0,0x0,8
tick,0x7ff86ea82704,115728347,0,0x0,8
tick,0x7ff86ea82704,115730523,0,0x0,8
tick,0x7ff86ea82704,115732628,0,0x0,8
tick,0x7ff86ea82704,115734964,0,0x0,8
tick,0x7ff86ea82704,115737900,0,0x0,8
tick,0x7ff86ea82704,115738895,0,0x0,8
tick,0x7ff86ea82704,115740547,0,0x0,8
tick,0x7ff86ea82704,115742652,0,0x0,8
tick,0x7ff86ea82704,115744400,0,0x0,8
tick,0x7ff86ea82704,115746350,0,0x0,8
tick,0x7ff86ea82704,115748752,0,0x0,8
tick,0x7ff86ea82704,115751227,0,0x0,8
tick,0x7ff86ea82704,115752255,0,0x0,8
tick,0x7ff86ea82704,115754319,0,0x0,8
tick,0x7ff86ea82704,115756589,0,0x0,8
tick,0x7ff86ea82704,115758561,0,0x0,8
tick,0x7ff86ea82704,115760564,0,0x0,8
tick,0x7ff86ea82704,115762707,0,0x0,8
tick,0x7ff86ea82704,115764348,0,0x0,8
tick,0x7ff86ea82704,115766465,0,0x0,8
tick,0x7ff86ea82704,115768665,0,0x0,8
tick,0x7ff86ea82704,115770484,0,0x0,8
tick,0x7ff86ea82704,115772379,0,0x0,8
tick,0x7ff86ea82704,115774899,0,0x0,8
tick,0x7ff86ea82704,115776126,0,0x0,8
tick,0x7ff86ea82704,115778187,0,0x0,8
tick,0x7ff86ea82704,115780214,0,0x0,8
tick,0x7ff86ea82704,115782443,0,0x0,8
tick,0x7ff86ea82704,115784165,0,0x0,8
tick,0x7ff86ea82704,115786243,0,0x0,8
tick,0x7ff86ea82704,115788069,0,0x0,8
tick,0x7ff86ea82704,115790293,0,0x0,8
tick,0x7ff86ea82704,115792066,0,0x0,8
tick,0x7ff86ea82704,115794188,0,0x0,8
tick,0x7ff86ea82704,115796125,0,0x0,8
tick,0x7ff86ea82704,115798255,0,0x0,8
tick,0x7ff86ea82704,115801415,0,0x0,8
tick,0x7ff86ea82704,115803561,0,0x0,8
tick,0x7ff86ea82704,115805284,0,0x0,8
tick,0x7ff86ea82704,115807800,0,0x0,8
tick,0x7ff86ea82704,115809105,0,0x0,8
tick,0x7ff86ea82704,115811495,0,0x0,8
tick,0x7ff86ea82704,115813064,0,0x0,8
tick,0x7ff86ea82704,115816225,0,0x0,8
tick,0x7ff86ea82704,115818135,0,0x0,8
tick,0x7ff86ea82704,115820415,0,0x0,8
tick,0x7ff86ea82704,115822298,0,0x0,8
tick,0x7ff86ea82704,115824152,0,0x0,8
tick,0x7ff86ea82704,115826154,0,0x0,8
tick,0x7ff86ea82704,115828211,0,0x0,8
tick,0x7ff86ea82704,115831169,0,0x0,8
tick,0x7ff86ea82704,115832363,0,0x0,8
tick,0x7ff86ea82704,115835714,0,0x0,8
tick,0x7ff86ea82704,115836805,0,0x0,8
tick,0x7ff86ea82704,115838417,0,0x0,8
tick,0x7ff86ea82704,115840280,0,0x0,8
tick,0x7ff86ea82704,115842130,0,0x0,8
tick,0x7ff86ea82704,115844153,0,0x0,8
tick,0x7ff86ea82704,115846174,0,0x0,8
tick,0x7ff86ea82704,115848314,0,0x0,8
tick,0x7ff86ea82704,115850311,0,0x0,8
tick,0x7ff86ea82704,115852150,0,0x0,8
tick,0x7ff86ea82704,115854250,0,0x0,8
tick,0x7ff86ea82704,115856263,0,0x0,8
tick,0x7ff86ea82704,115859191,0,0x0,8
tick,0x7ff86ea82704,115860739,0,0x0,8
tick,0x7ff86ea82704,115862054,0,0x0,8
tick,0x7ff86ea82704,115863999,0,0x0,8
tick,0x7ff86ea82704,115866321,0,0x0,8
tick,0x7ff86ea82704,115868250,0,0x0,8
tick,0x7ff86ea82704,115870588,0,0x0,8
tick,0x7ff86ea82704,115874554,0,0x0,8
tick,0x7ff86ea82704,115876488,0,0x0,8
tick,0x7ff86ea82704,115878149,0,0x0,8
tick,0x7ff86ea82704,115880026,0,0x0,8
tick,0x7ff86ea82704,115882198,0,0x0,8
tick,0x7ff86ea82704,115884154,0,0x0,8
tick,0x7ff86ea82704,115885863,0,0x0,8
tick,0x7ff86ea82704,115887956,0,0x0,8
tick,0x7ff86ea82704,115889892,0,0x0,8
tick,0x7ff86ea82704,115891979,0,0x0,8
tick,0x7ff86ea82704,115894012,0,0x0,8
tick,0x7ff86ea82704,115895915,0,0x0,8
tick,0x7ff86ea82704,115897896,0,0x0,8
tick,0x7ff86ea82704,115899879,0,0x0,8
tick,0x7ff86ea82704,115901926,0,0x0,8
tick,0x7ff86ea82704,115903878,0,0x0,8
tick,0x7ff86ea82704,115905812,0,0x0,8
tick,0x7ff86ea82704,115907972,0,0x0,8
tick,0x7ff86ea82704,115909821,0,0x0,8
tick,0x7ff86ea82704,115911866,0,0x0,8
tick,0x7ff86ea82704,115913782,0,0x0,8
tick,0x7ff86ea82704,115916024,0,0x0,8
tick,0x7ff86ea82704,115917750,0,0x0,8
tick,0x7ff86ea82704,115919816,0,0x0,8
tick,0x7ff86ea82704,115921760,0,0x0,8
tick,0x7ff86ea82704,115923877,0,0x0,8
tick,0x7ff86ea82704,115925690,0,0x0,8
tick,0x7ff86ea82704,115928048,0,0x0,8
tick,0x7ff86ea82704,115929828,0,0x0,8
tick,0x7ff86ea82704,115931870,0,0x0,8
tick,0x7ff86ea82704,115933731,0,0x0,8
tick,0x7ff86ea82704,115935884,0,0x0,8
tick,0x7ff86ea82704,115937888,0,0x0,8
tick,0x7ff86ea82704,115940090,0,0x0,8
tick,0x7ff86ea82704,115941851,0,0x0,8
tick,0x7ff86ea82704,115943897,0,0x0,8
tick,0x7ff86ea82704,115945650,0,0x0,8
tick,0x7ff86ea82704,115947843,0,0x0,8
tick,0x7ff86ea82704,115949687,0,0x0,8
tick,0x7ff86ea82704,115951754,0,0x0,8
tick,0x7ff86ea82704,115953748,0,0x0,8
tick,0x7ff86ea82704,115955808,0,0x0,8
tick,0x7ff86ea82704,115957692,0,0x0,8
tick,0x7ff86ea82704,115959756,0,0x0,8
tick,0x7ff86ea82704,115961729,0,0x0,8
tick,0x7ff86ea82704,115963844,0,0x0,8
tick,0x7ff86ea82704,115965697,0,0x0,8
tick,0x7ff86ea82704,115967885,0,0x0,8
tick,0x7ff86ea82704,115969699,0,0x0,8
tick,0x7ff86ea82704,115971694,0,0x0,8
tick,0x7ff86ea82704,115973712,0,0x0,8
tick,0x7ff86ea82704,115975747,0,0x0,8
tick,0x7ff86ea82704,115977611,0,0x0,8
tick,0x7ff86ea82704,115979599,0,0x0,8
tick,0x7ff86ea82704,115981924,0,0x0,8
tick,0x7ff86ea82704,115983614,0,0x0,8
tick,0x7ff86ea82704,115985668,0,0x0,8
tick,0x7ff86ea82704,115987725,0,0x0,8
tick,0x7ff86ea82704,115989625,0,0x0,8
tick,0x7ff86ea82704,115991684,0,0x0,8
tick,0x7ff86ea82704,115993647,0,0x0,8
tick,0x7ff86ea82704,115995708,0,0x0,8
tick,0x7ff86ea82704,115997822,0,0x0,8
tick,0x7ff86ea82704,115999959,0,0x0,8
tick,0x7ff86ea82704,116001750,0,0x0,8
tick,0x7ff86ea82704,116003739,0,0x0,8
tick,0x7ff86ea82704,116005747,0,0x0,8
tick,0x7ff86ea82704,116007655,0,0x0,8
tick,0x7ff86ea82704,116010746,0,0x0,8
tick,0x7ff86ea82704,116013530,0,0x0,8
tick,0x7ff86ea82704,116014861,0,0x0,8
tick,0x7ff86ea82704,116017493,0,0x0,8
tick,0x7ff86ea82704,116018571,0,0x0,8
tick,0x7ff86ea82704,116020439,0,0x0,8
tick,0x7ff86ea82704,116022601,0,0x0,8
tick,0x7ff86ea82704,116024541,0,0x0,8
tick,0x7ff86ea82704,116026480,0,0x0,8
tick,0x7ff86ea82704,116028640,0,0x0,8
tick,0x7ff86ea82704,116030459,0,0x0,8
tick,0x7ff86ea82704,116032625,0,0x0,8
tick,0x7ff86ea82704,116034522,0,0x0,8
tick,0x7ff86ea82704,116036468,0,0x0,8
tick,0x7ff86ea82704,116038441,0,0x0,8
tick,0x7ff86ea82704,116040707,0,0x0,8
tick,0x7ff86ea82704,116042425,0,0x0,8
tick,0x7ff86ea82704,116044401,0,0x0,8
tick,0x7ff86ea82704,116046515,0,0x0,8
tick,0x7ff86ea82704,116048973,0,0x0,8
tick,0x7ff86ea82704,116051122,0,0x0,8
tick,0x7ff86ea82704,116052841,0,0x0,8
tick,0x7ff86ea82704,116090795,0,0x0,8
tick,0x7ff86ea82704,116090826,0,0x0,8
tick,0x7ff86ea82704,116090845,0,0x0,8
tick,0x7ff86ea82704,116090865,0,0x0,8
tick,0x7ff86ea82704,116090883,0,0x0,8
tick,0x7ff86ea82704,116090907,0,0x0,8
tick,0x7ff86ea82704,116090930,0,0x0,8
tick,0x7ff86ea82704,116090951,0,0x0,8
tick,0x7ff86ea82704,116090968,0,0x0,8
tick,0x7ff86ea82704,116090988,0,0x0,8
tick,0x7ff86ea82704,116091005,0,0x0,8
tick,0x7ff86ea82704,116092550,0,0x0,8
tick,0x7ff86ea82704,116093704,0,0x0,8
tick,0x7ff86ea82704,116095651,0,0x0,8
tick,0x7ff86ea82704,116097202,0,0x0,8
tick,0x7ff86ea82704,116099392,0,0x0,8
tick,0x7ff86ea82704,116101160,0,0x0,8
tick,0x7ff86ea82704,116103361,0,0x0,8
tick,0x7ff86ea82704,116105210,0,0x0,8
tick,0x7ff86ea82704,116107302,0,0x0,8
tick,0x7ff86ea82704,116109200,0,0x0,8
tick,0x7ff86ea82704,116111256,0,0x0,8
tick,0x7ff86ea82704,116113205,0,0x0,8
tick,0x7ff86ea82704,116115315,0,0x0,8
tick,0x7ff86ea82704,116117211,0,0x0,8
tick,0x7ff86ea82704,116119258,0,0x0,8
tick,0x7ff86ea82704,116121138,0,0x0,8
tick,0x7ff86ea82704,116123215,0,0x0,8
tick,0x7ff86ea82704,116125191,0,0x0,8
tick,0x7ff86ea82704,116127218,0,0x0,8
tick,0x7ff86ea82704,116129125,0,0x0,8
tick,0x7ff86ea82704,116131176,0,0x0,8
tick,0x7ff86ea82704,116133123,0,0x0,8
tick,0x7ff86ea82704,116135169,0,0x0,8
tick,0x7ff86ea82704,116137098,0,0x0,8
tick,0x7ff86ea82704,116139169,0,0x0,8
tick,0x7ff86ea82704,116141139,0,0x0,8
tick,0x7ff86ea82704,116143202,0,0x0,8
tick,0x7ff86ea82704,116145147,0,0x0,8
tick,0x7ff86ea82704,116147163,0,0x0,8
tick,0x7ff86ea82704,116149243,0,0x0,8
tick,0x7ff86ea82704,116151177,0,0x0,8
tick,0x7ff86ea82704,116153255,0,0x0,8
tick,0x7ff86ea82704,116155373,0,0x0,8
tick,0x7ff86ea82704,116157156,0,0x0,8
tick,0x7ff86ea82704,116159222,0,0x0,8
tick,0x7ff86ea82704,116162967,0,0x0,8
tick,0x7ff86ea82704,116165729,0,0x0,8
tick,0x7ff86ea82704,116167231,0,0x0,8
tick,0x7ff86ea82704,116169409,0,0x0,8
tick,0x7ff86ea82704,116171217,0,0x0,8
tick,0x7ff86ea82704,116173306,0,0x0,8
tick,0x7ff86ea82704,116175197,0,0x0,8
tick,0x7ff86ea82704,116177164,0,0x0,8
tick,0x7ff86ea82704,116179271,0,0x0,8
tick,0x7ff86ea82704,116181343,0,0x0,8
tick,0x7ff86ea82704,116183225,0,0x0,8
tick,0x7ff86ea82704,116185211,0,0x0,8
tick,0x7ff86ea82704,116187144,0,0x0,8
tick,0x7ff86ea82704,116189275,0,0x0,8
tick,0x7ff86ea82704,116191277,0,0x0,8
tick,0x7ff86ea82704,116193126,0,0x0,8
tick,0x7ff86ea82704,116195317,0,0x0,8
tick,0x7ff86ea82704,116197162,0,0x0,8
tick,0x7ff86ea82704,116199083,0,0x0,8
tick,0x7ff86ea82704,116201111,0,0x0,8
tick,0x7ff86ea82704,116203118,0,0x0,8
tick,0x7ff86ea82704,116205189,0,0x0,8
tick,0x7ff86ea82704,116207217,0,0x0,8
tick,0x7ff86ea82704,116209101,0,0x0,8
tick,0x7ff86ea82704,116211120,0,0x0,8
tick,0x7ff86ea82704,116213002,0,0x0,8
tick,0x7ff86ea82704,116215130,0,0x0,8
tick,0x7ff86ea82704,116216957,0,0x0,8
tick,0x7ff86ea82704,116219055,0,0x0,8
tick,0x7ff86ea82704,116220973,0,0x0,8
tick,0x7ff86ea82704,116222984,0,0x0,8
tick,0x7ff86ea82704,116225051,0,0x0,8
tick,0x7ff86ea82704,116227006,0,0x0,8
tick,0x7ff86ea82704,116229020,0,0x0,8
tick,0x7ff86ea82704,116230887,0,0x0,8
tick,0x7ff86ea82704,116233107,0,0x0,8
tick,0x7ff86ea82704,116234893,0,0x0,8
tick,0x7ff86ea82704,116237107,0,0x0,8
tick,0x7ff86ea82704,116238986,0,0x0,8
tick,0x7ff86ea82704,116241063,0,0x0,8
tick,0x7ff86ea82704,116242964,0,0x0,8
tick,0x7ff86ea82704,116244941,0,0x0,8
tick,0x7ff86ea82704,116247068,0,0x0,8
tick,0x7ff86ea82704,116248882,0,0x0,8
tick,0x7ff86ea82704,116250911,0,0x0,8
tick,0x7ff86ea82704,116252890,0,0x0,8
tick,0x7ff86ea82704,116254919,0,0x0,8
tick,0x7ff86ea82704,116256917,0,0x0,8
tick,0x7ff86ea82704,116258905,0,0x0,8
tick,0x7ff86ea82704,116260936,0,0x0,8
tick,0x7ff86ea82704,116262854,0,0x0,8
tick,0x7ff86ea82704,116265040,0,0x0,8
tick,0x7ff86ea82704,116266839,0,0x0,8
tick,0x7ff86ea82704,116268910,0,0x0,8
tick,0x7ff86ea82704,116271111,0,0x0,8
tick,0x7ff86ea82704,116272899,0,0x0,8
tick,0x7ff86ea82704,116274924,0,0x0,8
tick,0x7ff86ea82704,116276981,0,0x0,8
tick,0x7ff86ea82704,116278302,0,0x0,8
tick,0x7ff86ea82704,116280488,0,0x0,8
tick,0x7ff86ea82704,116282323,0,0x0,8
tick,0x7ff86ea82704,116284443,0,0x0,8
tick,0x7ff86ea82704,116286310,0,0x0,8
tick,0x7ff86ea82704,116288322,0,0x0,8
tick,0x7ff86ea82704,116290307,0,0x0,8
tick,0x7ff86ea82704,116292363,0,0x0,8
tick,0x7ff86ea82704,116294322,0,0x0,8
tick,0x7ff86ea82704,116296369,0,0x0,8
tick,0x7ff86ea82704,116298345,0,0x0,8
tick,0x7ff86ea82704,116300317,0,0x0,8
tick,0x7ff86ea82704,116302315,0,0x0,8
tick,0x7ff86ea82704,116304268,0,0x0,8
tick,0x7ff86ea82704,116306313,0,0x0,8
tick,0x7ff86ea82704,116308315,0,0x0,8
tick,0x7ff86ea82704,116310271,0,0x0,8
tick,0x7ff86ea82704,116312255,0,0x0,8
tick,0x7ff86ea82704,116314282,0,0x0,8
tick,0x7ff86ea82704,116316209,0,0x0,8
tick,0x7ff86ea82704,116318354,0,0x0,8
tick,0x7ff86ea82704,116320155,0,0x0,8
tick,0x7ff86ea82704,116322342,0,0x0,8
tick,0x7ff86ea82704,116324150,0,0x0,8
tick,0x7ff86ea82704,116326320,0,0x0,8
tick,0x7ff86ea82704,116328213,0,0x0,8
tick,0x7ff86ea82704,116330226,0,0x0,8
tick,0x7ff86ea82704,116332271,0,0x0,8
tick,0x7ff86ea82704,116334211,0,0x0,8
tick,0x7ff86ea82704,116336245,0,0x0,8
tick,0x7ff86ea82704,116338201,0,0x0,8
tick,0x7ff86ea82704,116340227,0,0x0,8
tick,0x7ff86ea82704,116342225,0,0x0,8
tick,0x7ff86ea82704,116344274,0,0x0,8
tick,0x7ff86ea82704,116346117,0,0x0,8
tick,0x7ff86ea82704,116348203,0,0x0,8
tick,0x7ff86ea82704,116350089,0,0x0,8
tick,0x7ff86ea82704,116352594,0,0x0,8
tick,0x7ff86ea82704,116354593,0,0x0,8
tick,0x7ff86ea82704,116356138,0,0x0,8
tick,0x7ff86ea82704,116358250,0,0x0,8
tick,0x7ff86ea82704,116360996,0,0x0,8
tick,0x7ff86ea82704,116362142,0,0x0,8
tick,0x7ff86ea82704,116364249,0,0x0,8
tick,0x7ff86ea82704,116366566,0,0x0,8
tick,0x7ff86ea82704,116368677,0,0x0,8
tick,0x7ff86ea82704,116370065,0,0x0,8
tick,0x7ff86ea82704,116372301,0,0x0,8
tick,0x7ff86ea82704,116374199,0,0x0,8
tick,0x7ff86ea82704,116376268,0,0x0,8
tick,0x7ff86ea82704,116377971,0,0x0,8
tick,0x7ff86ea82704,116379725,0,0x0,8
tick,0x7ff86ea82704,116381522,0,0x0,8
tick,0x7ff86ea82704,116383845,0,0x0,8
tick,0x7ff86ea82704,116385693,0,0x0,8
tick,0x7ff86ea82704,116387655,0,0x0,8
tick,0x7ff86ea82704,116389638,0,0x0,8
tick,0x7ff86ea82704,116391622,0,0x0,8
tick,0x7ff86ea82704,116393516,0,0x0,8
tick,0x7ff86ea82704,116395606,0,0x0,8
tick,0x7ff86ea82704,116397727,0,0x0,8
tick,0x7ff86ea82704,116400062,0,0x0,8
tick,0x7ff86ea82704,116401497,0,0x0,8
tick,0x7ff86ea82704,116403566,0,0x0,8
tick,0x7ff86ea82704,116405483,0,0x0,8
tick,0x7ff86ea82704,116407586,0,0x0,8
tick,0x7ff86ea82704,116409541,0,0x0,8
tick,0x7ff86ea82704,116411727,0,0x0,8
tick,0x7ff86ea82704,116413844,0,0x0,8
tick,0x7ff86ea82704,116415861,0,0x0,8
tick,0x7ff86ea82704,116417879,0,0x0,8
tick,0x7ff86ea82704,116419562,0,0x0,8
tick,0x7ff86ea82704,116421448,0,0x0,8
tick,0x7ff86ea82704,116423530,0,0x0,8
tick,0x7ff86ea82704,116425472,0,0x0,8
tick,0x7ff86ea82704,116427501,0,0x0,8
tick,0x7ff86ea82704,116429399,0,0x0,8
tick,0x7ff86ea82704,116431642,0,0x0,8
tick,0x7ff86ea82704,116433720,0,0x0,8
tick,0x7ff86ea82704,116435657,0,0x0,8
tick,0x7ff86ea82704,116437439,0,0x0,8
tick,0x7ff86ea82704,116439496,0,0x0,8
tick,0x7ff86ea82704,116441542,0,0x0,8
tick,0x7ff86ea82704,116443619,0,0x0,8
tick,0x7ff86ea82704,116445689,0,0x0,8
tick,0x7ff86ea82704,116447534,0,0x0,8
tick,0x7ff86ea82704,116450479,0,0x0,8
tick,0x7ff86ea82704,116451594,0,0x0,8
tick,0x7ff86ea82704,116453455,0,0x0,8
tick,0x7ff86ea82704,116455632,0,0x0,8
tick,0x7ff86ea82704,116457391,0,0x0,8
tick,0x7ff86ea82704,116459558,0,0x0,8
tick,0x7ff86ea82704,116461456,0,0x0,8
tick,0x7ff86ea82704,116463776,0,0x0,8
tick,0x7ff86ea82704,116465481,0,0x0,8
tick,0x7ff86ea82704,116467671,0,0x0,8
tick,0x7ff86ea82704,116469370,0,0x0,8
tick,0x7ff86ea82704,116471509,0,0x0,8
tick,0x7ff86ea82704,116473362,0,0x0,8
tick,0x7ff86ea82704,116475583,0,0x0,8
tick,0x7ff86ea82704,116477449,0,0x0,8
tick,0x7ff86ea82704,116479155,0,0x0,8
tick,0x7ff86ea82704,116481116,0,0x0,8
tick,0x7ff86ea82704,116483701,0,0x0,8
tick,0x7ff86ea82704,116484916,0,0x0,8
tick,0x7ff86ea82704,116486932,0,0x0,8
tick,0x7ff86ea82704,116488750,0,0x0,8
tick,0x7ff86ea82704,116490940,0,0x0,8
tick,0x7ff86ea82704,116492872,0,0x0,8
tick,0x7ff86ea82704,116495123,0,0x0,8
tick,0x7ff86ea82704,116496895,0,0x0,8
tick,0x7ff86ea82704,116498882,0,0x0,8
tick,0x7ff86ea82704,116501145,0,0x0,8
tick,0x7ff86ea82704,116502991,0,0x0,8
tick,0x7ff86ea82704,116504696,0,0x0,8
tick,0x7ff86ea82704,116506826,0,0x0,8
tick,0x7ff86ea82704,116508751,0,0x0,8
tick,0x7ff86ea82704,116511119,0,0x0,8
tick,0x7ff86ea82704,116512791,0,0x0,8
tick,0x7ff86ea82704,116514740,0,0x0,8
tick,0x7ff86ea82704,116517355,0,0x0,8
tick,0x7ff86ea82704,116518823,0,0x0,8
tick,0x7ff86ea82704,116520770,0,0x0,8
tick,0x7ff86ea82704,116522958,0,0x0,8
tick,0x7ff86ea82704,116524807,0,0x0,8
tick,0x7ff86ea82704,116527122,0,0x0,8
tick,0x7ff86ea82704,116528772,0,0x0,8
tick,0x7ff86ea82704,116530710,0,0x0,8
tick,0x7ff86ea82704,116533058,0,0x0,8
tick,0x7ff86ea82704,116534989,0,0x0,8
tick,0x7ff86ea82704,116536847,0,0x0,8
tick,0x7ff86ea82704,116538845,0,0x0,8
tick,0x7ff86ea82704,116540694,0,0x0,8
tick,0x7ff86ea82704,116542918,0,0x0,8
tick,0x7ff86ea82704,116544795,0,0x0,8
tick,0x7ff86ea82704,116546792,0,0x0,8
tick,0x7ff86ea82704,116548931,0,0x0,8
tick,0x7ff86ea82704,116550696,0,0x0,8
tick,0x7ff86ea82704,116552755,0,0x0,8
tick,0x7ff86ea82704,116554612,0,0x0,8
tick,0x7ff86ea82704,116556784,0,0x0,8
tick,0x7ff86ea82704,116558609,0,0x0,8
tick,0x7ff86ea82704,116560753,0,0x0,8
tick,0x7ff86ea82704,116562572,0,0x0,8
tick,0x7ff86ea82704,116564682,0,0x0,8
tick,0x7ff86ea82704,116567335,0,0x0,8
tick,0x7ff86ea82704,116568682,0,0x0,8
tick,0x7ff86ea82704,116570492,0,0x0,8
tick,0x7ff86ea82704,116572605,0,0x0,8
tick,0x7ff86ea82704,116574651,0,0x0,8
tick,0x7ff86ea82704,116576873,0,0x0,8
tick,0x7ff86ea82704,116578553,0,0x0,8
tick,0x7ff86ea82704,116580791,0,0x0,8
tick,0x7ff86ea82704,116582707,0,0x0,8
tick,0x7ff86ea82704,116584876,0,0x0,8
tick,0x7ff86ea82704,116586702,0,0x0,8
tick,0x7ff86ea82704,116588803,0,0x0,8
tick,0x7ff86ea82704,116590613,0,0x0,8
tick,0x7ff86ea82704,116592651,0,0x0,8
tick,0x7ff86ea82704,116594518,0,0x0,8
tick,0x7ff86ea82704,116597098,0,0x0,8
tick,0x7ff86ea82704,116599597,0,0x0,8
tick,0x7ff86ea82704,116600756,0,0x0,8
tick,0x7ff86ea82704,116602455,0,0x0,8
tick,0x7ff86ea82704,116604681,0,0x0,8
tick,0x7ff86ea82704,116606954,0,0x0,8
tick,0x7ff86ea82704,116608439,0,0x0,8
tick,0x7ff86ea82704,116610686,0,0x0,8
tick,0x7ff86ea82704,116612673,0,0x0,8
tick,0x7ff86ea82704,116614692,0,0x0,8
tick,0x7ff86ea82704,116616596,0,0x0,8
tick,0x7ff86ea82704,116618649,0,0x0,8
tick,0x7ff86ea82704,116620647,0,0x0,8
tick,0x7ff86ea82704,116622696,0,0x0,8
tick,0x7ff86ea82704,116624508,0,0x0,8
tick,0x7ff86ea82704,116626642,0,0x0,8
tick,0x7ff86ea82704,116629032,0,0x0,8
tick,0x7ff86ea82704,116630507,0,0x0,8
tick,0x7ff86ea82704,116632707,0,0x0,8
tick,0x7ff86ea82704,116634533,0,0x0,8
tick,0x7ff86ea82704,116636543,0,0x0,8
tick,0x7ff86ea82704,116638555,0,0x0,8
tick,0x7ff86ea82704,116640694,0,0x0,8
tick,0x7ff86ea82704,116642517,0,0x0,8
tick,0x7ff86ea82704,116644782,0,0x0,8
tick,0x7ff86ea82704,116646514,0,0x0,8
tick,0x7ff86ea82704,116648339,0,0x0,8
tick,0x7ff86ea82704,116650692,0,0x0,8
tick,0x7ff86ea82704,116652376,0,0x0,8
tick,0x7ff86ea82704,116654240,0,0x0,8
tick,0x7ff86ea82704,116656474,0,0x0,8
tick,0x7ff86ea82704,116658403,0,0x0,8
tick,0x7ff86ea82704,116660478,0,0x0,8
tick,0x7ff86ea82704,116662287,0,0x0,8
tick,0x7ff86ea82704,116664275,0,0x0,8
tick,0x7ff86ea82704,116667840,0,0x0,8
tick,0x7ff86ea82704,116668540,0,0x0,8
tick,0x7ff86ea82704,116670426,0,0x0,8
tick,0x7ff86ea82704,116672360,0,0x0,8
tick,0x7ff86ea82704,116674571,0,0x0,8
tick,0x7ff86ea82704,116676337,0,0x0,8
tick,0x7ff86ea82704,116678749,0,0x0,8
tick,0x7ff86ea82704,116680271,0,0x0,8
tick,0x7ff86ea82704,116683168,0,0x0,8
tick,0x7ff86ea82704,116684234,0,0x0,8
tick,0x7ff86ea82704,116686328,0,0x0,8
tick,0x7ff86ea82704,116688264,0,0x0,8
tick,0x7ff86ea82704,116690234,0,0x0,8
tick,0x7ff86ea82704,116692221,0,0x0,8
tick,0x7ff86ea82704,116694239,0,0x0,8
tick,0x7ff86ea82704,116696308,0,0x0,8
tick,0x7ff86ea82704,116698240,0,0x0,8
tick,0x7ff86ea82704,116700925,0,0x0,8
tick,0x7ff86ea82704,116702306,0,0x0,8
tick,0x7ff86ea82704,116704232,0,0x0,8
tick,0x7ff86ea82704,116706307,0,0x0,8
tick,0x7ff86ea82704,116708345,0,0x0,8
tick,0x7ff86ea82704,116710252,0,0x0,8
tick,0x7ff86ea82704,116712138,0,0x0,8
tick,0x7ff86ea82704,116714257,0,0x0,8
tick,0x7ff86ea82704,116716338,0,0x0,8
tick,0x7ff86ea82704,116718337,0,0x0,8
tick,0x7ff86ea82704,116720227,0,0x0,8
tick,0x7ff86ea82704,116722219,0,0x0,8
tick,0x7ff86ea82704,116724224,0,0x0,8
tick,0x7ff86ea82704,116726208,0,0x0,8
tick,0x7ff86ea82704,116728199,0,0x0,8
tick,0x7ff86ea82704,116730083,0,0x0,8
tick,0x7ff86ea82704,116732643,0,0x0,8
tick,0x7ff86ea82704,116734096,0,0x0,8
tick,0x7ff86ea82704,116736235,0,0x0,8
tick,0x7ff86ea82704,116738058,0,0x0,8
tick,0x7ff86ea82704,116740183,0,0x0,8
tick,0x7ff86ea82704,116742090,0,0x0,8
tick,0x7ff86ea82704,116744187,0,0x0,8
tick,0x7ff86ea82704,116746069,0,0x0,8
tick,0x7ff86ea82704,116748172,0,0x0,8
tick,0x7ff86ea82704,116750211,0,0x0,8
tick,0x7ff86ea82704,116752140,0,0x0,8
tick,0x7ff86ea82704,116754123,0,0x0,8
tick,0x7ff86ea82704,116756151,0,0x0,8
tick,0x7ff86ea82704,116758059,0,0x0,8
tick,0x7ff86ea82704,116760077,0,0x0,8
tick,0x7ff86ea82704,116762205,0,0x0,8
tick,0x7ff86ea82704,116764079,0,0x0,8
tick,0x7ff86ea82704,116766615,0,0x0,8
tick,0x7ff86ea82704,116768166,0,0x0,8
tick,0x7ff86ea82704,116770033,0,0x0,8
tick,0x7ff86ea82704,116772079,0,0x0,8
tick,0x7ff86ea82704,116774153,0,0x0,8
tick,0x7ff86ea82704,116776090,0,0x0,8
tick,0x7ff86ea82704,116778353,0,0x0,8
tick,0x7ff86ea82704,116779988,0,0x0,8
tick,0x7ff86ea82704,116782255,0,0x0,8
tick,0x7ff86ea82704,116784126,0,0x0,8
tick,0x7ff86ea82704,116785970,0,0x0,8
tick,0x7ff86ea82704,116788031,0,0x0,8
tick,0x7ff86ea82704,116789963,0,0x0,8
tick,0x7ff86ea82704,116792009,0,0x0,8
tick,0x7ff86ea82704,116793969,0,0x0,8
tick,0x7ff86ea82704,116795952,0,0x0,8
tick,0x7ff86ea82704,116798023,0,0x0,8
tick,0x7ff86ea82704,116800179,0,0x0,8
tick,0x7ff86ea82704,116801924,0,0x0,8
tick,0x7ff86ea82704,116804054,0,0x0,8
tick,0x7ff86ea82704,116805904,0,0x0,8
tick,0x7ff86ea82704,116807954,0,0x0,8
tick,0x7ff86ea82704,116809961,0,0x0,8
tick,0x7ff86ea82704,116811945,0,0x0,8
tick,0x7ff86ea82704,116813958,0,0x0,8
tick,0x7ff86ea82704,116816215,0,0x0,8
tick,0x7ff86ea82704,116817860,0,0x0,8
tick,0x7ff86ea82704,116819931,0,0x0,8
tick,0x7ff86ea82704,116821821,0,0x0,8
tick,0x7ff86ea82704,116823863,0,0x0,8
tick,0x7ff86ea82704,116825817,0,0x0,8
tick,0x7ff86ea82704,116827916,0,0x0,8
tick,0x7ff86ea82704,116829811,0,0x0,8
tick,0x7ff86ea82704,116832067,0,0x0,8
tick,0x7ff86ea82704,116833950,0,0x0,8
tick,0x7ff86ea82704,116836019,0,0x0,8
tick,0x7ff86ea82704,116837896,0,0x0,8
tick,0x7ff86ea82704,116839847,0,0x0,8
tick,0x7ff86ea82704,116841825,0,0x0,8
tick,0x7ff86ea82704,116843899,0,0x0,8
tick,0x7ff86ea82704,116845870,0,0x0,8
tick,0x7ff86ea82704,116847856,0,0x0,8
tick,0x7ff86ea82704,116850048,0,0x0,8
tick,0x7ff86ea82704,116851965,0,0x0,8
tick,0x7ff86ea82704,116853922,0,0x0,8
tick,0x7ff86ea82704,116855847,0,0x0,8
tick,0x7ff86ea82704,116857825,0,0x0,8
tick,0x7ff86ea82704,116859760,0,0x0,8
tick,0x7ff86ea82704,116861782,0,0x0,8
tick,0x7ff86ea82704,116863766,0,0x0,8
tick,0x7ff86ea82704,116865960,0,0x0,8
tick,0x7ff86ea82704,116867893,0,0x0,8
tick,0x7ff86ea82704,116869692,0,0x0,8
tick,0x7ff86ea82704,116871756,0,0x0,8
tick,0x7ff86ea82704,116873731,0,0x0,8
tick,0x7ff86ea82704,116875904,0,0x0,8
tick,0x7ff86ea82704,116877723,0,0x0,8
tick,0x7ff86ea82704,116879817,0,0x0,8
tick,0x7ff86ea82704,116881696,0,0x0,8
tick,0x7ff86ea82704,116883827,0,0x0,8
tick,0x7ff86ea82704,116885722,0,0x0,8
tick,0x7ff86ea82704,116887718,0,0x0,8
tick,0x7ff86ea82704,116889757,0,0x0,8
tick,0x7ff86ea82704,116891715,0,0x0,8
tick,0x7ff86ea82704,116893706,0,0x0,8
tick,0x7ff86ea82704,116895699,0,0x0,8
tick,0x7ff86ea82704,116897721,0,0x0,8
tick,0x7ff86ea82704,116899854,0,0x0,8
tick,0x7ff86ea82704,116901699,0,0x0,8
tick,0x7ff86ea82704,116903584,0,0x0,8
tick,0x7ff86ea82704,116905714,0,0x0,8
tick,0x7ff86ea82704,116907677,0,0x0,8
tick,0x7ff86ea82704,116909784,0,0x0,8
tick,0x7ff86ea82704,116911635,0,0x0,8
tick,0x7ff86ea82704,116913685,0,0x0,8
tick,0x7ff86ea82704,116915712,0,0x0,8
tick,0x7ff86ea82704,116917785,0,0x0,8
tick,0x7ff86ea82704,116919605,0,0x0,8
tick,0x7ff86ea82704,116921715,0,0x0,8
tick,0x7ff86ea82704,116923567,0,0x0,8
tick,0x7ff86ea82704,116925704,0,0x0,8
tick,0x7ff86ea82704,116927561,0,0x0,8
tick,0x7ff86ea82704,116929718,0,0x0,8
tick,0x7ff86ea82704,116931572,0,0x0,8
tick,0x7ff86ea82704,116933674,0,0x0,8
tick,0x7ff86ea82704,116935648,0,0x0,8
tick,0x7ff86ea82704,116937622,0,0x0,8
tick,0x7ff86ea82704,116939555,0,0x0,8
tick,0x7ff86ea82704,116941589,0,0x0,8
tick,0x7ff86ea82704,116947000,0,0x0,8
tick,0x7ff86ea82704,116948894,0,0x0,8
tick,0x7ff86ea82704,116950911,0,0x0,8
tick,0x7ff86ea82704,116952742,0,0x0,8
tick,0x7ff86ea82704,116954857,0,0x0,8
tick,0x7ff86ea82704,116956851,0,0x0,8
tick,0x7ff86ea82704,116958839,0,0x0,8
tick,0x7ff86ea82704,116960552,0,0x0,8
tick,0x7ff86ea82704,116962809,0,0x0,8
tick,0x7ff86ea82704,116964704,0,0x0,8
tick,0x7ff86ea82704,116967442,0,0x0,8
tick,0x7ff86ea82704,116968701,0,0x0,8
tick,0x7ff86ea82704,116970749,0,0x0,8
tick,0x7ff86ea82704,116972594,0,0x0,8
tick,0x7ff86ea82704,116974813,0,0x0,8
tick,0x7ff86ea82704,116976468,0,0x0,8
tick,0x7ff86ea82704,116978742,0,0x0,8
tick,0x7ff86ea82704,116980539,0,0x0,8
tick,0x7ff86ea82704,116983273,0,0x0,8
tick,0x7ff86ea82704,116984610,0,0x0,8
tick,0x7ff86ea82704,116986570,0,0x0,8
tick,0x7ff86ea82704,116988395,0,0x0,8
tick,0x7ff86ea82704,116990533,0,0x0,8
tick,0x7ff86ea82704,116992435,0,0x0,8
tick,0x7ff86ea82704,116994534,0,0x0,8
tick,0x7ff86ea82704,116996398,0,0x0,8
tick,0x7ff86ea82704,116998790,0,0x0,8
tick,0x7ff86ea82704,117000632,0,0x0,8
tick,0x7ff86ea82704,117002457,0,0x0,8
tick,0x7ff86ea82704,117004665,0,0x0,8
tick,0x7ff86ea82704,117006539,0,0x0,8
tick,0x7ff86ea82704,117008382,0,0x0,8
tick,0x7ff86ea82704,117010426,0,0x0,8
tick,0x7ff86ea82704,117012383,0,0x0,8
tick,0x7ff86ea82704,117014643,0,0x0,8
tick,0x7ff86ea82704,117016553,0,0x0,8
tick,0x7ff86ea82704,117018491,0,0x0,8
tick,0x7ff86ea82704,117020347,0,0x0,8
tick,0x7ff86ea82704,117022473,0,0x0,8
tick,0x7ff86ea82704,117024371,0,0x0,8
tick,0x7ff86ea82704,117026509,0,0x0,8
tick,0x7ff86ea82704,117028459,0,0x0,8
tick,0x7ff86ea82704,117030382,0,0x0,8
tick,0x7ff86ea82704,117032499,0,0x0,8
tick,0x7ff86ea82704,117034512,0,0x0,8
tick,0x7ff86ea82704,117036453,0,0x0,8
tick,0x7ff86ea82704,117038367,0,0x0,8
tick,0x7ff86ea82704,117040419,0,0x0,8
tick,0x7ff86ea82704,117042413,0,0x0,8
tick,0x7ff86ea82704,117044435,0,0x0,8
tick,0x7ff86ea82704,117046438,0,0x0,8
tick,0x7ff86ea82704,117048362,0,0x0,8
tick,0x7ff86ea82704,117050654,0,0x0,8
tick,0x7ff86ea82704,117052431,0,0x0,8
tick,0x7ff86ea82704,117054381,0,0x0,8
tick,0x7ff86ea82704,117056326,0,0x0,8
tick,0x7ff86ea82704,117058395,0,0x0,8
tick,0x7ff86ea82704,117060415,0,0x0,8
tick,0x7ff86ea82704,117062467,0,0x0,8
tick,0x7ff86ea82704,117064296,0,0x0,8
tick,0x7ff86ea82704,117067614,0,0x0,8
tick,0x7ff86ea82704,117069409,0,0x0,8
tick,0x7ff86ea82704,117071275,0,0x0,8
tick,0x7ff86ea82704,117073357,0,0x0,8
tick,0x7ff86ea82704,117075339,0,0x0,8
tick,0x7ff86ea82704,117077311,0,0x0,8
tick,0x7ff86ea82704,117079162,0,0x0,8
tick,0x7ff86ea82704,117081517,0,0x0,8
tick,0x7ff86ea82704,117083639,0,0x0,8
tick,0x7ff86ea82704,117085461,0,0x0,8
tick,0x7ff86ea82704,117087195,0,0x0,8
tick,0x7ff86ea82704,117089261,0,0x0,8
tick,0x7ff86ea82704,117091162,0,0x0,8
tick,0x7ff86ea82704,117093254,0,0x0,8
tick,0x7ff86ea82704,117095242,0,0x0,8
tick,0x7ff86ea82704,117097215,0,0x0,8
tick,0x7ff86ea82704,117099336,0,0x0,8
tick,0x7ff86ea82704,117101417,0,0x0,8
tick,0x7ff86ea82704,117103177,0,0x0,8
tick,0x7ff86ea82704,117105223,0,0x0,8
tick,0x7ff86ea82704,117107220,0,0x0,8
tick,0x7ff86ea82704,117109281,0,0x0,8
tick,0x7ff86ea82704,117111196,0,0x0,8
tick,0x7ff86ea82704,117113265,0,0x0,8
tick,0x7ff86ea82704,117115448,0,0x0,8
tick,0x7ff86ea82704,117117516,0,0x0,8
tick,0x7ff86ea82704,117119112,0,0x0,8
tick,0x7ff86ea82704,117121221,0,0x0,8
tick,0x7ff86ea82704,117123054,0,0x0,8
tick,0x7ff86ea82704,117125297,0,0x0,8
tick,0x7ff86ea82704,117127055,0,0x0,8
tick,0x7ff86ea82704,117129292,0,0x0,8
tick,0x7ff86ea82704,117131212,0,0x0,8
tick,0x7ff86ea82704,117133349,0,0x0,8
tick,0x7ff86ea82704,117135178,0,0x0,8
tick,0x7ff86ea82704,117137100,0,0x0,8
tick,0x7ff86ea82704,117139204,0,0x0,8
tick,0x7ff86ea82704,117141069,0,0x0,8
tick,0x7ff86ea82704,117143132,0,0x0,8
tick,0x7ff86ea82704,117145136,0,0x0,8
tick,0x7ff86ea82704,117146921,0,0x0,8
tick,0x7ff86ea82704,117149303,0,0x0,8
tick,0x7ff86ea82704,117151014,0,0x0,8
tick,0x7ff86ea82704,117153156,0,0x0,8
tick,0x7ff86ea82704,117155449,0,0x0,8
tick,0x7ff86ea82704,117157030,0,0x0,8
tick,0x7ff86ea82704,117159080,0,0x0,8
tick,0x7ff86ea82704,117161032,0,0x0,8
tick,0x7ff86ea82704,117162954,0,0x0,8
tick,0x7ff86ea82704,117165000,0,0x0,8
tick,0x7ff86ea82704,117167264,0,0x0,8
tick,0x7ff86ea82704,117169047,0,0x0,8
tick,0x7ff86ea82704,117171266,0,0x0,8
tick,0x7ff86ea82704,117172980,0,0x0,8
tick,0x7ff86ea82704,117175037,0,0x0,8
tick,0x7ff86ea82704,117176920,0,0x0,8
tick,0x7ff86ea82704,117179021,0,0x0,8
tick,0x7ff86ea82704,117180953,0,0x0,8
tick,0x7ff86ea82704,117183218,0,0x0,8
tick,0x7ff86ea82704,117185024,0,0x0,8
tick,0x7ff86ea82704,117187168,0,0x0,8
tick,0x7ff86ea82704,117189226,0,0x0,8
tick,0x7ff86ea82704,117190968,0,0x0,8
tick,0x7ff86ea82704,117193068,0,0x0,8
tick,0x7ff86ea82704,117195216,0,0x0,8
tick,0x7ff86ea82704,117197752,0,0x0,8
tick,0x7ff86ea82704,117200012,0,0x0,8
tick,0x7ff86ea82704,117201932,0,0x0,8
tick,0x7ff86ea82704,117203887,0,0x0,8
tick,0x7ff86ea82704,117205869,0,0x0,8
tick,0x7ff86ea82704,117208032,0,0x0,8
tick,0x7ff86ea82704,117209819,0,0x0,8
tick,0x7ff86ea82704,117211893,0,0x0,8
tick,0x7ff86ea82704,117213783,0,0x0,8
tick,0x7ff86ea82704,117215945,0,0x0,8
tick,0x7ff86ea82704,117217788,0,0x0,8
tick,0x7ff86ea82704,117219796,0,0x0,8
tick,0x7ff86ea82704,117221837,0,0x0,8
tick,0x7ff86ea82704,117223827,0,0x0,8
tick,0x7ff86ea82704,117225820,0,0x0,8
tick,0x7ff86ea82704,117227732,0,0x0,8
tick,0x7ff86ea82704,117229732,0,0x0,8
tick,0x7ff86ea82704,117231778,0,0x0,8
tick,0x7ff86ea82704,117233801,0,0x0,8
tick,0x7ff86ea82704,117235774,0,0x0,8
tick,0x7ff86ea82704,117237715,0,0x0,8
tick,0x7ff86ea82704,117239767,0,0x0,8
tick,0x7ff86ea82704,117241739,0,0x0,8
tick,0x7ff86ea82704,117243741,0,0x0,8
tick,0x7ff86ea82704,117245713,0,0x0,8
tick,0x7ff86ea82704,117247696,0,0x0,8
tick,0x7ff86ea82704,117249832,0,0x0,8
tick,0x7ff86ea82704,117251718,0,0x0,8
tick,0x7ff86ea82704,117253678,0,0x0,8
tick,0x7ff86ea82704,117255931,0,0x0,8
tick,0x7ff86ea82704,117258577,0,0x0,8
tick,0x7ff86ea82704,117259818,0,0x0,8
tick,0x7ff86ea82704,117262004,0,0x0,8
tick,0x7ff86ea82704,117263986,0,0x0,8
tick,0x7ff86ea82704,117266225,0,0x0,8
tick,0x7ff86ea82704,117267976,0,0x0,8
tick,0x7ff86ea82704,117269886,0,0x0,8
tick,0x7ff86ea82704,117271743,0,0x0,8
tick,0x7ff86ea82704,117273916,0,0x0,8
tick,0x7ff86ea82704,117275736,0,0x0,8
tick,0x7ff86ea82704,117278374,0,0x0,8
tick,0x7ff86ea82704,117279604,0,0x0,8
tick,0x7ff86ea82704,117281825,0,0x0,8
tick,0x7ff86ea82704,117283989,0,0x0,8
tick,0x7ff86ea82704,117285890,0,0x0,8
tick,0x7ff86ea82704,117288177,0,0x0,8
tick,0x7ff86ea82704,117289770,0,0x0,8
tick,0x7ff86ea82704,117291612,0,0x0,8
tick,0x7ff86ea82704,117293635,0,0x0,8
tick,0x7ff86ea82704,117295791,0,0x0,8
tick,0x7ff86ea82704,117297604,0,0x0,8
tick,0x7ff86ea82704,117299547,0,0x0,8
tick,0x7ff86ea82704,117301553,0,0x0,8
tick,0x7ff86ea82704,117303574,0,0x0,8
tick,0x7ff86ea82704,117305563,0,0x0,8
tick,0x7ff86ea82704,117307500,0,0x0,8
tick,0x7ff86ea82704,117309589,0,0x0,8
tick,0x7ff86ea82704,117311526,0,0x0,8
tick,0x7ff86ea82704,117313586,0,0x0,8
tick,0x7ff86ea82704,117315538,0,0x0,8
tick,0x7ff86ea82704,117317493,0,0x0,8
tick,0x7ff86ea82704,117319508,0,0x0,8
tick,0x7ff86ea82704,117321484,0,0x0,8
tick,0x7ff86ea82704,117323549,0,0x0,8
tick,0x7ff86ea82704,117325466,0,0x0,8
tick,0x7ff86ea82704,117327511,0,0x0,8
tick,0x7ff86ea82704,117329487,0,0x0,8
tick,0x7ff86ea82704,117331515,0,0x0,8
tick,0x7ff86ea82704,117333465,0,0x0,8
tick,0x7ff86ea82704,117335630,0,0x0,8
tick,0x7ff86ea82704,117337540,0,0x0,8
tick,0x7ff86ea82704,117339522,0,0x0,8
tick,0x7ff86ea82704,117341606,0,0x0,8
tick,0x7ff86ea82704,117343498,0,0x0,8
tick,0x7ff86ea82704,117345505,0,0x0,8
tick,0x7ff86ea82704,117347509,0,0x0,8
tick,0x7ff86ea82704,117349609,0,0x0,8
tick,0x7ff86ea82704,117351398,0,0x0,8
tick,0x7ff86ea82704,117353572,0,0x0,8
tick,0x7ff86ea82704,117355577,0,0x0,8
tick,0x7ff86ea82704,117357468,0,0x0,8
tick,0x7ff86ea82704,117359568,0,0x0,8
tick,0x7ff86ea82704,117361392,0,0x0,8
tick,0x7ff86ea82704,117363553,0,0x0,8
tick,0x7ff86ea82704,117365484,0,0x0,8
tick,0x7ff86ea82704,117367511,0,0x0,8
tick,0x7ff86ea82704,117369468,0,0x0,8
tick,0x7ff86ea82704,117371450,0,0x0,8
tick,0x7ff86ea82704,117373450,0,0x0,8
tick,0x7ff86ea82704,117375430,0,0x0,8
tick,0x7ff86ea82704,117377431,0,0x0,8
tick,0x7ff86ea82704,117379455,0,0x0,8
tick,0x7ff86ea82704,117381507,0,0x0,8
tick,0x7ff86ea82704,117383412,0,0x0,8
tick,0x7ff86ea82704,117385376,0,0x0,8
tick,0x7ff86ea82704,117386906,0,0x0,8
tick,0x7ff86ea82704,117388928,0,0x0,8
tick,0x7ff86ea82704,117391116,0,0x0,8
tick,0x7ff86ea82704,117392877,0,0x0,8
tick,0x7ff86ea82704,117394927,0,0x0,8
tick,0x7ff86ea82704,117396870,0,0x0,8
tick,0x7ff86ea82704,117398892,0,0x0,8
tick,0x7ff86ea82704,117400840,0,0x0,8
tick,0x7ff86ea82704,117402970,0,0x0,8
tick,0x7ff86ea82704,117404824,0,0x0,8
tick,0x7ff86ea82704,117406987,0,0x0,8
tick,0x7ff86ea82704,117408762,0,0x0,8
tick,0x7ff86ea82704,117410835,0,0x0,8
tick,0x7ff86ea82704,117412801,0,0x0,8
tick,0x7ff86ea82704,117414834,0,0x0,8
tick,0x7ff86ea82704,117416870,0,0x0,8
tick,0x7ff86ea82704,117418780,0,0x0,8
tick,0x7ff86ea82704,117420806,0,0x0,8
tick,0x7ff86ea82704,117422785,0,0x0,8
tick,0x7ff86ea82704,117424821,0,0x0,8
tick,0x7ff86ea82704,117426924,0,0x0,8
tick,0x7ff86ea82704,117428796,0,0x0,8
tick,0x7ff86ea82704,117431015,0,0x0,8
tick,0x7ff86ea82704,117432710,0,0x0,8
tick,0x7ff86ea82704,117434844,0,0x0,8
tick,0x7ff86ea82704,117436721,0,0x0,8
tick,0x7ff86ea82704,117438756,0,0x0,8
tick,0x7ff86ea82704,117440796,0,0x0,8
tick,0x7ff86ea82704,117442738,0,0x0,8
tick,0x7ff86ea82704,117444753,0,0x0,8
tick,0x7ff86ea82704,117446911,0,0x0,8
tick,0x7ff86ea82704,117448844,0,0x0,8
tick,0x7ff86ea82704,117450671,0,0x0,8
tick,0x7ff86ea82704,117452790,0,0x0,8
tick,0x7ff86ea82704,117454683,0,0x0,8
tick,0x7ff86ea82704,117456837,0,0x0,8
tick,0x7ff86ea82704,117458681,0,0x0,8
tick,0x7ff86ea82704,117460683,0,0x0,8
tick,0x7ff86ea82704,117462675,0,0x0,8
tick,0x7ff86ea82704,117464697,0,0x0,8
tick,0x7ff86ea82704,117466687,0,0x0,8
tick,0x7ff86ea82704,117468706,0,0x0,8
tick,0x7ff86ea82704,117470624,0,0x0,8
tick,0x7ff86ea82704,117472753,0,0x0,8
tick,0x7ff86ea82704,117474648,0,0x0,8
tick,0x7ff86ea82704,117476910,0,0x0,8
tick,0x7ff86ea82704,117478622,0,0x0,8
tick,0x7ff86ea82704,117480761,0,0x0,8
tick,0x7ff86ea82704,117482663,0,0x0,8
tick,0x7ff86ea82704,117484767,0,0x0,8
tick,0x7ff86ea82704,117486891,0,0x0,8
tick,0x7ff86ea82704,117488770,0,0x0,8
tick,0x7ff86ea82704,117490702,0,0x0,8
tick,0x7ff86ea82704,117493176,0,0x0,8
tick,0x7ff86ea82704,117494659,0,0x0,8
tick,0x7ff86ea82704,117496978,0,0x0,8
tick,0x7ff86ea82704,117498747,0,0x0,8
tick,0x7ff86ea82704,117500760,0,0x0,8
tick,0x7ff86ea82704,117502573,0,0x0,8
tick,0x7ff86ea82704,117504703,0,0x0,8
tick,0x7ff86ea82704,117506598,0,0x0,8
tick,0x7ff86ea82704,117508765,0,0x0,8
tick,0x7ff86ea82704,117510521,0,0x0,8
tick,0x7ff86ea82704,117512621,0,0x0,8
tick,0x7ff86ea82704,117514558,0,0x0,8
tick,0x7ff86ea82704,117516818,0,0x0,8
tick,0x7ff86ea82704,117518588,0,0x0,8
tick,0x7ff86ea82704,117520599,0,0x0,8
tick,0x7ff86ea82704,117522516,0,0x0,8
tick,0x7ff86ea82704,117524860,0,0x0,8
tick,0x7ff86ea82704,117526753,0,0x0,8
tick,0x7ff86ea82704,117528545,0,0x0,8
tick,0x7ff86ea82704,117530499,0,0x0,8
tick,0x7ff86ea82704,117532643,0,0x0,8
tick,0x7ff86ea82704,117534710,0,0x0,8
tick,0x7ff86ea82704,117536590,0,0x0,8
tick,0x7ff86ea82704,117538619,0,0x0,8
tick,0x7ff86ea82704,117540476,0,0x0,8
tick,0x7ff86ea82704,117542622,0,0x0,8
tick,0x7ff86ea82704,117544475,0,0x0,8
tick,0x7ff86ea82704,117546658,0,0x0,8
tick,0x7ff86ea82704,117548405,0,0x0,8
tick,0x7ff86ea82704,117550534,0,0x0,8
tick,0x7ff86ea82704,117552441,0,0x0,8
tick,0x7ff86ea82704,117554521,0,0x0,8
tick,0x7ff86ea82704,117556422,0,0x0,8
tick,0x7ff86ea82704,117558479,0,0x0,8
tick,0x7ff86ea82704,117560433,0,0x0,8
tick,0x7ff86ea82704,117562602,0,0x0,8
tick,0x7ff86ea82704,117564496,0,0x0,8
tick,0x7ff86ea82704,117566758,0,0x0,8
tick,0x7ff86ea82704,117568482,0,0x0,8
tick,0x7ff86ea82704,117570895,0,0x0,8
tick,0x7ff86ea82704,117572544,0,0x0,8
tick,0x7ff86ea82704,117574511,0,0x0,8
tick,0x7ff86ea82704,117576583,0,0x0,8
tick,0x7ff86ea82704,117578553,0,0x0,8
tick,0x7ff86ea82704,117580604,0,0x0,8
tick,0x7ff86ea82704,117582435,0,0x0,8
tick,0x7ff86ea82704,117584344,0,0x0,8
tick,0x7ff86ea82704,117586419,0,0x0,8
tick,0x7ff86ea82704,117588495,0,0x0,8
tick,0x7ff86ea82704,117590410,0,0x0,8
tick,0x7ff86ea82704,117592519,0,0x0,8
tick,0x7ff86ea82704,117594405,0,0x0,8
tick,0x7ff86ea82704,117596345,0,0x0,8
tick,0x7ff86ea82704,117598391,0,0x0,8
tick,0x7ff86ea82704,117600439,0,0x0,8
tick,0x7ff86ea82704,117602503,0,0x0,8
tick,0x7ff86ea82704,117604650,0,0x0,8
tick,0x7ff86ea82704,117606385,0,0x0,8
tick,0x7ff86ea82704,117608371,0,0x0,8
tick,0x7ff86ea82704,117610736,0,0x0,8
tick,0x7ff86ea82704,117612347,0,0x0,8
tick,0x7ff86ea82704,117614360,0,0x0,8
tick,0x7ff86ea82704,117616355,0,0x0,8
tick,0x7ff86ea82704,117618317,0,0x0,8
tick,0x7ff86ea82704,117620277,0,0x0,8
tick,0x7ff86ea82704,117622290,0,0x0,8
tick,0x7ff86ea82704,117624289,0,0x0,8
tick,0x7ff86ea82704,117626215,0,0x0,8
tick,0x7ff86ea82704,117628326,0,0x0,8
tick,0x7ff86ea82704,117630199,0,0x0,8
tick,0x7ff86ea82704,117632337,0,0x0,8
tick,0x7ff86ea82704,117634243,0,0x0,8
tick,0x7ff86ea82704,117636201,0,0x0,8
tick,0x7ff86ea82704,117638319,0,0x0,8
tick,0x7ff86ea82704,117640171,0,0x0,8
tick,0x7ff86ea82704,117642197,0,0x0,8
tick,0x7ff86ea82704,117644253,0,0x0,8
tick,0x7ff86ea82704,117646245,0,0x0,8
tick,0x7ff86ea82704,117648169,0,0x0,8
tick,0x7ff86ea82704,117650198,0,0x0,8
tick,0x7ff86ea82704,117652093,0,0x0,8
tick,0x7ff86ea82704,117654201,0,0x0,8
tick,0x7ff86ea82704,117656101,0,0x0,8
tick,0x7ff86ea82704,117658165,0,0x0,8
tick,0x7ff86ea82704,117660172,0,0x0,8
tick,0x7ff86ea82704,117662175,0,0x0,8
tick,0x7ff86ea82704,117664118,0,0x0,8
tick,0x7ff86ea82704,117666075,0,0x0,8
tick,0x7ff86ea82704,117668174,0,0x0,8
tick,0x7ff86ea82704,117670031,0,0x0,8
tick,0x7ff86ea82704,117672130,0,0x0,8
tick,0x7ff86ea82704,117674162,0,0x0,8
tick,0x7ff86ea82704,117676222,0,0x0,8
tick,0x7ff86ea82704,117678036,0,0x0,8
tick,0x7ff86ea82704,117680135,0,0x0,8
tick,0x7ff86ea82704,117682062,0,0x0,8
tick,0x7ff86ea82704,117684176,0,0x0,8
tick,0x7ff86ea82704,117686009,0,0x0,8
tick,0x7ff86ea82704,117688091,0,0x0,8
tick,0x7ff86ea82704,117690044,0,0x0,8
tick,0x7ff86ea82704,117692065,0,0x0,8
tick,0x7ff86ea82704,117694019,0,0x0,8
tick,0x7ff86ea82704,117696043,0,0x0,8
tick,0x7ff86ea82704,117698004,0,0x0,8
tick,0x7ff86ea82704,117700166,0,0x0,8
tick,0x7ff86ea82704,117702002,0,0x0,8
tick,0x7ff86ea82704,117704070,0,0x0,8
tick,0x7ff86ea82704,117705999,0,0x0,8
tick,0x7ff86ea82704,117707953,0,0x0,8
tick,0x7ff86ea82704,117710089,0,0x0,8
tick,0x7ff86ea82704,117711948,0,0x0,8
tick,0x7ff86ea82704,117714047,0,0x0,8
tick,0x7ff86ea82704,117715900,0,0x0,8
tick,0x7ff86ea82704,117718007,0,0x0,8
tick,0x7ff86ea82704,117719954,0,0x0,8
tick,0x7ff86ea82704,117721947,0,0x0,8
tick,0x7ff86ea82704,117723914,0,0x0,8
tick,0x7ff86ea82704,117726012,0,0x0,8
tick,0x7ff86ea82704,117727934,0,0x0,8
tick,0x7ff86ea82704,117729989,0,0x0,8
tick,0x7ff86ea82704,117731932,0,0x0,8
tick,0x7ff86ea82704,117733979,0,0x0,8
tick,0x7ff86ea82704,117735931,0,0x0,8
tick,0x7ff86ea82704,117737949,0,0x0,8
tick,0x7ff86ea82704,117739901,0,0x0,8
tick,0x7ff86ea82704,117741935,0,0x0,8
tick,0x7ff86ea82704,117743926,0,0x0,8
tick,0x7ff86ea82704,117745934,0,0x0,8
tick,0x7ff86ea82704,117747918,0,0x0,8
tick,0x7ff86ea82704,117749888,0,0x0,8
tick,0x7ff86ea82704,117751909,0,0x0,8
tick,0x7ff86ea82704,117753795,0,0x0,8
tick,0x7ff86ea82704,117755903,0,0x0,8
tick,0x7ff86ea82704,117757872,0,0x0,8
tick,0x7ff86ea82704,117759943,0,0x0,8
tick,0x7ff86ea82704,117761852,0,0x0,8
tick,0x7ff86ea82704,117763876,0,0x0,8
tick,0x7ff86ea82704,117766030,0,0x0,8
tick,0x7ff86ea82704,117767855,0,0x0,8
tick,0x7ff86ea82704,117769846,0,0x0,8
tick,0x7ff86ea82704,117771913,0,0x0,8
tick,0x7ff86ea82704,117773718,0,0x0,8
tick,0x7ff86ea82704,117776114,0,0x0,8
tick,0x7ff86ea82704,117777750,0,0x0,8
tick,0x7ff86ea82704,117779913,0,0x0,8
tick,0x7ff86ea82704,117781751,0,0x0,8
tick,0x7ff86ea82704,117783905,0,0x0,8
tick,0x7ff86ea82704,117785752,0,0x0,8
tick,0x7ff86ea82704,117787207,0,0x0,8
tick,0x7ff86ea82704,117789096,0,0x0,8
tick,0x7ff86ea82704,117791116,0,0x0,8
tick,0x7ff86ea82704,117792991,0,0x0,8
tick,0x7ff86ea82704,117795074,0,0x0,8
tick,0x7ff86ea82704,117797097,0,0x0,8
tick,0x7ff86ea82704,117799231,0,0x0,8
tick,0x7ff86ea82704,117801042,0,0x0,8
tick,0x7ff86ea82704,117803188,0,0x0,8
tick,0x7ff86ea82704,117804966,0,0x0,8
tick,0x7ff86ea82704,117807239,0,0x0,8
tick,0x7ff86ea82704,117808990,0,0x0,8
tick,0x7ff86ea82704,117811225,0,0x0,8
tick,0x7ff86ea82704,117812879,0,0x0,8
tick,0x7ff86ea82704,117815275,0,0x0,8
tick,0x7ff86ea82704,117816994,0,0x0,8
tick,0x7ff86ea82704,117818920,0,0x0,8
tick,0x7ff86ea82704,117821079,0,0x0,8
tick,0x7ff86ea82704,117822895,0,0x0,8
tick,0x7ff86ea82704,117824976,0,0x0,8
tick,0x7ff86ea82704,117826947,0,0x0,8
tick,0x7ff86ea82704,117828965,0,0x0,8
tick,0x7ff86ea82704,117831173,0,0x0,8
tick,0x7ff86ea82704,117833081,0,0x0,8
tick,0x7ff86ea82704,117834975,0,0x0,8
tick,0x7ff86ea82704,117837192,0,0x0,8
tick,0x7ff86ea82704,117839004,0,0x0,8
tick,0x7ff86ea82704,117840983,0,0x0,8
tick,0x7ff86ea82704,117842890,0,0x0,8
tick,0x7ff86ea82704,117844946,0,0x0,8
tick,0x7ff86ea82704,117847381,0,0x0,8
tick,0x7ff86ea82704,117849329,0,0x0,8
tick,0x7ff86ea82704,117851080,0,0x0,8
tick,0x7ff86ea82704,117852927,0,0x0,8
tick,0x7ff86ea82704,117854878,0,0x0,8
tick,0x7ff86ea82704,117857002,0,0x0,8
tick,0x7ff86ea82704,117859448,0,0x0,8
tick,0x7ff86ea82704,117860831,0,0x0,8
tick,0x7ff86ea82704,117862866,0,0x0,8
tick,0x7ff86ea82704,117864885,0,0x0,8
tick,0x7ff86ea82704,117867128,0,0x0,8
tick,0x7ff86ea82704,117870572,0,0x0,8
tick,0x7ff86ea82704,117871779,0,0x0,8
tick,0x7ff86ea82704,117873761,0,0x0,8
tick,0x7ff86ea82704,117875913,0,0x0,8
tick,0x7ff86ea82704,117877883,0,0x0,8
tick,0x7ff86ea82704,117879876,0,0x0,8
tick,0x7ff86ea82704,117882498,0,0x0,8
tick,0x7ff86ea82704,117883816,0,0x0,8
tick,0x7ff86ea82704,117886046,0,0x0,8
tick,0x7ff86ea82704,117887408,0,0x0,8
tick,0x7ff86ea82704,117889722,0,0x0,8
tick,0x7ff86ea82704,117891839,0,0x0,8
tick,0x7ff86ea82704,117893315,0,0x0,8
tick,0x7ff86ea82704,117895671,0,0x0,8
tick,0x7ff86ea82704,117897447,0,0x0,8
tick,0x7ff86ea82704,117900920,0,0x0,8
tick,0x7ff86ea82704,117901356,0,0x0,8
tick,0x7ff86ea82704,117903453,0,0x0,8
tick,0x7ff86ea82704,117905474,0,0x0,8
tick,0x7ff86ea82704,117907380,0,0x0,8
tick,0x7ff86ea82704,117909430,0,0x0,8
tick,0x7ff86ea82704,117911744,0,0x0,8
tick,0x7ff86ea82704,117913225,0,0x0,8
tick,0x7ff86ea82704,117915843,0,0x0,8
tick,0x7ff86ea82704,117917639,0,0x0,8
tick,0x7ff86ea82704,117919274,0,0x0,8
tick,0x7ff86ea82704,117921397,0,0x0,8
tick,0x7ff86ea82704,117923361,0,0x0,8
tick,0x7ff86ea82704,117925228,0,0x0,8
tick,0x7ff86ea82704,117927297,0,0x0,8
tick,0x7ff86ea82704,117929182,0,0x0,8
tick,0x7ff86ea82704,117931147,0,0x0,8
tick,0x7ff86ea82704,117933287,0,0x0,8
tick,0x7ff86ea82704,117935175,0,0x0,8
tick,0x7ff86ea82704,117937283,0,0x0,8
tick,0x7ff86ea82704,117939114,0,0x0,8
tick,0x7ff86ea82704,117941377,0,0x0,8
tick,0x7ff86ea82704,117943095,0,0x0,8
tick,0x7ff86ea82704,117945397,0,0x0,8
tick,0x7ff86ea82704,117947104,0,0x0,8
tick,0x7ff86ea82704,117949498,0,0x0,8
tick,0x7ff86ea82704,117951233,0,0x0,8
tick,0x7ff86ea82704,117953169,0,0x0,8
tick,0x7ff86ea82704,117955142,0,0x0,8
tick,0x7ff86ea82704,117957088,0,0x0,8
tick,0x7ff86ea82704,117959080,0,0x0,8
tick,0x7ff86ea82704,117961104,0,0x0,8
tick,0x7ff86ea82704,117963048,0,0x0,8
tick,0x7ff86ea82704,117965118,0,0x0,8
tick,0x7ff86ea82704,117967218,0,0x0,8
tick,0x7ff86ea82704,117969116,0,0x0,8
tick,0x7ff86ea82704,117971072,0,0x0,8
tick,0x7ff86ea82704,117973073,0,0x0,8
tick,0x7ff86ea82704,117975060,0,0x0,8
tick,0x7ff86ea82704,117977091,0,0x0,8
tick,0x7ff86ea82704,117978974,0,0x0,8
tick,0x7ff86ea82704,117981047,0,0x0,8
tick,0x7ff86ea82704,117983119,0,0x0,8
tick,0x7ff86ea82704,117985036,0,0x0,8
tick,0x7ff86ea82704,117987042,0,0x0,8
tick,0x7ff86ea82704,117989072,0,0x0,8
tick,0x7ff86ea82704,117990972,0,0x0,8
tick,0x7ff86ea82704,117993010,0,0x0,8
tick,0x7ff86ea82704,117995100,0,0x0,8
tick,0x7ff86ea82704,117997093,0,0x0,8
tick,0x7ff86ea82704,117999066,0,0x0,8
tick,0x7ff86ea82704,118001091,0,0x0,8
tick,0x7ff86ea82704,118002949,0,0x0,8
tick,0x7ff86ea82704,118005026,0,0x0,8
tick,0x7ff86ea82704,118006955,0,0x0,8
tick,0x7ff86ea82704,118009067,0,0x0,8
tick,0x7ff86ea82704,118010926,0,0x0,8
tick,0x7ff86ea82704,118012884,0,0x0,8
tick,0x7ff86ea82704,118015031,0,0x0,8
tick,0x7ff86ea82704,118017228,0,0x0,8
tick,0x7ff86ea82704,118019037,0,0x0,8
tick,0x7ff86ea82704,118020894,0,0x0,8
tick,0x7ff86ea82704,118022922,0,0x0,8
tick,0x7ff86ea82704,118024929,0,0x0,8
tick,0x7ff86ea82704,118027002,0,0x0,8
tick,0x7ff86ea82704,118029026,0,0x0,8
tick,0x7ff86ea82704,118030824,0,0x0,8
tick,0x7ff86ea82704,118032948,0,0x0,8
tick,0x7ff86ea82704,118034899,0,0x0,8
tick,0x7ff86ea82704,118037014,0,0x0,8
tick,0x7ff86ea82704,118038879,0,0x0,8
tick,0x7ff86ea82704,118040880,0,0x0,8
tick,0x7ff86ea82704,118042846,0,0x0,8
tick,0x7ff86ea82704,118045275,0,0x0,8
tick,0x7ff86ea82704,118046887,0,0x0,8
tick,0x7ff86ea82704,118049165,0,0x0,8
tick,0x7ff86ea82704,118050875,0,0x0,8
tick,0x7ff86ea82704,118053107,0,0x0,8
tick,0x7ff86ea82704,118055079,0,0x0,8
tick,0x7ff86ea82704,118057053,0,0x0,8
tick,0x7ff86ea82704,118059169,0,0x0,8
tick,0x7ff86ea82704,118062961,0,0x0,8
tick,0x7ff86ea82704,118063200,0,0x0,8
tick,0x7ff86ea82704,118069551,0,0x0,8
tick,0x7ff86ea82704,118069585,0,0x0,8
tick,0x7ff86ea82704,118070873,0,0x0,8
tick,0x7ff86ea82704,118072996,0,0x0,8
tick,0x7ff86ea82704,118074846,0,0x0,8
tick,0x7ff86ea82704,118077017,0,0x0,8
tick,0x7ff86ea82704,118078821,0,0x0,8
tick,0x7ff86ea82704,118080796,0,0x0,8
tick,0x7ff86ea82704,118082773,0,0x0,8
tick,0x7ff86ea82704,118085696,0,0x0,8
tick,0x7ff86ea82704,118086692,0,0x0,8
tick,0x7ff86ea82704,118088769,0,0x0,8
tick,0x7ff86ea82704,118090830,0,0x0,8
tick,0x7ff86ea82704,118092827,0,0x0,8
tick,0x7ff86ea82704,118094714,0,0x0,8
tick,0x7ff86ea82704,118096839,0,0x0,8
tick,0x7ff86ea82704,118098653,0,0x0,8
tick,0x7ff86ea82704,118100768,0,0x0,8
tick,0x7ff86ea82704,118102566,0,0x0,8
tick,0x7ff86ea82704,118104763,0,0x0,8
tick,0x7ff86ea82704,118106789,0,0x0,8
tick,0x7ff86ea82704,118108739,0,0x0,8
tick,0x7ff86ea82704,118110663,0,0x0,8
tick,0x7ff86ea82704,118112876,0,0x0,8
tick,0x7ff86ea82704,118114679,0,0x0,8
tick,0x7ff86ea82704,118116666,0,0x0,8
tick,0x7ff86ea82704,118118563,0,0x0,8
tick,0x7ff86ea82704,118120678,0,0x0,8
tick,0x7ff86ea82704,118122654,0,0x0,8
tick,0x7ff86ea82704,118124713,0,0x0,8
tick,0x7ff86ea82704,118126810,0,0x0,8
tick,0x7ff86ea82704,118128660,0,0x0,8
tick,0x7ff86ea82704,118130667,0,0x0,8
tick,0x7ff86ea82704,118132596,0,0x0,8
tick,0x7ff86ea82704,118134628,0,0x0,8
tick,0x7ff86ea82704,118136848,0,0x0,8
tick,0x7ff86ea82704,118138672,0,0x0,8
tick,0x7ff86ea82704,118140555,0,0x0,8
tick,0x7ff86ea82704,118142603,0,0x0,8
tick,0x7ff86ea82704,118144553,0,0x0,8
tick,0x7ff86ea82704,118146624,0,0x0,8
tick,0x7ff86ea82704,118148487,0,0x0,8
tick,0x7ff86ea82704,118150564,0,0x0,8
tick,0x7ff86ea82704,118152762,0,0x0,8
tick,0x7ff86ea82704,118154661,0,0x0,8
tick,0x7ff86ea82704,118156554,0,0x0,8
tick,0x7ff86ea82704,118158536,0,0x0,8
tick,0x7ff86ea82704,118160492,0,0x0,8
tick,0x7ff86ea82704,118162714,0,0x0,8
tick,0x7ff86ea82704,118164493,0,0x0,8
tick,0x7ff86ea82704,118166912,0,0x0,8
tick,0x7ff86ea82704,118168738,0,0x0,8
tick,0x7ff86ea82704,118170548,0,0x0,8
tick,0x7ff86ea82704,118172500,0,0x0,8
tick,0x7ff86ea82704,118174542,0,0x0,8
tick,0x7ff86ea82704,118176443,0,0x0,8
tick,0x7ff86ea82704,118178484,0,0x0,8
tick,0x7ff86ea82704,118180555,0,0x0,8
tick,0x7ff86ea82704,118182496,0,0x0,8
tick,0x7ff86ea82704,118184480,0,0x0,8
tick,0x7ff86ea82704,118186523,0,0x0,8
tick,0x7ff86ea82704,118188432,0,0x0,8
tick,0x7ff86ea82704,118190554,0,0x0,8
tick,0x7ff86ea82704,118192592,0,0x0,8
tick,0x7ff86ea82704,118194445,0,0x0,8
tick,0x7ff86ea82704,118196568,0,0x0,8
tick,0x7ff86ea82704,118198477,0,0x0,8
tick,0x7ff86ea82704,118200388,0,0x0,8
tick,0x7ff86ea82704,118202521,0,0x0,8
tick,0x7ff86ea82704,118204546,0,0x0,8
tick,0x7ff86ea82704,118206651,0,0x0,8
tick,0x7ff86ea82704,118208341,0,0x0,8
tick,0x7ff86ea82704,118210442,0,0x0,8
tick,0x7ff86ea82704,118212332,0,0x0,8
tick,0x7ff86ea82704,118214456,0,0x0,8
tick,0x7ff86ea82704,118216274,0,0x0,8
tick,0x7ff86ea82704,118218347,0,0x0,8
tick,0x7ff86ea82704,118220366,0,0x0,8
tick,0x7ff86ea82704,118222382,0,0x0,8
tick,0x7ff86ea82704,118224421,0,0x0,8
tick,0x7ff86ea82704,118226306,0,0x0,8
tick,0x7ff86ea82704,118228364,0,0x0,8
tick,0x7ff86ea82704,118230546,0,0x0,8
tick,0x7ff86ea82704,118232519,0,0x0,8
tick,0x7ff86ea82704,118234357,0,0x0,8
tick,0x7ff86ea82704,118236328,0,0x0,8
tick,0x7ff86ea82704,118238467,0,0x0,8
tick,0x7ff86ea82704,118240258,0,0x0,8
tick,0x7ff86ea82704,118242443,0,0x0,8
tick,0x7ff86ea82704,118244222,0,0x0,8
tick,0x7ff86ea82704,118246355,0,0x0,8
tick,0x7ff86ea82704,118248193,0,0x0,8
tick,0x7ff86ea82704,118250416,0,0x0,8
tick,0x7ff86ea82704,118252327,0,0x0,8
tick,0x7ff86ea82704,118254252,0,0x0,8
tick,0x7ff86ea82704,118256204,0,0x0,8
tick,0x7ff86ea82704,118258368,0,0x0,8
tick,0x7ff86ea82704,118260201,0,0x0,8
tick,0x7ff86ea82704,118262448,0,0x0,8
tick,0x7ff86ea82704,118264166,0,0x0,8
tick,0x7ff86ea82704,118266341,0,0x0,8
tick,0x7ff86ea82704,118268240,0,0x0,8
tick,0x7ff86ea82704,118270627,0,0x0,8
tick,0x7ff86ea82704,118272283,0,0x0,8
tick,0x7ff86ea82704,118274322,0,0x0,8
tick,0x7ff86ea82704,118276176,0,0x0,8
tick,0x7ff86ea82704,118278320,0,0x0,8
tick,0x7ff86ea82704,118280210,0,0x0,8
tick,0x7ff86ea82704,118282593,0,0x0,8
tick,0x7ff86ea82704,118284171,0,0x0,8
tick,0x7ff86ea82704,118286264,0,0x0,8
tick,0x7ff86ea82704,118288244,0,0x0,8
tick,0x7ff86ea82704,118290225,0,0x0,8
tick,0x7ff86ea82704,118292207,0,0x0,8
tick,0x7ff86ea82704,118294140,0,0x0,8
tick,0x7ff86ea82704,118296353,0,0x0,8
tick,0x7ff86ea82704,118298221,0,0x0,8
tick,0x7ff86ea82704,118300208,0,0x0,8
tick,0x7ff86ea82704,118302158,0,0x0,8
tick,0x7ff86ea82704,118304286,0,0x0,8
tick,0x7ff86ea82704,118306106,0,0x0,8
tick,0x7ff86ea82704,118308268,0,0x0,8
tick,0x7ff86ea82704,118310134,0,0x0,8
tick,0x7ff86ea82704,118312478,0,0x0,8
tick,0x7ff86ea82704,118314076,0,0x0,8
tick,0x7ff86ea82704,118316617,0,0x0,8
tick,0x7ff86ea82704,118318502,0,0x0,8
tick,0x7ff86ea82704,118320238,0,0x0,8
tick,0x7ff86ea82704,118322149,0,0x0,8
tick,0x7ff86ea82704,118324190,0,0x0,8
tick,0x7ff86ea82704,118326192,0,0x0,8
tick,0x7ff86ea82704,118328206,0,0x0,8
tick,0x7ff86ea82704,118330813,0,0x0,8
tick,0x7ff86ea82704,118331944,0,0x0,8
tick,0x7ff86ea82704,118334374,0,0x0,8
tick,0x7ff86ea82704,118335901,0,0x0,8
tick,0x7ff86ea82704,118337942,0,0x0,8
tick,0x7ff86ea82704,118339980,0,0x0,8
tick,0x7ff86ea82704,118341983,0,0x0,8
tick,0x7ff86ea82704,118344405,0,0x0,8
tick,0x7ff86ea82704,118346359,0,0x0,8
tick,0x7ff86ea82704,118348200,0,0x0,8
tick,0x7ff86ea82704,118351966,0,0x0,8
tick,0x7ff86ea82704,118352659,0,0x0,8
tick,0x7ff86ea82704,118354073,0,0x0,8
tick,0x7ff86ea82704,118356272,0,0x0,8
tick,0x7ff86ea82704,118358164,0,0x0,8
tick,0x7ff86ea82704,118360073,0,0x0,8
tick,0x7ff86ea82704,118362133,0,0x0,8
tick,0x7ff86ea82704,118364312,0,0x0,8
tick,0x7ff86ea82704,118366800,0,0x0,8
tick,0x7ff86ea82704,118368515,0,0x0,8
tick,0x7ff86ea82704,118370034,0,0x0,8
tick,0x7ff86ea82704,118372265,0,0x0,8
tick,0x7ff86ea82704,118374120,0,0x0,8
tick,0x7ff86ea82704,118376140,0,0x0,8
tick,0x7ff86ea82704,118378199,0,0x0,8
tick,0x7ff86ea82704,118380042,0,0x0,8
tick,0x7ff86ea82704,118383259,0,0x0,8
tick,0x7ff86ea82704,118384823,0,0x0,8
tick,0x7ff86ea82704,118385815,0,0x0,8
tick,0x7ff86ea82704,118387935,0,0x0,8
tick,0x7ff86ea82704,118389826,0,0x0,8
tick,0x7ff86ea82704,118391907,0,0x0,8
tick,0x7ff86ea82704,118393932,0,0x0,8
tick,0x7ff86ea82704,118396872,0,0x0,8
tick,0x7ff86ea82704,118397979,0,0x0,8
tick,0x7ff86ea82704,118400377,0,0x0,8
tick,0x7ff86ea82704,118402016,0,0x0,8
tick,0x7ff86ea82704,118403826,0,0x0,8
tick,0x7ff86ea82704,118405831,0,0x0,8
tick,0x7ff86ea82704,118408016,0,0x0,8
tick,0x7ff86ea82704,118409883,0,0x0,8
tick,0x7ff86ea82704,118412098,0,0x0,8
tick,0x7ff86ea82704,118413800,0,0x0,8
tick,0x7ff86ea82704,118417049,0,0x0,8
tick,0x7ff86ea82704,118418069,0,0x0,8
tick,0x7ff86ea82704,118419929,0,0x0,8
tick,0x7ff86ea82704,118421812,0,0x0,8
tick,0x7ff86ea82704,118423940,0,0x0,8
tick,0x7ff86ea82704,118425779,0,0x0,8
tick,0x7ff86ea82704,118427826,0,0x0,8
tick,0x7ff86ea82704,118429925,0,0x0,8
tick,0x7ff86ea82704,118432020,0,0x0,8
tick,0x7ff86ea82704,118434228,0,0x0,8
tick,0x7ff86ea82704,118435995,0,0x0,8
tick,0x7ff86ea82704,118437809,0,0x0,8
tick,0x7ff86ea82704,118439969,0,0x0,8
tick,0x7ff86ea82704,118441772,0,0x0,8
tick,0x7ff86ea82704,118443966,0,0x0,8
tick,0x7ff86ea82704,118445858,0,0x0,8
tick,0x7ff86ea82704,118447798,0,0x0,8
tick,0x7ff86ea82704,118450748,0,0x0,8
tick,0x7ff86ea82704,118451848,0,0x0,8
tick,0x7ff86ea82704,118453642,0,0x0,8
tick,0x7ff86ea82704,118455765,0,0x0,8
tick,0x7ff86ea82704,118457654,0,0x0,8
tick,0x7ff86ea82704,118459720,0,0x0,8
tick,0x7ff86ea82704,118461669,0,0x0,8
tick,0x7ff86ea82704,118463678,0,0x0,8
tick,0x7ff86ea82704,118465715,0,0x0,8
tick,0x7ff86ea82704,118467933,0,0x0,8
tick,0x7ff86ea82704,118469605,0,0x0,8
tick,0x7ff86ea82704,118471712,0,0x0,8
tick,0x7ff86ea82704,118473645,0,0x0,8
tick,0x7ff86ea82704,118475804,0,0x0,8
tick,0x7ff86ea82704,118477681,0,0x0,8
tick,0x7ff86ea82704,118479774,0,0x0,8
tick,0x7ff86ea82704,118481695,0,0x0,8
tick,0x7ff86ea82704,118484092,0,0x0,8
tick,0x7ff86ea82704,118485656,0,0x0,8
tick,0x7ff86ea82704,118487642,0,0x0,8
tick,0x7ff86ea82704,118489806,0,0x0,8
tick,0x7ff86ea82704,118491648,0,0x0,8
tick,0x7ff86ea82704,118493693,0,0x0,8
tick,0x7ff86ea82704,118495642,0,0x0,8
tick,0x7ff86ea82704,118497854,0,0x0,8
tick,0x7ff86ea82704,118499799,0,0x0,8
tick,0x7ff86ea82704,118501968,0,0x0,8
tick,0x7ff86ea82704,118503546,0,0x0,8
tick,0x7ff86ea82704,118505803,0,0x0,8
tick,0x7ff86ea82704,118507598,0,0x0,8
tick,0x7ff86ea82704,118509734,0,0x0,8
tick,0x7ff86ea82704,118511572,0,0x0,8
tick,0x7ff86ea82704,118513686,0,0x0,8
tick,0x7ff86ea82704,118516780,0,0x0,8
tick,0x7ff86ea82704,118517611,0,0x0,8
tick,0x7ff86ea82704,118519479,0,0x0,8
tick,0x7ff86ea82704,118521704,0,0x0,8
tick,0x7ff86ea82704,118523487,0,0x0,8
tick,0x7ff86ea82704,118525579,0,0x0,8
tick,0x7ff86ea82704,118527424,0,0x0,8
tick,0x7ff86ea82704,118529671,0,0x0,8
tick,0x7ff86ea82704,118531456,0,0x0,8
tick,0x7ff86ea82704,118534537,0,0x0,8
tick,0x7ff86ea82704,118536676,0,0x0,8
tick,0x7ff86ea82704,118538525,0,0x0,8
tick,0x7ff86ea82704,118540803,0,0x0,8
tick,0x7ff86ea82704,118542572,0,0x0,8
tick,0x7ff86ea82704,118544650,0,0x0,8
tick,0x7ff86ea82704,118546587,0,0x0,8
tick,0x7ff86ea82704,118548617,0,0x0,8
tick,0x7ff86ea82704,118550836,0,0x0,8
tick,0x7ff86ea82704,118553074,0,0x0,8
tick,0x7ff86ea82704,118554483,0,0x0,8
tick,0x7ff86ea82704,118556850,0,0x0,8
tick,0x7ff86ea82704,118558516,0,0x0,8
tick,0x7ff86ea82704,118560797,0,0x0,8
tick,0x7ff86ea82704,118562471,0,0x0,8
tick,0x7ff86ea82704,118564612,0,0x0,8
tick,0x7ff86ea82704,118567611,0,0x0,8
tick,0x7ff86ea82704,118569585,0,0x0,8
tick,0x7ff86ea82704,118571497,0,0x0,8
tick,0x7ff86ea82704,118573505,0,0x0,8
tick,0x7ff86ea82704,118575509,0,0x0,8
tick,0x7ff86ea82704,118577456,0,0x0,8
tick,0x7ff86ea82704,118579427,0,0x0,8
tick,0x7ff86ea82704,118581478,0,0x0,8
tick,0x7ff86ea82704,118583452,0,0x0,8
tick,0x7ff86ea82704,118585406,0,0x0,8
tick,0x7ff86ea82704,118587600,0,0x0,8
tick,0x7ff86ea82704,118589353,0,0x0,8
tick,0x7ff86ea82704,118591374,0,0x0,8
tick,0x7ff86ea82704,118593417,0,0x0,8
tick,0x7ff86ea82704,118595431,0,0x0,8
tick,0x7ff86ea82704,118597449,0,0x0,8
tick,0x7ff86ea82704,118599634,0,0x0,8
tick,0x7ff86ea82704,118601297,0,0x0,8
tick,0x7ff86ea82704,118603383,0,0x0,8
tick,0x7ff86ea82704,118605298,0,0x0,8
tick,0x7ff86ea82704,118607410,0,0x0,8
tick,0x7ff86ea82704,118609257,0,0x0,8
tick,0x7ff86ea82704,118611560,0,0x0,8
tick,0x7ff86ea82704,118613213,0,0x0,8
tick,0x7ff86ea82704,118615579,0,0x0,8
tick,0x7ff86ea82704,118617418,0,0x0,8
tick,0x7ff86ea82704,118619418,0,0x0,8
tick,0x7ff86ea82704,118621364,0,0x0,8
tick,0x7ff86ea82704,118623485,0,0x0,8
tick,0x7ff86ea82704,118625317,0,0x0,8
tick,0x7ff86ea82704,118627364,0,0x0,8
tick,0x7ff86ea82704,118629275,0,0x0,8
tick,0x7ff86ea82704,118631466,0,0x0,8
tick,0x7ff86ea82704,118633895,0,0x0,8
tick,0x7ff86ea82704,118635207,0,0x0,8
tick,0x7ff86ea82704,118637297,0,0x0,8
tick,0x7ff86ea82704,118639450,0,0x0,8
tick,0x7ff86ea82704,118641398,0,0x0,8
tick,0x7ff86ea82704,118643321,0,0x0,8
tick,0x7ff86ea82704,118645245,0,0x0,8
tick,0x7ff86ea82704,118647391,0,0x0,8
tick,0x7ff86ea82704,118650344,0,0x0,8
tick,0x7ff86ea82704,118651676,0,0x0,8
tick,0x7ff86ea82704,118653500,0,0x0,8
tick,0x7ff86ea82704,118655676,0,0x0,8
tick,0x7ff86ea82704,118657215,0,0x0,8
tick,0x7ff86ea82704,118659170,0,0x0,8
tick,0x7ff86ea82704,118661158,0,0x0,8
tick,0x7ff86ea82704,118663203,0,0x0,8
tick,0x7ff86ea82704,118665168,0,0x0,8
tick,0x7ff86ea82704,118667329,0,0x0,8
tick,0x7ff86ea82704,118669203,0,0x0,8
tick,0x7ff86ea82704,118671422,0,0x0,8
tick,0x7ff86ea82704,118673116,0,0x0,8
tick,0x7ff86ea82704,118675186,0,0x0,8
tick,0x7ff86ea82704,118677512,0,0x0,8
tick,0x7ff86ea82704,118679235,0,0x0,8
tick,0x7ff86ea82704,118681306,0,0x0,8
tick,0x7ff86ea82704,118683953,0,0x0,8
tick,0x7ff86ea82704,118687252,0,0x0,8
tick,0x7ff86ea82704,118687306,0,0x0,8
tick,0x7ff86ea82704,118690082,0,0x0,8
tick,0x7ff86ea82704,118692692,0,0x0,8
tick,0x7ff86ea82704,118693158,0,0x0,8
tick,0x7ff86ea82704,118696604,0,0x0,8
tick,0x7ff86ea82704,118697214,0,0x0,8
tick,0x7ff86ea82704,118699652,0,0x0,8
tick,0x7ff86ea82704,118701170,0,0x0,8
tick,0x7ff86ea82704,118703442,0,0x0,8
tick,0x7ff86ea82704,118705845,0,0x0,8
tick,0x7ff86ea82704,118707049,0,0x0,8
tick,0x7ff86ea82704,118709930,0,0x0,8
tick,0x7ff86ea82704,118711116,0,0x0,8
tick,0x7ff86ea82704,118713058,0,0x0,8
tick,0x7ff86ea82704,118715065,0,0x0,8
tick,0x7ff86ea82704,118717899,0,0x0,8
tick,0x7ff86ea82704,118719342,0,0x0,8
tick,0x7ff86ea82704,118721097,0,0x0,8
tick,0x7ff86ea82704,118723002,0,0x0,8
tick,0x7ff86ea82704,118725114,0,0x0,8
tick,0x7ff86ea82704,118727158,0,0x0,8
tick,0x7ff86ea82704,118728987,0,0x0,8
tick,0x7ff86ea82704,118731102,0,0x0,8
tick,0x7ff86ea82704,118733537,0,0x0,8
tick,0x7ff86ea82704,118734897,0,0x0,8
tick,0x7ff86ea82704,118736889,0,0x0,8
tick,0x7ff86ea82704,118738946,0,0x0,8
tick,0x7ff86ea82704,118740878,0,0x0,8
tick,0x7ff86ea82704,118742941,0,0x0,8
tick,0x7ff86ea82704,118744900,0,0x0,8
tick,0x7ff86ea82704,118746950,0,0x0,8
tick,0x7ff86ea82704,118749041,0,0x0,8
tick,0x7ff86ea82704,118751432,0,0x0,8
tick,0x7ff86ea82704,118753076,0,0x0,8
tick,0x7ff86ea82704,118754989,0,0x0,8
tick,0x7ff86ea82704,118757079,0,0x0,8
tick,0x7ff86ea82704,118758958,0,0x0,8
tick,0x7ff86ea82704,118761012,0,0x0,8
tick,0x7ff86ea82704,118762877,0,0x0,8
tick,0x7ff86ea82704,118765098,0,0x0,8
tick,0x7ff86ea82704,118766952,0,0x0,8
tick,0x7ff86ea82704,118769090,0,0x0,8
tick,0x7ff86ea82704,118771082,0,0x0,8
tick,0x7ff86ea82704,118772992,0,0x0,8
tick,0x7ff86ea82704,118775077,0,0x0,8
tick,0x7ff86ea82704,118777107,0,0x0,8
tick,0x7ff86ea82704,118779321,0,0x0,8
tick,0x7ff86ea82704,118780992,0,0x0,8
tick,0x7ff86ea82704,118783329,0,0x0,8
tick,0x7ff86ea82704,118785509,0,0x0,8
tick,0x7ff86ea82704,118786969,0,0x0,8
tick,0x7ff86ea82704,118788920,0,0x0,8
tick,0x7ff86ea82704,118790968,0,0x0,8
tick,0x7ff86ea82704,118792899,0,0x0,8
tick,0x7ff86ea82704,118794920,0,0x0,8
tick,0x7ff86ea82704,118796910,0,0x0,8
tick,0x7ff86ea82704,118799173,0,0x0,8
tick,0x7ff86ea82704,118801970,0,0x0,8
tick,0x7ff86ea82704,118802703,0,0x0,8
tick,0x7ff86ea82704,118804772,0,0x0,8
tick,0x7ff86ea82704,118806787,0,0x0,8
tick,0x7ff86ea82704,118809041,0,0x0,8
tick,0x7ff86ea82704,118810787,0,0x0,8
tick,0x7ff86ea82704,118812808,0,0x0,8
tick,0x7ff86ea82704,118814938,0,0x0,8
tick,0x7ff86ea82704,118817090,0,0x0,8
tick,0x7ff86ea82704,118818978,0,0x0,8
tick,0x7ff86ea82704,118820790,0,0x0,8
tick,0x7ff86ea82704,118822920,0,0x0,8
tick,0x7ff86ea82704,118824759,0,0x0,8
tick,0x7ff86ea82704,118826736,0,0x0,8
tick,0x7ff86ea82704,118828822,0,0x0,8
tick,0x7ff86ea82704,118830752,0,0x0,8
tick,0x7ff86ea82704,118834256,0,0x0,8
tick,0x7ff86ea82704,118835373,0,0x0,8
tick,0x7ff86ea82704,118836971,0,0x0,8
tick,0x7ff86ea82704,118839142,0,0x0,8
tick,0x7ff86ea82704,118841007,0,0x0,8
tick,0x7ff86ea82704,118842781,0,0x0,8
tick,0x7ff86ea82704,118845080,0,0x0,8
tick,0x7ff86ea82704,118846820,0,0x0,8
tick,0x7ff86ea82704,118850961,0,0x0,8
tick,0x7ff86ea82704,118850989,0,0x0,8
tick,0x7ff86ea82704,118853212,0,0x0,8
tick,0x7ff86ea82704,118854718,0,0x0,8
tick,0x7ff86ea82704,118856743,0,0x0,8
tick,0x7ff86ea82704,118858845,0,0x0,8
tick,0x7ff86ea82704,118860782,0,0x0,8
tick,0x7ff86ea82704,118863043,0,0x0,8
tick,0x7ff86ea82704,118865318,0,0x0,8
tick,0x7ff86ea82704,118866849,0,0x0,8
tick,0x7ff86ea82704,118869850,0,0x0,8
tick,0x7ff86ea82704,118871824,0,0x0,8
tick,0x7ff86ea82704,118873564,0,0x0,8
tick,0x7ff86ea82704,118875786,0,0x0,8
tick,0x7ff86ea82704,118877532,0,0x0,8
tick,0x7ff86ea82704,118880073,0,0x0,8
tick,0x7ff86ea82704,118884390,0,0x0,8
tick,0x7ff86ea82704,118886663,0,0x0,8
tick,0x7ff86ea82704,118889221,0,0x0,8
tick,0x7ff86ea82704,118890641,0,0x0,8
tick,0x7ff86ea82704,118892697,0,0x0,8
tick,0x7ff86ea82704,118894653,0,0x0,8
tick,0x7ff86ea82704,118896611,0,0x0,8
tick,0x7ff86ea82704,118899398,0,0x0,8
tick,0x7ff86ea82704,118901594,0,0x0,8
tick,0x7ff86ea82704,118902853,0,0x0,8
tick,0x7ff86ea82704,118904639,0,0x0,8
tick,0x7ff86ea82704,118906702,0,0x0,8
tick,0x7ff86ea82704,118908621,0,0x0,8
tick,0x7ff86ea82704,118910726,0,0x0,8
tick,0x7ff86ea82704,118912667,0,0x0,8
tick,0x7ff86ea82704,118914626,0,0x0,8
tick,0x7ff86ea82704,118916984,0,0x0,8
tick,0x7ff86ea82704,118919132,0,0x0,8
tick,0x7ff86ea82704,118920792,0,0x0,8
tick,0x7ff86ea82704,118922533,0,0x0,8
tick,0x7ff86ea82704,118924536,0,0x0,8
tick,0x7ff86ea82704,118926582,0,0x0,8
tick,0x7ff86ea82704,118928999,0,0x0,8
tick,0x7ff86ea82704,118930553,0,0x0,8
tick,0x7ff86ea82704,118932793,0,0x0,8
tick,0x7ff86ea82704,118935622,0,0x0,8
tick,0x7ff86ea82704,118938028,0,0x0,8
tick,0x7ff86ea82704,118939623,0,0x0,8
tick,0x7ff86ea82704,118941816,0,0x0,8
tick,0x7ff86ea82704,118943565,0,0x0,8
tick,0x7ff86ea82704,118945604,0,0x0,8
tick,0x7ff86ea82704,118947600,0,0x0,8
tick,0x7ff86ea82704,118949964,0,0x0,8
tick,0x7ff86ea82704,118952118,0,0x0,8
tick,0x7ff86ea82704,118953806,0,0x0,8
tick,0x7ff86ea82704,118955547,0,0x0,8
tick,0x7ff86ea82704,118957796,0,0x0,8
tick,0x7ff86ea82704,118959490,0,0x0,8
tick,0x7ff86ea82704,118961592,0,0x0,8
tick,0x7ff86ea82704,118963479,0,0x0,8
tick,0x7ff86ea82704,118965942,0,0x0,8
tick,0x7ff86ea82704,118968166,0,0x0,8
tick,0x7ff86ea82704,118969629,0,0x0,8
tick,0x7ff86ea82704,118971417,0,0x0,8
tick,0x7ff86ea82704,118973697,0,0x0,8
tick,0x7ff86ea82704,118975457,0,0x0,8
tick,0x7ff86ea82704,118977609,0,0x0,8
tick,0x7ff86ea82704,118979566,0,0x0,8
tick,0x7ff86ea82704,118984547,0,0x0,8
tick,0x7ff86ea82704,118986274,0,0x0,8
tick,0x7ff86ea82704,118988287,0,0x0,8
tick,0x7ff86ea82704,118990243,0,0x0,8
tick,0x7ff86ea82704,118992287,0,0x0,8
tick,0x7ff86ea82704,118994289,0,0x0,8
tick,0x7ff86ea82704,119000843,0,0x0,8
tick,0x7ff86ea82704,119002254,0,0x0,8
tick,0x7ff86ea82704,119004272,0,0x0,8
tick,0x7ff86ea82704,119006247,0,0x0,8
tick,0x7ff86ea82704,119008283,0,0x0,8
tick,0x7ff86ea82704,119010281,0,0x0,8
tick,0x7ff86ea82704,119012278,0,0x0,8
tick,0x7ff86ea82704,119014487,0,0x0,8
tick,0x7ff86ea82704,119017770,0,0x0,8
tick,0x7ff86ea82704,119019621,0,0x0,8
tick,0x7ff86ea82704,119021344,0,0x0,8
tick,0x7ff86ea82704,119023610,0,0x0,8
tick,0x7ff86ea82704,119025330,0,0x0,8
tick,0x7ff86ea82704,119027468,0,0x0,8
tick,0x7ff86ea82704,119029338,0,0x0,8
tick,0x7ff86ea82704,119032067,0,0x0,8
tick,0x7ff86ea82704,119034269,0,0x0,8
tick,0x7ff86ea82704,119036072,0,0x0,8
tick,0x7ff86ea82704,119038093,0,0x0,8
tick,0x7ff86ea82704,119040120,0,0x0,8
tick,0x7ff86ea82704,119042084,0,0x0,8
tick,0x7ff86ea82704,119044086,0,0x0,8
tick,0x7ff86ea82704,119046039,0,0x0,8
tick,0x7ff86ea82704,119048362,0,0x0,8
tick,0x7ff86ea82704,119050143,0,0x0,8
tick,0x7ff86ea82704,119052001,0,0x0,8
tick,0x7ff86ea82704,119054126,0,0x0,8
tick,0x7ff86ea82704,119055999,0,0x0,8
tick,0x7ff86ea82704,119058090,0,0x0,8
tick,0x7ff86ea82704,119060183,0,0x0,8
tick,0x7ff86ea82704,119062989,0,0x0,8
tick,0x7ff86ea82704,119065182,0,0x0,8
tick,0x7ff86ea82704,119067610,0,0x0,8
tick,0x7ff86ea82704,119068736,0,0x0,8
tick,0x7ff86ea82704,119071057,0,0x0,8
tick,0x7ff86ea82704,119072357,0,0x0,8
tick,0x7ff86ea82704,119074461,0,0x0,8
tick,0x7ff86ea82704,119076218,0,0x0,8
tick,0x7ff86ea82704,119078224,0,0x0,8
tick,0x7ff86ea82704,119080758,0,0x0,8
tick,0x7ff86ea82704,119082021,0,0x0,8
tick,0x7ff86ea82704,119084539,0,0x0,8
tick,0x7ff86ea82704,119086213,0,0x0,8
tick,0x7ff86ea82704,119087985,0,0x0,8
tick,0x7ff86ea82704,119090064,0,0x0,8
tick,0x7ff86ea82704,119091963,0,0x0,8
tick,0x7ff86ea82704,119093932,0,0x0,8
tick,0x7ff86ea82704,119095971,0,0x0,8
tick,0x7ff86ea82704,119098045,0,0x0,8
tick,0x7ff86ea82704,119100119,0,0x0,8
tick,0x7ff86ea82704,119101959,0,0x0,8
tick,0x7ff86ea82704,119103989,0,0x0,8
tick,0x7ff86ea82704,119105918,0,0x0,8
tick,0x7ff86ea82704,119107914,0,0x0,8
tick,0x7ff86ea82704,119109924,0,0x0,8
tick,0x7ff86ea82704,119111958,0,0x0,8
tick,0x7ff86ea82704,119114001,0,0x0,8
tick,0x7ff86ea82704,119115942,0,0x0,8
tick,0x7ff86ea82704,119117973,0,0x0,8
tick,0x7ff86ea82704,119119890,0,0x0,8
tick,0x7ff86ea82704,119121826,0,0x0,8
tick,0x7ff86ea82704,119124003,0,0x0,8
tick,0x7ff86ea82704,119125851,0,0x0,8
tick,0x7ff86ea82704,119127955,0,0x0,8
tick,0x7ff86ea82704,119129862,0,0x0,8
tick,0x7ff86ea82704,119132574,0,0x0,8
tick,0x7ff86ea82704,119134052,0,0x0,8
tick,0x7ff86ea82704,119136196,0,0x0,8
tick,0x7ff86ea82704,119138060,0,0x0,8
tick,0x7ff86ea82704,119140088,0,0x0,8
tick,0x7ff86ea82704,119142066,0,0x0,8
tick,0x7ff86ea82704,119144175,0,0x0,8
tick,0x7ff86ea82704,119145981,0,0x0,8
tick,0x7ff86ea82704,119147967,0,0x0,8
tick,0x7ff86ea82704,119149846,0,0x0,8
tick,0x7ff86ea82704,119152145,0,0x0,8
tick,0x7ff86ea82704,119153764,0,0x0,8
tick,0x7ff86ea82704,119155902,0,0x0,8
tick,0x7ff86ea82704,119157905,0,0x0,8
tick,0x7ff86ea82704,119160194,0,0x0,8
tick,0x7ff86ea82704,119162014,0,0x0,8
tick,0x7ff86ea82704,119163947,0,0x0,8
tick,0x7ff86ea82704,119166440,0,0x0,8
tick,0x7ff86ea82704,119167951,0,0x0,8
tick,0x7ff86ea82704,119169800,0,0x0,8
tick,0x7ff86ea82704,119171958,0,0x0,8
tick,0x7ff86ea82704,119173962,0,0x0,8
tick,0x7ff86ea82704,119176012,0,0x0,8
tick,0x7ff86ea82704,119178023,0,0x0,8
tick,0x7ff86ea82704,119180045,0,0x0,8
tick,0x7ff86ea82704,119181812,0,0x0,8
tick,0x7ff86ea82704,119184410,0,0x0,8
tick,0x7ff86ea82704,119186699,0,0x0,8
tick,0x7ff86ea82704,119188020,0,0x0,8
tick,0x7ff86ea82704,119190103,0,0x0,8
tick,0x7ff86ea82704,119191879,0,0x0,8
tick,0x7ff86ea82704,119193955,0,0x0,8
tick,0x7ff86ea82704,119196495,0,0x0,8
tick,0x7ff86ea82704,119197911,0,0x0,8
tick,0x7ff86ea82704,119199868,0,0x0,8
tick,0x7ff86ea82704,119202393,0,0x0,8
tick,0x7ff86ea82704,119203845,0,0x0,8
tick,0x7ff86ea82704,119205845,0,0x0,8
tick,0x7ff86ea82704,119208061,0,0x0,8
tick,0x7ff86ea82704,119209924,0,0x0,8
tick,0x7ff86ea82704,119211678,0,0x0,8
tick,0x7ff86ea82704,119213827,0,0x0,8
tick,0x7ff86ea82704,119216024,0,0x0,8
tick,0x7ff86ea82704,119217723,0,0x0,8
tick,0x7ff86ea82704,119219684,0,0x0,8
tick,0x7ff86ea82704,119221690,0,0x0,8
tick,0x7ff86ea82704,119223659,0,0x0,8
tick,0x7ff86ea82704,119225866,0,0x0,8
tick,0x7ff86ea82704,119227670,0,0x0,8
tick,0x7ff86ea82704,119229745,0,0x0,8
tick,0x7ff86ea82704,119231940,0,0x0,8
tick,0x7ff86ea82704,119233797,0,0x0,8
tick,0x7ff86ea82704,119235588,0,0x0,8
tick,0x7ff86ea82704,119238621,0,0x0,8
tick,0x7ff86ea82704,119239550,0,0x0,8
tick,0x7ff86ea82704,119241637,0,0x0,8
tick,0x7ff86ea82704,119243712,0,0x0,8
tick,0x7ff86ea82704,119245554,0,0x0,8
tick,0x7ff86ea82704,119247628,0,0x0,8
tick,0x7ff86ea82704,119250131,0,0x0,8
tick,0x7ff86ea82704,119252173,0,0x0,8
tick,0x7ff86ea82704,119255404,0,0x0,8
tick,0x7ff86ea82704,119258614,0,0x0,8
tick,0x7ff86ea82704,119258702,0,0x0,8
tick,0x7ff86ea82704,119259822,0,0x0,8
tick,0x7ff86ea82704,119261974,0,0x0,8
tick,0x7ff86ea82704,119263637,0,0x0,8
tick,0x7ff86ea82704,119266525,0,0x0,8
tick,0x7ff86ea82704,119268442,0,0x0,8
tick,0x7ff86ea82704,119269516,0,0x0,8
tick,0x7ff86ea82704,119271524,0,0x0,8
tick,0x7ff86ea82704,119273530,0,0x0,8
tick,0x7ff86ea82704,119276575,0,0x0,8
tick,0x7ff86ea82704,119278827,0,0x0,8
tick,0x7ff86ea82704,119282974,0,0x0,8
tick,0x7ff86ea82704,119286107,0,0x0,8
tick,0x7ff86ea82704,119288193,0,0x0,8
tick,0x7ff86ea82704,119289418,0,0x0,8
tick,0x7ff86ea82704,119291393,0,0x0,8
tick,0x7ff86ea82704,119293435,0,0x0,8
tick,0x7ff86ea82704,119295428,0,0x0,8
tick,0x7ff86ea82704,119297417,0,0x0,8
tick,0x7ff86ea82704,119300073,0,0x0,8
tick,0x7ff86ea82704,119301555,0,0x0,8
tick,0x7ff86ea82704,119303548,0,0x0,8
tick,0x7ff86ea82704,119305439,0,0x0,8
tick,0x7ff86ea82704,119307755,0,0x0,8
tick,0x7ff86ea82704,119309480,0,0x0,8
tick,0x7ff86ea82704,119311434,0,0x0,8
tick,0x7ff86ea82704,119313430,0,0x0,8
tick,0x7ff86ea82704,119315747,0,0x0,8
tick,0x7ff86ea82704,119317853,0,0x0,8
tick,0x7ff86ea82704,119319414,0,0x0,8
tick,0x7ff86ea82704,119321295,0,0x0,8
tick,0x7ff86ea82704,119323400,0,0x0,8
tick,0x7ff86ea82704,119325410,0,0x0,8
tick,0x7ff86ea82704,119327483,0,0x0,8
tick,0x7ff86ea82704,119329303,0,0x0,8
tick,0x7ff86ea82704,119331380,0,0x0,8
tick,0x7ff86ea82704,119333388,0,0x0,8
tick,0x7ff86ea82704,119335310,0,0x0,8
tick,0x7ff86ea82704,119337273,0,0x0,8
tick,0x7ff86ea82704,119339380,0,0x0,8
tick,0x7ff86ea82704,119341439,0,0x0,8
tick,0x7ff86ea82704,119343507,0,0x0,8
tick,0x7ff86ea82704,119345363,0,0x0,8
tick,0x7ff86ea82704,119347411,0,0x0,8
tick,0x7ff86ea82704,119350091,0,0x0,8
tick,0x7ff86ea82704,119351270,0,0x0,8
tick,0x7ff86ea82704,119353341,0,0x0,8
tick,0x7ff86ea82704,119355304,0,0x0,8
tick,0x7ff86ea82704,119357480,0,0x0,8
tick,0x7ff86ea82704,119359919,0,0x0,8
tick,0x7ff86ea82704,119361849,0,0x0,8
tick,0x7ff86ea82704,119363722,0,0x0,8
tick,0x7ff86ea82704,119365874,0,0x0,8
tick,0x7ff86ea82704,119367804,0,0x0,8
tick,0x7ff86ea82704,119369635,0,0x0,8
tick,0x7ff86ea82704,119371454,0,0x0,8
tick,0x7ff86ea82704,119373306,0,0x0,8
tick,0x7ff86ea82704,119375476,0,0x0,8
tick,0x7ff86ea82704,119377539,0,0x0,8
tick,0x7ff86ea82704,119379281,0,0x0,8
tick,0x7ff86ea82704,119381382,0,0x0,8
tick,0x7ff86ea82704,119384045,0,0x0,8
tick,0x7ff86ea82704,119385484,0,0x0,8
tick,0x7ff86ea82704,119387149,0,0x0,8
tick,0x7ff86ea82704,119389208,0,0x0,8
tick,0x7ff86ea82704,119391177,0,0x0,8
tick,0x7ff86ea82704,119393333,0,0x0,8
tick,0x7ff86ea82704,119395209,0,0x0,8
tick,0x7ff86ea82704,119397259,0,0x0,8
tick,0x7ff86ea82704,119399374,0,0x0,8
tick,0x7ff86ea82704,119401576,0,0x0,8
tick,0x7ff86ea82704,119403276,0,0x0,8
tick,0x7ff86ea82704,119405308,0,0x0,8
tick,0x7ff86ea82704,119407324,0,0x0,8
tick,0x7ff86ea82704,119409507,0,0x0,8
tick,0x7ff86ea82704,119411332,0,0x0,8
tick,0x7ff86ea82704,119413417,0,0x0,8
tick,0x7ff86ea82704,119415347,0,0x0,8
tick,0x7ff86ea82704,119417851,0,0x0,8
tick,0x7ff86ea82704,119419178,0,0x0,8
tick,0x7ff86ea82704,119421204,0,0x0,8
tick,0x7ff86ea82704,119423056,0,0x0,8
tick,0x7ff86ea82704,119425251,0,0x0,8
tick,0x7ff86ea82704,119427130,0,0x0,8
tick,0x7ff86ea82704,119429109,0,0x0,8
tick,0x7ff86ea82704,119431188,0,0x0,8
tick,0x7ff86ea82704,119434426,0,0x0,8
tick,0x7ff86ea82704,119435073,0,0x0,8
tick,0x7ff86ea82704,119437456,0,0x0,8
tick,0x7ff86ea82704,119439158,0,0x0,8
tick,0x7ff86ea82704,119441618,0,0x0,8
tick,0x7ff86ea82704,119443075,0,0x0,8
tick,0x7ff86ea82704,119445081,0,0x0,8
tick,0x7ff86ea82704,119447256,0,0x0,8
tick,0x7ff86ea82704,119449847,0,0x0,8
tick,0x7ff86ea82704,119451289,0,0x0,8
tick,0x7ff86ea82704,119453185,0,0x0,8
tick,0x7ff86ea82704,119455358,0,0x0,8
tick,0x7ff86ea82704,119457126,0,0x0,8
tick,0x7ff86ea82704,119459164,0,0x0,8
tick,0x7ff86ea82704,119461188,0,0x0,8
tick,0x7ff86ea82704,119463263,0,0x0,8
tick,0x7ff86ea82704,119465206,0,0x0,8
tick,0x7ff86ea82704,119467378,0,0x0,8
tick,0x7ff86ea82704,119469170,0,0x0,8
tick,0x7ff86ea82704,119471300,0,0x0,8
tick,0x7ff86ea82704,119473350,0,0x0,8
tick,0x7ff86ea82704,119475179,0,0x0,8
tick,0x7ff86ea82704,119477112,0,0x0,8
tick,0x7ff86ea82704,119479371,0,0x0,8
tick,0x7ff86ea82704,119481300,0,0x0,8
tick,0x7ff86ea82704,119484102,0,0x0,8
tick,0x7ff86ea82704,119484994,0,0x0,8
tick,0x7ff86ea82704,119487100,0,0x0,8
tick,0x7ff86ea82704,119489005,0,0x0,8
tick,0x7ff86ea82704,119491000,0,0x0,8
tick,0x7ff86ea82704,119492935,0,0x0,8
tick,0x7ff86ea82704,119495733,0,0x0,8
tick,0x7ff86ea82704,119497427,0,0x0,8
tick,0x7ff86ea82704,119499861,0,0x0,8
tick,0x7ff86ea82704,119501243,0,0x0,8
tick,0x7ff86ea82704,119503397,0,0x0,8
tick,0x7ff86ea82704,119505011,0,0x0,8
tick,0x7ff86ea82704,119506971,0,0x0,8
tick,0x7ff86ea82704,119509035,0,0x0,8
tick,0x7ff86ea82704,119511091,0,0x0,8
tick,0x7ff86ea82704,119513135,0,0x0,8
tick,0x7ff86ea82704,119515186,0,0x0,8
tick,0x7ff86ea82704,119517688,0,0x0,8
tick,0x7ff86ea82704,119519266,0,0x0,8
tick,0x7ff86ea82704,119520934,0,0x0,8
tick,0x7ff86ea82704,119522978,0,0x0,8
tick,0x7ff86ea82704,119524977,0,0x0,8
tick,0x7ff86ea82704,119527061,0,0x0,8
tick,0x7ff86ea82704,119528916,0,0x0,8
tick,0x7ff86ea82704,119531553,0,0x0,8
tick,0x7ff86ea82704,119533392,0,0x0,8
tick,0x7ff86ea82704,119535036,0,0x0,8
tick,0x7ff86ea82704,119536845,0,0x0,8
tick,0x7ff86ea82704,119538856,0,0x0,8
tick,0x7ff86ea82704,119541150,0,0x0,8
tick,0x7ff86ea82704,119543066,0,0x0,8
tick,0x7ff86ea82704,119545071,0,0x0,8
tick,0x7ff86ea82704,119546907,0,0x0,8
tick,0x7ff86ea82704,119551460,0,0x0,8
tick,0x7ff86ea82704,119551486,0,0x0,8
tick,0x7ff86ea82704,119553234,0,0x0,8
tick,0x7ff86ea82704,119554976,0,0x0,8
tick,0x7ff86ea82704,119557349,0,0x0,8
tick,0x7ff86ea82704,119558802,0,0x0,8
tick,0x7ff86ea82704,119561393,0,0x0,8
tick,0x7ff86ea82704,119562876,0,0x0,8
tick,0x7ff86ea82704,119564870,0,0x0,8
tick,0x7ff86ea82704,119567501,0,0x0,8
tick,0x7ff86ea82704,119568752,0,0x0,8
tick,0x7ff86ea82704,119570810,0,0x0,8
tick,0x7ff86ea82704,119573091,0,0x0,8
tick,0x7ff86ea82704,119575048,0,0x0,8
tick,0x7ff86ea82704,119576743,0,0x0,8
tick,0x7ff86ea82704,119578935,0,0x0,8
tick,0x7ff86ea82704,119580727,0,0x0,8
tick,0x7ff86ea82704,119583278,0,0x0,8
tick,0x7ff86ea82704,119584725,0,0x0,8
tick,0x7ff86ea82704,119586740,0,0x0,8
tick,0x7ff86ea82704,119589194,0,0x0,8
tick,0x7ff86ea82704,119590760,0,0x0,8
tick,0x7ff86ea82704,119592609,0,0x0,8
tick,0x7ff86ea82704,119594701,0,0x0,8
tick,0x7ff86ea82704,119596904,0,0x0,8
tick,0x7ff86ea82704,119598987,0,0x0,8
tick,0x7ff86ea82704,119601016,0,0x0,8
tick,0x7ff86ea82704,119602756,0,0x0,8
tick,0x7ff86ea82704,119604698,0,0x0,8
tick,0x7ff86ea82704,119606729,0,0x0,8
tick,0x7ff86ea82704,119608605,0,0x0,8
tick,0x7ff86ea82704,119610804,0,0x0,8
tick,0x7ff86ea82704,119612699,0,0x0,8
tick,0x7ff86ea82704,119615425,0,0x0,8
tick,0x7ff86ea82704,119617709,0,0x0,8
tick,0x7ff86ea82704,119618878,0,0x0,8
tick,0x7ff86ea82704,119620657,0,0x0,8
tick,0x7ff86ea82704,119622619,0,0x0,8
tick,0x7ff86ea82704,119624489,0,0x0,8
tick,0x7ff86ea82704,119626589,0,0x0,8
tick,0x7ff86ea82704,119628766,0,0x0,8
tick,0x7ff86ea82704,119630576,0,0x0,8
tick,0x7ff86ea82704,119632830,0,0x0,8
tick,0x7ff86ea82704,119634610,0,0x0,8
tick,0x7ff86ea82704,119636547,0,0x0,8
tick,0x7ff86ea82704,119638507,0,0x0,8
tick,0x7ff86ea82704,119640606,0,0x0,8
tick,0x7ff86ea82704,119642506,0,0x0,8
tick,0x7ff86ea82704,119644646,0,0x0,8
tick,0x7ff86ea82704,119646464,0,0x0,8
tick,0x7ff86ea82704,119648606,0,0x0,8
tick,0x7ff86ea82704,119651634,0,0x0,8
tick,0x7ff86ea82704,119652620,0,0x0,8
tick,0x7ff86ea82704,119654462,0,0x0,8
tick,0x7ff86ea82704,119656352,0,0x0,8
tick,0x7ff86ea82704,119658449,0,0x0,8
tick,0x7ff86ea82704,119660315,0,0x0,8
tick,0x7ff86ea82704,119662475,0,0x0,8
tick,0x7ff86ea82704,119664361,0,0x0,8
tick,0x7ff86ea82704,119668509,0,0x0,8
tick,0x7ff86ea82704,119668986,0,0x0,8
tick,0x7ff86ea82704,119670561,0,0x0,8
tick,0x7ff86ea82704,119672574,0,0x0,8
tick,0x7ff86ea82704,119674592,0,0x0,8
tick,0x7ff86ea82704,119676621,0,0x0,8
tick,0x7ff86ea82704,119678479,0,0x0,8
tick,0x7ff86ea82704,119680632,0,0x0,8
tick,0x7ff86ea82704,119682590,0,0x0,8
tick,0x7ff86ea82704,119684743,0,0x0,8
tick,0x7ff86ea82704,119686447,0,0x0,8
tick,0x7ff86ea82704,119688495,0,0x0,8
tick,0x7ff86ea82704,119691025,0,0x0,8
tick,0x7ff86ea82704,119692376,0,0x0,8
tick,0x7ff86ea82704,119694365,0,0x0,8
tick,0x7ff86ea82704,119696474,0,0x0,8
tick,0x7ff86ea82704,119698417,0,0x0,8
tick,0x7ff86ea82704,119700343,0,0x0,8
tick,0x7ff86ea82704,119702516,0,0x0,8
tick,0x7ff86ea82704,119704378,0,0x0,8
tick,0x7ff86ea82704,119706307,0,0x0,8
tick,0x7ff86ea82704,119708393,0,0x0,8
tick,0x7ff86ea82704,119710302,0,0x0,8
tick,0x7ff86ea82704,119712431,0,0x0,8
tick,0x7ff86ea82704,119714366,0,0x0,8
tick,0x7ff86ea82704,119716643,0,0x0,8
tick,0x7ff86ea82704,119718369,0,0x0,8
tick,0x7ff86ea82704,119720393,0,0x0,8
tick,0x7ff86ea82704,119721672,0,0x0,8
tick,0x7ff86ea82704,119722886,0,0x0,8
tick,0x7ff86ea82704,119724839,0,0x0,8
tick,0x7ff86ea82704,119726851,0,0x0,8
tick,0x7ff86ea82704,119728863,0,0x0,8
tick,0x7ff86ea82704,119731090,0,0x0,8
tick,0x7ff86ea82704,119732874,0,0x0,8
tick,0x7ff86ea82704,119734840,0,0x0,8
tick,0x7ff86ea82704,119736822,0,0x0,8
tick,0x7ff86ea82704,119738873,0,0x0,8
tick,0x7ff86ea82704,119740788,0,0x0,8
tick,0x7ff86ea82704,119742875,0,0x0,8
tick,0x7ff86ea82704,119745725,0,0x0,8
tick,0x7ff86ea82704,119747983,0,0x0,8
tick,0x7ff86ea82704,119748642,0,0x0,8
tick,0x7ff86ea82704,119751454,0,0x0,8
tick,0x7ff86ea82704,119752827,0,0x0,8
tick,0x7ff86ea82704,119755091,0,0x0,8
tick,0x7ff86ea82704,119756977,0,0x0,8
tick,0x7ff86ea82704,119759262,0,0x0,8
tick,0x7ff86ea82704,119760868,0,0x0,8
tick,0x7ff86ea82704,119763016,0,0x0,8
tick,0x7ff86ea82704,119764981,0,0x0,8
tick,0x7ff86ea82704,119767330,0,0x0,8
tick,0x7ff86ea82704,119768766,0,0x0,8
tick,0x7ff86ea82704,119770636,0,0x0,8
tick,0x7ff86ea82704,119772981,0,0x0,8
tick,0x7ff86ea82704,119774821,0,0x0,8
tick,0x7ff86ea82704,119776945,0,0x0,8
tick,0x7ff86ea82704,119778750,0,0x0,8
tick,0x7ff86ea82704,119780904,0,0x0,8
tick,0x7ff86ea82704,119786954,0,0x0,8
tick,0x7ff86ea82704,119786982,0,0x0,8
tick,0x7ff86ea82704,119787002,0,0x0,8
tick,0x7ff86ea82704,119789640,0,0x0,8
tick,0x7ff86ea82704,119791491,0,0x0,8
tick,0x7ff86ea82704,119792840,0,0x0,8
tick,0x7ff86ea82704,119795586,0,0x0,8
tick,0x7ff86ea82704,119797920,0,0x0,8
tick,0x7ff86ea82704,119801136,0,0x0,8
tick,0x7ff86ea82704,119802785,0,0x0,8
tick,0x7ff86ea82704,119804097,0,0x0,8
tick,0x7ff86ea82704,119805699,0,0x0,8
tick,0x7ff86ea82704,119807833,0,0x0,8
tick,0x7ff86ea82704,119809681,0,0x0,8
tick,0x7ff86ea82704,119811823,0,0x0,8
tick,0x7ff86ea82704,119813733,0,0x0,8
tick,0x7ff86ea82704,119816137,0,0x0,8
tick,0x7ff86ea82704,119818483,0,0x0,8
tick,0x7ff86ea82704,119819620,0,0x0,8
tick,0x7ff86ea82704,119821668,0,0x0,8
tick,0x7ff86ea82704,119823757,0,0x0,8
tick,0x7ff86ea82704,119825672,0,0x0,8
tick,0x7ff86ea82704,119827826,0,0x0,8
tick,0x7ff86ea82704,119829640,0,0x0,8
tick,0x7ff86ea82704,119831748,0,0x0,8
tick,0x7ff86ea82704,119834412,0,0x0,8
tick,0x7ff86ea82704,119836957,0,0x0,8
tick,0x7ff86ea82704,119838260,0,0x0,8
tick,0x7ff86ea82704,119839496,0,0x0,8
tick,0x7ff86ea82704,119841900,0,0x0,8
tick,0x7ff86ea82704,119843758,0,0x0,8
tick,0x7ff86ea82704,119845499,0,0x0,8
tick,0x7ff86ea82704,119847493,0,0x0,8
tick,0x7ff86ea82704,119849763,0,0x0,8
tick,0x7ff86ea82704,119852398,0,0x0,8
tick,0x7ff86ea82704,119853830,0,0x0,8
tick,0x7ff86ea82704,119855439,0,0x0,8
tick,0x7ff86ea82704,119857477,0,0x0,8
tick,0x7ff86ea82704,119859580,0,0x0,8
tick,0x7ff86ea82704,119861412,0,0x0,8
tick,0x7ff86ea82704,119863635,0,0x0,8
tick,0x7ff86ea82704,119865667,0,0x0,8
tick,0x7ff86ea82704,119868476,0,0x0,8
tick,0x7ff86ea82704,119869527,0,0x0,8
tick,0x7ff86ea82704,119871471,0,0x0,8
tick,0x7ff86ea82704,119873451,0,0x0,8
tick,0x7ff86ea82704,119875718,0,0x0,8
tick,0x7ff86ea82704,119877768,0,0x0,8
tick,0x7ff86ea82704,119880393,0,0x0,8
tick,0x7ff86ea82704,119882018,0,0x0,8
tick,0x7ff86ea82704,119884354,0,0x0,8
tick,0x7ff86ea82704,119886574,0,0x0,8
tick,0x7ff86ea82704,119888846,0,0x0,8
tick,0x7ff86ea82704,119890979,0,0x0,8
tick,0x7ff86ea82704,119893452,0,0x0,8
tick,0x7ff86ea82704,119894360,0,0x0,8
tick,0x7ff86ea82704,119896598,0,0x0,8
tick,0x7ff86ea82704,119898390,0,0x0,8
tick,0x7ff86ea82704,119900586,0,0x0,8
tick,0x7ff86ea82704,119903000,0,0x0,8
tick,0x7ff86ea82704,119904589,0,0x0,8
tick,0x7ff86ea82704,119906672,0,0x0,8
tick,0x7ff86ea82704,119908799,0,0x0,8
tick,0x7ff86ea82704,119910594,0,0x0,8
tick,0x7ff86ea82704,119912881,0,0x0,8
tick,0x7ff86ea82704,119914538,0,0x0,8
tick,0x7ff86ea82704,119917131,0,0x0,8
tick,0x7ff86ea82704,119920948,0,0x0,8
tick,0x7ff86ea82704,119922411,0,0x0,8
tick,0x7ff86ea82704,119924490,0,0x0,8
tick,0x7ff86ea82704,119927391,0,0x0,8
tick,0x7ff86ea82704,119928289,0,0x0,8
tick,0x7ff86ea82704,119930284,0,0x0,8
tick,0x7ff86ea82704,119933788,0,0x0,8
tick,0x7ff86ea82704,119935352,0,0x0,8
tick,0x7ff86ea82704,119937536,0,0x0,8
tick,0x7ff86ea82704,119939553,0,0x0,8
tick,0x7ff86ea82704,119941275,0,0x0,8
tick,0x7ff86ea82704,119943468,0,0x0,8
tick,0x7ff86ea82704,119945260,0,0x0,8
tick,0x7ff86ea82704,119947562,0,0x0,8
tick,0x7ff86ea82704,119951384,0,0x0,8
tick,0x7ff86ea82704,119952800,0,0x0,8
tick,0x7ff86ea82704,119954540,0,0x0,8
tick,0x7ff86ea82704,119956618,0,0x0,8
tick,0x7ff86ea82704,119958326,0,0x0,8
tick,0x7ff86ea82704,119960809,0,0x0,8
tick,0x7ff86ea82704,119962469,0,0x0,8
tick,0x7ff86ea82704,119964426,0,0x0,8
tick,0x7ff86ea82704,119968131,0,0x0,8
tick,0x7ff86ea82704,119968175,0,0x0,8
tick,0x7ff86ea82704,119970406,0,0x0,8
tick,0x7ff86ea82704,119972360,0,0x0,8
tick,0x7ff86ea82704,119974246,0,0x0,8
tick,0x7ff86ea82704,119976616,0,0x0,8
tick,0x7ff86ea82704,119978238,0,0x0,8
tick,0x7ff86ea82704,119980233,0,0x0,8
tick,0x7ff86ea82704,119982196,0,0x0,8
tick,0x7ff86ea82704,119984856,0,0x0,8
tick,0x7ff86ea82704,119986338,0,0x0,8
tick,0x7ff86ea82704,119988078,0,0x0,8
tick,0x7ff86ea82704,119990068,0,0x0,8
tick,0x7ff86ea82704,119992062,0,0x0,8
tick,0x7ff86ea82704,119994088,0,0x0,8
tick,0x7ff86ea82704,119996223,0,0x0,8
tick,0x7ff86ea82704,119998238,0,0x0,8
tick,0x7ff86ea82704,120000418,0,0x0,8
tick,0x7ff86ea82704,120002612,0,0x0,8
tick,0x7ff86ea82704,120004032,0,0x0,8
tick,0x7ff86ea82704,120006248,0,0x0,8
tick,0x7ff86ea82704,120008074,0,0x0,8
tick,0x7ff86ea82704,120010146,0,0x0,8
tick,0x7ff86ea82704,120012054,0,0x0,8
tick,0x7ff86ea82704,120014089,0,0x0,8
tick,0x7ff86ea82704,120018222,0,0x0,8
tick,0x7ff86ea82704,120018284,0,0x0,8
tick,0x7ff86ea82704,120020045,0,0x0,8
tick,0x7ff86ea82704,120022458,0,0x0,8
tick,0x7ff86ea82704,120024132,0,0x0,8
tick,0x7ff86ea82704,120026086,0,0x0,8
tick,0x7ff86ea82704,120028340,0,0x0,8
tick,0x7ff86ea82704,120030183,0,0x0,8
tick,0x7ff86ea82704,120032052,0,0x0,8
tick,0x7ff86ea82704,120034613,0,0x0,8
tick,0x7ff86ea82704,120036080,0,0x0,8
tick,0x7ff86ea82704,120038200,0,0x0,8
tick,0x7ff86ea82704,120040158,0,0x0,8
tick,0x7ff86ea82704,120042335,0,0x0,8
tick,0x7ff86ea82704,120043995,0,0x0,8
tick,0x7ff86ea82704,120046117,0,0x0,8
tick,0x7ff86ea82704,120048028,0,0x0,8
tick,0x7ff86ea82704,120050695,0,0x0,8
tick,0x7ff86ea82704,120051921,0,0x0,8
tick,0x7ff86ea82704,120053927,0,0x0,8
tick,0x7ff86ea82704,120055891,0,0x0,8
tick,0x7ff86ea82704,120059033,0,0x0,8
tick,0x7ff86ea82704,120061451,0,0x0,8
tick,0x7ff86ea82704,120063186,0,0x0,8
tick,0x7ff86ea82704,120065510,0,0x0,8
tick,0x7ff86ea82704,120067359,0,0x0,8
tick,0x7ff86ea82704,120069262,0,0x0,8
tick,0x7ff86ea82704,120070978,0,0x0,8
tick,0x7ff86ea82704,120073120,0,0x0,8
tick,0x7ff86ea82704,120074954,0,0x0,8
tick,0x7ff86ea82704,120076970,0,0x0,8
tick,0x7ff86ea82704,120079042,0,0x0,8
tick,0x7ff86ea82704,120081045,0,0x0,8
tick,0x7ff86ea82704,120084498,0,0x0,8
tick,0x7ff86ea82704,120085580,0,0x0,8
tick,0x7ff86ea82704,120087044,0,0x0,8
tick,0x7ff86ea82704,120089160,0,0x0,8
tick,0x7ff86ea82704,120091076,0,0x0,8
tick,0x7ff86ea82704,120093059,0,0x0,8
tick,0x7ff86ea82704,120095126,0,0x0,8
tick,0x7ff86ea82704,120096859,0,0x0,8
tick,0x7ff86ea82704,120101229,0,0x0,8
tick,0x7ff86ea82704,120103431,0,0x0,8
tick,0x7ff86ea82704,120104946,0,0x0,8
tick,0x7ff86ea82704,120107252,0,0x0,8
tick,0x7ff86ea82704,120108759,0,0x0,8
tick,0x7ff86ea82704,120110871,0,0x0,8
tick,0x7ff86ea82704,120112742,0,0x0,8
tick,0x7ff86ea82704,120114904,0,0x0,8
tick,0x7ff86ea82704,120119673,0,0x0,8
tick,0x7ff86ea82704,120121131,0,0x0,8
tick,0x7ff86ea82704,120123062,0,0x0,8
tick,0x7ff86ea82704,120125065,0,0x0,8
tick,0x7ff86ea82704,120126793,0,0x0,8
tick,0x7ff86ea82704,120129098,0,0x0,8
tick,0x7ff86ea82704,120130906,0,0x0,8
tick,0x7ff86ea82704,120133519,0,0x0,8
tick,0x7ff86ea82704,120134935,0,0x0,8
tick,0x7ff86ea82704,120136957,0,0x0,8
tick,0x7ff86ea82704,120138788,0,0x0,8
tick,0x7ff86ea82704,120140814,0,0x0,8
tick,0x7ff86ea82704,120142956,0,0x0,8
tick,0x7ff86ea82704,120144804,0,0x0,8
tick,0x7ff86ea82704,120146809,0,0x0,8
tick,0x7ff86ea82704,120148878,0,0x0,8
tick,0x7ff86ea82704,120151762,0,0x0,8
tick,0x7ff86ea82704,120153746,0,0x0,8
tick,0x7ff86ea82704,120155632,0,0x0,8
tick,0x7ff86ea82704,120157799,0,0x0,8
tick,0x7ff86ea82704,120159709,0,0x0,8
tick,0x7ff86ea82704,120161718,0,0x0,8
tick,0x7ff86ea82704,120163719,0,0x0,8
tick,0x7ff86ea82704,120167275,0,0x0,8
tick,0x7ff86ea82704,120168676,0,0x0,8
tick,0x7ff86ea82704,120170741,0,0x0,8
tick,0x7ff86ea82704,120172595,0,0x0,8
tick,0x7ff86ea82704,120175025,0,0x0,8
tick,0x7ff86ea82704,120176753,0,0x0,8
tick,0x7ff86ea82704,120179159,0,0x0,8
tick,0x7ff86ea82704,120180900,0,0x0,8
tick,0x7ff86ea82704,120185151,0,0x0,8
tick,0x7ff86ea82704,120186785,0,0x0,8
tick,0x7ff86ea82704,120189259,0,0x0,8
tick,0x7ff86ea82704,120190829,0,0x0,8
tick,0x7ff86ea82704,120192789,0,0x0,8
tick,0x7ff86ea82704,120194802,0,0x0,8
tick,0x7ff86ea82704,120197219,0,0x0,8
tick,0x7ff86ea82704,120198773,0,0x0,8
tick,0x7ff86ea82704,120201307,0,0x0,8
tick,0x7ff86ea82704,120204179,0,0x0,8
tick,0x7ff86ea82704,120205707,0,0x0,8
tick,0x7ff86ea82704,120207714,0,0x0,8
tick,0x7ff86ea82704,120209873,0,0x0,8
tick,0x7ff86ea82704,120211508,0,0x0,8
tick,0x7ff86ea82704,120213783,0,0x0,8
tick,0x7ff86ea82704,120215590,0,0x0,8
tick,0x7ff86ea82704,120217907,0,0x0,8
tick,0x7ff86ea82704,120219674,0,0x0,8
tick,0x7ff86ea82704,120221641,0,0x0,8
tick,0x7ff86ea82704,120223695,0,0x0,8
tick,0x7ff86ea82704,120225756,0,0x0,8
tick,0x7ff86ea82704,120227644,0,0x0,8
tick,0x7ff86ea82704,120229693,0,0x0,8
tick,0x7ff86ea82704,120231637,0,0x0,8
tick,0x7ff86ea82704,120234960,0,0x0,8
tick,0x7ff86ea82704,120236745,0,0x0,8
tick,0x7ff86ea82704,120238447,0,0x0,8
tick,0x7ff86ea82704,120240558,0,0x0,8
tick,0x7ff86ea82704,120242443,0,0x0,8
tick,0x7ff86ea82704,120244531,0,0x0,8
tick,0x7ff86ea82704,120246406,0,0x0,8
tick,0x7ff86ea82704,120248737,0,0x0,8
tick,0x7ff86ea82704,120250920,0,0x0,8
tick,0x7ff86ea82704,120252722,0,0x0,8
tick,0x7ff86ea82704,120254631,0,0x0,8
tick,0x7ff86ea82704,120256672,0,0x0,8
tick,0x7ff86ea82704,120258542,0,0x0,8
tick,0x7ff86ea82704,120261202,0,0x0,8
tick,0x7ff86ea82704,120262611,0,0x0,8
tick,0x7ff86ea82704,120264717,0,0x0,8
tick,0x7ff86ea82704,120266958,0,0x0,8
tick,0x7ff86ea82704,120268490,0,0x0,8
tick,0x7ff86ea82704,120270497,0,0x0,8
tick,0x7ff86ea82704,120272466,0,0x0,8
tick,0x7ff86ea82704,120274562,0,0x0,8
tick,0x7ff86ea82704,120276470,0,0x0,8
tick,0x7ff86ea82704,120278650,0,0x0,8
tick,0x7ff86ea82704,120280376,0,0x0,8
tick,0x7ff86ea82704,120283130,0,0x0,8
tick,0x7ff86ea82704,120284515,0,0x0,8
tick,0x7ff86ea82704,120286387,0,0x0,8
tick,0x7ff86ea82704,120288255,0,0x0,8
tick,0x7ff86ea82704,120290438,0,0x0,8
tick,0x7ff86ea82704,120292448,0,0x0,8
tick,0x7ff86ea82704,120294305,0,0x0,8
tick,0x7ff86ea82704,120296306,0,0x0,8
tick,0x7ff86ea82704,120298381,0,0x0,8
tick,0x7ff86ea82704,120300771,0,0x0,8
tick,0x7ff86ea82704,120302374,0,0x0,8
tick,0x7ff86ea82704,120304391,0,0x0,8
tick,0x7ff86ea82704,120306558,0,0x0,8
tick,0x7ff86ea82704,120308363,0,0x0,8
tick,0x7ff86ea82704,120310373,0,0x0,8
tick,0x7ff86ea82704,120312293,0,0x0,8
tick,0x7ff86ea82704,120314482,0,0x0,8
tick,0x7ff86ea82704,120316876,0,0x0,8
tick,0x7ff86ea82704,120318279,0,0x0,8
tick,0x7ff86ea82704,120320308,0,0x0,8
tick,0x7ff86ea82704,120322385,0,0x0,8
tick,0x7ff86ea82704,120324340,0,0x0,8
tick,0x7ff86ea82704,120326249,0,0x0,8
tick,0x7ff86ea82704,120328287,0,0x0,8
tick,0x7ff86ea82704,120330257,0,0x0,8
tick,0x7ff86ea82704,120332673,0,0x0,8
tick,0x7ff86ea82704,120334463,0,0x0,8
tick,0x7ff86ea82704,120336254,0,0x0,8
tick,0x7ff86ea82704,120338342,0,0x0,8
tick,0x7ff86ea82704,120340238,0,0x0,8
tick,0x7ff86ea82704,120342188,0,0x0,8
tick,0x7ff86ea82704,120344292,0,0x0,8
tick,0x7ff86ea82704,120346247,0,0x0,8
tick,0x7ff86ea82704,120348227,0,0x0,8
tick,0x7ff86ea82704,120350837,0,0x0,8
tick,0x7ff86ea82704,120352339,0,0x0,8
tick,0x7ff86ea82704,120354194,0,0x0,8
tick,0x7ff86ea82704,120356232,0,0x0,8
tick,0x7ff86ea82704,120358137,0,0x0,8
tick,0x7ff86ea82704,120360228,0,0x0,8
tick,0x7ff86ea82704,120362235,0,0x0,8
tick,0x7ff86ea82704,120364259,0,0x0,8
tick,0x7ff86ea82704,120366322,0,0x0,8
tick,0x7ff86ea82704,120368194,0,0x0,8
tick,0x7ff86ea82704,120370118,0,0x0,8
tick,0x7ff86ea82704,120372181,0,0x0,8
tick,0x7ff86ea82704,120374103,0,0x0,8
tick,0x7ff86ea82704,120376136,0,0x0,8
tick,0x7ff86ea82704,120378158,0,0x0,8
tick,0x7ff86ea82704,120380165,0,0x0,8
tick,0x7ff86ea82704,120382120,0,0x0,8
tick,0x7ff86ea82704,120384497,0,0x0,8
tick,0x7ff86ea82704,120386202,0,0x0,8
tick,0x7ff86ea82704,120388182,0,0x0,8
tick,0x7ff86ea82704,120390159,0,0x0,8
tick,0x7ff86ea82704,120392448,0,0x0,8
tick,0x7ff86ea82704,120394198,0,0x0,8
tick,0x7ff86ea82704,120396138,0,0x0,8
tick,0x7ff86ea82704,120398113,0,0x0,8
tick,0x7ff86ea82704,120400690,0,0x0,8
tick,0x7ff86ea82704,120402075,0,0x0,8
tick,0x7ff86ea82704,120404197,0,0x0,8
tick,0x7ff86ea82704,120406182,0,0x0,8
tick,0x7ff86ea82704,120408267,0,0x0,8
tick,0x7ff86ea82704,120410083,0,0x0,8
tick,0x7ff86ea82704,120412151,0,0x0,8
tick,0x7ff86ea82704,120414100,0,0x0,8
tick,0x7ff86ea82704,120416809,0,0x0,8
tick,0x7ff86ea82704,120418225,0,0x0,8
tick,0x7ff86ea82704,120419975,0,0x0,8
tick,0x7ff86ea82704,120421962,0,0x0,8
tick,0x7ff86ea82704,120424002,0,0x0,8
tick,0x7ff86ea82704,120426012,0,0x0,8
tick,0x7ff86ea82704,120428187,0,0x0,8
tick,0x7ff86ea82704,120430067,0,0x0,8
tick,0x7ff86ea82704,120431950,0,0x0,8
tick,0x7ff86ea82704,120434276,0,0x0,8
tick,0x7ff86ea82704,120435979,0,0x0,8
tick,0x7ff86ea82704,120438811,0,0x0,8
tick,0x7ff86ea82704,120441135,0,0x0,8
tick,0x7ff86ea82704,120443022,0,0x0,8
tick,0x7ff86ea82704,120445249,0,0x0,8
tick,0x7ff86ea82704,120447158,0,0x0,8
tick,0x7ff86ea82704,120450340,0,0x0,8
tick,0x7ff86ea82704,120451138,0,0x0,8
tick,0x7ff86ea82704,120453149,0,0x0,8
tick,0x7ff86ea82704,120455164,0,0x0,8
tick,0x7ff86ea82704,120457148,0,0x0,8
tick,0x7ff86ea82704,120459156,0,0x0,8
tick,0x7ff86ea82704,120460935,0,0x0,8
tick,0x7ff86ea82704,120462968,0,0x0,8
tick,0x7ff86ea82704,120464941,0,0x0,8
tick,0x7ff86ea82704,120467390,0,0x0,8
tick,0x7ff86ea82704,120468880,0,0x0,8
tick,0x7ff86ea82704,120470875,0,0x0,8
tick,0x7ff86ea82704,120472911,0,0x0,8
tick,0x7ff86ea82704,120475025,0,0x0,8
tick,0x7ff86ea82704,120476918,0,0x0,8
tick,0x7ff86ea82704,120478951,0,0x0,8
tick,0x7ff86ea82704,120480829,0,0x0,8
tick,0x7ff86ea82704,120483316,0,0x0,8
tick,0x7ff86ea82704,120484818,0,0x0,8
tick,0x7ff86ea82704,120486839,0,0x0,8
tick,0x7ff86ea82704,120488828,0,0x0,8
tick,0x7ff86ea82704,120490990,0,0x0,8
tick,0x7ff86ea82704,120492790,0,0x0,8
tick,0x7ff86ea82704,120496936,0,0x0,8
tick,0x7ff86ea82704,120499927,0,0x0,8
tick,0x7ff86ea82704,120501146,0,0x0,8
tick,0x7ff86ea82704,120503316,0,0x0,8
tick,0x7ff86ea82704,120504748,0,0x0,8
tick,0x7ff86ea82704,120506691,0,0x0,8
tick,0x7ff86ea82704,120508753,0,0x0,8
tick,0x7ff86ea82704,120510864,0,0x0,8
tick,0x7ff86ea82704,120512683,0,0x0,8
tick,0x7ff86ea82704,120514761,0,0x0,8
tick,0x7ff86ea82704,120517767,0,0x0,8
tick,0x7ff86ea82704,120518777,0,0x0,8
tick,0x7ff86ea82704,120520759,0,0x0,8
tick,0x7ff86ea82704,120523508,0,0x0,8
tick,0x7ff86ea82704,120525893,0,0x0,8
tick,0x7ff86ea82704,120527747,0,0x0,8
tick,0x7ff86ea82704,120529790,0,0x0,8
tick,0x7ff86ea82704,120531894,0,0x0,8
tick,0x7ff86ea82704,120534423,0,0x0,8
tick,0x7ff86ea82704,120535792,0,0x0,8
tick,0x7ff86ea82704,120537807,0,0x0,8
tick,0x7ff86ea82704,120539648,0,0x0,8
tick,0x7ff86ea82704,120541834,0,0x0,8
tick,0x7ff86ea82704,120543732,0,0x0,8
tick,0x7ff86ea82704,120545761,0,0x0,8
tick,0x7ff86ea82704,120547668,0,0x0,8
tick,0x7ff86ea82704,120550319,0,0x0,8
tick,0x7ff86ea82704,120551663,0,0x0,8
tick,0x7ff86ea82704,120553727,0,0x0,8
tick,0x7ff86ea82704,120555757,0,0x0,8
tick,0x7ff86ea82704,120557683,0,0x0,8
tick,0x7ff86ea82704,120559713,0,0x0,8
tick,0x7ff86ea82704,120561855,0,0x0,8
tick,0x7ff86ea82704,120564094,0,0x0,8
tick,0x7ff86ea82704,120565793,0,0x0,8
tick,0x7ff86ea82704,120567951,0,0x0,8
tick,0x7ff86ea82704,120569813,0,0x0,8
tick,0x7ff86ea82704,120571699,0,0x0,8
tick,0x7ff86ea82704,120573775,0,0x0,8
tick,0x7ff86ea82704,120575647,0,0x0,8
tick,0x7ff86ea82704,120578060,0,0x0,8
tick,0x7ff86ea82704,120579891,0,0x0,8
tick,0x7ff86ea82704,120581937,0,0x0,8
tick,0x7ff86ea82704,120584112,0,0x0,8
tick,0x7ff86ea82704,120585698,0,0x0,8
tick,0x7ff86ea82704,120587678,0,0x0,8
tick,0x7ff86ea82704,120589704,0,0x0,8
tick,0x7ff86ea82704,120591613,0,0x0,8
tick,0x7ff86ea82704,120593845,0,0x0,8
tick,0x7ff86ea82704,120595752,0,0x0,8
tick,0x7ff86ea82704,120597610,0,0x0,8
tick,0x7ff86ea82704,120600503,0,0x0,8
tick,0x7ff86ea82704,120601443,0,0x0,8
tick,0x7ff86ea82704,120603537,0,0x0,8
tick,0x7ff86ea82704,120605506,0,0x0,8
tick,0x7ff86ea82704,120607624,0,0x0,8
tick,0x7ff86ea82704,120609662,0,0x0,8
tick,0x7ff86ea82704,120611628,0,0x0,8
tick,0x7ff86ea82704,120613764,0,0x0,8
tick,0x7ff86ea82704,120615808,0,0x0,8
tick,0x7ff86ea82704,120618040,0,0x0,8
tick,0x7ff86ea82704,120619608,0,0x0,8
tick,0x7ff86ea82704,120621546,0,0x0,8
tick,0x7ff86ea82704,120623691,0,0x0,8
tick,0x7ff86ea82704,120625434,0,0x0,8
tick,0x7ff86ea82704,120627606,0,0x0,8
tick,0x7ff86ea82704,120629688,0,0x0,8
tick,0x7ff86ea82704,120631460,0,0x0,8
tick,0x7ff86ea82704,120633946,0,0x0,8
tick,0x7ff86ea82704,120635363,0,0x0,8
tick,0x7ff86ea82704,120637507,0,0x0,8
tick,0x7ff86ea82704,120639511,0,0x0,8
tick,0x7ff86ea82704,120641471,0,0x0,8
tick,0x7ff86ea82704,120643430,0,0x0,8
tick,0x7ff86ea82704,120645440,0,0x0,8
tick,0x7ff86ea82704,120647707,0,0x0,8
tick,0x7ff86ea82704,120650717,0,0x0,8
tick,0x7ff86ea82704,120652369,0,0x0,8
tick,0x7ff86ea82704,120654504,0,0x0,8
tick,0x7ff86ea82704,120656446,0,0x0,8
tick,0x7ff86ea82704,120658356,0,0x0,8
tick,0x7ff86ea82704,120660360,0,0x0,8
tick,0x7ff86ea82704,120662495,0,0x0,8
tick,0x7ff86ea82704,120664355,0,0x0,8
tick,0x7ff86ea82704,120666964,0,0x0,8
tick,0x7ff86ea82704,120668329,0,0x0,8
tick,0x7ff86ea82704,120670241,0,0x0,8
tick,0x7ff86ea82704,120672387,0,0x0,8
tick,0x7ff86ea82704,120674282,0,0x0,8
tick,0x7ff86ea82704,120676314,0,0x0,8
tick,0x7ff86ea82704,120678259,0,0x0,8
tick,0x7ff86ea82704,120680449,0,0x0,8
tick,0x7ff86ea82704,120683955,0,0x0,8
tick,0x7ff86ea82704,120684780,0,0x0,8
tick,0x7ff86ea82704,120687771,0,0x0,8
tick,0x7ff86ea82704,120689990,0,0x0,8
tick,0x7ff86ea82704,120691231,0,0x0,8
tick,0x7ff86ea82704,120693555,0,0x0,8
tick,0x7ff86ea82704,120695985,0,0x0,8
tick,0x7ff86ea82704,120697648,0,0x0,8
tick,0x7ff86ea82704,120701421,0,0x0,8
tick,0x7ff86ea82704,120703583,0,0x0,8
tick,0x7ff86ea82704,120705512,0,0x0,8
tick,0x7ff86ea82704,120707922,0,0x0,8
tick,0x7ff86ea82704,120709572,0,0x0,8
tick,0x7ff86ea82704,120711445,0,0x0,8
tick,0x7ff86ea82704,120714056,0,0x0,8
